- en: '12'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '12'
- en: Automation, Workflows, Emails, and Printing
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自动化、工作流程、电子邮件和打印
- en: Business applications are expected not only to store records but also to manage
    business workflows. Some objects, such as leads or project tasks, have a lot of
    records that run in parallel. Having too many records for an object makes it harder
    to have a clear picture of the business. Odoo has several techniques that can
    deal with this problem. In this chapter, we will look at how we can set a business
    workflow with dynamic stages and Kanban groups. This will help the user understand
    how their business is running.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 预期业务应用不仅存储记录，还要管理业务工作流程。一些对象，如潜在客户或项目任务，有很多并行运行的记录。一个对象有太多的记录会使业务情况难以清晰。Odoo有几种技术可以处理这个问题。在本章中，我们将探讨如何设置具有动态阶段和看板组的业务工作流程。这将帮助用户了解他们的业务是如何运行的。
- en: We will also look at techniques, such as server actions and automated actions,
    that can be used by power users or functional consultants to add simpler process
    automation without the need to create custom add-ons. Finally, we will create
    **QWeb-based PDF reports** and print them out.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将探讨如服务器操作和自动化操作等技术，这些技术可以被高级用户或功能顾问使用，以添加更简单的流程自动化，而无需创建自定义插件。最后，我们将创建**基于QWeb的PDF报告**并打印出来。
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下菜谱：
- en: Managing dynamic record stages
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理动态记录阶段
- en: Managing Kanban stages
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理看板阶段
- en: Adding a quick create form to a Kanban card
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向看板卡片添加快速创建表单
- en: Creating interactive Kanban cards
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建交互式看板卡片
- en: Adding a progress bar to Kanban views
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向看板视图中添加进度条
- en: Creating server actions
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建服务器操作
- en: Using Python code server actions
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Python代码服务器操作
- en: Using automated actions on time conditions
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在时间条件下使用自动化操作
- en: Using automated actions on event conditions
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在事件条件下使用自动化操作
- en: Creating QWeb-based PDF reports
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建基于QWeb的PDF报告
- en: Managing activities from a Kanban card
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从看板卡片管理活动
- en: Adding a stat button to a form view
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 向表单视图添加状态按钮
- en: Enabling the archive option for records
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启用记录的存档选项
- en: Technical requirements
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The technical requirement for this chapter is having an online Odoo platform.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的技术要求是拥有在线Odoo平台。
- en: All the code that will be used in this chapter can be downloaded from this book’s
    GitHub repository at [https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将使用的所有代码都可以从本书的GitHub仓库下载：[https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12)。
- en: Managing dynamic record stages
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理动态记录阶段
- en: In `my_hostel`, we have a `state` field to indicate the current status of a
    hostel room record. This `state` field is limited to the `Draft` or `Available`
    statuses and it is not possible to add a new state to the business process. To
    avoid this, we can use the `many2one` field to give flexibility when designing
    the Kanban workflow of a user’s choice, and you can add/remove a new state at
    any time.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在`my_hostel`中，我们有一个`state`字段来指示宿舍房间记录的当前状态。此`state`字段限制为`草稿`或`可用`状态，并且无法向业务流程中添加新状态。为了避免这种情况，我们可以使用`many2one`字段在用户选择看板工作流程设计时提供灵活性，并且您可以在任何时候添加/删除新状态。
- en: Getting ready
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'For this recipe, we will be using the `my_hostel` module from [*Chapter 8*](B20997_08.xhtml#_idTextAnchor388),
    *Advanced Server-Side Development Techniques*. This module manages the hostel
    and students. It also records rooms. We added an initial module, `Chapter12/00_initial_module/my_hostel`,
    to the GitHub repository for this book to help you get started: [https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将使用来自[*第8章*](B20997_08.xhtml#_idTextAnchor388)，*高级服务器端开发技术*的`my_hostel`模块。此模块管理宿舍和学生。它还记录房间。我们为此书添加了一个初始模块，`Chapter12/00_initial_module/my_hostel`，到GitHub仓库以帮助您开始：[https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter12)。
- en: How to do it...
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these simple steps to add stages to the `hostel.room` model:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤向`hostel.room`模型添加阶段：
- en: 'Add a new model called `hostel.room.stage`, as follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个名为`hostel.room.stage`的新模型，如下所示：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'state field from the hostel.room model and replace it with a new stage_id field,
    which is a many2one field, and its methods, as shown in the following example:'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从`hostel.room`模型中替换状态字段，并替换为新的阶段_id字段，这是一个many2one字段，以及其方法，如下面的示例所示：
- en: '[PRE1]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <header>
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <header>
- en: <field name="stage_id" widget="statusbar"
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="stage_id" widget="statusbar"
- en: 'options="{''clickable'': ''1'', ''fold_field'': ''fold''}"/>'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'options="{''clickable'': ''1'', ''fold_field'': ''fold''}"/>'
- en: 'state field in the tree view with the stage_id field, as follows:'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在树视图中的状态字段与阶段_id字段一起，如下所示：
- en: '[PRE2]'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <?xml version="1.0" encoding="utf-8"?>
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <?xml version="1.0" encoding="utf-8"?>
- en: <odoo noupdate="1">
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <odoo noupdate="1">
- en: <record id="stage_draft" model="hostel.room.stage">
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <record id="stage_draft" model="hostel.room.stage">
- en: <field name="name">Draft</field>
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="name">草稿</field>
- en: <field name="sequence">1</field>
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="sequence">1</field>
- en: </record>
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </record>
- en: <record id="stage_available" model="hostel.room.stage">
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <record id="stage_available" model="hostel.room.stage">
- en: <field name="name">Available</field>
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="name">可用</field>
- en: <field name="sequence">15</field>
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="sequence">15</field>
- en: </record>
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </record>
- en: <record id="stage_reserved" model="hostel.room.stage">
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <record id="stage_reserved" model="hostel.room.stage">
- en: <field name="name">Reserved</field>
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="name">预留</field>
- en: <field name="sequence">5</field>
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="sequence">5</field>
- en: <field name="fold">True</field>
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="fold">True</field>
- en: </record>
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </record>
- en: </odoo>
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </odoo>
- en: '[PRE3]'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After installing the module, you will see stages in the form view, as shown
    in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 安装模块后，您将在表单视图中看到阶段，如下面的截图所示：
- en: '![Figure 12.1 – Stage selector in the form view](img/B20997_12_1.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.1 – 表单视图中的阶段选择器](img/B20997_12_1.jpg)'
- en: Figure 12.1 – Stage selector in the form view
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 – 表单视图中的阶段选择器
- en: Here, you’ll notice the stages outlined on the hostel record. These stages are
    clickable, so you will be able to change the stage by clicking on it. Folded stages
    will be displayed under the **More** dropdown.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，您会注意到在宿舍记录上勾画出的阶段。这些阶段是可点击的，因此您可以通过点击来更改阶段。折叠阶段将在**更多**下拉菜单下显示。
- en: How it works...
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: Since we want to manage the record stages dynamically, we need to create a new
    model. In *Step 1*, we created a new model called `hostel.room.stage` to store
    the dynamic stages. In this model, we added a few fields. One of these was the
    `sequence` field, which is used to determine the order of the stages. We also
    added the `fold` Boolean field, which is used to collapse the stages and put them
    in a drop-down list. This is very helpful when your business process has lots
    of stages because it means that you can hide insignificant stages in the drop-down
    menu by setting this field.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们想要动态管理记录阶段，我们需要创建一个新的模型。在**步骤 1**中，我们创建了一个名为`hostel.room.stage`的新模型来存储动态阶段。在这个模型中，我们添加了一些字段。其中之一是`sequence`字段，用于确定阶段的顺序。我们还添加了`fold`布尔字段，用于折叠阶段并将它们放入下拉列表中。当您的业务流程有很多阶段时，这非常有用，因为它意味着您可以通过设置此字段来在下拉菜单中隐藏不重要的阶段。
- en: The `fold` field is also used in Kanban views to display folded Kanban columns.
    Usually, **Reserved** items are expected to be in the **Unfolded** stage, and
    terminated items that are marked as either **Done** or **Cancelled** should be
    in the **Folded** stage.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`fold`字段也用于看板视图中显示折叠的看板列。通常，**预留**项目预计处于**未展开**阶段，标记为**完成**或**取消**的项目应处于**折叠**阶段。'
- en: By default, `fold` is the name of the field that is used to hold the value of
    the stage fold. You can change this by adding the `_fold_name = 'is_fold'` class
    attribute.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`fold`是用于存储阶段折叠值的字段名称。您可以通过添加`_fold_name = 'is_fold'`类属性来更改此名称。
- en: In *Step 2*, we added the basic access rights rules for the new model.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在**步骤 2**中，我们为新的模型添加了基本访问权限规则。
- en: In *Step 3*, we added the `stage_id` `many2one` field to the `hostel.room` model.
    While creating a new room record, we wanted to set the default stage value to
    `Draft`. To accomplish this, we added a `_default_room_stage()` method. This method
    will fetch the record of the `hostel.room.stage` model with the lowest sequence
    number, so, while creating a new record, the stage with the lowest sequence will
    be displayed as active in the form view.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在**步骤 3**中，我们将`stage_id` `many2one`字段添加到`hostel.room`模型中。在创建新的房间记录时，我们希望将默认阶段值设置为`草稿`。为了完成这个任务，我们添加了`_default_room_stage()`方法。此方法将检索具有最低序列号的`hostel.room.stage`模型记录，因此，在创建新记录时，序列号最低的阶段将在表单视图中显示为活动状态。
- en: In *Step 4*, we added the `stage_id` field to the form view. By adding the `clickable`
    option, we made the status bar clickable. We also added an option for the `fold`
    field, which will allow us to display insignificant stages in the drop-down menu.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第4步*中，我们将`stage_id`字段添加到表单视图中。通过添加`clickable`选项，我们使状态栏可点击。我们还添加了`fold`字段的选项，这将允许我们在下拉菜单中显示不重要的阶段。
- en: In *Step 5*, we added `stage_id` to the tree view.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第5步*中，我们将`stage_id`添加到树视图中。
- en: In *Step 6*, we added the default data for the stages. Users will see these
    basic stages after installing our module. If you want to learn more about XML
    data syntax, refer to the *Loading data using XML files* recipe in [*Chapter 6*](B20997_06.xhtml#_idTextAnchor319),
    *Managing* *Module Data*.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第6步*中，我们为各个阶段添加了默认数据。用户安装我们的模块后将会看到这些基本阶段。如果您想了解更多关于XML数据语法的知识，请参考[*第6章*](B20997_06.xhtml#_idTextAnchor319)中的*使用XML文件加载数据*配方，*管理模块数据*。
- en: Important note
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: With this implementation, the user can define new stages on the fly. You will
    need to add views and menus for `hostel.room.stage` so that you can add new stages
    from the user interface. Refer to [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446),
    *Backend Views*, if you don’t know how to add views and menus.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在此实现中，用户可以即时定义新的阶段。您需要为`hostel.room.stage`添加视图和菜单，以便可以从用户界面添加新阶段。如果您不知道如何添加视图和菜单，请参考[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*。
- en: If you don’t want to do this, the Kanban view provides inbuilt features for
    adding, removing, or modifying stages from the Kanban view itself. We’ll look
    at this in the next recipe.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您不想这样做，Kanban视图提供了内置功能，可以直接从Kanban视图中添加、删除或修改阶段。我们将在下一个配方中查看这一点。
- en: See also
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: Refer to [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446), *Backend Views*, to
    learn about adding views and menus.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解如何添加视图和菜单，请参考[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*。
- en: Managing Kanban stages
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理Kanban阶段
- en: Using a **Kanban board** is a simple way to manage workflows. It is organized
    into columns, each corresponding to stages, and the work items progress from left
    to right until they are finished. A Kanban view, with these stages, provides flexibility
    because it allows users to choose their own workflows. It provides a full overview
    of the records on a single screen.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**Kanban板**是管理工作流程的简单方法。它组织成列，每列对应一个阶段，工作项从左到右移动，直到完成。具有这些阶段的Kanban视图提供了灵活性，因为它允许用户选择自己的工作流程。它在一个屏幕上提供了记录的全面概述。
- en: Getting started
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
    We will add Kanban to the `hostel.room` model and we will group Kanban cards by
    stage.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在此配方中，我们将使用前一个配方中的`my_hostel`模块。我们将向`hostel.room`模型添加Kanban，并将Kanban卡片按阶段分组。
- en: How to do it...
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Perform the following steps to enable workflows such as Kanban for the `hostel.room`
    model:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以启用`hostel.room`模型的Kanban工作流程：
- en: 'Add a Kanban view for `hostel.room`, as follows:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按如下方式为`hostel.room`添加Kanban视图：
- en: '[PRE6]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '...'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '...'
- en: <field name="view_mode">kanban,tree,form</field>
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="view_mode">kanban,tree,form</field>
- en: '_group_expand_stages() method and the group_expand attribute to the stage_id
    field, as follows:'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: _group_expand_stages()方法和将group_expand属性添加到stage_id字段，如下所示：
- en: '[PRE7]'
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Restart the server and update the module to apply the changes. This will enable
    a Kanban board, as shown in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动服务器并更新模块以应用更改。这将启用Kanban板，如下截图所示：
- en: '![Figure 12.2 – Kanban view with groups by stage](img/B20997_12_2.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图12.2 – 按阶段分组的Kanban视图](img/B20997_12_2.jpg)'
- en: Figure 12.2 – Kanban view with groups by stage
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.2 – 按阶段分组的Kanban视图
- en: As shown in the preceding screenshot, the Kanban view will show the room records
    grouped by stage. You will be able to drag and drop cards to another stage column.
    Moving cards to another column will change the stage value in the database too.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一张截图所示，Kanban视图将按阶段分组显示房间记录。您可以将卡片拖放到另一个阶段列。将卡片移动到另一个列会更改数据库中的阶段值。
- en: How it works...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *Step 1*, we added a Kanban view for the `hostel.room.stage` model. Note
    that we used `stage_id` as the default group for Kanban so that when the user
    opens Kanban, the Kanban cards will be grouped by stage. To find out more about
    Kanban, please refer to [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446), *Backend
    Views*.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在*第1步*中，我们为`hostel.room.stage`模型添加了Kanban视图。请注意，我们使用`stage_id`作为Kanban的默认分组，这样当用户打开Kanban时，Kanban卡片将按阶段分组。要了解更多关于Kanban的信息，请参考[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*。
- en: In *Step 2*, we added the `kanban` keyword to the existing action.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤2*中，我们将`kanban`关键字添加到现有的操作中。
- en: In *Step 3*, we added the `group_expand` attribute to the `stage_id` field.
    We also added a new `_group_expand_stages()` method. `group_expand` changes the
    behavior of the field grouping. By default, field grouping shows the stages that
    are being used. For example, if no rooms record has the `Reserved` stage, the
    grouping will not return that stage, so Kanban will not display the `Reserved`
    column. But in our case, we want to display all of the stages, regardless of whether
    or not they are being used.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤3*中，我们将`group_expand`属性添加到`stage_id`字段。我们还添加了一个新的`_group_expand_stages()`方法。`group_expand`改变了字段的分组行为。默认情况下，字段分组显示正在使用的阶段。例如，如果没有房间记录有`Reserved`阶段，分组将不会返回该阶段，因此看板将不会显示`Reserved`列。但在这个例子中，我们希望显示所有阶段，无论它们是否正在使用。
- en: The `_group_expand_stages()` function is used to return all the records for
    the stages. Because of this, the Kanban view will display all the stages and you
    will be able to use workflows by dragging and dropping them.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`_group_expand_stages()`函数用于返回所有阶段的记录。因此，看板视图将显示所有阶段，您将能够通过拖放使用工作流。'
- en: There’s more...
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'If you play around with the Kanban board you created in this recipe, you will
    find lots of different features. Some of these are as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在这个菜谱中创建的看板周围进行尝试，您会发现许多不同的功能。以下是一些：
- en: You can create a new stage by clicking on the `group_create` option can be used
    to disable the **Add column** option from the Kanban board.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过点击`group_create`选项来创建一个新的阶段，该选项可以用来从看板中禁用**添加列**选项。
- en: You can arrange columns in a different order by dragging them by their headers.
    This will update the sequence field of the `hostel.room.stage` model.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以通过拖动它们的标题来以不同的顺序排列列。这将更新`hostel.room.stage`模型的序列字段。
- en: You can edit or delete columns with the gear icon in the header of a Kanban
    column. The `group_edit` and `group_delete` options can be used to disable this
    feature.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以使用看板列标题上的齿轮图标编辑或删除列。`group_edit`和`group_delete`选项可以用来禁用此功能。
- en: The stages that have a `true` value in the `fold` field will collapse and the
    column will be displayed as a slim bar. If you click on this slim bar, it will
    expand and display the Kanban cards.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`fold`字段中具有`true`值的阶段将折叠，列将显示为细长的条形。如果您点击这个细长的条形，它将展开并显示看板卡片。
- en: If the model has an `active` Boolean field, it will display the option to archive
    and unarchive records in the Kanban column. The `archivable` option can be used
    to disable this feature.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果模型有一个`active`布尔字段，它将在看板列中显示存档和取消存档记录的选项。`archivable`选项可以用来禁用此功能。
- en: The plus icon on the Kanban column can be used to create records directly from
    the Kanban view. The `quick_create` option can be used to disable this feature.
    For the moment, this feature will not work in our example. This will be solved
    in the next recipe.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 看板列上的加号图标可以用来直接从看板视图中创建记录。`quick_create`选项可以用来禁用此功能。目前，这个功能在我们的例子中不会工作。这将在下一个菜谱中解决。
- en: See also
  id: totrans-103
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: To learn more about Kanban, please refer to [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446),
    *Backend Views*.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想了解更多关于看板的信息，请参阅[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*。
- en: Adding a quick create form to a Kanban card
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向看板卡片添加快速创建表单
- en: Grouped Kanban views provide the quick create feature, which allows us to generate
    records directly from the Kanban view. The plus icon on a column will display
    an editable Kanban card on the column, using which you can create a record. In
    this recipe, we will learn how to design a quick create Kanban form of our choice.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 分组看板视图提供了快速创建功能，允许我们直接从看板视图中生成记录。列上的加号图标将显示一个可编辑的看板卡片，使用它可以创建记录。在这个菜谱中，我们将学习如何设计我们选择的快速创建看板表单。
- en: Getting started
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
    We will use the quick create option in Kanban for the `hostel.room` model.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将使用前一个菜谱中的`my_hostel`模块。我们将为`hostel.room`模型使用看板的快速创建选项。
- en: How to do it...
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to add a custom quick create form for Kanban:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤为看板添加自定义快速创建表单：
- en: 'Create a new minimal form view for the `hostel.room` model, as follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`hostel.room`模型创建一个新的最小表单视图，如下所示：
- en: '[PRE9]'
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: <kanban default_group_by="stage_id" on_create="quick_create" quick_create_view="my_hostel.hostel_room_view_form_minimal">
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<kanban default_group_by="stage_id" on_create="quick_create" quick_create_view="my_hostel.hostel_room_view_form_minimal">`'
- en: '[PRE10]'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Restart the server and update the module to apply the changes. Then, click
    on the plus icon in the column. This will enable Kanban forms, as shown in the
    following screenshot:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新启动服务器并更新模块以应用更改。然后，点击列中的加号图标。这将启用看板表单，如图下所示：
- en: '![Figure 12.3 – Quickly creating a record directly from the Kanban view](img/B20997_12_3.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图12.3 – 从看板视图直接创建记录](img/B20997_12_3.jpg)'
- en: Figure 12.3 – Quickly creating a record directly from the Kanban view
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3 – 从看板视图直接创建记录
- en: When you click on the **Create** button in the Kanban view, you will see a small
    card with input instead of being redirected to the form view. You can fill in
    the values and click on **Add**, which will create a room record.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在看板视图中点击**创建**按钮时，你会看到一个带有输入的小卡片，而不是被重定向到表单视图。你可以填写值并点击**添加**，这将创建一个房间记录。
- en: How it works...
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: To create a custom quick create option, we need to create a minimal form view.
    We did this in *Step 1*. We added two required fields because you cannot create
    a record without filling in the required fields. If you do so, Odoo will generate
    an error and open the default form view in the dialogue so that you can enter
    all the required values.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建自定义快速创建选项，我们需要创建一个最小化表单视图。我们在*步骤1*中这样做。我们添加了两个必填字段，因为不填写必填字段你无法创建记录。如果你这样做，Odoo将生成错误并打开默认表单视图在对话框中，以便你可以输入所有必填值。
- en: In *Step 2*, we added this new form view to the Kanban view. Using the `quick_create_view`
    option, you can map the custom form view to the Kanban view. We also added one
    extra option – `on_create="quick_create"`. This option will display a quick create
    form in the first column when you click on the **Create** button in the control
    panel. Without this option, the **Create** button will open a form view in edit
    mode.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤2*中，我们将这个新的表单视图添加到看板视图中。使用`quick_create_view`选项，你可以将自定义表单视图映射到看板视图中。我们还添加了一个额外的选项
    – `on_create="quick_create"`。此选项将在你点击控制面板中的**创建**按钮时，在第一列显示快速创建表单。如果没有此选项，**创建**按钮将打开表单视图以编辑模式。
- en: You can disable the quick create feature by adding `quick_create="false"` to
    the Kanban tag.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在看板标签中添加`quick_create="false"`来禁用快速创建功能。
- en: Creating interactive Kanban cards
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建交互式看板卡片
- en: Kanban cards support all HTML tags, which means you can design them however
    you like. Odoo provides some built-in ways to make Kanban cards more interactive.
    In this recipe, we will add color options, the star widget, and `many2many` tags
    to the Kanban card.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: �看板卡片支持所有HTML标签，这意味着你可以按自己的喜好设计它们。Odoo提供了一些内置方式来使看板卡片更加互动。在本教程中，我们将添加颜色选项、星形小部件和`many2many`标签到看板卡片中。
- en: Getting started
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个教程，我们将使用上一教程中的`my_hostel`模块。
- en: How to do it...
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to create an attractive Kanban card:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤创建一个吸引人的看板卡片：
- en: 'Add a new model to manage the tags for the `hostel.room` model, as follows:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个新模型来管理`hostel.room`模型的标签，如下所示：
- en: '[PRE11]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: access_hostel_amenities_manager_id,access.hostel.amenities.manager,my_hostel.model_hostel_amenities,my_hostel.group_hostel_manager,1,1,1,1
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: access_hostel_amenities_manager_id,access.hostel.amenities.manager,my_hostel.model_hostel_amenities,my_hostel.group_hostel_manager,1,1,1,1
- en: 'hostel.room model, as follows:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: hostel.room模型，如下所示：
- en: '[PRE12]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add fields to the form view, as follows:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式将字段添加到表单视图中：
- en: '[PRE14]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: <field name="stage_id" />
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="stage_id" />
- en: <field name="color" />
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="color" />
- en: '[PRE15]'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Add a dropdown to choose a color on the Kanban view:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在看板视图中添加一个下拉菜单来选择颜色：
- en: '[PRE16]'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '...'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '...'
- en: <div class="text-muted">
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="text-muted">
- en: <i class="fa fa-building"/>
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <i class="fa fa-building"/>
- en: <field name="hostel_id" />
  id: totrans-145
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="hostel_id" />
- en: </div>
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: <span class="oe_kanban_list_many2many">
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <span class="oe_kanban_list_many2many">
- en: '<field name="hostel_amenities_ids" widget="many2many_tags" options="{''color_field'':
    ''color''}"/>'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '<field name="hostel_amenities_ids" widget="many2many_tags" options="{''color_field'':
    ''color''}"/>'
- en: </span>
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </span>
- en: <div>
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div>
- en: <field name="popularity" widget="priority"/>
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <field name="popularity" widget="priority"/>
- en: </div>
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: '[PRE17]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Important note
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The code in bold should be added to the existing Kanban view.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 应该添加到现有看板视图中的粗体代码。
- en: 'Restart the server and update the module to apply the changes. Then, click
    on the plus icon on a column. It will display the Kanban, as shown in the following
    figure:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动服务器并更新模块以应用更改。然后，点击列上的加号图标。它将显示看板，如图下所示：
- en: '![Figure 12.4 – Kanban cards with new options](img/B20997_12_4.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图12.4 – 带有新选项的看板卡片](img/B20997_12_4.jpg)'
- en: Figure 12.4 – Kanban cards with new options
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.4 – 带有新选项的看板卡片
- en: Our changes in the Kanban structure will enable extra options in the Kanban
    card. Now, you will be able to choose the color on the Kanban itself. You will
    also be able to prioritize cards with stars.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 我们对看板结构的更改将使看板卡片启用额外选项。现在，您将能够在看板上选择颜色。您还可以使用星标对卡片进行优先级排序。
- en: How it works...
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *Steps 1* and *2*, we added a new model and security rules for tags. In *Step
    3*, we added a few fields to the rooms model.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤1*和*步骤2*中，我们为标签添加了新的模型和安全规则。在*步骤3*中，我们在房间模型中添加了一些字段。
- en: In *Step 4*, we added those fields to the form view. Note that we used the `priority`
    widget on the `popularity` field, which displays the selection field with star
    icons. In the `hostel_amenities_ids` field, we used the `many2many_tags` widget,
    which displays the `many2many` field in the form of tags. The `color_field` option
    is passed to enable the color feature on tags. The value of this option is the
    field name where the color index is stored. The `no_create_edit` option will disable
    the feature of creating new tags via the form view.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤4*中，我们将这些字段添加到表单视图中。请注意，我们在`popularity`字段上使用了`priority`小部件，它显示带有星标图标的选项字段。在`hostel_amenities_ids`字段中，我们使用了`many2many_tags`小部件，它以标签的形式显示`many2many`字段。`color_field`选项用于在标签上启用颜色功能。此选项的值是存储颜色索引的字段名称。`no_create_edit`选项将禁用通过表单视图创建新标签的功能。
- en: In *Step 5*, we improved lots of things. Fisrt, we added `t-attf-class="#{kanban_color(record.color.raw_value)}`
    to the Kanban card. This will be used to display the color of the Kanban card.
    It uses the value of the `color` field and generates a class based on that value.
    For example, if a Kanban record has a value of `2` in the `color` field, it will
    add `kanban_color_2` to the class. After that, we added a drop-down menu to add
    options such as **Edit**, **Delete**, and the Kanban color picker. The **Edit**
    and **Delete** options are only displayed if the user has proper access rights.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤5*中，我们改进了很多东西。首先，我们在看板卡片上添加了`t-attf-class="#{kanban_color(record.color.raw_value)}`。这将用于显示看板卡片的颜色。它使用`color`字段的值并基于该值生成一个类。例如，如果看板记录在`color`字段中的值为`2`，它将向类中添加`kanban_color_2`。之后，我们添加了一个下拉菜单来添加例如**编辑**、**删除**和看板颜色选择器的选项。**编辑**和**删除**选项仅在用户具有适当的访问权限时显示。
- en: 'Finally, we added tags and priority to the Kanban card. After adding all of
    this, the Kanban card will look as follows:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在看板卡片上添加了标签和优先级。添加所有这些后，看板卡片将如下所示：
- en: '![Figure 12.5 – Kanban card options](img/B20997_12_5.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图12.5 – �看板卡片选项](img/B20997_12_5.jpg)'
- en: Figure 12.5 – Kanban card options
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 – 看板卡片选项
- en: With this card design, you will be able to set popularity stars and colors directly
    from the Kanban card.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种卡片设计，您可以直接从看板卡片设置流行度星标和颜色。
- en: Adding a progress bar to Kanban views
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向看板视图中添加进度条
- en: Sometimes, you have tons of records in columns and it is very difficult to get
    a clear picture of the particular stages. A progress bar can be used to display
    the status of any column. In this recipe, we will display a progress bar on Kanban
    based on the `popularity` field.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，您在列中有大量记录，很难清楚地了解特定阶段。可以使用进度条来显示任何列的状态。在本菜谱中，我们将根据`popularity`字段在基于看板的视图中显示进度条。
- en: Getting started
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始使用
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将使用前一个菜谱中的`my_hostel`模块。
- en: How to do it...
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To add a progress bar to the Kanban columns, you will need to add a `progressbar`
    tag to the Kanban view definition, as follows:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 要向看板列添加进度条，您需要在看板视图定义中添加一个`progressbar`标签，如下所示：
- en: '[PRE18]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Note that Kanban column progress bars were introduced in Odoo version 11\. Versions
    before that will not display column progress bars.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，看板列进度条是在Odoo版本11中引入的。在此之前的版本将不会显示列进度条。
- en: 'Restart the server and update the module to apply the changes. Then, click
    on the plus icon on a column. This will display the progress bar on the Kanban
    columns, as shown in the following screenshot:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 重新启动服务器并更新模块以应用更改。然后，点击列上的加号图标。这将显示看板列上的进度条，如下面的截图所示：
- en: '![Figure 12.6 – Kanban view with a progress bar](img/B20997_12_6.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图12.6 – 带进度条的看板视图](img/B20997_12_6.jpg)'
- en: Figure 12.6 – Kanban view with a progress bar
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.6 – 带进度条的看板视图
- en: Upon updating the module, you will have added a progress bar to the Kanban columns.
    The color of the progress bar shows the number of records based on the record
    state. You will be able to click on one of the progress bars to filter records
    based on that state.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 更新模块后，您将在看板列中添加一个进度条。进度条的颜色显示基于记录状态的记录数。您可以通过点击进度条中的一个来根据该状态过滤记录。
- en: How it works...
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Progress bars on Kanban columns are displayed based on the values of the field.
    Progress bars support four colors, so you cannot display more than four states.
    The available colors are green (success), blue (information), red (danger), and
    yellow (warning). Then, you need to map colors to the field states. In our example,
    we mapped three states of the `priority` field because we didn’t want any progress
    bars for the rooms that were not in demand.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 看板列上的进度条是根据字段值显示的。进度条支持四种颜色，因此您不能显示超过四种状态。可用的颜色是绿色（成功）、蓝色（信息）、红色（危险）和黄色（警告）。然后，您需要将颜色映射到字段状态。在我们的例子中，我们映射了`priority`字段的三个状态，因为我们不希望为需求不高的房间显示进度条。
- en: By default, progress bars show a count of the records on the side. You can see
    the total of a particular state by clicking on it in the progress bar. Clicking
    on the progress bar will also highlight the cards for that state. Instead of the
    count of records, you can also display the sum of the integer or float field.
    To do this, you need to add the `sum_field` attribute with the field value, such
    as `sum_field="field_name"`.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，进度条在旁边显示记录数。您可以通过点击进度条来查看特定状态的总量。点击进度条还会突出显示该状态的业务卡片。除了记录数，您还可以显示整数或浮点字段的和。为此，您需要添加`sum_field`属性以及字段值，例如`sum_field="field_name"`。
- en: Creating server actions
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建服务器动作
- en: Server actions underpin Odoo’s automation tools. They allow us to describe the
    actions to perform. These actions are then available to be called by **event triggers**
    or to be triggered automatically when certain time conditions are met.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器动作是Odoo自动化工具的基础。它们允许我们描述要执行的动作。然后，这些动作可以通过**事件触发器**调用，或者在某些时间条件满足时自动触发。
- en: The simplest case is to let the end user perform an action on a document by
    selecting it from the **More** button. We will create this kind of action for
    project tasks so that we can **Set Priority** by starring the currently selected
    task and setting a deadline on it for 3 days from now.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 最简单的情况是让最终用户通过从**更多**按钮中选择来对文档执行操作。我们将为项目任务创建此类动作，以便我们可以通过将当前选定的任务加星并为其设置3天后的截止日期来**设置优先级**。
- en: Getting ready
  id: totrans-186
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备中
- en: We will need an Odoo instance with the Project app installed. We will also need
    **Developer Mode** activated. If it’s not already activated, activate it in the
    Odoo **Settings** dashboard.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个安装了项目应用的Odoo实例。我们还需要激活**开发者模式**。如果尚未激活，请在Odoo**设置**仪表板中激活它。
- en: How to do it...
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create a server action and use it from the **More** menu, follow these steps:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建服务器动作并从**更多**菜单使用它，请按照以下步骤操作：
- en: 'From the **Settings** top menu, select the **Technical** | **Actions** | **Server
    Actions** menu item and click on the **Create Contextual Action** button at the
    top of the record list, as shown in the following screenshot:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**设置**顶部菜单，选择**技术** | **动作** | **服务器动作**菜单项，然后在记录列表顶部点击**创建上下文动作**按钮，如图下截图所示：
- en: '![Figure 12.7 – Server action form view](img/B20997_12_7.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图12.7 – 服务器动作表视图](img/B20997_12_7.jpg)'
- en: Figure 12.7 – Server action form view
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.7 – 服务器动作表视图
- en: 'Fill out the server action form with these values:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这些值填写服务器动作表单：
- en: '**Action Name**: **Set** **as Priority**'
  id: totrans-194
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**动作名称**：**设置为** **优先级**'
- en: '**Model**: **Task**'
  id: totrans-195
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型**：**任务**'
- en: '**Type**: **Update Record**'
  id: totrans-196
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**类型**：**更新记录**'
- en: In the server action, under the `Priority`
  id: totrans-197
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在服务器动作中，在`优先级`
- en: '`Value`'
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`值`'
- en: '`Low`'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`低`'
- en: 'The following screenshot shows the entered values:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了输入的值：
- en: '![Figure 12.8 – Set lines to write](img/B20997_12_8.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图12.8 – 设置要写入的行](img/B20997_12_8.jpg)'
- en: Figure 12.8 – Set lines to write
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.8 – 设置要写入的行
- en: Save the server action and click on the **Create Contextual Action** button
    at the top left to make it available under the project task’s **More** button.
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存服务器动作，然后点击左上角的**创建上下文动作**按钮，使其在项目任务的**更多**按钮下可用。
- en: 'To try it out, go to the **Projects** top menu, open the **Project**, and open
    a random task. By clicking on the action, we should see the **Set Priority** option,
    as shown in the following screenshot. Selecting this will star the task and change
    the deadline date to 3 days from now:'
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要尝试它，请转到**项目**顶层菜单，打开**项目**，然后打开一个随机任务。通过点击操作，我们应该看到**设置优先级**选项，如图下所示。选择此选项将标记任务并将截止日期更改为现在起3天：
- en: '![Figure 12.9 – The Set Priority server action](img/B20997_12_9.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图12.9 – 设置优先级的服务器操作](img/B20997_12_9.jpg)'
- en: Figure 12.9 – The Set Priority server action
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.9 – 设置优先级的服务器操作
- en: Once you add the server action, you will have set the priority option on the
    task. Upon clicking on it, the server action star will turn yellow, meaning the
    priority of the task has increased. Also, the server action will change the deadline.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您添加了服务器操作，您将在任务上设置优先级选项。点击它后，服务器操作星号将变为黄色，表示任务的优先级已提高。此外，服务器操作将更改截止日期。
- en: How it works...
  id: totrans-208
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Server actions work on a model, so one of the first things we must do is pick
    the model we want to work with. In our example, we used project tasks.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器操作在模型上工作，因此我们首先必须做的第一件事是选择我们想要与之一起工作的模型。在我们的示例中，我们使用了项目任务。
- en: 'Next, we should select the type of action to perform. There are a few options
    available:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们应该选择要执行的操作类型。有几个选项可供选择：
- en: '**Update Record** allows you to set values on the current record or another
    record.'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更新记录** 允许您设置当前记录或另一条记录的值。'
- en: '**Create activity** allows you to create activity on the selected records'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建活动** 允许您在所选记录上创建活动'
- en: '**Execute Code** allows you to write arbitrary code to execute when none of
    the other options are flexible enough for what we need.'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行代码** 允许您编写任意代码，在没有任何其他选项足够灵活以满足我们的需求时执行。'
- en: '**Create Record** allows you to create a new record on the current model or
    another model.'
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建记录** 允许您在当前模型或另一个模型上创建新记录。'
- en: '**Send Email** allows you to choose an email template. This will be used to
    send out an email when the action is triggered.'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发送电子邮件** 允许您选择电子邮件模板。当操作被触发时，将使用此模板发送电子邮件。'
- en: '**Execute Existing actions** can be used to trigger a client or window action,
    just like when a menu item is clicked on.'
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**执行现有操作** 可以用来触发客户端或窗口操作，就像点击菜单项时一样。'
- en: '**Add Followers** allows users or channels to subscribe to the record.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**添加关注者** 允许用户或频道订阅记录。'
- en: '**Create Next Activity** allows you to create a new activity. This will be
    displayed in the chatter.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**创建下一个活动** 允许您创建一个新的活动。这将显示在聊天中。'
- en: '**Send SMS** allows you to send an SMS. You need to select the SMS template.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**发送短信** 允许您发送短信。您需要选择短信模板。'
- en: Note
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: '**Send SMS Text Message** is a chargeable service from Odoo. You need to purchase
    credit for SMS if you want to send an SMS.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**发送短信文本消息** 是Odoo的一项收费服务。如果您想发送短信，则需要购买短信信用。'
- en: For our example, we used `1` to star the task and set a value on the `datetime`
    Python module ([https://docs.python.org/2/library/datetime.html](https://docs.python.org/2/library/datetime.html))
    to compute the date 3 days from today.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的示例中，我们使用了`1`来标记任务，并在`datetime` Python模块（[https://docs.python.org/2/library/datetime.html](https://docs.python.org/2/library/datetime.html)）上设置值以计算从今天起3天的日期。
- en: Arbitrary Python expressions can be used there, as well as in several of the
    other action types available. For security reasons, the code is checked by the
    `safe_eval` function implemented in the `odoo/tools/safe_eval.py` file. This means
    that some Python operations may not be allowed, but this rarely proves to be a
    problem.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用任意Python表达式，以及其他几个可用的操作类型。出于安全原因，代码由`odoo/tools/safe_eval.py`文件中实现的`safe_eval`函数检查。这意味着某些Python操作可能不允许，但这很少成为问题。
- en: When you add a drop-down option to the server action, usually, it is available
    for all internal users. But if you just want to show this option to selected users,
    you can assign a group to the server action. This is available under the **Security**
    tab in the server action form view.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 当您向服务器操作添加下拉选项时，通常，它对所有内部用户都可用。但如果您只想向选定用户显示此选项，您可以将一个组分配给服务器操作。这在服务器操作表单视图的**安全**选项卡下可用。
- en: There’s more...
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'The Python code is evaluated in a restricted context, where the following objects
    are available to use:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Python代码在受限环境中评估，以下对象可用于使用：
- en: '`env`: This is a reference for the `Environment` object, just like `self.env`
    in a class method.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`env`：这是对`Environment`对象的引用，就像类方法中的`self.env`一样。'
- en: '`model`: This is a reference to the `model` class that the server action acts
    upon. In our example, it is equivalent to `self.env[''project.task]`.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model`：这是对服务器操作所作用的 `model` 类的引用。在我们的示例中，它等同于 `self.env[''project.task'']`。'
- en: '`ValidationError`: This is a reference to `from odoo.exceptions import ValidationError`,
    allowing validations that block unintended actions. It can be used as `raise Warning(''Message!'')`.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ValidationError`：这是对 `from odoo.exceptions import ValidationError` 的引用，允许阻止不希望的操作的验证。它可以用作
    `raise Warning(''Message!'')`。'
- en: '`Record` or `records`: This provides references to the current record or records,
    allowing you to access their field values and methods.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Record` 或 `records`：这提供了对当前记录或记录的引用，允许你访问它们的字段值和方法。'
- en: '`log`: This is a function that’s used to log messages in the `ir.logging` model,
    allowing database-side logging-on actions.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`log`：这是一个用于在 `ir.logging` 模型中记录消息的函数，允许在数据库端记录操作。'
- en: '`datetime`, `dateutil`, and `time`: These provide access to the Python libraries.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`datetime`、`dateutil` 和 `time`：这些提供了对 Python 库的访问。'
- en: Using Python code server actions
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 代码服务器操作
- en: Server actions have several types available, but executing arbitrary Python
    code is the most flexible option. When used wisely, it empowers users with the
    capability to implement advanced business rules from the user interface, without
    the need to create specific add-on modules to install that code.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器操作有几种类型可供选择，但执行任意 Python 代码是最灵活的选项。当明智地使用时，它赋予用户从用户界面实施高级业务规则的能力，而无需创建特定的附加模块来安装该代码。
- en: We will demonstrate using this type of server action by implementing a server
    action that sends reminder notifications to the followers of a project task.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过实现一个向项目任务关注者发送提醒通知的服务器操作来演示这种类型的服务器操作。
- en: Getting ready
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need an Odoo instance with the Project app installed.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要一个安装了项目应用程序的 Odoo 实例。
- en: How to do it...
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create a Python code server action, follow these steps:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建 Python 代码服务器操作，请按照以下步骤操作：
- en: Create a new server action. In the **Settings** menu, select the **Technical**
    | **Actions** | **Server Actions** menu item, and click on the **Create** button
    at the top of the record list.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的服务器操作。在 **设置** 菜单中，选择 **技术** | **操作** | **服务器操作** 菜单项，然后在记录列表的顶部点击 **创建**
    按钮。
- en: 'Fill out the **Server Action** form with the following values:'
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下值填写 **服务器操作** 表单：
- en: '**Action Name**: **Send Reminder**'
  id: totrans-242
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操作名称**：**发送提醒**'
- en: '**Base** **Model**: **Task**'
  id: totrans-243
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**基础模型**：**任务**'
- en: '**Action To Do**: **Execute Code**'
  id: totrans-244
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**要执行的操作**：**执行代码**'
- en: 'In the **Python Code** text area, remove the default text and replace it with
    the following code:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **Python 代码** 文本区域中，删除默认文本，并替换为以下代码：
- en: '[PRE19]'
  id: totrans-246
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following screenshot shows the entered values:'
  id: totrans-247
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下截图显示了输入的值：
- en: '![Figure 12.10 – Python code with the values entered](img/B20997_12_10.jpg)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.10 – 输入值的 Python 代码](img/B20997_12_10.jpg)'
- en: Figure 12.10 – Python code with the values entered
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.10 – 输入值的 Python 代码
- en: Save the server action and click on **Create Contextual Action** at the top
    left to make it available under the project task’s **More** button.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存服务器操作，然后点击左上角的 **创建上下文操作** 以使其在项目任务的 **更多** 按钮下可用。
- en: Now, click on the **Project** top menu and select the **Search** | **Tasks**
    menu item. Pick a random task, set a deadline date on it, and then try the **Send
    Reminder** option under the **More** button.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击顶部的 **项目** 菜单，并选择 **搜索** | **任务** 菜单项。选择一个随机任务，为其设置截止日期，然后尝试在 **更多** 按钮下的
    **发送提醒** 选项。
- en: This works just like the previous recipe; the only difference is that this server
    action will run your Python code. Once you run the server action on a task, it
    will put a message in the chatter.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 这与之前的菜谱工作方式相同；唯一的区别是，这个服务器操作将运行你的 Python 代码。一旦你在任务上运行了服务器操作，它将在聊天中放置一条消息。
- en: How it works...
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The *Creating server actions* recipe of this chapter provides a detailed explanation
    of how to create a server action in general. For this particular type of action,
    we need to pick the **Execute Code** option and then write the code to run the
    text area.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的 *创建服务器操作* 菜单提供了如何创建一般服务器操作的详细说明。对于这种特定类型的操作，我们需要选择 **执行代码** 选项，然后编写运行文本区域的代码。
- en: The code can have multiple lines, as is the case in our recipe, and it runs
    in a context that has references to objects such as the current record object
    or the session user. The available references were described in the *Creating
    server* *actions* recipe.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 代码可以有多个行，就像我们的食谱中那样，并且它在具有对当前记录对象或会话用户等对象的引用的上下文中运行。可用的引用在*创建服务器* *操作*食谱中已描述。
- en: The code we used computes the number of days from the current date until the
    deadline date and uses that to prepare an appropriate notification message. The
    last line does the actual posting of the message in the task’s message wall. The
    `subtype='mt_comment'` argument is needed for email notifications to be sent to
    the followers, just like when we use the `mt_note` is used by default, posting
    an internal note without notification, as if we had used the **Log an internal
    note** button. Refer to [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing
    Emails in Odoo*, to learn more about mailing in Odoo.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的代码计算从当前日期到截止日期的天数，并使用这个数字来准备一个合适的通知消息。最后一行在任务的留言墙上实际发布消息。`subtype='mt_comment'`参数对于发送电子邮件通知给关注者来说是必需的，就像我们默认使用`mt_note`时，发布一个内部笔记而不发送通知，就像我们使用了**记录内部笔记**按钮一样。请参考[*第23章*](B20997_23.xhtml#_idTextAnchor1210)，*在Odoo中管理电子邮件*，了解更多关于Odoo中邮件的信息。
- en: There’s more...
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: Python code server actions are a powerful and flexible resource, but they do
    have some limitations compared to the custom add-on modules.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: Python代码服务器操作是一个强大且灵活的资源，但与自定义附加模块相比，它们确实有一些限制。
- en: Because the Python code is evaluated at runtime, if an error occurs, the stack
    trace is not as informative and can be harder to debug. It is also not possible
    to insert a breakpoint in the code of a server action using the techniques shown
    in [*Chapter 7*](B20997_07.xhtml#_idTextAnchor363), *Debugging Modules*, so debugging
    needs to be done using logging statements. Another concern is that, when trying
    to track down the cause of behavior in the module code, you may not find anything
    relevant. In this case, it’s probably caused by a server action.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Python代码是在运行时评估的，如果发生错误，堆栈跟踪可能不那么有信息性，并且可能更难调试。使用[*第7章*](B20997_07.xhtml#_idTextAnchor363)，*调试模块*中展示的技术，在服务器操作的代码中插入断点也是不可能的，因此调试需要使用日志语句来完成。另一个担忧是，在尝试追踪模块代码中的行为原因时，可能找不到任何相关的内容。在这种情况下，这可能是由于服务器操作引起的。
- en: When carrying out a more intensive use of server actions, the interactions can
    be quite complex, so it is advisable to plan properly and keep them organized.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 在执行更密集的服务器操作使用时，交互可能相当复杂，因此建议妥善规划并保持其组织。
- en: See also
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: Refer to [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing Emails
    in Odoo*, to learn more about mailing in Odoo.
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参考第[*第23章*](B20997_23.xhtml#_idTextAnchor1210)，*在Odoo中管理电子邮件*，了解更多关于Odoo中邮件的信息。
- en: Using automated actions on time conditions
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基于时间条件的自动化操作
- en: '**Automated actions** can be used to automatically trigger actions based on
    time conditions. We can use them to automatically perform some operations on records
    that meet certain criteria and time conditions.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '**自动化操作**可以用于根据时间条件自动触发操作。我们可以使用它们来自动对满足某些标准和时间条件的记录执行某些操作。'
- en: As an example, we can trigger a reminder notification for project tasks one
    day before their deadline, if they have one. Let’s see how this can be done.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以为具有截止日期的项目任务提前一天触发提醒通知，如果有的话。让我们看看如何做到这一点。
- en: Getting ready
  id: totrans-266
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, we will need to have both the *project management* app
    (which has the technical name `project`) and the `base_automation`) already installed,
    and have **Developer Mode** activated. We will also need the server action we
    created in the *Using Python code server actions* recipe of this chapter.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循这个食谱，我们需要安装好**项目管理**应用（其技术名称为`project`）和`base_automation`，并且激活**开发者模式**。我们还需要本章“使用Python代码服务器操作”食谱中创建的服务器操作。
- en: How to do it...
  id: totrans-268
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create an automated action with a timed condition on tasks, follow these
    steps:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 要在任务上创建具有定时条件的自动化操作，请按照以下步骤操作：
- en: In the **Settings** menu, select the **Technical** | **Automation** | **Automated
    Actions** menu item, and click on the **Create** button.
  id: totrans-270
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置**菜单中，选择**技术** | **自动化** | **自动化操作**菜单项，然后点击**创建**按钮。
- en: Fill out the basic information on the `Send notification` `near deadline`
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`临近截止日期发送通知`中填写基本信息
- en: '**Model**: **Task**'
  id: totrans-272
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型**：**任务**'
- en: Select **Based on Time Condition** in the **Trigger** field
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**触发器**字段中选择**基于时间条件**
- en: For **Action To Do**, select **Execute** **Existing actions**
  id: totrans-274
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于**待执行的操作**，选择**执行** **现有操作**
- en: To set the record criteria, click on the `["&",["date_deadline","!=",False],["stage_id.fold","=",False]]`,
    and click on the **Save** button. When changing to another field, the information
    on the number of records meeting the criteria will be updated and display **Record(s)**
    buttons. By clicking on the **Records** button, we can check the records list
    of the records meeting the domain expression.
  id: totrans-275
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置记录标准，点击`["&",["date_deadline","!=",False],["stage_id.fold","=",False]]`，然后点击**保存**按钮。当更改到另一个字段时，满足条件的记录数量信息将更新并显示**记录（s）**按钮。通过点击**记录**按钮，我们可以检查满足域表达式的记录列表。
- en: To set the time condition for `-``1` **Days**.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置时间条件为`-``1` **天**。
- en: 'On the **Actions** tab, under **Server actions to run**, click on **Add an
    item** and pick **Send Reminder** from the list; this should have been created
    previously. Refer to the following screenshot:'
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**操作**选项卡下，在**要运行的服务器操作**中，点击**添加项目**，从列表中选择**发送提醒**；这应该之前已经创建。请参考以下截图：
- en: '![Figure 12.11 – Automated action form view](img/B20997_12_11.jpg)'
  id: totrans-278
  prefs: []
  type: TYPE_IMG
  zh: '![图12.11 – 自动化操作表单视图](img/B20997_12_11.jpg)'
- en: Figure 12.11 – Automated action form view
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.11 – 自动化操作表单视图
- en: If not, we can still create the server action to run using the **Create** button.
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有，我们仍然可以使用**创建**按钮创建要运行的服务器操作。
- en: Click on **Save** to save the automated action.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**保存**以保存自动化操作。
- en: 'Perform the following steps to try it out:'
  id: totrans-282
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 执行以下步骤以尝试它：
- en: Go to the **Project** menu, go to **Search** | **Tasks**, and set a deadline
    on a task with the date in the past.
  id: totrans-283
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**项目**菜单，选择**搜索** | **任务**，并在带有过去日期的任务上设置截止日期。
- en: 'Go to the **Settings** menu, click on the **Technical** | **Automation** |
    **Scheduled** **Actions** menu item, find the **Base Action Rule: check and execute**
    action in the list, open its form view, and press on the **Run Manually** button
    at the top left. This forces timed automated actions to be checked. This is shown
    in the following screenshot. Note that this should work on a newly created demo
    database, but it might not work this way in an existing database:'
  id: totrans-284
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**设置**菜单，点击**技术** | **自动化** | **计划操作**菜单项，在列表中找到**基本操作规则：检查并执行**操作，打开其表单视图，然后在左上角点击**手动运行**按钮。这强制检查定时自动化操作。以下截图显示了这一点。请注意，这应该在新建的演示数据库上工作，但在现有数据库中可能不会这样工作：
- en: '![Figure 12.12 – Running an automated action (for test)](img/B20997_12_12.jpg)'
  id: totrans-285
  prefs: []
  type: TYPE_IMG
  zh: '![图12.12 – 运行自动化操作（测试用）](img/B20997_12_12.jpg)'
- en: Figure 12.12 – Running an automated action (for test)
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.12 – 运行自动化操作（测试用）
- en: Again, go to the **Project** menu and open the same task you previously set
    a deadline date on. Check the message board; you should see the notification generated
    by the server action triggered by our automated action.
  id: totrans-287
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，前往**项目**菜单并打开您之前设置的带有截止日期的任务。检查消息板；您应该看到由服务器操作触发的自动化操作生成的通知。
- en: After adding the time-based automated action for the deadline, a reminder message
    will be added to the task 1 day before the deadline.
  id: totrans-288
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在添加基于时间的自动化操作以设置截止日期后，将在截止日期前1天向任务添加提醒消息。
- en: How it works...
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Automated actions act on a model, and can be triggered either by events or time
    conditions. First, we must set the **Model** and **When to** **Run** values.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化操作作用于模型，可以通过事件或时间条件触发。首先，我们必须设置**模型**和**何时运行**的值。
- en: Both methods can use a filter to narrow down the records that we can perform
    the action on. We can use a domain expression for this. You can find further information
    about writing domain expressions in [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446),
    *Backend Views*. Alternatively, you can create and save a filter on project tasks
    by using the user interface features and then copy the automatically generated
    domain expression, selecting it from the **Set** selection based on a search filter
    list.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 两种方法都可以使用过滤器来缩小我们可以执行操作的记录。我们可以使用域表达式来实现这一点。您可以在[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*中找到有关编写域表达式的更多信息。或者，您可以通过使用用户界面功能创建并保存项目任务的过滤器，然后复制自动生成的域表达式，从基于搜索过滤器列表的**设置**选择中选中它。
- en: The domain expression we used selects all the records with a non-empty `Fold`
    flag is not checked. Stages without the `Fold` flag are considered to be work-in-progress.
    This way, we avoid triggering notifications on tasks that are in the **Done**,
    **Canceled**, or **Closed** stages.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用的领域表达式选择所有具有非空`Fold`标志的记录并未进行检查。没有`Fold`标志的阶段被视为正在进行中。这样，我们避免了在**完成**、**取消**或**关闭**阶段触发通知。
- en: Then, we should define the time condition – the date field to use and when the
    action should be triggered. The period can be in minutes, hours, days, or months,
    and the number set for the period can be positive, indicating the time after the
    date, or negative, indicating the time before the date. When using a period in
    days, we can provide a resource calendar that defines the working days and that
    can be used by the day count.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们应该定义时间条件——要使用日期字段以及何时触发操作。时间段可以是分钟、小时、天或月，为时间段设置的数字可以是正数，表示日期之后的时段，或负数，表示日期之前的时段。当使用以天为单位的时间段时，我们可以提供一个定义工作日并可用于日计数的资源日历。
- en: These actions are checked by the **Check Action Rules** scheduled job. Note
    that, by default, this is run every 4 hours. This is appropriate for actions that
    work on a day or month scale, but if you need actions that work on smaller timescales,
    you need to change the running interval to a smaller value.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 这些操作由**检查操作规则**计划作业进行检查。请注意，默认情况下，这是每4小时运行一次。这对于在日或月尺度上工作的操作是合适的，但如果你需要在小时间尺度上工作的操作，你需要将运行间隔更改为更小的值。
- en: Actions will be triggered for records that meet all the criteria and whose triggering
    date condition (the field date plus the interval) is after the last action execution.
    This is to avoid repeatedly triggering the same action. Also, this is why manually
    running the preceding action will work in a database in which the scheduled action
    has not yet been triggered, but why it might not work immediately in a database
    where it has already been run by the scheduler.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 对于符合所有标准且触发日期条件（字段日期加上间隔）在最后一次操作执行之后记录，将触发操作。这是为了避免重复触发相同的操作。这也是为什么在计划操作尚未触发的数据库中手动运行前面的操作将起作用，但在已经由调度器运行的数据库中可能不会立即起作用的原因。
- en: Once an automated action is triggered, the **Actions** tab tells you what should
    happen. This might be a list of server actions that do things such as changing
    values on the record, posting notifications, or sending out emails.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦自动化操作被触发，**操作**选项卡会告诉你应该发生什么。这可能是一系列服务器操作，例如更改记录上的值、发布通知或发送电子邮件。
- en: There’s more...
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: These types of automated actions are triggered once a certain time condition
    is reached. This is not the same as regularly repeating an action while a condition
    is still true. For example, an automated action will not be capable of posting
    a reminder for every day after the deadline has been exceeded.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类型的自动化操作在达到一定的时间条件时触发。这不同于在条件仍然为真时定期重复执行操作。例如，自动化操作无法在截止日期过后每天发布提醒。
- en: This type of action can, instead, be performed by scheduled actions, which are
    stored in the `ir.cron` model. However, scheduled actions do not support server
    actions; they can only call an existing method of a model object. So, to implement
    a custom action, we need to write an add-on module, adding the underlying Python
    method.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 此类操作可以由计划操作执行，这些操作存储在`ir.cron`模型中。然而，计划操作不支持服务器操作；它们只能调用模型对象的现有方法。因此，要实现自定义操作，我们需要编写一个附加模块，添加底层Python方法。
- en: For reference, the technical name for the model is `base.action.rule`.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，该模型的名称为`base.action.rule`。
- en: See also
  id: totrans-301
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: For further details about writing domain expressions, refer to [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446),
    *Backend Views*.
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关编写领域表达式的更多详细信息，请参阅[*第9章*](B20997_09.xhtml#_idTextAnchor446)，*后端视图*。
- en: Using automated actions on event conditions
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在事件条件下使用自动化操作
- en: Business applications provide systems with records for business operations but
    are also expected to support dynamic business rules that are specific to the organization’s
    use cases.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 商业应用为业务操作提供记录系统，但也预期支持特定于组织用例的动态业务规则。
- en: Carving these rules into custom add-on modules can be inflexible and out of
    the reach of functional users. Automated actions triggered by event conditions
    can bridge this gap and provide a powerful tool to automate or enforce the organization’s
    procedures. As an example, we will enforce validation on project tasks so that
    only the project manager can change tasks to the **Done** stage.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 将这些规则雕刻到自定义附加模块中可能不够灵活，并且功能用户难以触及。由事件条件触发的自动操作可以弥合这一差距，并为自动化或强制执行组织的程序提供强大的工具。例如，我们将对项目任务进行验证，以确保只有项目经理可以更改任务到**完成**阶段。
- en: Getting ready
  id: totrans-306
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: To follow this recipe, you will need to have the project management app already
    installed. You also need to have **Developer Mode** activated. If it’s not activated
    already, activate it in the Odoo **About** dialogue.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循此配方，您需要已经安装了项目管理应用程序。您还需要激活**开发者模式**。如果尚未激活，请在Odoo的**关于**对话框中激活它。
- en: How to do it...
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create an automated action with an event condition on tasks, follow these
    steps:'
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个在任务上有事件条件的自动操作，请按照以下步骤操作：
- en: In the **Settings** menu, select the **Technical** | **Automation** |**Automated
    Actions** menu item, and click on the **Create** button.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置**菜单中，选择**技术** | **自动化** | **自动操作**菜单项，然后点击**创建**按钮。
- en: Fill out the basic information in the `Validate` `Closing Tasks`
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Validate` `Closing Tasks`中填写基本信息
- en: '`Stage id`'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`阶段 ID`'
- en: The `[('stage_id.name', '!=', 'Done')]` – in the code editor, and save
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码编辑器中的`[('stage_id.name', '!=', 'Done')]` – 保存
- en: 'For the `[(''stage_id.name'', ''='', ''Done'')]` domain in the code editor,
    and save, as shown in the following screenshot:'
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于代码编辑器中的`[('stage_id.name', '=', 'Done')]`域，保存，如下所示截图：
- en: '![Figure 12.13 – Automated action form view](img/B20997_12_13.jpg)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![图12.13 – 自动操作表单视图](img/B20997_12_13.jpg)'
- en: Figure 12.13 – Automated action form view
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.13 – 自动操作表单视图
- en: In the **Actions** tab, click on **Add an item**. In the list dialogue, click
    on the **Create** button to create a new server action.
  id: totrans-317
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Actions**标签页中，点击**Add an item**。在列表对话框中，点击**Create**按钮以创建一个新的服务器操作。
- en: Fill out the server action form with the following values, and then click on
    the `Validate` `Closing tasks`
  id: totrans-318
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下值填写服务器操作表单，然后点击`Validate` `Closing tasks`
- en: '**Model**: **Task**'
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模型**: **任务**'
- en: '**Action To Do**: **Execute Code**'
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**要执行的操作**: **执行代码**'
- en: '**Python Code**: Enter the following code:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Python Code**: 输入以下代码：'
- en: '[PRE20]'
  id: totrans-322
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The following screenshot shows the entered values:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了输入的值：
- en: '![Figure 12.14 – Adding a child action](img/B20997_12_14.jpg)'
  id: totrans-324
  prefs: []
  type: TYPE_IMG
  zh: '![图12.14 – 添加子操作](img/B20997_12_14.jpg)'
- en: Figure 12.14 – Adding a child action
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.14 – 添加子操作
- en: Click on `Demo` user and we are working with the `Administrator` user, our automated
    action should be triggered, and our warning message should block the change.
  id: totrans-326
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击`Demo`用户，我们正在使用`Administrator`用户，我们的自动操作应该被触发，并且我们的警告消息应该阻止更改。
- en: How it works...
  id: totrans-327
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: We start by giving a name to our automated actions and setting the model it
    should work with. For the type of action we require, we should choose **On Save**,
    but the **On Creation**, **On Creation & Update**, **On Deletion**, and **Based
    On Form Modification** options are also available.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先为我们的自动操作命名，并设置它应该与之一起工作的模型。对于我们需要的行为类型，我们应该选择**On Save**，但**On Creation**、**On
    Creation & Update**、**On Deletion**和**基于表单修改**选项也是可用的。
- en: Next, we define the filters to determine when our action should be triggered.
    The **On Save** actions allow us to define two filters – one to check before and
    the other after the changes are made to the record. This can be used to express
    transitions – to detect when a record changes from *state A* to *state B*. In
    our example, we want to trigger the action when a *not-done* task changes to the
    *done* stage. The **On Save** action is the only one that allows these two filters;
    the other action types only allow one filter.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们定义过滤器以确定我们的操作何时应该被触发。**On Save**操作允许我们定义两个过滤器——一个用于更改记录之前检查，另一个用于更改记录之后检查。这可以用来表达转换——检测记录从*状态A*变为*状态B*。在我们的例子中，我们希望在未完成的任务变为*完成*阶段时触发操作。**On
    Save**操作是唯一允许这两个过滤器的操作；其他操作类型只允许一个过滤器。
- en: Important note
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: It is important to note that our example condition will only work correctly
    for English language users. This is because **Stage Name** is a translatable field
    that can have different values for different languages. So, the filters on the
    translatable fields should be avoided or used with care.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，我们的示例条件仅适用于英语语言用户。这是因为**阶段名称**是一个可翻译字段，不同语言可能有不同的值。因此，应避免或谨慎使用可翻译字段的过滤器。
- en: Finally, we create and add one (or more) server actions with whatever we want
    to be done when the automated action is triggered. In this case, we chose to demonstrate
    how to implement custom validation, making use of a Python code server action
    that used the `Warning` exception to block the user’s changes.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们创建并添加一个（或多个）服务器操作，以便在自动化操作被触发时执行我们想要的任何操作。在这种情况下，我们选择演示如何实现自定义验证，利用Python代码服务器操作使用`Warning`异常来阻止用户的更改。
- en: There’s more...
  id: totrans-333
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: In [*Chapter 5*](B20997_05.xhtml#_idTextAnchor238), *Basic Server-Side Development*,
    we saw how to redefine the `write()` methods of a model to perform actions on
    record updates. Automated actions on record updates provide another way to achieve
    this, with some benefits and drawbacks.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第5章*](B20997_05.xhtml#_idTextAnchor238)中，*基本服务器端开发*，我们看到了如何重新定义模型的`write()`方法以在记录更新时执行操作。记录更新上的自动化操作提供了另一种实现方式，具有一些优点和缺点。
- en: Among the benefits, it is easy to define an action that’s triggered by the update
    of a stored computed field, which is tricky to do in pure code. It is also possible
    to define filters on records and have different rules for different records or
    for records matching different conditions that can be expressed with search domains.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 在众多好处中，定义一个由存储计算字段的更新触发的操作很容易，这在纯代码中很难实现。还可能定义记录的过滤器，并为不同的记录或满足不同条件的记录定义不同的规则，这些条件可以用搜索域表示。
- en: However, automated actions can have disadvantages compared to Python business
    logic code inside modules. With poor planning, the flexibility provided can lead
    to complex interactions that are difficult to maintain and debug. Also, the before-and-after
    write filter operations bring some overhead, which can be an issue if you are
    performing sensitive actions.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与模块内Python业务逻辑代码相比，自动化操作可能存在一些缺点。如果规划不当，提供的灵活性可能导致复杂的交互，难以维护和调试。此外，写操作的前后过滤操作带来了一些开销，如果在执行敏感操作时可能会成为问题。
- en: Creating QWeb-based PDF reports
  id: totrans-337
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建基于QWeb的PDF报告
- en: 'When communicating with the outside world, it is often necessary to produce
    a PDF document from a record in the database. Odoo uses the same template language
    that’s used for form views: QWeb.'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 当与外界沟通时，通常需要从数据库中的记录生成PDF文档。Odoo使用与表单视图相同的模板语言：QWeb。
- en: In this recipe, we will create a QWeb report to print information about a room
    that is currently being borrowed by a student. This recipe will reuse the models
    presented in the *Adding a progress bar in Kanban views* recipe from earlier in
    this chapter.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将创建一个QWeb报告来打印关于当前被学生借用的房间信息。本食谱将重用本章前面提到的*在Kanban视图中添加进度条*食谱中展示的模型。
- en: Getting ready
  id: totrans-340
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: If you haven’t done so already, install `wkhtmltopdf`, as described in [*Chapter
    1*](B20997_01.xhtml#_idTextAnchor020), *Installing the Odoo Development Environment*;
    otherwise, you won’t get shiny PDFs as a result of your efforts.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有这样做，请按照[*第1章*](B20997_01.xhtml#_idTextAnchor020)中描述的步骤安装`wkhtmltopdf`，*安装Odoo开发环境*；否则，您将无法得到您努力工作后的闪亮PDF。
- en: Also, double-check that the `web.base.url` configuration parameter (or `report.url`)
    is a URL that is accessible from your Odoo instance; otherwise, the report will
    take a long time to generate and the result will look strange.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请确保`web.base.url`配置参数（或`report.url`）是一个可以从您的Odoo实例访问的URL；否则，报告将需要很长时间才能生成，结果看起来也会很奇怪。
- en: How to do it...
  id: totrans-343
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 请按照以下步骤操作：
- en: 'In this recipe, we will add a report to `hostel.student` that prints a list
    of students that the student borrowed. We need to add a `one2many` field to the
    student model concerning the `hostel.room` model, as shown in the following example:'
  id: totrans-345
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在本食谱中，我们将向`hostel.student`添加一个报告，打印出学生所借的学生名单。我们需要向学生模型添加一个`one2many`字段，与`hostel.room`模型相关联，如下例所示：
- en: '[PRE21]'
  id: totrans-346
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: <?xml version="1.0" encoding="utf-8"?>
  id: totrans-347
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <?xml version="1.0" encoding="utf-8"?>
- en: <odoo>
  id: totrans-348
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <odoo>
- en: <template id="hostel_room_detail_reports_template">
  id: totrans-349
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <template id="hostel_room_detail_reports_template">
- en: <t t-call="web.html_container">
  id: totrans-350
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <t t-call="web.html_container">
- en: <t t-foreach="docs" t-as="doc">
  id: totrans-351
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <t t-foreach="docs" t-as="doc">
- en: <t t-call="web.internal_layout">
  id: totrans-352
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <t t-call="web.internal_layout">
- en: <div class="page">
  id: totrans-353
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <div class="page">
- en: '<h1>Room name: <t t-esc="doc.name"/></h1>'
  id: totrans-354
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '<h1>房间名称: <t t-esc="doc.name"/></h1>'
- en: '<h1>Room No: <t t-esc="doc.name"/></h1>'
  id: totrans-355
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '<h1>房间号: <t t-esc="doc.name"/></h1>'
- en: <table class="table table-condensed">
  id: totrans-356
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <table class="table table-condensed">
- en: <thead>
  id: totrans-357
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <thead>
- en: <tr>
  id: totrans-358
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr>
- en: <th>Student Name</th>
  id: totrans-359
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th>学生姓名</th>
- en: <th>Gender</th>
  id: totrans-360
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <th>性别</th>
- en: </tr>
  id: totrans-361
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: </thead>
  id: totrans-362
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <thead>
- en: <tbody>
  id: totrans-363
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tbody>
- en: <tr t-foreach="doc.student_ids" t-as="student" >
  id: totrans-364
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <tr t-foreach="doc.student_ids" t-as="student" >
- en: <td><t t-esc="student.name" /></td>
  id: totrans-365
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td><t t-esc="student.name" /></td>
- en: <td><t t-esc="student.gender" /></td>
  id: totrans-366
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <td><t t-esc="student.gender" /></td>
- en: </tr>
  id: totrans-367
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tr>
- en: </tbody>
  id: totrans-368
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </tbody>
- en: </table>
  id: totrans-369
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </table>
- en: </div>
  id: totrans-370
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </div>
- en: </t>
  id: totrans-371
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </t>
- en: </t>
  id: totrans-372
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </t>
- en: </t>
  id: totrans-373
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </t>
- en: </template>
  id: totrans-374
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: </template>
- en: 'reports/hostel_room_detail_report.xml, as shown in the following example:'
  id: totrans-375
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: reports/hostel_room_detail_report.xml，如下例所示：
- en: '[PRE22]'
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Add both files to the manifest of the add-on, as shown in the following example:'
  id: totrans-378
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这两个文件添加到附加组件的清单中，如下例所示：
- en: '[PRE24]'
  id: totrans-379
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Now, when opening the room form view, or when selecting students in the list
    view, you should be offered the option to print the rooms detail report in a drop-down
    menu, as shown in the following screenshot:'
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当打开房间表单视图或从列表视图中选择学生时，您应该可以在下拉菜单中找到打印房间详细报告的选项，如下面的截图所示：
- en: '![Figure 12.15 – Print action for report](img/B20997_12_15.jpg)'
  id: totrans-381
  prefs: []
  type: TYPE_IMG
  zh: '![图12.15 – 报告的打印操作](img/B20997_12_15.jpg)'
- en: Figure 12.15 – Print action for report
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.15 – 报告的打印操作
- en: How it works...
  id: totrans-383
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *Step 1*, we added a `one2many` `hostel_student_ids` field. This field will
    contain rooms records for the student. We will use it in the QWeb report to list
    the rooms that the student has reserved.
  id: totrans-384
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤1*中，我们添加了一个`one2many` `hostel_student_ids`字段。该字段将包含学生的房间记录。我们将在QWeb报告中使用它来列出学生已预订的房间。
- en: In *Step 2*, we defined the QWeb template. The content of the template will
    be used to generate the PDF. In our example, we used some basic HTML structure.
    We also used some attributes such as `t-esc` and `t-foreach`, which are used to
    generate dynamic content in the report. Don’t worry about this syntax within the
    `template` element for now. This topic will be addressed extensively in the *Creating
    or modifying templates – QWeb* recipe in [*Chapter 14*](B20997_14.xhtml#_idTextAnchor734),
    *CMS Website Development*. Another important thing to notice in the template is
    the layout. In our example, we have used `web.internal_layout` in our template,
    which will generate the final PDF with a minimal header and footer. If you want
    an informative header and footer that uses the company logo and company information,
    use the `web.external_layout` layout. We also added one `for` loop to the `docs`
    parameter that will be used to generate a report for multiple records when the
    user prints it from the list view.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤2*中，我们定义了QWeb模板。模板的内容将用于生成PDF。在我们的例子中，我们使用了一些基本的HTML结构。我们还使用了`t-esc`和`t-foreach`等属性，这些属性用于在报告中生成动态内容。现在不必担心`template`元素内的这种语法。这个主题将在[*第14章*](B20997_14.xhtml#_idTextAnchor734)的*创建或修改模板
    – QWeb*菜谱中详细讨论，*CMS网站开发*。在模板中需要注意的另一件重要事情是布局。在我们的例子中，我们在模板中使用了`web.internal_layout`，这将生成具有最小页眉和页脚的最终PDF。如果您想要使用公司标志和公司信息的
    informative 页眉和页脚，请使用`web.external_layout`布局。我们还向`docs`参数添加了一个`for`循环，当用户从列表视图打印时，它将用于为多个记录生成报告。
- en: In *Step 3*, we declared the report in another XML file via the `<record>` tag.
    It will register the report’s `ir.actions.report` model. The crucial part here
    is that you set the `report_name` field to the complete XML ID (that is, `modulename.record_id`)
    of the template you defined; otherwise, the report generation process will fail.
    The `model` field determines which type of record the report operates, and the
    `name` field is the name shown to the user in the print menu.
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤3*中，我们通过`<record>`标签在另一个XML文件中声明了报告。它将注册报告的`ir.actions.report`模型。这里的关键部分是您将`report_name`字段设置为定义的模板的完整XML
    ID（即`modulename.record_id`）；否则，报告生成过程将失败。`model`字段确定报告操作的记录类型，而`name`字段是在打印菜单中显示给用户的名称。
- en: Note
  id: totrans-387
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: In previous versions of Odoo, a `<report>` tag was used to register a report.
    But from version v14, it is deprecated and you need to create a record of `ir.actions.report`
    with the `<record>` tag. The `<report>` tag is still supported in Odoo v14 for
    backward compatibility but using it will show a warning in the log.
  id: totrans-388
  prefs: []
  type: TYPE_NORMAL
  zh: 在Odoo的先前版本中，使用`<report>`标签来注册报告。但从版本v14开始，它已被弃用，您需要使用`<record>`标签创建`ir.actions.report`记录。`<report>`标签在Odoo
    v14中仍然支持以实现向后兼容，但使用它将在日志中显示警告。
- en: By setting `report_type` to `qweb-pdf`, we requested that the HTML generated
    by our view is run through `wkhtmltopdf` to deliver a PDF to the user. In some
    cases, you may want to use `qweb-html` to render the HTML within the browser.
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 `report_type` 设置为 `qweb-pdf`，我们请求我们的视图生成的HTML通过 `wkhtmltopdf` 运行，向用户交付PDF。在某些情况下，你可能想使用
    `qweb-html` 在浏览器中渲染HTML。
- en: There’s more...
  id: totrans-390
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: There are some marker classes in a report’s HTML that are crucial for the layout.
    Ensure that you wrap all your content in an element with the `page` class set.
    If you forget that, you’ll see nothing at all. To add a header or footer to your
    record, use the `header` or `footer` class.
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
  zh: 报告的HTML中存在一些对布局至关重要的标记类。确保将所有内容包裹在一个设置了 `page` 类的元素中。如果你忘记了这一点，你将什么也看不到。要为你的记录添加标题或页脚，请使用
    `header` 或 `footer` 类。
- en: Also, remember that this is HTML, so make use of *CSS attributes* such as `page-break-before`,
    `page-break-after`, and `page-break-inside`.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，记得这是HTML，所以请充分利用 *CSS属性*，如 `page-break-before`、`page-break-after` 和 `page-break-inside`。
- en: You’ll have noted that all of our template body is wrapped in two elements with
    the `t-call` attribute set. We’ll examine the mechanics of this attribute later
    in [*Chapter 14*](B20997_14.xhtml#_idTextAnchor734), *CMS Website Development*,
    but you must do the same in your reports. These elements ensure that the HTML
    generates links to all the necessary CSS files and contains some other data that
    is needed for report generation. While `web.html_container` doesn’t have an alternative,
    the second `t-call` can be `web.external_layout`. The difference is that the external
    layout already comes with a header and footer displaying the company logo, the
    company’s name, and some other information you expect from a company’s external
    communication, while the internal layout just gives you a header with pagination,
    the print date, and the company’s name. For the sake of consistency, always use
    one of the two.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到，我们所有的模板主体都被包裹在两个设置了 `t-call` 属性的元素中。我们将在[*第14章*](B20997_14.xhtml#_idTextAnchor734)
    *CMS网站开发* 中稍后探讨这个属性的机制，但你必须在你的报告中做同样的事情。这些元素确保HTML生成指向所有必要CSS文件的链接，并包含一些用于报告生成的其他数据。虽然
    `web.html_container` 没有替代品，第二个 `t-call` 可以是 `web.external_layout`。区别在于外部布局已经包含显示公司标志、公司名称和一些你期望从公司外部沟通中获得的其他信息的标题和页脚，而内部布局只提供带有分页、打印日期和公司名称的标题。为了保持一致性，始终使用这两个之一。
- en: Important note
  id: totrans-394
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Note that `web.internal_layout`, `web.external_layout`, `web.external_layout_header`,
    and `web.external_layout_footer` (the last two are called by the external layout)
    are just views by themselves, and you already know how to change them via inheritance.
    To inherit with the template element, use the `inherit_id` attribute.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`web.internal_layout`、`web.external_layout`、`web.external_layout_header`
    和 `web.external_layout_footer`（后两个由外部布局调用）本身只是视图，你已经知道如何通过继承来更改它们。要使用模板元素进行继承，请使用
    `inherit_id` 属性。
- en: Managing activities from a Kanban card
  id: totrans-396
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从看板卡片管理活动
- en: Odoo uses activities to schedule actions on records. These activities can be
    managed in the form view and the Kanban view. In this recipe, we will learn how
    to manage activities from the Kanban view card. We will add an activity widget
    to the cards of the rooms Kanban.
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 使用活动来对记录上的操作进行调度。这些活动可以在表单视图和看板视图中进行管理。在本菜谱中，我们将学习如何从看板视图卡片中管理活动。我们将向房间看板卡片添加活动小部件。
- en: Getting started
  id: totrans-398
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
  id: totrans-399
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将使用之前菜谱中的 `my_hostel` 模块。
- en: How to do it...
  id: totrans-400
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to add and manage activity from the Kanban view:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤从看板视图添加和管理活动：
- en: 'Add mail dependencies to the `manifest` file:'
  id: totrans-402
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将邮件依赖项添加到 `manifest` 文件中：
- en: '[PRE25]'
  id: totrans-403
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Inherit an activity mixin in the `hostel.room` model:'
  id: totrans-404
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `hostel.room` 模型中继承活动混入：
- en: '[PRE26]'
  id: totrans-405
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: <field name="color" />
  id: totrans-406
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<field name="color" />`'
- en: 'activity_ids field inside the Kanban template. Add this field under the popularity
    field, as shown here:'
  id: totrans-407
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在看板模板中的 `activity_ids` 字段。将此字段添加到流行度字段下，如图所示：
- en: '[PRE27]'
  id: totrans-408
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-409
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![Figure 12.16 – Activity manager in a Kanban card](img/B20997_12_16.jpg)'
  id: totrans-410
  prefs: []
  type: TYPE_IMG
  zh: '![图12.16 – 卡片中的活动管理器](img/B20997_12_16.jpg)'
- en: Figure 12.16 – Activity manager in a Kanban card
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.16 – 卡片中的活动管理器
- en: As you can see, after applying the code from this recipe, you will be able to
    manage activity from a Kanban card. You can now also process or create an activity
    from a Kanban card.
  id: totrans-412
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在应用本菜谱中的代码后，你将能够从看板卡片管理活动。你现在也可以从看板卡片处理或创建活动。
- en: How it works...
  id: totrans-413
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *Step 1*, we added a dependency to the manifest of our module. We did this
    because all the implementation associated with the activity is part of the `mail`
    module. Without installing `mail`, we cannot use activities in our model.
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 1* 中，我们将依赖项添加到我们模块的清单中。我们这样做是因为与活动相关的所有实现都是 `mail` 模块的一部分。如果没有安装 `mail`，我们无法在我们的模型中使用活动。
- en: In *Step 2*, we added `activity mixin` to the `hostel.room` model. This will
    enable activities for the rooms records. Adding `mail.activity.mixin` will add
    all the fields and methods required for activities. We also added the `mail.thread`
    mixin because the activity logs the message when the user processes the activity.
    If you want to learn more about this activity, please refer to the *Managing activities
    on documents* recipe of [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing
    Emails* *in Odoo*.
  id: totrans-415
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 2* 中，我们将 `activity mixin` 添加到 `hostel.room` 模型中。这将启用房间记录的活动。添加 `mail.activity.mixin`
    将添加活动所需的所有字段和方法。我们还添加了 `mail.thread` 混合，因为活动在用户处理活动时记录消息。如果您想了解更多关于此活动的信息，请参阅
    [*第 23 章*](B20997_23.xhtml#_idTextAnchor1210) 的 *在 Odoo 文档上管理活动* 菜谱，*在 Odoo 中管理电子邮件*。
- en: In *Step 3*, we added the `activity_state` field to the Kanban view. This field
    is used by the activity widget to display the color widget. The color will represent
    the current state of the upcoming activity.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 3* 中，我们将 `activity_state` 字段添加到看板视图中。此字段由活动小部件用于显示颜色小部件。颜色将代表即将到来的活动的当前状态。
- en: In *Step 4*, we added the activity widget itself. It uses the `activity_ids`
    field. In our example, we added the activity widget in a separate `<div>` tag,
    but you can put it anywhere according to your design requirements. With the activity
    widget, you can schedule, edit, and process the activity directly from the Kanban
    card.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 4* 中，我们添加了活动小部件本身。它使用 `activity_ids` 字段。在我们的示例中，我们在一个单独的 `<div>` 标签中添加了活动小部件，但您可以根据您的设计要求将其放在任何位置。有了活动小部件，您可以直接从看板卡片中安排、编辑和处理活动。
- en: There’s more…
  id: totrans-418
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'In the *Adding a progress bar in Kanban views* recipe of this chapter, we displayed
    a Kanban progress bar based on the `popularity` field. But we can also show a
    progress bar based on the state of the upcoming activity:'
  id: totrans-419
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的 *在 Kanban 视图中添加进度条* 菜谱中，我们根据 `popularity` 字段显示了一个 Kanban 进度条。但我们也可以根据即将到来的活动的状态显示进度条：
- en: '[PRE29]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: This will show the progress bar based on the state of the upcoming activity.
    A state-based progress bar is used in several views in Odoo.
  id: totrans-421
  prefs: []
  type: TYPE_NORMAL
  zh: 这将根据即将到来的活动的状态显示进度条。基于状态的进度条在 Odoo 的多个视图中使用。
- en: See also
  id: totrans-422
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关内容
- en: If you want to learn more about the mail thread, refer to the *Managing chatter
    on documents* recipe of [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing
    Emails* *in Odoo*.
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于邮件线程的信息，请参阅 [*第 23 章*](B20997_23.xhtml#_idTextAnchor1210) 的 *在 Odoo
    文档上管理聊天* 菜谱，*在 Odoo 中管理电子邮件*。
- en: If you want to learn more about activities, refer to the *Managing activities
    on documents* recipe of [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing
    Emails* *in Odoo*.
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您想了解更多关于活动的信息，请参阅 [*第 23 章*](B20997_23.xhtml#_idTextAnchor1210) 的 *在 Odoo
    文档上管理活动* 菜谱，*在 Odoo 中管理电子邮件*。
- en: Adding a stat button to a form view
  id: totrans-425
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向表单视图中添加状态按钮
- en: Odoo uses a stat button to relate two different objects visually on the form
    view. It is used to show some basic KPIs for related records. It is also used
    to redirect and open another view. In this recipe, we will add a stat button to
    the form view of a room. This stat button will display the count of room records
    and on clicking it, we will be redirected to the list of Kanban views.
  id: totrans-426
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 使用状态按钮在表单视图中直观地关联两个不同的对象。它用于显示相关记录的一些基本关键绩效指标（KPIs）。它还用于重定向并打开另一个视图。在本菜谱中，我们将向房间的表单视图中添加一个状态按钮。此状态按钮将显示房间记录的数量，并且点击它时，我们将被重定向到看板视图列表。
- en: Getting started
  id: totrans-427
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个菜谱，我们将使用前一个菜谱中的 `my_hostel` 模块。
- en: How to do it...
  id: totrans-429
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to add a stat button to the hostel’s form view:'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤向宿舍的表单视图中添加状态按钮：
- en: 'Add the `rooms_count` compute field to the `hostel.hostel` model. This field
    will count the number of active rooms in the hostel:'
  id: totrans-431
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `rooms_count` 计算字段添加到 `hostel.hostel` 模型中。此字段将计算宿舍中活跃房间的数量：
- en: '[PRE30]'
  id: totrans-432
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: <div class="oe_button_box" name="button_box">
  id: totrans-433
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<div class="oe_button_box" name="button_box">`'
- en: '<button class="oe_stat_button" name="%(action_hostel_room)d" type="action"
    icon="fa-building" context="{''search_default_hostel_id'': active_id}">'
  id: totrans-434
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<button class="oe_stat_button" name="%(action_hostel_room)d" type="action"
    icon="fa-building" context="{''search_default_hostel_id'': active_id}">`'
- en: <field string="Rooms" name="rooms_count" widget="statinfo"/>
  id: totrans-435
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<field string="房间" name="rooms_count" widget="statinfo"/>`'
- en: </button>
  id: totrans-436
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`</button>`'
- en: 'my_hostel module to apply the changes. Open the form view of any hostel; you
    will find the stat button, as shown in the following screenshot:'
  id: totrans-437
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在`my_hostel`模块中应用更改。打开任何宿舍的表单视图；您将找到状态按钮，如下面的截图所示：
- en: '[PRE31]'
  id: totrans-438
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![Figure 12.17 – Stat button in a hostel’s form view](img/B20997_12_17.jpg)'
  id: totrans-439
  prefs: []
  type: TYPE_IMG
  zh: '![图12.17 – 宿舍表单视图中的状态按钮](img/B20997_12_17.jpg)'
- en: Figure 12.17 – Stat button in a hostel’s form view
  id: totrans-440
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.17 – 宿舍表单视图中的状态按钮
- en: On clicking the stat button, you will be redirected to the **Rooms** Kanban
    view. Here, you will see orders only from the current hostel.
  id: totrans-441
  prefs: []
  type: TYPE_NORMAL
  zh: 点击状态按钮后，您将被重定向到**房间**看板视图。在这里，您将只看到当前宿舍的订单。
- en: How it works...
  id: totrans-442
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *Step 1*, we added a compute field that calculates the number of rooms records
    for the current hostel. The value of this field will be used for a stat button
    to show the count. If you want to learn more about compute, refer to the *Adding
    computed fields to a model* recipe in [*Chapter 4*](B20997_04.xhtml#_idTextAnchor118),
    *Application Models*.
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤1*中，我们添加了一个计算字段，用于计算当前宿舍的房间记录数量。此字段的值将用于状态按钮以显示计数。如果您想了解更多关于计算的信息，请参阅[*第4章*](B20997_04.xhtml#_idTextAnchor118)中的*向模型添加计算字段*配方，*应用程序模型*。
- en: In *Step 2*, we added the stat button in the form view of the `hostel.hostel`
    model. There are a specific syntax and location for the stat button. All the stat
    button needs to do is wrap under `<div>` with the `oe_button_box` class. The stat
    button box needs to be placed inside the `<sheet>` tag. Note that we used a `name`
    attribute on the button box. This `name` attribute is useful when you want to
    add a new stat, but then you will need to add a stat button with the `<button>`
    tag with the `oe_stat_button` class. Internally, the stat button is just a form
    view button with a different user interface. This means it supports all of the
    attributes that are supported by a normal button, such as an action, icon, and
    context.
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤2*中，我们在`hostel.hostel`模型的表单视图中添加了状态按钮。状态按钮有一个特定的语法和位置。所有状态按钮需要做的就是将其包裹在具有`oe_button_box`类的`<div>`标签下。状态按钮框需要放置在`<sheet>`标签内。请注意，我们在按钮框上使用了`name`属性。当您想添加一个新的状态时，这个`name`属性非常有用，但您将需要添加一个带有`<button>`标签和`oe_stat_button`类的状态按钮。内部，状态按钮只是一个具有不同用户界面的表单视图按钮。这意味着它支持所有由正常按钮支持的属性，例如操作、图标和上下文。
- en: In our example, we used the action of rooms orders, which means that when the
    user clicks on the stat button, they will be redirected to the rooms records but
    it will show all the rooms records. We only want to show the rooms records for
    the current room. To do so, we have to pass `search_default_hostel_id`. This will
    apply a default filter for the current room. Note that `hostel_id` is the `many2one`
    field on the `hostel.room` model. If you want to filter by another field, use
    it by prefixing it with `search_default_` in `context`.
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我们使用了房间订单的动作，这意味着当用户点击状态按钮时，他们将被重定向到房间记录，但它将显示所有房间的记录。我们只想显示当前房间的房间记录。为此，我们必须传递`search_default_hostel_id`。这将应用当前房间的默认过滤器。请注意，`hostel_id`是`hostel.room`模型上的`many2one`字段。如果您想根据另一个字段进行筛选，请在`context`中使用它，并在其前加上`search_default_`前缀。
- en: Stat buttons are used often as they are very useful and show the overall statistics
    related to a record. You could use them to show all the information that relates
    to the current record. For example, on the contact record, Odoo shows stat buttons
    that show information related to the current contact total of the invoice, the
    number of leads, the number of orders, and so on.
  id: totrans-446
  prefs: []
  type: TYPE_NORMAL
  zh: 状态按钮经常被使用，因为它们非常有用，并显示与记录相关的总体统计信息。您可以使用它们来显示与当前记录相关的所有信息。例如，在联系记录中，Odoo显示状态按钮，显示与当前联系发票总数、潜在客户数量、订单数量等相关的信息。
- en: See also
  id: totrans-447
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参见
- en: To learn more about buttons, refer to the *Adding buttons to forms* recipe in
    [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446), *Backend Views*.
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解更多关于按钮的信息，请参阅[*第9章*](B20997_09.xhtml#_idTextAnchor446)中的*在表单中添加按钮*配方，*后端视图*。
- en: To learn more about actions, refer to the *Adding a menu item and window action*
    recipe in [*Chapter 9*](B20997_09.xhtml#_idTextAnchor446), *Backend Views*.
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要了解更多关于操作的信息，请参阅[*第9章*](B20997_09.xhtml#_idTextAnchor446)中的*添加菜单项和窗口操作*配方，*后端视图*。
- en: Enabling the archive option for records
  id: totrans-450
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启用记录的存档选项
- en: Odoo provides inbuilt features to enable archive and unarchive options for records.
    This will help the user hide records that are no longer important. In this recipe,
    we will add an archive/unarchive option for a room. We can archive a room once
    it is not available.
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo提供了内置功能，以启用记录的存档和取消存档选项。这将帮助用户隐藏不再重要的记录。在这个配方中，我们将为房间添加一个存档/取消存档选项。一旦房间不可用，我们就可以存档房间。
- en: Getting started
  id: totrans-452
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 入门指南
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们将使用前一个配方中的`my_hostel`模块。
- en: How to do it...
  id: totrans-454
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Archive and unarchive mostly work automatically. The options are available
    on a record if the model has a Boolean field named `active`. We already have an
    `active` field in the `hostel.room` model. But if you have not added it, follow
    these steps to add the `active` field:'
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 存档和取消存档主要自动工作。如果模型有一个名为`active`的布尔字段，则记录上的选项可用。我们已经在`hostel.room`模型中有一个`active`字段。但如果你还没有添加它，请按照以下步骤添加`active`字段：
- en: 'Add an `active` Boolean field to the `hostel.room` model, like this:'
  id: totrans-456
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostel.room`模型中添加一个名为`active`的布尔字段，如下所示：
- en: '[PRE32]'
  id: totrans-457
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: <field name="active" invisible="1"/>
  id: totrans-458
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<field name="active" invisible="1"/>`'
- en: '[PRE33]'
  id: totrans-459
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Update the `my_hostel` module to apply the changes. Now, you will be able to
    archive rooms. The **Archive** option is available in the **Action** dropdown,
    as shown in the following screenshot:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`my_hostel`模块以应用更改。现在，你将能够存档房间。**存档**选项在**操作**下拉菜单中可用，如下面的截图所示：
- en: '![Figure 12.18 – Archive option on the form view](img/B20997_12_18.jpg)'
  id: totrans-461
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.18 – 表单视图上的存档选项](img/B20997_12_18.jpg)'
- en: Figure 12.18 – Archive option on the form view
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.18 – 表单视图上的存档选项
- en: Once you archive a record, you’ll want to see that record anywhere in Odoo.
    To see it, you need to apply a filter from the search view.
  id: totrans-463
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你存档了一个记录，你希望在Odoo的任何地方都能看到该记录。要查看它，你需要从搜索视图中应用一个过滤器。
- en: How it works...
  id: totrans-464
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: A Boolean field named `active` has a special purpose in Odoo. If you add an
    `active` field to your model, records with a `false` value in the `active` field
    won’t be displayed anywhere in Odoo.
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 在Odoo中，名为`active`的布尔字段具有特殊用途。如果你在你的模型中添加了一个`active`字段，那么在`active`字段中值为`false`的记录将不会在Odoo的任何地方显示。
- en: In *Step 1*, we added an `active` field to the `hostel.room` model. Note that
    we kept the default value of `True` here. If we don’t add this default value,
    the new records will be created in archive mode by default and won’t be displayed
    in views, even if we have recently created them.
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 1*中，我们在`hostel.room`模型中添加了一个`active`字段。请注意，我们在这里保留了默认值`True`。如果我们不添加这个默认值，新创建的记录将默认以存档模式创建，即使在最近创建的情况下，也不会在视图中显示。
- en: In *Step 2*, we added the `active` field in the form view. If you don’t add
    an `active` field in the form view, the archive/unarchive option won’t be displayed
    in the `invisible` attribute to hide it from the form view.
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 2*中，我们在表单视图中添加了`active`字段。如果你不在表单视图中添加`active`字段，存档/取消存档选项将不会在`invisible`属性中显示，从而在表单视图中隐藏它。
- en: In our example, once you archive a room, that room will not be displayed in
    the tree view or any other view. The room won’t even be displayed in the `many2one`
    dropdown in the hostel record. If you want to unarchive that room, then you need
    to apply a filter to display archived records from the search view, and then restore
    the room.
  id: totrans-468
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，一旦你存档了一个房间，该房间将不会在树形视图或任何其他视图中显示。在宿舍记录的`many2one`下拉菜单中，该房间也不会显示。如果你想取消存档该房间，那么你需要从搜索视图中应用一个过滤器来显示存档记录，然后恢复该房间。
- en: There’s more…
  id: totrans-469
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'If your model has an `active` Boolean field, the `search` method will not return
    an archived record. If you want to search all the records, whether they are archived
    or not, then pass `active_test` in a context, like this:'
  id: totrans-470
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的模型有一个名为`active`的布尔字段，`search`方法将不会返回存档记录。如果你想搜索所有记录，无论它们是否存档，那么在上下文中传递`active_test`，如下所示：
- en: '[PRE34]'
  id: totrans-471
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Note that if the archive record is linked to another record, it will be displayed
    in the related form view. For example, say you have *Room 1*. Then, you archive
    *Room 1*, which means from now on, you cannot select *Room 1* in the room. But
    if you open *Order 1*, you will see the archived *Room 1*.
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果存档记录与另一个记录相关联，它将在相关表单视图中显示。例如，假设你有“房间 1”。然后，你存档“房间 1”，这意味着从现在起，你无法在房间中选择“房间
    1”。但是如果你打开“订单 1”，你会看到存档的“房间 1”。
