- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Designing GUI Applications
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计GUI应用程序
- en: 'Software applications are developed in three repeating phases: understanding
    a problem, designing a solution, and implementing the solution. These phases repeat
    throughout the life of an application as you add new features, refine functionality,
    and update your application until it is either optimal or obsolete. While many
    programmers want to jump right into the implementation phase, putting away your
    code editor and taking the time to work through the first two phases will give
    you a better chance to develop an application that solves the problem correctly.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 软件应用的开发分为三个重复的阶段：理解问题、设计解决方案和实施解决方案。这些阶段在应用程序的生命周期中重复，随着你添加新功能、改进功能并更新应用程序，直到它变得最优或过时。虽然许多程序员想要直接进入实施阶段，但放下代码编辑器，花时间完成前两个阶段将给你开发一个正确解决问题的应用程序的机会更大。
- en: 'In this chapter, we''ll be introduced to a problem at your new workplace and
    begin designing a solution to that problem over the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍你新工作场所的问题，并开始设计以下主题的解决方案：
- en: In *Analyzing a problem at ABQ AgriLabs*, we'll learn about an issue at your
    new job that you can help solve with your coding skills.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*分析ABQ AgriLabs的问题*中，我们将了解你新工作中你可以用你的编码技能帮助解决的问题。
- en: In *Documenting specification requirements*, we'll create a program specification
    that lays out the requirements of our solution.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*记录规范要求*中，我们将创建一个程序规范，概述我们解决方案的要求。
- en: In *Designing the application*,we'll develop a design for a GUI application
    that implements the solution.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*设计应用程序*中，我们将开发一个实现解决方案的GUI应用程序的设计。
- en: In *Evaluating technology options*, we'll consider which toolkit and language
    are most appropriate for our project.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在*评估技术选项*中，我们将考虑哪个工具包和语言最适合我们的项目。
- en: Analyzing a problem at ABQ AgriLabs
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分析ABQ AgriLabs的问题
- en: 'Congratulations! Your Python skills have landed you a great job as a data analyst
    at ABQ AgriLabs. So far, your job is fairly simple: collating and doing simple
    data analysis on the CSV files sent to you daily by the lab''s data entry staff.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你的Python技能让你在ABQ AgriLabs获得了一份优秀的数据分析师工作。到目前为止，你的工作相当简单：整理并对你每天由实验室数据录入人员发送给你的CSV文件进行简单的数据分析。
- en: There is a problem, though. You've noted with frustration that the quality of
    the CSV files from the lab is sadly inconsistent. Data is missing, typos abound,
    and often the files have to be re-entered in a time-consuming process. The lab
    director has noticed this as well and, knowing that you are a skilled Python programmer,
    she thinks you might be able to help. You've been enlisted to program a solution
    that will allow the data entry staff to enter lab data into a CSV file with fewer
    mistakes. Your application needs to be simple and allow as little room for error
    as possible.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一个问题。你带着挫败感注意到，实验室发送的CSV文件质量很不一致。数据缺失，错误百出，而且经常需要花费大量时间重新录入文件。实验室主任也注意到了这个问题，并且知道你是一位熟练的Python程序员，她认为你可能能够帮忙。你已经接受了编写一个解决方案的任务，这个方案将允许数据录入人员以更少的错误将实验室数据录入CSV文件。你的应用程序需要简单，并尽可能减少错误的空间。
- en: Assessing the problem
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 评估问题
- en: Spreadsheets are often a first stop for computer users who need to keep track
    of data. Their table-like layouts and computational features seem to make them
    ideal for the task.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 电子表格通常是计算机用户跟踪数据的起点。它们的表格式布局和计算功能似乎使它们非常适合这项任务。
- en: 'However, as a set of data grows and is added to by multiple users, the shortcomings
    of spreadsheets become apparent: they don''t enforce data integrity, their table-like
    layout can be visually confusing when dealing with long rows of sparse or ambiguous
    data, and users can easily delete or overwrite data if they aren''t being careful.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，随着数据集的增长和多个用户的添加，电子表格的缺点变得明显：它们不强制数据完整性，当处理长行稀疏或模糊数据时，它们的表格式布局可能会视觉上令人困惑，而且如果用户不小心，他们可以很容易地删除或覆盖数据。
- en: 'To improve this situation, you propose to implement a simple GUI data entry
    form that appends data to a CSV file in the format we need. Forms can help to
    improve data integrity in several ways:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了改善这种情况，你提议实施一个简单的GUI数据录入表单，将数据追加到我们需要的CSV文件格式中。表单可以通过以下几种方式帮助提高数据完整性：
- en: They can enforce the type of data to be entered (for example, numbers or dates).
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可以强制输入数据的类型（例如，数字或日期）。
- en: They can verify that entered data is within expected ranges, matches expected
    patterns, or is within a valid set of options.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可以验证录入的数据是否在预期的范围内，是否符合预期的模式，或者是否在有效的选项集中。
- en: They can auto-fill information such as current dates, times, and usernames.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可以自动填写诸如当前日期、时间和用户名等信息。
- en: They can ensure that required data fields have not been left empty.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 他们可以确保所需的数据字段没有被留空。
- en: By implementing a well-designed form, we can greatly reduce the amount of human
    error from the data entry staff. Where do we begin?
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 通过实施一个设计良好的表单，我们可以大大减少数据录入人员的人为错误。我们从哪里开始呢？
- en: Gathering information about the problem
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 收集关于问题的信息
- en: 'To build a truly effective data entry application, you need to do more than
    just throw some entry fields on a form. It''s important to understand the data
    and the **workflow** around the data from all sides of the problem. It''s also
    important to understand the human and technological limitations that you need
    to accommodate. To do that, we need to speak with a few different parties:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建一个真正有效的数据录入应用程序，你需要的不仅仅是将一些录入字段放在表单上。理解数据及其周围的所有问题方面的**工作流程**非常重要。同时，了解你需要适应的人类和技术限制也同样重要。为了做到这一点，我们需要与几个不同的当事人进行交流：
- en: The **originators** of the data for the application – in this case, the lab
    technicians who check the plots in each lab. They can help us understand the significance
    of the data, the possible values, and the possible outlier situations where the
    data might need special handling.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序数据的**发起者**——在这种情况下，检查每个实验室图表的实验室技术人员。他们可以帮助我们了解数据的重要性，可能的值，以及可能需要特殊处理的数据异常情况。
- en: The **users** of our application – in this case, the data entry staff. We need
    to understand what the data looks like when they receive it, what their workflow
    is like for entering the data, what practical or knowledge limitations they face,
    and ultimately how our software can make their job *easier* rather than harder.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们应用程序的**用户**——在这种情况下，数据录入人员。我们需要了解他们接收数据时的数据样子，他们录入数据的工作流程是怎样的，他们面临哪些实际或知识限制，以及我们的软件如何使他们的工作变得更**容易**而不是更难。
- en: The **consumers** of the data from the application – that is, everyone who will
    use the CSV files (including you!). What are their expectations for the output
    of this application? How would they like outlier situations to be handled? What
    are their goals in keeping and analyzing the data?
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序数据的**消费者**——即所有将使用CSV文件的人（包括你！）他们对这个应用程序的输出有什么期望？他们希望如何处理异常情况？他们保持和分析数据的目的是什么？
- en: The **support staff** who are involved with the systems that will run or consume
    data from your application. What sort of technologies need to be supported? What
    technological limitations need to be accommodated? What security concerns need
    to be addressed?
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 涉及将运行或消耗您应用程序数据的系统的**支持人员**。需要支持哪些技术？需要适应哪些技术限制？需要解决哪些安全问题？
- en: Sometimes these groups overlap, of course. In any case, it's important to think
    through everyone whose job will be affected by the data and the software, and
    take their needs into consideration as you design your application. So, before
    we start coding away, we're going to put together some questions to help us gather
    these details.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这些群体有时会重叠。无论如何，思考一下所有可能受数据和软件影响的工作人员的职责，并在设计应用程序时考虑他们的需求，这很重要。因此，在我们开始编码之前，我们将准备一些问题，以帮助我们收集这些细节。
- en: Interviewing the interested parties
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 访谈相关方
- en: The first group you'll talk to are the lab technicians, from whom you'll try
    find out more detail about the data being recorded. This isn't always as easy
    as it sounds. Software needs absolute, black-and-white rules when dealing with
    data; people, on the other hand, tend to think in generalities about their data,
    and they often don't consider the exact details of limits or edge cases without
    some prompting. As an application designer, it's your job to come up with questions
    that will bring out the information you need.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你首先会与实验室技术人员交谈，试图了解更多关于正在记录的数据的细节。这并不像听起来那么简单。软件在处理数据时需要绝对的黑白规则；另一方面，人们往往对他们的数据持一般性看法，并且他们通常在没有提示的情况下不考虑极限或边缘情况的精确细节。作为应用程序的设计师，你的任务是提出能够揭示你需要的信息的问题。
- en: 'Here are some questions we can ask the lab technicians to learn more about
    the data:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们可以向实验室技术人员提出的问题，以了解更多关于数据的信息：
- en: What values are acceptable for character fields? Are any of them constrained
    to a discrete set of values?
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字符字段可接受的值是什么？是否有任何值被限制在离散的值集中？
- en: What units are represented by each of the numeric fields?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数值字段代表什么单位？
- en: Are numeric fields truly number-only fields? Would they ever need letters or
    symbols?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数值字段真的是仅数字字段吗？它们是否可能需要字母或符号？
- en: What range of numbers is acceptable for each numeric field?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数值字段可接受的数值范围是什么？
- en: How is unavailable data (such as from an equipment failure) notated?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可用数据（如设备故障）如何标记？
- en: Next, let's interview the users of the application. If we're making a program
    to help reduce user error, we have to understand those users and how they work.
    In the case of this application, our users will be the data entry staff. We need
    to ask them questions about their needs and workflow so that we can create an
    application that works well for them.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们采访应用程序的用户。如果我们正在制作一个旨在减少用户错误的程序，我们必须了解这些用户以及他们的工作方式。在这个应用程序的情况下，我们的用户将是数据录入人员。我们需要询问他们关于他们的需求和工作流程的问题，以便我们可以创建一个对他们来说效果良好的应用程序。
- en: 'Here are some good questions we can ask the data entry staff:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些我们可以向数据录入人员提出的好问题：
- en: How is the data formatted when you receive it?
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当你收到数据时，数据是如何格式化的？
- en: When is the data received and how soon is it entered? When's the latest it might
    be entered?
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据何时接收以及何时录入？最晚可能是什么时候录入？
- en: Are there fields that could be automatically populated? Should users be able
    to override the automatic values?
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有可以自动填充的字段？用户是否应该能够覆盖自动值？
- en: What's the overall technical ability of the users? Are they strong typists,
    or would they prefer a mouse-driven interface?
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户的整体技术能力如何？他们是优秀的打字员，还是更喜欢鼠标驱动的界面？
- en: What do you like about the current solution? What do you dislike?
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你喜欢当前解决方案的什么？你不喜欢什么？
- en: Do any users have visual or manual impairments that should be accommodated?
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有任何用户有视觉或手动障碍需要考虑？
- en: '**Listen to your users!** When talking to users about an application design,
    they may often put forward requests or ideas that are impractical, that don''t
    follow best practice, or that seem frivolous. For example, they may request that
    a button display an animation under certain conditions, that a particular field
    be yellow, or that a time field be represented as a set of dropdowns for hours
    and minutes. Rather than dismissing these ideas, try to understand the reasoning
    behind them, or the problem that prompted them. It will often uncover aspects
    of the data and the workflow you did not understand before, and lead to a better
    solution.'
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**倾听你的用户！** 当与用户讨论应用程序设计时，他们可能会经常提出不切实际、不符合最佳实践或看似琐碎的要求或想法。例如，他们可能会要求在特定条件下按钮显示动画，特定字段为黄色，或者时间字段以小时和分钟的下拉列表形式表示。与其摒弃这些想法，不如试图理解背后的推理或促使他们提出这些想法的问题。这通常会揭示你之前没有理解的数据和工作流程的方面，并导致更好的解决方案。'
- en: 'Once we have spoken with our users, it''s time to talk to the consumers of
    our data. In this case, that''s you! You already know a good deal about what you
    need and expect from the data, but even so, it''s important to reflect and consider
    how you would ideally like to receive data from this application. For example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们与用户交谈过，就轮到我们与数据消费者交谈了。在这种情况下，那就是你！你已经对需要和期望从数据中获得的内容有了很好的了解，但即便如此，反思并考虑你理想中希望从这个应用程序中接收数据的方式仍然很重要。例如：
- en: Is CSV really the best output format, or is that just what has always been used?
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSV真的是最好的输出格式，还是只是习惯上一直使用？
- en: Does the order of fields in the CSV matter? Are there constraints on the header
    values (no spaces, mixed case, and so on)?
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSV中字段的顺序重要吗？对标题值有约束（没有空格，大小写混合等）吗？
- en: How should outlier cases be handled by the application? What should they look
    like in the data?
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序应如何处理异常情况？它们在数据中应呈现什么样子？
- en: How should different objects like Boolean or date values be represented in the
    data?
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应如何在数据中表示不同的对象，如布尔值或日期值？
- en: Is there additional data that should be captured to help you accomplish your
    goals?
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否有额外的数据应该被捕获以帮助你实现目标？
- en: 'Finally, we need to understand the technology that our application will be
    working with; that is, the computers, networks, servers, and platforms available
    to accomplish the task. You come up with the following questions to ask the IT
    support staff:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要了解我们的应用程序将与之合作的技术；也就是说，用于完成任务的计算机、网络、服务器和平台。你可以提出以下问题向IT支持人员询问：
- en: What kind of computer does data entry use? How fast or powerful is it?
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据录入使用什么类型的计算机？它的速度或性能如何？
- en: What operating system platform does it run?
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它运行在什么操作系统平台上？
- en: Is Python available on these systems? If so, are there any Python libraries
    installed?
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些系统上是否有Python？如果有，是否安装了任何Python库？
- en: What other scripts or applications are involved in the current solution?
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前解决方案中涉及哪些其他脚本或应用程序？
- en: How many users need to use the program at once?
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要多少用户同时使用该程序？
- en: Inevitably, more questions will come up about the data, workflow, and technologies
    as the development process continues. For that reason, be sure to keep in touch
    with all these groups and ask more questions as the need arises.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 随着开发过程的继续，不可避免地会有更多关于数据、工作流程和技术的问题出现。因此，务必与所有这些团队保持联系，并在需要时提出更多问题。
- en: Analyzing what we've found out
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析我们所发现的内容
- en: 'You''ve done all your interviews with the interested parties, and now it''s
    time to look over your notes. You begin by writing down the basic information
    about operations at ABQ that you already know:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经与所有感兴趣的各方进行了访谈，现在是时候回顾您的笔记了。您首先写下您已经知道的ABQ运营的基本信息：
- en: Your ABQ facility has three greenhouses, each operating with a different climate,
    marked A, B, and C
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的ABQ设施有三个温室，每个温室使用不同的气候，分别标记为A、B和C
- en: Each greenhouse has 20 plots (labeled 1 through 20)
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个温室有20个图块（标记为1到20）
- en: There are currently four types of seed samples, each coded with a six-character
    label
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目前有四种类型的种子样本，每个样本都带有六位数的标签
- en: Each plot has 20 seeds of a given sample planted in it, as well as its own environmental
    sensor unit
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个图块中种植了20个给定样本的种子，以及它自己的环境传感器单元
- en: Information from the data originators
  id: totrans-63
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据提供者的信息
- en: Your talk with the lab technicians revealed a lot about the data. Four times
    a day, at 8:00, 12:00, 16:00, and 20:00, each technician checks the plots in his
    or her assigned lab. They use a paper form to record information about plants
    and environmental conditions at each plot, recording all numeric values to no
    more than two decimal places. This usually takes between 45 and 90 minutes, depending
    on how far along the plant growth has progressed.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 与实验室技术人员的交谈揭示了有关数据的大量信息。每天四次，在8:00、12:00、16:00和20:00，每位技术人员都会检查其分配的实验室中的图块。他们使用纸质表格记录每个图块中植物和环境条件的信息，并将所有数值记录到不超过两位小数。这通常需要45到90分钟，具体取决于植物生长的进度。
- en: Each plot has its own environmental sensor that detects the light, temperature,
    and humidity at the plot. Unfortunately, these devices are prone to temporary
    failure, indicated by an Equipment Fault light on the unit. Since a fault makes
    the environmental data suspect, they simply cross out the fields in those cases
    and don't record that data.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 每个图块都有自己的环境传感器，可以检测图块处的光、温度和湿度。不幸的是，这些设备容易发生暂时性故障，设备上的设备故障灯会指示这一点。由于故障会使环境数据可疑，他们只是在这些情况下划掉字段，并记录不记录这些数据。
- en: 'They provide you with an example copy of the paper form, which looks like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 他们为您提供了一份纸质表格的示例副本，看起来像这样：
- en: '![](img/B17578_02_01.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17578_02_01.png)'
- en: 'Figure 2.1: Paper form filled out by the lab technicians'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1：实验室技术人员填写的纸质表格
- en: 'Finally, the technicians tell you about the units and possible ranges of data
    for the fields, which you record in the following chart:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，技术人员会向您介绍字段的数据单位和可能的范围，您将在以下图表中记录：
- en: '| Field | Data type | Notes |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| 字段 | 数据类型 | 备注 |'
- en: '| Date | Date | The data collection date. Usually the current date. |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 日期 | 日期 | 数据收集日期。通常是当前日期。 |'
- en: '| Time | Time | The start of the period during which measurements were taken.
    One of 8:00, 12:00, 16:00, or 20:00. |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 时间 | 时间 | 测量开始的时间段。可以是8:00、12:00、16:00或20:00之一。 |'
- en: '| Lab | Character | The lab ID, either A, B, or C. |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 实验室 | 字符 | 实验室ID，可以是A、B或C。 |'
- en: '| Technician | Text | The name of the technician recording the data. |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 技术员 | 文本 | 记录数据的技师的姓名。 |'
- en: '| Plot | Integer | The plot ID, from 1 to 20. |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 图块 | 整数 | 图块ID，从1到20。 |'
- en: '| Seed Sample | Text | ID string for the seed sample. Always a six-character
    code containing digits 0 to 9 and capital letters A to Z. |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 种子样本 | 文本 | 种子样本的ID字符串。始终是一个包含数字0到9和字母A到Z的大写字母的六位代码。 |'
- en: '| Fault | Boolean | True if environmental equipment registered a failure, otherwise
    False. |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 故障 | 布尔值 | 如果环境设备记录了故障，则为真，否则为假。 |'
- en: '| Humidity | Decimal | The absolute humidity in g/m³, roughly between 0.5 and
    52.0. |'
  id: totrans-78
  prefs: []
  type: TYPE_TB
  zh: '| 湿度 | 小数 | g/m³的绝对湿度，大约在0.5到52.0之间。 |'
- en: '| Light | Decimal | The amount of sunlight at the plot center in kilolux, between
    0 and 100. |'
  id: totrans-79
  prefs: []
  type: TYPE_TB
  zh: '| 光照 | 小数 | 图块中心的光照量，单位为千勒克斯，介于0到100之间。|'
- en: '| Temperature | Decimal | The temperature at the plot, in degrees C; should
    be between 4 and 40. |'
  id: totrans-80
  prefs: []
  type: TYPE_TB
  zh: '| 温度 | 小数 | 图块中的温度，单位为摄氏度；应在4到40之间。|'
- en: '| Blossoms | Integer | The number of blossoms on the plants in a plot. No maximum,
    but unlikely to approach 1,000. |'
  id: totrans-81
  prefs: []
  type: TYPE_TB
  zh: '| 花蕾数量 | 整数 | 图块中植物上的花蕾数量。没有最大值，但不太可能接近1,000。|'
- en: '| Fruit | Integer | The number of fruits on the plant. No maximum, but unlikely
    to ever approach 1,000. |'
  id: totrans-82
  prefs: []
  type: TYPE_TB
  zh: '| 果实数量 | 整数 | 植物上的果实数量。没有最大值，但不太可能达到1,000。|'
- en: '| Plants | Integer | The number of plants in the plot; should be no more than
    20. |'
  id: totrans-83
  prefs: []
  type: TYPE_TB
  zh: '| 植物数量 | 整数 | 图块中的植物数量；不应超过20。|'
- en: '| Max Height | Decimal | The height of the tallest plant in the plot, in cm.
    No maximum, but unlikely to approach 1,000. |'
  id: totrans-84
  prefs: []
  type: TYPE_TB
  zh: '| 最大高度 | 小数 | 图块中最高的植物高度，单位为厘米。没有最大值，但不太可能接近1,000。|'
- en: '| Median Height | Decimal | The median height of the plants in the plot, in
    cm. No maximum, but unlikely to approach 1,000. |'
  id: totrans-85
  prefs: []
  type: TYPE_TB
  zh: '| 中位数高度 | 小数 | 图块中植物的中位数高度，单位为厘米。没有最大值，但不太可能接近1,000。|'
- en: '| Min Height | Decimal | The height of the smallest plant in the plot, in cm.
    No maximum, but unlikely to approach 1,000. |'
  id: totrans-86
  prefs: []
  type: TYPE_TB
  zh: '| 最小高度 | 小数 | 图块中最矮的植物高度，单位为厘米。没有最大值，但不太可能接近1,000。|'
- en: '| Notes | Long Text | Additional observations about the plant, data, instruments,
    and so on. |'
  id: totrans-87
  prefs: []
  type: TYPE_TB
  zh: '| 备注 | 长文本 | 关于植物、数据、仪器等方面的额外观察。|'
- en: Information from the users of the application
  id: totrans-88
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自应用程序用户的信息
- en: Your session with the data entry staff yielded good information about their
    workflow and practical concerns. You learn that the lab technicians drop off their
    paper forms as they're completed, from which the data is typically entered right
    away and usually on the same day as it's handed in.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 与数据录入人员会话的结果是获得了关于他们工作流程和实际问题的良好信息。你了解到实验室技术人员在完成纸质表格后将其提交，数据通常立即录入，并且通常在提交当天完成。
- en: The data entry staff are currently using a spreadsheet (LibreOffice Calc) to
    enter the data. They like that they can use copy and paste to bulk-fill fields
    with repeated data like the date, time, and technician name. They also note that
    the autocompletion feature of LibreOffice is often helpful in text fields, but
    sometimes causes accidental data errors in the number fields.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 数据录入人员目前正在使用电子表格（LibreOffice Calc）录入数据。他们喜欢能够使用复制粘贴来批量填充重复数据，如日期、时间和技术人员姓名。他们还指出，LibreOffice的自动完成功能在文本字段中通常很有帮助，但有时会在数字字段中导致意外的数据错误。
- en: 'You take these notes about how they enter data from the forms:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 你记录了他们如何从表格中录入数据的以下信息：
- en: Dates are entered in month/day/year format, since this is how LibreOffice formats
    them by default with the system's locale setting.
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期以月/日/年格式录入，因为这是LibreOffice默认使用系统区域设置进行格式化的方式。
- en: Time is entered as 24-hour time.
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时间以24小时制录入。
- en: Technicians are entered as first initial and last name.
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 技术人员以首字母和姓氏录入。
- en: In the case of equipment faults, the environmental data is entered as `N/A`.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在设备故障的情况下，环境数据录入为“N/A”。
- en: The CSV file is generally created one lab at a time in plot order (from 1 to
    20).
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CSV文件通常按图块顺序（从1到20）逐个实验室创建。
- en: There are four data entry clerks in total, but only one working at any one time;
    while interviewing the clerks, you learn that one has red-green color blindness,
    and another has trouble using a mouse due to RSI issues. All are reasonably computer
    literate and prefer keyboard entry to mouse entry as it allows them to work faster.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 总共有四位数据录入员，但任何时候只有一位在工作；在采访这些职员时，你了解到其中一位有红绿色盲，另一位由于RSI问题使用鼠标有困难。他们都是相当懂电脑的，并且更喜欢键盘输入而不是鼠标输入，因为这使他们能够更快地工作。
- en: One user in particular had some ideas about how your program should look. He
    suggested doing the labs as a set of checkboxes, and to have separate pop-up dialogs
    for plant data and environmental data.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 特别有一位用户对您的程序的外观提出了一些想法。他建议将实验作为一组复选框进行，并为植物数据和环境数据设置单独的弹出对话框。
- en: Information from technical support
  id: totrans-99
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自技术支持的信息
- en: Speaking with IT personnel, you learn that the data entry staff have only a
    single PC workstation, which they share. It is an older system running Debian
    GNU/Linux, but it performs adequately. Python3 and Tkinter are already installed
    as part of the base system, though they are slightly older versions than you have
    on your workstation. The data entry staff save their CSV data for the current
    day to a file called `abq_data_record.csv`. When all the data is entered, the
    data entry staff have a script they can run to email you the file and build a
    new, empty file for the next day. The script also backs up the old file with a
    date-stamp so it can be pulled up later for corrections.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 与IT人员交谈后，你了解到数据录入人员只有一台PC工作站，他们共享这台机器。这是一台运行Debian GNU/Linux的较老系统，但性能足够。Python3和Tkinter作为基础系统的一部分已经安装，尽管它们比你在工作站上的版本稍旧。数据录入人员将当天的CSV数据保存到名为
    `abq_data_record.csv` 的文件中。当所有数据都录入完毕后，数据录入人员可以运行一个脚本来通过电子邮件发送文件并为第二天创建一个新的空文件。该脚本还会备份带有日期戳的旧文件，以便稍后可以调出来进行更正。
- en: Information from the data consumer
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自数据消费者的信息
- en: 'As the main data consumer, it would be pretty easy for you to just stick with
    what you know already; nevertheless, you take the time to review a recent copy
    of `abq_data_record.csv`, which looks something like this:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 作为主要的数据消费者，你很容易就坚持你已经知道的东西；然而，你花了时间去审查一份最近的 `abq_data_record.csv` 文件副本，它看起来像这样：
- en: '![](img/B17578_02_02.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17578_02_02.png)'
- en: 'Figure 2.2: The abq_data_record.csv file'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2：abq_data_record.csv文件
- en: 'In reflecting on this, you realize there are a few changes to the status quo
    that could make life easier for you as you do your data analysis:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在反思这一点时，你意识到有一些改变现状的方法可以使你在进行数据分析时生活变得更轻松：
- en: It would be great to have the files date-stamped right away. Currently, you
    have an inbox full of files called `abq_data_record.csv` and no good way to tell
    them apart.
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件能立即打上日期戳就太好了。目前，你的收件箱里满是名为 `abq_data_record.csv` 的文件，而且没有好的方法来区分它们。
- en: It would be helpful if the data in the files were saved in a way that Python
    could more easily parse without ambiguity. For example, dates are currently saved
    with the local month/day/year formatting, but ISO-format would be less problematic.
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果文件中的数据以Python可以更轻松解析且无歧义的方式保存，那就太有帮助了。例如，日期目前以本地月/日/年格式保存，但ISO格式会更好。
- en: You'd like a field that indicates explicitly when there is an equipment fault,
    rather than just implying it with missing environmental data.
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你希望有一个字段明确指示设备故障发生的时间，而不仅仅是通过缺失的环境数据来暗示。
- en: The `N/A` is something you just have to filter out when you process the data.
    It would be nice if an equipment fault would just blank out the environmental
    data fields so that the file doesn't contain useless data like that.
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`N/A` 是你在处理数据时必须过滤掉的内容。如果设备故障能直接清除环境数据字段，那么文件就不会包含那样的无用数据就好了。'
- en: The current CSV headers are cryptic, and you're always having to translate them
    in your report scripts. It would be good to have readable headers.
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前的CSV标题很晦涩，你总是在报告脚本中需要翻译它们。有可读的标题会很好。
- en: These changes won't just make your job easier, they will also leave the data
    in a more usable state than it was before. Legacy data formats like these CSV
    files are often fraught with artifacts from obsolete software environments or
    outdated workflows. Improving the clarity and readability of the data will help
    anyone trying to use it in the future as the lab's usage of the data evolves.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 这些改变不仅会使你的工作变得更轻松，而且还会使数据处于比之前更可用的状态。像这些CSV文件这样的遗留数据格式通常充满了来自过时软件环境或过时工作流程的遗迹。提高数据的清晰度和可读性将有助于未来试图使用这些数据的人，随着实验室对数据的使用不断演变。
- en: Documenting specification requirements
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 记录规范要求
- en: Now that you've assembled your information about the data, people, and technologies
    affected by your application, it's time to write up a **software specification**.
    Software specifications can range from very formal, contractual documents that
    include time estimates and deadlines to a simple set of descriptions of what the
    programmer intends to build. The purpose of the specification is to give everyone
    involved in the project a point of reference for what the developer will create.
    It spells out the problem to be solved, the functionality required, and the scope
    of what the program should and shouldn't do.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经收集了关于受你的应用程序影响的数据、人员和技术的信息，现在是时候编写一个**软件规范**了。软件规范可能从非常正式、包含时间估计和截止日期的合同文件，到程序员打算构建的简单描述集合。规范的目的是为所有参与项目的人提供一个参考点，了解开发者将创建什么。它明确了要解决的问题、所需的功能以及程序应该和不应该做什么的范围。
- en: Your scenario is rather informal and your application is simple, so you do not
    need a detailed formal specification in this case. However, a basic write-up of
    what you know will make sure that you, your employer, and the users all understand
    the essentials of the application you will be writing.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你的场景相当非正式，你的应用程序也很简单，所以在这种情况下你不需要详细的正式规范。然而，一个基本的知识概述将确保你、你的雇主和用户都能理解你将要编写的应用程序的基本要素。
- en: Contents of a simple specification
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 简单规范的目录
- en: 'We''ll start our specification with the following outline of the items we need
    to write:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从以下我们需要编写的项目概要开始编写规范：
- en: '**Description**: This is one or two sentences that describe the primary purpose,
    function, and goals of the application. Think of it as the program''s mission
    statement.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**描述**：这是一句或两句描述应用程序的主要目的、功能和目标的话。把它看作是程序的使命宣言。'
- en: '**Requirements**: This section is a list of specific things the program must
    be able to do in order to be minimally functional. It can include both functional
    and non-functional requirements.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**需求**：这一部分是程序必须能够执行的具体事项列表，以便其具有最小功能。它可以包括功能和非功能需求。'
- en: '**Functional requirements** are concrete goals that the program must achieve;
    for example, the business logic that it must perform or the output format it must
    produce. Listing these helps us know when our program is ready for production
    use.'
  id: totrans-119
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能需求**是程序必须实现的明确目标；例如，它必须执行的业务逻辑或它必须产生的输出格式。列出这些内容有助于我们了解何时我们的程序准备好投入生产使用。'
- en: '**Non-functional requirements** tend to be less specific and focus on user
    expectations and general goals, for example, usability, performance, or accessibility
    requirements. Although these aren''t always measurable goals, they help to guide
    the focus of our development.'
  id: totrans-120
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**非功能需求**通常不那么具体，关注用户期望和一般目标，例如可用性、性能或可访问性要求。尽管这些目标并不总是可衡量的，但它们有助于指导我们的开发重点。'
- en: '**Functionality not required**: This section is a list of things the program
    does not need to do; it exists to clarify the scope of the software and make sure
    nobody expects unreasonable things from the application. We don''t need to include
    every possible thing our application won''t do; naturally, our program won''t
    make toast or do the laundry. However, if there are features we are not implementing
    that users might reasonably expect, this is a good place to clarify what won''t
    be done.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不需要的功能**：这一部分是程序不需要执行的事项列表；它存在是为了阐明软件的范围，确保没有人对应用程序有非分之想。我们不需要列出应用程序不会做的每一件事；自然，我们的程序不会烤面包或洗衣服。然而，如果我们没有实现用户可能合理期望的功能，这里是一个澄清不会做什么的好地方。'
- en: '**Limitations**: This is a list of constraints under which the program must
    operate, both technological and human.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**限制**：这是程序必须在其下运行的约束列表，包括技术和人为的约束。'
- en: '**Data dictionary**: This is a detailed list of the data fields in the application
    and their parameters. A data dictionary can get quite lengthy, and may be worthy
    of a document of its own. It will not only be useful during the development of
    our application but will become a critical reference to the data produced by the
    application as the application expands and the data gets utilized in other contexts.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据字典**：这是应用程序中数据字段及其参数的详细列表。数据字典可能会相当长，可能值得成为一个单独的文档。它不仅在我们开发应用程序期间有用，而且随着应用程序的扩展和数据在其他环境中被利用，它将成为应用程序产生的数据的关键参考。'
- en: Writing the ABQ data entry program specification
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编写ABQ数据录入程序规范
- en: You could write a specification in your favorite word processor, but ideally
    the specification should be treated as a part of your code; it will need to be
    kept with the code and synchronized with any changes to the application. For that
    reason, we're going to write our specification in our code editor using the **reStructuredText**
    markup language.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以用你喜欢的文字处理器编写规范，但理想情况下，规范应该被视为代码的一部分；它需要与代码一起保存，并与应用程序的任何更改保持同步。因此，我们将使用**reStructuredText**标记语言在我们的代码编辑器中编写规范。
- en: For Python documentation, reStructuredText, or reST, is the official markup
    language. The Python community encourages the use of reST to document Python projects,
    and many packaging and publication tools used in the Python community expect the
    reST format. For an in-depth coverage of reST, see *Appendix A*, *A Quick Primer
    on reStructuredText*, or see the official documentation at `https://docutils.sourceforge.io/rst.html`.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python文档、reStructuredText或reST，是官方的标记语言。Python社区鼓励使用reST来记录Python项目，Python社区中使用的许多打包和发布工具都期望reST格式。要深入了解reST，请参阅*附录A*，*reStructuredText快速入门*，或查看官方文档在`https://docutils.sourceforge.io/rst.html`。
- en: 'Let''s start with the `Description` section of our documentation:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从文档的“描述”部分开始：
- en: '[PRE0]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, let''s list the `Requirements`. Remember that functional requirements
    are objectively attainable goals, like input and output requirements, calculations
    that must be done, or features that must be present. Non-functional requirements,
    on the other hand, are subjective or best-effort goals. Look through your findings
    from the last section, and consider which needs are which. You should come up
    with something like the following:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们列出“需求”。记住，功能需求是客观可达到的目标，如输入和输出需求、必须完成的计算或必须存在的功能。另一方面，非功能需求是主观的或尽力而为的目标。回顾上一节的研究结果，考虑哪些需求是哪一种。你应该得出以下类似的结果：
- en: '[PRE1]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, we''ll reign in the scope of the program with the `Functionality Not
    Required` section. Remember that this is only an entry form for now; editing or
    deletion of data will be handled in the spreadsheet application. We''ll clarify
    this as follows:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将通过“不需要的功能”部分来缩小程序的范围。记住，现在这只是一个输入表单；数据的编辑或删除将由电子表格应用程序处理。我们将如下明确这一点：
- en: '[PRE2]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'For the `Limitations` section, remember that we have some users with physical
    constraints, as well as hardware and operating system constraints. It should look
    something like this:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 对于“限制”部分，请记住，我们有一些用户有身体限制，以及硬件和操作系统限制。它应该看起来像这样：
- en: '[PRE3]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Finally, we will write the data dictionary. This is essentially the table we
    made previously, but we''ll break out range, data types, and units for quick reference,
    as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将编写数据字典。这本质上是我们之前制作的表格，但我们将会将范围、数据类型和单位分开，以便快速参考，如下所示：
- en: '[PRE4]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: That's our specification for now! The specification is very likely to grow,
    change, or evolve in complexity as we discover new needs, but it gives us a great
    starting point for designing the first version of our application.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 目前为止，这就是我们的规范！随着我们发现新的需求，规范很可能增长、变化或变得更加复杂，但它为我们设计应用程序的第一版提供了一个很好的起点。
- en: Designing the application
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计应用程序
- en: With our specification in hand and our requirements clear, it's time to start
    designing our solution. The main focus of our application is the data entry form
    itself, so we'll begin with that GUI component.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 拿着我们的规范和明确的需求，现在是时候开始设计我们的解决方案了。我们应用程序的主要焦点是数据输入表单本身，因此我们将从这里开始这个GUI组件的设计。
- en: 'We''re going to create a basic design for our form in three steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将分三步为我们的表单创建一个基本设计：
- en: Determine the appropriate input widget type for each data field
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确定每个数据字段的适当输入小部件类型
- en: Group together related items to create a sense of organization
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将相关项目分组在一起，以创建一种组织感
- en: Lay out our widgets within their groups
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在其组内布局我们的小部件
- en: Deciding on input widgets
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 决定输入控件
- en: Without committing ourselves to a particular GUI library or widget set, we can
    start our form design by deciding on an appropriate input widget type for each
    field. Most toolkits come with the same basic types of inputs for different types
    of data.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有承诺特定的GUI库或小部件集的情况下，我们可以通过为每个字段决定适当的输入小部件类型来开始表单设计。大多数工具包都为不同类型的数据提供了相同的基本输入类型。
- en: 'We''ve already seen some of these in our look at Tkinter, but let''s see what
    sort of options are likely to be available:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在查看Tkinter时已经看到了一些这些，但让我们看看可能有哪些选项可用：
- en: '| Widget type | Tkinter example | Used for |'
  id: totrans-147
  prefs: []
  type: TYPE_TB
  zh: '| 小部件类型 | Tkinter示例 | 用途 |'
- en: '| Line entry | `Entry` | Single-line strings |'
  id: totrans-148
  prefs: []
  type: TYPE_TB
  zh: '| 行输入 | `Entry` | 单行字符串 |'
- en: '| Number entry | `Spinbox` | Integer or decimal values |'
  id: totrans-149
  prefs: []
  type: TYPE_TB
  zh: '| 数字输入 | `Spinbox` | 整数或小数值 |'
- en: '| Select list (drop-down) | `Listbox`, `OptionMenu` | Choice between many distinct
    values |'
  id: totrans-150
  prefs: []
  type: TYPE_TB
  zh: '| 选择列表（下拉列表） | `Listbox`，`OptionMenu` | 在许多不同的值之间进行选择 |'
- en: '| Check box | `Checkbutton` | True/false value |'
  id: totrans-151
  prefs: []
  type: TYPE_TB
  zh: '| 复选框 | `Checkbutton` | 真假值 |'
- en: '| Radio button | `Radiobutton` | Choice between a few distinct values |'
  id: totrans-152
  prefs: []
  type: TYPE_TB
  zh: '| 单选按钮 | `Radiobutton` | 在几个不同的值之间进行选择 |'
- en: '| Text entry | `Text` | Multi-line text entry |'
  id: totrans-153
  prefs: []
  type: TYPE_TB
  zh: '| 文本输入 | `Text` | 多行文本输入 |'
- en: '| Date entry | (None specific) | Dates |'
  id: totrans-154
  prefs: []
  type: TYPE_TB
  zh: '| 日期输入 | （无特定） | 日期 |'
- en: 'Looking at our data dictionary, what sort of widgets should we pick out for
    each of our fields? Let''s consider:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 查看我们的数据字典，我们应该为每个字段选择哪种小部件？让我们考虑一下：
- en: There are several decimal fields, many with clear boundary ranges, like Min
    Height, Max Height, Median Height, Humidity, Temperature, and Light. We'll need
    some kind of number entry, perhaps a Tkinter `Spinbox`, for these.
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有几个小数字段，许多具有清晰的边界范围，如最小高度、最大高度、中等高度、湿度、温度和光照。我们需要某种类型的数字输入，可能是一个Tkinter `Spinbox`。
- en: There are also some integer fields, such as Plants, Blossoms, and Fruit. Again,
    a number entry like the `Spinbox` widget is the right choice.
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此外，还有一些整数字段，如植物、花蕾和果实。同样，像`Spinbox`小部件这样的数字输入是正确的选择。
- en: 'There are a couple of fields with a limited set of possible values: Time and
    Lab. For these we could go with radio buttons or a select list of some kind. It
    really depends on the number of options and how we want to lay it out: radio buttons
    take a lot of space with more than a few choices, but select list widgets take
    additional interaction and slow down a user. We''ll choose a select/drop-down
    for the Time field, and radio buttons for the Lab field.'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有几个字段具有有限的可能值：时间和实验室。对于这些，我们可以选择单选按钮或某种选择列表。这完全取决于选项的数量和我们的布局方式：当有超过几个选项时，单选按钮会占用很多空间，但选择列表小部件需要额外的交互并减慢用户速度。我们将为时间字段选择选择/下拉列表，为实验室字段选择单选按钮。
- en: 'The Plot field is a tricky case. At face value, it looks like an integer field,
    but think about it: the plots could just as well be identified by letters, or
    symbols, or names. Numbers just happen to be an easy set of values with which
    to assign arbitrary identifiers. The Plot ID, like the Lab ID, is actually a constrained
    set of values; so, it would make more sense to use a select list here.'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图表字段是一个棘手的情况。从表面上看，它看起来像是一个整数字段，但想想看：图表也可以用字母、符号或名称来标识。数字只是任意标识符的一个简单值集合。图表ID，就像实验室ID一样，实际上是一个受限的值集；因此，在这里使用选择列表会更有意义。
- en: The Notes field is multiline text, so the Text widget is appropriate here.
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备注字段是多行文本，因此Text小部件在这里是合适的。
- en: There is one Boolean field, Fault. A check box type widget is a good choice
    here, especially since this value is normally false and represents an exceptional
    circumstance.
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个布尔字段，故障。在这里使用复选框类型的小部件是一个不错的选择，尤其是因为这个值通常是假的，代表一种特殊情况。
- en: For the Date field, it would be nice to use a date entry of some sort. We don't
    know of one in Tkinter yet, but we'll see if we can solve that when we write our
    application.
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于日期字段，使用某种形式的日期输入会更好。我们目前还没有在Tkinter中找到这样的输入方式，但当我们编写应用程序时，我们会看看是否能够解决这个问题。
- en: The remaining lines are simple, one-line character fields. We'll use a text
    entry-type widget for those fields.
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 剩余的行是简单的单行字符字段。我们将为这些字段使用文本输入类型的小部件。
- en: 'Our final analysis comes to the following:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最终的分析结果如下：
- en: '| Field | Widget type |'
  id: totrans-165
  prefs: []
  type: TYPE_TB
  zh: '| 字段 | 小部件类型 |'
- en: '| Date | Date entry |'
  id: totrans-166
  prefs: []
  type: TYPE_TB
  zh: '| 日期 | 日期输入 |'
- en: '| Time | Select list |'
  id: totrans-167
  prefs: []
  type: TYPE_TB
  zh: '| 时间 | 选择列表 |'
- en: '| Lab | Radio buttons |'
  id: totrans-168
  prefs: []
  type: TYPE_TB
  zh: '| 实验室 | 单选按钮 |'
- en: '| Technician | Text entry |'
  id: totrans-169
  prefs: []
  type: TYPE_TB
  zh: '| 技术员 | 文本输入 |'
- en: '| Plot | Select list |'
  id: totrans-170
  prefs: []
  type: TYPE_TB
  zh: '| 图表 | 选择列表 |'
- en: '| Seed Sample | Text entry |'
  id: totrans-171
  prefs: []
  type: TYPE_TB
  zh: '| 种子样本 | 文本输入 |'
- en: '| Fault | Check box |'
  id: totrans-172
  prefs: []
  type: TYPE_TB
  zh: '| 故障 | 复选框 |'
- en: '| Humidity | Number entry |'
  id: totrans-173
  prefs: []
  type: TYPE_TB
  zh: '| 湿度 | 数字输入 |'
- en: '| Light | Number entry |'
  id: totrans-174
  prefs: []
  type: TYPE_TB
  zh: '| 光照 | 数字输入 |'
- en: '| Temperature | Number entry |'
  id: totrans-175
  prefs: []
  type: TYPE_TB
  zh: '| 温度 | 数字输入 |'
- en: '| Blossoms | Number entry |'
  id: totrans-176
  prefs: []
  type: TYPE_TB
  zh: '| 花蕾 | 数字输入 |'
- en: '| Fruit | Number entry |'
  id: totrans-177
  prefs: []
  type: TYPE_TB
  zh: '| 果实 | 数字输入 |'
- en: '| Plants | Number entry |'
  id: totrans-178
  prefs: []
  type: TYPE_TB
  zh: '| 植物 | 数字输入 |'
- en: '| Max Height | Number entry |'
  id: totrans-179
  prefs: []
  type: TYPE_TB
  zh: '| 最大高度 | 数字输入 |'
- en: '| Median Height | Number entry |'
  id: totrans-180
  prefs: []
  type: TYPE_TB
  zh: '| 中等高度 | 数字输入 |'
- en: '| Min Height | Number entry |'
  id: totrans-181
  prefs: []
  type: TYPE_TB
  zh: '| 最小高度 | 数字输入 |'
- en: '| Notes | Text entry |'
  id: totrans-182
  prefs: []
  type: TYPE_TB
  zh: '| 备注 | 文本输入 |'
- en: Bear in mind, this analysis is not set in stone; it will almost certainly be
    revised as we receive feedback from our users, as the application's use case evolves,
    or as we become more familiar with the capabilities and limitations of Python
    and Tkinter. This is simply a starting place from which we can create an initial
    design.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，这种分析并不是一成不变的；随着我们从用户那里收到反馈，随着应用程序的使用案例的发展，或者随着我们更熟悉Python和Tkinter的功能和限制，它几乎肯定会进行修订。这只是一个起点，我们可以从中创建一个初步设计。
- en: Grouping our fields
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分组我们的字段
- en: Humans tend to get confused when staring at a huge wall of inputs in no particular
    order. You can do your users a big favor by breaking up the input form into sets
    of related fields. Of course, that assumes that your data has related sets of
    fields, doesn't it? Does our data have groups?
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 当人们盯着一大堆无序的输入时，往往会感到困惑。通过将输入表分成相关字段集，你可以为你的用户提供很大的便利。当然，这假设你的数据有相关的字段集，不是吗？我们的数据有分组吗？
- en: 'Recall some of the information we gathered during our interviews:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下我们在访谈中收集的一些信息：
- en: One of the employees requested separate forms for "environmental data" and "plant
    data"
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其中一位员工要求为“环境数据”和“植物数据”分别制作表格
- en: The layout of the paper form has Time, Date, Lab, and Technician, all together
    at the top; these things help identify the data recording session
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 纸质表格的布局将时间、日期、实验室和技术员全部放在顶部；这些信息有助于识别数据记录会话
- en: Details like this tell you a lot about how your users *think* about their data,
    and that should inform how the application *presents* that data.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的细节告诉你很多关于用户如何*思考*他们的数据，这应该会指导应用程序如何*呈现*这些数据。
- en: 'Considering all this, you identify the following related groups:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑所有这些，你确定了以下相关组：
- en: The Date, Lab, Plot, Seed Sample, Technician, and Time fields are identifying
    data or metadata about the record itself. You could group these together under
    a heading calling *Record Information*.
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 日期、实验室、Plot、种子样本、技术人员和时间字段是关于记录本身的标识数据或元数据。你可以将这些信息一起分组在标题为*记录信息*下。
- en: The Blossoms, Fruit, three Height fields, and Plants fields are all measurements
    that have to do with the plants in the Plot field. You could group these together
    under the heading *Plant Data*.
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 花朵、水果、三个高度字段和植物字段都是与Plot字段中的植物相关的测量值。你可以将这些信息一起分组在*植物数据*标题下。
- en: The Humidity, Light, Temperature, and Equipment Fault fields are all information
    from the environmental sensor. You could group these as *Environmental Data*.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 湿度、光照、温度和设备故障字段都是来自环境传感器的信息。你可以将这些信息分组为*环境数据*。
- en: The Notes field could be related to anything, so it's in a category of its own.
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 笔记字段可能与任何事物相关，所以它属于一个单独的类别。
- en: 'Most GUI libraries offer a variety of ways to group sections of a form together;
    think of some you have seen. A few are listed in this table:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数GUI库都提供了多种方式来将表单的各个部分分组在一起；想想你看到过的。以下是一些列出的例子：
- en: '| Widget type | Description |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| 小部件类型 | 描述 |'
- en: '| Tabs (notebook) | Allows multiple tabbed pages that the user can switch between
    |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 标签页（笔记本） | 允许用户在多个标签页之间切换 |'
- en: '| Frames/boxes | Draws boxes around sections of a form, sometimes with a header
    |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 框架/框 | 在表单的各个部分周围绘制框，有时带有标题 |'
- en: '| Accordion | Divides a form into sections that can be hidden or expanded one
    at a time |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 手风琴 | 将表单分成可以隐藏或逐个展开的各个部分 |'
- en: Framed boxes are the simplest way to break up a GUI. In cases where there are
    a lot of fields, a tabbed or accordion widget can help by hiding fields the user
    isn't working with. However, they require additional user interaction to switch
    between pages or sections. You decide, after some consideration, that framed boxes
    with headers will be perfectly adequate for this form. There are not really enough
    fields to justify separate pages, and switching between them would just add more
    overhead to the data entry process.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 框架是分割GUI的最简单方式。在有很多字段的情况下，标签页或手风琴小部件可以通过隐藏用户未使用的字段来提供帮助。然而，它们需要额外的用户交互来切换页面或部分。经过一些考虑，你决定带有标题的框架将完全适合这个表单。实际上没有足够的字段来证明需要单独的页面，而且切换它们只会给数据输入过程增加更多开销。
- en: Laying out the form
  id: totrans-201
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布置表单
- en: 'So far, we know that we have 17 inputs, which are grouped as follows:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们知道我们有17个输入，它们被分组如下：
- en: Six fields under Record Information
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六个在记录信息下的字段
- en: Four fields under Environmental Data
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四个在环境数据下的字段
- en: Six fields under Plant Data
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六个在植物数据下的字段
- en: One large Notes field
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个大的笔记字段
- en: We want to group the preceding inputs using some kind of box or frame with a
    header label. Notice that two of the first three sections have widgets in multiples
    of three. That suggests that we could arrange them in a grid with three items
    across. How should we order the fields within each group?
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想使用某种带有标题标签的框或框架来分组前面的输入。注意，前三个部分中的两个部分有多个小部件。这表明我们可以将它们排列成一个每行有三项的网格。我们应该如何在每个组内排序字段？
- en: Ordering of fields seems like a trivial item, but for the user it can make a
    significant difference in usability. Users who have to jump around a form haphazardly
    to match their workflow are more likely to make mistakes.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 字段的排序看似微不足道，但对于用户来说，它可能在可用性上产生重大差异。那些必须随意在表单中跳转以匹配其工作流程的用户更有可能出错。
- en: As you learned, the data is entered from paper forms filled out by the lab technicians.
    Refer back to the screenshot of the paper form shown in *Figure 2.1* in the previous
    section. It looks like items are mostly grouped the way our records are grouped,
    so we'll use the ordering on this form to order our fields. That way, data entry
    clerks can zip right through the form from top to bottom, left to right, without
    having to bounce around the screen.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所学的，数据是从实验室技术人员填写的纸质表格中输入的。请参考前一小节中显示的纸质表格截图 *图2.1*。看起来项目大多是以我们记录的方式分组，因此我们将使用此表单上的顺序来排序我们的字段。这样，数据录入员就可以从上到下、从左到右快速浏览整个表单，而无需在屏幕上四处跳转。
- en: Remember, user workflow is important! When designing a new application to replace
    some part of an existing procedure, it's crucial to respect the established workflow.
    While improving the status quo may require adjusting the workflow, be careful
    that you aren't making someone else's job harder without a good reason.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，用户工作流程很重要！当设计一个新的应用程序来替代现有流程的一部分时，尊重既定的工作流程至关重要。虽然改善现状可能需要调整工作流程，但请务必注意，在没有充分理由的情况下，不要让别人的工作变得更难。
- en: 'One last consideration in our design is where to place field labels in relation
    to the fields. There is a good deal of debate in the UI design community over
    the best placement of labels, but the consensus is that one of the following two
    options is best:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计中的最后一个考虑因素是字段标签相对于字段的位置。在UI设计社区中，关于标签最佳放置位置有很多争议，但共识是以下两种选项之一最佳：
- en: Labels above fields
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段上方的标签
- en: Labels to the left of fields
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字段左侧的标签
- en: 'You might try sketching out both to see which you prefer, but for this application,
    labels above fields will probably work better for the following reasons:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以尝试绘制两种方案，看看你更喜欢哪一种，但在这个应用程序中，字段上方的标签可能更适合以下原因：
- en: Since both fields and labels are rectangular in shape, our form will be more
    compact by stacking them
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于字段和标签都是矩形的，因此通过堆叠它们，我们的表单将更加紧凑。
- en: It's a lot easier to make the layout work, since we don't have to find a label
    width that works for all the labels without distancing them too far from the fields
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于我们不需要找到一个适用于所有标签且不会使标签与字段距离过远的标签宽度，因此布局工作会容易得多。
- en: The one exception is the check button field; check buttons are typically labeled
    to the right of the widget.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的例外是复选框字段；复选框通常在控件右侧标注。
- en: 'Take a moment to make a mockup of your form, using paper and pencil, or a drawing
    program if you prefer. Your form should look something like this:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 请花点时间用纸笔或如果你更喜欢的话，用绘图程序制作一个表单的草图。你的表单应该看起来像这样：
- en: '![](img/B17578_02_03.png)'
  id: totrans-219
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17578_02_03.png)'
- en: 'Figure 2.3: The form layout'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3：表单布局
- en: Laying out the application
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布置应用程序
- en: 'With your form designed, it''s time to consider the rest of the application''s
    GUI:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的表单设计完成后，是时候考虑应用程序其余部分的GUI了：
- en: You'll need a save button to trigger storage of the entered data.
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你需要一个保存按钮来触发已输入数据的存储。
- en: It's customary to include a button to reset the form, so the user can start
    over if needed.
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通常，我们会包括一个重置表单的按钮，以便用户在需要时可以重新开始。
- en: Sometimes, we might need to provide status information to the user. For example,
    we might want to let them know when a record was successfully saved, or if there
    is an error in a particular field. Applications typically have a **status bar**
    that displays these kinds of messages at the bottom of the window.
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有时，我们可能需要向用户提供状态信息。例如，我们可能想让他们知道记录是否成功保存，或者特定字段中是否有错误。应用程序通常有一个 **状态栏**，在窗口底部显示这些类型的消息。
- en: Finally, it might be good to have a header indicating what the form is.
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，最好有一个标题来表明表单的内容。
- en: 'Adding the following things to our sketch, we have something like the following
    screenshot:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的草图添加以下内容后，我们会有如下截图所示的内容：
- en: '![](img/B17578_02_04.png)'
  id: totrans-228
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B17578_02_04.png)'
- en: 'Figure 2.4: The application layout'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：应用程序布局
- en: Looks good! Your final step is to show these designs to your users and the director
    for any feedback or approval. Good luck!
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错！您的最后一步是将这些设计展示给用户和主管，以获取任何反馈或批准。祝您好运！
- en: Keep stakeholders – your boss, users, and others who will be affected by your
    program – involved as much as possible in your application design process. This
    reduces the possibility that you'll have to go back and redesign your application
    later.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 尽可能让利益相关者——您的老板、用户以及将受您的程序影响的其他人——尽可能参与到您的应用程序设计过程中。这减少了您以后不得不重新设计应用程序的可能性。
- en: Evaluating technology options
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估技术选项
- en: Before we start coding, let's take a moment to evaluate the technology choices
    available to implement this design.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编码之前，让我们花一点时间来评估可用于实现此设计的现有技术选择。
- en: Naturally, we're going to build this form using Python and Tkinter, because
    that's what this book is about. However, in a real-world situation it's worth
    asking whether Tkinter is really a good choice of technology for the application.
    Many criteria come into play when making decisions about languages, libraries,
    and other technologies used in implementing an application, including performance,
    feature availability, cost and license, platform support, and developer knowledge
    and confidence.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，我们将使用Python和Tkinter来构建这个表单，因为这正是本书的主题。然而，在现实世界中，值得问一问Tkinter是否真的是应用程序技术的最佳选择。在决定用于实现应用程序的语言、库和其他技术时，许多标准都会发挥作用，包括性能、功能可用性、成本和许可、平台支持以及开发者的知识和信心。
- en: 'Let''s evaluate the situation with our ABQ application according to these criteria:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们根据以下标准评估我们的ABQ应用程序的情况：
- en: '**Performance**: This will not be a high-performance application. There are
    no computationally demanding tasks, and high speed is not critical. Python and
    Tkinter will work perfectly fine in terms of performance.'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能**：这不会是一个高性能的应用程序。没有计算密集型任务，高速不是关键。Python和Tkinter在性能方面将完美无缺。'
- en: '**Feature availability**: Your application needs to be able to display basic
    form fields, validate the data entered, and write it to CSV. Tkinter can handle
    these front-end requirements, and Python can handle the CSV file easily. You are
    a little concerned about Tkinter''s lack of a dedicated date entry field, but
    this may be something we can work around.'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功能可用性**：您的应用程序需要能够显示基本表单字段，验证输入的数据，并将其写入CSV文件。Tkinter可以处理这些前端需求，而Python可以轻松处理CSV文件。您对Tkinter缺少专门的日期输入字段有些担忧，但这可能是一些我们可以解决的难题。'
- en: '**Cost and license**: This project isn''t going to be distributed or sold,
    so licenses are not a big concern. There is no budget for the project, though,
    so whatever you use will need to be free from any financial cost. Both Python
    and Tkinter are free and liberally licensed, so in any case this is not a concern.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本和许可**：这个项目不会分发或出售，因此许可不是一个大问题。尽管如此，该项目没有预算，因此您使用的任何东西都需要免费，没有任何财务成本。Python和Tkinter都是免费的，并且拥有宽松的许可，所以无论如何这都不是问题。'
- en: '**Platform support**: You will be developing the application on a Windows PC,
    but it will need to run on Debian Linux, so the choice of GUI should be cross-platform.
    The computer it will run on is old and slow, so your program needs to be frugal
    with resources. Python and Tkinter check both boxes here.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**平台支持**：您将在Windows PC上开发应用程序，但它需要在Debian Linux上运行，因此GUI的选择应该是跨平台的。它将运行的计算机较旧且速度较慢，因此您的程序需要节省资源。Python和Tkinter在这里都符合要求。'
- en: '**Developer knowledge and confidence**: Your expertise is in Python, but you
    have little experience in creating GUIs. For the fastest time to delivery, you
    need an option that works well with Python and isn''t complicated to learn. You
    also want something established and stable, as you won''t have time to keep up
    with new developments in the toolkit. Tkinter is a good fit here.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发者知识和信心**：您的专长在于Python，但在创建GUI方面经验不足。为了尽快交付，您需要一个与Python配合良好且易于学习的选项。您还希望选择一个成熟且稳定的工具，因为您没有时间跟上工具包中的新进展。Tkinter在这里是一个很好的选择。'
- en: Don't take your own skills, knowledge, and comfort level with the technology
    out of the equation here! While it's good to make objective choices and recognize
    your personal biases toward things you already know, it's equally important to
    recognize that your ability to confidently deliver and maintain a product is a
    critical factor in your evaluation.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，不要将您自己的技能、知识和对技术的舒适度排除在外！虽然做出客观的选择和认识到您对已知事物的个人偏见是好的，但同样重要的是要认识到您自信交付和维护产品的能力是您评估中的一个关键因素。
- en: Given the options available for Python, Tkinter is a good choice for this application.
    It's easy to learn, lightweight, free, readily available on both your development
    and target platforms, and provides the basic functionality necessary for our data
    entry form. Having settled this question, it's time to take a deeper look into
    Tkinter to find what we'll need to build this application.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到Python的可选方案，Tkinter是此应用程序的一个好选择。它易于学习，轻量级，免费，在您的开发和目标平台上都很容易获得，并提供了我们数据输入表单所需的基本功能。在解决了这个问题之后，是时候更深入地研究Tkinter，以找到我们构建此应用程序所需的内容。
- en: Python has other options for GUI development, including PyQt, Kivy, and wxPython.
    These have different strengths and weaknesses compared to Tkinter, but if you
    find Tkinter doesn't fit well for a project, one of these might be a better option.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: Python在GUI开发方面还有其他选项，包括PyQt、Kivy和wxPython。与Tkinter相比，它们有不同的优势和劣势，但如果您发现Tkinter不适合某个项目，这些中的任何一个可能是一个更好的选择。
- en: Summary
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: 'In this chapter, you worked through the first two phases of application development:
    understanding the problem and designing a solution. You learned how to develop
    an application specification by interviewing users and examining the data and
    requirements, created an optimal form layout for your users, and learned about
    the different types of widgets available in GUI frameworks for dealing with different
    kinds of input data. After creating the specification, you evaluated Tkinter to
    see if it was an appropriate technology. Most importantly, you learned that developing
    an application doesn''t begin with code, but with research and planning.'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您完成了应用程序开发的头两个阶段：理解问题和设计解决方案。您学习了如何通过访谈用户和检查数据和需求来开发应用程序规范，为您的用户创建了一个最佳表单布局，并了解了在GUI框架中处理不同类型输入数据的不同类型的控件。在创建规范后，您评估了Tkinter，看看它是否是一个合适的技术。最重要的是，您了解到开发应用程序不是从代码开始的，而是从研究和规划开始的。
- en: In the next chapter, you'll create a basic implementation of your designs with
    Tkinter and Python. You'll learn about a new widget set, Ttk, and use it along
    with some Tkinter widgets we've already met to create the form and the application.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，您将使用Tkinter和Python创建您设计的初步实现。您将了解一个新的控件集Ttk，并使用它以及我们已经遇到的一些Tkinter控件来创建表单和应用程序。
