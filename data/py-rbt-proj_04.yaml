- en: Basics of Motors
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 马达基础知识
- en: All right then! We have made a robot that takes care of your garden and I hope
    it's working fine. It's time to take things to another level.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧！我们已经制作了一个照顾你花园的机器人，我希望它运行得很好。现在是时候将事情提升到另一个层次了。
- en: We have always thought that robots are like WALL-E, moving around and doing
    things for us. Well, my friend, now that dream is not far away. In fact, in this
    chapter we will be going ahead and making one. Let's see how it's done.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直认为机器人就像WALL-E一样，四处移动为我们做事。嗯，我的朋友，现在这个梦想并不遥远。实际上，在本章中，我们将继续前进，制作一个。让我们看看它是如何完成的。
- en: 'We will be covering the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将涵盖以下主题：
- en: The basics
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础知识
- en: Getting it rolling
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开始行动
- en: Changing the speed
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变速度
- en: The basics
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基础知识
- en: 'Whenever we talk about moving from one place to another, we think about wheels
    and similarly whenever we think about moving the wheels of a robot, we think about
    motors. There are various different types of motors that exist. So let''s firstly
    look at the most basic type of motor, which is called a brushed DC motor. As the
    name suggests, it works on a direct current. You may find such motors like this:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们谈论从一个地方移动到另一个地方时，我们会想到轮子，同样地，每当我们想到移动机器人的轮子时，我们会想到马达。存在各种不同类型的马达。所以首先让我们看看最基本的马达类型，它被称为刷式直流马达。正如其名所示，它使用直流电。你可能会发现这样的马达：
- en: '![](img/f7fd7980-d47b-4ab1-b5c1-4ee766d7bbf1.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f7fd7980-d47b-4ab1-b5c1-4ee766d7bbf1.png)'
- en: Trust me, these things are omnipresent, from the Christmas gift you bought for
    your neighbor to the biggest baddest machines out there—you will find these motors
    hiding under the hood. These motors are common for a reason and that is because
    they are very, very simple. So simple that powering them up only requires a battery
    and two wires. Simply connect the positive to one terminal and negative to the
    other, and the motor will start spinning. Interchange those connections and the
    direction of the rotation will change. Take two cells and double the voltage and
    the motor will spin even faster. It is that simple.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 相信我，这些事情无处不在，从你为邻居买的圣诞礼物到最强大最糟糕的机器——你都会发现这些马达隐藏在引擎盖下。这些马达之所以常见，是因为它们非常非常简单。简单到只需要一个电池和两根电线就能启动它们。只需将正极连接到一个端子，负极连接到另一个端子，马达就会开始旋转。交换这些连接，旋转的方向就会改变。取两个电池，电压加倍，马达就会转得更快。就这么简单。
- en: Now you might assume that we would simply connect this motor to Raspberry Pi
    and that we would be good to go. But unfortunately this is not going to be the
    case. As you may remember from the previous chapters, Raspberry Pi can only supply
    around 50 milliamps, but the consumption of a motor can be much higher. Hence,
    to run one we need an intermediate device.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你可能认为我们只需将这个马达连接到树莓派，然后我们就可以出发了。但不幸的是，情况并非如此。正如你可能从前面的章节中记得的那样，树莓派只能提供大约50毫安的电流，但马达的消耗可能要高得多。因此，为了运行它，我们需要一个中间设备。
- en: The first thing that will come to your mind will be to use a relay, and why
    not? They can channel a huge amount of current and can handle high voltages. This
    should be the ideal choice. You would be right if you thought so, but only to
    some extent, and that is because a relay is simply a switch we can use to turn
    the motor on or off. We would not be able to control the speed or the direction
    of rotation of the motor. Now, you would think that this problem is not new and
    that we can very easily solve it by using **pulse width modulation** (**PWM**),
    right? Well, the answer is no! Because these relays are mechanical devices, and
    due to their mechanical nature, there are some maximum limits in terms of it being
    switched on or off in a second. Hence, it would not be able to cope with the frequency
    of PWM. Finally, we would still be left with the problem of changing the direction
    and the speed of the motor. So what do we do now?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个出现在你脑海中的想法可能是使用继电器，为什么不呢？它们可以引导大量的电流，可以处理高电压。这应该是理想的选择。如果你这样想，你是对的，但只限于某种程度上，这是因为继电器只是一个我们可以用来打开或关闭马达的开关。我们无法控制马达的转速或旋转方向。现在，你可能认为这个问题并不新鲜，我们可以非常容易地通过使用**脉冲宽度调制**（**PWM**）来解决它，对吧？嗯，答案是不了！因为这些继电器是机械装置，由于它们的机械性质，在每秒开关的次数上存在一些最大限制。因此，它无法应对PWM的频率。最后，我们仍然面临改变马达方向和速度的问题。那么我们现在该怎么办呢？
- en: 'As I always say, the beauty of a problem is that it always has a solution,
    and the solution here is called a motor driver. A motor driver is primarily a
    set of electronic relays—a switch that can allow high currents yet is not mechanical.
    Hence, we can switch it hundreds of times every second. These electronic relays
    are either made of simple transistors or, in high power applications, they can
    even use MOSFETs for switching. We can simply give PWM to these electronic switches
    and get the voltage to modulate while making sure that enough current is being
    delivered to the circuit. Further, as I mentioned earlier, the motor driver is
    made of a set of these electronic relays. The most common and workable fashion
    in which they are arranged is called a full bridge or an H Bridge. Before I explain
    any further, let''s see what this is, exactly:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我经常说的，问题的美在于它总是有解决方案，这里的解决方案被称为电机驱动器。电机驱动器主要是电子继电器——一种可以允许高电流但不是机械的开关。因此，我们可以每秒切换它数百次。这些电子继电器可以是简单的晶体管，或者在高压应用中，甚至可以使用MOSFET进行切换。我们可以简单地给这些电子开关PWM信号，并确保电路中有足够的电流。此外，正如我之前提到的，电机驱动器由一组这些电子继电器组成。它们最常见的、最实用的排列方式被称为全桥或H桥。在我进一步解释之前，让我们看看这究竟是什么：
- en: '![](img/3f250030-b631-4351-9746-c38e7caf0222.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3f250030-b631-4351-9746-c38e7caf0222.png)'
- en: 'In a full bridge we have four switching circuits across the connected motor;
    these can be independently switched on or off based on the requirements. In the
    off state, all of these switching circuits are in an open state, hence keeping
    the motor switched off. Now, whenever we want to start the motor, we will have
    to switch on two switches in such a way that the circuit is complete and the motor
    starts working. So let''s see what it would look like:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在全桥电路中，我们连接到电机的有四个开关电路；根据需要，这些电路可以独立地开启或关闭。在关闭状态下，所有这些开关电路都处于开启状态，因此保持电机关闭。现在，无论何时我们想要启动电机，我们都需要以某种方式开启两个开关，使得电路完整，电机开始工作。那么，让我们看看它将是什么样子：
- en: '![](img/61cf5d12-fe36-447a-b233-1304060c39cf.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/61cf5d12-fe36-447a-b233-1304060c39cf.png)'
- en: 'Here, we have switched on the switching circuit **S2** and **S3**; this in
    turn completes the circuit and lets the current flow in the motor. Now, to control
    the speed, these same switching circuits can be switched on and off at a very
    high frequency at varying duty cycles to achieve a specific mean voltage. Now
    that we can achieve a specific speed for the motor by changing the voltage via
    these two switching circuits, let''s see how we are going to change the direction  of
    rotation of the motor:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们开启了开关电路**S2**和**S3**；这反过来完成了电路，使得电流可以在电机中流动。现在，为了控制速度，这些相同的开关电路可以在非常高的频率下以不同的占空比开启和关闭，以实现特定的平均电压。现在我们可以通过改变这两个开关电路的电压来达到特定的电机速度，那么我们来看看我们是如何改变电机旋转方向的：
- en: '![](img/5d887368-95b7-4bfb-aba6-31c27cf7ef13.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5d887368-95b7-4bfb-aba6-31c27cf7ef13.png)'
- en: 'In this circuit we have switched off the previously connected **S2** and **S3**
    and instead switched on **S1** and **S4**, hence the polarity to the motor is
    reversed. As we discussed earlier, whenever the polarity of a DC-brushed motor
    is changed, the direction also changes subsequently. There are various types of
    motor drivers you can find on the market. What we have understood here is called
    a brushed DC H-bridge motor driver; there are other types of motor drivers as
    well for controlling other types of motors, but currently we will stick to the
    brushed motor only. While selecting a motor driver, you should examine the specification
    sheet of the motor driver very carefully. Some of the key specifications that
    will be mentioned are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个电路中，我们关闭了之前连接的**S2**和**S3**，取而代之的是开启了**S1**和**S4**，因此电机的极性被反转。正如我们之前讨论的，每当直流刷式电机的极性改变时，方向也会随之改变。市场上你可以找到各种类型的电机驱动器。我们在这里理解的是刷式直流H桥电机驱动器；还有其他类型的电机驱动器用于控制其他类型的电机，但当前我们将仅关注刷式电机。在选择电机驱动器时，你应该非常仔细地检查电机驱动器的规格表。以下是一些将被提到的关键规格：
- en: '**Voltage rating**: There will be a minimum and maximum limit to the voltage
    that the motor driver can handle and modulate between. Make sure your motor lies
    in between this specific voltage range.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电压等级**：电机驱动器可以处理和调节的电压将有一个最小和最大限制。确保你的电机位于这个特定的电压范围内。'
- en: '**Current rating**: There will be an absolute maximum current that the motor
    driver can handle; going anywhere beyond it will burn or damage the motor driver.
    This can be a little deceptive. Let''s see why. Except for the absolute maximum,
    there will be many other current ratings that might be specified. These might
    be:'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电流等级**：电机驱动器可以承受的绝对最大电流；超过这个电流将烧毁或损坏电机驱动器。这可能有点误导。让我们看看原因。除了绝对最大值外，还可能有其他许多电流等级可能被指定。这些可能包括：'
- en: '**Repetitive maximum current**: This is the current rating that can be the
    maximum current the motor driver can handle, but not continuously. This rating
    is given because at times the load on the motor might increase and there might
    be a higher current requirement for a brief moment. The motor driver will provide
    the adequate current on a repetitive basis without getting damaged. But this current
    requirement should not be continuous.'
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重复最大电流**：这是电机驱动器可以承受的最大电流，但不是连续的。这个等级给出是因为有时电机的负载可能会增加，可能会有一个短暂的更高电流需求。电机驱动器将重复提供足够的电流而不会损坏。但是，这种电流需求不应是连续的。'
- en: '**Burst maximum current**: This is the absolute maximum current that the motor
    driver can handle; anything beyond it will damage the motor driver. The DC motors
    might have a very high current requirement when it starts from a standstill. Hence,
    the motor drivers are designed to handle these currents. But this surge of current
    should not be repetitive, otherwise heating and subsequent damage can happen.
    Often, burst maximum current is referred to as the maximum current by the manufacturers.'
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**爆发最大电流**：这是电机驱动器可以承受的绝对最大电流；超过这个电流将损坏电机驱动器。直流电机在从静止状态启动时可能会有非常高的电流需求。因此，电机驱动器被设计来处理这些电流。但是，这种电流的激增不应是重复的，否则可能会发生加热和随后的损坏。通常，爆发最大电流被制造商称为最大电流。'
- en: '**Continuous maximum current**: This is the real deal; the continuous maximum
    current is the maximum continuous current that the motor driver can mange on a
    continuous basis.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连续最大电流**：这是真正的关键；连续最大电流是电机驱动器可以连续管理的最大连续电流。'
- en: '**Supply voltage**: This is the operating voltage of the motor driver—this
    voltage must be given to the motor driver for its own internal workings.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**供电电压**：这是电机驱动器的运行电压——必须给电机驱动器提供这个电压以供其内部工作。'
- en: '**Logic supply voltage**: This is the control signal given to the motor driver,
    and can be given at various voltages such as 5V, 3.3V, and 12V. Hence, the motor
    driver will specify the maximum logical voltage that it can accept in the signal
    line.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑供电电压**：这是给电机驱动器的控制信号，可以是5V、3.3V和12V等电压。因此，电机驱动器将指定它可以接受的信号线路上的最大逻辑电压。'
- en: 'Now, let''s see what we have got. During the course of this book, we will be
    using the L298N motor driver module, which currently is one of the most common
    motor driver modules available on the market. It has two channels—you have two
    H-bridges and hence you can connect two motors onto it. Further, the specifications
    for this motor driver are also decent for the price. Here are the specifications:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看我们有什么。在这本书的过程中，我们将使用L298N电机驱动器模块，目前这是市场上最常见的电机驱动器模块之一。它有两个通道——您有两个H桥，因此您可以将两个电机连接到它。此外，这个电机驱动器的规格对于价格来说也是相当不错的。以下是规格：
- en: '**Voltage rating**: 2.5V to 46V'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电压等级**：2.5V至46V'
- en: '**Repetitive maximum current**: 2.5 amp'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**重复最大电流**：2.5安培'
- en: '**Burst maximum current**: 3 amp'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**爆发最大电流**：3安培'
- en: '**Continuous maximum current**: 2 amp'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连续最大电流**：2安培'
- en: '**Supply voltage**: 4.5V to 7V'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**供电电压**：4.5V至7V'
- en: '**Logic supply voltage**: 4.5V to 7V'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**逻辑供电电压**：4.5V至7V'
- en: 'Once you have the physical motor driver with you, you will notice the following
    pins:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当您拥有物理电机驱动器时，您会注意到以下引脚：
- en: '**Motor A**: This is channel 1 of the motor driver. You can connect the first
    motor to this port.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电机A**：这是电机驱动器的1通道。您可以将第一个电机连接到这个端口。'
- en: '**Motor B**: This is channel 2 of the motor driver. You can connect a second
    motor to this port. If you only have one motor, you can simply leave this port
    unconnected.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电机B**：这是电机驱动器的2通道。您可以将第二个电机连接到这个端口。如果您只有一个电机，您可以简单地不连接这个端口。'
- en: '**GND**: This is the ground of the power supply that you will attach for the
    motor. It is very important that you not only connect the ground of the power
    supply but also connect the ground of Raspberry Pi to this port so that the circuit
    is complete between Raspberry Pi and the motor driver.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**：这是您将连接到电机的电源的接地。您不仅要连接电源的接地，还要将树莓派的接地连接到这个端口，以确保树莓派和电机驱动器之间的电路完整。'
- en: '**VCC**: This is the positive port of the motor driver. This is where the positive
    terminal of your battery or power adapter will go.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VCC**: 这是电机驱动器的正极端口。这是您电池或电源适配器的正极将连接的地方。'
- en: '**IN 1 and IN 2**: These are the two logical inputs that we need to provide
    from the microcontroller for motor A. Whenever IN 1 receives the signal, one part
    of the H-bridge is activated—the motor starts spinning in one direction. Whenever
    IN 2 receives the signal, the other part of the H-bridge is activated, making
    the motor spin in the opposite direction.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IN 1和IN 2**：这是我们为电机A需要从微控制器提供的两个逻辑输入。每当IN 1接收到信号时，H桥的一部分被激活——电机开始朝一个方向旋转。每当IN
    2接收到信号时，H桥的另一部分被激活，使电机朝相反方向旋转。'
- en: '**IN 3 and IN 4**: This is the logical input of the motor B, which will work
    in exactly the same way as IN 1 and IN 2.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IN 3和IN 4**：这是电机B的逻辑输入，它将按照与IN 1和IN 2完全相同的方式工作。'
- en: '**EN A and EN B**: These are the enable pins for both the channels. If these
    pins are not high, the respective channels will not work despite any signal that
    you give over the input ports. You might notice that there is a small cap on the
    EN ports. This is called a shunt. What it does is that it makes contact between
    the two pins that it has been connected on. This cap, when present over the EN
    pin, means that it would permanently be high as long as this shunt is connected.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**EN A和EN B**：这是两个通道的使能引脚。如果这些引脚不是高电平，尽管您在输入端口上给出任何信号，相应的通道也不会工作。您可能会注意到EN端口上有一个小电容。这被称为分流器。它的作用是在它连接的两个引脚之间建立接触。当这个电容连接到EN引脚上时，这意味着只要这个分流器连接，它就会永久保持高电平。'
- en: Getting it rolling
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始运行
- en: 'OK, that''s a lot of theory, so now let''s fire up one of our motors via Raspberry
    Pi. To do that, go ahead and connect the motor and the motor driver as shown:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，理论讲得够多了，现在让我们通过树莓派启动一个电机。为此，请按照以下方式连接电机和电机驱动器：
- en: '![](img/0e0b5815-8180-4424-ab8c-8dbcd4d0d7fe.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0e0b5815-8180-4424-ab8c-8dbcd4d0d7fe.png)'
- en: 'Now, once you are done with it, let''s upload the code and see what happens:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，一旦你完成了它，让我们上传代码并看看会发生什么：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, let''s understand the code a bit:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们稍微了解一下代码：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Pin number `20` is connected to IN 1 of the motor driver. For convenience,
    we have changed motor 1 right to `Motor1R`; in reality, the motor can spin in
    any direction but we have just written this for convenience and understanding.
    Similarly, we have done this for `Motor1L` as well. This is connected to IN 2,
    hence this will lead to the motor spinning in the other direction:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 引脚编号`20`连接到电机驱动器的IN 1。为了方便，我们将电机1右侧改为`Motor1R`；实际上，电机可以朝任何方向旋转，但我们只是这样写以方便理解和说明。同样，我们也对`Motor1L`做了这样的处理。它连接到IN
    2，因此这将导致电机朝相反方向旋转：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Here, we are making the `Motor1R` or the pin number `20` high, which means
    that the input motor driver is getting is:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将`Motor1R`或引脚编号`20`设置为高电平，这意味着输入电机驱动器接收到的信号是：
- en: '| **Motor** | **Pin** | **Input** | **State** |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
  zh: '| **电机** | **引脚** | **输入** | **状态** |'
- en: '| `Motor 1R` | Pin number 20 of Raspberry Pi | IN 1 | `HIGH` |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| `电机1R` | 树莓派引脚编号20 | IN 1 | `HIGH` |'
- en: '| `Motor 1L` | Pin number 21 of Raspberry Pi | IN 2 | `LOW` |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| `电机1L` | 树莓派引脚编号21 | IN 2 | `LOW` |'
- en: 'Now, after a delay of 5 seconds, the following code will run, which will change
    the state of the pins as depicted in the below table:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在延迟5秒后，以下代码将运行，它将改变引脚的状态，如下表所示：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '| **Motor** | **Pin** | **Input** | **State** |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| **电机** | **引脚** | **输入** | **状态** |'
- en: '| `Motor 1R` | Pin number 20 of Raspberry Pi | IN 1 | `LOW` |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `电机1R` | 树莓派引脚编号20 | IN 1 | `LOW` |'
- en: '| `Motor 1L` | Pin number 21 of Raspberry Pi | IN 2 | `HIGH` |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| `电机1L` | 树莓派引脚编号21 | IN 2 | `HIGH` |'
- en: Now, let's see what happens once we run it. The motor will spin firstly in one
    direction and then it will go in the other direction. The code is very straightforward
    and I don't think there is any need for explanation. All we are doing here is
    simply turning either of the two GPIOs connected to the motor driver on and off.
    Once the input IN 1 of the motor driver is activated, a part of the H-bridge is
    switched on, causing the motor to spin in one direction. Whenever the IN 2 of
    the motor driver is high, then the opposite part of H-bridge is turned on, causing
    the polarity at the output end of the motor driver to change, and hence the motor
    turns in the other direction.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看运行后会发生什么。电机首先会朝一个方向旋转，然后它会转向另一个方向。代码非常直接，我认为没有必要进行解释。我们在这里所做的只是简单地打开或关闭连接到电机驱动器的两个GPIO之一。一旦电机驱动器的输入IN
    1被激活，H桥的一部分就会接通，导致电机朝一个方向旋转。每当电机驱动器的IN 2为高电平时，H桥的另一部分就会接通，导致电机驱动器输出端的极性改变，因此电机就会朝相反方向旋转。
- en: Changing the speed
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 改变速度
- en: Now that we have understood how to change the direction of the motor using the
    motor driver, it's time to take it a step further and control the speed of the
    motor using the motor driver. To do this, we don't really have to do much. The
    motor drivers are built to understand the PWM signals. Once the PWM signal to
    the motor driver is provided, then the motor driver in turn adjusts the output
    voltage for the motor and hence changes the speed of the motor driver. The PWM
    has to be provided on the same input ports IN 1 and IN 2 for motor A, and IN 3
    and IN 4 for motor B. It is obvious that the pin on which the PWM is provided
    will decide the direction in which the motor will move, and the duty cycle of
    the PWM will decide the speed at which the motor will be spinning.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何使用电机驱动器改变电机的方向，是时候更进一步，使用电机驱动器控制电机的速度了。要做到这一点，我们实际上不需要做太多。电机驱动器被设计成能够理解PWM信号。一旦向电机驱动器提供了PWM信号，电机驱动器就会相应地调整电机的输出电压，从而改变电机驱动器的速度。PWM必须提供在电机A的IN
    1和IN 2输入端口，以及电机B的IN 3和IN 4输入端口。很明显，提供PWM信号的引脚将决定电机移动的方向，而PWM的占空比将决定电机旋转的速度。
- en: 'Now we have understood how speed control in motor driver works. It''s time
    to do it by ourselves. To do so, we do not need to make any changes to the connections;
    all we need to do is to upload the following code:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了电机驱动器中的速度控制是如何工作的。是时候我们自己动手尝试了。为此，我们不需要对连接进行任何更改；我们只需要上传以下代码：
- en: '[PRE4]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'What happened after you ran this code? I''m sure the motor started slowly and
    then started increasing its speed and, upon reaching its top speed, it eventually
    stopped—exactly what we wanted it to do. If you remember, this code looks very
    familiar. Remember changing the brightness of the LED in the first chapter? It
    is almost the same; there are a few differences, though, so let''s see what they
    are:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你运行这段代码后发生了什么？我敢肯定电机开始时速度较慢，然后逐渐加速，达到最高速度后最终停止——这正是我们想要它做的。如果你还记得，这段代码看起来非常熟悉。记得第一章中改变LED亮度吗？几乎是一样的；尽管有一些不同，所以我们来看看它们是什么：
- en: '[PRE5]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In this line, we are simply defining the pin we have to give the PWM on—as
    in, on `Motor1R`, which corresponds to pin number `20`. Also, we are are defining
    the frequency of the PWM as `100` hertz or 100 times in a second:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一行中，我们只是定义了必须提供PWM的引脚——即在`Motor1R`上，这对应于引脚号`20`。同时，我们定义了PWM的频率为`100`赫兹，即每秒100次：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If you remember, the preceding command from the previous chapters, `pwm.start()`,
    is primarily used for defining the duty cycle of the  signal. Here, we are giving
    it the duty cycle as `0` that is the pin would be off:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得，前几章中的命令`pwm.start()`主要用于定义信号的占空比。在这里，我们给它一个`0`的占空比，即该引脚将会关闭：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'As we are running motor in one specific direction and which is `1R` hence the
    other half of the H bridge should be turned off. this would be done by the above
    line by putting the line `1L` LOW. If we don''t do this then the pin `21` can
    be in an arbitrary state, hence it can be either on or off. This might conflict
    with the direction in which the motor is moving and the hardware would not work
    properly:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们正在以一个特定的方向运行电机，即`1R`，因此H桥的另一半应该关闭。这可以通过上面的行通过将`1L`设置为低电平来完成。如果我们不这样做，引脚`21`可能处于任意状态，因此它可以是开或关。这可能会与电机的移动方向冲突，硬件将无法正常工作：
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Here comes the real deal; this line, `for i in range(0,101):`, will keep on
    running the program contained in it until the time the value of `i` is between
    `0` to `101`. It will also increment the value of `i` every time this loop runs.
    Here, every time, the value will increase by one:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在来点真的；这一行，`for i in range(0,101):`，将会持续运行它包含的程序，直到`i`的值在`0`到`101`之间。每次这个循环运行时，它也会增加`i`的值。在这里，每次，值将增加一：
- en: '[PRE9]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, this is a slightly new command. Previously, we have used the line `pwm.start(0)`
    to assign a duty cycle to the PWM. As we have already assigned a duty cycle value
    to the PWM, to change it we would use the previously mentioned command. The duty
    cycle would be the same as the value of `i`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，这是一个稍微有点新的命令。之前，我们使用`pwm.start(0)`这一行来为PWM分配一个占空比。因为我们已经为PWM分配了一个占空比值，要改变它，我们会使用之前提到的命令。占空比将与`i`的值相同。
- en: Hence, every time the code passes through the `for` loop, the value or the duty
    cycle will increase by one. Super easy, isn't it?
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，每次代码通过`for`循环时，值或占空比将增加一。很简单，不是吗？
- en: Everything in robotics is very easy if you do it right. The idea is to break
    your problem into small pieces and solve them one by one; trust me, once you do
    that, nothing will look difficult to you.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你做对了，机器人技术中的所有事情都非常简单。思路是将你的问题分解成小块，逐一解决；相信我，一旦你那样做了，没有什么会看起来很难。
- en: Summary
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we worked on the various aspects of a motor. Moving on, by
    using all the basics, we will study the interaction of Bluetooth with mobile devices
    and build a Bluetooth-controlled robotic car.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们研究了电机的各个方面。接下来，通过使用所有基础知识，我们将研究蓝牙与移动设备的交互，并构建一个蓝牙控制的机器人车。
