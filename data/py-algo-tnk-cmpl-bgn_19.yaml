- en: Chapter 11
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Chapter 11
- en: Manipulating Numbers
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 操作数字
- en: 11.1 Introduction
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.1 简介
- en: Just like every high-level programming language, Python provides many ready-to-use
    functions and methods (called subprograms) that you can use whenever and wherever
    you wish.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 就像每种高级编程语言一样，Python 提供了许多随时可用且可在任何地方使用的函数和方法（称为子程序）。
- en: '![](img/notice.jpg)A “subprogram” is simply a group of statements packaged
    as a single unit. Each subprogram has a descriptive name and performs a specific
    task.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg）“子程序”简单地说是一组打包成单个单位的语句。每个子程序都有一个描述性的名称，并执行特定的任务。'
- en: To better understand functions and methods, let's take Heron's^([[11]](footnotes.html#Endnote_11))
    iterative formula that calculates the square root of a positive number.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解函数和方法，让我们以计算正数平方根的海伦迭代公式为例。
- en: .![Image](img/chapter11-01.png)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '![图像](img/chapter11-01.png)'
- en: where
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: where
- en: ►y is the number for which you want to find the square root
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: ►y 是你想要找到平方根的数字
- en: ►x[n] is the n-th iteration value of the square root of y
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: ►x[n] 是 y 的平方根的第 n 次迭代值
- en: You might feel a bit frustrated right now. You could think that you should write
    a program to calculate Heron's formula to find the square root of a number, but
    this is not true! At present, no one calculates the square root of a number this
    way. Fortunately, Python includes a function for that purpose! This function,
    actually a small subprogram, has been given the name sqrt, and all you have to
    do is call it by its name, and it will do the job for you. The sqrt function probably
    uses Heron's iterative formula or perhaps a formula from another ancient or modern
    mathematician. The truth is that you don't really care! What really matters is
    that sqrt gives you the right result! An example is shown here.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可能感到有些沮丧。你可能认为你应该编写一个程序来计算海伦公式以找到数字的平方根，但事实并非如此！目前，没有人这样计算数字的平方根。幸运的是，Python
    包含了一个用于此目的的函数！这个函数实际上是一个小的子程序，被命名为 sqrt，你只需要通过它的名字来调用它，它就会为你完成工作。sqrt 函数可能使用海伦迭代公式，或者可能是来自古代或现代数学家的公式。事实是，你并不真的关心！真正重要的是
    sqrt 给你正确的结果！这里有一个示例。
- en: from math import sqrt
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: x = float(input())
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(input())
- en: y = sqrt(x)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: y = sqrt(x)
- en: print(y)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: print(y)
- en: '![](img/notice.jpg)The function sqrt() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)函数 sqrt() 定义在 math 模块中。在 Python 中不能直接访问，所以你需要从 math 模块中导入它。'
- en: '![](img/notice.jpg)A “module” in Python is nothing more than a file that contains
    many ready-to-use functions (or methods). Python incorporates quite a lot such
    modules, but, if you wish to use a function included in one of those modules,
    you need to import it from that module into your program.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)在 Python 中，“模块”不过是一个包含许多随时可用函数（或方法）的文件。Python 集成了相当多的这样的模块，但如果你希望使用这些模块中的一个包含的函数，你需要将其从该模块导入到你的程序中。'
- en: 'Even though Python supports many mathematical functions (and methods), this
    chapter covers only those absolutely necessary for this book''s purpose. However,
    if you need even more information you can visit one of the following addresses:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Python 支持许多数学函数（和方法），但本章仅涵盖本书目的绝对必要的那些。然而，如果你需要更多信息，你可以访问以下地址之一：
- en: '[https://tinyurl.com/4s8y2frk](https://tinyurl.com/4s8y2frk)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://tinyurl.com/4s8y2frk](https://tinyurl.com/4s8y2frk)'
- en: '[https://docs.python.org/3.13/library/math.html](https://docs.python.org/3.13/library/math.html)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://docs.python.org/3.13/library/math.html](https://docs.python.org/3.13/library/math.html)'
- en: .![Image](img/chapter11-02.png)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![图像](img/chapter11-02.png)'
- en: '![](img/notice.jpg)Mathematical subprograms are used whenever you need to perform
    math calculations, such as finding the square root, sine, cosine, absolute value,
    and so on.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)数学子程序在需要执行数学计算时使用，例如求平方根、正弦、余弦、绝对值等。'
- en: 11.2 Useful Mathematical Functions (Subprograms), and More
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.2 有用的数学函数（子程序），以及更多
- en: Absolute value
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 绝对值
- en: abs(number)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: abs(数字)
- en: This function returns the absolute value of number.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数返回数字的绝对值。
- en: Example
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2a'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/my_exercise_header.png) file_11.2a'
- en: a = -5
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: a = -5
- en: b = abs(a)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: b = abs(a)
- en: 'print(abs(a))           #It displays: 5'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: print(abs(a))            #它显示：5
- en: 'print(b)                #It displays: 5'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: print(b)                #它显示：5
- en: 'print(abs(-5.2))        #It displays: 5.2'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: print(abs(-5.2))        #它显示：5.2
- en: 'print(abs(5.2))         #It displays: 5.2'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(abs(5.2))         #它显示：5.2'
- en: Pi
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: π
- en: pi
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: pi
- en: This contains the value of π.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这包含了 π 的值。
- en: Example
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2b'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/my_exercise_header.png) file_11.2b'
- en: from math import pi
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: from math import pi
- en: 'print(pi)    #It displays: 3.141592653589793'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(pi)                  #它显示：3.141592653589793'
- en: '![](img/notice.jpg)Note that pi is neither a function nor a method. Therefore,
    you must not put parentheses at the end.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)注意，pi既不是函数也不是方法。因此，您不能在末尾放置括号。'
- en: '![](img/notice.jpg) is defined in module math. It is not accessible directly
    in Python, so you need to import it from the math module.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)定义在math模块中。在Python中不能直接访问，所以需要从math模块中导入。'
- en: Sine
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦
- en: sin(number)
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: sin(number)
- en: This function returns the sine of number. The value of number must be expressed
    in radians. You can multiply  by pi / 180 to convert degrees to radians.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数字的正弦值。数字的值必须以弧度表示。您可以通过乘以pi / 180将度转换为弧度。
- en: Example
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2c'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2c'
- en: from math import sin, pi
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sin, pi
- en: 'a = sin(3 * pi / 2)       #Sine of 3π/2 radians'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 'a = sin(3 * pi / 2)        #3π/2弧度的正弦值'
- en: 'b = sin(270 * pi / 180)   #Sine of 270 degrees'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 'b = sin(270 * pi / 180)    #270度的正弦值'
- en: 'print(a, b)               #It displays: -1.0  -1.0'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(a, b)                #它显示：-1.0  -1.0'
- en: '![](img/notice.jpg)The function sin() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)函数sin()定义在math模块中。在Python中不能直接访问，所以需要从math模块中导入。'
- en: Cosine
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦
- en: cos(number)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: cos(number)
- en: This function returns the cosine of number. The value of number must be expressed
    in radians. You can multiply by pi / 180 to convert degrees to radians.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数字的余弦值。数字的值必须以弧度表示。您可以通过乘以pi / 180将度转换为弧度。
- en: Example
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2d'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2d'
- en: from math import cos, pi
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: from math import cos, pi
- en: 'a = cos(2 * pi)           #Cosine of 2π radians'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 'a = cos(2 * pi)            #2π弧度的余弦值'
- en: 'b = cos(360 * pi / 180)   #Cosine of 360 degrees'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 'b = cos(360 * pi / 180)    #360度的余弦值'
- en: 'print(a, b)               #It displays: 1.0  1.0'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(a, b)                #它显示：1.0  1.0'
- en: '![](img/notice.jpg)The function cos() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)函数cos()定义在math模块中。在Python中不能直接访问，所以需要从math模块中导入。'
- en: Tangent
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 正切
- en: tan(number)
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: tan(number)
- en: This function returns the tangent of number. The value of number must be expressed
    in radians. You can multiply by pi / 180 to convert degrees to radians.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数字的正切值。数字的值必须以弧度表示。您可以通过乘以pi / 180将度转换为弧度。
- en: Example
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2e'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2e'
- en: from math import tan ,pi
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: from math import tan ,pi
- en: 'a = tan(10 * pi / 180)   #Tangent of 10 degrees'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 'a = tan(10 * pi / 180)     #10度的正切值'
- en: 'print(a)                 #It displays: 0.176326980708'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(a)                   #它显示：0.176326980708'
- en: '![](img/notice.jpg)The function tan() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)函数tan()定义在math模块中。在Python中不能直接访问，所以需要从math模块中导入。'
- en: Quotient and remainder of integer division
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 整数除法的商和余数
- en: divmod(number1, number2)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: divmod(number1, number2)
- en: 'This function returns two values, and these are:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回两个值，这些值是：
- en: ►the quotient of the integer division of number1 and number2; and
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: ►number1和number2整数除法的商；以及
- en: ►the remainder of the integer division of number1 and number2
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: ►number1和number2整数除法的余数
- en: Example
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2f'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2f'
- en: c, d = divmod(13, 4)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: c, d = divmod(13, 4)
- en: 'print(c, d, sep = ", ")   #It displays: 3, 1'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(c, d, sep = ", ")    #它显示：3, 1'
- en: '![](img/notice.jpg)It is possible in Python for a function or a method to return
    two or more values.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)在Python中，一个函数或方法可以返回两个或更多值。'
- en: Integer value
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 整数值
- en: int(value)
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: int(value)
- en: This function returns the number in value as integer, that is, the integer portion
    of value. If value contains a fractional part, that part is lost during conversion.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数值作为整数，即值的整数部分。如果值包含小数部分，则在转换过程中该部分将丢失。
- en: In case value contains a string representation of an integer, it returns its
    numeric equivalent.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值包含整数的字符串表示，则返回其数值等效。
- en: Example
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2g'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2g'
- en: a = 5.4
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: a = 5.4
- en: 'print(int(a))            #It displays: 5'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(int(a))              #它显示：5'
- en: 'print(int(34))           #It displays: 34'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(int(34))             #它显示：34'
- en: 'print(int(34.9))         #It displays: 34'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(int(34.9))           #它显示：34'
- en: 'print(int(-34.999))      #It displays: -34'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(int(-34.999))        #它显示：-34'
- en: s1 = "5"
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: s1 = "5"
- en: s2 = "3"
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: s2 = "3"
- en: k = int(s1)
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: k = int(s1)
- en: 'print(k)                 #It displays: 5'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(k)                   #它显示：5'
- en: 'print(int(s2))           #It displays: 3'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(int(s2))           #显示：3'
- en: 'print(s1 + s2)           #It displays: 53'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(s1 + s2)           #显示：53'
- en: 'print(k + int(s2))       #It displays: 8'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(k + int(s2))       #显示：8'
- en: Real value
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 实数值
- en: float(value)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: float(值)
- en: This function returns the number in value as float (real).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将值作为浮点数（实数）返回。
- en: In case value contains a string representation of an integer or a float (real),
    it returns its numeric equivalent.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值包含整数的字符串表示或浮点数（实数），则返回其数值等效。
- en: Example
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2h'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2h'
- en: a = 5
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: a = 5
- en: 'print(float(a))          #It displays: 5.0'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: print(float(a))          #显示：5.0
- en: 'print(float(34))         #It displays: 34.0'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(float(34))         #显示：34.0'
- en: 'print(float(-34))        #It displays: -34.0'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: print(float(-34))        #显示：-34.0
- en: 'print(float(34.9))       #It displays: 34.9'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(float(34.9))       #显示：34.9'
- en: s1 = "6"
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: s1 = "6"
- en: s2 = "3.4"
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: s2 = "3.4"
- en: x = float(s1)
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(s1)
- en: 'print(x)                  #It displays: 6.0'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)                  #显示：6.0
- en: 'print(float(s2))          #It displays: 3.4'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: print(float(s2))          #显示：3.4
- en: 'print(s1 + s2)            #It displays: 63.4'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: print(s1 + s2)            #显示：63.4
- en: 'print(x + float(s2))      #It displays: 9.4'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: print(x + float(s2))      #显示：9.4
- en: Range
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 范围
- en: range([initial_value,] final_value [, step])
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: range([初始值,] 最终值 [, 步长])
- en: This function returns a sequence of integers between initial_value and final_value
    - 1\. The argument initial_value is optional. If omitted, its default value is
    0\. The argument step is the difference between each number in the sequence. This
    argument is also optional. If omitted, its default value is 1.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回从初始值到最终值 - 1 之间的整数序列。初始值参数是可选的。如果省略，则默认值为 0。步长参数是序列中每个数字之间的差值。此参数也是可选的。如果省略，则默认值为
    1。
- en: '![](img/notice.jpg)Note that initial_value, final_value, and step must be integers.
    Negative values are also permitted!'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)请注意，初始值、最终值和步长必须是整数。也允许负值！'
- en: Example
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2i'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2i'
- en: '#Assign the sequence 1, 2, 3, 4, 5 to x'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '#将序列 1, 2, 3, 4, 5 赋值给 x'
- en: x = range(1, 6)
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: x = range(1, 6)
- en: '#Assign the sequence 0, 1, 2, 3, 4, 5 to y'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '#将序列 0, 1, 2, 3, 4, 5 赋值给 y'
- en: y = range(6)
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: y = range(6)
- en: '#Assign the sequence 0, 10, 20, 30, 40 to w'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '#将序列 0, 10, 20, 30, 40 赋值给 w'
- en: w = range(0, 50, 10)
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: w = range(0, 50, 10)
- en: '#Assign the sequence 100, 95, 90, 85 to z'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '#将序列 100, 95, 90, 85 赋值给 z'
- en: z = range(100, 80, -5)
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: z = range(100, 80, -5)
- en: Random
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 随机数
- en: randrange([minimum_value,] maximum_value [, step])
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: randrange([最小值,] 最大值 [, 步长])
- en: This function returns a random integer from a given range. The arguments of
    randrange() follow the same logic as those of function range().
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回给定范围内的随机整数。randrange() 函数的参数与 range() 函数的参数逻辑相同。
- en: Example
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2j'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2j'
- en: from random import randrange
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: from random import randrange
- en: '#Display a random integer between 10 and 100'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '#显示 10 到 100 之间的随机整数'
- en: print(randrange(10, 101))
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: print(randrange(10, 101))
- en: '#Assign a random integer between 0 and 10 to variable y and display it'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '#将 0 到 10 之间的随机整数赋值给变量 y 并显示它'
- en: y = randrange(11)
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: y = randrange(11)
- en: print(y)
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: print(y)
- en: '#Display a random integer between -20 and 20'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '#显示 -20 到 20 之间的随机整数'
- en: print(randrange(-20, 21))
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: print(randrange(-20, 21))
- en: '#Display a random odd integer between 1 and 99'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '#显示 1 和 99 之间的随机奇数'
- en: print(randrange(1, 99, 2))
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: print(randrange(1, 99, 2))
- en: '#Display a random even integer between 0 and 100'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '#显示 0 到 100 之间的随机偶数'
- en: print(randrange(0, 100, 2))
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: print(randrange(0, 100, 2))
- en: '![](img/notice.jpg)Random numbers are widely used in computer games. For example,
    an “enemy” may show up at a random time or move in random directions. Also, random
    numbers are used in simulation programs, in statistical programs, in computer
    security to encrypt data, and so on.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)随机数在计算机游戏中被广泛使用。例如，“敌人”可能在随机时间出现或随机移动。此外，随机数还用于模拟程序、统计程序、计算机安全中的数据加密等。'
- en: '![](img/notice.jpg)The function randrange() is defined in module random. It
    is not accessible directly in Python, so you need to import it from the random
    module.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意](img/notice.jpg)randrange() 函数定义在 random 模块中。在 Python 中无法直接访问，因此您需要从 random
    模块中导入它。'
- en: Round
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 四舍五入
- en: round(number)
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: round(数字)
- en: This function returns the closest integer of number.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数字的最接近整数。
- en: Example
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2k'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2k'
- en: a = 5.9
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: a = 5.9
- en: 'print(round(a))                     #It displays: 6'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(round(a))                     #显示：6'
- en: 'print(round(5.4))                   #It displays: 5'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(round(5.4))                   #显示：5'
- en: 'If you need the rounded value of number to a specified precision, you can use
    the following formula:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要将数字四舍五入到指定的精度，可以使用以下公式：
- en: round(number * 10 ** precision) / 10 ** precision
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: round(number * 10 ** precision) / 10 ** precision
- en: Example
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2l'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2l'
- en: a = 5.312
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: a = 5.312
- en: y = round(a * 10 ** 2) / 10 ** 2
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: y = round(a * 10 ** 2) / 10 ** 2
- en: 'print(y)                            #It displays: 5.31'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: print(y)                            #它显示：5.31
- en: a = 5.315
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: a = 5.315
- en: y = round(a * 10 ** 2) / 10 ** 2
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: y = round(a * 10 ** 2) / 10 ** 2
- en: 'print(y)                            #It displays: 5.32'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: print(y)                            #它显示：5.32
- en: 'print(round(2.3447 * 10 ** 3) / 10 * 10 ** 3)  #It displays: 2.345'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: print(round(2.3447 * 10 ** 3) / 10 * 10 ** 3)  #它显示：2.345
- en: 'print(round(2.3447 * 1000) / 1000)  #It displays: 2.345'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: print(round(2.3447 * 1000) / 1000)  #它显示：2.345
- en: Square root
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 平方根
- en: sqrt(number)
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: sqrt(number)
- en: This function returns the square root of number, where number can be a positive
    value or zero.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回数字的平方根，其中数字可以是正数或零。
- en: Example
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2m'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2m'
- en: from math import sqrt
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: 'print(sqrt(9))             #It displays: 3.0'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(sqrt(9))             #它显示：3.0'
- en: 'print(sqrt(2))             #It displays: 1.4142135623730951'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(sqrt(2))             #它显示：1.4142135623730951'
- en: x = sqrt(8)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: x = sqrt(8)
- en: 'print(x)                   #It displays: 2.8284271247461903'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(x)                   #它显示：2.8284271247461903'
- en: y = round(sqrt(8))
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: y = round(sqrt(8))
- en: 'print(y)                   #It displays: 3'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(y)                   #它显示：3'
- en: '![](img/notice.jpg)The function sqrt() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意事项](img/notice.jpg)sqrt() 函数定义在 math 模块中。它不能直接在 Python 中访问，因此你需要从 math
    模块中导入它。'
- en: '![](img/notice.jpg)Note how the function sqrt() is nested within the function
    round(). The result of the inner (nested) function (or functions) is used as an
    argument for the outer function. This is a writing style that most programmers
    prefer to follow because it helps to save a lot of code lines. Of course, if you
    nest too many functions, no one will be able to understand your code. A nesting
    of up to four levels is quite acceptable.'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意事项](img/notice.jpg)注意函数 sqrt() 如何嵌套在函数 round() 中。内部（嵌套）函数（或函数）的结果用作外部函数的参数。这是大多数程序员更喜欢遵循的写作风格，因为它有助于节省大量的代码行。当然，如果你嵌套太多的函数，没有人会理解你的代码。最多嵌套四层是相当可接受的。'
- en: Sum
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 总和
- en: fsum(sequence)
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: fsum(sequence)
- en: This function returns the sum of the elements of sequence.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回序列中元素的总和。
- en: Example
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 示例
- en: '![](img/my_exercise_header.png) file_11.2n'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2n'
- en: from math import fsum
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: from math import fsum
- en: seq = [5.5, 6.3, 2]      #Assign a sequence of numbers to seq
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: seq = [5.5, 6.3, 2]      #将一组数字赋值给 seq
- en: 'print(fsum(seq))         #It displays: 13.8'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 'print(fsum(seq))         #它显示：13.8'
- en: '![](img/notice.jpg)The function fsum() is defined in module math. It is not
    accessible directly in Python, so you need to import it from the math module.'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: '![注意事项](img/notice.jpg)fsum() 函数定义在 math 模块中。它不能直接在 Python 中访问，因此你需要从 math
    模块中导入它。'
- en: Exercise 11.2-1 Calculating the Distance Between Two Points
  id: totrans-194
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 11.2-1 计算两点之间的距离
- en: Write a Python program that prompts the user to enter the coordinates (x, y)
    of two points and then calculates the straight line distance between them. The
    required formula is
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个 Python 程序，提示用户输入两个点的坐标 (x, y)，然后计算它们之间的直线距离。所需的公式是
- en: .![Image](img/chapter11-03.png)
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: .![图像](img/chapter11-03.png)
- en: Solution
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 解答
- en: In this exercise, you need to use the function sqrt(), which returns the square
    root of a number.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你需要使用函数 sqrt()，它返回一个数的平方根。
- en: To simplify things, the terms (x[1] - x[2])² and (y[1] - y[2])² are calculated
    individually and the results are assigned to two temporary variables. The Python
    program is shown here.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化问题，将 (x[1] - x[2])² 和 (y[1] - y[2])² 分别计算，并将结果分配给两个临时变量。Python 程序如下所示。
- en: '![](img/my_exercise_header.png) file_11.2-1a'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '![我的练习标题](img/my_exercise_header.png) file_11.2-1a'
- en: from math import sqrt
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: print("Enter coordinates for point A:")
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: print("输入点 A 的坐标：")
- en: x1, y1 = float(input()), float(input())
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: x1, y1 = float(input()), float(input())
- en: print("Enter coordinates for point B:")
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: print("输入点 B 的坐标：")
- en: x2, y2 = float(input()), float(input())
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: x2, y2 = float(input()), float(input())
- en: xTemp = (x1 - x2) ** 2
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: xTemp = (x1 - x2) ** 2
- en: yTemp = (y1 - y2) ** 2
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: yTemp = (y1 - y2) ** 2
- en: d = sqrt(xTemp + yTemp)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: d = sqrt(xTemp + yTemp)
- en: print("Distance between points:", d)
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: print("两点之间的距离:", d)
- en: Now, let's see another approach. It is actually possible to perform all operations
    within the function call. Doing that, the result of the operations will be used
    as an argument for the function. This is a writing style that most programmers
    prefer to follow because it can save a lot of variables and code lines. The Python
    program is shown here.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们看看另一种方法。实际上，可以在函数调用内执行所有操作。这样做，操作的结果将被用作函数的参数。这种写作风格是大多数程序员更喜欢遵循的，因为它可以节省很多变量和代码行。Python
    程序如下所示。
- en: '![](img/my_exercise_header.png) file_11.2-1b'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2-1b'
- en: from math import sqrt
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: print("Enter coordinates for point A:")
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 输入点 A 的坐标：
- en: x1, y1 = float(input()), float(input())
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: x1, y1 = float(input()), float(input())
- en: print("Enter coordinates for point B:")
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: print("输入点 B 的坐标：")
- en: x2, y2 = float(input()), float(input())
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: x2, y2 = float(input()), float(input())
- en: d = sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: d = sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)
- en: print("Distance between points:", d)
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: print("两点之间的距离：", d)
- en: Exercise 11.2-2 How Far Did the Car Travel?
  id: totrans-219
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 11.2-2 汽车行驶了多远？
- en: A car starts from rest and moves with a constant acceleration along a straight
    horizontal road for a specified distance. Write a Python program that prompts
    the user to enter the acceleration and the distance the car traveled and then
    calculates the time traveled. The required formula is
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 一辆汽车从静止开始，以恒定加速度沿直线水平道路行驶一段指定距离。编写一个 Python 程序，提示用户输入加速度和汽车行驶的距离，然后计算行驶时间。所需的公式是
- en: .![Image](img/chapter10-01.png)
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter10-01.png)
- en: where
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 其中
- en: ►S is the distance the car traveled, in meters (m)
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: ►S 是汽车行驶的距离，以米（m）为单位
- en: ►u[o] is the initial velocity (speed) of the car, in meters per second (m/sec)
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: ►u[0] 是汽车的初始速度（速度），以每秒米（m/sec）为单位
- en: ►t is the time the car traveled, in seconds (sec)
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: t 是汽车行驶的时间，以秒（sec）为单位
- en: ►a is the acceleration, in meters per second² (m/sec²)
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: ►a 是加速度，以每秒平方米（m/sec²）为单位
- en: Solution
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 解答
- en: Since the car starts from rest, the initial velocity (speed) u[0] is zero. Thus,
    the formula becomes
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 由于汽车是从静止开始的，初始速度（速度）u[0] 是零。因此，公式变为
- en: .![Image](img/chapter10-02.png)
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter10-02.png)
- en: Now, if you solve for time, the final formula becomes
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，如果你求解时间，最终公式变为
- en: .![Image](img/chapter11-04.png)
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter11-04.png)
- en: In Python, you can use the function sqrt(), which returns the square root of
    a number.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，你可以使用 sqrt() 函数，它返回一个数字的平方根。
- en: '![](img/my_exercise_header.png) file_11.2-2'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_11.2-2'
- en: from math import sqrt
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: 'a = float(input("Enter acceleration: "))'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 'a = float(input("输入加速度: "))'
- en: 'S = float(input("Enter distance traveled: "))'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 'S = float(input("输入行驶距离: "))'
- en: t = sqrt(2 * S / a)
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: t = sqrt(2 * S / a)
- en: print("Your car traveled for", t, "seconds")
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: print("汽车行驶了", t, "秒")
- en: '11.3 Review Questions: True/False'
  id: totrans-239
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.3 复习问题：正确/错误
- en: Choose true or false for each of the following statements.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 对以下每个语句选择正确或错误。
- en: 1)In general, functions are small subprograms that solve small problems.
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 1)一般来说，函数是解决小问题的小程序。
- en: 2)Every programmer must use Heron's iterative formula to calculate the square
    root of a positive number.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 2)每个程序员都必须使用赫伦迭代公式来计算正数的平方根。
- en: 3)The abs() function returns the absolute position of an item.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 3)abs() 函数返回一个项目的绝对位置。
- en: 4)The statement int(3.59) returns a result of 3.6.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 4)语句 int(3.59) 返回的结果是 3.6。
- en: 5)The statement y = int("two") is a valid Python statement.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 5)语句 y = int("two") 是一个有效的 Python 语句。
- en: 6)The statement y = int("2") is a valid Python statement.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 6)语句 y = int("2") 是一个有效的 Python 语句。
- en: 7)The statement int(3) returns a result of 3.0.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 7)语句 int(3) 返回的结果是 3.0。
- en: 8)The statement float(3) returns a result of 3.0.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 8)语句 float(3) 返回的结果是 3.0。
- en: 9)The statement y = float("3.14") is not a valid Python statement.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 9)语句 y = float("3.14") 不是一个有效的 Python 语句。
- en: 10)The value of pi in the math module is equal to 3.14.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 10)math 模块中 pi 的值等于 3.14。
- en: 11)The randrange() function can return negative random numbers.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 11)randrange() 函数可以返回负随机数。
- en: 12)There is a 50% possibility that the statement y = randrange(0, 2) will assign
    a value of 1 to variable y.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 12)语句 y = randrange(0, 2) 有 50% 的可能性将值 1 赋给变量 y。
- en: 13)The statement round(3.59) returns a result of 4.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 13)语句 round(3.59) 返回的结果是 4。
- en: 14)To calculate the sine of 90 degrees, you have to write y = sin(pi / 2)
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 14)要计算 90 度的正弦值，你必须编写 y = sin(pi / 2)
- en: 15)The statement y = sqrt(−2) is valid.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 15)语句 y = sqrt(−2) 是有效的。
- en: 16)The following code fragment satisfies the property of definiteness.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 16)以下代码片段满足确定性的性质。
- en: from math import sqrt
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: a, b = float(input()), float(input())
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: a, b = float(input()), float(input())
- en: x = a * sqrt(b)
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: x = a * sqrt(b)
- en: print(x)
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: '11.4 Review Questions: Multiple Choice'
  id: totrans-261
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.4 复习问题：多项选择题
- en: Select the correct answer for each of the following statements.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 选择以下每个陈述的正确答案。
- en: 1)What is the value of the variable y when the statement y = abs(+5.2) is executed?
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 1)当执行语句 y = abs(+5.2) 时，变量 y 的值是多少？
- en: a)−5.2
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: a)−5.2
- en: b)−5
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: b)−5
- en: c)0.2
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: c)0.2
- en: d)5.2
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: d)5.2
- en: e)none of the above
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: e)以上皆非
- en: 2)Which of the following calculates the sine of 180 degrees?
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 2)以下哪个计算了 180 度的正弦值？
- en: a)sin(180)
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: a)sin(180)
- en: b)sin(pi)
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: b)sin(pi)
- en: c)all of the above
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: c)所有上述选项
- en: d)none of the above
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: d)以上皆非
- en: 3)What is the value of the variable y when the statement y = int(5 / 2) is executed?
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 3)当执行语句 y = int(5 / 2) 时，变量 y 的值是多少？
- en: a)2.5
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: a)2.5
- en: b)3
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: b)3
- en: c)2
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: c)2
- en: d)0.5
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: d)0.5
- en: 4)What is the value of the variable y when the statement y = sqrt(4) ** 2 is
    executed?
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 4)当执行语句 y = sqrt(4) ** 2 时，变量 y 的值是多少？
- en: a)4
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: a)4
- en: b)2
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: b)2
- en: c)8
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: c)8
- en: d)16
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: d)16
- en: 5)What is the value of the variable y when the statement y = round(5.2) / 2
    is executed?
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 5)当执行语句 y = round(5.2) / 2 时，变量 y 的值是多少？
- en: a)2
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: a)2
- en: b)2.5
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: b)2.5
- en: c)2.6
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: c)2.6
- en: d)none of the above
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: d)以上皆非
- en: 11.5 Review Exercises
  id: totrans-289
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 11.5 复习练习
- en: Complete the following exercises.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 完成以下练习。
- en: 1)Create a trace table to determine the values of the variables in each step
    of the Python program for two different executions.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 1)创建一个跟踪表，以确定 Python 程序在两次不同执行中每一步的变量值。
- en: 'The input values for the two executions are: (i) 9, and (ii) 4.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是：(i) 9，和 (ii) 4.
- en: from math import sqrt
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: a = float(input())
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: a = float(input())
- en: a += 6 / sqrt(a) * 2 + 20.4
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: a += 6 / sqrt(a) * 2 + 20.4
- en: b = round(a) % 4
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: b = round(a) % 4
- en: c = b % 3
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: c = b % 3
- en: print(a, ",", b, ",", c)
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: print(a, ",", b, ",", c)
- en: 2)Create a trace table to determine the values of the variables in each step
    of the Python program for two different executions.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 2)创建一个跟踪表，以确定 Python 程序在两次不同执行中每一步的变量值。
- en: 'The input values for the two executions are: (i) −2, and (ii) −3'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是：(i) −2，和 (ii) −3
- en: a = int(input())
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: a = int(input())
- en: b = abs(a) % 4 + a ** 4
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: b = abs(a) % 4 + a ** 4
- en: c = b % 5
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: c = b % 5
- en: print(b, ",", c)
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: print(b, ",", c)
- en: 3)Write a Python program that prompts the user to enter an angle θ in radians
    and then calculates and displays the angle in degrees. It is given that 2π = 360^ο.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 3)编写一个 Python 程序，提示用户输入以弧度表示的角 θ，然后计算并显示该角度的度数。已知 2π = 360°。
- en: 4)Write a Python program that prompts the user to enter the two right angle
    sides A and B of a right-angled triangle and then calculates its hypotenuse. It
    is known from the Pythagorean^([[12]](footnotes.html#Endnote_12)) theorem that
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 4)编写一个 Python 程序，提示用户输入直角三角形的两个直角边 A 和 B，然后计算其斜边。根据勾股定理（[[12]](footnotes.html#Endnote_12)），已知
- en: .![Image](img/chapter11-05.png)
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter11-05.png)
- en: 5)Write a Python program that prompts the user to enter the angle θ (in degrees)
    of a right-angled triangle and the length of its adjacent side, and then calculates
    the length of the opposite side. It is known that
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 5)编写一个 Python 程序，提示用户输入直角三角形的角 θ（以度为单位）和相邻边的长度，然后计算对边的长度。已知
- en: .![Image](img/chapter11-06.png)
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter11-06.png)
