- en: Chapter 10. Reporting Recipes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章 报告菜谱
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Creating PDF reports
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PDF报告
- en: Creating PDF listings
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PDF列表
- en: Creating PDF labels, badges, and invoices
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PDF标签、徽章和发票
- en: Introduction
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'There are many ways to generate PDF reports in web2py. One way is to use `ReportLab`,
    the state of the art library for PDF generation in Python. Another way is to generate
    **LaTeX**, and convert the output to PDF. This is probably the most powerful way
    to generate PDF, and web2py helps you by packaging `markmin2latex` and `markmin2pdf`
    in its `contrib` folder. Yet, both these approaches require mastering of third-party
    libraries and syntax. There is a third way described in this chapter: *convert
    HTML to PDF directly using the pyfpdf library, packaged with web2py*.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在web2py中生成PDF报告有许多方法。一种方法是用`ReportLab`，这是Python中用于生成PDF的顶尖库。另一种方法是将**LaTeX**生成，并将其转换为PDF。这可能是生成PDF最强大的方法，web2py通过在其`contrib`文件夹中打包`markmin2latex`和`markmin2pdf`来帮助你。然而，这两种方法都需要掌握第三方库和语法。本章中描述了第三种方法：*使用web2py打包的pyfpdf库直接将HTML转换为PDF*。
- en: Creating PDF reports
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建PDF报告
- en: Who does not need to generate PDF reports, invoices, bills? web2py ships with
    the `pyfpdf` library, which provides conversion of HTML views into PDF, and can
    be used for this purpose. `pyfpdf` is still in infancy, and lacks some advanced
    features that can be found, for example in `reportlab`, yet it is more than appropriate
    for the average user.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 谁不需要生成PDF报告、发票、账单？web2py自带了`pyfpdf`库，它可以提供HTML视图到PDF的转换，并可用于此目的。`pyfpdf`仍处于初级阶段，缺乏一些高级功能，例如在`reportlab`中可以找到的功能，但对于普通用户来说已经足够了。
- en: 'You can make a professional-looking business report just by using web2py HTML
    helpers, mixing headers, logos, charts, text, and tables. Here is an example:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过使用web2py HTML辅助工具，混合页眉、徽标、图表、文本和表格，制作一份看起来专业的商业报告。以下是一个例子：
- en: '![Creating PDF reports](img/5467OS_10_41.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![创建PDF报告](img/5467OS_10_41.jpg)'
- en: The main advantage of this method is that the same report can be rendered in
    a HTML view, or can be downloaded as PDF, with minimal effort.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法的主要优势是，相同的报告可以以HTML视图的形式呈现，或者可以以PDF格式下载，只需付出最小的努力。
- en: How to do it...
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Here, we provide an example controller that generates a sample report, and
    then discuss its syntax and APIs:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们提供了一个生成示例报告的控制器示例，然后讨论其语法和API：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How it works...
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'The key is in the lines that create and serialize the `pdf` object:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 关键在于创建和序列化`pdf`对象的行：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `pdf` object can parse raw HTML and convert it to PDF. Here, `MyFPDF` extends
    `FPDF`, by defining its own header and footer.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`pdf`对象可以解析原始HTML并将其转换为PDF。在这里，`MyFPDF`通过定义自己的页眉和页脚扩展了`FPDF`。'
- en: 'The following lines play the critical role of serializing HTML components created
    with helpers into PDF:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下行在将使用辅助工具创建的HTML组件序列化为PDF中起着关键作用：
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Internally, `PyFPDF` has a basic HTML renderer using Python `HTMLParser`. This
    reads the HTML code, and translates it to PDF instructions. Although it only supports
    basic rendering, it can be extended easily or mixed up with other PDF primitives.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 内部，`PyFPDF`使用Python `HTMLParser`的基本HTML渲染器。它读取HTML代码，并将其转换为PDF指令。尽管它只支持基本的渲染，但它可以很容易地扩展或与其他PDF原语混合。
- en: Also, you can render basic HTML with `default.pdf` view included with last versions
    of web2py, as long you use simple and supported tags.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，只要使用简单且受支持的标签，你还可以使用web2py最新版本中包含的`default.pdf`视图渲染基本的HTML。
- en: 'Look at the `PyFPDF` wiki documentation for more information and examples at
    the following URLs:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 查看以下URLs中的`PyFPDF`维基文档以获取更多信息及示例：
- en: '[http://code.google.com/p/pyfpdf/wiki/Web2Py](http://code.google.com/p/pyfpdf/wiki/Web2Py)'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://code.google.com/p/pyfpdf/wiki/Web2Py](http://code.google.com/p/pyfpdf/wiki/Web2Py)'
- en: '[http://code.google.com/p/pyfpdf/wiki/WriteHTML](http://code.google.com/p/pyfpdf/wiki/WriteHTML)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://code.google.com/p/pyfpdf/wiki/WriteHTML](http://code.google.com/p/pyfpdf/wiki/WriteHTML)'
- en: Creating PDF listings
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建PDF列表
- en: 'As a follow-up to the previous recipe, we can create nice tables that automatically
    spread over several pages, with headers/footers, column/row highlights, and so
    on, in a very Pythonic way:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 作为前一个菜谱的后续，我们可以以非常Pythonic的方式创建漂亮的表格，这些表格可以自动扩展到多个页面，带有页眉/页脚、列/行高亮等功能：
- en: You can see an example at [http://pyfpdf.googlecode.com/files/listing.pdf](http://pyfpdf.googlecode.com/files/listing.pdf).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[http://pyfpdf.googlecode.com/files/listing.pdf](http://pyfpdf.googlecode.com/files/listing.pdf)中看到一个示例。
- en: How to do it...
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Here is an example that more or less speaks for itself:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个或多或少可以自说的例子：
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Creating pdf labels, badges, and invoices
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建PDF标签、徽章和发票
- en: This recipe shows how to use the `pyfpdf` library to do simple conference badges
    and invoices, but can easily adapted to print labels (`Avery` or other formats),
    and other documents.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方展示了如何使用 `pyfpdf` 库制作简单的会议徽章和发票，但可以轻松地适应打印标签（`Avery` 或其他格式），以及其他文档。
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: First, you have to define two tables to hold templates and elements that will
    hold the values used to design the PDF.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您必须定义两个表格来保存模板和将用于设计PDF的元素。
- en: 'Create a model, for example `models/plugin_fpdf_templates.py`, and add the
    following code to it:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个模型，例如 `models/plugin_fpdf_templates.py`，并将其中的以下代码添加到其中：
- en: '[PRE4]'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Then, in the controller, `badges.py`, add some functions to create the initial
    base label/badge. Easily copy the badges according to your label format, then,
    finally generate a PDF, based on some user data (which is `speakers):`
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在控制器 `badges.py` 中添加一些函数来创建初始的基础标签/徽章。根据您的标签格式轻松复制徽章，然后，最终基于一些用户数据（即 `speakers`）生成PDF：
- en: '[PRE5]'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To check this example:'
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要检查此示例：
- en: Execute `create_label`, and record the value of `pdf_template _id` created
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行 `create_label`，并记录创建的 `pdf_template_id` 的值
- en: Set `copy_labels` equal to the value in `base_pdf_template _id`, then execute
    it
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `copy_labels` 设置为 `base_pdf_template_id` 中的值，然后执行它
- en: Set `speaker_badges` equal to `pdf_template_id`, then execute it
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 `speaker_badges` 设置为 `pdf_template_id`，然后执行它
- en: The function should generate a PDF with the labels (badges) for the registered
    users of your application.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 该函数应生成包含您应用程序注册用户标签（徽章）的PDF。
- en: 'The sample badge has a background image as follows:'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 样本徽章具有以下背景图像：
- en: '![How to do it...](img/5467OS_10_42.jpg)'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何做...](img/5467OS_10_42.jpg)'
- en: Then, it writes the text over it, filling the speaker name, the address, and
    so on. You can use a similar method to make attendance certificates and several
    reports like that.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，它在其上写入文本，填充演讲者姓名、地址等。您可以使用类似的方法制作出席证书和类似的多份报告。
- en: 'For a more complex example, see the following invoice controller (you will
    need to import the invoice design; look at the `pyfpdf` application sample for
    a complete example):'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于更复杂的示例，请参阅以下发票控制器（您需要导入发票设计；查看 `pyfpdf` 应用程序示例以获取完整示例）：
- en: '[PRE6]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Here is an example of the output:'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这里是输出示例：
- en: '![How to do it...](img/5467OS_10_43.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/5467OS_10_43.jpg)'
- en: How it works...
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: PDF templates are predefined documents (such as invoices, tax forms, and so
    on), where each element (text, lines, barcodes, and so on) has a fixed position
    `(x1, y1, x2`, and `y2)`, style (font, size, and so on), and a default text.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: PDF模板是预定义文档（如发票、税务表格等），其中每个元素（文本、线条、条形码等）都有一个固定的位置 `(x1, y1, x2` 和 `y2)`，样式（字体、大小等），以及默认文本。
- en: These elements can act as placeholders, so the program can change the default
    text filling the document.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这些元素可以作为占位符使用，因此程序可以更改默认文本以填充文档。
- en: 'Also, the elements can be defined in a CSV file or in a database, so the user
    can easily adapt the form to his printing needs. **Template** is used like a `dict`,
    setting its items values with the following properties:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，元素也可以定义在CSV文件或数据库中，因此用户可以轻松地根据其打印需求调整表格。**模板**用作 `dict`，使用以下属性设置其项的值：
- en: '`name:` This is the placeholder identification'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name:` 这是占位符标识'
- en: '`type: T` stands for texts, `L` stands for lines, `I` stands for images, `B`
    stands for boxes, and `BC` stands for barcodes'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type: T` 表示文本，`L` 表示线条，`I` 表示图像，`B` 表示框，`BC` 表示条形码'
- en: '`x1, y1, x2`, and `y2:` These are the top-left and bottom-right coordinates
    (in mm).'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`x1, y1, x2` 和 `y2:` 这些是左上角和右下角的坐标（以毫米为单位）。'
- en: '`font:` This can take the following values&mdash;Arial, `Courier, Helvetica,
    Times, Symbol, ZapfDingbats`'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`font:` 这可以取以下值——Arial, `Courier, Helvetica, Times, Symbol, ZapfDingbats`'
- en: '`size:` This is the text size in points, that is, 10'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`size:` 这是文本大小（以点为单位），即 10'
- en: '`bold, italic`, and `underline:` This is the text style (non-empty to enable)'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`bold, italic` 和 `underline:` 这是文本样式（非空以启用）'
- en: '`foreground, background:` These are text and fill colors, that is, `0xFFFFFF`'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`foreground, background:` 这些是文本和填充颜色，即 `0xFFFFFF`'
- en: '`align:` These are the text alignments, where `L` stands for left, `R` stands
    for right, and `C` stands for center'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`align:` 这些是文本对齐方式，其中 `L` 表示左对齐，`R` 表示右对齐，`C` 表示居中对齐'
- en: '`text:` This is the default string that can be replaced at runtime'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text:` 这是可以在运行时替换的默认字符串'
- en: '`priority:` This specifies the `Z-Order`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`priority:` 这指定了 `Z-Order`'
- en: Elements can be defined manually (just passing a `dict)`, or they can be read
    from a CSV sheet (using `parse_csv)`, or stored in a database, as shown in this
    example using the `pdf_element` table.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 元素可以手动定义（只需传递一个`dict`），或者可以从CSV表格（使用`parse_csv`）中读取，或者存储在数据库中，如本例中所示，使用`pdf_element`表。
- en: There's more...
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This is a basic example to show badge generation using fill-in-the-blank PDF
    templates, but it can be used to make any custom repetitive design.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个基本的示例，用于展示使用填空PDF模板生成徽章的过程，但它也可以用来制作任何定制的重复设计。
- en: Also, there is a visual designer to drag-and-drop elements, graphically adjust
    their properties, and easily test them.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还有一个可视化设计器，可以拖放元素，图形调整它们的属性，并轻松测试它们。
- en: 'See PyFPDF wiki documentation for further information at the following URLs:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅以下URL上的PyFPDF wiki文档：
- en: '[http://code.google.com/p/pyfpdf/wiki/Web2Py](http://code.google.com/p/pyfpdf/wiki/Web2Py)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://code.google.com/p/pyfpdf/wiki/Web2Py](http://code.google.com/p/pyfpdf/wiki/Web2Py)'
- en: '[http://code.google.com/p/pyfpdf/wiki/Templates](http://code.google.com/p/pyfpdf/wiki/Templates)'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://code.google.com/p/pyfpdf/wiki/Templates](http://code.google.com/p/pyfpdf/wiki/Templates)'
