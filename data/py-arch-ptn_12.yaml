- en: Part III
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三部分
- en: Implementation
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现
- en: Designing is an important stage to have a plan of action, but really the meat
    of the developing process is in the implementation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 设计是一个重要的阶段，以有一个行动计划，但真正的发展过程的核心在于实现。
- en: Implementing the general architecture design will require multiple smaller design
    decisions about how the code needs to be structured and developed. It doesn't
    matter how good the design is, the execution is critical and will validate or
    adjust the prepared plan.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 实施通用架构设计将需要关于如何构建和开发代码的多个较小设计决策。设计有多好无关紧要，执行是关键，它将验证或调整准备好的计划。
- en: A solid implementation, then, requires developers to be skeptical about their
    own coding abilities and code needs to be tested thoroughly before it can be considered
    "done." This is a normal operation, and when done constantly, it produces good
    cascading effects, not only improving the quality of the code and reducing the
    number of problems but also increasing the capacity of the team to foresee weak
    points and harden them to be sure that, once in operation, the software is reliable
    and works with as few problems as possible.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一个稳健的实现需要开发者对自己的编码能力持怀疑态度，代码在被视为“完成”之前需要彻底测试。这是一个正常操作，并且当持续进行时，会产生良好的级联效应，不仅提高代码质量、减少问题数量，而且增加团队预见弱点并加固它们的能力，以确保一旦投入运行，软件是可靠的，并且尽可能少有问题。
- en: We will see how to approach testing, including the use of **Test-Driven Design**
    (**TDD**), a practice that puts testing at the center of the development process.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何进行测试，包括使用**测试驱动设计**（**TDD**），这是一种将测试置于开发过程中心的实践。
- en: Sometimes some code aspects need to be shared multiple times to be reused. A
    powerful tool in the Python world is the easy creation and sharing of modules
    that can be implemented. We will see how to structure, create, and maintain standard
    Python modules, including uploading them into PyPI, the standard Python repository
    of third-party packages.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 有时某些代码方面需要多次共享以供重用。在Python世界中，一个强大的工具是轻松创建和共享模块，这些模块可以实施。我们将看到如何构建、创建和维护标准的Python模块，包括将它们上传到PyPI，这是第三方包的标准Python仓库。
- en: 'This section of the book includes the following chapters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书本节包括以下章节：
- en: '*Chapter 10*, *Testing and TDD*, explaining different approaches to testing,
    the Test-Driven Design methodology, and tools to write tests easily'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第10章*，*测试和TDD*，解释了不同的测试方法、测试驱动设计方法论以及编写测试的简单工具'
- en: '*Chapter 11*, *Package Management*, describing how to structure code to be
    shared to use in different parts of the system or to share it with the broader
    community'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*第11章*，*包管理*，描述了如何构建代码以便在不同的系统部分使用或与更广泛的社区共享'
