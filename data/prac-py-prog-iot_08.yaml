- en: Electronics 101 for the Software Engineer
  id: totrans-0
  prefs: []
  type: TYPE_NORMAL
  zh: 软件工程师的电子学101
- en: So far in this book, we've focused mostly on software. In this chapter, we're
    about to flip that and focus on electronics. We'll do this by learning about the fundamental
    electronic concepts that are the basis for interfacing basic electronic sensors
    and actuators with your Raspberry Pi. What we'll learn about in this chapter will
    provide the foundation for many of the circuits we'll discuss in *Section 3*, *IoT
    Playground*.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，本书大部分内容都集中在软件上。在本章中，我们将转而关注电子学。我们将通过学习基本的电子概念来学习如何将基本的电子传感器和执行器与您的Raspberry
    Pi进行接口。本章中学到的内容将为我们在第3部分“物联网游乐场”中讨论的许多电路奠定基础。
- en: We will begin by covering the essential workshop tools that you will require
    for working with electronics, and provide practical tips to help you purchase
    electronic components. Next, we'll provide you with guidelines to help keep your
    Raspberry Pi from being damaged as you work with its physical GPIO pins. We will
    also discuss common ways electronic components fail to help you diagnose circuits
    that do not work.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先介绍您在处理电子学时所需的基本车间工具，并提供实用的建议，以帮助您购买电子元件。接下来，我们将为您提供指南，以帮助您在使用物理GPIO引脚时保护您的Raspberry
    Pi不受损害。我们还将讨论电子元件常见的故障方式，以帮助您诊断不工作的电路。
- en: We will then get into the electronics! Here, we will look at two important electronic
    laws – Ohm's Law and Kirchoff's Law – and work through a practical example to
    explain why we used a 200Ω resistor to accompany our LED in the circuits we were
    using in earlier chapters (if you need a refresher about this LED circuit, please
    see [Chapter 2](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml), *Getting Started
    with Python and IoT*).
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将进入电子学！在这里，我们将研究两个重要的电子定律——欧姆定律和基尔霍夫定律，并通过一个实际示例来解释为什么我们在早期章节中使用200Ω电阻器来配合我们的LED电路（如果您需要关于此LED电路的复习，请参见[第2章](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml)，*使用Python和物联网入门*）。
- en: Next, we will explore both digital and analog electronics and discuss the core
    circuits and ideas that are used to integrate them with your Raspberry Pi. We
    will finish this chapter by learning about logic-level conversion, a practical
    technique that is used to interface electronics that operate at different voltages.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨数字和模拟电子学，并讨论用于将它们与您的Raspberry Pi集成的核心电路和思想。我们将通过学习逻辑电平转换来结束本章，这是一种实用的技术，用于接口操作不同电压的电子设备。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Fitting out your workshop
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 装备您的车间
- en: Keeping your Raspberry Pi safe
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护您的Raspberry Pi
- en: Three ways electronic components fail
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子元件故障的三种方式
- en: Electronic interfacing principles for GPIO control
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于GPIO控制的电子接口原理
- en: Exploring digital electronics
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索数字电子学
- en: Exploring analog electronics
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索模拟电子学
- en: Understanding logic-level conversion
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解逻辑电平转换
- en: Technical requirements
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To perform the exercises in this chapter, you will need the following:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要执行本章的练习，您将需要以下内容：
- en: Raspberry Pi 4 Model B
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raspberry Pi 4 Model B
- en: Raspbian OS Buster (with a desktop and recommended software)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raspbian OS Buster（带桌面和推荐软件）
- en: Minimum Python version 3.5
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最低Python版本3.5
- en: These requirements are what the code examples in this book are based on. The
    code examples should work without the need to modify a Raspberry Pi 3 Model B
    or use a different version of Raspbian OS, as long as your Python version is 3.5
    or higher.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些要求是本书中代码示例的基础。只要您的Python版本为3.5或更高，代码示例应该可以在不需要修改Raspberry Pi 3 Model B或使用不同版本的Raspbian
    OS的情况下工作。
- en: You can find this chapter's source code in the `chapter06` folder in this book's
    GitHub repository: [https://github.com/PacktPublishing/Practical-Python-Programming-for-IoT](https://github.com/PacktPublishing/Practical-Python-Programming-for-IoT).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在本书的GitHub存储库的`chapter06`文件夹中找到本章的源代码：[https://github.com/PacktPublishing/Practical-Python-Programming-for-IoT](https://github.com/PacktPublishing/Practical-Python-Programming-for-IoT)。
- en: 'You will need to execute the following commands in a Terminal to set up a virtual
    environment and install the Python libraries required for this chapter:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要在终端中执行以下命令来设置虚拟环境并安装本章所需的Python库：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following dependency is installed from `requirements.txt`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下依赖项从`requirements.txt`中安装：
- en: '**PiGPIO**: The PiGPIO GPIO library ([https://pypi.org/project/pigpio](https://pypi.org/project/pigpio))'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PiGPIO**：PiGPIO GPIO库（[https://pypi.org/project/pigpio](https://pypi.org/project/pigpio)）'
- en: 'The hardware components we will require for this chapter are as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 本章所需的硬件组件如下：
- en: A digital multimeter.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数字万用表。
- en: A red LED (datasheet for reference – [https://www.alldatasheet.com/datasheet-pdf/pdf/41462/SANYO/SLP-9131C-81.html](https://www.alldatasheet.com/datasheet-pdf/pdf/41462/SANYO/SLP-9131C-81.html);
    click on the PDF option).
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红色LED（供参考的数据表-[https://www.alldatasheet.com/datasheet-pdf/pdf/41462/SANYO/SLP-9131C-81.html](https://www.alldatasheet.com/datasheet-pdf/pdf/41462/SANYO/SLP-9131C-81.html);
    点击PDF选项）。
- en: Momentary **Push Button Switch** (**SPST**).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 瞬时**按钮开关**（**SPST**）。
- en: 200 Ω, 1k Ω, 2k Ω, and 51k Ω resistors.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 200Ω、1kΩ、2kΩ和51kΩ电阻器。
- en: 10k Ω potentiometer
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 10kΩ电位器
- en: 4-channel MOSFET-based logic level shifter/converter module. See *Figure 6.12 *(left-hand
    side module) for an example.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 4通道基于MOSFET的逻辑电平转换器模块。示例请参见*图6.12*（左侧模块）。
- en: Fitting out your workshop
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 装备您的车间
- en: 'Having the right tools and equipment is important to help you put together,
    build, test, and diagnose problems in electronic circuits. Here are the bare essentials
    (besides electronic components) you''re going to need as you journey deeper into
    electronics and create circuits like the ones shown in this book:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有正确的工具和设备对于帮助您组装、构建、测试和诊断电子电路非常重要。以下是您在深入电子学并创建本书中所示电路的过程中需要的基本设备（除了电子元件）：
- en: '**Soldering iron**: You will need a soldering iron (and solder) for odd jobs
    such as joining header pins to breakout boards or soldering wires to components
    so that they can be plugged into your breadboard.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**焊接铁**：您将需要一个焊接铁（和焊料）来进行一些零散的工作，比如将排针连接到扩展板上或将导线焊接到元件上，以便它们可以插入您的面包板。'
- en: '**Solder**: Look for a general-purpose 60/40 (60% tin and 40% lead) resin core
    solder with a diameter of around 0.5 mm to 0.7 mm.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**焊料**：寻找一种通用的60/40（60%锡和40%铅）树脂芯焊料，直径约为0.5毫米至0.7毫米。'
- en: '**Solder Sucker/Vacuum**: We all make mistakes, so this device helps you remove
    solder from a joint and undo your soldering work.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吸锡器/真空吸**：我们都会犯错误，所以这个设备可以帮助您从接头中去除焊料并撤消您的焊接工作。'
- en: '**Wet Sponge or Rag**: Always keep your soldering iron tip clean by removing
    built-up solder – a clean tip promotes clean soldering.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**湿海绵或抹布**：始终保持焊接铁头的清洁，去除积聚的焊料 - 干净的铁头有助于清洁焊接。'
- en: '**Wire Stripper and Cutters**: Keep a set of wire cutters and strippers just
    for your electronics work. Chips and burrs in the cutter blades from other uses
    will degrade their performance.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**剥线器和剪刀**：为您的电子工作保留一套剪线器和剥线器。来自其他用途的切割刀刃中的芯片和毛刺会降低其性能。'
- en: '**Digital Multi Meter (DMM**): An entry-level DMM will be suitable for general
    work and will include a range of standard features such as voltage, current, and
    resistance measurements.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字万用表（DMM）**：入门级的DMM适用于一般工作，并将包括一系列标准功能，如电压、电流和电阻测量。'
- en: '**Breadboard**: I highly recommend purchasing two full-size breadboards and
    joining them together to get more breadboard real-estate. It''ll make working
    with the breadboard and components much easier.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面包板**：我强烈建议购买两个全尺寸的面包板并将它们连接在一起，以获得更多的面包板空间。这将使得与面包板和元件一起工作更容易。'
- en: '**Dupont (Jumper) Cables**: These are the wires used with a breadboard. They come
    in various types: male-male, male-female, and female-female. You will need a mixture
    of them all.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**杜邦（跳线）电缆**：这些是与面包板一起使用的电缆。它们有各种类型：公-公、公-母和母-母。您将需要它们的混合。'
- en: '**Loose Header Pins**: These are useful for joining Dupont cables together
    and for making non-breadboard-friendly components breadboard-friendly.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**松散的排针**：这些对于连接杜邦线并使不适合面包板的元件适合面包板非常有用。'
- en: '**External Power Supply**: This is so you can power circuits externally from
    your Raspberry Pi. For the purposes of this book, at a minimum, you will need
    a breadboard power supply that can supply 3.3 and 5 volts.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**外部电源供应**：这样您就可以从树莓派外部为电路供电。对于本书的目的，至少您将需要一个可以提供3.3和5伏的面包板电源。'
- en: '**Raspberry Pi Case**: Make sure you have a case for your Raspberry Pi. A caseless
    Raspberry Pi with all those exposed electronics underneath is an accident waiting
    to happen.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**树莓派外壳**：确保您的树莓派有一个外壳。一个没有外壳的树莓派下面的所有裸露的电子元件都是一场等待发生的事故。'
- en: '**GPIO Breakout Header**: This makes working with a Raspberry Pi and breadboards
    much easier.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GPIO引脚扩展头**：这使得与树莓派和面包板一起工作更容易。'
- en: If you do not already have the aforementioned equipment, keep an eye out for
    a *soldering iron kit* and a *breadboard starter kit* on sites such as eBay and
    Banggood. These kits often come bundled with many of the items listed.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有上述设备，请在eBay和Banggood等网站上寻找*焊接铁套件*和*面包板入门套件*。这些套件通常捆绑了许多列出的项目。
- en: This list shows the basic tools that we require, but what about the actual electronics
    and gadgets to play with? We'll look at that next.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这个清单显示了我们需要的基本工具，但是实际的电子设备和小工具呢？我们接下来会看到。
- en: Buying electronic modules and components
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 购买电子模块和元件
- en: A catalogue of all the components and modules used throughout this book is contained
    in the *Appendix*. In this section, I want to provide a few general tips and guidelines
    to help you out when purchasing electronic components in case you have not done
    much of this before. We will start with a few tips to help you when purchasing
    loose components.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用的所有组件和模块的目录都包含在*附录*中。在本节中，我想提供一些一般的提示和指导，以帮助您在购买电子元件时提供帮助，以防您之前没有做过太多这方面的工作。我们将从一些购买松散元件时的提示开始。
- en: Purchasing lose components
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购买松散的元件
- en: 'When it comes to purchasing loose components such as resistors, LEDs, push
    buttons, transistors, diodes, and other components (which we will be exploring
    in *Section 3*, *IoT Playground – Practical Examples to Interact with the Physical
    World*, of this book), there are some guidelines that will help you out, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 当购买电阻器、LED、按钮、晶体管、二极管和其他元件（我们将在本书的*第3节*，*物联网游乐场 - 与物理世界互动的实际示例*中探讨）等松散的元件时，有一些指导原则将帮助您，如下所示：
- en: Source the specific component values and part numbers listed in the *Appendix*.
    Purchase many spares since it's possible that you will damage components while
    learning to use them.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从*附录*中获取列出的特定组件值和零件号。购买许多备件，因为在学习使用它们时可能会损坏组件。
- en: If you're purchasing from sites such as eBay or Banggood, carefully review the
    details of the item, and preferably zoom in on the images of the parts and check
    the part numbers shown. Never rely solely on the title of the listing. Many sellers
    add a variety of terms to their titles for search optimization purposes that do
    not necessarily relate to the actual item being sold.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您从eBay或Banggood等网站购买，请仔细查看物品的详细信息，并最好放大零件的图像并检查所示的零件号。永远不要仅仅依靠列表的标题。许多卖家在标题中添加各种术语以进行搜索优化，这些术语不一定与实际出售的物品相关。
- en: Search around sites such as eBay and Banggood for terms such as electronic starter
    kit. You may be able to pick up a mixed bundle of loose components in one transaction.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在eBay和Banggood等网站上搜索诸如*电子入门套件*之类的术语。您可能可以一次性购买一组松散的元件。
- en: These points also apply when purchasing sensors and modules, which we will talk
    about next.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这些观点在购买传感器和模块时也适用，我们将在下一节中讨论。
- en: Purchasing open source hardware modules
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 购买开源硬件模块
- en: I'm sure you are aware of open source software, but there is also open source
    hardware. This is where the maker of some electronic hardware publishes the design
    and schematics publicly so that anyone can make (and sell) the hardware. You will
    find many breakout modules (such as the ADS1115 modules we used in [Chapter 5](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml),
    *Connecting Your Raspberry Pi to the Physical World*) from various vendors with
    different (or no) branding. Different vendors may also make their modules in different
    colors and, while less common, different physical layouts.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我相信你们都知道开源软件，但也有开源硬件。这是一些电子硬件制造商公开发布设计和原理图，以便任何人都可以制造（和销售）这些硬件。您会发现许多来自不同供应商的分立模块（例如我们在[第5章](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml)中使用的ADS1115模块，“将您的树莓派连接到物理世界”），它们具有不同的（或没有）品牌。不同的供应商也可能以不同的颜色制造他们的模块，虽然较少见，但物理布局也可能不同。
- en: The *core* or *heart* of a module – particularly the more simple ones – is often
    a single **integrated circuit** (**IC** or chip). As long as the core IC and I/O
    pins are similar, it's generally safe to assume that boards will operate the same
    way.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 模块的*核心*或*心脏* - 尤其是更简单的模块 - 通常是一个单一的**集成电路**（**IC**或芯片）。只要核心IC和I/O引脚相似，通常可以安全地假设板子将以相同的方式运行。
- en: SparkFun ([https://www.sparkfun.com/](https://www.sparkfun.com/)) and Adafruit
    ([http://adafruit.com/](http://adafruit.com/)) are two companies producing open
    source hardware that many others clone. A big advantage you will get when you
    purchase from these companies is that, often, their products include code examples,
    tutorials, and tips on using their products, and the products are of good quality.
    Yes, you may pay a little more, but when starting out and especially for more
    complex electronics, the investment can save you a lot of time. It's not uncommon
    to find that cheaper clones arrive faulty – so you'll need to purchase two or
    more to hedge your bets.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: SparkFun（[https://www.sparkfun.com/](https://www.sparkfun.com/)）和Adafruit（[http://adafruit.com/](http://adafruit.com/)）是两家生产开源硬件的公司，许多其他公司都在克隆他们的产品。当您从这些公司购买产品时，您将获得一个很大的优势，通常他们的产品包括代码示例、教程和使用产品的技巧，并且产品质量很好。是的，您可能需要支付更多的钱，但在刚开始和尤其是对于更复杂的电子产品来说，这样的投资可以节省您大量的时间。便宜的克隆品常常出现故障
    - 因此您需要购买两个或更多来规避风险。
- en: We have now covered some suggestions and tips to help you fit out your workshop
    and buy electronic components. Having the right tools available and learning how
    to use them (especially soldering, which will take practice if this is a new skill)
    is essential to help make your electronics journey a smooth and productive one.
    At times, purchasing loose components can be confusing and sometimes error-prone,
    especially where subtle differences in specifications or labeling can have dramatic
    practical implications, so be diligent and double-check what you are buying if
    you are unsure. Finally, as suggested in the *Appendex*, purchase spare components.
    It's no fun having to abruptly stop your learning midway through a circuit build
    because a component gets damaged and you need to source or wait for a replacement
    to arrive!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经介绍了一些建议和技巧，以帮助您装备您的车间并购买电子元件。拥有合适的工具并学会使用它们（特别是焊接，如果这是一项新技能，需要练习）对于使您的电子之旅顺利和高效至关重要。有时，购买散装元件可能会令人困惑，有时也容易出错，特别是在规格或标签上的细微差异可能会产生重大的实际影响的地方，因此如果您不确定，请勤勉地仔细检查并核对您购买的东西。最后，如*附录*中建议的，购买备用元件。如果一个元件损坏，您需要寻找或等待替换品到货，突然中断您的学习过程是不好玩的！
- en: Next, we will discuss guidelines to help you keep your Raspberry Pi safe when
    interfacing electronics to it.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论一些指南，以帮助您在将电子设备与树莓派连接时保持安全。
- en: Keeping your Raspberry Pi safe
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护您的树莓派
- en: In this section, we will cover guidelines and suggestions to help keep your
    Raspberry Pi safe while you are interfacing electronics with it. By being careful
    and diligent in your approach, these guidelines will help you minimize any potential
    for damage to your Raspberry Pi or electronics components.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将介绍一些指南和建议，以帮助您在将电子设备与树莓派连接时保持安全。通过谨慎和勤勉的方法，这些指南将帮助您最大程度地减少对树莓派或电子元件造成损坏的潜在风险。
- en: 'Don''t worry if some of the electronic-orientated points such as voltages and
    currents do not make sense at the moment. We''ll be touching on these concepts
    throughout this chapter, and during *Section 3*, *IoT Playground – Practical Examples
    to Interact with the Physical World*, of this book, so more context will be coming:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一些与电子相关的点，如电压和电流，目前还不清楚，不要担心。我们将在本章和本书的*第3节*“物联网游乐场 - 与物理世界互动的实际示例”中涉及这些概念，因此会有更多的上下文：
- en: '*Never* apply more than 3.3 volts to any input GPIO pin. Higher voltages can
    cause damage.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远*不要向任何输入GPIO引脚施加超过3.3伏特的电压。更高的电压可能会造成损坏。'
- en: '*Never* use more than 8 mA from any single output GPIO pin (they can handle
    up to ~16 mA, but by default, stick to 8 mA to ensure reliable GPIO operation). As
    a rule of thumb, do not power anything other than LEDs and breakout modules unless
    you know what you are doing. In [Chapter 7](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml),
    *Turning Things On and Off*, we''ll look at circuits that can be used to switch
    higher current and voltage loads.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远*不要从任何单个输出GPIO引脚使用超过8毫安（它们可以处理高达〜16毫安，但默认情况下，保持在8毫安以确保可靠的GPIO操作）。作为一个经验法则，除非您知道自己在做什么，否则不要为除LED和分立模块以外的任何东西供电。在[第7章](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml)中，“打开和关闭东西”，我们将看看可以用来开关更高电流和电压负载的电路。'
- en: '*Never use* more than a combined 50 mA across multiple GPIO pins.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远不要*在多个GPIO引脚上使用超过合计50毫安的电流。'
- en: '*Never* use more than 0.5 mA with a GPIO pin configured for input.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远*不要在配置为输入的GPIO引脚上使用超过0.5毫安。'
- en: '*Always* disconnect the power to your circuits before connecting or disconnecting
    them to your Raspberry Pi or making any changes.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在连接或断开连接到树莓派或进行任何更改之前，*始终*断开电路的电源。
- en: '*Always* stop any running programs that are interacting with GPIO pins before
    connecting, disconnecting, or working on a circuit.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在连接、断开或处理电路之前，*一定要*停止与GPIO引脚交互的所有运行程序。
- en: '*Always* double*-*check your wiring before applying power to your circuits.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在给电路供电之前，*一定要*仔细检查你的布线。
- en: '*Never s*ubstitute random component values in a circuit – they don''t have
    the correct and expected value shown in the schematic diagram.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远不要*在电路中替换随机的元件值-它们不具有原理图中显示的正确和预期值。'
- en: If you see a lightning bolt icon on your Raspberry Pi's monitor or the monitor
    goes blank when you run your program, that's the Pi telling you that your circuit
    is drawing too much power from the Raspberry Pi.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你在树莓派的显示器上看到闪电图标，或者当运行程序时显示器变黑，那就是树莓派告诉你你的电路从树莓派吸取了太多的电力。
- en: '*Never* directly connect and use inductive loads and mechanical devices such
    as motors, relays, or solenoids that use magnates from GPIO pins. They can draw
    too much current and cause a phenomenon known as *EMF* *flyback*, which can damage
    surrounding electronics, including your Raspberry Pi.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*永远不要*直接连接和使用感应负载和机械设备，比如使用GPIO引脚的电机、继电器或磁铁的螺线管。它们可能会吸取太多电流，并引起所谓的*EMF* *flyback*现象，这可能会损坏周围的电子设备，包括你的树莓派。'
- en: The power supply you have for your Raspberry Pi should ideally be 3 amps (15
    watts). Many phone chargers are rated less than this, and their use is a common
    reason for seeing the lightning bolt icon (or a blank display) when interfacing
    simple electronics.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你为树莓派准备的电源最好是3安培（15瓦）。许多手机充电器的额定功率低于这个值，它们的使用是看到闪电图标（或空白显示）的常见原因。
- en: When working with electronics, from time to time, components do get damaged
    or fail. Let's briefly look at ways this can occur.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理电子设备时，有时候元件会受损或失效。让我们简要地看一下这种情况可能发生的方式。
- en: Three ways electronic components fail
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子元件失效的三种方式
- en: Working with electronics is different from software. In the software world,
    we can change code, break code, debug code, and fix code as many times as we want
    with no real harm. We can also freely back up and restore states and data. When
    working with electronics, we do not have this luxury. We're in the physical world,
    and if something gets damaged, it's final!
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理电子设备时，与软件不同。在软件世界中，我们可以更改代码、破坏代码、调试代码和修复代码，而且可以多次进行这些操作而没有真正的伤害。我们还可以自由备份和恢复状态和数据。在处理电子设备时，我们没有这种奢侈。我们处在物理世界，如果某样东西受损了，那就是最终的！
- en: Components and circuits made of components, including a Raspberry Pi, can become
    damaged and fail in many different ways due to them being connected incorrectly,
    oversupplying too much voltage, supplying or sourcing too much current, overheating,
    and even mishandling delegate components to the point that they physically break
    or are damaged by static electricity from your body.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 包括树莓派在内的元件和电路可能因连接不正确、过度供电、供电或输出过多电压、过热，甚至对组件进行错误处理而受损或失效，甚至物理上断裂或被你的身体静电损坏。
- en: 'When a component fails, it can fail in a few different ways:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当元件失效时，可能会以几种不同的方式失效：
- en: It fails in a puff of smoke, melts, or otherwise displays a physical sign that
    it has been damaged.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它会在一股烟雾中失败，熔化，或以其他方式显示出受损的物理迹象。
- en: It fails silently, with no visual indication of the failure.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它悄然失败，没有任何视觉指示失败。
- en: It is damaged but continues to work more or less as expected, but then sometime
    in the future, it just silently fails without warning.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它虽然受损，但基本上还是按预期的方式工作，但在将来的某个时候，它会在没有警告的情况下悄然失效。
- en: Failing with a physical sign is the outcome we want because it's obvious what
    failed and what needs to be replaced. It also gives us a starting point where
    we can start diagnosing our circuits. Silent failures and delayed failures are
    painful and time-consuming, especially when starting.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以物理标志失败是我们想要的结果，因为很明显是什么失败了，需要被替换。这也给了我们一个起点，我们可以开始诊断我们的电路。无声失败和延迟失败是痛苦和耗时的，特别是在开始时。
- en: 'Here are some tips to help you build and debug faulty circuits when you''re
    starting:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些帮助你在开始时构建和调试故障电路的提示：
- en: Always double-check your circuits before applying power.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在连接电源之前，始终要仔细检查电路。
- en: Have spare parts at hand. It's much easier to diagnose and test circuits if
    you have known good parts you can substitute into the circuit.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 备有备用零件。如果你有已知的好零件可以替换到电路中，那么诊断和测试电路就会更容易。
- en: If you deem something damaged, then bin it immediately. You don't need faulty
    parts getting mixed up with good parts, especially when there is no obvious sign
    of damage.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你认为某样东西受损了，那么立即丢弃它。你不需要有故障的零件和好的零件混在一起，特别是当没有明显的损坏迹象时。
- en: Next, we will discuss core electronic principles that govern why and how components
    are chosen in a circuit and illustrate the concepts with our LED circuit.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论核心电子原理，这些原理决定了电路中为什么以及如何选择元件，并通过我们的LED电路来说明这些概念。
- en: Electronics interfacing principles for GPIO control
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: GPIO控制的电子接口原则
- en: While this book is not a book on electronic theory, there are a few core principles
    that are important to have an appreciation for because they impact circuit design
    and how they interface with your Raspberry Pi. The goal of this section is to
    present you with a basic understanding of why circuits are designed in certain
    ways and how this relates to GPIO interfacing. Armed with this basic knowledge,
    I hope it provides you with the incentive to explore the core ideas and principles
    in more depth. You'll find suggested resources in the *Further reading* section,
    at the end of this chapter.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这本书不是一本电子理论的书，但有一些核心原则是重要的，因为它们影响电路设计以及它们与你的树莓派的接口。本节的目标是向你介绍为什么电路以某种方式设计以及这与GPIO接口有关的基本理解。掌握了这些基本知识，我希望它能激励你更深入地探索核心思想和原则。你会在本章末尾的*进一步阅读*部分找到建议的资源。
- en: We will start our coverage of electronic principles with what is arguably two
    of the most fundamental electrical principles of them all – *Ohm's Law* and p*ower.*
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从电子原理开始，这可能是所有电气原理中最基本的两个原理 - *欧姆定律*和*功率*。
- en: Ohm's Law and power
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 欧姆定律和功率
- en: Ohm's Law is a fundamental electronics principle that explains how *voltage*,
    *resistance*, and *current* relate to each other. Together with the principle
    of *power*, these are core underlying principles that explain why certain value
    components are chosen in circuits.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 欧姆定律是一个基本的电子原理，解释了*电压*、*电阻*和*电流*之间的关系。连同*功率*原理，这些是解释为什么在电路中选择某些值的核心基本原理。
- en: 'Ohm''s Law is expressed as the following equation:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 欧姆定律表示为以下方程：
- en: '![](assets/da753273-432f-4c95-a698-57330ac312ff.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/da753273-432f-4c95-a698-57330ac312ff.png)'
- en: Here, *V* is voltage measured in volts, *I* (capital i) is the current measured
    in amps, and *R* is resistance measured in Ohms, commonly prefixed with Ω, the
    Greek symbol for Omega.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*V*是以伏特为单位的电压，*I*（大写i）是以安培为单位的电流，*R*是以欧姯为单位的电阻，通常用希腊字母Ω表示。
- en: 'On the other hand, power is expressed as the following equation:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，功率表示为以下方程：
- en: '![](assets/33f905b8-998d-4365-b9c8-5f3f4ded0781.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/33f905b8-998d-4365-b9c8-5f3f4ded0781.png)'
- en: Here, *P* is power measured in Watts, *I* (capital i) is the current measured
    in amps (same as in Ohm's Law), and *R* is resistance measured in Ohms (same as
    in Ohm's Law).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，*P*是以瓦特为单位的功率，*I*（大写i）是以安培为单位的电流（与欧姆定律中相同），*R*是以欧姯为单位的电阻（与欧姆定律中相同）。
- en: The take-home principle regarding these equations is that you cannot change
    a single parameter in an electronic circuit without affecting another. This means
    that components are selected and arranged in a circuit to ensure that the voltage,
    current, and power is proportioned appropriately for individual components and
    the overall operation of the circuit.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方程的重要原则是，您不能改变电子电路中的单个参数而不影响另一个参数。这意味着组件被选择和排列在电路中，以确保电压、电流和功率适当地比例分配给各个组件和电路的整体运行。
- en: If you are new to this world of electronics and this does not sink in straight
    away, do not get disheartened! It does take time and practice. In addition to
    Ohm's Law, we also have Kirchhoff's Law, which we will be talking about next.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是电子世界的新手，这些内容不会立即理解，不要灰心！这需要时间和实践。除了欧姆定律，我们还有基尔霍夫定律，下面我们将讨论它。
- en: Kirchhoff's circuit laws
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基尔霍夫电路定律
- en: 'Kirchhoff''s voltage and current laws are two laws that circuits abide by.
    They are two laws essential to electrical engineering, and are stated as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 基尔霍夫的电压和电流定律是电路遵循的两个定律。它们是电气工程中的两个基本定律，陈述如下：
- en: The algebraic sum of all voltages in a loop must equal zero.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环路中所有电压的代数和必须等于零。
- en: The algebraic sum of all currents entering and exiting a node must equal zero.
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 进入和退出节点的所有电流的代数和必须等于零。
- en: That's about as deep as we're going to go on these laws. I have mentioned these
    laws here because the voltage law is the one we will see in action in the next
    section, when we calculate why we've been using a 200 Ohm resistor in earlier
    chapters for our LED circuits.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们将要讨论的这些定律的深度。我在这里提到这些定律，因为电压定律是我们将在下一节中看到的定律，当我们计算为什么在本书的早期章节中为LED电路使用了200欧姆电阻时。
- en: With that, we have covered briefly three important electrical principles or
    laws – Ohm's Law, power, and Kirchhoff's circuit laws. It's now time to put these
    principles into practice. We will do this with an exercise to work out why we
    have been using a 200Ω series resistor in our LED circuits.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经简要介绍了三个重要的电气原理或定律 - 欧姆定律、功率和基尔霍夫电路定律。现在是时候将这些原理付诸实践了。我们将通过一项练习来解释为什么我们在LED电路中一直使用200Ω串联电阻。
- en: Why are we using a 200 Ohm resistor for the LED circuit?
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么我们在LED电路中使用200欧姆电阻？
- en: So far in this book, our electronics have mostly evolved around LEDs. I have
    done this for good reason. LEDs (and resistors) are easy to use components and
    provide the basic building blocks for learning about concepts such as Ohm's Law,
    power, and Kirchhoff's voltage law. Master the basics of LED circuits and the
    calculations that lie behind them and you will be well on your way to undertaking
    more complex components and circuits.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本书中，我们的电子学大部分都围绕LED发展。我这样做是有充分理由的。LED（和电阻）是易于使用的组件，并为学习欧姆定律、功率和基尔霍夫电压定律等概念提供了基本的构建模块。掌握LED电路的基础知识和背后的计算，您将很快掌握更复杂的组件和电路。
- en: Let's go a little deeper with our LED and explore its data properties and see
    the application of Ohm's Law, power, and Kirchhoff's voltage law. Through a series
    of examples, we will work through a process to explain why the LED circuits you've
    seen previously in this book are using a 200 Ohm resistor.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解LED，并探索其数据属性，并看看欧姆定律、功率和基尔霍夫电压定律的应用。通过一系列示例，我们将通过一个过程解释为什么在本书中之前看到的LED电路中使用了200欧姆电阻。
- en: 'The following is a basic LED circuit, similar to what we have been using so
    far in this book. If you need a refresher on this circuit, please revisit [Chapter
    2](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml), *Getting Started with Python and
    IoT*:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个基本的LED电路，类似于我们在本书中迄今为止使用的电路。如果您需要恢复这个电路，请回顾[第2章](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml)，*开始使用Python和物联网*：
- en: '![](assets/1bcb5727-5cc2-4a11-95be-13ed36b9463d.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1bcb5727-5cc2-4a11-95be-13ed36b9463d.png)'
- en: Figure 6.1 – LED and resistor circuit
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 - LED和电阻电路
- en: We have been using a *typical* 5 mm *red* LED. I've extracted part of its *typical*
    technical specifications here. This distinction of *typical* and *red* is emphasized
    because LED specifications do vary, depending on their color, maximum luminosity,
    physical size, and manufacturer. Even LEDs from the same batch vary.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们一直在使用*典型*的5毫米*红色*LED。我在这里提取了它的*典型*技术规格的一部分。强调*典型*和*红色*的区别是因为LED的规格会有所不同，取决于它们的颜色、最大亮度、物理尺寸和制造商。即使是同一批次的LED也会有所不同。
- en: 'Here are some of the core specifications relating to our referenced red LED
    datasheet:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与我们参考的红色LED数据表相关的一些核心规格：
- en: '**A Forward Voltage Drop** **(V[F])** **between 1.7 and 2.8 volts**, with the
    typical drop being 2.1 volts. This is the voltage the LED needs to illuminate.
    If there is not enough voltage in the circuit for the LED, it will not illuminate.
    If there is more than it requires, that''s okay – the LED will just take what
    it needs.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正向电压降（VF）在1.7到2.8伏特之间**，典型降为2.1伏特。这是LED需要照亮的电压。如果电路中的电压不足以点亮LED，LED将不会点亮。如果超过所需电压，那没关系-LED将只取所需的电压。'
- en: '**A maximum continuous Forward Current** (**I[F]) ****of 25 mA**. This is the
    safe current required to illuminate the LED to its maximum brightness when it''s
    always on, which, for some LEDs, can be too bright for comfort. Providing less
    current means the LED will be dimmer, while providing more can damage the LED.
    For our LED and datasheet, when pulsing the LED (for example, using PWM), the
    maximum current can go up to (I[FP]) 100 mA.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大连续正向电流（IF）为25毫安**。这是LED达到最大亮度所需的安全电流，当LED一直开启时，对于一些LED来说，这可能太亮了。提供更少的电流意味着LED会更暗，而提供更多的电流可能会损坏LED。对于我们的LED和数据表，当脉冲LED（例如使用PWM）时，最大电流可以达到（IFP）100毫安。'
- en: What about power? LEDs are components that work on voltage and current. If you
    look at the power equation (![](assets/93621e39-5a1d-4a11-af90-32775ea48b95.png)),
    you'll see that power is a function of voltage (*V*) and current (*I*). As long
    as you are working within the current ratings of the LED, you will be within its
    power tolerances.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 功率呢？LED是根据电压和电流工作的组件。如果你看一下功率方程（![](assets/93621e39-5a1d-4a11-af90-32775ea48b95.png)），你会发现功率是电压（V）和电流（I）的函数。只要你在LED的电流额定范围内工作，你就在其功率容限范围内。
- en: If you do not have a matching datasheet for an LED (which is common when pushing
    in small quantities), use a voltage drop of 2 volts and a reference amperage of
    20 mA for your calculations. You can also use a digital multimeter set to the
    diode setting to measure the forward voltage for an LED.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有LED的匹配数据表（在小批量推入时很常见），可以使用2伏特的电压降和20毫安的参考电流进行计算。你也可以使用数字万用表设置为二极管设置来测量LED的正向电压。
- en: Let's move on and see how we arrive at the value for the R1 resistor.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续看看我们如何得出R1电阻的值。
- en: Calculating the resistor value
  id: totrans-121
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算电阻值
- en: 'In the preceding circuit diagram, we have the following parameters:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的电路图中，我们有以下参数：
- en: Supply voltage of 3.3 volts
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 供电电压为3.3伏特
- en: LED typical forward voltage of 2.1 volts
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LED典型正向电压为2.1伏特
- en: LED current of 20 mA (test condition for mA is mentioned in the datasheet for
    voltage drops)
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LED电流为20毫安（数据表中提到了电压降的毫安测试条件）
- en: 'Here is the process to calculate the resistor value:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是计算电阻值的过程：
- en: 'Our resistor (labelled R1) needs to drop 1.2 volts, which is a simple application
    of Kirchhoff''s voltage law that we mentioned briefly previously; that is, *The
    algebraic sum of all voltages in a loop must equal zero*. So, if our source voltage
    is +3.3 volts and the LED drops 2.1 volts, then the resistor must drop 1.2 volts.
    This means we get the following equation:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的电阻（标记为R1）需要降低1.2伏特，这是我们之前简要提到的柯希霍夫电压定律的一个简单应用；即*回路中所有电压的代数和必须等于零*。因此，如果我们的源电压是+3.3伏特，LED降低2.1伏特，那么电阻必须降低1.2伏特。这意味着我们得到以下方程：
- en: +3.3V + -2.1V + -1.2V = 0V
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: +3.3V + -2.1V + -1.2V = 0V
- en: 'We can arrange Ohm''s Law algebraically so that we get the following:'
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以代数地排列欧姆定律，得到以下结果：
- en: '![](assets/da82fc27-418f-4857-ad67-ea7fea45deca.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/da82fc27-418f-4857-ad67-ea7fea45deca.png)'
- en: 'Using this formula, we calculate our resistor''s value:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用这个公式，我们计算出了我们电阻的值：
- en: '![](assets/7465557d-5bc1-476c-89a2-10dfb6a16074.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7465557d-5bc1-476c-89a2-10dfb6a16074.png)'
- en: = 60Ω (hence, resistor R1 in the preceding circuit is 60Ω)
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: = 60Ω（因此，前面电路中的电阻R1为60Ω）
- en: But this is not 200Ω. Our example so far is a simple LED and resistor circuit
    connected to a 3.3 volt supply, not a Raspberry Pi. There's more to consider because
    we need to respect the current limitations of the Raspberry Pi's GPIO pins, which
    we'll do next.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 但这不是200Ω。到目前为止，我们的例子是一个简单的LED和电阻电路，连接到3.3伏特的电源，而不是树莓派。还有更多要考虑的，因为我们需要尊重树莓派GPIO引脚的电流限制，接下来我们将做到这一点。
- en: '**Factoring in the Raspberry Pi''s current limits**'
  id: totrans-135
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**考虑树莓派的电流限制**'
- en: The maximum current we can safely use with a GPIO pin configured for output
    is 16 mA. However, there is a configurable aspect of GPIO pins, which means that,
    by default, we should not use more than 8 mA per GPIO. This limit can be configured
    so that it goes up to 16 mA, but this is beyond our scope. Ideally, we want to
    be moving toward external circuits when more current is needed rather than pushing
    the pins higher and higher. We will learn how to do this in [Chapter 7](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml), *Turning Things
    On and Off*.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以安全使用的与配置为输出的GPIO引脚的最大电流为16毫安。然而，GPIO引脚有一个可配置的方面，这意味着，默认情况下，我们不应该使用超过每个GPIO
    8毫安。这个限制可以配置，使其达到16毫安，但这超出了我们的范围。理想情况下，我们希望在需要更多电流时向外部电路移动，而不是不断提高引脚的电流。我们将在[第7章](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml)中学习如何做到这一点，*打开和关闭*。
- en: While we want to limit a single GPIO *output* pin to 8 mA, we should not exceed
    a combined total of ~50 mA over multiple GPIO pins. When it comes to GPIO *input*
    pins, we should limit the current to 0.5 mA for safe operation when connecting
    an external input device or component. Connecting an input GPIO pin directly to
    the Raspberry Pi's +3.3 V or GND pin is fine as the measured current is approximately
    70 *micro*amps. (We'll learn how to measure current with a multimeter in [Chapter
    7](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml), *Turning **Things On and Off.*)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们希望将单个GPIO输出引脚限制在8毫安，但我们不应该超过多个GPIO引脚的总和约50毫安。当涉及到GPIO输入引脚时，我们应该将电流限制在0.5毫安，以确保在连接外部输入设备或组件时安全操作。将输入GPIO引脚直接连接到树莓派的+3.3V或GND引脚是可以的，因为测得的电流约为70微安（我们将在[第7章](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml)中学习如何使用万用表测量电流，*打开和关闭*）。
- en: 'Let''s modify our calculation and continue with this process:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们修改我们的计算并继续这个过程：
- en: 'If we cap the current to 8 mA, we can use our previous equation to arrive at
    the value for R1:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们将电流限制在8毫安，我们可以使用之前的方程得出R1的值：
- en: '![](assets/e2e2b068-4f07-4f4c-80a9-ca52582b2475.png)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/e2e2b068-4f07-4f4c-80a9-ca52582b2475.png)'
- en: R1 = 150Ω
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: R1 = 150Ω
- en: A resistor's rated value is never expected to be exact. They have a value tolerance,
    and if our physical resistor was less than 150Ω, according to Ohm's Law, we'd
    increase the current in the circuit and exceed the 8 milliamp limit.
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电阻器的额定值从来不会是精确的。它们有一个值的公差，如果我们的物理电阻器小于150Ω，根据欧姆定律，我们会增加电路中的电流并超过8毫安的限制。
- en: 'Due to this, we will choose a slightly higher value. This might be as simple
    as using a rule of thumb, such as selecting a standard resistor value 2 values
    higher than 150Ω, or multiplying 150Ω by our resistor''s tolerance and selecting
    the next highest standard value. Let''s use the latter approach, assuming our
    resistor''s tolerance is ±20% (which, by the way, would be a very poor quality
    resistor. 5% and 10% is more common):'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将选择一个稍高一点的值。这可能就是使用经验法则，比如选择一个比150Ω高两个标准电阻值，或者将150Ω乘以我们电阻器的公差，然后选择下一个最高的标准值。让我们使用后一种方法，假设我们电阻器的公差是±20%（顺便说一句，这将是一个非常低质量的电阻器。5%和10%更常见）：
- en: 150Ω x 1.2 = 180Ω
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 150Ω x 1.2 = 180Ω
- en: 180Ω just happens to be a standard resistor value, so we can use it, but I don't
    have one (and you'll often find that you don't have the exact resistor values
    you want after calculations either!). However, I do have a supply of 200Ω resistors,
    so I will just use one of these.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 180Ω恰好是一个标准的电阻值，所以我们可以使用它，但是我没有（经常会发现在计算后你也没有你想要的确切电阻值！）。然而，我有一些200Ω的电阻器，所以我会使用其中一个。
- en: For prototyping and tinkering, any resistor from 180Ω up to about 1kΩ will be
    more than adequate for our circuit. Just remember that as you increase the resistor's
    value, you limit the current, so the LED will be dimmer.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 对于原型设计和修补，从180Ω到约1kΩ的任何电阻器都足以满足我们电路的需求。只要记住，随着电阻器值的增加，电流会受到限制，所以LED会变得更暗。
- en: But what about the power going through the resistor and its power rating? We'll
    calculate that next.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 但是电阻器上的功率和功率额定值呢？我们将在下面计算。
- en: Calculating the resistor's power dissipation
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 计算电阻器的功率耗散
- en: General-purpose resistors like the ones we're using in our breadboards are commonly
    rated to be 1/8 Watt, 1/4 Watt, or 1/2 Watt. If you supply too much power to a
    resistor, it will burn out with a puff of smoke and give off a horrible smell.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 我们面包板中使用的通用电阻器通常额定为1/8瓦特、1/4瓦特或1/2瓦特。如果向电阻器提供过多的功率，它将烧毁并冒出一股难闻的气味。
- en: 'Here is how we calculate the power dissipation of our 200Ω resistor when we
    have a 3.3-volt power source:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们有一个3.3伏的电源时，这是我们计算200Ω电阻器的功耗的方法：
- en: 'The power dissipated by a resistor can be calculated with the following formula.
    Note that the voltage *V* is the voltage drop across the resistor in volts, while *R*
    is the resistance in Ohms:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 电阻器的功率可以用以下公式计算。注意，电压*V*是电阻器两端的电压降，单位是伏特，而*R*是欧姆的电阻：
- en: '![](assets/3ad95b98-ca5a-4f81-afee-c78f93abe671.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3ad95b98-ca5a-4f81-afee-c78f93abe671.png)'
- en: 'Therefore, when we substitute our resistor''s voltage drop and resistance value
    in the formula, we get the following:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，当我们在公式中替换我们电阻器的电压降和电阻值时，我们得到以下结果：
- en: '![](assets/da8b9153-8294-4f0c-be8c-6689e8f2f2cc.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/da8b9153-8294-4f0c-be8c-6689e8f2f2cc.png)'
- en: = 0.0072 Watts, or 7.2 milliwatts (or mW)
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: = 0.0072瓦特，或7.2毫瓦（或mW）
- en: Our power value of 7.2 mW is below even a 0.25 Watt-rated resistor, so a 1/8
    Watt or above resistor is safe in our circuits and will not burn out in a puff
    of smoke.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们的功率值为7.2毫瓦，甚至低于0.25瓦特的电阻器，因此1/8瓦特或更高的电阻器在我们的电路中是安全的，不会烧毁。
- en: 'If you think the power equation looks different from the one you saw earlier,
    you''re right. This is the power equation rewritten to use voltage and resistance.
    Here''s a handy diagram that I''m sure you will see during your electronics journey
    that expresses Ohm''s Law and power in different ways:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得功率方程看起来与你之前看到的不同，你是对的。这是重新编写的功率方程，使用电压和电阻。这是一个方便的图表，我相信你在电子学学习过程中会看到的，它以不同的方式表达了欧姆定律和功率：
- en: '![](assets/aae01c1f-bdce-4e6c-b6d5-7e8a6ab760c7.png)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/aae01c1f-bdce-4e6c-b6d5-7e8a6ab760c7.png)'
- en: Figure 6.2 – Ohm's Law power wheel
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 - 欧姆定律功率轮
- en: I'll leave you with a final tip about LEDs, and something to think about.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我给你留下一个关于LED的最后提示，以及一些思考。
- en: It's the current that alters the LED's brightness. The 25 mA value from the
    datasheet is the maximum continuous safe current to drive the LED to its maximum
    brightness. Less current is fine; it just means the LED will be dimmer.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 改变LED的亮度是由电流决定的。数据表中的25毫安值是驱动LED到最大亮度的最大连续安全电流。更少的电流也可以，只是意味着LED会变得更暗。
- en: Hang on a minute – in [Chapter 5](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml),
    *Connecting Your Raspberry Pi to the Physical World*, we used PWM, which is a
    pseudo-analog *voltage* used to change the brightness of the LED. Pause and think
    about this for a minute…what's going on? It's simply an application of Ohm's Law.
    In our circuit, our resistor was fixed at 200Ω. Hence, by varying the voltage,
    we also vary the current and hence the brightness of the LED.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 等一下 - 在[第5章](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml)中，*将您的树莓派连接到物理世界*，我们使用了PWM，这是一种伪模拟*电压*，用于改变LED的亮度。暂停一下，思考一下……发生了什么？这只是欧姆定律的一个应用。在我们的电路中，我们的电阻器固定在200Ω。因此，通过改变电压，我们也改变了电流，从而改变了LED的亮度。
- en: What do you think? Rest assured that's as complex as the math will get in this
    book. I do, however, encourage you to repeat these exercises until you are comfortable
    with the process. Understanding the basics of electronics (and the calculations
    that go with it) is the difference between a hobbyist who just guesses at components
    using trial and error until a circuit works and an engineer who can actually build
    what they need.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 您认为呢？请放心，这是本书中数学的复杂程度。但我鼓励您重复这些练习，直到您对这个过程感到舒适。理解电子基础知识（以及相关的计算）是一个爱好者只是通过试错猜测组件直到电路工作的区别，和一个真正可以构建所需内容的工程师之间的区别。
- en: Next, we will explore core concepts related to digital electronics.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将探讨与数字电子相关的核心概念。
- en: Exploring digital electronics
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索数字电子
- en: Digital I/O essentially means detecting or making a GPIO pin high or low. In
    this section, we will explore core concepts and see some examples of digital I/O
    in operation. We'll then talk about how this relates to your Raspberry Pi and
    any digital electronic components you will interface with it. We will start or
    digital I/O journey by looking at and playing with digital output.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 数字I/O基本上意味着检测或使GPIO引脚为高电平或低电平。在本节中，我们将探讨核心概念，并看一些数字I/O操作的示例。然后，我们将讨论这与您的树莓派以及您将与之接口的任何数字电子元件的关系。我们将通过查看和操作数字输出来开始或数字I/O之旅。
- en: Digital output
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字输出
- en: In simple electrical terms for our Raspberry Pi, when we drive a GPIO pin high,
    its voltage measures ~3.3 volts, and when we drive it low, it measures ~0 volts.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 简单来说，对于我们的树莓派来说，当我们将GPIO引脚设为高电平时，其电压测量值为~3.3伏特，当我们将其设为低电平时，测量值为~0伏特。
- en: 'Let''s observe this using a multimeter:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用万用表观察一下：
- en: Different multimeters may have different connections and labeling than the multimeter
    illustrated here. Consult your multimeter's manual if you are unsure how to set
    it up for measuring voltage.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 不同的万用表可能有不同的连接和标记，与这里所示的万用表不同。如果您不确定如何设置测量电压，请参阅您的万用表手册。
- en: 'Set your multimeter to its voltage setting and attach it to GPIO 21 and GND,
    as shown in the following diagram:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的万用表设置为电压设置，并将其连接到GPIO 21和GND，如下图所示：
- en: '![](assets/12e7ad52-5289-4058-9954-c943702ddb46.png)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/12e7ad52-5289-4058-9954-c943702ddb46.png)'
- en: Figure 6.3 – Connecting a multimeter to a GPIO pin
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 - 将万用表连接到GPIO引脚
- en: 'Run the following code, which you can find in the `chapter06/digital_output_test.py`
    file. You will notice that the meter toggles between about 0 volts and about 3.3
    volts. I say *about* because nothing is ever really perfect or precise in electronics;
    there are always tolerances. Here''s a synopsis of the code:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码，您可以在`chapter06/digital_output_test.py`文件中找到。您会注意到仪表在大约0伏和大约3.3伏之间切换。我说“大约”，因为在电子设备中没有什么是完美或精确的；总是有公差。以下是代码的概要：
- en: '[PRE1]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: On line 1, we configured GPIO 21 as an output pin, while on line 2, we started
    a `while` loop that alternates the state of GPIO 21 between high and low (that
    is, 0 and 1) with a 3-second delay in between each state transition.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在第1行，我们将GPIO 21配置为输出引脚，而在第2行，我们启动了一个`while`循环，该循环在每个状态转换之间有3秒的延迟，将GPIO 21的状态在高和低之间交替变换（即0和1）。
- en: As you may have noticed, digital output on our Raspberry Pi is that simple –
    high or low. Now, let's consider digital input.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到，我们树莓派上的数字输出就是这么简单 - 高电平或低电平。现在，让我们考虑数字输入。
- en: Digital input
  id: totrans-178
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字输入
- en: Generally, when we think about digital input and voltages for a 3.3-volt device
    such as the Raspberry Pi, we think of connecting a pin to the ground (0 volts)
    to drive it low or connect it to 3.3 volts to make it high. In most applications,
    this is exactly what we will strive to do. However, in truth, there is more to
    this story because GPIO pins don't just operate at two discrete voltage levels.
    Instead, they work within a range of voltages that define an input pin as being
    high and low. This applies to the Raspberry Pi and similar computers with GPIOs,
    microcontrollers, ICs, and breakout boards.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，当我们考虑数字输入和3.3伏特设备的电压时，比如树莓派，我们认为将引脚连接到地（0伏特）以使其低电平，或者连接到3.3伏特以使其高电平。在大多数应用中，这确实是我们努力做的事情。但实际上，这个故事还有更多内容，因为GPIO引脚不仅仅在两个离散的电压水平上工作。相反，它们在定义输入引脚为高和低的一系列电压范围内工作。这适用于树莓派和具有GPIO的类似计算机、微控制器、集成电路和分线板。
- en: 'Consider the following diagram, which shows a voltage continuum between 0 and
    3.3 volts, as well as three highlighted areas labeled *low, floating,* and *high*:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑以下图表，显示了0到3.3伏特之间的电压连续体，以及标有“低、悬空”和“高”的三个突出区域：
- en: '![](assets/51462758-4c5a-44eb-b85c-16db3d1e61c6.png)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/51462758-4c5a-44eb-b85c-16db3d1e61c6.png)'
- en: Figure 6.4 – Digital input trigger voltages
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 - 数字输入触发电压
- en: This illustration is telling us that if we apply a voltage between 2.0 volts
    and 3.3 volts, then the input pin will read as a digital high. Alternatively,
    if we apply a voltage between 0.8 volts and 0 volts, the pin will read as a digital
    low. Anything beyond these ranges is a danger zone and you'll likely damage your
    Raspberry Pi. While you probably won't be accidentally applying a negative voltage
    to a pin, there is a real risk of accidentally applying more than 3.3 volts to
    a pin since it is common to be working with 5-volt digital circuits.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 这幅插图告诉我们，如果我们在2.0伏特和3.3伏特之间施加电压，那么输入引脚将被读取为数字高电平。或者，如果我们在0.8伏特和0伏特之间施加电压，引脚将被读取为数字低电平。超出这些范围的任何电压都是危险区域，您很可能会损坏您的树莓派。虽然您可能不会意外地向引脚施加负电压，但很可能会意外地向引脚施加超过3.3伏特的电压，因为通常会使用5伏特的数字电路。
- en: So, what about that gray area in the middle? Are we digital high or digital
    low? The answer is that we do not know and can never reliably know. In this range,
    the pin is said to be *floating.*
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，中间的灰色区域呢？我们是数字高电平还是数字低电平？答案是我们不知道，也永远无法可靠地知道。在这个范围内，引脚被称为“悬空”。
- en: 'Let''s see the effects of a floating pin. We''ll start by creating the following
    circuit on our breadboard:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看悬空引脚的影响。我们将在面包板上创建以下电路：
- en: '![](assets/b950eaef-573a-4442-bdd5-a0eed9d133ac.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/b950eaef-573a-4442-bdd5-a0eed9d133ac.png)'
- en: Figure 6.5 – Push button circuit
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 - 按钮电路
- en: 'Here are the steps for this. The step numbers here match the numbered black
    circles shown in the preceding diagram:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是此步骤。这里的步骤编号与前面图中显示的带有编号的黑色圆圈相匹配：
- en: Position the push button on your breadboard.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮放在面包板上。
- en: Connect one leg of the push button to a GND pin on your Raspberry Pi. In the
    diagram, we are connecting the lowermost leg of the push button (shown at hole E4).
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮的一端连接到树莓派上的GND引脚。在图中，我们将按钮的下部腿（显示在E4孔处）连接到GND引脚。
- en: Finally, connect the other leg of the push button (in the diagram, this is the
    uppermost leg, shown at hole E2) to GPIO 21 on your Rasberry Pi.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将按钮的另一端（在图中，这是最上面的腿，显示在E2孔处）连接到树莓派上的GPIO 21。
- en: 'With your circuit build now complete, let''s test the circuit and see what
    happens:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您的电路已经建立完成，让我们测试电路并看看会发生什么：
- en: 'Run the following code, which can be found in the `chapter06/digital_input_test.py`
    file:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码，可以在`chapter06/digital_input_test.py`文件中找到：
- en: '[PRE2]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: This code configures GPIO21 as input on line (1). On line (2), using a `while`
    loop, we rapidly read in the GPIO pin's value (1 or 0) and print it to the Terminal.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码在第1行上将GPIO21配置为输入。在第2行上，使用`while`循环，我们快速读取GPIO引脚的值（1或0）并将其打印到终端。
- en: Touch the wires on the breadboard with your fingers, as well as any exposed
    metal contacts surrounding the switches. The wires and contacts act like an antenna
    picking up electrical noise, and you should see the Terminal output fluctuating
    between high (1) and low (0) – this is a *floating* pin. This also illustrates
    a common misconception that a GPIO pin configured for input and connected to nothing
    is always low by default.
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用手指触摸面包板上的导线，以及开关周围的任何裸露的金属触点。导线和触点就像天线一样捕捉电气噪音，您应该看到终端输出在高（1）和低（0）之间波动 - 这是一个*浮动*引脚。这也说明了一个常见的误解，即配置为输入并且未连接任何东西的GPIO引脚默认总是低电平。
- en: If your initial thoughts were along the lines of "*Wow! I can create a touch
    switch because of this*," then sorry; you'll be disappointed – it's just not reliable,
    at least not without additional electronics.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您最初的想法是“哇！我可以创建一个触摸开关”，那么抱歉；您会感到失望 - 这并不可靠，至少没有额外的电子设备。
- en: Next, we will look at two common ways to avoid floating pins.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将看两种常见的避免浮动引脚的方法。
- en: Using pull-up and pull-down resistors
  id: totrans-199
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用上拉和下拉电阻
- en: When a pin is not connected to anything, it's said to be floating. As shown
    in the preceding example, it *floats* around, picking up electrical noise around
    it from other nearby components, wires connected to it, and charges coming from
    yourself.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 当引脚未连接到任何东西时，它被称为浮动。如前面的示例所示，它在周围*漂移*，从其他附近的组件、连接到它的导线和来自您自己的电荷中捕捉电气噪音。
- en: Referring again to the preceding diagram, when the button is *pressed*, the
    circuit completes and GPIO 21 gets connected to the ground, and hence we can say
    for certain that the pin is low. And as we just saw when the button is *not* pressed,
    GPIO 21 is floating – it can fluctuate between high and low due to external noise.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 再次参考前面的图表，当按钮*按下*时，电路完成，GPIO 21连接到地，因此我们可以确定引脚为低电平。正如我们刚才看到的，当按钮*未*按下时，GPIO
    21是浮动的 - 由于外部噪音，它可以在高电平和低电平之间波动。
- en: This needs to be rectified, and we can do this two ways – with a resistor or
    in code.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要纠正，我们可以用电阻或代码来解决这个问题。
- en: The resistor solution
  id: totrans-203
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电阻解决方案
- en: 'If we add an external resistor to the circuit, as shown in the following diagram,
    then we''ll introduce what is called a *pull-up resistor*, which serves the purpose
    of *pulling* (meaning connecting) GPIO pin 21 *up* (meaning connected to a positive
    voltage) to 3.3 volts:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们在电路中添加一个外部电阻，如下图所示，那么我们将引入所谓的*上拉电阻*，它的作用是*拉*（意思是连接）GPIO引脚21 *上拉*（意思是连接到正电压）到3.3伏：
- en: '![](assets/1be002af-489f-4fcb-9955-9f780f5a9604.png)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/1be002af-489f-4fcb-9955-9f780f5a9604.png)'
- en: Figure 6.6 – Push button circuit with a pull-up resistor
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 - 带上拉电阻的按钮电路
- en: 'Here are the steps to create this circuit on your breadboard. The step numbers
    here match the numbered black circles shown in the preceding diagram:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是在面包板上创建此电路的步骤。这里的步骤编号与前面图中显示的带有编号的黑色圆圈相匹配：
- en: Place the push button on your breadboard.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮放在面包板上。
- en: Place the resistor (with a value between 50kΩ to 65kΩ ) on your breadboard.
    One end of the resistor shares the same row (shown at hole B5) as the upper positioned
    leg of the push button. The other end of the resistor is placed on an empty row.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在面包板上放置一个电阻（值在50kΩ到65kΩ之间）。电阻的一端与按钮的上部位置的腿共用同一行（显示在孔B5处）。电阻的另一端放在一个空行上。
- en: Connect the other end of the resistor to a 3.3-volt pin on your Raspberry Pi.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电阻的另一端连接到树莓派上的3.3伏引脚。
- en: Connect the lower leg of the push button to a GND pin on your Raspberry Pi.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮的下部腿连接到树莓派上的GND引脚。
- en: Finally, connect the row shared by the upper leg of the push button and lower
    leg of the resistor (shown at hold D5) to GPIO 21 on your Raspberry Pi.
  id: totrans-212
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将按钮的上部腿和电阻的下部腿共用的行（显示在D5孔处）连接到树莓派上的GPIO 21。
- en: 'Now that you have created the circuit, here is a brief description of how it
    works:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经创建了电路，这里是它的简要描述：
- en: When the button is *not* *pressed*, the resistor *pulls* GPIO 21 *up* to the
    3.3-volt pin. Current flows along this path and the pin will read as a guaranteed
    digital high.
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当按钮*未* *按下*时，电阻将GPIO 21 *上拉*到3.3伏引脚。电流沿着这条路径流动，引脚将被读取为保证的数字高电平。
- en: When the button *is pressed*, the segment of the circuit connecting GPIO 21
    to the ground is created. Because more current flows in this path since it has
    less (near-zero) resistance, the GPIO pin is connected to the ground, and thus
    will read as low.
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当按钮*按下*时，连接GPIO 21到地的电路段被创建。由于在这条路径中流动的电流更多，因为它的电阻更小（接近零），所以GPIO引脚连接到地，因此会读取为低电平。
- en: Run the same code in `chapter06/digital_input_test.py`, only this time, when
    you touch the wires, the output *should not* fluctuate.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在`chapter06/digital_input_test.py`中运行相同的代码，只是这一次，当你触摸电线时，输出*不应该*波动。
- en: If your circuit does not work and your wiring is correct, try rotating your
    push button 90 degrees on the breadboard.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的电路不工作，而且你的接线是正确的，尝试将你的按钮在面包板上旋转90度。
- en: Why is a 50kΩ to 65kΩ  resistor being used in the preceding diagram? Read on
    – we'll find out why when we look at a code-based alternative to using our own
    physical resistors.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么在前面的图中使用50kΩ到65kΩ的电阻？继续阅读-当我们看一个基于代码的替代方案时，我们将会找出原因。
- en: The code solution
  id: totrans-219
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 代码解决方案
- en: We can solve our floating pin situation in code by telling our Raspberry Pi
    to activate and connect an embedded pull-up resistor to GPIO 21, which, according
    to the Raspberry PI's documentation, will be within the range 50kΩ-65kΩ, hence
    why we stipulated that range in the circuit shown in the previous diagram.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过告诉我们的树莓派激活并连接一个嵌入式上拉电阻到GPIO 21来在代码中解决我们的浮动引脚问题，根据树莓派的文档，这个电阻将在50kΩ-65kΩ的范围内，这就是为什么我们在前面的图中规定了这个范围。
- en: 'The following diagram shows a circuit similar to the one shown in the preceding
    diagram, but without the physical resistor in the external circuit. I''ve added
    a resistor inside the Raspberry Pi diagram to illustrate the fact that there is
    a physical resistor hiding away somewhere in the Raspberry Pi''s circuitry, even
    though we can''t see it:'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了一个类似于前图所示的电路，但在外部电路中没有物理电阻。我在树莓派图中添加了一个电阻，以说明树莓派的电路中确实有一个物理电阻，尽管我们看不到它：
- en: '![](assets/574a6411-caa5-4a6c-b37c-46b7a03f0d9c.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/574a6411-caa5-4a6c-b37c-46b7a03f0d9c.png)'
- en: Figure 6.7 – Push button circuit using an embedded pull-up resistor
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 - 使用嵌入式上拉电阻的按钮电路
- en: 'Let''s enable a pull-up resistor in code and test this circuit. Here are the
    steps for you to follow:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在代码中启用一个上拉电阻并测试这个电路。以下是你需要遵循的步骤：
- en: This example uses the push button circuit shown previously in *Figure 6.5.* Please
    recreate this circuit on your breadboard before continuing.
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这个例子使用了之前在*图6.5*中显示的按钮电路。在继续之前，请在面包板上重新创建这个电路。
- en: 'Next, edit the `chapter06/digital_input_test.py` file to enable an internal
    pull-up resistor, as follows:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，编辑`chapter06/digital_input_test.py`文件，启用内部上拉电阻，如下所示：
- en: '[PRE3]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Run the `chapter06/digital_input_test.py` file again. As you press the button,
    you should see the high/low (0/1) values changing on the Terminal; however, touching
    the wires or Terminals of the button should not cause any interference.
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次运行`chapter06/digital_input_test.py`文件。当你按下按钮时，你应该看到终端上的高/低（0/1）值在改变；然而，触摸按钮的电线或终端不应该引起任何干扰。
- en: When reading through the preceding code and observing the Terminal output, if
    the fact that the Terminal prints `1` when the button is *not* *pressed* and `0`
    when it is *pressed* (that is, button pressed = pin low) seems a bit back to front
    in a programming sense, then you are right…and wrong. It's because you're looking
    at the circuit as a programmer. I've done this on purpose because it is a configuration
    you will see often. This is known as *active low*, which means the button is active
    (pressed) when the pin is low.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 当阅读前面的代码并观察终端输出时，如果终端在按钮*未* *按下*时打印`1`，在按钮*按下*时打印`0`（即按钮按下=引脚低）在编程意义上似乎有点前后颠倒，那么你是对的...也是错的。这是因为你是以程序员的身份看待电路。我故意这样做是因为这是你经常会看到的配置。这被称为*主动低*，这意味着当引脚低时按钮是活动的（按下）。
- en: The opposite resistor setup is also possible and equally valid. That is, you
    can design the circuit with GPIO 21 pulled to the ground by default, in which
    case we are employing a *pull-down* resistor, whether it be a physical resistor
    or an embedded one activated in code. In this scenario, you will then see that
    when the button is pressed, the pin reads 1 (high), and it may feel more comfortable
    in code!
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 相反的电阻设置也是可能的，同样有效。也就是说，你可以设计一个将GPIO 21默认接地的电路，这样我们就使用了一个*下拉*电阻，无论是物理电阻还是在代码中激活的嵌入式电阻。在这种情况下，当按钮被按下时，引脚读取1（高），在代码中可能会更舒服！
- en: As an exercise, try to change the circuit and code so that it's pull-down by
    default.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 作为练习，尝试更改电路和代码，使其默认为下拉。
- en: When reading a digital input circuit, you need to read the circuit in combination
    with the code that accompanies it, or in respect to the code you will write. Overlooking
    how pull-up or pull-down resistors are used can be the basis for seemingly simple
    digital input circuits not working.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读数字输入电路时，你需要结合伴随的代码来阅读电路，或者考虑你将要编写的代码。忽视上拉或下拉电阻的使用可能是看似简单的数字输入电路不工作的基础。
- en: Now that we understand we can have physical and code-activated pull-up and pull-down
    resistors, can we say that one approach is better than the other? The short answer
    is, yes, sometimes...external resistors do have an advantage.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们明白了我们可以有物理和代码激活的上拉和下拉电阻，我们可以说一个方法比另一个更好吗？简短的答案是，有时候...外部电阻确实有优势。
- en: 'The advantage of an external pull-up or pull-down resistor is that they are
    always present. Code-activated pull-up and pull-downs are only present if two
    conditions are met:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 外部上拉或下拉电阻的优势在于它们始终存在。代码激活的上拉和下拉只有在满足两个条件时才存在：
- en: Your Raspberry Pi is powered on.
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的树莓派已经开机。
- en: You have run the code that activates the pull-up or pull-down. Until this happens,
    the pin is floating! We will look at an application where we prefer an external
    pull-down resistor in [Chapter 7](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml),
    *Turning Things On and Off.*
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你已经运行了激活上拉或下拉的代码。在此之前，引脚是浮动的！我们将在[第7章](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml)中看到一个应用，*打开和关闭设备*。
- en: This is not to say that code-activated pull-up and pull-down resistors are inferior,
    it just means you need to consider the impact of a floating pin for your circuit
    when your Raspberry Pi is off or you are not running code.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是说代码激活的上拉和下拉电阻是次优的，只是意味着当您的树莓派关闭或您没有运行代码时，您需要考虑漂移引脚对电路的影响。
- en: We have now covered the basics of digital input and output, which, in many ways,
    are the backbone of electronic interfacing. We also learned that there is more
    going on with digital input than simply a high/on or low/off state in that threshold
    voltage levels actually determine what voltage level is considered a digital high
    or a digital low for your Raspberry Pi. In addition to this, we also learned that
    it is necessary to appropriately employ a pull-up or pull-down resistor when dealing
    with digital input so that the input circuit is reliable and predictable – that
    is, it's not *floating.*
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在已经介绍了数字输入和输出的基础知识，这在许多方面是电子接口的支柱。我们还了解到，数字输入并不仅仅是高电平或低电平状态，实际上阈值电压水平确定了树莓派的数字高电平或数字低电平的电压水平。除此之外，我们还了解到在处理数字输入时，有必要适当地使用上拉或下拉电阻，以使输入电路可靠和可预测
    - 也就是说，它不会*漂移*。
- en: Your understanding of digital I/O will be beneficial to you when designing predictable
    digital input circuits (floating pins and missing or incorrectly used pull-up
    or down-down resistors are common sources of errors when starting out!). Furthermore,
    your understanding of threshold digital high/low voltage levels will be valuable
    when you are integrating with non-Raspberry Pi devices and electronics. We'll
    pick up on this digital voltage theme again later in this chapter, in the *Logic-level
    conversio*n section.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 当设计可预测的数字输入电路时，您对数字I/O的理解将对您有所帮助（漂移引脚和缺失或错误使用的上拉或下拉电阻在刚开始时是常见的错误来源！）。此外，当您与非树莓派设备和电子设备集成时，您对数字高/低电压水平的理解将是有价值的。我们将在本章后面再次提到这个数字电压主题，在*逻辑电平转换*部分。
- en: Now, let's move on from digital and explore analog electronics.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从数字电子学转向模拟电子学。
- en: Exploring analog electronics
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索模拟电子学
- en: As we saw in the previous section, digital I/O is all about discrete highs or
    lows, as determined by voltage. Analog I/O, on the other hand, is all about degrees
    of voltage. In this section, we will explore some core concepts and look at examples
    of analog I/O in operation.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前一节中看到的，数字I/O完全取决于电压确定的离散高电平或低电平。另一方面，模拟I/O完全取决于电压的程度。在本节中，我们将探讨一些核心概念，并查看模拟I/O的操作示例。
- en: Analog output
  id: totrans-243
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟输出
- en: In [Chapter 5](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml), *Connecting Your
    Raspberry Pi to the Physical World*, we discussed that by using PWM on a digital
    output pin, we can create a pseudo-analog output or the appearance of a variable
    output voltage. Furthermore, we also saw PWM in use back in [Chapter 3](b9f3d19f-a490-4752-ac4a-5607496dc3d9.xhtml),
    *Networking with RESTful APIs and Web Sockets Using Flask*, when we used this
    concept to control the brightness of an LED.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml)中，*将您的树莓派连接到物理世界*，我们讨论了通过在数字输出引脚上使用PWM，我们可以创建伪模拟输出或可变输出电压的外观。此外，我们还在[第3章](b9f3d19f-a490-4752-ac4a-5607496dc3d9.xhtml)中看到了PWM的使用，*使用Flask进行RESTful
    API和Web套接字网络*，当时我们使用了这个概念来控制LED的亮度。
- en: 'In this section, we''ll explore the idea underlying PWM just a little further
    with a short exercise. Our example is similar to the one we performed for digital
    output previously, only this time, we are using PWM to produce a varying voltage
    on a GPIO pin. Here are the steps we need to follow:'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们将通过一个简短的练习进一步探讨PWM的基本概念。我们的示例与之前进行数字输出的示例类似，只是这一次，我们使用PWM在GPIO引脚上产生可变电压。以下是我们需要遵循的步骤：
- en: Connect your multimeter to your Raspberry Pi as we did for digital output in *Figure
    6.3*.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的万用表连接到您的树莓派上，就像我们在*图6.3*中为数字输出所做的那样。
- en: Run the following code, which you can find in the `chapter06/analog_pwm_output_test.py`
    file.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码，您可以在`chapter06/analog_pwm_output_test.py`文件中找到。
- en: 'As the code runs, your multimeter will step through a range of different voltages.
    They won''t be exact, as per the Terminal screen output shown here, but should
    be reasonably close enough to illustrate the intent:'
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当代码运行时，您的万用表将步进到一系列不同的电压。虽然不会像终端屏幕输出所示的那样精确，但应该足够接近以说明意图：
- en: '[PRE4]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Let's have a look at the code, which is partly replicated here.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下代码，部分代码如下。
- en: 'It is using PiGPIO''s hardware-timed PWM, which is configured on line 1, while a
    set of duty cycle percentages are defined on line 2\. These are the duty cycle
    values that our code will step through on line 3\. It''s on line 4 that we set
    the duty cycle for GPIO 21 before sleeping for 5 seconds so that you can read
    the value on the Terminal and your multimeter:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用了PiGPIO的硬件定时PWM，在第1行进行配置，同时在第2行定义了一组占空比百分比。这些是我们的代码将在第3行中步进的占空比值。在第4行，我们设置了GPIO
    21的占空比，然后休眠5秒，这样您就可以在终端和您的万用表上读取值：
- en: '[PRE5]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If you ever need to provide a more true form analog output from your Raspberry
    Pi, then you might like to explore how you can use a **Digital-to-Analog Converter**
    (**DAC**). They will typically interface via I2C or SPI, and you will control
    them via a driver library similar to the ADS1115 ADC, only you'll be outputting
    a varying voltage rather than reading one.
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要从您的树莓派提供更真实的模拟输出，那么您可能会喜欢探索如何使用**数字模拟转换器**（**DAC**）。它们通常通过I2C或SPI进行接口，您将通过类似于ADS1115
    ADC的驱动程序库来控制它们，只是您将输出可变电压而不是读取电压。
- en: Now that we've discussed analog output and seen a simple example of how to create
    one using PWM, next, we will look at the input side of analog electronics.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经讨论了模拟输出，并看到了如何使用PWM创建一个简单的示例，接下来，我们将看看模拟电子学的输入端。
- en: Analog input
  id: totrans-255
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟输入
- en: In [Chapter 5](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml), *Connecting Your
    Raspberry Pi to the Physical World*, we learned how to use the ADS1115 ADC breakout
    module, and that analog input is all about measuring a voltage from within a predefined
    range, which, for our purposes, is between 0 volts and 3.3 volts. While in digital
    I/O, we'd say 0 volts measured on a pin means low and 3.3 means high, in analog
    I/O, there are no concepts of high or low in this regard.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第5章](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml)中，*将您的树莓派连接到物理世界*，我们学习了如何使用ADS1115
    ADC扩展模块，模拟输入就是测量预定义范围内的电压，对于我们的目的来说，范围在0伏特到3.3伏特之间。在数字I/O中，我们会说在引脚上测量到0伏特意味着低，3.3伏特意味着高，但在模拟I/O中，这方面没有高低的概念。
- en: Many simple analog components and sensors operate on the principle that their
    resistance changes in accordance with what they measure. For example, a **light
    dependent resistor**, or **LDR**, changes its resistance in proportion to the
    light it detects. However, analog input is all about measuring voltage. To turn
    a varying resistance into a varying voltage, we use a voltage divider circuit.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 许多简单的模拟元件和传感器都是根据它们测量的内容来改变它们的电阻。例如，光敏电阻器（LDR）的电阻会随着它检测到的光的变化而变化。然而，模拟输入是关于测量电压的。为了将变化的电阻转换为变化的电压，我们使用电压分压器电路。
- en: Voltage dividers
  id: totrans-258
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电压分压器
- en: 'The following diagram shows a simple two-resistor voltage divider circuit.
    Our resistor values are fixed for this example to illustrate the basic principle.
    Notice that we''ve used 5 volts in this example. The reason for this will be revealed
    shortly when we cover logic-level conversion:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了一个简单的两电阻器电压分压器电路。本例中，我们的电阻值是固定的，以说明基本原理。请注意，我们在本例中使用了5伏特。我们之所以这样做的原因很快就会揭晓，当我们讨论逻辑电平转换时：
- en: '![](assets/7dd2315e-73d9-4629-9dc4-b5f0c8d364cb.png)'
  id: totrans-260
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/7dd2315e-73d9-4629-9dc4-b5f0c8d364cb.png)'
- en: Figure 6.8 – Measuring voltages across a voltage divider
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 - 测量电压跨电压分压器
- en: 'It''s a principle of electronics and resistors that voltage is *dropped* across
    series resistors in proportion to their resistance. In the preceding circuit,
    R1 is twice as high as R2, so it drops twice as much voltage. Here is the basic
    formula, as applied to the preceding circuit (it''s actually the application of
    Kirchhoff''s Law and Ohm''s Law again):'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 电子学和电阻器的原理是，电压会按照它们的电阻值成比例地*降低*在串联电阻器上。在前述电路中，R1的值是R2的两倍，所以它降低的电压是R2的两倍。以下是基本公式，应用于前述电路（实际上是再次应用了基尔霍夫定律和欧姆定律）：
- en: '![](assets/0e2f9821-4be4-43c2-b7f7-69f20c5b7d59.png)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/0e2f9821-4be4-43c2-b7f7-69f20c5b7d59.png)'
- en: V[out] = 5 volts x 2000Ω / (1000Ω + 2000Ω)
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: V[out] = 5伏特 x 2000Ω / (1000Ω + 2000Ω)
- en: V[out] = 3.33333 volts
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: V[out] = 3.33333伏特
- en: We'll see the application of voltage dividers in *Section 3*, *IoT Playground
    – Practical Examples to Interact with the Physical World*, but for now, to see
    this principle in practice and to help cement the concept, apply a digital multimeter
    across the points marked in the preceding diagram to verify that the measured
    voltages are close to what's indicated; that is ~1.6 volts across R1 (points A
    and B in the preceding diagram) and ~3.3 volts across R2 (points B and C). The
    measurement across R2 (points B and C) is the *V[out]* in the preceding equation.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在*第3节*中看到电压分压器的应用，*物联网游乐场-与物理世界互动的实际示例*，但现在，为了看到这个原理在实践中的应用并帮助巩固概念，将数字万用表放在前图中标记的点之间，以验证测量的电压是否接近所示的值；即在R1（前图中的A和B点）之间测量约1.6伏特，在R2（前图中的B和C点）之间测量约3.3伏特。在前述方程中，R2（B和C点）之间的测量是*V[out]*。
- en: What about the choice of resistor values? For a voltage divider, the most important
    part of the resistor value's choices is their relative ratios to divide the voltage
    in a way we want. Beyond that, it comes down to current flow and resistor power
    ratings – again, these are applications of Ohm's Law and power.
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 那么电阻值的选择呢？对于电压分压器，电阻值选择最重要的部分是它们相对比例的选择，以便按照我们想要的方式分压电压。除此之外，还涉及到电流流动和电阻器功率额定值
    - 再次，这些是欧姆定律和功率的应用。
- en: Remember the potentiometers in [Chapter 5](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml),
    *Connecting Your Raspberry Pi to the Physical World*? They're actually voltage
    dividers! We had the middle wiper connected to AIN1 and AIN2 of the ADS1115 and
    when you turned the dial on the potentiometer, what you were doing was changing
    the resistance across Terminals A and B relative to the center wiper, thus creating
    the variable voltage that's read by the ADS1115.
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 还记得[第5章](45ff8333-2eb2-47f1-86d9-31ccecf39de5.xhtml)中的电位器吗？它们实际上是电压分压器！我们将中间的拨片连接到ADS1115的AIN1和AIN2上，当您转动电位器上的拨片时，您所做的就是改变A和B端子之间相对于中心拨片的电阻，从而产生由ADS1115读取的可变电压。
- en: 'The following diagram shows how a potentiometer relates to a semantic diagram.
    Points A, B, and C are comparable to those indicated in the preceding circuit:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了电位器与语义图的关系。A、B和C点与前述电路中指示的点是可比较的：
- en: '![](assets/68d00ad0-aa4c-463b-90ff-9b0822d87f4d.png)'
  id: totrans-270
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/68d00ad0-aa4c-463b-90ff-9b0822d87f4d.png)'
- en: Figure 6.9 – A potentiometer is a voltage divider
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 - 电位器是电压分压器
- en: 'Let''s perform an experiment to see how a potentiometer acts as a voltage divider
    by creating the circuit shown here:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们进行一个实验，看看电位器如何作为电压分压器，创建如下电路：
- en: '![](assets/2ee99f40-bed5-423c-bf22-83242cdb9fa5.png)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/2ee99f40-bed5-423c-bf22-83242cdb9fa5.png)'
- en: Figure 6.10 – A potentiometer circuit
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 - 电位器电路
- en: 'Here are the first set of steps to follow. The step numbers here match the
    numbered black circles shown in the preceding diagram:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要遵循的第一组步骤。这里的步骤编号与前图中显示的带编号的黑色圆圈相匹配：
- en: Place the 10kΩ potentiometer on your breadboard. You'll notice that I have marked
    Terminals A, B, and C so that they match the labeling shown in *Figure 6.9*.
  id: totrans-276
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将10kΩ电位器放在面包板上。您会注意到我已经标记了A、B和C三个端子，以便它们与*图6.9*中显示的标签相匹配。
- en: Connect an outer Terminal (labeled A) of the potentiometer to a 3.3-volt pin
    on your Raspberry Pi. In this circuit, we are only using our Raspberry Pi as a
    power source. You could use an external power supply or a battery if you desired.
  id: totrans-277
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将外部电位器（标有A）的端子连接到树莓派上的3.3伏针脚。在这个电路中，我们只使用树莓派作为电源。如果需要，您也可以使用外部电源或电池。
- en: Connect the alternate outer Terminal (labeled C) of the potentiometer to a Raspberry
    Pi GND pin.
  id: totrans-278
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电位器的另一个外部端子（标有C）连接到树莓派的GND针脚。
- en: Connect the voltage measuring lead from your multimeter to the middle Terminal
    (labeled B) of the potentiometer.
  id: totrans-279
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将万用表的电压测量引线连接到电位器的中间端子（标有B）。
- en: Connect the *com* Terminal of your multimeter to GND (which, in our example,
    is shared by the potentiometer Terminal labeled C).
  id: totrans-280
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将万用表的*com*端子连接到GND（在我们的示例中，与标有C的电位器端子共用）。
- en: Turn your multimeter on and select its voltage mode.
  id: totrans-281
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开您的万用表并选择电压模式。
- en: Now, with your multimeter on, turn the potentiometer's dial and observe the
    voltage reading on your multimeter change within the range of ~0 volts and ~3.3
    volts.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，打开万用表，转动电位器的旋钮，观察万用表上的电压读数在0伏特和3.3伏特之间的变化。
- en: This now concludes our introduction to analog electronics. We performed a simple
    exercise to demonstrate and visualize, with a multimeter, how PWM produces a variable
    output voltage. We also learned about *voltage dividers*, how they work, and why
    they are a crucial part of any analog input circuit. We finished by revisiting
    *potentiometers* once more and looking at how they work as varying *voltage dividers*.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 这就结束了我们对*模拟电子学*的介绍。我们进行了一个简单的练习，用万用表演示和可视化了PWM如何产生可变的输出电压。我们还学习了*电压分压器*，它们的工作原理，以及它们为何是任何模拟输入电路的关键部分。最后，我们再次回顾了*电位器*，并看看它们如何作为可变的*电压分压器*。
- en: These analog concepts, while relatively short and simple, are two core principles
    underlying analog circuits that every electronic engineer – whether you are a
    professional or a hobbyist – needs to understand. These concepts – especially
    *voltage dividers* – will feature in many circuits in upcoming chapters (we will
    be using them in conjunction with an ADS1115 analog-to-digital converter), so
    please play around with the preceding examples and principles to ensure you grasp
    the basics!
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 这些模拟概念虽然相对简短和简单，但是是每个电子工程师（无论您是专业人士还是业余爱好者）都需要理解的两个核心原则。这些概念，特别是*电压分压器*，将在接下来的章节中出现在许多电路中（我们将与ADS1115模数转换器一起使用它们），因此，请尝试使用前面的示例和原则来确保您掌握了基础知识！
- en: Next, we will discuss logic-level conversion and look at another practical application
    of voltage dividers, only this time in the *digital input* space.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将讨论逻辑电平转换，并看看电压分压器的另一个实际应用，这次是在*数字输入*空间中。
- en: Understanding logic-level conversion
  id: totrans-286
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解逻辑电平转换
- en: There will be occasions when you need to interface with 5-volt devices from
    your Raspberry Pi's 3.3-volt GPIO pins. This interfacing may be for the purpose
    of GPIO input, output, or bi-directional I/O. The technique used to convert between
    logic-level voltages is known as *logic-level conversion* or *logic-level shifting*.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候您需要从树莓派的3.3伏特GPIO引脚与5伏特设备进行接口。这种接口可能是为了GPIO输入、输出或双向I/O。用于在逻辑电平电压之间转换的技术称为*逻辑电平转换*或*逻辑电平转移*。
- en: There are a variety of techniques that can be used to shift voltages, and we
    will cover two of the more common ones in this section. One uses a voltage divider
    circuit, which we discussed under the previous heading, while the other uses a
    dedicated logic-level shifting module. Our first example of logic-level conversion
    will be to look at a resistor-based solution known as a *voltage divider*.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 有各种技术可以用来转移电压，我们将在本节中介绍其中两种比较常见的技术。一种是使用电压分压电路，我们在上一节中讨论过，而另一种是使用专用的逻辑电平转移模块。我们逻辑电平转换的第一个示例将是查看一种基于电阻的解决方案，称为*电压分压器*。
- en: Voltage dividers as logic-level converters
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 电压分压器作为逻辑电平转换器
- en: A voltage divider circuit constructed of appropriately selected resistors can
    be used to *shift down* from 5 volts to 3.3 volts, allowing you to use a 5-volt
    output from a device as the input to your 3.3-volt Raspberry Pi pin.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 由适当选择的电阻构成的电压分压电路可以用于*从5伏特降低*到3.3伏特，使您可以将来自设备的5伏特输出用作输入到您的3.3伏特树莓派针脚。
- en: To be crystal clear in your understanding and learning, in this section, we
    are dealing with *digital* electronics, specifically digital input and the application
    of a *voltage divider* within a digital input circuit. For your own learning and
    understanding, please ensure that, after completing this chapter, you are comfortable
    with the basic practical differences and application of a *voltage divider* in
    both analog and digital circuits.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让您清楚地理解和学习，在本节中，我们处理的是*数字*电子学，特别是数字输入和数字输入电路中*电压分压器*的应用。请确保在完成本章后，您对*电压分压器*在模拟和数字电路中的基本实际差异和应用感到满意。
- en: 'The following diagram is the same example we saw previously in *Figure 6.8,* only
    this time, it''s been drawn within a different context; that is, showing how a
    5-volt input can be *shifted down* to 3.3 volts:'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表是我们之前在*图6.8*中看到的相同示例，只是这次是在不同的上下文中绘制的；也就是说，显示了如何将5伏特输入*降低*到3.3伏特：
- en: '![](assets/dd2d81a7-dbe1-401a-a73e-aa369d824529.png)'
  id: totrans-293
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/dd2d81a7-dbe1-401a-a73e-aa369d824529.png)'
- en: Figure 6.11 – Using a voltage divider as a logic-level shifter
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 - 使用电压分压器作为逻辑电平转移
- en: A voltage divider cannot *shift up* a voltage from 3.3 volts to 5 volts. However,
    cast your mind back to our discussion on digital input and *Figure 6.4*, where
    we explained how an input pin reads a digital high as long as the voltage was
    >= ~2.0 volts. Well, the same often applies to 5-volt circuits – as long as the
    input voltage is >= ~2.0 volts (which 3.3 volts is), the 5-volt logic will register
    a logic high. The digital low works in the same manner too when a voltage of <=
    ~0.8 volts is applied.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 电压分压器不能将电压从3.3伏特升高到5伏特。然而，回想一下我们在数字输入和*图6.4*中的讨论，我们解释了输入引脚只要电压>= ~2.0伏特就会读取数字高。同样的规则通常也适用于5伏特电路-只要输入电压>=
    ~2.0伏特（3.3伏特就是），5伏特逻辑将会注册为逻辑高。数字低也是同样的道理，当电压<= ~0.8伏特时。
- en: This is often the case, though you will need to check the details and datasheet
    of the 5-volt device in question. It may mention the minimum voltage explicitly,
    or may simply mention that it will work with 3.3-volt logic. If there is no obvious
    indication of the device supporting 3.3-volt logic, you can always test it out
    yourself using 3.3 volts. This is safe to do because 3.3 volts is less than 5
    volts, which means there is no risk of damage. At worst, it just will not work
    or work unreliably, in which case you can use a dedicated logic-level converter.
    We'll discuss this next.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 通常情况下是这样，尽管您需要检查所涉及的5伏特设备的详细信息和数据表。它可能明确提到最低电压，或者可能只是提到它将使用3.3伏特逻辑。如果没有明显的迹象表明设备支持3.3伏特逻辑，您可以使用3.3伏特自行测试。这样做是安全的，因为3.3伏特小于5伏特，这意味着没有损坏的风险。最坏的情况下，它只是不起作用或者工作不可靠，这种情况下，您可以使用专用的逻辑电平转换器。我们将在下面讨论这个问题。
- en: Logic-level converter ICs and modules
  id: totrans-297
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逻辑电平转换器IC和模块
- en: An alternative to a voltage divider circuit is a dedicated logic-level shifter
    or converter. They come in IC (chip) form and breadboard-friendly breakout modules. There's
    no math involved because they are more or less plug and play, and they include
    multiple channels so that they can convert multiple I/O streams simultaneously.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 电压分压电路的替代方案是专用的逻辑电平转换器。它们以IC（芯片）形式和面包板友好的断路模块形式出现。因为它们基本上是即插即用的，所以不需要进行数学计算，并且它们包括多个通道，可以同时转换多个I/O流。
- en: 'The following image shows typical 4-channel (left) and 8-channel (right) logic-level
    conversion breakout modules. The 4-channel on the left is built using MOSFETs,
    while the 8-channel on the right uses a TXB0108 IC. Please note that while we
    will cover MOSFETs in[Chapter 7](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml),
    *Turning Things On and Off*, our focus will be using MOSFETs as switches, not
    logic-level conversion applications:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了典型的4通道（左侧）和8通道（右侧）逻辑电平转换断路模块。左侧的4通道是使用MOSFET构建的，而右侧的8通道使用了TXB0108 IC。请注意，虽然我们将在[第7章](36313176-0d8b-4a0e-916a-7d4ffd58305a.xhtml)中介绍MOSFET，*打开和关闭物品*，但我们的重点将是使用MOSFET作为开关，而不是逻辑电平转换应用。
- en: '![](assets/fc1a8a21-b675-491f-ad9c-85a51c3f9269.png)'
  id: totrans-300
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/fc1a8a21-b675-491f-ad9c-85a51c3f9269.png)'
- en: Figure 6.12 – Logic-level converter breakout modules
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 - 逻辑电平转换器断路模块
- en: Logic-level shifter modules also have two halves – a *low voltage* side and
    a *high voltage* side. In relation to your Raspberry Pi, we connect its 3.3-volt
    pin and the GPIOs to the low-voltage side, and then connect another higher voltage
    circuit (for example, a 5-volt circuit) to the high-voltage side.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 逻辑电平转换器模块也有两个部分-低电压端和高电压端。关于树莓派，我们将其3.3伏特引脚和GPIO连接到低电压端，然后将另一个更高电压的电路（例如5伏特电路）连接到高电压端。
- en: The forthcoming example will be based around a module similar to the 4-channel
    MOSFET module pictured previously, which has an LV and HV Terminal, and two GND
    Terminals. If you are using a different module, you may need to consult its datasheet
    and adjust the wiring appropriately for use in the example.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的示例将基于类似于之前图片中的4通道MOSFET模块，它有LV和HV端子，以及两个GND端子。如果您使用不同的模块，您可能需要查阅其数据表，并根据示例调整接线。
- en: Let's see level conversion in action. We will do this by building a circuit
    and measuring the voltage. Previously, in the *Digital output* section, we connected
    a multimeter directly to a Raspberry Pi GPIO pin and observed that when the GPIO
    was high, the multimeter read ~3.3 volts. This time, we will connect our multimeter
    to the HV side of a logic-level converter and observe that the multimeter reads
    ~5 volts when the GPIO pin is high.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看电平转换的实际操作。我们将通过构建一个电路并测量电压来实现这一点。在*数字输出*部分中，我们直接将万用表连接到树莓派的GPIO引脚上，并观察到当GPIO为高时，万用表读取~3.3伏特。这一次，我们将把我们的万用表连接到逻辑电平转换器的HV端，并观察到当GPIO引脚为高时，万用表读取~5伏特。
- en: 'We will start by building our circuit, which we will do in two parts:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从构建我们的电路开始，这将分为两部分：
- en: '![](assets/ea1c6f54-806a-491b-adb1-f7c7fff02672.png)'
  id: totrans-306
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/ea1c6f54-806a-491b-adb1-f7c7fff02672.png)'
- en: Figure 6.13 – Visualizing 3.3-volt to 5-volt level shifting (part 1 of 2)
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 - 可视化3.3伏特到5伏特电平转换（1/2）
- en: 'Here are the first set of steps to follow, in which we place the components
    that wire up the low-voltage side of the logic-level converter. The step numbers
    here match the numbered black circles shown in the preceding diagram:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要遵循的第一组步骤，其中我们放置了连接逻辑电平转换器低电压端的组件。这里的步骤编号与前图中显示的编号黑色圆圈相匹配：
- en: Place your logic-level converter on your breadboard.
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将您的逻辑电平转换器放在面包板上。
- en: Connect the LV (low voltage) Terminal of the logic-level converter to the positive
    side of the left-hand side power rail. We will call this rail the *low voltage
    rail* because it will be connected to the lower of our supply voltages (that is,
    3.3 volts). The LV Terminal is the low voltage side power input Terminal for the
    logic-level converter.
  id: totrans-310
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将逻辑电平转换器的LV（低电压）端连接到左侧电源轨道的正极。我们将这个轨道称为*低电压轨道*，因为它将连接到我们供电电压中较低的那一侧（即3.3伏特）。LV端是逻辑电平转换器的低电压端电源输入端子。
- en: Connect the positive side of the *low voltage rail* to a 3.3-volt power pin
    on your Raspberry Pi.
  id: totrans-311
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*低电压轨道*的正极连接到树莓派上的3.3伏特电源引脚。
- en: Connect the GND Terminal on the low voltage side of the logical-level converter
    to the negative rail on the *low voltage rail*.
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将逻辑电平转换器低电压侧的GND端子连接到*低电压轨道*的负电源。
- en: Connect the negative rail on the *low voltage rail* to a GND pin on your Raspberry
    Pi.
  id: totrans-313
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*低电压轨道*的负电源连接到树莓派上的GND引脚。
- en: Finally, connect port A1 on the logic-level converter to GPIO 21 on your Raspberry
    Pi.
  id: totrans-314
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将逻辑电平转换器的A1端口连接到树莓派上的GPIO 21。
- en: 'Next, we''ll wire up the high voltage side of the logic-level converter and
    connect our multimeter:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将连接逻辑电平转换器的高电压侧并连接我们的万用表：
- en: '![](assets/3cba66db-ca8d-4f09-b510-609e190d5049.png)'
  id: totrans-316
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/3cba66db-ca8d-4f09-b510-609e190d5049.png)'
- en: Figure 6.14 – Visualizing 3.3-volt to 5-volt level shifting (part 2 of 2)
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 - 可视化3.3伏特到5伏特电平转换（第2部分）
- en: 'Here are the second set of steps to follow. The step numbers here match the
    numbered black circles shown in the preceding diagram:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是要遵循的第二组步骤。这里的步骤编号与前图中显示的编号黑色圆圈相匹配：
- en: Connect the positive rail on the right-hand side power rail to a 5-volt pin
    on your Raspberry Pi. We will call this rail the *high voltage rail* because it
    will be connected to the higher of our supply voltages (that is, 5 volts). The
    HV Terminal is the high voltage side power input Terminal for the logic-level
    converter.
  id: totrans-319
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将右侧电源轨道上的正电源连接到树莓派的5伏特引脚。我们将称这条轨道为*高电压轨道*，因为它将连接到我们供电电压中较高的那个（即5伏特）。HV端子是逻辑电平转换器的高电压侧电源输入端子。
- en: Connect the negative rail of the *high voltage rail* to the negative rail of
    the *low voltage rail.* You may recall that all GND connections are common across
    a circuit. If you need a refresher on this concept, please revisit the* Introducing
    ground connections and symbols* section in [Chapter 2](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml), *Getting
    Started with Python and IoT*.
  id: totrans-320
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将*高电压轨道*的负电源连接到*低电压轨道*的负电源。你可能还记得所有GND连接在电路中是共用的。如果你需要关于这个概念的复习，请回顾[第2章](9436dfb5-3c70-4aff-9f64-512b7843b0cb.xhtml)中的*引入地面连接和符号*部分。
- en: Connect the HV Terminal of the logic-level converter to the positive side of
    the *high voltage rail*.
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将逻辑电平转换器的HV端子连接到*高电压轨道*的正电源。
- en: Connect the GND Terminal on the high voltage side of the logic-level converter
    to the negative rail of the *high voltage rail*.
  id: totrans-322
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将逻辑电平转换器高电压侧的GND端子连接到*高电压轨道*的负电源。
- en: Connect the *voltage*-measuring Terminal of your multimeter to port B1 on the
    logic-level converter.
  id: totrans-323
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的万用表的*电压*测量端子连接到逻辑电平转换器的B1端口。
- en: Connect the *com* Terminal of your multimeter to the negative rail of the *high
    voltage rail.*
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将你的万用表的*com*端子连接到*高电压轨道*的负电源。
- en: Finally, set your multimeter to its voltage mode.
  id: totrans-325
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将你的万用表设置为电压模式。
- en: 'Now that we have built our circuit, let''s run a Python program and confirm
    that our multimeter reads ~5 volts when GPIO 21 is high. Here is what we need
    to do:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经搭建好了电路，让我们运行一个Python程序，并确认当GPIO 21为高电平时，我们的万用表读取到了~5伏特。以下是我们需要做的：
- en: Run the code in the `chapter06/digital_output_test.py` file – it's the same
    code we used previously for digital output in the section titled *Digital output*.
  id: totrans-327
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`chapter06/digital_output_test.py`文件中的代码 - 这是我们之前在*数字输出*部分使用的相同代码。
- en: On the low voltage side, our Raspberry Pi is pulsing GPIO 21 between low (0
    volts) and high (3.3 volts) on channel 1 port A1, while on the high voltage side,
    our multimeter, which is connected to channel 1 port B1, will alternate between
    0 and ~5 volts, illustrating the shift of a 3.3-volt logic-level high to a 5-volt
    logic-level high.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在低电压侧，我们的树莓派在通道1端口A1上的GPIO 21之间脉冲低（0伏特）和高（3.3伏特），而在高电压侧，我们的万用表连接到通道1端口B1，将在0伏特和~5伏特之间交替，说明了3.3伏特逻辑电平高到5伏特逻辑电平高的转变。
- en: The reverse scenario is also possible; that is, if you applied a 5-volt input
    to the high voltage side, it will be converted into 3.3 volts on the low voltage
    side, which can safely be read as input by a 3.3-volt Raspberry Pi GPIO pin.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 反向场景也是可能的；也就是说，如果你在高电压侧应用了5伏特输入，它将被转换成3.3伏特在低电压侧，这可以安全地被3.3伏特的树莓派GPIO引脚读取。
- en: 'Building this reverse scenario is an exercise that you might like to try on
    your own – you already have the core knowledge, code, and circuits to achieve
    this; you just need to wire it all up! I encourage you to try this, and to get
    you started, here are some tips:'
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 构建这个反向场景是一个你可能想要自己尝试的练习 - 你已经有了核心知识、代码和电路来实现这一点；你只需要把它全部连接起来！我鼓励你尝试一下，并为了帮助你开始，这里有一些提示：
- en: Place a push button and pull-up resistor on your breadboard, and wire it up
    to port B1 on the high voltage side of the logic-level converter. This circuit
    (schematically) is identical to what you have seen previously in *Figure 6.6*,
    except that the source will now be 5 volts, and the GPIO pin is now port B1.
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在你的面包板上放置一个按钮和上拉电阻，并将其连接到逻辑电平转换器高电压侧的B1端口。这个电路（在原理上）与你之前在*图6.6*中看到的是相同的，只是现在的电源是5伏特，GPIO引脚现在是B1端口。
- en: To test your circuit, you can use the same digital input code we used previously,
    which can be found in the `chapter06/digital_input_test.py` file.
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要测试你的电路，你可以使用我们之前使用的相同的数字输入代码，可以在`chapter06/digital_input_test.py`文件中找到。
- en: If you get stuck, need a reference breadboard layout, or wish to check your
    circuit build, you can find a breadboard layout in the `chapter06/logic_level_input_breadboard.png` file.
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你遇到困难，需要参考面包板布局，或者希望检查你的电路搭建，你可以在`chapter06/logic_level_input_breadboard.png`文件中找到一个面包板布局。
- en: When using a logic-level converter IC, breakout module, or a voltage-divider
    as a level shifter, always test the input/output voltages with your multimeter
    before connecting them to an external circuit or your Raspberry Pi. This check
    will ensure you have wired the converter correctly and that the voltages have
    been shifted as you intended.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用逻辑电平转换器IC、分立模块或电压分压器作为电平转换器时，始终在连接到外部电路或树莓派之前用万用表测试输入/输出电压。这个检查将确保你已经正确连接了转换器，并且电压已经按照你的意图进行了转换。
- en: Let's conclude our discussion of level conversion by comparing the two approaches
    we have looked at.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过比较我们所看到的两种方法来结束我们对电平转换的讨论。
- en: Comparing voltage dividers and logic-level converters
  id: totrans-336
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 比较电压分压器和逻辑电平转换器
- en: Is one approach better than the other? It depends, though I will say that a
    dedicated converter will always outshine a basic voltage divider, and they are
    a lot less fiddly to use with a breadboard. A voltage divider is cheaper to build
    but only works in a direct direction (you'll need two voltage divider circuits
    to perform bi-directional I/O). They also have relatively high electrical impedance,
    meaning that there is a practical delay that occurs between the variable resistance
    changing and the measurable voltage changing. This delay is enough to make a simple
    voltage divider impractical for circuits where there is fast switching between
    high and low states. A dedicated logic-level converter overcomes these limitations,
    plus they are multi-channel, bi-directional, faster, and more efficient.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 一个方法比另一个更好吗？这取决于情况，尽管我会说一个专用的转换器总是比基本的电压分压器更出色，而且它们在面包板上使用起来更方便。电压分压器更便宜，但只能在一个方向上工作（你需要两个电压分压器电路来执行双向I/O）。它们还具有相对较高的电阻，这意味着在可变电阻改变和可测电压改变之间会发生实际的延迟。这种延迟足以使简单的电压分压器在高低状态之间快速切换的电路中变得不切实际。一个专用的逻辑电平转换器克服了这些限制，而且它们是多通道、双向、更快和更高效的。
- en: Summary
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter commenced with a quick overview of the basic tools and equipment
    that you will need as you get further into electronics and the circuits that we
    will cover in *Section 3* (which we'll be commencing in the next chapter). Then,
    we went through some suggestions to help keep your Raspberry Pi safe while you
    are connecting electronics to its GPIO pins, as well as a few tips when it comes
    to purchasing components.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 本章以对你在进一步学习电子学和我们将在*第三部分*中涵盖的电路中所需的基本工具和设备的快速概述开始（我们将在下一章开始）。然后，我们提出了一些建议，以帮助您在连接电子设备到树莓派的GPIO引脚时保持安全，以及在购买元件时的一些建议。
- en: Then, we explored Ohm's Law (and very briefly Kirchhoff's) before working through
    the reasons and calculations as to why our LED circuit was using a 200 Ohm resistor.
    We followed this example by looking at the electronic properties of digital circuits,
    where we explored logic voltage levels, floating pins, and pull-up and pull-down
    resistors. We then looked at analog circuits and worked through an example of
    a voltage divider circuit. We concluded this chapter by looking at logic-level
    conversion and how you can interface a 5-volt logic device with a 3.3-volt logic
    device such as your Raspberry Pi.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们探讨了欧姆定律（和非常简要地基尔霍夫定律），然后通过原因和计算来解释为什么我们的LED电路使用了200欧姆的电阻。我们通过查看数字电路的电子特性来跟进这个例子，其中我们探讨了逻辑电压电平、悬空引脚和上拉和下拉电阻。然后，我们查看了模拟电路，并通过一个电压分压器电路的例子来进行了工作。我们通过查看逻辑电平转换来结束了本章，并介绍了如何将5伏逻辑设备与3.3伏逻辑设备（如您的树莓派）进行接口。
- en: The goal of this chapter was to introduce you to fundamental electronic principles
    underpinning basic electronics and, in particular, electronic interfacing to devices
    such as a Raspberry Pi. I have endeavored to also explain the basic *why *behind
    these principles and how they influence what components are chosen for a circuit.
    Armed with this information, you should now be in a position to better understand
    how simple circuits are built to work with your Raspberry Pi.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是向您介绍支撑基本电子学和特别是与树莓派等设备的电子接口的基本电子原理。我还努力解释了这些原理背后的基本*为什么*，以及它们如何影响为电路选择哪些元件。有了这些信息，您现在应该能够更好地理解如何构建与您的树莓派配合工作的简单电路。
- en: Furthermore, you can leverage this understanding as your starting point to further
    develop and advance your electronic skills. You'll find links to useful electronic-based
    websites in the *Further reading* section, plus we'll see many of these principles
    in use as we proceed through *Section 3,* *IoT Playground*.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，您可以利用这一理解作为进一步发展和提高您的电子技能的起点。在*进一步阅读*部分，您会找到一些有用的电子网站的链接，而且在我们继续*第三部分* *物联网游乐场*时，我们会看到这些原则的许多应用。
- en: When you're ready to get started, I'll see you in the next chapter – which is
    also the start of *Section 3*, *IoT Playground* – where we will explore different
    methods of switching things on and off.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备好开始时，我会在下一章见到你——这也是*第三部分* *物联网游乐场*的开始——在那里我们将探索不同的开关方法。
- en: Questions
  id: totrans-344
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: 'As we conclude, here is a list of questions for you to test your knowledge
    regarding this chapter''s material. You will find the answers in the *Assessments*
    section of the book:'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的结束，这里有一些问题供你测试对本章材料的了解。你会在书的*评估*部分找到答案：
- en: You have a circuit that requires a 200Ω resistor, but you only have a 330Ω resistor
    available. It is safe to use this value?
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你有一个需要200Ω电阻的电路，但你只有一个330Ω的电阻可用。使用这个值安全吗？
- en: You substitute a higher value resistor in a circuit but the circuit does not
    work. With respect to Ohm's Law, what could be the problem?
  id: totrans-347
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你在电路中用一个更高阻值的电阻代替，但电路却无法工作。根据欧姆定律，可能出了什么问题？
- en: You calculated a suitable resistor value for a circuit using Ohm's Law, but
    when you applied power to the circuit, the resistor started to discolor and let
    off smoke. Why?
  id: totrans-348
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您使用欧姆定律计算了电路的合适电阻值，但当您给电路加电时，电阻开始变色并冒烟。为什么？
- en: Assuming GPIO 21 is configured via Python as an input pin and it is connected
    by a wire directly to the +3.3-volt pin, what value will `pi.read(21)` return?
  id: totrans-349
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 假设GPIO 21通过Python配置为输入引脚，并且通过一根导线直接连接到+3.3伏引脚，`pi.read(21)`会返回什么值？
- en: You have a push button set up so that when it's pressed, it connects GPIO 21
    to a GND pin. When the button is *not* pressed, you notice that your program is
    erratic and appears to receive a phantom button press. What could the problem
    be?
  id: totrans-350
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你设置了一个按钮，当按下时，它将GPIO 21连接到GND引脚。当按钮*没有*被按下时，你会注意到你的程序表现不稳定，并且似乎接收到了一个幻象按钮按下。问题可能是什么？
- en: You want to connect a device that operates its output pins at 5 volts to a Raspberry
    Pi GPIO input pin. How can you do this safely?
  id: totrans-351
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你想将一个输出引脚在5伏特操作的设备安全地连接到树莓派的GPIO输入引脚。你可以如何安全地做到这一点？
- en: True or false – A resistor voltage divider circuit can be used to convert a
    3.3-volt input into 5 volts for use with a 5-volt logic input device.
  id: totrans-352
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 真或假 - 电阻器电压分压电路可以用于将3.3伏特输入转换为5伏特，以用于5伏特逻辑输入设备。
- en: Further reading
  id: totrans-353
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following two sites are electronic manufacturers and they both feature
    a wide range of entry-to-mid-level tutorials. They focus on the practical aspects
    of electronics and don''t bombard you with too much theory. Try a search for *Raspberry
    Pi* on their sites:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个网站是电子制造商，它们都提供了广泛的入门到中级教程。它们侧重于电子学的实际方面，不会向你灌输太多理论。在它们的网站上搜索*Raspberry Pi*试试：
- en: '[https://learn.adafruit.com](https://learn.adafruit.com/)'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://learn.adafruit.com](https://learn.adafruit.com/)'
- en: '[https://learn.sparkfun.com](https://learn.sparkfun.com/)'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://learn.sparkfun.com](https://learn.sparkfun.com/)'
- en: 'In relation to the concepts that we have covered in this chapter, here are
    some specific links on the aforementioned sites:'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: 关于本章涵盖的概念，以下是上述网站上的一些具体链接：
- en: All About LEDs: [https://learn.sparkfun.com/tutorials/light-emitting-diodes-leds](https://learn.sparkfun.com/tutorials/light-emitting-diodes-leds)
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于LED的一切：[https://learn.sparkfun.com/tutorials/light-emitting-diodes-leds](https://learn.sparkfun.com/tutorials/light-emitting-diodes-leds)
- en: Ohm's Law, Power, and Kirchhoff's Law Primer: [https://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law](https://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law)
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欧姆定律、功率和基尔霍夫定律入门：[https://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law](https://learn.sparkfun.com/tutorials/voltage-current-resistance-and-ohms-law)
- en: Voltage Dividers: [https://learn.sparkfun.com/tutorials/voltage-dividers](https://learn.sparkfun.com/tutorials/voltage-dividers)
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电压分压器：[https://learn.sparkfun.com/tutorials/voltage-dividers](https://learn.sparkfun.com/tutorials/voltage-dividers)
- en: Pull-Up/Down Resistors: [https://learn.sparkfun.com/tutorials/pull-up-resistors/all](https://learn.sparkfun.com/tutorials/pull-up-resistors/all)
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上拉/下拉电阻：[https://learn.sparkfun.com/tutorials/pull-up-resistors/all](https://learn.sparkfun.com/tutorials/pull-up-resistors/all)
- en: Resistors and Color Codes: [https://learn.sparkfun.com/tutorials/resistors](https://learn.sparkfun.com/tutorials/resistors)
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电阻和色码：[https://learn.sparkfun.com/tutorials/resistors](https://learn.sparkfun.com/tutorials/resistors)
- en: 'If you want to go deeper, the following two websites are excellent (and free)
    resources that cover a diverse range of topics on electronic fundamentals and
    theory:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想深入了解，以下两个网站是优秀的（并且免费）资源，涵盖了电子基础和理论的各种主题：
- en: '[https://www.allaboutcircuits.com](https://www.allaboutcircuits.com/textbook/)'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.allaboutcircuits.com](https://www.allaboutcircuits.com/textbook/)'
- en: '[https://www.electronics-tutorials.ws](https://www.electronics-tutorials.ws/)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.electronics-tutorials.ws](https://www.electronics-tutorials.ws/)'
- en: 'I recommend spending a few moments just clicking around these sites to get
    an idea of what they include. That way, if you come across an electronic term,
    component, or concept in this book that you want to explore further, you''ll have
    an idea where to start your investigation. Here are the two links to begin your
    exploration:'
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议花一些时间在这些网站上浏览一下，了解它们包含的内容。这样，如果你在这本书中遇到想进一步探索的电子术语、元件或概念，你就会知道从哪里开始调查。以下是两个开始探索的链接：
- en: '[https://www.electronics-tutorials.ws/category/dccircuits](https://www.electronics-tutorials.ws/category/dccircuits)
    (DC Circuit Theory)'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.electronics-tutorials.ws/category/dccircuits](https://www.electronics-tutorials.ws/category/dccircuits)（直流电路理论）'
- en: '[https://www.allaboutcircuits.com/textbook/direct-current](https://www.allaboutcircuits.com/textbook/direct-current/)
    (DC Circuit Theory)'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.allaboutcircuits.com/textbook/direct-current](https://www.allaboutcircuits.com/textbook/direct-current/)（直流电路理论）'
- en: If you browse through the indexes on these sites, you will find sections including
    Ohm's Law, power, Kirchhoff's Laws, voltage dividers, and digital and analog electronics.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你浏览这些网站的索引，你会发现包括欧姆定律、功率、基尔霍夫定律、电压分压器以及数字和模拟电子学在内的部分。
