- en: '11'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '11'
- en: Internationalization
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 国际化
- en: Odoo supports a variety of languages and enables users to use the language(s)
    with which they are most comfortable. The Odoo i18n features that are already
    built-in help with this. With string translations, Odoo also supports date and
    time formatting.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo支持多种语言，并允许用户使用他们最舒适的语言。内置的Odoo i18n功能有助于实现这一点。通过字符串翻译，Odoo还支持日期和时间格式。
- en: In this chapter, you will discover how to upload translation files to your modules
    and enable various languages. Due to the diversity of countries and the prevalence
    of local languages, users often find it easier to connect with a system when it’s
    presented in their native tongue. To accommodate this, Odoo offers a feature that
    enables software text to be translated into the user’s preferred language. This
    functionality enhances the user experience by ensuring that the interface is accessible
    and comprehensible to individuals, regardless of their linguistic background,
    thereby promoting wider adoption and usability of the software across various
    regions and demographics. Utilizing these new functionalities will enhance the
    Odoo user experience.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将了解如何将翻译文件上传到您的模块并启用各种语言。由于国家多样性和本地语言的普遍性，用户通常发现当系统以他们的母语呈现时更容易与之连接。为了适应这一点，Odoo提供了一种功能，可以将软件文本翻译成用户的偏好语言。这一功能通过确保界面对各种语言背景的个人都是可访问和可理解的，从而提高了软件在不同地区和人口统计学中的采用率和可用性。利用这些新功能将增强Odoo用户体验。
- en: 'The following recipes will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下食谱：
- en: Setting up a language installation and user preference settings
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置语言安装和用户偏好设置
- en: Setting up options relating to language
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置与语言相关的选项
- en: Text translation using a web client user interface
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用网络客户端用户界面进行文本翻译
- en: Exporting translation into a file
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将翻译导出为文件
- en: Using `gettext` tools to make translations easier
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`gettext`工具使翻译更容易
- en: Importing translation files into Odoo
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将翻译文件导入Odoo
- en: Altering a website’s custom language URL code
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改网站的定制语言URL代码
- en: Many of these recipes can be completed either from the web client user interface
    or from the command line. Wherever possible, we will see how to use both of these
    options. Odoo uses Transifex(Odoo) and Weblate (OCA) translation platforms.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 许多这些食谱可以从网络客户端用户界面或从命令行完成。 wherever possible，我们将了解如何使用这两种选项。Odoo使用Transifex(Odoo)和Weblate
    (OCA)翻译平台。
- en: Setting up a language installation and user preference settings
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置语言安装和用户偏好设置
- en: Odoo can be localized to accommodate various languages and locale settings,
    including date and number formats.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo可以本地化以适应各种语言和地区设置，包括日期和数字格式。
- en: The only language that is initially installed is the standard English language.
    We need to install various localities and languages so that people may utilize
    them. This recipe describes how user preferences are implemented, as well as how
    they may be established.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 初始安装的唯一语言是标准英语语言。我们需要安装各种地区和语言，以便人们可以使用它们。本食谱描述了如何实现用户偏好，以及如何设置它们。
- en: How to do it…
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Activate developer mode and follow these steps to install a new language in
    an Odoo instance:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 激活开发者模式并按照以下步骤在Odoo实例中安装新语言：
- en: 'Go to **Settings** | **General Settings** | **Language**. Here, you will see
    the **Add Language** link, as shown in the following screenshot. Click on that
    link; a dialogue box will open where you can load languages:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**设置** | **通用设置** | **语言**。在这里，您将看到**添加语言**链接，如以下截图所示。点击该链接；将打开一个对话框，您可以在其中加载语言：
- en: '![Figure 11.1 – Language options in the general settings](img/B20997_11_1.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图11.1 – 通用设置中的语言选项](img/B20997_11_1.jpg)'
- en: Figure 11.1 – Language options in the general settings
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.1 – 通用设置中的语言选项
- en: 'Select the language you want to load:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要加载的语言：
- en: '![Figure 11.2 – Dialogue to load a language](img/B20997_11_2.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![图11.2 – 加载语言的对话框](img/B20997_11_2.jpg)'
- en: Figure 11.2 – Dialogue to load a language
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.2 – 加载语言的对话框
- en: 'Clicking on **Add** will load the selected language, and the confirmation dialogue
    box will open, as follows:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加**将加载所选语言，并将确认对话框打开，如下所示：
- en: '![Figure 11.3 – Dialogue that shows a language has been loaded](img/B20997_11_3.jpg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图11.3 – 显示已加载语言的对话框](img/B20997_11_3.jpg)'
- en: Figure 11.3 – Dialogue that shows a language has been loaded
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.3 – 显示已加载语言的对话框
- en: 'New languages can also be installed from the command line. The equivalent command
    for the preceding steps is as follows:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新语言也可以从命令行安装。前述步骤的等效命令如下：
- en: '[PRE0]'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To set the language that’s used by a user, go to **Settings** | **Users & Companies**
    | **Users**, and, in the **Preferences** tab of the **User** form, set the **Language**
    field value:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要设置用户使用的语言，请转到**设置** | **用户与公司** | **用户**，然后在**用户**表单的**偏好**选项卡中设置**语言**字段值：
- en: '![Figure 11.4 – User’s form to set the language](img/B20997_11_4.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图11.4 – 设置语言的用户表单](img/B20997_11_4.jpg)'
- en: Figure 11.4 – User’s form to set the language
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.4 – 设置语言的用户表单
- en: 'Through the **Preferences** menu item, users may easily change these variables
    on their own. They may access this by clicking on their username in the top-right
    corner of the web client window:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 通过**偏好**菜单项，用户可以轻松地自行更改这些变量。他们可以通过点击网页客户端窗口右上角的用户名来访问它：
- en: '![Figure 11.5– Preferences option to set the language](img/B20997_11_5.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图11.5 – 设置语言的偏好选项](img/B20997_11_5.jpg)'
- en: Figure 11.5– Preferences option to set the language
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.5 – 设置语言的偏好选项
- en: How it works...
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Users can have their own language and time zone preferences. The language settings
    are used to translate user interface text into the chosen language and apply local
    conventions for float and monetary fields.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以有自己的语言和时区偏好。语言设置用于将用户界面文本翻译成所选语言，并应用于浮点数和货币字段的地方惯例。
- en: Before a language is made available for the user to select, it must be installed
    with the **Add language** option. The list of available languages can be seen
    by going to the **Settings** | **Translations** | **Languages** menu option in
    developer mode. The ones with the active flag set are installed.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户可以选择语言之前，必须使用**添加语言**选项安装该语言。可以通过转到开发者模式下的**设置** | **翻译** | **语言**菜单选项来查看可用的语言列表。带有活动标志设置的语言已安装。
- en: Each Odoo add-on module is responsible for providing translation resources,
    which should be placed inside an `i18n` subdirectory. Each language’s data should
    be in a `.po` file. In our example, for the Spanish language, the translation
    data is loaded from the `es_ES.po` data file.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每个Odoo附加模块都负责提供翻译资源，这些资源应放置在`i18n`子目录中。每种语言的数据应在一个`.po`文件中。在我们的例子中，西班牙语的翻译数据是从`es_ES.po`数据文件中加载的。
- en: Odoo also supports the notion of a `es.po` file for Spanish and an `es_MX.po`
    file for Mexican Spanish, then `es.po` is detected as the base language for `es_MX.po`.
    When the Mexican Spanish language is installed, both data files are loaded; first
    the one for the base language and then the specific language. Therefore, in our
    case, the Mexican Spanish translation file simply has to contain the strings that
    are unique to the language variety.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo还支持`es.po`文件的概念，用于西班牙语，以及`es_MX.po`文件，用于墨西哥西班牙语，然后`es.po`被检测为`es_MX.po`的基础语言。当安装墨西哥西班牙语时，将加载两个数据文件；首先加载基础语言的一个，然后是特定语言的一个。因此，在我们的情况下，墨西哥西班牙语的翻译文件只需包含该语言变体独有的字符串。
- en: The `i18n` subdirectory is also expected to have a `<module_name>.pot` file,
    providing a template for translations and containing all the translatable strings.
    The *Exporting translation strings to a file* recipe of this chapter explains
    how to export the translatable strings to generate this file.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`i18n`子目录还应该有一个`<module_name>.pot`文件，提供翻译模板并包含所有可翻译的字符串。本章的*将翻译字符串导出到文件*配方解释了如何导出可翻译字符串以生成此文件。'
- en: In previous versions of Odoo, when an additional language is installed, the
    corresponding resources are loaded from all installed add-on modules and stored
    in the **Translated Terms** model. Its data can be viewed (and edited) within
    the **Settings** | **Translations** | **Application Terms** | **Translated Terms**
    menu option (note that this menu is only visible in developer mode).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在Odoo的早期版本中，当安装了额外的语言时，相应的资源会从所有已安装的附加模块中加载，并存储在**翻译术语**模型中。其数据可以在**设置** | **翻译**
    | **应用程序术语** | **翻译术语**菜单选项中查看（并编辑）（注意，此菜单仅在开发者模式下可见）。
- en: From Odoo version 17 onwards, you won’t be able to find this menu as translated
    terms are now stored as native terms. Any field that is translatable now stores
    JSON data representing all translations of all translated language values. For
    example, translations of product names are now stored directly in the `name` field.
    The process of translations has not changed – you just can’t see the **Settings**
    | **Translations** | **Application Terms** | **Translated Terms** menu item with
    all translated terms shown in a list.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从Odoo版本17开始，您将无法找到此菜单，因为翻译术语现在作为本地术语存储。现在任何可翻译的字段都存储表示所有翻译语言值的JSON数据。例如，产品名称的翻译现在直接存储在`name`字段中。翻译过程没有改变——您只是无法看到带有所有已翻译术语列表的**设置**
    | **翻译** | **应用程序术语** | **已翻译术语**菜单项。
- en: Translation files for the installed languages are also loaded when a new add-on
    module is installed or an existing add-on module is upgraded.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当安装新的附加模块或升级现有附加模块时，也会加载已安装语言的翻译文件。
- en: There’s more...
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: By selecting the refresh symbol again next to the languages, translation files
    may be refreshed without you having to upgrade the add-on modules. You can do
    this if your translation files have been changed and you don’t want to deal with
    updating the modules (and all of their dependencies).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 通过再次选择语言旁边的刷新符号，可以在不升级附加模块的情况下刷新翻译文件。如果您更改了翻译文件，但不想处理更新模块（及其所有依赖项），则可以这样做。
- en: If the **Overwrite Existing Terms** checkbox is left empty, only the newly translated
    strings are loaded. Thus, the changed translated strings won’t be loaded. Check
    the box if you want the already-existing translations to also be loaded and overwrite
    the currently loaded translations. Note that this can potentially be problematic
    if someone changes the translations manually through the interface.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果**覆盖现有术语**复选框留空，则只会加载新翻译的字符串。因此，更改后的翻译字符串不会被加载。如果您想同时加载现有翻译并覆盖当前加载的翻译，请勾选该框。请注意，如果有人通过界面手动更改翻译，这可能会引起潜在问题。
- en: The **Overwrite Existing Terms** checkbox exists because we can edit specific
    translations by going to the **Settings** | **Translations** | **Application Terms**
    | **Translated Terms** menu item, or by using the **Technical Translation** shortcut
    option in the **Debug** menu. Translations that are added or modified in this
    way won’t be overwritten unless the language is reloaded with the **Overwrite
    Existing Terms** checkbox enabled.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**覆盖现有术语**复选框存在，因为我们可以通过转到**设置** | **翻译** | **应用程序术语** | **已翻译术语**菜单项或使用**调试**菜单中的**技术翻译**快捷选项来编辑特定的翻译。以这种方式添加或修改的翻译不会覆盖，除非通过启用**覆盖现有术语**复选框重新加载语言。'
- en: It can be useful to know that add-on modules can also have an `i18n_extra` subdirectory
    with extra translations. First, the `.po` files in the `i18n` subdirectory are
    downloaded. Then, Odoo ORM downloads files for the base language and, after that,
    for the language variant. Following this, the `.po` files in the `i18n_extra`
    subdirectory are downloaded, first for the base language and then for the language
    variant. The final string translation that is loaded is the one that ultimately
    takes precedence.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 了解附加模块也可以有一个`i18n_extra`子目录，其中包含额外的翻译，这可能很有用。首先，下载`i18n`子目录中的`.po`文件。然后，Odoo
    ORM下载基本语言的文件，然后是语言变体的文件。随后，下载`i18n_extra`子目录中的`.po`文件，首先是基本语言，然后是语言变体。最终加载的字符串翻译是最终具有优先级的翻译。
- en: Setting up options relating to language
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置与语言相关的选项
- en: The locale settings should be the right ones, so long as the user is using the
    correct language, because they come with suitable defaults.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 只要用户使用正确的语言，区域设置就应该正确，因为它们带有合适的默认值。
- en: You may still want to change a language’s settings, though. For instance, you
    could opt to use the user interface’s default English language setting while changing
    the American date and number formats to better suit your needs.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，您可能仍然想要更改语言的设置。例如，您可以选择在更改美国日期和数字格式以更好地满足您的需求的同时，使用用户界面默认的英语语言设置。
- en: Additionally, locale settings such as date and number formats are provided by
    languages and their variants (such as `es_MX` for Mexican Spanish).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，日期和数字格式等区域设置由语言及其变体（例如`es_MX`代表墨西哥西班牙语）提供。
- en: Getting ready
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will require developer mode to be turned on. If it hasn’t previously been
    enabled, do it in the manner described in [*Chapter 1*](B20997_01.xhtml#_idTextAnchor020),
    *Installing the Odoo Development Environment*, in the *Activating the Odoo developer
    tools* recipe, where you installed the Odoo development environment.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要开启开发者模式。如果之前尚未启用，请按照[*第1章*](B20997_01.xhtml#_idTextAnchor020)中*安装Odoo开发环境*的*激活Odoo开发者工具*配方中描述的方式进行操作。
- en: How to do it...
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to change a language’s locale settings:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤更改语言的区域设置：
- en: 'Select the **Settings** | **Translations** | **Languages** menu option to view
    the installed languages and their options. A form with the necessary options will
    open when you click on one of the installed languages:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**设置** | **翻译** | **语言**菜单选项以查看已安装的语言及其选项。当您点击一个已安装的语言时，将打开一个包含必要选项的表单：
- en: '![Figure 11.6 – Form to configure language settings](img/B20997_11_6.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6 – 配置语言设置的表单](img/B20997_11_6.jpg)'
- en: Figure 11.6 – Form to configure language settings
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6 – 配置语言设置的表单
- en: Edit the language settings. To change the date to the ISO format, change `%Y-%m-%d`.
    To change the number format to use a comma as a decimal separator, modify the
    **Decimal Separator** and **Thousands Separator** fields accordingly.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编辑语言设置。要将日期更改为ISO格式，将`%Y-%m-%d`更改为。要将数字格式更改为使用逗号作为小数分隔符，相应地修改**小数分隔符**和**千位分隔符**字段。
- en: How it works...
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The user language is selected in the user preferences and placed in the **lang**
    context key when logging in and initiating a new Odoo user session. By translating
    the source texts into the user language and formatting the dates and numbers as
    per the language’s current locale settings, the output is prepared accordingly.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 用户语言在用户偏好设置中选中，并在登录和启动新的Odoo用户会话时放置在**lang**上下文键中。通过将源文本翻译成用户语言，并根据语言当前的区域设置格式化日期和数字，相应地准备输出。
- en: There’s more...
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'Server-side processes can modify the context in which actions are run. For
    example, to get a record where the dates are formatted according to the American
    English format, independent of the current user’s language preference, you can
    do the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 服务器端进程可以修改运行动作的上下文。例如，为了获取按照美国英语格式格式化的日期的记录，独立于当前用户的语言偏好，您可以执行以下操作：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For more details, refer to the *Calling a method with a modified context* recipe
    in [*Chapter 8*](B20997_08.xhtml#_idTextAnchor388), *Advanced Server-Side* *Development
    Techniques*.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 更多详情，请参阅[*第8章*](B20997_08.xhtml#_idTextAnchor388)中的*调用修改上下文的方法*配方，*高级服务器端开发技术*。
- en: Text translation using a web client user interface
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Web客户端用户界面进行文本翻译
- en: The simplest way to translate is to use the translation feature provided by
    the web client. These translation strings are stored in the database and can later
    be exported to a `.po` file, either to be included in an add-on module or just
    to be imported back manually.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译的最简单方法是使用Web客户端提供的翻译功能。这些翻译字符串存储在数据库中，以后可以导出为`.po`文件，既可以包含在附加模块中，也可以手动导入。
- en: Text fields can have translatable content, meaning that their value will depend
    on the current user’s language. We will also see how to set the language-dependent
    values on these fields.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 文本字段可以有可翻译的内容，这意味着它们的值将取决于当前用户的语言。我们还将了解如何设置这些字段的语言相关值。
- en: Getting ready
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need to have developer mode activated. If it’s not, activate it, as
    shown in the *Activating the Odoo developer tools* recipe in [*Chapter 1*](B20997_01.xhtml#_idTextAnchor020),
    *Installing the Odoo* *Development Environment*.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要启用开发者模式。如果没有启用，请按照[*第1章*](B20997_01.xhtml#_idTextAnchor020)中*安装Odoo开发环境*的*激活Odoo开发者工具*配方所示进行操作。
- en: How to do it...
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We will demonstrate how to translate terms through the web client using the
    **User Groups** feature as an example:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用**用户组**功能作为示例来演示如何通过Web客户端翻译术语：
- en: 'Navigate to the screen you want to translate. As an example, we will open the
    **Groups** view via the **Settings** | **Users & Companies** | **Groups** menu
    item:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到您想要翻译的屏幕。例如，我们将通过**设置** | **用户和公司** | **组**菜单项打开**组**视图：
- en: '![Figure 11.7 – Translation for groups](img/B20997_11_7.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图11.7 – 组的翻译](img/B20997_11_7.jpg)'
- en: Figure 11.7 – Translation for groups
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.7 – 组的翻译
- en: 'Open one of the group records in the form view, and click on **Edit**:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在表单视图中打开其中一个组记录，然后点击**编辑**：
- en: '![Figure 11.8 – Translation for the field values](img/B20997_11_8.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.8 – 字段值的翻译](img/B20997_11_8.jpg)'
- en: Figure 11.8 – Translation for the field values
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.8 – 字段值的翻译
- en: 'Note that the **Name** field has a special icon on the far right. This indicates
    that it is a translatable field. Clicking on this icon opens a **Translate** list
    with the different installed languages. This allows us to set the translation
    for each of those languages:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，**名字** 字段在右侧有一个特殊图标。这表示它是一个可翻译字段。点击此图标将打开一个包含不同已安装语言的 **翻译** 列表。这允许我们为这些语言中的每一个设置翻译：
- en: '![Figure 11.9 – Translation for the field values](img/B20997_11_9.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.9 – 字段值的翻译](img/B20997_11_9.jpg)'
- en: Figure 11.9 – Translation for the field values
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.9 – 字段值的翻译
- en: How it works…
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'All translated terms are saved in the name field of any mode/table. In our
    example, `res_groups` table; when you check the information stored in the name
    field, it will be saved as a dictionary, where the key is the language code and
    the value is the translated phrases:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 所有翻译术语都保存在任何模式/表的名字字段中。在我们的例子中，`res_groups` 表；当你检查名字字段中存储的信息时，它将被保存为一个字典，其中键是语言代码，值是翻译短语：
- en: '![Figure 11.10 – Translation for the field values](img/B20997_11_10.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.10 – 字段值的翻译](img/B20997_11_10.jpg)'
- en: Figure 11.10 – Translation for the field values
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10 – 字段值的翻译
- en: Exporting translation strings to a file
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将翻译字符串导出到文件
- en: Translation strings can be exported with or without the translated texts for
    a selected language. This can either be to include `i18n` data in a module or
    to later perform translations with a text editor or perhaps with a specialized
    tool.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译字符串可以带或不带所选语言的翻译文本进行导出。这可以是将 `i18n` 数据包含在模块中，或者稍后使用文本编辑器或可能使用专用工具进行翻译。
- en: We will demonstrate how to do this using our custom `My Hostel` module, so feel
    free to replace `My Hostel` with your own module.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过我们的自定义 `My Hostel` 模块演示如何进行此操作，因此请随意将 `My Hostel` 替换为您自己的模块。
- en: Getting ready
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We will need to have developer mode activated. If it’s not already activated,
    activate it, as demonstrated in the *Activating the Odoo developer tools* recipe
    in [*Chapter 1*](B20997_01.xhtml#_idTextAnchor020), *Installing the Odoo* *Development
    Environment*.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要启用开发者模式。如果尚未启用，请按照在 [*第 1 章*](B20997_01.xhtml#_idTextAnchor020) 中演示的 *激活
    Odoo 开发者工具* 菜谱进行操作，*安装 Odoo 开发环境*。
- en: How to do it…
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To export the translation terms for the `my_hostel` module, follow these steps:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要导出 `my_hostel` 模块的翻译术语，请按照以下步骤操作：
- en: In the web client user interface, from the **Settings** top menu, select the
    **Translations** | **Import/Export** | **Export Translation** menu option.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网络客户端用户界面中，从 **设置** 顶部菜单中选择 **翻译** | **导入/导出** | **导出翻译** 菜单选项。
- en: 'In the `.po` format and to export only one add-on module at a time – the `my_hostel`
    is the technical name for the Discuss app), in our example:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `.po` 格式下，并且一次导出单个扩展模块 – `my_hostel` 是 Discuss 应用程序的技术名称），在我们的例子中：
- en: '![Figure 11.11 – Dialogue to export translation terms](img/B20997_11_11.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.11 – 导出翻译术语的对话框](img/B20997_11_11.jpg)'
- en: Figure 11.11 – Dialogue to export translation terms
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.11 – 导出翻译术语的对话框
- en: 'In Odoo version 17, you will find a new option in the export settings called
    **Export Type**, which contains two options: **Module** and **Model**.'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Odoo 版本 17 中，你将在导出设置中找到一个名为 **导出类型** 的新选项，它包含两个选项：**模块** 和 **模型**。
- en: 'setting Module Type to Model will provide the new option to select a specific
    model with a filter option, using which the user can export only specific filter-based
    records:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将模块类型设置为模型将提供新的选项来选择具有筛选选项的特定模型，用户可以使用该选项仅导出基于特定筛选的记录：
- en: '![Figure 11.12 – Dialogue to export translation terms](img/B20997_11_12.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.12 – 导出翻译术语的对话框](img/B20997_11_12.jpg)'
- en: Figure 11.12 – Dialogue to export translation terms
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.12 – 导出翻译术语的对话框
- en: Once the export process is complete, a new window will be displayed, with a
    link to download the file and some additional advice.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦导出过程完成，将显示一个新窗口，其中包含下载文件的链接和一些额外的建议。
- en: 'To export a translation template file for the `my_hostel` add-on module from
    the Odoo command-line interface, enter the following command:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从 Odoo 命令行界面导出 `my_hostel` 扩展模块的翻译模板文件，请输入以下命令：
- en: '[PRE2]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: $ ./odoo-bin -d mydb --i18n-export=es_ES.po --modules=my_hostel
  id: totrans-105
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ ./odoo-bin -d mydb --i18n-export=es_ES.po --modules=my_hostel
- en: --language=es_ES
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: --language=es_ES
- en: $ mv es_ES.po ./addons/my_hostel/i18n
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: $ mv es_ES.po ./addons/my_hostel/i18n
- en: '[PRE3]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: How it works...
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The **Export Translation** feature extracts the translatable strings from the
    target modules and then creates a file with the translation terms. This can be
    done both from the web client and the command-line interface.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**导出翻译**功能从目标模块中提取可翻译的字符串，然后创建一个包含翻译术语的文件。这可以从Web客户端和命令行界面完成。'
- en: When exporting from the web client, we can choose to either export an empty
    translation template – that is, a file with the strings to translate, along with
    empty translations – or export a language, resulting in a file with the strings
    to translate, along with the translation for the selected language.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 当从Web客户端导出时，我们可以选择导出空翻译模板——即包含要翻译的字符串和空翻译的文件，或者导出一个语言，结果是一个包含要翻译的字符串和所选语言的翻译的文件。
- en: The available file formats are CSV, PO, and TGZ. The TGZ file format exports
    a compressed file that contains a `<name>/i18n/` directory structure with the
    PO or POT file.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 可用的文件格式是CSV、PO和TGZ。TGZ文件格式导出一个包含`<name>/i18n/`目录结构的压缩文件，其中包含PO或POT文件。
- en: The CSV format can be useful for performing translations using a spreadsheet,
    but the format to use in the add-on modules is PO files. These are expected to
    be placed inside the `i18n` subdirectory. They are then automatically loaded once
    the corresponding language is installed. When exporting these PO files, we should
    export only one module at a time. The PO file is also a popular format supported
    by translation tools, such as Poedit.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: CSV格式在通过电子表格进行翻译时很有用，但在附加模块中使用的格式是PO文件。这些文件应放置在`i18n`子目录中。一旦安装了相应的语言，它们就会自动加载。在导出这些PO文件时，我们应该一次只导出一个模块。PO文件也是翻译工具（如Poedit）支持的流行格式之一。
- en: Translations can also be exported directly from the command line by using the
    `--i18n-export` option. This recipe shows how to extract both the template files
    and the translated language files.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译也可以通过使用`--i18n-export`选项直接从命令行导出。这个示例展示了如何提取模板文件和翻译语言文件。
- en: In *Step 4* of this recipe, we exported a template file. The `--i18n-export`
    option expects the path and the filename to export. Bear in mind that the file
    extension is required to be either CSV, PO, or TGZ. This option requires the `-d`
    option, which specifies the database to use. The `--modules` option is also needed
    to indicate the add-on modules to export. Note that the `--stop-after-init` option
    is not needed since the `export` command automatically returns to the command
    line when finished.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例的*步骤4*中，我们导出了一个模板文件。`--i18n-export`选项期望导出路径和文件名。请注意，文件扩展名必须是CSV、PO或TGZ。此选项需要`-d`选项，它指定要使用的数据库。还需要`--modules`选项来指示要导出的附加模块。请注意，`--stop-after-init`选项不是必需的，因为`export`命令在完成后会自动返回到命令行。
- en: This exports a template file. The Odoo module expects this exported template
    in the `i18n` folder with the `.pot` extension. When working on a module, after
    the export operation, we usually want to move the exported PO file to the module’s
    `i18n` directory with a `<``module>.pot` name.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导出一个模板文件。Odoo模块期望在`i18n`文件夹中找到具有`.pot`扩展名的导出模板。在处理模块时，导出操作完成后，我们通常希望将导出的PO文件移动到模块的`i18n`目录下，并命名为`<模块>.pot`。
- en: In *Step 5*, the `–language` option was also used. With it, instead of an empty
    translation file, the translated terms for the selected language were also exported.
    One use case for this is to perform some translations through the web client user
    interface using the **Technical Translation** feature, and then export and include
    them in the module.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤5*中，也使用了`–language`选项。使用它，除了空翻译文件外，还会导出所选语言的翻译术语。这个用例之一是通过使用**技术翻译**功能通过Web客户端用户界面进行一些翻译，然后导出并包含在模块中。
- en: There’s more…
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Text strings in view and model definitions are automatically extracted for translation.
    For models, the `_description` attribute, the field names (the `string` attribute),
    help text, and selection field options are extracted, as well as the user texts
    for model constraints (`_constraints` and `_sql_constraints`).
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 视图和模型定义中的文本字符串会自动提取以进行翻译。对于模型，提取了`_description`属性、字段名称（`string`属性）、帮助文本以及选择字段选项，以及模型约束的用户文本（`_constraints`和`_sql_constraints`）。
- en: Text strings to translate inside Python or JavaScript code can’t be automatically
    detected, so the code should identify those strings, wrapping them inside the
    underscore function.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python或JavaScript代码中需要翻译的文本字符串无法自动检测，因此代码应识别这些字符串，并将它们包裹在下划线函数中。
- en: 'In Python’s module file, we should ensure that the file is imported with the
    following:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python的模块文件中，我们应该确保文件以以下方式导入：
- en: '[PRE4]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This file can then be used wherever a translatable text is used with something
    like this:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此文件可以在任何需要可翻译文本的地方使用，如下所示：
- en: '[PRE5]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'For strings that use additional context information, we should use Python string
    interpolation, as shown here:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用额外上下文信息的字符串，我们应该使用Python字符串插值，如下所示：
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that the interpolation should go outside the translation function. For
    example, `_("Hello %s" % 'World')` is wrong. String interpolations should also
    be preferred to string concatenation so that each interface text is just one translation
    string.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，插值应该放在翻译函数外部。例如，`_("Hello %s" % 'World')`是错误的。字符串插值也应优先于字符串连接，以便每个界面文本都只是一个翻译字符串。
- en: Be careful with the `Selection` fields! If you pass an explicit list of values
    to the field definition, the displayed strings are automatically flagged for translation.
    On the other hand, if you pass a method that returns the list of values, the display
    strings must be explicitly marked for translation.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 请小心处理`选择`字段！如果你向字段定义传递一个显式的值列表，显示的字符串将自动标记为需要翻译。另一方面，如果你传递一个返回值列表的方法，显示字符串必须显式标记为需要翻译。
- en: 'Regarding manual translation work, any text file editor will do so, but using
    an editor that specifically supports the PO file syntax makes this work easier
    by reducing the risk of formatting errors. Such editors include those listed here:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 关于手动翻译工作，任何文本文件编辑器都可以使用，但使用专门支持PO文件语法的编辑器可以简化这项工作，减少格式错误的风险。此类编辑器包括以下列表：
- en: '**POEDIT**: [https://poedit.net/](https://poedit.net/'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**POEDIT**: [https://poedit.net/](https://poedit.net/)'
- en: )
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: '**Emacs (****PO-mode)**: [https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html](https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html)'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Emacs (PO模式)**: [https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html](https://www.gnu.org/software/gettext/manual/html_node/PO-Mode.html)'
- en: '**Lokalize**: [https://l10n.kde.org/tools/](https://l10n.kde.org/tools/)'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Lokalize**: [https://l10n.kde.org/tools/](https://l10n.kde.org/tools/)'
- en: '**Gtranslator**: [https://wiki.gnome.org/Apps/Gtranslator](https://wiki.gnome.org/Apps/Gtranslator'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gtranslator**: [https://wiki.gnome.org/Apps/Gtranslator](https://wiki.gnome.org/Apps/Gtranslator)'
- en: )
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: )
- en: Using gettext tools to make translations easier
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用gettext工具使翻译更容易
- en: The PO file format is part of the `gettext` i18n and localization system that’s
    commonly used in Unix-like systems. This system includes tools to ease translation
    work.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: PO文件格式是Unix-like系统中常用的`gettext` i18n和本地化系统的一部分。此系统包括用于简化翻译工作的工具。
- en: This recipe demonstrates how to use these tools to help translate our add-on
    modules. We want to use it on a custom module, so the `my_hostel` module we created
    in [*Chapter 3*](B20997_03.xhtml#_idTextAnchor083), *Creating Odoo Add-On Modules*,
    is a good candidate. However, feel free to replace it with some other custom module
    you have at hand, replacing the tutorials’ `my_hostel` references as appropriate.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方演示了如何使用这些工具来帮助我们翻译我们的附加模块。我们希望在自定义模块上使用它，所以我们在[*第3章*](B20997_03.xhtml#_idTextAnchor083)，*创建Odoo附加模块*中创建的`my_hostel`模块是一个很好的候选者。然而，你也可以自由地用你手头的其他自定义模块替换它，并相应地替换教程中的`my_hostel`引用。
- en: How to do it...
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'To manage translations from the command line, assuming that your Odoo installation
    is at `~/odoo-work/odoo`, follow these steps:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你的Odoo安装位于`~/odoo-work/odoo`，要使用命令行管理翻译，请按照以下步骤操作：
- en: 'Create a compendium of translation terms for the target language – for example,
    Spanish. If we name our compendium file `odoo_es.po`, we should write the following
    code:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为目标语言创建一个翻译术语汇编——例如，西班牙语。如果我们命名我们的汇编文件为`odoo_es.po`，我们应该编写以下代码：
- en: '[PRE7]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Export the translation template file for the add-on module from the Odoo command-line
    interface and place it in the module’s expected location:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从Odoo命令行界面导出附加模块的翻译模板文件，并将其放置在模块预期的位置：
- en: '[PRE8]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If no translation file is available yet for the target language, create the
    PO translation file, reusing the terms that have been already found and translated
    in the compendium:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果目标语言还没有可用的翻译文件，创建PO翻译文件，重复使用在汇编中已找到和翻译的术语：
- en: '[PRE9]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If a translation file exists, add the translations that can be found in the
    compendium:'
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果存在翻译文件，请添加汇编中可以找到的翻译：
- en: '[PRE10]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To take a peek at the untranslated terms in a PO file, use the following command:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看PO文件中的未翻译术语，请使用以下命令：
- en: '[PRE11]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Use your favorite editor to complete the translation.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你喜欢的编辑器来完成翻译。
- en: How it works...
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '*Step 1* uses commands from the `gettext` toolbox to create a translation compendium
    for the chosen language – Spanish, in our case. It works by finding all the `es_ES.po`
    files in the Odoo code base and passing them to the `msgcat` command. We use the
    `--use-first` flag to avoid conflicting translations (there are a few in the Odoo
    code base). The result is passed to the `msgattrib` filter. We use the `--translated`
    option to filter out the untranslated entries and the `--no-fuzzy` option to remove
    fuzzy translations. We then save the result in `odoo_es.po`.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*步骤 1* 使用`gettext`工具箱中的命令为所选语言创建翻译汇编——在我们的例子中是西班牙语。它通过在Odoo代码库中查找所有`es_ES.po`文件，并将它们传递给`msgcat`命令来实现。我们使用`--use-first`标志来避免冲突翻译（Odoo代码库中有一些）。结果传递给`msgattrib`过滤器。我们使用`--translated`选项来过滤未翻译条目，并使用`--no-fuzzy`选项来删除模糊翻译。然后我们将结果保存在`odoo_es.po`中。'
- en: '*Step 2* calls `odoo.py` with the `--i18n-export` option. You need to specify
    a database on the command line, even if one is specified in the configuration
    file and the `--modules` option, with a comma-separated list of modules to export
    the translation.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*步骤 2* 使用`--i18n-export`选项调用`odoo.py`。即使配置文件和`--modules`选项中已指定，您仍需要在命令行上指定一个数据库，并使用逗号分隔的模块列表来导出翻译。'
- en: In the `gettext` world, fuzzy translations are those created automatically by
    the `msgmerge` command (or other tools) using a proximity match on the source
    string. We want to avoid these in the compendium.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在`gettext`世界中，模糊翻译是由`msgmerge`命令（或其他工具）使用源字符串的邻近匹配自动创建的。我们希望在汇编中避免这些。
- en: '*Step 3* creates a new translation file by using existing translated values
    found in the compendium. The `msgmerge` command is used with the `--compendium`
    option to find the `msgid` lines in the compendium files, matching those in the
    translation template file generated in *Step 2*. The result is saved in the `es_ES.po`
    file.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*步骤 3* 通过使用在汇编中找到的现有翻译值来创建一个新的翻译文件。使用带有`--compendium`选项的`msgmerge`命令来查找汇编文件中的`msgid`行，匹配在*步骤
    2*中生成的翻译模板文件中的那些。结果保存在`es_ES.po`文件中。'
- en: If you have a preexisting `.po` file for your add-on with translations that
    you would like to preserve, you should rename it and replace the `/dev/null` argument
    with this file. The renaming procedure is required to avoid using the same file
    for input and output.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有一个包含您想要保留的翻译的现有`.po`文件，您应该将其重命名，并将`/dev/null`参数替换为该文件。重命名过程是必要的，以避免使用相同的文件作为输入和输出。
- en: There’s more...
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: This tutorial only skims the surface of the rich tools that are available with
    the GNU `gettext` toolbox. Full coverage is well beyond the scope of this book.
    If you are interested, the GNU `gettext` documentation contains a wealth of precious
    information about PO file manipulation and is available at [http://www.gnu.org/software/gettext/manual/gettext.html](http://www.gnu.org/software/gettext/manual/gettext.html).
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程仅简要介绍了GNU `gettext`工具箱中可用的丰富工具。全面覆盖超出了本书的范围。如果您感兴趣，GNU `gettext`文档包含大量关于PO文件操作的有价值信息，可在[http://www.gnu.org/software/gettext/manual/gettext.html](http://www.gnu.org/software/gettext/manual/gettext.html)找到。
- en: Importing translation files into Odoo
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将翻译文件导入Odoo
- en: The standard method for loading translations is to store PO files in the module’s
    `i18n` subfolder. The translation files are loaded and additional translated strings
    are added whenever the add-on module is installed or updated.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 加载翻译的标准方法是存储PO文件在模块的`i18n`子文件夹中。每当附加模块安装或更新时，翻译文件就会被加载，并添加额外的翻译字符串。
- en: However, there may be cases where we want to directly import a translation file.
    In this recipe, we will learn how to load a translation file, either from the
    web client or from the command line.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，可能存在我们想要直接导入翻译文件的情况。在本教程中，我们将学习如何从网络客户端或命令行加载翻译文件。
- en: Getting ready
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: We need to have developer mode activated. If it’s not activated already, activate
    it, as demonstrated in the *Activating the Odoo developer tools* recipe in [*Chapter
    1*](B20997_01.xhtml#_idTextAnchor020), *Installing the Odoo Development Environment*.
    We will also need a translation `po` file, which we are going import in this tutorial
    – for example, the `myfile.po` file.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要激活开发者模式。如果尚未激活，请按照[*第1章*](B20997_01.xhtml#_idTextAnchor020)中“激活Odoo开发者工具”食谱中的说明进行激活，即安装Odoo开发环境。我们还需要一个翻译`po`文件，我们将在本教程中导入它——例如，`myfile.po`文件。
- en: How to do it...
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To import the translation terms, follow these steps:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 要导入翻译术语，请按照以下步骤操作：
- en: In the web client user interface, from the **Settings** top menu, select the
    **Translations** | **Import/Export** | **Import Translation** menu option.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在网络客户端用户界面中，从**设置**顶部菜单，选择**翻译** | **导入/导出** | **导入翻译**菜单选项。
- en: 'In the **Import Translations** dialogue box, fill out the language name and
    the language code, and select the file to import. Finally, click on the **Import**
    button:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**导入翻译**对话框中，填写语言名称和语言代码，并选择要导入的文件。最后，点击**导入**按钮：
- en: '![Figure 11.13 – Dialogue to import a translation file](img/B20997_11_13.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.13 – 导入翻译文件的对话框](img/B20997_11_13.jpg)'
- en: Figure 11.13 – Dialogue to import a translation file
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.13 – 导入翻译文件的对话框
- en: 'To import a translation file from the Odoo command-line interface, we must
    place it inside the server add-ons path and then perform the import:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从 Odoo 命令行界面导入翻译文件，我们必须将其放置在服务器附加路径中，然后执行导入：
- en: '[PRE12]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: How it works...
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '`ir.translation` table, but in newer versions of Odoo, that table is no longer
    present. As a result, all view-level translations for `arch_db`, such as button
    strings and selection field values, will be stored in the `ir_ui_view` table,
    and all field-level translations, such as field labels, will be stored in the
    `ir_model_fields` table under the `field_description` field.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`ir.translation` 表，但在 Odoo 的新版本中，该表不再存在。因此，所有针对 `arch_db` 的视图级别翻译，例如按钮字符串和选择字段值，都将存储在
    `ir_ui_view` 表中，而所有字段级别翻译，例如字段标签，都将存储在 `ir_model_fields` 表的 `field_description`
    字段下。'
- en: 'For example, our hostel table has a `room_number` model. Its field translation
    of “Room Number” will be stored at the database level as `{"en_US": "Room Number",
    "fr_BE": "Numéro` `de chambre"}`.'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '例如，我们的宿舍表有一个 `room_number` 模型。其“房间号”字段翻译将作为 `{"en_US": "Room Number", "fr_BE":
    "Numéro de chambre"}` 存储在数据库级别。'
- en: The web client feature asks for the language name, but this is not used in the
    import process. It also has an overwrite option. If selected, it forces all the
    translation strings to be imported, even the ones that already exist, overwriting
    them in the process.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 网络客户端功能会要求输入语言名称，但在导入过程中并不使用它。它还有一个覆盖选项。如果选中，它将强制导入所有翻译字符串，即使它们已经存在，也会在过程中覆盖它们。
- en: On the command line, the import can be done using the `--i18n-import` option.
    It must be provided with the path to the file, relative to an add-on’s path directory;
    `-d` and `--language` (or `-l`) are mandatory. Overwriting can also be achieved
    by adding the `--i18n-overwrite` option to the command. Note that we didn’t use
    the `--stop-after-init` option here. It isn’t needed since the import action stops
    the server when it finishes.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令行中，可以使用 `--i18n-import` 选项进行导入。它必须提供相对于附加路径目录的文件路径；`-d` 和 `--language`（或
    `-l`）是必需的。通过添加 `--i18n-overwrite` 选项到命令中，也可以实现覆盖。请注意，我们在这里没有使用 `--stop-after-init`
    选项。因为它不是必需的，因为导入操作在完成后会停止服务器。
- en: Altering a website’s custom language URL code
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 修改网站的定制语言 URL 代码
- en: Odoo also supports multiple languages for websites. On a website, the current
    language is identified as a language string. In this recipe, you will learn how
    to change the language code in a URL.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 还支持网站的多语言。在网站上，当前语言被识别为语言字符串。在本食谱中，你将学习如何更改 URL 中的语言代码。
- en: Getting ready
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Before following this recipe, make sure you have installed the `website` module
    and enabled multiple languages for the website.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在遵循此食谱之前，请确保你已经安装了 `website` 模块并启用了网站的多语言功能。
- en: How to do it...
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To modify a language’s URL code, follow these steps:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 要修改语言的 URL 代码，请按照以下步骤操作：
- en: 'Open the language list from the **Settings** | **Translations** | **Languages**
    menu option. Clicking on one of the installed languages will open a form that
    looks like this:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**设置** | **翻译** | **语言**菜单选项打开语言列表。点击其中一个已安装的语言将打开一个看起来像这样的表单：
- en: '![Figure 11.14 – Language URL code for a website](img/B20997_11_14.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.14 – 网站的语言 URL 代码](img/B20997_11_14.jpg)'
- en: Figure 11.14 – Language URL code for a website
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.14 – 网站的语言 URL 代码
- en: Here, you will see the **URL Code** field. Set the value that you want. Make
    sure you don’t add spaces or special characters here.
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里，你会看到**URL 代码**字段。设置你想要的值。确保你在这里不要添加空格或特殊字符。
- en: After configuring this, you can test the results on your website. Open the home
    page and change the language; you will see the custom language code in the URL.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 配置完成后，你可以在网站上测试结果。打开主页并更改语言；你将看到 URL 中的自定义语言代码。
- en: How it works...
  id: totrans-189
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Odoo identifies the languages for a website via the URL path. For example, [www.odoo.com/fr_FR](https://www.odoo.com/fr_FR)
    is used for the French language and [www.odoo.com/es_ES](https://www.odoo.com/es_ES)
    is used for the Spanish language. Here, the `fr_FR` and `es_ES` parts of the URL
    are the language ISO codes, and they are used by Odoo to detect the requested
    language. But sometimes, you want to set the language in a more user-friendly
    way. In that case, you can update the `fr` for the French language. In this case,
    [www.odoo.com/fr_FR](http://www.odoo.com/fr_FR) would be converted into [www.odoo.com/fr](http://www.odoo.com/fr).
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo通过URL路径识别网站的语种。例如，[www.odoo.com/fr_FR](https://www.odoo.com/fr_FR) 用于法语，[www.odoo.com/es_ES](https://www.odoo.com/es_ES)
    用于西班牙语。在这里，URL中的 `fr_FR` 和 `es_ES` 部分是语言ISO代码，Odoo使用这些代码来检测请求的语言。但有时，你可能希望以更用户友好的方式设置语言。在这种情况下，你可以更新法语对应的
    `fr`。在这种情况下，[www.odoo.com/fr_FR](http://www.odoo.com/fr_FR) 将会被转换为 [www.odoo.com/fr](http://www.odoo.com/fr)。
- en: Note
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Changing the URL code in production is not a problem; Odoo will automatically
    redirect the URL containing the language ISO code to your custom URL.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在生产环境中更改URL代码不是问题；Odoo会自动将包含语言ISO代码的URL重定向到你的自定义URL。
