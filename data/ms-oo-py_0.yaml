- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: This book will introduce you to more advanced features of the Python programming
    language. The focus is on creating the highest quality Python programs possible.
    This often means creating programs that have the highest performance or are the
    most maintainable. This means exploring design alternatives and determining which
    design offers the best performance while still being a good fit with the problem
    that is being solved.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将向您介绍Python编程语言的更高级特性。重点是创建尽可能高质量的Python程序。这通常意味着创建具有最高性能或最易维护性的程序。这意味着探索设计替代方案，并确定哪种设计在解决的问题中提供了最佳性能。
- en: Most of the book will look at a number of alternatives for a given design. Some
    will have better performance. Some will seem simpler or be a better solution for
    the problem domain. It's essential to locate the best algorithms and optimal data
    structures to create the most value with the least computer processing. Time is
    money, and programs that save time will create more value for their users.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书大部分内容将探讨给定设计的多种替代方案。有些性能更好。有些看起来更简单，或者对于问题领域来说是更好的解决方案。找到最佳算法和最佳数据结构，以最少的计算机处理来创造最大价值是至关重要的。时间就是金钱，节省时间的程序将为其用户创造更多价值。
- en: Python makes a number of internal features directly available to our application
    programs. This means that our programs can be very tightly integrated with existing
    Python features. We can leverage numerous Python features by ensuring that our
    OO designs integrate well.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Python使许多内部特性直接可用于我们的应用程序。这意味着我们的程序可以与现有的Python功能紧密集成。通过确保我们的OO设计良好地集成，我们可以利用许多Python功能。
- en: We'll often focus on a specific problem and examine several variant solutions
    to the problem. As we look at different algorithms and data structures, we'll
    see different memory and performance alternatives. It's an important OO design
    skill to work through alternate solutions in order to properly optimize the final
    application.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常专注于一个特定的问题，并检查该问题的几种不同解决方案。当我们研究不同的算法和数据结构时，我们将看到不同的内存和性能替代方案。通过研究替代解决方案，以便正确优化最终应用程序，这是一项重要的OO设计技能。
- en: One of the more important themes of this book is that there's no single *best*
    approach to any problem. There are a number of alternative approaches with different
    attributes.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的一个更重要的主题是，对于任何问题，都没有单一的*最佳*方法。有许多不同属性的替代方法。
- en: On programming *style*, the subject of style generates a surprising amount of
    interest. The astute reader will note that the examples do not meticulously conform
    to PEP-8 in every single particular detail of the name choice or punctuation.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在编程*风格*方面，风格的主题引起了令人惊讶的兴趣。敏锐的读者会注意到，示例并没有在每一个细节上都严格遵循PEP-8的名称选择或标点符号。
- en: As we move towards achieving mastery over object-oriented Python, we'll spend
    a great deal of time reading Python code from a variety of sources. We'll observe
    wide variability even within the Python Standard Library modules. Rather than
    presenting examples that are all perfectly consistent, we've opted for some inconsistency,
    the lack of consistency will better confirm with code as seen in the various open
    source projects encountered in the wild.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们朝着掌握面向对象的Python的目标迈进，我们将花费大量时间阅读来自各种来源的Python代码。我们将观察到即使在Python标准库模块中也存在广泛的差异。与其呈现所有完全一致的示例，我们选择了一些不一致，这种不一致将更好地符合在野外遇到的各种开源项目中所见的代码。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: We'll cover three advanced Python topics in a series of chapters that dig into
    the details.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在一系列章节中涵盖三个高级Python主题，深入探讨细节。
- en: '*Some Preliminaries*, covers some preliminary topics, such as unittest, doctest,
    docstrings, and some special method names.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*一些准备工作*，涵盖了一些初步主题，如unittest，doctest，docstrings和一些特殊方法名称。'
- en: '[Part 1](pt01.html "Part 1. Pythonic Classes via Special Methods"), *Pythonic
    Classes via Special Methods*: This part looks more deeply at object-oriented programming
    techniques and how we can more tightly integrate the class definitions of our
    applications with Python''s built-in features. It consists of nine chapters, which
    are as follows:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1部分](pt01.html "第1部分。通过特殊方法创建Pythonic类")，*通过特殊方法创建Pythonic类*：本部分更深入地探讨了面向对象编程技术，以及如何更紧密地将应用程序的类定义与Python的内置功能集成。它包括以下九章：'
- en: '[Chapter 1](ch01.html "Chapter 1. The __init__() Method"), *The _init_() Method*,
    provides us with a detailed description and implementation of the `_init_()` method.
    We will look at different forms of initialization for simple objects. From this,
    we can look into more complex objects that involve collections and containers.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。__init__()方法")，*__init__()方法*，为我们提供了对`__init__()`方法的详细描述和实现。我们将研究简单对象的不同初始化形式。从中，我们可以研究涉及集合和容器的更复杂对象。'
- en: '[Chapter 2](ch02.html "Chapter 2. Integrating Seamlessly with Python Basic
    Special Methods"), *Integrating Seamlessly with Python – Basic Special Methods*,
    will explain in detail as to how we can expand a simple class definition to add
    special methods. We''ll need to take a look at the default behavior inherited
    from the object so that we can understand what overrides are needed and when they''re
    actually needed.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。与Python基本特殊方法无缝集成")，*与Python基本特殊方法无缝集成*，将详细解释如何扩展简单的类定义以添加特殊方法。我们需要查看从对象继承的默认行为，以便了解何时需要覆盖以及何时实际上需要覆盖。'
- en: '[Chapter 3](ch03.html "Chapter 3. Attribute Access, Properties, and Descriptors"),
    *Attribute Access, Properties, and Descriptors*, shows us how the default processing
    works in some detail. We need to decide where and when to override the default
    behavior. We will also explore descriptors and gain a much deeper understanding
    on how Python''s internals work.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。属性访问、属性和描述符")，*属性访问、属性和描述符*，详细介绍了默认处理的工作原理。我们需要决定何时以及在哪里覆盖默认行为。我们还将探讨描述符，并更深入地了解Python内部的工作原理。'
- en: '[Chapter 4](ch04.html "Chapter 4. The ABCs of Consistent Design"), *The ABCs
    of Consistent Design*, looks at the abstract base classes in the `collections.abc`
    module in general. We''ll look at the general concepts behind the various containers
    and collections that we might want to revise or extend. Similarly, we''ll look
    at the concepts behind the numbers that we might want to implement.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第4章，一致设计的抽象基类，总体上看抽象基类在`collections.abc`模块中的抽象基类。我们将研究我们可能想要修改或扩展的各种容器和集合背后的一般概念。同样，我们将研究我们可能想要实现的数字背后的概念。
- en: '[Chapter 5](ch05.html "Chapter 5. Using Callables and Contexts"), *Using Callables
    and Contexts*, looks at several ways to create context managers using the tools
    in `contextlib`. We''ll show you a number of variant designs for callable objects.
    This will show you why a stateful callable object is sometimes more useful than
    a simple function. We''ll also take a look at how to use some of the existing
    Python context managers before we dive in and write our own context manager.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第5章，使用可调用对象和上下文，通过`contextlib`中的工具来创建上下文管理器的几种方法。我们将展示一些可调用对象的变体设计。这将向您展示为什么有状态的可调用对象有时比简单函数更有用。我们还将研究如何使用一些现有的Python上下文管理器，然后再深入编写我们自己的上下文管理器。
- en: '[Chapter 6](ch06.html "Chapter 6. Creating Containers and Collections"), *Creating
    Containers and Collections*, focuses on the basics of container classes. We''ll
    review the variety of special methods that are involved in being a container and
    offering the various features that containers offer. We''ll address extending
    built-in containers to add features. We''ll also look at wrapping built-in containers
    and delegating methods through the wrapper to the underlying container.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第6章，创建容器和集合，着重介绍容器类的基础知识。我们将回顾涉及成为容器并提供容器所提供的各种特性的各种特殊方法。我们将讨论扩展内置容器以添加功能。我们还将研究包装内置容器并通过包装器委托方法到底层容器。
- en: '[Chapter 7](ch07.html "Chapter 7. Creating Numbers"), *Creating Numbers*, covers
    these essential arithmetic operators: `+`, `-`, `*`, `/`, `//`, `%`, and `**`.
    We''ll also take a look at these comparison operators: `<`, `>`, `<=`, `>=`, `==`,
    and `!=`. We''ll finish by summarizing some of the design considerations that
    go into extending or creating new numbers.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第7章，创建数字，涵盖了这些基本算术运算符：`+`，`-`，`*`，`/`，`//`，`%`和`**`。我们还将研究这些比较运算符：`<`，`>`，`<=`，`>=`，`==`和`!=`。最后，我们将总结一些扩展或创建新数字时涉及的设计考虑。
- en: '[Chapter 8](ch08.html "Chapter 8. Decorators and Mixins – Cross-cutting Aspects"),
    *Decorators and Mixins – Cross-cutting Aspects*, covers simple function decorators,
    function decorators with arguments, class decorators, and method decorators.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第8章，装饰器和混入-横切面，涵盖了简单的函数装饰器，带参数的函数装饰器，类装饰器和方法装饰器。
- en: '[Part 2](pt02.html "Part 2. Persistence and Serialization"), *Persistence and
    Serialization*: A persistent object has been serialized to a storage medium. Perhaps
    it''s transformed to JSON and written to the filesystem. An ORM layer can store
    the object in a database. This part will take a look at the alternatives to handle
    persistence. This section contains five chapters, which are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第2部分，持久性和序列化：持久对象已经序列化到存储介质。也许它被转换为JSON并写入文件系统。ORM层可以将对象存储在数据库中。这部分将研究处理持久性的替代方案。本节包括以下五章：
- en: '[Chapter 9](ch09.html "Chapter 9. Serializing and Saving – JSON, YAML, Pickle,
    CSV, and XML"), *Serializing and Saving – JSON, YAML, Pickle, CSV, and XML*, covers
    simple persistence using libraries focused on various data representations such
    as JSON, YAML, pickle, XML, and CSV.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第9章，序列化和保存-JSON，YAML，Pickle，CSV和XML，涵盖了使用专注于各种数据表示的库进行简单持久化，如JSON，YAML，pickle，XML和CSV。
- en: '[Chapter 10](ch10.html "Chapter 10. Storing and Retrieving Objects via Shelve"),
    *Storing and Retrieving Objects via Shelve*, explains basic database operations
    with Python modules, such as `shelve` (and `dbm`).'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第10章，通过Shelve存储和检索对象，解释了使用Python模块进行基本数据库操作，比如`shelve`（和`dbm`）。
- en: '[Chapter 11](ch11.html "Chapter 11. Storing and Retrieving Objects via SQLite"),
    *Storing and Retrieving Objects via SQLite*, moves to the more complex world of
    SQL and the relational database. Because SQL features don''t match object-oriented
    programming features well, we have an **impedance mismatch** problem. A common
    solution is to use ORM to allow us to persist a large domain of objects.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第11章，通过SQLite存储和检索对象，转向更复杂的SQL和关系数据库世界。因为SQL特性与面向对象编程特性不匹配，我们有一个**阻抗不匹配**问题。一个常见的解决方案是使用ORM允许我们持久化大量对象域。
- en: '[Chapter 12](ch12.html "Chapter 12. Transmitting and Sharing Objects"), *Transmitting
    and Sharing Objects*, takes a look at the HTTP protocol, JSON, YAML, and XML representation
    to transmit an object.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第12章，传输和共享对象，看一下HTTP协议，JSON，YAML和XML表示来传输对象。
- en: '[Chapter 13](ch13.html "Chapter 13. Configuration Files and Persistence"),
    *Configuration Files and Persistence*, covers various ways in which a Python application
    can work with a configuration file.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第13章，配置文件和持久性，涵盖了Python应用程序可以处理配置文件的各种方式。
- en: '[Part 3](pt03.html "Part 3. Testing, Debugging, Deploying, and Maintaining"),
    *Testing, Debugging, Deploying, and Maintaining*: We''ll show you how to gather
    data to support and debug high-performance programs. This will include information
    on creating the best possible documentation in order to reduce the confusion and
    complexity of the support. This section contains the final five chapters, which
    are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3部分](pt03.html "第3部分。测试、调试、部署和维护"), *测试、调试、部署和维护*：我们将向您展示如何收集数据以支持和调试高性能程序。这将包括有关创建最佳文档以减少支持的混乱和复杂性的信息。本节包含最后五章，如下所示：'
- en: '[Chapter 14](ch14.html "Chapter 14. The Logging and Warning Modules"), *The
    Logging and Warning Modules*, takes a look at using the `logging` and `warning`
    modules to create audit information, as well as debug. We''ll take a significant
    step beyond using the `print()` function.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第14章](ch14.html "第14章。日志和警告模块"), *日志和警告模块*，介绍了使用`logging`和`warning`模块创建审计信息以及调试。我们将迈出使用`print()`函数的重要一步。'
- en: '[Chapter 15](ch15.html "Chapter 15. Designing for Testability"), *Designing
    for Testability*, covers designing for testability and how we use `unittest` and
    `doctest`.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第15章](ch15.html "第15章。可测试性设计"), *可测试性设计*，涵盖了可测试性设计以及我们如何使用`unittest`和`doctest`。'
- en: '[Chapter 16](ch16.html "Chapter 16. Coping With the Command Line"), *Coping
    with the Command Line*, takes a look at using the `argparse` module to parse options
    and arguments. We''ll take this a step further and use the command design pattern
    to create program components that can be combined and expanded without resorting
    to writing shell scripts.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第16章](ch16.html "第16章。处理命令行"), *处理命令行*，介绍了使用`argparse`模块解析选项和参数。我们将进一步使用命令设计模式来创建可以组合和扩展的程序组件，而无需编写shell脚本。'
- en: '[Chapter 17](ch17.html "Chapter 17. The Module and Package Design"), *The Module
    and Package Design*, covers module and package design. This is a higher-level
    set of considerations. We will take a look at related classes in a module and
    related modules in a package.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第17章](ch17.html "第17章。模块和包设计"), *模块和包设计*，涵盖了模块和包设计。这是一组更高级的考虑。我们将研究模块中的相关类和包中的相关模块。'
- en: '[Chapter 18](ch18.html "Chapter 18. Quality and Documentation"), *Quality and
    Documentation*, covers how we can document our design to create trust that our
    software is correct and has been properly implemented.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第18章](ch18.html "第18章。质量和文档"), *质量和文档*，介绍了我们如何记录我们的设计，以建立对我们的软件正确性和正确实施的信任。'
- en: What you need for this book
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需的内容
- en: 'In order to compile and run the examples mentioned in this book, you require
    the following software:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了编译和运行本书中提到的示例，您需要以下软件：
- en: Python Version 3.2 or higher with the standard suite of libraries. We'll focus
    on Python 3.3, but the differences from 3.2 are minor.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python版本3.2或更高版本，带有标准库套件。我们将专注于Python 3.3，但与3.2的差异很小。
- en: We'll take a look at some additional packages. These include PyYaml, SQLAlchemy,
    and Jinja2.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将介绍一些额外的软件包。这些包括PyYaml、SQLAlchemy和Jinja2。
- en: '[http://pyyaml.org](http://pyyaml.org)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pyyaml.org](http://pyyaml.org)'
- en: '[http://www.sqlalchemy.org](http://www.sqlalchemy.org). When building this,
    check the installation guide, [http://docs.sqlalchemy.org/en/rel_0_9/intro.html#installation](http://docs.sqlalchemy.org/en/rel_0_9/intro.html#installation).
    Using the `--without-cextensions` option can simplify installation.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.sqlalchemy.org](http://www.sqlalchemy.org)。在构建此内容时，请查看安装指南，[http://docs.sqlalchemy.org/en/rel_0_9/intro.html#installation](http://docs.sqlalchemy.org/en/rel_0_9/intro.html#installation)。使用`--without-cextensions`选项可以简化安装。'
- en: '[http://jinja.pocoo.org/](http://jinja.pocoo.org/)'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jinja.pocoo.org/](http://jinja.pocoo.org/)'
- en: Optionally, you might want to add Sphinx or Docutils to your environment, as
    we'll cover them as well.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选地，您可能希望将Sphinx或Docutils添加到您的环境中，因为我们也将涵盖它们。
- en: '[http://sphinx-doc.org](http://sphinx-doc.org)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://sphinx-doc.org](http://sphinx-doc.org)'
- en: '[http://docutils.sourceforge.net](http://docutils.sourceforge.net)'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docutils.sourceforge.net](http://docutils.sourceforge.net)'
- en: Who this book is for
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书的受众
- en: This is advanced Python. You'll need to be quite familiar with Python 3\. You'll
    also benefit from having fairly large or complex problems to solve.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这是高级Python。您需要对Python 3非常熟悉。您还将受益于解决较大或复杂的问题。
- en: If you are a skilled programmer with the other languages, you may find this
    book helpful if you want to switch to Python. This book doesn't introduce syntax
    or other foundational concepts.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您是其他语言的熟练程序员，并且想要转换到Python，您可能会发现本书有所帮助。本书不介绍语法或其他基础概念。
- en: Advanced Python 2 programmers may find this helpful when they switch to Python
    3\. We won't cover any of the conversion utilities (such as from Version 2 to
    3) or any of the coexistence libraries (such as six.) This book is focused on
    new development that has happened entirely in Python 3.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 高级Python 2程序员在切换到Python 3时可能会发现这很有帮助。我们不会涵盖任何转换实用程序（例如从版本2到3）或任何共存库（例如six）。本书侧重于完全在Python
    3中发生的新开发。
- en: Conventions
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些区分不同类型信息的文本样式。以下是一些示例及其含义的解释。
- en: 'Code words in text are shown as follows: "We can access other Python modules
    through the use of the `import` statement."'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词显示如下：“我们可以通过使用`import`语句访问其他Python模块。”
- en: 'A block of code is set as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关的行或项目以粗体显示：
- en: '[PRE1]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下形式编写：
- en: '[PRE2]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "We use this feature to update the label to a new random value every time we click
    on the **Roll!** button".'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。屏幕上看到的单词，比如菜单或对话框中的单词，会以这样的方式出现在文本中："我们使用这个功能来每次点击**Roll!**按钮时更新标签为一个新的随机值"。'
- en: Note
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会显示在这样的框中。
- en: Tip
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会显示为这样。
