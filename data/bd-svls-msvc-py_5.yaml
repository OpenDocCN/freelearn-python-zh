- en: Securing Your Microservice
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护您的微服务
- en: In this chapter, we will get a brief overview of security in AWS to ensure that
    your serverless microservices are secure. Before we create our first microservice,
    we first need to understand the AWS security models. We're going to discuss different
    terms that are important and the overall AWS security model. We are then going
    to talk about IAM, which is used to access any of the AWS resources. Finally,
    we'll look at securing your serverless microservice.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将简要概述AWS中的安全性，以确保您的无服务器微服务是安全的。在创建我们的第一个微服务之前，我们首先需要了解AWS安全模型。我们将讨论一些重要的术语和整体AWS安全模型。然后，我们将讨论IAM，用于访问任何AWS资源。最后，我们将讨论如何保护您的无服务器微服务。
- en: 'We will cover the following topics in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Overview of the security in AWS
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS安全概述
- en: Overview of AWS Identity and Access Management (IAM)
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS身份和访问管理（IAM）概述
- en: Securing your serverless microservice
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 保护您的无服务器微服务
- en: Overview of the security in AWS
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS安全概述
- en: In this section, we are going to provide an overview of the security in AWS.
    We are going to take a look at why security is important, provide some examples
    of security, discuss the types of security terms that are important, and talk
    about the AWS shared-responsibility model.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将概述AWS中的安全性。我们将看看为什么安全很重要，提供一些安全性的例子，讨论重要的安全术语类型，并谈论AWS共享责任模型。
- en: Why is security important?
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么安全很重要？
- en: 'The following points discuss the importance of security:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 以下几点讨论了安全的重要性：
- en: '**Compliance with the law and standards**: For example, the European Union
    **General Data Protection Regulation** (**GDPR**) and **Health Insurance Portability
    and Accountability Act** (**HIPAA**) adopted by the US are responsible for regulating
    the laws for data protection and privacy for all individuals.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**法律和标准的合规性**：例如，欧盟**通用数据保护条例**（**GDPR**）和美国颁布的**健康保险可移植性和责任法案**（**HIPAA**）负责监管所有个人数据保护和隐私的法律。'
- en: '**Data integrity**: Systems that aren''t secure could have their data stripped
    or tampered with, which means that you can no longer trust the data.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据完整性**：不安全的系统可能会被剥夺数据或篡改数据，这意味着您不能再信任数据。'
- en: '**Personally-identifiable information**: Privacy is a major concern these days.
    You should protect your user data and assets as a matter of course.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**个人可识别信息**：隐私是当今的主要关注点。您应该当然地保护您的用户数据和资产。'
- en: '**Data availability**: If an auditor, for example, asks you for specific data,
    you need to be able to retrieve that data. If a natural disaster happens near
    your data center, that data needs to be available and secure.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据可用性**：例如，如果审计员要求您提供特定数据，您需要能够检索该数据。如果您的数据中心附近发生自然灾害，那些数据需要是可用和安全的。'
- en: 'Let''s have a look at the following list:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看以下清单：
- en: '![](img/ecf395c1-f69c-4c11-8097-56cff9358006.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ecf395c1-f69c-4c11-8097-56cff9358006.png)'
- en: On the left, we have various systems that are configured incorrectly, missing
    updates, or have unsecured communication means. This could actually lead to the
    middle section, where there are problems such as the systems will get hacked or
    there'll be a ransomware demand or there could be an infiltration into your systems.
    A distributed denial service attack could be made, for example, which will bring
    down your e-commerce website so it will no longer be available to customers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们有各种配置不正确、缺少更新或未加密通信手段的系统。这实际上可能导致中间部分，例如系统被黑客入侵、勒索软件要求或对您的系统进行渗透。例如，可能会发动分布式拒绝服务攻击，这将使您的电子商务网站无法访问。
- en: On the right, you can see some of the impacts. There could be litigation costs,
    data loss or data leaks, a financial cost to your organization, as well as reputational
    costs.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧，您可以看到一些影响。可能会有诉讼成本、数据丢失或数据泄露、对您的组织的财务成本，以及声誉成本。
- en: Types of security terms in AWS
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS中的安全术语类型
- en: 'A lot of the security in AWS is actually configuration and just having the
    correct architecture in place. So, it''s important to understand some of these
    security terms:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: AWS中的许多安全性实际上是配置和正确架构的重要性。因此，了解一些这些安全术语是很重要的。
- en: '**Security and transit**: Think of this as HTTPS SSL. If you think about a
    web browser, you would have the padlock in your browser to show that the communication
    is secure, for example, when you''re accessing any of your online banking systems.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**传输安全**：将其视为HTTPS SSL。如果您考虑一个网络浏览器，您会在浏览器中看到一个挂锁，表示通信是安全的，例如当您访问任何在线银行系统时。'
- en: '**Security at rest**: This is the data that''s encrypted in the database or
    filesystem. Only a user with the key has access to the data.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**静态安全**：这是加密在数据库或文件系统中的数据。只有拥有密钥的用户才能访问数据。'
- en: '**Authentication**: This refers to the process to confirm whether a user or
    system is who they are meant to be.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**身份验证**：这指的是确认用户或系统是否是其应该是的过程。'
- en: '**Authorization**: Once you''re authenticated, the system checks for correct
    authorization. This is to check that the permissions and access controls are in
    place for you to access the specific AWS resources.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**授权**：一旦您经过身份验证，系统会检查正确的授权。这是为了检查权限和访问控制是否已经就位，以便您访问特定的AWS资源。'
- en: Overview of AWS Identity and Access Management (IAM)
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS身份和访问管理（IAM）概述
- en: 'In this section, we are going to briefly discuss AWS IAM, specifically for
    serverless computing. IAM is a central location where you can manage users and
    security credentials—such as password, access keys, and permission policies—that
    control access to the AWS services and resources. We are going to talk about the
    most relevant IAM resources: policies, roles, groups, and users.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将简要讨论AWS IAM，特别是用于无服务器计算。IAM是一个中心位置，您可以在那里管理用户和安全凭据，如密码、访问密钥和权限策略，以控制对AWS服务和资源的访问。我们将讨论最相关的IAM资源：策略、角色、组和用户。
- en: 'IAM policies are JSON documents that define the affected action''s resources
    and conditions. Here is an example of a JSON document that will grant read access
    to DynamoDB tables, called `Books` only if the request originates from a specific
    IP range:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 策略是定义受影响操作的资源和条件的 JSON 文档。以下是一个 JSON 文档的示例，它将授予对 DynamoDB 表的读取访问权限，仅当请求来自特定
    IP 范围时，表名为 `Books`：
- en: '![](img/23e9e592-4c72-469c-879d-98779efa042c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](img/23e9e592-4c72-469c-879d-98779efa042c.png)'
- en: There is also a visual editor that allows you to create these or you can do
    so manually by editing the JSON document itself.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一个可视化编辑器，允许您创建这些组，或者您可以通过编辑 JSON 文档来手动创建。
- en: IAM users
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IAM 用户
- en: 'An IAM user is a person or service used to interact with AWS. They access the
    Management Console via a password or multi-factor authentication (for the new
    user), or they may have an access key for programmatic access using the command-line
    interface or the SDKs. As shown in the following diagram, you can attach a policy
    to a user to grant them access to a resource to read DynamoDB within a specific
    IP range:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 用户是与 AWS 交互的人员或服务。他们通过密码或多因素身份验证（对于新用户）访问管理控制台，或者他们可能具有访问密钥，以便使用命令行界面或 SDK
    进行编程访问。如下图所示，您可以将策略附加到用户，以授予他们对特定 IP 范围内 DynamoDB 的读取访问权限：
- en: '![](img/54324278-3dcd-46d2-be1f-1add0e3d7f4f.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/54324278-3dcd-46d2-be1f-1add0e3d7f4f.png)'
- en: IAM groups
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IAM 组
- en: IAM groups are used to better mimic the security terms in your organization
    groups. You could think of them as Active Directory groups. For example, in your
    organization, you would have administrators, developers, and testers.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 组用于更好地模拟组织中的安全术语。您可以将它们视为活动目录组。例如，在您的组织中，您可能会有管理员、开发人员和测试人员。
- en: To create a group, you can use the AWS Management Console, SDK, or CLI under
    the IAM add group and then attach a policy. Once you have created a group, you
    can attach it to a user or you can create a new one.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个组，您可以使用 AWS 管理控制台、SDK 或 CLI，在 IAM 中添加组，然后附加策略。创建组后，您可以将其附加到用户，或者您可以创建一个新的组。
- en: IAM roles
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: IAM 角色
- en: 'IAM roles are similar to users, in that they can have a policy attached to
    them, but they can be attached by anyone who needs access in a trusted entity.
    In that way, you can delegate access to users, applications, or services without
    having to give them a new AWS key, as they could use the temporary security tokens
    through this trusted entity. For example, you could grant a third-party read access
    to an S3 bucket and nothing else within your AWS environment without actually
    having to share any keys and purely using the roles:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: IAM 角色类似于用户，它们可以附加策略，但可以由需要访问的任何人附加到受信任的实体。通过这种方式，您可以委派对用户、应用程序或服务的访问权限，而无需给他们新的
    AWS 密钥，因为他们可以通过这个受信任的实体使用临时安全令牌。例如，您可以授予第三方对 S3 存储桶的读取访问权限，而无需在您的 AWS 环境中共享任何密钥，纯粹使用角色：
- en: '![](img/d4c71608-50fa-43c7-928b-833e844facca.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d4c71608-50fa-43c7-928b-833e844facca.png)'
- en: Securing your serverless microservice
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保护您的无服务器微服务
- en: In this section, we are going to talk about the security required to build your
    first microservice. Specifically, we are going to look at the security around
    Lambda functions, API Gateway, and DynamoDB, and then we are going to discuss
    the ways you can use monitoring and alerting upon detecting suspicious events.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论构建第一个微服务所需的安全性。具体来说，我们将看一下围绕 Lambda 函数、API 网关和 DynamoDB 的安全性，然后我们将讨论在检测到可疑事件时可以使用的监控和警报方式。
- en: Lambda security
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lambda 安全
- en: 'In lambda security, there are two types of IAM roles:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在 lambda 安全中，有两种类型的 IAM 角色：
- en: '**Invoking the lambda**: This means having the permissions to actually invoke
    and run a lambda function. For example, this could be from an API Gateway or another
    service.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用 lambda：这意味着具有实际调用和运行 lambda 函数的权限。例如，这可以来自 API 网关或另一个服务。
- en: '**Granting lambda function read and write access to specific AWS resources**:
    For example, you would allow a Lambda function to read from a DynamoDB table.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 授予 lambda 函数对特定 AWS 资源的读写访问权限：例如，您可以允许 Lambda 函数从 DynamoDB 表中读取。
- en: 'In addition, the **Key Management Service** (**KMS**), which is an AWS-managed
    service for keys, allows you to perform encryption and decryption on data at rest
    such as in a database or a NoSQL data store, such as DynamoDB. Amazon Virtual
    Private Cloud is another option where Lambda runs, by default, within a secure
    VPC. However, you may want to run it inside your own private AWS VPC if there
    are resources you need to access, such as elastic clash clusters or RDS, that
    are within this private VPC. Here is a work flow representation of using AWS Lambda
    using AWS KMS and AWS VPC:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，**密钥管理服务**（**KMS**）是 AWS 管理的密钥服务，允许您对数据进行加密和解密，例如在数据库或 NoSQL 数据存储中的数据。亚马逊虚拟私有云是另一个选项，Lambda
    默认在安全的 VPC 中运行。但是，如果您需要访问资源，例如弹性碰撞集群或 RDS，这些资源位于私有 VPC 中，您可能希望在自己的私有 AWS VPC 中运行它。以下是使用
    AWS Lambda 使用 AWS KMS 和 AWS VPC 的工作流表示：
- en: '![](img/19a2108f-ce03-45af-af20-5dc8ab3c2d18.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/19a2108f-ce03-45af-af20-5dc8ab3c2d18.png)'
- en: 'For API Gateway security, there are three ways you can control who can call
    your API method. This is known as request authorization, shown in the following
    diagram:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 API 网关安全性，有三种方式可以控制谁可以调用您的 API 方法。这被称为请求授权，如下图所示：
- en: '![](img/2a977e79-748b-4e80-82c5-7765b11013bc.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2a977e79-748b-4e80-82c5-7765b11013bc.png)'
- en: 'Here are the different ways to control who can call your API:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是控制谁可以调用您的 API 的不同方法：
- en: '**IAM roles and policies**: This provides access to the API Gateway. API Gateway
    will use these roles and policies to verify the caller''s signature upon request.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IAM 角色和策略：这提供对 API 网关的访问。API 网关将使用这些角色和策略来验证请求者的签名。
- en: '**Amazon Cognito user pools**: This controls who can access the API. In this
    case, the user will have to sign in to access the API.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 亚马逊 Cognito 用户池：这控制谁可以访问 API。在这种情况下，用户必须登录才能访问 API。
- en: '**An API Gateway custom authorizer**: This is a request, such as a bearer token
    or lambda function, that deals with validation and checks whether the client is
    authorized to call the API.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API Gateway自定义授权者**：这是一个请求，比如一个持有者令牌或lambda函数，用于验证并检查客户端是否被授权调用API。'
- en: If you get requests from a domain other than your API's own domain, you must
    enable cross-origin resource sharing. In addition, API Gateway supports SSL certificates
    and certificate authorities. API Gateway may need authorization via an IAM role
    to call or invoke specific resources within AWS, such as with Kinesis streams
    or to invoke a Lambda function.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您从API自己的域之外的域接收请求，您必须启用跨域资源共享。此外，API Gateway支持SSL证书和证书颁发机构。API Gateway可能需要通过IAM角色授权调用或调用AWS内的特定资源，比如Kinesis流或调用Lambda函数。
- en: DynamoDB security
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: DynamoDB安全
- en: You can perform authentication using the IAM user or you can use a specific
    IAM role. Once they're authenticated, the authorization is controlled and the
    IAM policy is assigned to that specific user or role. What I recommend is that,
    when creating these policies for DynamoDB, you lock them down as much as possible,
    which means avoiding read and write access to all of the tables and DynamoDB. It's
    better to use a specific name for specific tables.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用IAM用户进行身份验证，也可以使用特定的IAM角色。一旦它们经过身份验证，授权就受到控制，并且IAM策略被分配给特定用户或角色。我建议的是，在为DynamoDB创建这些策略时，尽可能地限制它们，这意味着避免对所有表和DynamoDB进行读取和写入访问。最好为特定表使用特定名称。
- en: Monitoring and alerting
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 监控和警报
- en: 'It''s important to monitor systems for any suspicious activity and to detect
    any performance issues. API Gateway, DynamoDB, and Lambda functions all support
    CloudTrail, CloudWatch, and X-Ray for monitoring and alerting. They are discussed
    as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 监控系统中的任何可疑活动并检测任何性能问题非常重要。API Gateway、DynamoDB和Lambda函数都支持CloudTrail、CloudWatch和X-Ray进行监控和警报。它们的讨论如下：
- en: CloudTrail allows you to monitor all APIs and access to resources by any user
    or system.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudTrail允许您监控所有API和任何用户或系统对资源的访问。
- en: CloudWatch allows you to collect and track metrics and monitor log files, set
    specific alarms, and automatically react to changes in your AWS resources.
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch允许您收集和跟踪指标，监视日志文件，设置特定警报，并自动对AWS资源的更改做出反应。
- en: X-Ray is a new service that traces requests and can generate service Maps.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: X-Ray是一项新服务，可以跟踪请求并生成服务地图。
- en: The combination of these free systems gives you very good insight, out of the
    box, into your serverless system.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这些免费系统的组合为您提供了对无服务器系统的非常好的洞察力。
- en: Summary
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After reading this chapter, you should have a much deeper understanding of security
    in AWS and why it's important for your organization. After all, no one wants to
    be the person responsible for a data breach. We discussed IAM and you now know
    that policies are the key documents that ensure restricted access to AWS resources.
    We also looked at some of the security concepts that secure your serverless microservices;
    specifically, we learned about lambda, API Gateway, and DynamoDB.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读完本章后，您应该对AWS中的安全有更深入的了解，以及为什么对您的组织来说这是重要的。毕竟，没有人希望成为负责数据泄露的人。我们讨论了IAM，您现在知道策略是确保对AWS资源受限访问的关键文档。我们还研究了一些保护您的无服务器微服务的安全概念；具体来说，我们了解了lambda、API
    Gateway和DynamoDB。
