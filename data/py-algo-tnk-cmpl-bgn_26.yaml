- en: Chapter 16
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第16章
- en: The Single-Alternative Decision Structure
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 单一选择决策结构
- en: 16.1 The Single-Alternative Decision Structure
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 16.1 单一选择决策结构
- en: This is the simplest decision control structure. It includes a statement or
    block of statements on the “True” path only, as presented in the following flowchart
    fragment, given in general form.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是最简单的决策控制结构。它只包括在“True”路径上的一个语句或语句块，如下面的流程图片段所示，以一般形式给出。
- en: '![Image](img/chapter16-01.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/chapter16-01.png)'
- en: If Boolean_Expression evaluates to True, the statement, or block of statements,
    of the structure is executed; otherwise, the statements are skipped.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果布尔表达式Boolean_Expression评估为True，则执行结构中的语句或语句块；否则，跳过语句。
- en: The general form of the Python statement is
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Python语句的一般形式是
- en: 'if Boolean_Expression:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 'if Boolean_Expression:'
- en: A statement or block of statements
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 语句或语句块
- en: '![](img/notice.jpg)Note that the statement or block of statements is indented
    by 4 spaces.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)注意，语句或语句块缩进了4个空格。'
- en: In the next example, the message “You are underage!” displays only when the
    user enters a value less than 18\. Nothing is displayed when the user enters a
    value that is greater than or equal to 18.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个示例中，当用户输入小于18的值时，会显示消息“您未成年！”。当用户输入大于或等于18的值时，不会显示任何内容。
- en: '![](img/my_exercise_header.png) file_16.1a'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1a'
- en: 'age = int(input("Enter your age: "))'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 'age = int(input("Enter your age: "))'
- en: 'if age < 18:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 'if age < 18:'
- en: print("You are underage!")
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: print("You are underage!")
- en: '![](img/notice.jpg)Note that the print() statement is indented by 4 spaces.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)注意，print()语句缩进了4个空格。'
- en: In the next example, the message “You are underage!” and the message “You have
    to wait for a few more years” are displayed only when the user enters a value
    less than 18\. Same as previously, no messages are displayed when the user enters
    a value that is greater than or equal to 18.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个示例中，当用户输入小于18的值时，会显示消息“您未成年！”和消息“您需要再等几年”。与之前一样，当用户输入大于或等于18的值时，不会显示任何消息。
- en: '![](img/my_exercise_header.png) file_16.1b'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1b'
- en: 'age = int(input("Enter your age: "))'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 'age = int(input("Enter your age: "))'
- en: 'if age < 18:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 'if age < 18:'
- en: print("You are underage!")
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: print("You are underage!")
- en: print("You have to wait for a few more years.")
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: print("You have to wait for a few more years.")
- en: '![](img/notice.jpg)Note that both print() statements are indented by 4 spaces.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)注意，两个print()语句都缩进了4个空格。'
- en: '![](img/notice.jpg)Python was one of the first programming languages to enforce
    indentation. Python specifies that several statements are part of a group by indenting
    them. The indented group is called a “block of statements” or “code block”. Indentation
    is considered good practice in other languages, but in Python indentation is mandatory.
    Code that is part of a block must be indented. For example, all statements that
    appear inside an if statement must be indented to the right by the same number
    of spaces; otherwise they are not considered part of the if statement and you
    probably get an error message. There are two simple rules to remember about code
    blocks'' syntax:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)Python是第一个强制执行缩进的编程语言之一。Python通过缩进来指定多个语句属于一个组。缩进的组称为“语句块”或“代码块”。在Python中，缩进是强制性的。属于代码块的代码必须缩进。例如，所有出现在if语句内部的语句都必须向右缩进相同数量的空格；否则，它们不被视为if语句的一部分，您可能会收到错误消息。关于代码块语法的两个简单规则要记住：'
- en: '► The statement on the first line of a code block always ends with a colon
    ( : ) character.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ► 代码块的第一行语句总是以冒号（:）字符结尾。
- en: ► The code underneath the first line must be indented.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: ► 第一行下面的代码必须缩进。
- en: '![](img/notice.jpg)Python''s official website recommends the use of 4 spaces
    per indentation level. If you need more information you can visit:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)Python的官方网站建议每个缩进级别使用4个空格。如果您需要更多信息，可以访问：'
- en: '[https://tinyurl.com/5zfnzmc6](https://tinyurl.com/5zfnzmc6)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://tinyurl.com/5zfnzmc6](https://tinyurl.com/5zfnzmc6)'
- en: '[https://www.python.org/dev/peps/pep-0008](https://www.python.org/dev/peps/pep-0008)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.python.org/dev/peps/pep-0008](https://www.python.org/dev/peps/pep-0008)'
- en: .![Image](img/chapter16-02.png)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter16-02.png)
- en: '![](img/notice.jpg)In order to indent the text cursor, instead of typing space
    characters, you can hit the “Tab ![Image](img/key_tab.png)” key once!'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)为了缩进文本光标，您可以通过按一次“Tab ![图片](img/key_tab.png)”键来代替输入空格字符！'
- en: '![](img/notice.jpg)In order to indent an existing statement or a block of statements,
    select it and hit the “Tab ![Image](img/key_tab.png)” key!'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)为了缩进一个现有的语句或一组语句，选择它并按“Tab ![Image](img/key_tab.png)”键！'
- en: '![](img/notice.jpg)In order to unindent a statement or a block of statements,
    select it and hit the “Shift ↑ + Tab ![Image](img/key_tab.png)” key combination!'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)为了取消缩进一个语句或一组语句，选择它并按“Shift ↑ + Tab ![Image](img/key_tab.png)”键组合！'
- en: '![](img/notice.jpg)In computer languages other than Python, such as C, C++,
    C#, Java, or Visual Basic, indentation is not obligatory but it is quite necessary
    in order to make code easier to read. It also helps programmers to more easily
    study and understand code written by others.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)在Python以外的计算机语言中，如C、C++、C#、Java或Visual Basic，缩进不是强制性的，但它对于使代码更容易阅读是非常必要的。它还有助于程序员更容易地学习和理解他人编写的代码。'
- en: In the next example, the message “You are the King of the Gods!” is displayed
    only when the user enters the name “Zeus”. However, the message “You live on Mount
    Olympus” is always displayed, no matter what name the user enters.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个例子中，当用户输入名字“宙斯”时，才会显示消息“你是众神之王！”。然而，无论用户输入什么名字，消息“你住在奥林匹斯山上”总是显示。
- en: '![](img/my_exercise_header.png) file_16.1c'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1c'
- en: 'name = input("Enter the name of an Olympian: ")'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: name = input("输入一个奥林匹克运动员的名字：")
- en: 'if name == "Zeus":'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 'if name == "Zeus":'
- en: print("You are the King of the Gods!")
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: print("你是众神之王！")
- en: print("You live on Mount Olympus.")
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: print("你住在奥林匹斯山上。")
- en: '![](img/notice.jpg)Note that the last print() statement is not indented, and
    so it does not belong to the block of statements of the single-alternative decision
    structure.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)请注意，最后的print()语句没有缩进，因此它不属于单分支决策结构的语句块。'
- en: '![](img/notice.jpg)A very common mistake that novice programmers make when
    writing Python programs is to confuse the value assignment operator with the “equal”
    operator. They frequently make the mistake of writing if name = "Zeus" when they
    actually want to say if name == "Zeus".'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)新手程序员在编写Python程序时，一个常见的错误是将赋值运算符与“等于”运算符混淆。他们经常犯的错误是在实际上想要说if
    name == "Zeus"时写成if name = "Zeus"。'
- en: 'When only one single statement is used in the if statement, you can write it
    on one single line, like this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 当if语句中只使用一个语句时，你可以将其写在一行上，如下所示：
- en: 'if Boolean_Expression: One_Single_Statement'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 'if Boolean_Expression: One_Single_Statement'
- en: The following two examples are equivalent.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下两个例子是等价的。
- en: 'if x == y: x += 1'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x == y: x += 1'
- en: print(x)
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: 'if x == y:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x == y:'
- en: x += 1
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: x += 1
- en: print(x)
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: Exercise 16.1-1 Trace Tables and Single-Alternative Decision Structures
  id: totrans-50
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 16.1-1 跟踪表和单分支决策结构
- en: Design the corresponding flowchart and create a trace table to determine the
    values of the variables in each step of the next Python program for two different
    executions.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 设计相应的流程图并创建跟踪表，以确定下一个Python程序在两次不同执行中的每个步骤中变量的值。
- en: The input values for the two executions are (i) 10, and (ii) 51.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是（i）10和（ii）51。
- en: '![](img/my_exercise_header.png) file_16.1-1'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1-1'
- en: a = int(input())
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: a = int(input())
- en: y = 5
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: y = 5
- en: 'if a * 2 > 100:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 'if a * 2 > 100:'
- en: a = a * 3
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: a = a * 3
- en: y = a * 4
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: y = a * 4
- en: print(a, y)
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: print(a, y)
- en: Solution
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 解答
- en: The flowchart is shown here.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 流程图如下所示。
- en: '![Image](img/chapter16-03.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![Image](img/chapter16-03.png)'
- en: The trace tables for each input are shown here.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 每个输入的跟踪表如下所示。
- en: i)For the input value of 10, the trace table looks like this.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: i)对于输入值10，跟踪表如下所示。
- en: '| Step | Statement | Notes | a | y |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 步骤 | 语句 | 备注 | a | y |'
- en: '| 1 | a = int(input()) | User enters the value 10 | 10 | ? |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 1 | a = int(input()) | 用户输入值10 | 10 | ? |'
- en: '| 2 | y = 5 |   | 10 | 5 |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| 2 | y = 5 |   | 10 | 5 |'
- en: '| 3 | if a * 2 > 100: | This evaluates to False |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| 3 | if a * 2 > 100: | 这评估为False |'
- en: '| 4 | print(a, y) | It displays: 10 5 |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| 4 | print(a, y) | 显示：10 5 |'
- en: ii)For the input value of 51, the trace table looks like this.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: ii)对于输入值51，跟踪表如下所示。
- en: '| Step | Statement | Notes | a | y |'
  id: totrans-71
  prefs: []
  type: TYPE_TB
  zh: '| 步骤 | 语句 | 备注 | a | y |'
- en: '| 1 | a = int(input()) | User enters the value 51 | 51 | ? |'
  id: totrans-72
  prefs: []
  type: TYPE_TB
  zh: '| 1 | a = int(input()) | 用户输入值51 | 51 | ? |'
- en: '| 2 | y = 5 |   | 51 | 5 |'
  id: totrans-73
  prefs: []
  type: TYPE_TB
  zh: '| 2 | y = 5 |   | 51 | 5 |'
- en: '| 3 | if a * 2 > 100: | This evaluates to True |'
  id: totrans-74
  prefs: []
  type: TYPE_TB
  zh: '| 3 | if a * 2 > 100: | 这评估为True |'
- en: '| 4 | a = a * 3 |   | 153 | 5 |'
  id: totrans-75
  prefs: []
  type: TYPE_TB
  zh: '| 4 | a = a * 3 |   | 153 | 5 |'
- en: '| 5 | y = a * 4 |   | 153 | 612 |'
  id: totrans-76
  prefs: []
  type: TYPE_TB
  zh: '| 5 | y = a * 4 |   | 153 | 612 |'
- en: '| 6 | print(a, y) | It displays: 153 612 |'
  id: totrans-77
  prefs: []
  type: TYPE_TB
  zh: '| 6 | print(a, y) | 显示：153 612 |'
- en: Exercise 16.1-2 The Absolute Value of a Number
  id: totrans-78
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 16.1-2 数字的绝对值
- en: Design a flowchart and write the corresponding Python program that lets the
    user enter a number and then displays its absolute value.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个流程图并编写相应的 Python 程序，允许用户输入一个数字，然后显示其绝对值。
- en: Solution
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案
- en: Actually, there are two approaches. The first approach uses a single-alternative
    decision structure, whereas the second one uses the built-in abs() function.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，有两种方法。第一种方法使用单分支决策结构，而第二种方法使用内置的 abs() 函数。
- en: First approach – Using a single-alternative decision structure
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法 - 使用单分支决策结构
- en: The approach is simple. If the user enters a negative value, for example −5,
    this value is changed and displayed as +5\. A positive number or zero, however,
    remains as is. The solution is shown in the flowchart that follows.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法很简单。如果用户输入一个负值，例如 -5，则该值会改变并显示为 +5。然而，正数或零保持不变。解决方案如下所示的流程图所示。
- en: .![Image](img/chapter16-04.png)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: .![图像](img/chapter16-04.png)
- en: The corresponding Python program is as follows.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 相应的 Python 程序如下所示。
- en: '![](img/my_exercise_header.png) file_16.1-2a'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1-2a'
- en: x = float(input())
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(input())
- en: 'if x < 0:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x < 0:'
- en: x = (-1) * x
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: x = (-1) * x
- en: print(x)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: Second approach – Using the abs() function
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法 - 使用 abs() 函数
- en: In this case, you need just two lines of code without any decision control structure!
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您只需要两行代码，无需任何决策控制结构！
- en: '![](img/my_exercise_header.png) file_16.1-2b'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_16.1-2b'
- en: x = float(input())
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(input())
- en: print(abs(x))
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: print(abs(x))
- en: '16.2 Review Questions: True/False'
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 16.2 复习问题：判断题
- en: Choose true or false for each of the following statements.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 选择以下每个语句的真或假。
- en: 1)The single-alternative decision structure is used when a sequence of statements
    must be executed.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 1)当必须执行一系列语句时使用单分支决策结构。
- en: 2)You use a single-alternative decision structure to allow other programmers
    to more easily understand your program.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 2)您使用单分支决策结构，以便其他程序员更容易理解您的程序。
- en: 3)It is a possible that none of the statements enclosed in a single-alternative
    decision structure will be executed.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 3)在单分支决策结构中，可能没有任何语句被执行。
- en: 4)In a flowchart, the Decision symbol represents the beginning and the end of
    an algorithm.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 4)在流程图中，决策符号代表算法的开始和结束。
- en: 5)The following code is syntactically correct.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 5)以下代码在语法上是正确的。
- en: if = 5
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: if = 5
- en: x = if + 5
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: x = if + 5
- en: print(x)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: 6)The single-alternative decision structure uses the reserved keyword else.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 6)单分支决策结构使用保留关键字 else。
- en: 7)The following code fragment satisfies the property of definiteness.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 7)以下代码片段满足确定性的属性。
- en: 'if b != 3:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 'if b != 3:'
- en: x = a / (b - 3)
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: x = a / (b - 3)
- en: 8)The following Python program satisfies the property of definiteness.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 8)以下 Python 程序满足确定性的属性。
- en: a = float(input())
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: a = float(input())
- en: b = float(input())
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: b = float(input())
- en: 'if b != 3:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 'if b != 3:'
- en: x = a / (b - 3)
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: x = a / (b - 3)
- en: print(x)
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: 9)Python programs that include decision control structures and written without
    code indentation cannot be executed by a computer.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 9)包含决策控制结构且未使用代码缩进的 Python 程序无法由计算机执行。
- en: '16.3 Review Questions: Multiple Choice'
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 16.3 复习问题：多项选择题
- en: Select the correct answer for each of the following statements.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 选择以下每个语句的正确答案。
- en: 1)The single-alternative decision structure is used when
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 1)当以下情况发生时使用单分支决策结构
- en: a)statements are executed one after another.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: a)语句一个接一个地执行。
- en: b)a decision must be made before executing some statements.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: b)在执行某些语句之前必须做出决定。
- en: c)none of the above
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: c)以上皆非
- en: d)all of the above
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: d)所有上述选项
- en: 2)The single-alternative decision structure includes a statement or block of
    statements on
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 2)单分支决策结构包括一个语句或语句块。
- en: a)the false path only.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: a)只有错误路径。
- en: b)both paths.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: b)两条路径。
- en: c)the true path only.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: c)只有当变量 x 包含除 3 以外的值时。
- en: 3)In the following code fragment,
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 3)在以下代码片段中，
- en: 'if x == 3:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x == 3:'
- en: x = 5
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: x = 5
- en: y += 1
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: y += 1
- en: the statement y += 1 is executed
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 执行语句 y += 1
- en: a)only when variable x contains a value of 3.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: a)只有当变量 x 包含值为 3 的值时。
- en: b)only when variable x contains a value of 5.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: b)只有当变量 x 包含值为 5 的值时。
- en: c)only when variable x contains a value other than 3.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: c)只有当变量 x 包含除 3 以外的值时。
- en: d)always.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: d)总是。
- en: 4)In the following code fragment,
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 4)在以下代码片段中，
- en: 'if x % 2 == 0: y += 1'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x % 2 == 0: y += 1'
- en: the statement y += 1 is executed when
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 当执行语句 y += 1 时
- en: a)variable x is exactly divisible by 2.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: a)变量 x 能被 2 整除。
- en: b)variable x contains an even number.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: b)变量 x 包含一个偶数。
- en: c)variable x does not contain an odd number.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: c)变量 x 不包含一个奇数。
- en: d)all of the above
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: d)所有上述选项
- en: e)none of the above
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: e)以上皆非
- en: 5)In the following code fragment,
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 5)在以下代码片段中，
- en: x = 3 * y
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: x = 3 * y
- en: 'if x > y: y += 1'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > y: y += 1'
- en: the statement y += 1 is
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 语句y += 1是
- en: a)always executed.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: a)总是执行。
- en: b)never executed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: b)从不执行。
- en: c)executed only when variable y contains positive values.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: c)仅在变量y包含正值时执行。
- en: d)none of the above
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: d)以上都不是
- en: 6)The following program
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 6)以下程序
- en: x = int(input())
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: x = int(input())
- en: 'if x < 0:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x < 0:'
- en: x = (-1) * x
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: x = (-1) * x
- en: print(x)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: print(x)
- en: cannot be executed by a computer because
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: cannot be executed by a computer because
- en: a)it does not use code indentation.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: a)它没有使用代码缩进。
- en: b)it includes logic errors.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: b)它包含逻辑错误。
- en: c)none of the above
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: c)以上都不是
- en: 16.4 Review Exercises
  id: totrans-162
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 16.4 复习练习
- en: Complete the following exercises.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 完成以下练习。
- en: '1)Identify the syntax errors in the following Python program:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 1)识别以下Python程序中的语法错误：
- en: x = float(input())
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(input())
- en: y ← - 5
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: y ← - 5
- en: if x * y / 2 > 20
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: if x * y / 2 > 20
- en: y =* 1
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: y =* 1
- en: x += 4 * x²
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: x += 4 * x²
- en: print(x  y)
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: print(x  y)
- en: 2)Create a trace table to determine the values of the variables in each step
    of the following Python program for two different executions. Then, design the
    corresponding flowchart.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 2)创建一个跟踪表，以确定以下Python程序在两次不同执行中每一步的变量值。然后，设计相应的流程图。
- en: The input values for the two executions are (i) 10, and (ii) −10.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行输入的值分别是（i）10和（ii）-10。
- en: x = float(input())
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: x = float(input())
- en: y = -5
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: y = -5
- en: 'if x * y / 2 > 20:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x * y / 2 > 20:'
- en: y -= 1
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: y -= 1
- en: x -= 4
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: x -= 4
- en: 'if x > 0:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > 0:'
- en: y += 30
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: y += 30
- en: x = x ** 2
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: x = x ** 2
- en: print(x, ",", y)
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: print(x, ",", y)
- en: 3)Create a trace table to determine the values of the variables in each step
    of the following Python program for two different executions. Then, design the
    corresponding flowchart.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 3)创建一个跟踪表，以确定以下Python程序在两次不同执行中每一步的变量值。然后，设计相应的流程图。
- en: The input values for the two executions are (i) −11, and (ii) 11.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行输入的值分别是（i）-11和（ii）11。
- en: x = int(input())
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: x = int(input())
- en: y = 8
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: y = 8
- en: 'if abs(x) > 10:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 'if abs(x) > 10:'
- en: y += x
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: y += x
- en: x -= 1
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: x -= 1
- en: 'if abs(x) > 10:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 'if abs(x) > 10:'
- en: y *= 3
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: y *= 3
- en: print(x, ",", y)
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: print(x, ",", y)
- en: 4)Create a trace table to determine the values of the variables in each step
    of the following Python program for two different executions. Then, design the
    corresponding flowchart.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 4)创建一个跟踪表，以确定以下Python程序在两次不同执行中每一步的变量值。然后，设计相应的流程图。
- en: The input values for the two executions are (i) 1, 2, 3; and (ii) 4, 2, 1.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行输入的值分别是（i）1，2，3和（ii）4，2，1。
- en: x = int(input())
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: x = int(input())
- en: y = int(input())
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: y = int(input())
- en: z = int(input())
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: z = int(input())
- en: 'if x + y > z: x = y + z'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x + y > z: x = y + z'
- en: 'if x > y + z: y = x + z'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > y + z: y = x + z'
- en: 'if x > y - z: z = x - z % 2'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > y - z: z = x - z % 2'
- en: print(x, ",", y, ",", z)
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: print(x, ",", y, ",", z)
- en: 5)Write a Python program that prompts the user to enter a number, and then displays
    the message “Positive” when the user-provided number is positive.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 5)编写一个Python程序，提示用户输入一个数字，然后当用户提供的数字是正数时，显示消息“正数”。
- en: 6)Write a Python program that prompts the user to enter two numbers, and then
    displays the message “Both Positives” when both user-provided numbers are positives.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 6)编写一个Python程序，提示用户输入两个数字，然后当两个用户提供的数字都是正数时，显示消息“两个都是正数”。
- en: 7)Write a Python program that prompts the user to enter their age and then displays
    the message “You can drive a car in Kansas (USA)” when the user-provided age is
    greater than 14.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 7)编写一个Python程序，提示用户输入他们的年龄，然后当用户提供的年龄大于14岁时，显示消息“您可以在堪萨斯州（美国）开车”。
- en: 8)Write a Python program that prompts the user to enter a string, and then displays
    the message “Uppercase” when the user-provided string contains only uppercase
    characters.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 8)编写一个Python程序，提示用户输入一个字符串，然后当用户提供的字符串只包含大写字母时，显示消息“大写”。
- en: 'Hint: Use the upper() method.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：使用upper()方法。
- en: 9)Write a Python program that prompts the user to enter a string, and then displays
    the message “Many characters” when the user-provided string contains more than
    20 characters.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 9)编写一个Python程序，提示用户输入一个字符串，然后当用户提供的字符串包含超过20个字符时，显示消息“许多字符”。
- en: 'Hint: Use the len() function.'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：使用len()函数。
- en: 10)Write a Python program that prompts the user to enter four numbers and, if
    at least one of them is negative, it displays the message “Among the provided
    numbers, there is a negative one!”
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 10)编写一个Python程序，提示用户输入四个数字，如果其中至少有一个是负数，则显示消息“在提供的数字中，有一个是负数！”
- en: 11)Write a Python program that prompts the user to enter two numbers. If the
    first user-provided number is greater than the second one, the program must swap
    their values. In the end, the program must display the numbers, always in ascending
    order.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 11) 编写一个Python程序，提示用户输入两个数字。如果第一个用户提供的数字大于第二个数字，程序必须交换它们的值。最后，程序必须以升序显示这两个数字。
- en: 12)Write a Python program that prompts the user to enter three temperature values
    measured at three different points in New York, and then displays the message
    “Heat Wave” if the average value is greater than 60 degrees Fahrenheit.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 12) 编写一个Python程序，提示用户输入纽约三个不同地点测量的三个温度值，如果平均值大于60华氏度，则显示消息“热浪”。
