- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Running Python Applications on EC2
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在EC2服务器上运行Python应用程序
- en: In this chapter, we are going to learn how to run Python applications within
    the **Elastic Compute Cloud (EC2)** service. EC2 is an AWS service that allows
    you to provision a server in the cloud. You can find different types of server
    options. You need to carry out some configuration and run the server on the cloud.
    You might wonder why we need EC2 when we have Lambda. Lambda is very effective
    but has a duration limit. If you run your function for more than 15 minutes, it
    will give a timeout. What happens if your application needs to be run for a couple
    of hours because of a huge process? Lambda doesn’t work and you need your own
    server. Another reason to use EC2 would be if you need a very special configuration
    or installation that needs to be done within a specific server; you would need
    a server as well. Based on this kind of requirement, you need to have your own
    server in the cloud. We will provision a server and run a Python application within
    EC2.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在**弹性计算云（EC2）**服务中运行Python应用程序。EC2是一种AWS服务，允许你在云中配置服务器。你可以找到不同类型的服务器选项。你需要进行一些配置并在云中运行服务器。当你有Lambda时，你可能想知道为什么还需要EC2。Lambda非常有效，但有一个持续时间限制。如果你运行函数超过15分钟，它将给出超时。如果你的应用程序因为一个巨大的过程需要运行几个小时会发生什么？Lambda不起作用，你需要自己的服务器。使用EC2的另一个原因可能是，如果你需要非常特殊配置或安装，需要在特定服务器上完成；你也需要服务器。基于这类需求，你需要在云中拥有自己的服务器。我们将在EC2中配置服务器并运行Python应用程序。
- en: 'The chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: What is EC2?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是EC2？
- en: EC2 purchasing options
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2购买选项
- en: EC2 instance types
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: EC2实例类型
- en: Provisioning an EC2 server
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置EC2服务器
- en: Connecting to an EC2 server
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到EC2服务器
- en: Running a simple Python application on an EC2 server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在EC2服务器上运行简单的Python应用程序
- en: Processing a CSV file with a Python application on an EC2 server
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在EC2服务器上使用Python应用程序处理CSV文件
- en: The AWS CLI
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AWS CLI
- en: What is EC2?
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是EC2？
- en: AWS EC2 is a service that provides a secure and scalable server machine in the
    cloud. The main advantage of EC2 is that server management is very easy from the
    AWS Management Console. When you provision an on-premises server, it is not easy
    to configure security policies, disk management, backup management, and so on.
    AWS accelerates all this. When you provision EC2, AWS offers different contracts
    that you need to select and all these types impact the cost.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: AWS EC2是一种提供安全且可扩展的云服务器机的服务。EC2的主要优势是，从AWS管理控制台管理服务器非常容易。当你配置本地服务器时，配置安全策略、磁盘管理、备份管理等并不容易。AWS加速了所有这些。当你配置EC2时，AWS提供不同的合同供你选择，所有这些类型都会影响成本。
- en: In order to select the right service, you need to understand what services you
    are going to use, how many resources you need, and what type of storage you really
    need. These things are going to help you to reduce the cost and use EC2 efficiently.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了选择正确的服务，你需要了解你将要使用哪些服务，你需要多少资源，以及你真正需要哪种类型的存储。这些事情将帮助你降低成本并有效地使用EC2。
- en: EC2 purchasing options
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EC2购买选项
- en: We will now look at the types of EC2 contracts.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将探讨EC2合同的类型。
- en: On-Demand
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 按需
- en: In this offer, you don’t need to contract for a specific time period. AWS charges
    according to the time you use the server. You can provision a server, shut it
    down, and release the server whenever you want. It is a pay-as-you-go model.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方案中，你不需要为特定的时间段签订合同。AWS根据你使用服务器的时间来收费。你可以随时配置服务器、关闭它并释放服务器。这是一个按使用付费的模式。
- en: Reserved
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 保留
- en: You need to sign a contract with AWS for 1–3 years. The key thing to note is
    that AWS offers a discount for a Reserved commitment.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要与AWS签订1-3年的合同。需要注意的是，AWS为保留承诺提供折扣。
- en: Spot
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Spot
- en: Let’s imagine you have an application that has flexible start and end times.
    You define a bid price for whatever you are willing to pay for the server. Let’s
    imagine you have a data processing application that runs for five hours and the
    running time is not important. You are able to run at the beginning or end of
    the month; it is not a problem. You can provision a Spot instance that significantly
    reduces your cost.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们想象一下，你有一个具有灵活开始和结束时间的应用程序。你可以为服务器支付任何你愿意支付的价格。让我们想象一下，你有一个运行五小时的数据处理应用程序，运行时间并不重要。你可以在月初或月末运行；这不是问题。你可以配置一个Spot实例，这可以显著降低你的成本。
- en: Dedicated
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 专用
- en: This is useful when your organization has a software license and is moving to
    AWS. These servers are only used for your organization. Hence, you can keep the
    license that is served to your company.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这在您的组织拥有软件许可证并迁移到 AWS 时很有用。这些服务器仅用于您的组织。因此，您可以保留分配给公司的许可证。
- en: EC2 instance types
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: EC2 实例类型
- en: AWS offers different types of servers depending on your technical requirement.
    Server type selection is one of the most important things to manage your budget
    and use the EC2 server efficiently. If you need to use memory processing applications
    such as **Spark**, it would be better to provision a memory-optimized server.
    On the other hand, if you need a server that needs more storage, you can use a
    storage-optimized server.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: AWS 根据您的技术需求提供不同类型的服务器。服务器类型选择是管理您的预算并有效地使用 EC2 服务器最重要的因素之一。如果您需要使用内存处理应用程序，如
    **Spark**，则最好配置一个内存优化服务器。另一方面，如果您需要一个需要更多存储的服务器，您可以使用存储优化服务器。
- en: 'The following screenshot shows that you are able to select more than hundreds
    of types of servers in AWS:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示您可以在 AWS 中选择超过数百种服务器类型：
- en: '![](img/Figure_4.01_B19195.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.01_B19195.jpg)'
- en: Figure 4.1 – EC2 instance types [Source – [https://aws.amazon.com/](https://aws.amazon.com/)]
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.1 – EC2 实例类型 [来源 – [https://aws.amazon.com/](https://aws.amazon.com/)]
- en: Auto-scaling
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自动扩展
- en: If you need a clustered environment, it would be better to define an auto-scaling
    policy in order to manage resources efficiently.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您需要一个集群环境，最好定义一个自动扩展策略来有效地管理资源。
- en: 'Let’s think about a batch processing job that runs once a day in order to process
    massive amounts of data. You provision more than one machine. But when the system
    is idle, you are going to be charged unnecessarily. However, if you define an
    auto-scaling policy, the system will close when it is idle. This configuration
    is going to reduce your costs. The following figure shows the minimum size of
    the launched instances and the maximum size of the desired capacity:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个每天运行一次以处理大量数据的批量处理作业。您配置了多台机器。但是当系统空闲时，您将不必要地被收费。然而，如果您定义了自动扩展策略，系统将在空闲时关闭。这种配置将降低您的成本。以下图显示了启动实例的最小大小和期望容量的最大大小：
- en: '![](img/Figure_4.02_B19195.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.02_B19195.jpg)'
- en: Figure 4.2 – Auto-scaling
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.2 – 自动扩展
- en: Auto-scaling is one of the most important features of EC2\. You need to consider
    the usage of EC2 and configure an auto-scaling feature.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 自动扩展是 EC2 的最重要的功能之一。您需要考虑 EC2 的使用并配置自动扩展功能。
- en: In this section, we took a look at the most important features of EC2\. In the
    next section, we will provision an EC2 server.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了 EC2 的最重要的功能。在下一节中，我们将配置 EC2 服务器。
- en: Provisioning an EC2 server
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 AWS 上配置 EC2 服务器
- en: We are going to provision an EC2 server step by step. There are different types
    of EC2 machines; we will provision a free server. I would recommend terminating
    the server when you finish your work, as we are just using EC2 for learning purposes.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步配置 EC2 服务器。有不同类型的 EC2 机器；我们将配置一个免费服务器。我建议您完成工作后终止服务器，因为我们只是将 EC2 用于学习目的。
- en: 'To provision an EC2 server on AWS, carry out the following steps:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 AWS 上配置 EC2 服务器，请执行以下步骤：
- en: Go to the AWS Management Console.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往 AWS 管理控制台。
- en: 'Search for **EC2** and go to the link titled **EC2**:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索 **EC2** 并访问标题为 **EC2** 的链接：
- en: '![](img/Figure_4.03_B19195.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.03_B19195.jpg)'
- en: Figure 4.3 – AWS Management Console
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.3 – AWS 管理控制台
- en: 'In order to launch an instance, click **Instances** on the left side, and then
    click **Launch instances**:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了启动一个实例，点击左侧的 **实例**，然后点击 **启动实例**：
- en: '![](img/Figure_4.04_B19195.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.04_B19195.jpg)'
- en: Figure 4.4 – Create an instance
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 创建实例
- en: 'In the new panel, you can give a name to the EC2 instance. You can see that
    we titled ours **Test_Python**. On this launch page, AWS recommends a Linux machine,
    which is in the free tier. The free tier means that you don’t need to pay money
    to AWS. We will proceed with that option:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在新面板中，您可以给 EC2 实例命名。您可以看到我们将其命名为 **Test_Python**。在此启动页面上，AWS 推荐使用 Linux 机器，它位于免费层。免费层意味着您不需要向
    AWS 支付费用。我们将继续使用该选项：
- en: '![](img/Figure_4.05_B19195.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.05_B19195.jpg)'
- en: Figure 4.5 – Instance features
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 实例功能
- en: 'You can now see the **Key pair (login)** panel. A key pair is used to connect
    to the server via the SSH key in a secure way. In order to create a new SSH key,
    click **Create new** **key pair**:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以看到**密钥对（登录）**面板。密钥对用于通过SSH密钥以安全的方式连接到服务器。为了创建一个新的SSH密钥，请点击**创建新** **密钥对**：
- en: '![](img/Figure_4.06_B19195.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.06_B19195.jpg)'
- en: Figure 4.6 – Creating a new key pair
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – 创建新的密钥对
- en: 'We need to give a name to the key pair. Apart from that, you can keep the key
    pair type and private key file format as the defaults. Click **Create** **key
    pair**:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要给密钥对起一个名字。除此之外，您可以将密钥对类型和私钥文件格式保留为默认设置。点击**创建** **密钥对**：
- en: '![](img/Figure_4.07_B19195.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.07_B19195.jpg)'
- en: Figure 4.7 – Naming the key pair
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.7 – 命名密钥对
- en: 'Once you click **Create key pair**, it will download the file. Please keep
    this file; it will be used to connect to the machine. The **Key pair name** dropdown
    will also be selected with your creation. When you create a new key pair in the
    upper section, the new key pair name will be visible, which you can see in the
    following screenshot. For this example, our key pair is **key_for_test_python**:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您点击**创建密钥对**，它将下载文件。请保留此文件；它将用于连接到机器。**密钥对名称**下拉菜单也将与您的创建一起选择。当您在上部区域创建新的密钥对时，新的密钥对名称将可见，您可以在下面的屏幕截图中看到。对于本例，我们的密钥对是**key_for_test_python**：
- en: '![](img/Figure_4.08_B19195.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.08_B19195.jpg)'
- en: Figure 4.8 – The key pair is ready
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.8 – 密钥对已就绪
- en: 'In the next step, we are going to create and assign a **virtual private cloud
    (VPC)** and subnet:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我们将创建并分配一个**虚拟专用云（VPC）**和子网：
- en: '![](img/Figure_4.09_B19195.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.09_B19195.jpg)'
- en: Figure 4.9 – VPC and subnet
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.9 – VPC和子网
- en: 'A VPC allows AWS services to run in a logically isolated network. It is one
    of the key services that keep the service secure. You can easily isolate the servers
    with VPC configuration. The following figure illustrates a VPC and EC2 setup:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: VPC允许AWS服务在逻辑隔离的网络中运行。它是保持服务安全的关键服务之一。您可以通过VPC配置轻松隔离服务器。以下图示说明了VPC和EC2的设置：
- en: '![](img/Figure_4.10_B19195.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.10_B19195.jpg)'
- en: Figure 4.10 – VPC [Source – https://aws.amazon.com/]
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.10 – VPC [来源 – https://aws.amazon.com/]
- en: As you see, once you add one of the servers to the VPC subnet in AZ 2, it means
    the EC2 instances are logically isolated from others. Hence, you can add access
    controls to keep the server secure.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，一旦您将服务器之一添加到AZ 2的VPC子网中，这意味着EC2实例在逻辑上与其他实例隔离。因此，您可以添加访问控制以保持服务器安全。
- en: 'The subnet is also one of the important parts of a VPC. Each VPC consists of
    a subnet that defines an IP range for the VPC. In the following diagram, you can
    see the IP range for each subnet:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 子网也是VPC的一个重要组成部分。每个VPC都包含一个子网，它定义了VPC的IP范围。在以下图中，您可以看到每个子网的IP范围：
- en: '![](img/Figure_4.11_B19195.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.11_B19195.jpg)'
- en: Figure 4.11 – Subnet [Source – https://aws.amazon.com/]
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.11 – 子网 [来源 – https://aws.amazon.com/]
- en: 'We took a look at VPCs and subnets. Now, we need to define a VPC for the EC2
    instance:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了VPC和子网。现在，我们需要为EC2实例定义一个VPC：
- en: 'Type `VPC` in the search box of the **AWS** **Management Console**:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**AWS** **管理控制台**的搜索框中输入`VPC`：
- en: '![](img/Figure_4.12_B19195.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.12_B19195.jpg)'
- en: Figure 4.12 – VPC on the AWS Management Console
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.12 – AWS管理控制台中的VPC
- en: 'Click **Create VPC**:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建VPC**：
- en: '![](img/Figure_4.13_B19195.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.13_B19195.jpg)'
- en: Figure 4.13 – Create VPC
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.13 – 创建VPC
- en: 'Once you click the button, under the VPC settings, **VPC and more** is selected
    by default. This option allows you to create a VPC with subnets, which you see
    on the right side of the following screenshot. With this option, you can create
    a VPC and subnet together:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您点击按钮，在VPC设置下，默认选择**VPC和更多**。此选项允许您创建带有子网的VPC，您可以在以下屏幕截图的右侧看到。使用此选项，您可以一起创建VPC和子网：
- en: '![](img/Figure_4.14_B19195.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.14_B19195.jpg)'
- en: Figure 4.14 – Adding VPC details
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.14 – 添加VPC详细信息
- en: 'At the bottom of this page, click the **Create** **VPC** button:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此页面的底部，点击**创建** **VPC**按钮：
- en: '![](img/Figure_4.15_B19195.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.15_B19195.jpg)'
- en: Figure 4.15 – Creating a VPC
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.15 – 创建VPC
- en: 'When you click **Create VPC**, the VPC begins creation and you can see the
    status of the progress:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**创建VPC**时，VPC开始创建，您可以看到进度状态：
- en: '![](img/Figure_4.16_B19195.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.16_B19195.jpg)'
- en: Figure 4.16 – The VPC creation process
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.16 – VPC创建过程
- en: 'After it has been created, you are able to see the VPC and subnet in the VPC
    console:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 创建完成后，您可以在VPC控制台中看到VPC和子网：
- en: '![](img/Figure_4.17_B19195.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.17_B19195.jpg)'
- en: Figure 4.17 – The VPC and subnet
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.17 – VPC 和子网
- en: 'So far, we have created a VPC and a subnet. We can proceed with the EC2 creation:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经创建了一个 VPC 和一个子网。我们可以继续创建 EC2：
- en: 'Open the **EC2** launch page again. In this case, the VPC and subnet are selected
    by default. Click **Edit**:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次打开 **EC2** 启动页面。在这种情况下，VPC 和子网是默认选择的。点击 **编辑**：
- en: '![](img/Figure_4.18_B19195.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.18_B19195.jpg)'
- en: Figure 4.18 – Network settings
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.18 – 网络设置
- en: 'In order to connect to the machine, we need to select a public subnet and enable
    **Auto-assign public IP**. You can see the public subnet options in the **Subnet**
    dropdown. In general, it is not recommended to put production applications in
    a public subnet. As we are implementing a test project, we can proceed in this
    manner:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了连接到该机器，我们需要选择一个公共子网并启用 **自动分配公共 IP**。您可以在 **子网** 下拉菜单中看到公共子网选项。通常，不建议将生产应用程序放在公共子网中。由于我们正在实施测试项目，我们可以继续这样做：
- en: '![](img/Figure_4.19_B19195.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.19_B19195.jpg)'
- en: Figure 4.19 – Enabling the public IP
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.19 – 启用公共 IP
- en: 'At the bottom of the page, click **Launch instance**:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在页面底部，点击 **启动实例**：
- en: '![](img/Figure_4.20_B19195.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.20_B19195.jpg)'
- en: Figure 4.20 – Launching an instance
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.20 – 启动实例
- en: When we click the **Instances** link on the left side, we are able to see the
    list of instances that we have created. Congratulations, you have created your
    first server!
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们点击左侧的 **实例** 链接时，我们能够看到我们创建的实例列表。恭喜，您已经创建了您的第一个服务器！
- en: '![](img/Figure_4.21_B19195.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.21_B19195.jpg)'
- en: Figure 4.21 – Running instances
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.21 – 运行实例
- en: You have successfully created a server in an efficient way. We are going to
    connect to the server in the upcoming section.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功以高效的方式创建了一个服务器。在接下来的部分，我们将连接到该服务器。
- en: Connecting to an EC2 server
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到 EC2 服务器
- en: 'In this stage, we are going to connect to the EC2 server via SSH:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个阶段，我们将通过 SSH 连接到 EC2 服务器：
- en: 'In the list of instances, there is a **Connect** button. Click it:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实例列表中，有一个 **连接** 按钮。点击它：
- en: '![](img/Figure_4.22_B19195.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.22_B19195.jpg)'
- en: Figure 4.22 – Connecting an instance
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.22 – 连接实例
- en: 'Under the **SSH client** tab, you can see the steps to connect to the EC2 machine:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **SSH 客户端** 选项卡下，您可以看到连接到 EC2 机器的步骤：
- en: '![](img/Figure_4.23_B19195.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.23_B19195.jpg)'
- en: Figure 4.23 – Steps to connect
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.23 – 连接步骤
- en: 'In this example, I will use Mac Terminal in order to connect to the machine
    via SSH. I am copying the command in the example and pasting it into Terminal.
    You can also use different SSH applications such as PuTTY and WinSCP. Please make
    sure the PEM key file is in the same location where you execute the command or
    that you set the right path for the PEM key file:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这个例子中，我将使用 Mac 终端来通过 SSH 连接到该机器。我在示例中复制了命令并将其粘贴到终端中。您也可以使用不同的 SSH 应用程序，如 PuTTY
    和 WinSCP。请确保 PEM 密钥文件位于您执行命令的同一位置，或者您已设置正确的 PEM 密钥文件路径：
- en: '![](img/Figure_4.24_B19195.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.24_B19195.jpg)'
- en: Figure 4.24 – Connecting via Terminal
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.24 – 通过终端连接
- en: 'Type `yes` to confirm the connection with this machine:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `yes` 以确认与该机器的连接：
- en: '![](img/Figure_4.25_B19195.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.25_B19195.jpg)'
- en: Figure 4.25 – Confirmation for the machine
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.25 – 机器确认
- en: Congratulations! You have connected to the machine.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已连接到该机器。
- en: '![](img/Figure_4.26_B19195.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.26_B19195.jpg)'
- en: Figure 4.26 – Connected to the machine
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.26 – 连接到机器
- en: You have successfully connected to the server. We are going to install Python
    in the next section.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功连接到服务器。在下一节中，我们将安装 Python。
- en: Running a simple Python application on an EC2 server
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 EC2 服务器上运行简单的 Python 应用程序
- en: 'We are going to run a simple Python application on EC2\. First of all, check
    the Python version:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 EC2 上运行一个简单的 Python 应用程序。首先，检查 Python 版本：
- en: 'Execute `python --version` from the command line:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从命令行执行 `python --version`：
- en: '![](img/Figure_4.27_B19195.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.27_B19195.jpg)'
- en: Figure 4.27 – Checking the Python version
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.27 – 检查 Python 版本
- en: 'Run the `python` command on the command line:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令行上运行 `python` 命令：
- en: '![](img/Figure_4.28_B19195.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.28_B19195.jpg)'
- en: Figure 4.28 – Connecting to the Python compiler
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.28 – 连接到 Python 编译器
- en: 'Run a simple code snippet such as `print ''Hello EC2''` and you will see that
    the compiler executes the command and prints it:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行一个简单的代码片段，例如 `print 'Hello EC2'`，您将看到编译器执行该命令并打印它：
- en: '![](img/Figure_4.29_B19195.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_4.29_B19195.jpg)'
- en: Figure 4.29 – Running simple code
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.29 – 运行简单代码
- en: We have executed a simple Python application. In the next section, we will run
    a simple project on EC2.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经执行了一个简单的Python应用程序。在下一节中，我们将在EC2上运行一个简单的项目。
- en: Processing a CSV file with a Python application on an EC2 server
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在EC2服务器上使用Python应用程序处理CSV文件
- en: 'In the previous chapter, we processed a CSV file within Lambda. In this section,
    we will run the same application within EC2, but there will be some differences:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们在Lambda中处理了CSV文件。在本节中，我们将在EC2中运行相同的应用程序，但会有一些不同：
- en: Log in to the EC2 machine.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录到EC2机器。
- en: Create a folder in which to keep the `csv` file that is to be processed.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个文件夹以保存要处理的`csv`文件。
- en: 'Run the `mkdir csv` command in order to create a `csv` folder on Ubuntu:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`mkdir csv`命令以在Ubuntu上创建一个`csv`文件夹：
- en: '![](img/Figure_4.30_B19195.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图4.30_B19195](img/Figure_4.30_B19195.jpg)'
- en: Figure 4.30 – Creating a folder
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.30 – 创建文件夹
- en: After running the `mkdir` command, you can execute with the `ls` command in
    order to list your directory. As you see, the `csv` folder is created.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行`mkdir`命令后，您可以使用`ls`命令来列出您的目录。如您所见，`csv`文件夹已创建。
- en: 'Locate the `csv` folder by executing `cd csv`:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过执行`cd csv`来定位`csv`文件夹：
- en: '![](img/Figure_4.31_B19195.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图4.31_B19195](img/Figure_4.31_B19195.jpg)'
- en: Figure 4.31 – Locating the csv folder
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.31 – 定位csv文件夹
- en: Create a sample `CSV` file in the EC2 machine.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在EC2机器上创建一个示例`CSV`文件。
- en: 'I have uploaded a sample CSV file for you in the following URL. Run the following
    code to download the sample CSV. The `wget` command allows you to download the
    file from the specific link:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经在以下URL中为您上传了一个示例CSV文件。运行以下代码以下载示例CSV。`wget`命令允许您从特定链接下载文件：
- en: '[PRE0]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](img/Figure_4.32_B19195.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图4.32_B19195](img/Figure_4.32_B19195.jpg)'
- en: Figure 4.32 – Downloading the sample CSV file
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.32 – 下载示例CSV文件
- en: Now that you have downloaded the file, you are able to create Python code in
    order to process the CSV file.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经下载了文件，您就可以创建Python代码来处理CSV文件。
- en: 'Run the following code to download the Python code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码以下载Python代码：
- en: '[PRE1]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](img/Figure_4.33_B19195.jpg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图4.33_B19195](img/Figure_4.33_B19195.jpg)'
- en: Figure 4.33 – Downloading the Python code
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.33 – 下载Python代码
- en: 'The following code is very simple; the code imports the `csv` library and prints
    the first five lines within the CSV:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码非常简单；代码导入`csv`库并打印CSV中的前五行：
- en: '![](img/Figure_4.34_B19195.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图4.34_B19195](img/Figure_4.34_B19195.jpg)'
- en: Figure 4.34 – Python code
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.34 – Python代码
- en: 'The next step is to run Python code to see the results. Execute `python fileprocessor.py`
    to run the application. After running the application, you will see the results:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是运行Python代码以查看结果。执行`python fileprocessor.py`以运行应用程序。运行应用程序后，您将看到结果：
- en: '![](img/Figure_4.35_B19195.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图4.35_B19195](img/Figure_4.35_B19195.jpg)'
- en: Figure 4.35 – Running Python code
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.35 – 运行Python代码
- en: In this section, we saw how to run a simple Python application within an AWS
    EC2 server. Now, we will touch upon the AWS SDK for Python.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们看到了如何在AWS EC2服务器中运行一个简单的Python应用程序。现在，我们将涉及到Python的AWS SDK。
- en: The AWS CLI
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS CLI
- en: '`awscli` to access AWS services. In this section, we will install `awscli`
    and, after that, configure an EC2 machine to upload a file from EC2:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`awscli`访问AWS服务。在本节中，我们将安装`awscli`，然后配置EC2机器以从EC2上传文件：
- en: 'In order to access S3 from `awscli`, we need to create an IAM role to be attached
    to EC2\. Connect to the AWS Management Console, type `IAM`, and then click **IAM**:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了从`awscli`访问S3，我们需要创建一个IAM角色并将其附加到EC2。连接到AWS管理控制台，输入`IAM`，然后点击**IAM**：
- en: '![](img/Figure_4.36_B19195.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图4.36_B19195](img/Figure_4.36_B19195.jpg)'
- en: Figure 4.36 – IAM in the console
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.36 – 控制台中的IAM
- en: 'Click **Roles** on the left panel and then click **Create role**:'
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧面板上点击**角色**，然后点击**创建角色**：
- en: '![](img/Figure_4.37_B19195.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![图4.37_B19195](img/Figure_4.37_B19195.jpg)'
- en: Figure 4.37 – Create role
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.37 – 创建角色
- en: 'Select **EC2** as a common use case and click **Next**:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**EC2**作为通用用例，然后点击**下一步**：
- en: '![](img/Figure_4.38_B19195.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![图4.38_B19195](img/Figure_4.38_B19195.jpg)'
- en: Figure 4.38 – Select a service
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.38 – 选择服务
- en: 'Now, we need to give the required permission. Since we will access S3, check
    the **AmazonS3FullAccess** checkbox. This policy will allow users to upload and
    read the object under S3\. After selecting the policy, you can click the **Next**
    button:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们需要给予所需的权限。由于我们将访问S3，请勾选**AmazonS3FullAccess**复选框。此策略将允许用户上传和读取S3下的对象。选择策略后，您可以点击**下一步**按钮：
- en: '![](img/Figure_4.39_B19195.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
  zh: '![图4.39_B19195](img/Figure_4.39_B19195.jpg)'
- en: Figure 4.39 – Selecting the policy
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.39 – 选择策略
- en: 'Give a name to the role and click the **Create role** button to create a role:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给角色命名并点击**创建角色**按钮以创建角色：
- en: '![](img/Figure_4.40_B19195.jpg)'
  id: totrans-175
  prefs: []
  type: TYPE_IMG
  zh: '![图4.40_B19195](img/Figure_4.40_B19195.jpg)'
- en: (a)
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: (a)
- en: '![](img/Figure_4.41_B19195.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.41_B19195.jpg)'
- en: (b)
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: (b)
- en: Figure 4.40 – Naming the role
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.40 – 命名角色
- en: 'In the final step to attach the role, click the **Actions** drop-down button,
    go to **Security,** and select **Modify** **IAM role**:'
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在附加角色的最后一步，点击 **操作** 下拉按钮，转到 **安全**，并选择 **修改** **IAM 角色**：
- en: '![](img/Figure_4.42_B19195.jpg)'
  id: totrans-181
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.42_B19195.jpg)'
- en: Figure 4.41 – Attach role
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.41 – 添加角色
- en: 'On the next screen, select **EC2ROLE**, to be attached to EC2, and click **Update**
    **IAM role**:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一屏幕上，选择 **EC2ROLE**，以便附加到 EC2，然后点击 **更新** **IAM 角色**：
- en: '![](img/Figure_4.43_B19195.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.43_B19195.jpg)'
- en: Figure 4.42 – Update IAM role
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.42_B19195.jpg)'
- en: 'We have created and attached the required role to log in to an EC2 machine:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已创建并附加了所需的角色以登录到 EC2 机器：
- en: '![](img/Figure_4.44_B19195.jpg)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.44_B19195.jpg)'
- en: Figure 4.43 – Task complete
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.43_B19195.jpg)'
- en: Now, we will upload a file to S3.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将文件上传到 S3。
- en: 'Create a file under the EC2 machine. The `touch` command helps you to create
    an empty file. Optionally, you can also create a file using another application:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在 EC2 机器下创建一个文件。`touch` 命令可以帮助您创建一个空文件。可选地，您也可以使用其他应用程序创建文件：
- en: '![](img/Figure_4.45_B19195.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.45_B19195.jpg)'
- en: Figure 4.44 – Creating a file
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.44 – 创建文件
- en: 'We can upload this file to S3 via the AWS CLI. In the previous chapter, we
    created an S3 bucket. You can use this bucket or create a new bucket to test the
    AWS CLI S3 command. Let’s upload the file to the S3 bucket. The format for uploading
    a file is as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 AWS CLI 将此文件上传到 S3。在上一章中，我们创建了一个 S3 桶。您可以使用此桶或创建一个新的桶来测试 AWS CLI S3 命令。让我们将文件上传到
    S3 桶。上传文件的格式如下：
- en: '[PRE2]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](img/Figure_4.46_B19195.jpg)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.46_B19195.jpg)'
- en: Figure 4.45 – Uploading the file
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.45 – 上传文件
- en: 'We successfully uploaded the file. We are able to check whether the S3 bucket
    is uploaded from the console. Open the bucket from the S3 console and check:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们成功上传了文件。我们能够通过控制台检查 S3 桶是否已上传。从 S3 控制台打开桶并检查：
- en: '![](img/Figure_4.47_B19195.jpg)'
  id: totrans-198
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_4.47_B19195.jpg)'
- en: Figure 4.46 – Bucket content
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '![图片](img/Figure_4.46_B19195.jpg)'
- en: As you can see, the file is uploaded to the S3 bucket.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 正如您所看到的，文件已上传到 S3 桶中。
- en: The AWS client is useful when you want to access AWS services and perform some
    tasks using commands. In this section, we learned how to copy a file to the S3
    bucket via the command line, which saves a lot of time.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想通过命令访问 AWS 服务并执行一些任务时，AWS 客户端非常有用。在本节中，我们学习了如何通过命令行将文件复制到 S3 桶中，这可以节省大量时间。
- en: Summary
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the AWS EC2 service, which is used to create
    a server on the cloud. You can create your server in an efficient way and use
    it for different purposes, such as an application server, web server, or database
    server. We also created an EC2 server as an example and ran our Python application
    on EC2\. In the following chapter, we will take a look at how to debug our Python
    application via PyCharm.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 AWS EC2 服务，该服务用于在云上创建服务器。您可以以高效的方式创建服务器，并用于不同的目的，例如应用程序服务器、Web 服务器或数据库服务器。我们还创建了一个
    EC2 服务器作为示例，并在 EC2 上运行了我们的 Python 应用程序。在下一章中，我们将探讨如何通过 PyCharm 调试我们的 Python 应用程序。
