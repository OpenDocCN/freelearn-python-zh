- en: Preface
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前言
- en: Functional programming offers a variety of techniques for creating succinct
    and expressive software. While Python is not a purely functional programming language,
    we can do a great deal of functional programming in Python.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程提供了一系列创建简洁和表达性软件的技术。虽然 Python 不是一个纯粹的函数式编程语言，但我们可以在 Python 中进行大量的函数式编程。
- en: Python has a core set of functional programming features. This lets us borrow
    many design patterns and techniques from other functional languages. These borrowed
    concepts can lead us to create elegant programs. Python’s generator expressions,
    in particular, negate the need to create large in-memory data structures, leading
    to programs that may execute more quickly because they use fewer resources.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python 拥有一组核心的函数式编程特性。这使得我们可以从其他函数式语言中借用许多设计模式和技巧。这些借用的概念可以引导我们创建优雅的程序。特别是 Python
    的生成器表达式，它否定了创建大型内存数据结构的需要，导致程序可能执行得更快，因为它们使用的资源更少。
- en: We can’t easily create purely functional programs in Python. Python lacks a
    number of features that would be required for this. We don’t have unlimited recursion,
    for example, we don’t have lazy evaluation of all expressions, and we don’t have
    an optimizing compiler.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，我们无法轻松地创建纯函数式程序。Python 缺乏实现这一目标所需的一些特性。例如，我们没有无限的递归，我们没有对所有表达式的惰性求值，我们也没有优化编译器。
- en: There are several key features of functional programming languages that are
    available in Python. One of the most important ones is the idea of functions being
    first-class objects. Python also offers a number of higher-order functions. The
    built-in `map()`, `filter()`, and `functools.reduce()` functions are widely used
    in this role, and less obvious are functions such as `sorted()`, `min()`, and
    `max()`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Python 中提供了函数式编程语言的一些关键特性。其中之一是函数作为一等对象的理念。Python 还提供了一些高阶函数。内置的 `map()`、`filter()`
    和 `functools.reduce()` 函数在此角色中广泛使用，而像 `sorted()`、`min()` 和 `max()` 这样的函数则不那么明显。
- en: In some cases, a functional approach to a problem will also lead to extremely
    high-performance algorithms. Python makes it too easy to create large intermediate
    data structures, tying up memory (and processor time). With functional programming
    design patterns, we can often replace large lists with generator expressions that
    are equally expressive but take up much less memory and run much more quickly.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，对问题的函数式方法也会导致极高的性能算法。Python 使得创建大型中间数据结构变得过于容易，这会占用内存（和处理时间）。使用函数式编程设计模式，我们通常可以用占用内存更少且运行速度更快的生成器表达式来替换大型列表。
- en: We’ll look at the core features of functional programming from a Python point
    of view. Our objective is to borrow good ideas from functional programming languages
    and use those ideas to create expressive and succinct applications in Python.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从 Python 视角来探讨函数式编程的核心特性。我们的目标是借鉴函数式编程语言中的好思想，并使用这些思想在 Python 中创建表达性和简洁的应用程序。
- en: Who this book is for
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: This book is for more experienced programmers who want to create succinct, expressive
    Python programs by borrowing techniques and design patterns from functional programming
    languages. Some algorithms can be expressed elegantly in a functional style; we
    can—and should—adapt this to make Python programs more readable and maintainable.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向那些希望通过从函数式编程语言中借用技术和设计模式来创建简洁、表达性强的 Python 程序的更有经验的程序员。某些算法可以用函数式风格优雅地表达；我们可以——并且应该——将这些思想应用到使
    Python 程序更易于阅读和维护。
- en: 'This is not intended as a tutorial on Python. This book assumes some familiarity
    with the language and the standard library. For a foundational introduction to
    Python, consider Learn Python Programming, Third Edition: [https://www.packtpub.com/product/learn-python-programming-third-edition/9781801815093](https://www.packtpub.com/product/learn-python-programming-third-edition/9781801815093).'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书并不是作为 Python 教程编写的。本书假设读者对语言和标准库有一定的了解。对于 Python 的基础介绍，可以考虑学习《Python 编程学习指南》第三版：[https://www.packtpub.com/product/learn-python-programming-third-edition/9781801815093](https://www.packtpub.com/product/learn-python-programming-third-edition/9781801815093)。
- en: While we cover the foundations of functional programming, this is not a complete
    review of the various kinds of functional programming techniques. Having an exposure
    to functional programming in another language can be helpful.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们涵盖了函数式编程的基础，但这并不是对各种函数式编程技术的全面回顾。在另一种语言中接触过函数式编程可能会有所帮助。
- en: What this book covers
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: 'We can decompose this book into two general kinds of topics:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这本书分解为两大类主题：
- en: Essentials of functional programming in Python. This is the content of Chapters
    1 through 7.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python中函数式编程的精华。这是第1章到第7章的内容。
- en: Library modules to help create functional programs. This is the subject of the
    remaining chapters of the book. Chapter 12 includes both fundamental language
    and library topics.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 帮助创建函数式程序的库模块。这是本书剩余章节的主题。第12章包括基本语言和库主题。
- en: '[Chapter 1](Chapter_01.xhtml#x1-180001), [Understanding Functional Programming](Chapter_01.xhtml#x1-180001),
    introduces some of the techniques that characterize functional programming. We’ll
    identify some of the ways to map those features to Python. We’ll also address
    some ways that the benefits of functional programming accrue when we use these
    design patterns to build Python applications.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](Chapter_01.xhtml#x1-180001)，[理解函数式编程](Chapter_01.xhtml#x1-180001)，介绍了表征函数式编程的一些技术。我们将确定一些将这些特性映射到Python的方法。我们还将讨论使用这些设计模式构建Python应用程序时，函数式编程的好处是如何积累的。'
- en: '[Chapter 2](Chapter_02.xhtml#x1-340002), [Introducing Essential Functional
    Concepts](Chapter_02.xhtml#x1-340002), delves into central features of the functional
    programming paradigm. We’ll look at each in some detail to see how they’re implemented
    in Python. We’ll also point out some features of functional languages that don’t
    apply well to Python. In particular, many functional languages have complex type-matching
    rules required to support compiling and optimizing.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](Chapter_02.xhtml#x1-340002)，[介绍核心函数式编程概念](Chapter_02.xhtml#x1-340002)，深入探讨了函数式编程范式的核心特性。我们将逐一详细探讨它们在Python中的实现方式。我们还将指出一些不适用于Python的函数式语言特性。特别是，许多函数式语言都有复杂的类型匹配规则，这些规则是支持编译和优化的必要条件。'
- en: '[Chapter 3](Chapter_03.xhtml#x1-510003), [Functions, Iterators, and Generators](Chapter_03.xhtml#x1-510003),
    will show how to leverage immutable Python objects, and how generator expressions
    adapt functional programming concepts to the Python language. We’ll look at some
    of the built-in Python collections and how we can leverage them without departing
    too far from functional programming concepts.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](Chapter_03.xhtml#x1-510003)，[函数、迭代器和生成器](Chapter_03.xhtml#x1-510003)，将展示如何利用不可变Python对象，以及如何将生成器表达式适应Python语言中的函数式编程概念。我们将探讨一些内置的Python集合，以及我们如何在不偏离函数式编程概念太远的情况下利用它们。'
- en: '[Chapter 4](Chapter_04.xhtml#x1-740004), [Working with Collections](Chapter_04.xhtml#x1-740004),
    shows how you can use a number of built-in Python functions to operate on collections
    of data. This chapter will focus on a number of relatively simple functions, such
    as `any()` and `all()`, which reduce a collection of values to a single result.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](Chapter_04.xhtml#x1-740004)，[使用集合](Chapter_04.xhtml#x1-740004)，展示了如何使用多个内置Python函数来操作数据集合。本章将重点介绍一些相对简单的函数，如`any()`和`all()`，这些函数可以将值集合缩减为单个结果。'
- en: '[Chapter 5](Chapter_05.xhtml#x1-1000005), [Higher-Order Functions](Chapter_05.xhtml#x1-1000005),
    examines the commonly used higher-order functions such as `map()` and `filter()`.
    It also shows a number of other higher-order functions as well as how we can create
    our own functions that work with functions or return functions.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](Chapter_05.xhtml#x1-1000005)，[高阶函数](Chapter_05.xhtml#x1-1000005)，探讨了常用的诸如`map()`和`filter()`等高阶函数。它还展示了一些其他的高阶函数，以及我们如何创建与函数一起工作或返回函数的自定义函数。'
- en: '[Chapter 6](Chapter_06.xhtml#x1-1260006), [Recursions and Reductions](Chapter_06.xhtml#x1-1260006),
    teaches how to design an algorithm using recursion and then optimize it into a
    high-performance `for` statement. We’ll also look at some other reductions that
    are widely used, including `collections.Counter()`.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](Chapter_06.xhtml#x1-1260006)，[递归和归约](Chapter_06.xhtml#x1-1260006)，教授如何设计使用递归的算法，并将其优化为高性能的`for`语句。我们还将探讨一些其他广泛使用的归约方法，包括`collections.Counter()`。'
- en: '[Chapter 7](Chapter_07.xhtml#x1-1530007), [Complex Stateless Objects](Chapter_07.xhtml#x1-1530007),
    showcases a number of ways that we can use immutable tuples, `typing.NamedTuple`,
    and the frozen `@dataclass` instead of stateful objects. We’ll also look at the
    `pyrsistent` module as a way to create immutable objects. Immutable objects have
    a simpler interface than stateful objects: we never have to worry about abusing
    an attribute and setting an object into some inconsistent or invalid state.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](Chapter_07.xhtml#x1-1530007), [复杂无状态对象](Chapter_07.xhtml#x1-1530007),
    展示了我们可以使用不可变元组、`typing.NamedTuple` 和冻结的 `@dataclass` 来替代有状态对象的一些方法。我们还将探讨 `pyrsistent`
    模块作为创建不可变对象的一种方式。不可变对象比有状态对象具有更简单的接口：我们永远不必担心滥用属性并将对象设置到某种不一致或无效的状态。'
- en: '[Chapter 8](Chapter_08.xhtml#x1-1700008), [The Itertools Module](Chapter_08.xhtml#x1-1700008),
    examines a number of functions in the `itertools` standard library module. This
    collection of functions simplifies writing programs that deal with collections
    or generator functions.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](Chapter_08.xhtml#x1-1700008), [迭代工具模块](Chapter_08.xhtml#x1-1700008)，检查了
    `itertools` 标准库模块中的多个函数。这个函数集合简化了处理集合或生成器函数的程序编写。'
- en: '[Chapter 9](Chapter_09.xhtml#x1-1990009), [Itertools for Combinatorics – Permutations
    and Combinations](Chapter_09.xhtml#x1-1990009), covers the combinatoric functions
    in the `itertools` module. These functions are more specialized than those in
    the previous chapter. This chapter includes some examples that illustrate ill-considered
    use of these functions and the consequences of combinatoric explosion.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](Chapter_09.xhtml#x1-1990009), [组合学中的迭代工具 – 排列和组合](Chapter_09.xhtml#x1-1990009),
    讲述了 `itertools` 模块中的组合学函数。这些函数比上一章中的函数更专业。本章包括一些示例，说明了这些函数使用不当以及组合爆炸的后果。'
- en: '[Chapter 10](Chapter_10.xhtml#x1-21700010), [The Functools Module](Chapter_10.xhtml#x1-21700010),
    focuses on how to use some of the functions in the `functools` module for functional
    programming. A few functions in this module are more appropriate for building
    decorators, and they are left for [Chapter 12](Chapter_12.xhtml#x1-25000012),
    [Decorator Design Techniques](Chapter_12.xhtml#x1-25000012).'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](Chapter_10.xhtml#x1-21700010), [Functools 模块](Chapter_10.xhtml#x1-21700010)，专注于如何使用
    `functools` 模块中的某些函数进行函数式编程。该模块中的一些函数更适合构建装饰器，它们被留到 [第12章](Chapter_12.xhtml#x1-25000012),
    [装饰器设计技巧](Chapter_12.xhtml#x1-25000012) 中讨论。'
- en: '[Chapter 11](Chapter_11.xhtml#x1-23500011), [The Toolz Package](Chapter_11.xhtml#x1-23500011),
    covers the `toolz` package, a number of closely related modules that help us write
    functional programs in Python. The `toolz` modules parallel the built-in `itertools`
    and `functools` modules, providing alternatives that are often more sophisticated
    and make better use of curried functions.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](Chapter_11.xhtml#x1-23500011), [Toolz 包](Chapter_11.xhtml#x1-23500011)，涵盖了
    `toolz` 包，这是一系列紧密相关的模块，帮助我们用 Python 编写函数式程序。`toolz` 模块与内置的 `itertools` 和 `functools`
    模块并行，提供了一些更复杂且更好地利用柯里化函数的替代方案。'
- en: '[Chapter 12](Chapter_12.xhtml#x1-25000012), [Decorator Design Techniques](Chapter_12.xhtml#x1-25000012),
    covers how we can look at a decorator as a way to build a composite function.
    While there is considerable flexibility here, there are also some conceptual limitations:
    we’ll look at ways that overly complex decorators can become confusing rather
    than helpful.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](Chapter_12.xhtml#x1-25000012), [装饰器设计技巧](Chapter_12.xhtml#x1-25000012)，介绍了我们可以将装饰器视为构建复合函数的一种方式。虽然这里有很大的灵活性，但也存在一些概念上的限制：我们将探讨过于复杂的装饰器可能会变得令人困惑而不是有帮助的方法。'
- en: '[Chapter 13](Chapter_13.xhtml#x1-26600013), [The PyMonad Library](Chapter_13.xhtml#x1-26600013),
    examines some of the features of the PyMonad library. This provides some additional
    functional programming features. It also provides a way to learn more about monads.
    In some functional languages, monads are an important way to force a particular
    order for operations that might get optimized into an undesirable order. Since
    Python already has strict ordering of expressions and statements, the monad feature
    is more instructive than practical.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](Chapter_13.xhtml#x1-26600013), [PyMonad 库](Chapter_13.xhtml#x1-26600013)，探讨了
    PyMonad 库的一些特性。这提供了一些额外的函数式编程特性。它还提供了一种学习更多关于单子的方法。在某些函数式语言中，单子是强制操作以特定顺序执行的重要方式，这些操作可能会被优化成不希望执行的顺序。由于
    Python 已经具有严格的表达式和语句顺序，因此单子特性更具有教育意义而不是实用性。'
- en: '[Chapter 14](Chapter_14.xhtml#x1-28300014), [The Multiprocessing, Threading,
    and Concurrent.Futures Modules](Chapter_14.xhtml#x1-28300014), points out an important
    consequence of good functional design: we can distribute the processing workload.
    Using immutable objects means that we can’t corrupt an object because of poorly
    synchronized write operations.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[第14章](Chapter_14.xhtml#x1-28300014)，[Multiprocessing、Threading和Concurrent.Futures模块](Chapter_14.xhtml#x1-28300014)，指出良好函数式设计的一个重要后果：我们可以分配处理工作负载。使用不可变对象意味着我们不会因为同步写入操作不当而损坏对象。'
- en: '[Chapter 15](Chapter_15.xhtml#x1-31200015), [A Functional Approach to Web Services](Chapter_15.xhtml#x1-31200015),
    shows how we can think of web services as a nested collection of functions that
    transform a request into a reply. We’ll see ways to leverage functional programming
    concepts for building responsive, dynamic web content.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[第15章](Chapter_15.xhtml#x1-31200015)，[面向Web服务的函数式方法](Chapter_15.xhtml#x1-31200015)，展示了我们可以如何将Web服务视为一个嵌套的函数集合，这些函数将请求转换为响应。我们将看到如何利用函数式编程的概念来构建响应式、动态的Web内容。'
- en: 'Chapter 16, A Chi-Squared Case Study, is a bonus, online-only case study applying
    a number of functional programming techniques to a specific exploratory data analysis
    problem. We will apply a χ² statistical test to some complex data to see if the
    results show ordinary variability, or if they are an indication of something that
    requires deeper analysis. You can find the case study here: [https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition/blob/main/Bonus_Content/Chapter_16.pdf](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition/blob/main/Bonus_Content/Chapter_16.pdf).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 第16章，卡方案例研究，是一个额外的、仅在网络上提供的案例研究，它将多种函数式编程技术应用于特定的探索性数据分析问题。我们将对一些复杂数据进行χ²统计测试，以查看结果是否显示普通变异性，或者是否表明需要更深入分析的情况。你可以在这里找到案例研究：[https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition/blob/main/Bonus_Content/Chapter_16.pdf](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition/blob/main/Bonus_Content/Chapter_16.pdf)。
- en: To get the most out of this book
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为了充分利用这本书
- en: This book presumes some familiarity with Python 3 and general concepts of application
    development. We won’t look deeply at subtle or complex features of Python; we’ll
    avoid much consideration of the internals of the language.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本书假设读者对 Python 3 和应用程序开发的一般概念有所了解。我们不会深入研究 Python 的微妙或复杂特性；我们将避免过多地考虑语言的内部结构。
- en: Some of the examples use exploratory data analysis (EDA) as a problem domain
    to show the value of functional programming. Some familiarity with basic probability
    and statistics will help with this. There are only a few examples that move into
    more serious data science.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一些示例使用探索性数据分析（EDA）作为问题领域来展示函数式编程的价值。对基本概率和统计学的了解将有助于理解这一点。只有少数示例涉及到更深入的数据科学。
- en: Python 3.10 is required. The examples have also been tested with Python 3.11,
    and work correctly. For data science purposes, it’s often helpful to start with
    the conda tool to create and manage virtual environments. It’s not required, however,
    and readers should be able to use any available Python.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 需要 Python 3.10。示例也已在 Python 3.11 上进行了测试，并且运行正确。出于数据科学的目的，通常建议从 conda 工具开始创建和管理虚拟环境。然而，这并非必需，读者应该能够使用任何可用的
    Python。
- en: 'Additional packages are generally installed with pip. The command looks like
    this:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 通常使用pip安装额外的包。命令看起来像这样：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Complete the exercises
  id: totrans-37
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 完成练习
- en: 'Each chapter includes a number of exercises that help the reader apply the
    concepts in the chapter to real code. Most of the exercises are based on code
    available from the book’s repository on GitHub: [https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 每章都包含一些练习，帮助读者将章节中的概念应用到实际代码中。大多数练习基于GitHub上本书的存储库中的代码：[https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition)。
- en: In some cases, the reader will notice that the code provided on GitHub includes
    partial solutions to some of the exercises. These serve as hints, allowing the
    reader to explore alternative solutions.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，读者会注意到GitHub上提供的代码包含一些练习的部分解决方案。这些作为提示，允许读者探索替代解决方案。
- en: In many cases, exercises will need unit test cases to confirm they actually
    solve the problem. These are often identical to the unit test cases already provided
    in the GitHub repository. The reader should replace the book’s example function
    name with their own solution to confirm that it works.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，练习需要单元测试用例来确认它们确实解决了问题。这些通常与GitHub存储库中已提供的单元测试用例相同。读者应将书籍的示例函数名替换为自己的解决方案，以确认其工作正常。
- en: In some cases, the exercises suggest writing a response document to compare
    and contrast multiple solutions. It helps to find a mentor or expert who can help
    the reader by reviewing these small documents for clarity and completeness. A
    good comparison between design approaches will include performance measurements
    using the `timeit` module to show the performance advantages of one design over
    another.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，练习建议编写一个响应文档来比较和对比多个解决方案。找到一位导师或专家，通过审查这些小文档的清晰度和完整性来帮助读者。一个好的设计方法比较将包括使用`timeit`模块进行性能测量，以展示一个设计相对于另一个设计的性能优势。
- en: Download the example code files
  id: totrans-42
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: The code bundle for the book is hosted on GitHub at [https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 书籍的代码包托管在GitHub上，网址为[https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition](https://github.com/PacktPublishing/Functional-Python-Programming-3rd-Edition)。我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-44
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://packt.link/OV1CB](https://packt.link/OV1CB).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表的彩色图像的PDF文件。您可以从这里下载：[https://packt.link/OV1CB](https://packt.link/OV1CB)。
- en: Conventions used
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in the text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. For example: ”Python has other statements, such as `global` or `nonlocal`,
    which modify the rules for variables in a particular namespace.”'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。例如：“Python有其他语句，如`global`或`nonlocal`，它们会修改特定命名空间中变量的规则。”'
- en: 'Bold: Indicates a new term, an important word, or words you see on the screen,
    such as in menus or dialog boxes. For example: ”The base case states that the
    sum of a zero-length sequence is 0\. The recursive case states that the sum of
    a sequence is the first value plus the sum of the rest of the sequence.”'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 粗体：表示新术语、重要单词或您在屏幕上看到的单词，例如在菜单或对话框中。例如：“基本案例说明零长度序列的和是0。递归案例说明序列的和是第一个值加上序列其余部分的和。”
- en: 'A block of code is set as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE1]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都写作如下：
- en: '[PRE2]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Warnings or important notes appear like this.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示看起来像这样。
- en: Tips and tricks appear like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和技巧看起来像这样。
- en: Get in touch
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: 'General feedback: Email [feedback@packtpub.com](mailto:feedback@packtpub.com),
    and mention the book’s title in the subject of your message. If you have questions
    about any aspect of this book, please email us at [questions@packtpub.com](mailto:questions@packtpub.com).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 一般反馈：请通过电子邮件[feedback@packtpub.com](mailto:feedback@packtpub.com)发送反馈，并在邮件主题中提及书籍标题。如果您对本书的任何方面有疑问，请通过电子邮件[questions@packtpub.com](mailto:questions@packtpub.com)联系我们。
- en: 'Errata: Although we have taken every care to ensure the accuracy of our content,
    mistakes do happen. If you have found a mistake in this book we would be grateful
    if you would report this to us. Please visit [https://subscription.packtpub.com/help](https://subscription.packtpub.com/help),
    click on the Submit Errata button, search for your book, and enter the details.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 错误更正：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们非常感谢您能向我们报告。请访问[https://subscription.packtpub.com/help](https://subscription.packtpub.com/help)，点击提交错误按钮，搜索您的书籍，并输入详细信息。
- en: 'Piracy: If you come across any illegal copies of our works in any form on the
    Internet, we would be grateful if you would provide us with the location address
    or website name. Please contact us at [copyright@packtpub.com](mailto:copyright@packtpub.com)
    with a link to the material.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 侵权：如果您在互联网上以任何形式发现我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过[版权@packtpub.com](mailto:copyright@packtpub.com)与我们联系，并提供材料的链接。
- en: 'If you are interested in becoming an author: If there is a topic that you have
    expertise in and you are interested in either writing or contributing to a book,
    please visit [http://authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣成为作者：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[http://authors.packtpub.com](http://authors.packtpub.com)。
- en: Share your thoughts
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read Functional Python Programming, Third Edition, we’d love to
    hear your thoughts! Scan the QR code below to go straight to the Amazon review
    page for this book and share your feedback.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《Python函数式编程》第三版，我们非常乐意听到您的想法！扫描下面的二维码直接进入此书的亚马逊评论页面并分享您的反馈。
- en: '![PIC](img/file2.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![PIC](img/file2.png)'
- en: '[https://packt.link/r/1803232579](https://packt.link/r/1803232579)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/r/1803232579](https://packt.link/r/1803232579)'
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载本书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
    Is your eBook purchase not compatible with the device of your choice?
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但无法随身携带您的印刷书籍吗？您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不用担心，现在每购买一本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠不会就此停止，您还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问下面的链接
- en: '![PIC](img/file3.png)'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![PIC](img/file3.png)'
- en: '[https://packt.link/free-ebook/9781803232577](https://packt.link/free-ebook/9781803232577)'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781803232577](https://packt.link/free-ebook/9781803232577)'
- en: Submit your proof of purchase
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样！我们将直接将您的免费PDF和其他优惠发送到您的电子邮件。
