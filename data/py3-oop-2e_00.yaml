- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: This book introduces the terminology of the object-oriented paradigm. It focuses
    on object-oriented design with step-by-step examples. It guides us from simple
    inheritance, one of the most useful tools in the object-oriented programmer's
    toolbox through exception handling to design patterns, an object-oriented way
    of looking at object-oriented concepts.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书介绍了面向对象范式的术语。它专注于逐步示例的面向对象设计。它将引导我们从简单的继承，作为面向对象程序员工具箱中最有用的工具之一，通过异常处理到设计模式，这是一种以面向对象方式看待面向对象概念的方法。
- en: Along the way, we'll learn to integrate the object-oriented and not-so-object-oriented
    aspects of the Python programming language. We will learn the complexities of
    string and file manipulation, emphasizing (as Python 3 does) the difference between
    binary and textual data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在学习的过程中，我们将学会整合Python编程语言中面向对象和非面向对象的方面。我们将学习字符串和文件操作的复杂性，强调（正如Python 3所做的那样）二进制和文本数据之间的区别。
- en: We'll then cover the joys of unit testing, using not one, but two unit testing
    frameworks. Finally, we'll explore, through Python's various concurrency paradigms,
    how to make objects work well together at the same time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将涵盖单元测试的乐趣，使用不止一个，而是两个单元测试框架。最后，我们将通过Python的各种并发范例，探讨如何使对象在同一时间内良好地协同工作。
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: This book is loosely divided into four major parts. In the first four chapters,
    we will dive into the formal principles of object-oriented programming and how
    Python leverages them. In chapters 5 through 8, we will cover some of Python's
    idiosyncratic applications of these principles by learning how they are applied
    to a variety of Python's built-in functions. Chapters 9 through 11 cover design
    patterns, and the final two chapters discuss two bonus topics related to Python
    programming that may be of interest.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书大致分为四个主要部分。在前四章中，我们将深入了解面向对象编程的正式原则以及Python如何利用它们。在第5章到第8章，我们将覆盖Python对这些原则的一些特殊应用，学习它们如何应用于各种Python内置函数。第9章到第11章涵盖了设计模式，最后两章讨论了与Python编程相关的两个额外主题，可能会引起兴趣。
- en: '[Chapter 1](ch01.html "Chapter 1. Object-oriented Design"), *Object-oriented
    Design*, covers important object-oriented concepts. It deals mainly with terminology
    such as abstraction, classes, encapsulation, and inheritance. We also briefly
    look at UML to model our classes and objects.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，“面向对象设计”，涵盖了重要的面向对象概念。它主要涉及术语，如抽象、类、封装和继承。我们还简要地看一下UML来模拟我们的类和对象。
- en: '[Chapter 2](ch02.html "Chapter 2. Objects in Python"), *Objects in Python*,
    discusses classes and objects and how they are used in Python. We will learn about
    attributes and behaviors on Python objects, and also the organization of classes
    into packages and modules. Lastly, we will see how to protect our data.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“Python中的对象”，讨论了类和对象以及它们在Python中的使用。我们将了解Python对象的属性和行为，以及类如何组织成包和模块。最后，我们将看到如何保护我们的数据。
- en: '[Chapter 3](ch03.html "Chapter 3. When Objects Are Alike"), *When Objects Are
    Alike*, gives us a more in-depth look into inheritance. It covers multiple inheritance
    and shows us how to extend built-ins. This chapter also covers how polymorphism
    and duck typing work in Python.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“当对象相似时”，让我们更深入地了解继承。它涵盖了多重继承，并向我们展示如何扩展内置功能。本章还涵盖了多态性和鸭子类型在Python中的工作原理。
- en: '[Chapter 4](ch04.html "Chapter 4. Expecting the Unexpected"), *Expecting the
    Unexpected*, looks into exceptions and exception handling. We will learn how to
    create our own exceptions and how to use exceptions for program flow control.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“预料之外”，探讨了异常和异常处理。我们将学习如何创建自己的异常以及如何使用异常来控制程序流程。
- en: '[Chapter 5](ch05.html "Chapter 5. When to Use Object-oriented Programming"),
    *When to Use Object-oriented Programming*, deals with creating and using objects.
    We will see how to wrap data using properties and restrict data access. This chapter
    also discusses the DRY principle and how not to repeat code.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“何时使用面向对象编程”，涉及创建和使用对象。我们将看到如何使用属性包装数据并限制数据访问。本章还讨论了DRY原则以及如何避免重复代码。
- en: '[Chapter 6](ch06.html "Chapter 6. Python Data Structures"), *Python Data Structures*,
    covers the object-oriented features of Python''s built-in classes. We''ll cover
    tuples, dictionaries, lists, and sets, as well as a few more advanced collections.
    We''ll also see how to extend these standard objects.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“Python数据结构”，涵盖了Python内置类的面向对象特性。我们将涵盖元组、字典、列表和集合，以及一些更高级的集合。我们还将看到如何扩展这些标准对象。
- en: '[Chapter 7](ch07.html "Chapter 7. Python Object-oriented Shortcuts"), *Python
    Object-oriented Shortcuts*, as the name suggests, deals with time-savers in Python.
    We will look at many useful built-in functions such as method overloading using
    default arguments. We''ll also see that functions themselves are objects and how
    this is useful.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“Python面向对象的快捷方式”，顾名思义，涉及Python中的时间节省技巧。我们将看到许多有用的内置函数，如使用默认参数进行方法重载。我们还将看到函数本身也是对象，以及这如何有用。
- en: '[Chapter 8](ch08.html "Chapter 8. Strings and Serialization"), *Strings and
    Serialization*, looks at strings, files, and formatting. We''ll discuss the difference
    between strings, bytes, and bytearrays, as well as various ways to serialize textual,
    object, and binary data to several canonical representations.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章，“字符串和序列化”，讨论了字符串、文件和格式化。我们将讨论字符串、字节和字节数组之间的区别，以及将文本、对象和二进制数据序列化为几种规范表示的各种方法。
- en: '[Chapter 9](ch09.html "Chapter 9. The Iterator Pattern"), *The Iterator Pattern*,
    introduces us to the concept of design patterns and covers Python''s iconic implementation
    of the iterator pattern. We''ll learn about list, set, and dictionary comprehensions.
    We''ll also demystify generators and coroutines.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章，*迭代器模式*，向我们介绍了设计模式的概念，并涵盖了Python标志性的迭代器模式实现。我们将学习列表、集合和字典推导式。我们还将揭开生成器和协程的神秘面纱。
- en: '[Chapter 10](ch10.html "Chapter 10. Python Design Patterns I"), *Python Design
    Patterns I*, covers several design patterns, including the decorator, observer,
    strategy, state, singleton, and template patterns. Each pattern is discussed with
    suitable examples and programs implemented in Python.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章，*Python设计模式I*，涵盖了几种设计模式，包括装饰器、观察者、策略、状态、单例和模板模式。每个模式都将通过适当的例子和Python中实现的程序进行讨论。
- en: '[Chapter 11](ch11.html "Chapter 11. Python Design Patterns II"), *Python Design
    Patterns II*, wraps up our discussion of design patterns with coverage of the
    adapter, facade, flyweight, command, abstract, and composite patterns. More examples
    of how idiomatic Python code differs from canonical implementations are provided.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章，*Python设计模式II*，总结了我们对设计模式的讨论，涵盖了适配器、外观、享元、命令、抽象和组合模式。提供了更多关于惯用Python代码与规范实现的例子。
- en: '[Chapter 12](ch12.html "Chapter 12. Testing Object-oriented Programs"), *Testing
    Object-oriented Programs*, opens with why testing is so important in Python applications.
    It emphasizes test-driven development and introduces two different testing suites:
    unittest and py.test. Finally, it discusses mocking test objects and code coverage.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章，*测试面向对象程序*，首先介绍了为什么测试在Python应用程序中如此重要。它强调了测试驱动开发，并介绍了两种不同的测试套件：unittest和py.test。最后，它讨论了模拟测试对象和代码覆盖率。
- en: '[Chapter 13](ch13.html "Chapter 13. Concurrency"), *Concurrency*, is a whirlwind
    tour of Python''s support (and lack thereof) of concurrency patterns. It discusses
    threads, multiprocessing, futures, and the new AsyncIO library.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章，*并发*，是对Python对并发模式的支持（或不支持）的快速概述。它讨论了线程、多进程、futures和新的AsyncIO库。
- en: Each chapter includes relevant examples and a case study that collects the chapter's
    contents into a working (if not complete) program.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都包括相关的例子和一个案例研究，将章节内容整合成一个可运行（尽管不完整）的程序。
- en: What you need for this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书需要什么
- en: All the examples in this book rely on the Python 3 interpreter. Make sure you
    are not using Python 2.7 or earlier. At the time of writing, Python 3.4 was the
    latest release of Python. Most examples will work on earlier revisions of Python
    3, but you are encouraged to use the latest version to minimize frustration.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有例子都依赖于Python 3解释器。请确保您没有使用Python 2.7或更早的版本。在撰写本文时，Python 3.4是最新版本。大多数例子将在较早版本的Python
    3上运行，但建议您使用最新版本以减少挫折感。
- en: All of the examples should run on any operating system supported by Python.
    If this is not the case, please report it as a bug.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有例子都应该在Python支持的任何操作系统上运行。如果不是这种情况，请将其报告为错误。
- en: Some of the examples need a working Internet connection. You'll probably want
    to have one of these for extracurricular research and debugging anyway!
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 一些例子需要一个可用的互联网连接。您可能会希望进行课外研究和调试！
- en: 'In addition, some of the examples in this book rely on third-party libraries
    that do not ship with Python. These are introduced within the book at the time
    they are used, so you do not need to install them in advance. However, for completeness,
    here is a list:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本书中的一些例子依赖于不随Python一起提供的第三方库。它们在使用时会在书中介绍，因此您无需提前安装它们。但是，为了完整起见，这里是一个列表：
- en: pip
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pip
- en: requests
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: requests
- en: pillow
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pillow
- en: bitarray
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: bitarray
- en: Who this book is for
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合人群
- en: This book specifically targets people who are new to object-oriented programming.
    It assumes you have basic Python skills. You'll learn object-oriented principles
    in depth. It is particularly useful for system administrator types who have used
    Python as a "glue" language and would like to improve their programming skills.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 本书专门针对新手面向对象编程的人群。它假设您具有基本的Python技能。您将深入学习面向对象的原则。对于将Python用作“粘合”语言并希望提高编程技能的系统管理员类型来说，这是特别有用的。
- en: If you are familiar with object-oriented programming in other languages, then
    this book will help you understand the idiomatic ways to apply your knowledge
    in the Python ecosystem.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您熟悉其他语言中的面向对象编程，那么本书将帮助您了解在Python生态系统中应用您的知识的惯用方式。
- en: Conventions
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: This book uses a variety of text styles to distinguish between different kinds
    of information. Here are some examples of these styles, and an explanation of
    their meaning.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用各种文本样式来区分不同类型的信息。以下是一些这些样式的示例，以及它们的含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    look up the class in the dictionary and store it in a variable named `PropertyClass`."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“我们在字典中查找类并将其存储在名为`PropertyClass`的变量中。”
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 一段代码设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都写成如下形式：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "It will fail with a **not enough arguments** error similar to the one we received
    earlier when we forgot the `self` argument."'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，比如菜单或对话框中的单词，会以这样的方式出现在文本中：“它将失败，并显示一个**参数不足**的错误，类似于我们之前忘记了`self`参数时收到的错误。”'
- en: Note
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注
- en: Warnings or important notes appear in a box like this.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会显示在这样的框中。
- en: Tip
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会显示在这样的格式中。
