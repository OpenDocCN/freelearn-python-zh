- en: Appendix C. Generic View Reference
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录C. 通用视图参考
- en: '[Chapter 10](ch10.xhtml "Chapter 10. Generic Views"), *Generic Views*, introduced
    generic views but left out some of the gory details. This appendix describes each
    generic view along with a summary of options each view can take. Be sure to read
    [Chapter 10](ch10.xhtml "Chapter 10. Generic Views"), *Generic Views*, before
    trying to understand the reference material that follows. You might want to refer
    back to the `Book`, `Publisher`, and `Author` objects defined in that chapter;
    the examples that follow use these models. If you want to dig deeper into more
    advanced generic view topics (like using mixins with the class-based views), see
    the Django Project website at [https://docs.djangoproject.com/en/1.8/topics/class-based-views/](https://docs.djangoproject.com/en/1.8/topics/class-based-views/).'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.xhtml "第10章. 通用视图") *通用视图*介绍了通用视图，但略去了一些细节。本附录描述了每个通用视图以及每个视图可以采用的选项摘要。在尝试理解接下来的参考资料之前，请务必阅读[第10章](ch10.xhtml
    "第10章. 通用视图") *通用视图*。您可能希望参考该章中定义的`Book`、`Publisher`和`Author`对象；后面的示例使用这些模型。如果您想深入了解更高级的通用视图主题（例如在基于类的视图中使用混合），请参阅Django项目网站[https://docs.djangoproject.com/en/1.8/topics/class-based-views/](https://docs.djangoproject.com/en/1.8/topics/class-based-views/)。'
- en: Common arguments to generic views
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通用视图的常见参数
- en: Most of these views take a large number of arguments that can change the generic
    view's behavior. Many of these arguments work the same across multiple views.
    *Table C.1* describes each of these common arguments; anytime you see one of these
    arguments in a generic view's argument list, it will work as described in the
    table.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '这些视图大多需要大量的参数，可以改变通用视图的行为。这些参数中的许多在多个视图中起着相同的作用。*表C.1*描述了每个这些常见参数；每当您在通用视图的参数列表中看到这些参数时，它将按照表中描述的方式工作。 '
- en: '| **Argument** | **Description** |'
  id: totrans-4
  prefs: []
  type: TYPE_TB
  zh: '| **参数** | **描述** |'
- en: '| --- | --- |'
  id: totrans-5
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `allow_empty` | A Boolean specifying whether to display the page if no objects
    are available. If this is `False` and no objects are available, the view will
    raise a 404 error instead of displaying an empty page. By default, this is `True`.
    |'
  id: totrans-6
  prefs: []
  type: TYPE_TB
  zh: '| `allow_empty` | 一个布尔值，指定是否在没有可用对象时显示页面。如果这是`False`并且没有可用对象，则视图将引发404错误，而不是显示空页面。默认情况下，这是`True`。
    |'
- en: '| `context_processors` | A list of additional template-context processors (besides
    the defaults) to apply to the view''s template. See [Chapter 9](ch09.xhtml "Chapter 9. Advanced
    Models"), *Advanced Models*, for information on template context processors. |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| `context_processors` | 要应用于视图模板的附加模板上下文处理器（除了默认值）的列表。有关模板上下文处理器的信息，请参见[第9章](ch09.xhtml
    "第9章. 高级模型") *高级模型*。 |'
- en: '| `extra_context` | A dictionary of values to add to the template context.
    By default, this is an empty dictionary. If a value in the dictionary is callable,
    the generic view will call it just before rendering the template. |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| `extra_context` | 要添加到模板上下文中的值的字典。默认情况下，这是一个空字典。如果字典中的值是可调用的，则通用视图将在呈现模板之前调用它。
    |'
- en: '| `mimetype` | The MIME type to use for the resulting document. It defaults
    to the value of the `DEFAULT_MIME_TYPE` setting, which is `text/html` if you haven''t
    changed it. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| `mimetype` | 用于生成文档的MIME类型。如果您没有更改它，默认为`DEFAULT_MIME_TYPE`设置的值，即`text/html`。
    |'
- en: '| `queryset` | A `QuerySet` (that is, something like `Author.objects.all()`)
    to read objects from. See Appendix B for more information about `QuerySet` objects.
    Most generic views require this argument. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| `queryset` | 从中读取对象的`QuerySet`（例如`Author.objects.all()`）。有关`QuerySet`对象的更多信息，请参见附录B。大多数通用视图都需要此参数。
    |'
- en: '| `template_loader` | The template loader to use when loading the template.
    By default, it''s `django.template.loader`. See [Chapter 9](ch09.xhtml "Chapter 9. Advanced
    Models"), *Advanced Models*, for information on template loaders. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| `template_loader` | 加载模板时要使用的模板加载程序。默认情况下是`django.template.loader`。有关模板加载程序的信息，请参见[第9章](ch09.xhtml
    "第9章. 高级模型") *高级模型*。 |'
- en: '| `template_name` | The full name of a template to use in rendering the page.
    This lets you override the default template name derived from the `QuerySet`.
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| `template_name` | 用于呈现页面的模板的完整名称。这使您可以覆盖从`QuerySet`派生的默认模板名称。 |'
- en: '| `template_object_name` | The name of the template variable to use in the
    template context. By default, this is `''object''`. Views that list more than
    one object (that is, `object_list` views and various objects-for-date views) will
    append `''_list''` to the value of this parameter. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| `template_object_name` | 模板上下文中要使用的模板变量的名称。默认情况下，这是`''object''`。列出多个对象的视图（即`object_list`视图和各种日期对象视图）将在此参数的值后附加`''_list''`。
    |'
- en: 'Table C.1: Common Generic View Arguments'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 表C.1：常见的通用视图参数
- en: Simple generic views
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单的通用视图
- en: 'The module `django.views.generic.base` contains simple views that handle a
    couple of common cases: rendering a template when no view logic is needed and
    issuing a redirect.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 模块`django.views.generic.base`包含处理一些常见情况的简单视图：在不需要视图逻辑时呈现模板和发出重定向。
- en: Rendering a template-TemplateView
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 呈现模板-TemplateView
- en: This view renders a given template, passing it a context with keyword arguments
    captured in the URL.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图呈现给定模板，传递一个包含在URL中捕获的关键字参数的上下文。
- en: '**Example:**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例：**'
- en: 'Given the following URLconf:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 给定以下URLconf：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And a sample `views.py`:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 和一个示例`views.py`：
- en: '[PRE1]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: a request to `/` would render the template `home.html`, returning a context
    containing a list of the top 5 articles.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对`/`的请求将呈现模板`home.html`，返回一个包含前5篇文章列表的上下文。
- en: Redirecting to another URL
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 重定向到另一个URL
- en: '`django.views.generic.base.RedirectView()` redirects to a given URL.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`django.views.generic.base.RedirectView()`将重定向到给定的URL。'
- en: The given URL may contain dictionary-style string formatting, which will be
    interpolated against the parameters captured in the URL. Because keyword interpolation
    is *always* done (even if no arguments are passed in), any "`%`" characters in
    the URL must be written as "`%%`" so that Python will convert them to a single
    percent sign on output.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 给定的URL可能包含类似字典的字符串格式，它将根据在URL中捕获的参数进行插值。因为关键字插值*总是*会执行（即使没有传入参数），所以URL中的任何"`%`"字符必须写为"`%%`"，以便Python将它们转换为输出的单个百分号。
- en: If the given URL is `None`, Django will return an `HttpResponseGone` (410).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如果给定的URL为`None`，Django将返回一个`HttpResponseGone`（410）。
- en: '**Example** **views.py**:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例** **views.py**：'
- en: '[PRE2]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Example urls.py**:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 urls.py**：'
- en: '[PRE3]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Attributes
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 属性
- en: url
  id: totrans-34
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: url
- en: The URL to redirect to, as a string. Or `None` to raise a 410 (Gone) HTTP error.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要重定向的URL，作为字符串。或者`None`以引发410（已消失）HTTP错误。
- en: pattern_name
  id: totrans-36
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: pattern_name
- en: The name of the URL pattern to redirect to. Reversing will be done using the
    same `*args` and `**kwargs` as are passed in for this view.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 要重定向到的URL模式的名称。将使用与此视图传递的相同的`*args`和`**kwargs`进行反转。
- en: permanent
  id: totrans-38
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 永久
- en: Whether the redirect should be permanent. The only difference here is the HTTP
    status code returned. If `True`, then the redirect will use status code 301\.
    If `False`, then the redirect will use status code 302\. By default, `permanent`
    is `True`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 重定向是否应该是永久的。这里唯一的区别是返回的HTTP状态代码。如果为`True`，则重定向将使用状态码301。如果为`False`，则重定向将使用状态码302。默认情况下，`permanent`为`True`。
- en: query_string
  id: totrans-40
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: query_string
- en: Whether to pass along the GET query string to the new location. If `True`, then
    the query string is appended to the URL. If `False`, then the query string is
    discarded. By default, `query_string` is `False`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 是否将GET查询字符串传递到新位置。如果为`True`，则查询字符串将附加到URL。如果为`False`，则查询字符串将被丢弃。默认情况下，`query_string`为`False`。
- en: Methods
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: '`get_redirect_url(*args, **kwargs)` constructs the target URL for redirection.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_redirect_url(*args, **kwargs)`构造重定向的目标URL。'
- en: The default implementation uses `url` as a starting string and performs expansion
    of `%` named parameters in that string using the named groups captured in the
    URL.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 默认实现使用`url`作为起始字符串，并使用在URL中捕获的命名组执行`%`命名参数的扩展。
- en: If `url` is not set, `get_redirect_url()` tries to reverse the `pattern_name`
    using what was captured in the URL (both named and unnamed groups are used).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未设置`url`，`get_redirect_url()`将尝试使用在URL中捕获的内容（命名和未命名组都将被使用）来反转`pattern_name`。
- en: If requested by `query_string`, it will also append the query string to the
    generated URL. Subclasses may implement any behavior they wish, as long as the
    method returns a redirect-ready URL string.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果由`query_string`请求，则还将查询字符串附加到生成的URL。子类可以实现任何他们希望的行为，只要该方法返回一个准备好的重定向URL字符串。
- en: List/detail generic views
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 列表/详细通用视图
- en: The list/detail generic views handle the common case of displaying a list of
    items at one view and individual detail views of those items at another.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 列表/详细通用视图处理在一个视图中显示项目列表的常见情况，并在另一个视图中显示这些项目的单独详细视图。
- en: Lists of objects
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 对象列表
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Use this view to display a page representing a list of objects.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此视图显示代表对象列表的页面。
- en: '**Example views.py**:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 views.py**：'
- en: '[PRE5]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Example myapp/urls.py**:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/urls.py**：'
- en: '[PRE6]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Example myapp/article_list.html**:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/article_list.html**：'
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Detail views
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 详细视图
- en: django.views.generic.detail.DetailView
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: django.views.generic.detail.DetailView
- en: This view provides a detail view of a single object.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图提供单个对象的详细视图。
- en: '**Example myapp/views.py**:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/views.py**：'
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Example myapp/urls.py**:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/urls.py**：'
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Example myapp/article_detail.html**:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/article_detail.html**：'
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Date-Based Generic Views
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于日期的通用视图
- en: Date-based generic views, provided in `django.views.generic.dates`, are views
    for displaying drilldown pages for date-based data.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 提供在`django.views.generic.dates`中的基于日期的通用视图，用于显示基于日期的数据的钻取页面。
- en: ArchiveIndexView
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存档索引视图
- en: A top-level index page showing the latest objects, by date. Objects with a date
    in the *future* are not included unless you set `allow_future` to `True`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 顶级索引页面显示最新的对象，按日期。除非将`allow_future`设置为`True`，否则不包括*未来*日期的对象。
- en: '**Context**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: 'In addition to the context provided by `django.views.generic.list.MultipleObjectMixin`
    (via `django.views.generic.dates.BaseDateListView`), the template''s context will
    be:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`django.views.generic.list.MultipleObjectMixin`提供的上下文（通过`django.views.generic.dates.BaseDateListView`），模板的上下文将是：
- en: '`date_list`: A `DateQuerySet` object containing all years that have objects
    available according to `queryset`, represented as `datetime.datetime` objects,
    in descending order'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_list`：包含根据`queryset`可用的所有年份的`DateQuerySet`对象，以降序表示为`datetime.datetime`对象'
- en: '**Notes**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**'
- en: Uses a default `context_object_name` of `latest`.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`context_object_name`为`latest`。
- en: Uses a default `template_name_suffix` of `_archive`.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive`。
- en: 'Defaults to providing `date_list` by year, but this can be altered to month
    or day using the attribute `date_list_period`. This also applies to all subclass
    views:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认提供`date_list`按年份，但可以使用属性`date_list_period`更改为按月或日。这也适用于所有子类视图：
- en: '[PRE11]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '**Example myapp/article_archive.html**:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例 myapp/article_archive.html**：'
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This will output all articles.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这将输出所有文章。
- en: YearArchiveView
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: YearArchiveView
- en: A yearly archive page showing all available months in a given year. Objects
    with a date in the *future* are not displayed unless you set `allow_future` to
    `True`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 年度存档页面显示给定年份中所有可用月份。除非将`allow_future`设置为`True`，否则不显示*未来*日期的对象。
- en: '**Context**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: 'In addition to the context provided by `django.views.generic.list.MultipleObjectMixin`
    (via `django.views.generic.dates.BaseDateListView`), the template''s context will
    be:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`django.views.generic.list.MultipleObjectMixin`提供的上下文（通过`django.views.generic.dates.BaseDateListView`），模板的上下文将是：
- en: '`date_list`: A `DateQuerySet` object containing all months that have objects
    available according to `queryset`, represented as `datetime.datetime` objects,
    in ascending order'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_list`：包含根据`queryset`可用的所有月份的`DateQuerySet`对象，以升序表示为`datetime.datetime`对象'
- en: '`year`: A `date` object representing the given year'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`year`：表示给定年份的`date`对象'
- en: '`next_year`: A `date` object representing the first day of the next year, according
    to `allow_empty` and `allow_future`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next_year`：表示下一年第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`previous_year`: A `date` object representing the first day of the previous
    year, according to `allow_empty` and `allow_future`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`previous_year`：表示上一年第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '**Notes**'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: Uses a default `template_name_suffix` of `_archive_year`
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive_year`
- en: '**Example myapp/views.py**:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/views.py**：'
- en: '[PRE13]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**Example myapp/urls.py**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/urls.py**：'
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Example myapp/article_archive_year.html**:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/article_archive_year.html**：'
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: MonthArchiveView
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 月存档视图
- en: A monthly archive page showing all objects in a given month. Objects with a
    date in the *future* are not displayed unless you set `allow_future` to `True`.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 显示给定月份内所有对象的月度存档页面。具有*未来*日期的对象不会显示，除非您将`allow_future`设置为`True`。
- en: '**Context**'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: 'In addition to the context provided by `MultipleObjectMixin` (via `BaseDateListView`),
    the template''s context will be:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`MultipleObjectMixin`（通过`BaseDateListView`）提供的上下文之外，模板的上下文将是：
- en: '`date_list`: A `DateQuerySet` object containing all days that have objects
    available in the given month, according to `queryset`, represented as `datetime.datetime`
    objects, in ascending order'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_list`：包含给定月份中具有可用对象的所有日期的`DateQuerySet`对象，根据`queryset`表示为`datetime.datetime`对象，按升序排列'
- en: '`month`: A `date` object representing the given month'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`month`：表示给定月份的`date`对象'
- en: '`next_month`: A `date` object representing the first day of the next month,
    according to `allow_empty` and `allow_future`'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next_month`：表示下个月第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`previous_month`: A `date` object representing the first day of the previous
    month, according to `allow_empty` and `allow_future`'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`previous_month`：表示上个月第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '**Notes**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: Uses a default `template_name_suffix` of `_archive_month`
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive_month`
- en: '**Example myapp/views.py**:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/views.py**：'
- en: '[PRE16]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '**Example myapp/urls.py**:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/urls.py**：'
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '**Example myapp/article_archive_month.html**:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/article_archive_month.html**：'
- en: '[PRE18]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: WeekArchiveView
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 周存档视图
- en: A weekly archive page showing all objects in a given week. Objects with a date
    in the *future* are not displayed unless you set `allow_future` to `True`.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 显示给定周内所有对象的周存档页面。具有*未来*日期的对象不会显示，除非您将`allow_future`设置为`True`。
- en: '**Context**'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: 'In addition to the context provided by `MultipleObjectMixin` (via `BaseDateListView`),
    the template''s context will be:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`MultipleObjectMixin`（通过`BaseDateListView`）提供的上下文之外，模板的上下文将是：
- en: '`week`: A `date` object representing the first day of the given week'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`week`：表示给定周的第一天的`date`对象'
- en: '`next_week`: A `date` object representing the first day of the next week, according
    to `allow_empty` and `allow_future`'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next_week`：表示下周第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`previous_week`: A `date` object representing the first day of the previous
    week, according to `allow_empty` and `allow_future`'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`previous_week`：表示上周第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '**Notes**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: Uses a default `template_name_suffix` of `_archive_week`
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive_week`
- en: '**Example myapp/views.py**:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/views.py**：'
- en: '[PRE19]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '**Example myapp/urls.py**:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/urls.py**：'
- en: '[PRE20]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '**Example myapp/article_archive_week.html**:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/article_archive_week.html**：'
- en: '[PRE21]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: In this example, you are outputting the week number. The default `week_format`
    in the `WeekArchiveView` uses week format "`%U`" which is based on the United
    States week system where the week begins on a Sunday. The "`%W`" format uses the
    ISO week format and its week begins on a Monday. The "`%W`" format is the same
    in both the `strftime()` and the `date`.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，您正在输出周数。`WeekArchiveView`中的默认`week_format`使用基于美国周系统的周格式"`%U`"，其中周从星期日开始。"`%W`"格式使用ISO周格式，其周从星期一开始。"`%W`"格式在`strftime()`和`date`中是相同的。
- en: However, the `date` template filter does not have an equivalent output format
    that supports the US based week system. The `date` filter "`%U`" outputs the number
    of seconds since the Unix epoch.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，`date`模板过滤器没有支持基于美国周系统的等效输出格式。`date`过滤器"`%U`"输出自Unix纪元以来的秒数。
- en: DayArchiveView
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 日存档视图
- en: A day archive page showing all objects in a given day. Days in the future throw
    a 404 error, regardless of whether any objects exist for future days, unless you
    set `allow_future` to `True`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 显示给定日期内所有对象的日存档页面。未来的日期会抛出404错误，无论未来日期是否存在任何对象，除非您将`allow_future`设置为`True`。
- en: '**Context**'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: 'In addition to the context provided by `MultipleObjectMixin` (via `BaseDateListView`),
    the template''s context will be:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 除了`MultipleObjectMixin`（通过`BaseDateListView`）提供的上下文之外，模板的上下文将是：
- en: '`day`: A `date` object representing the given day'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`day`：表示给定日期的`date`对象'
- en: '`next_day`: A `date` object representing the next day, according to `allow_empty`
    and `allow_future`'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next_day`：表示下一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`previous_day`: A `date` object representing the previous day, according to
    `allow_empty` and `allow_future`'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`previous_day`：表示前一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`next_month`: A `date` object representing the first day of the next month,
    according to `allow_empty` and `allow_future`'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`next_month`：表示下个月第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '`previous_month`: A `date` object representing the first day of the previous
    month, according to `allow_empty` and `allow_future`'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`previous_month`：表示上个月第一天的`date`对象，根据`allow_empty`和`allow_future`'
- en: '**Notes**'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: Uses a default `template_name_suffix` of `_archive_day`
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive_day`
- en: '**Example myapp/views.py**:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/views.py**：'
- en: '[PRE22]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '**Example myapp/urls.py**:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/urls.py**：'
- en: '[PRE23]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '**Example myapp/article_archive_day.html**:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/article_archive_day.html**：'
- en: '[PRE24]'
  id: totrans-147
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: TodayArchiveView
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 今天存档视图
- en: A day archive page showing all objects for *today*. This is exactly the same
    as `django.views.generic.dates.DayArchiveView`, except today's date is used instead
    of the `year`/`month`/`day` arguments.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 显示*今天*的所有对象的日存档页面。这与`django.views.generic.dates.DayArchiveView`完全相同，只是使用今天的日期而不是`year`/`month`/`day`参数。
- en: '**Notes**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释**'
- en: Uses a default `template_name_suffix` of `_archive_today`
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_archive_today`
- en: '**Example myapp/views.py**:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/views.py**：'
- en: '[PRE25]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '**Example myapp/urls.py**:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/urls.py**：'
- en: '[PRE26]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: Where is the example template for `TodayArchiveView`?
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`TodayArchiveView`的示例模板在哪里？'
- en: This view uses by default the same template as the `DayArchiveView`, which is
    in the previous example. If you need a different template, set the `template_name`
    attribute to be the name of the new template.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图默认使用与上一个示例中的`DayArchiveView`相同的模板。如果需要不同的模板，请将`template_name`属性设置为新模板的名称。
- en: DateDetailView
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DateDetailView
- en: A page representing an individual object. If the object has a date value in
    the future, the view will throw a 404 error by default, unless you set `allow_future`
    to `True`.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 表示单个对象的页面。如果对象具有未来的日期值，默认情况下视图将抛出404错误，除非您将`allow_future`设置为`True`。
- en: '**Context**'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**上下文**'
- en: Includes the single object associated with the `model` specified in the `DateDetailView`
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包括与`DateDetailView`中指定的`model`相关联的单个对象
- en: '**Notes**'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**注**'
- en: Uses a default `template_name_suffix` of `_detail`
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用默认的`template_name_suffix`为`_detail`
- en: '[PRE27]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '**Example myapp/article_detail.html**:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**示例myapp/article_detail.html**：'
- en: '[PRE28]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: Form handling with class-based views
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用基于类的视图处理表单
- en: 'Form processing generally has 3 paths:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 表单处理通常有3条路径：
- en: Initial `GET` (blank or prepopulated form)
  id: totrans-169
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 初始`GET`（空白或预填充表单）
- en: '`POST` with invalid data (typically redisplay form with errors)'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`无效数据（通常重新显示带有错误的表单）'
- en: '`POST` with valid data (process the data and typically redirect)'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`POST`有效数据（处理数据并通常重定向）'
- en: Implementing this yourself often results in a lot of repeated boilerplate code
    (see Using a form in a view). To help avoid this, Django provides a collection
    of generic class-based views for form processing.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 自己实现这个通常会导致大量重复的样板代码（请参见在视图中使用表单）。为了避免这种情况，Django提供了一组用于表单处理的通用基于类的视图。
- en: Basic forms
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基本表单
- en: 'Given a simple contact form:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个简单的联系表单：
- en: '[PRE29]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The view can be constructed using a `FormView`:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用`FormView`构建视图：
- en: '[PRE30]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Notes:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 注：
- en: '`FormView` inherits `TemplateResponseMixin` so `template_name` can be used
    here'
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FormView`继承了`TemplateResponseMixin`，因此`template_name`可以在这里使用'
- en: The default implementation for `form_valid()` simply redirects to the `success_url`
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`form_valid()`的默认实现只是重定向到`success_url`'
- en: Model forms
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型表单
- en: 'Generic views really shine when working with models. These generic views will
    automatically create a `ModelForm`, so long as they can work out which model class
    to use:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 与模型一起工作时，通用视图真正发挥作用。这些通用视图将自动创建`ModelForm`，只要它们可以确定要使用哪个模型类：
- en: If the `model` attribute is given, that model class will be used
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果给定了`model`属性，将使用该模型类
- en: If `get_object()` returns an object, the class of that object will be used
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果`get_object()`返回一个对象，将使用该对象的类
- en: If a `queryset` is given, the model for that queryset will be used
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果给定了`queryset`，将使用该查询集的模型
- en: Model form views provide a `form_valid()` implementation that saves the model
    automatically. You can override this if you have any special requirements; see
    below for examples.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 模型表单视图提供了一个`form_valid()`实现，可以自动保存模型。如果有特殊要求，可以覆盖此功能；请参阅下面的示例。
- en: You don't even need to provide a `success_url` for `CreateView` or `UpdateView`-they
    will use `get_absolute_url()` on the model object if available.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`CreateView`或`UpdateView`，甚至不需要提供`success_url`-如果可用，它们将使用模型对象上的`get_absolute_url()`。
- en: If you want to use a custom `ModelForm` (for instance to add extra validation)
    simply set `form_class` on your view.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要使用自定义的`ModelForm`（例如添加额外的验证），只需在视图上设置`form_class`。
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When specifying a custom form class, you must still specify the model, even
    though the form_class may be a ModelForm.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定自定义表单类时，仍然必须指定模型，即使`form_class`可能是一个ModelForm。
- en: 'First we need to add `get_absolute_url()` to our `Author` class:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要在我们的`Author`类中添加`get_absolute_url()`：
- en: '[PRE31]'
  id: totrans-192
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then we can use `CreateView` and friends to do the actual work. Notice how
    we''re just configuring the generic class-based views here; we don''t have to
    write any logic ourselves:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以使用`CreateView`和其他视图来执行实际工作。请注意，我们只是在这里配置通用基于类的视图；我们不必自己编写任何逻辑：
- en: '[PRE32]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: We have to use `reverse_lazy()` here, not just `reverse` as the urls are not
    loaded when the file is imported.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须在这里使用`reverse_lazy()`，而不仅仅是`reverse`，因为在导入文件时未加载URL。
- en: The `fields` attribute works the same way as the `fields` attribute on the inner
    `Meta` class on `ModelForm`. Unless you define the form class in another way,
    the attribute is required and the view will raise an `ImproperlyConfigured` exception
    if it's not.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`fields`属性的工作方式与`ModelForm`上内部`Meta`类的`fields`属性相同。除非以其他方式定义表单类，否则该属性是必需的，如果没有，视图将引发`ImproperlyConfigured`异常。'
- en: If you specify both the `fields` and `form_class` attributes, an `ImproperlyConfigured`
    exception will be raised.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 如果同时指定了`fields`和`form_class`属性，将引发`ImproperlyConfigured`异常。
- en: 'Finally, we hook these new views into the URLconf:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将这些新视图挂接到URLconf中：
- en: '[PRE33]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'In this example:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中：
- en: '`CreateView` and `UpdateView` use `myapp/author_form.html`'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CreateView`和`UpdateView`使用`myapp/author_form.html`'
- en: '`DeleteView` uses `myapp/author_confirm_delete.html`'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DeleteView`使用`myapp/author_confirm_delete.html`'
- en: If you wish to have separate templates for `CreateView` and `UpdateView`, you
    can set either `template_name` or `template_name_suffix` on your view class.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您希望为`CreateView`和`UpdateView`设置单独的模板，可以在视图类上设置`template_name`或`template_name_suffix`。
- en: Models and request.user
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型和request.user
- en: 'To track the user that created an object using a `CreateView`, you can use
    a custom `ModelForm` to do this. First, add the foreign key relation to the model:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟踪使用`CreateView`创建对象的用户，可以使用自定义的`ModelForm`来实现。首先，将外键关系添加到模型中：
- en: '[PRE34]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'In the view, ensure that you don''t include `created_by` in the list of fields
    to edit, and override `form_valid()` to add the user:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图中，确保不要在要编辑的字段列表中包含`created_by`，并覆盖`form_valid()`以添加用户：
- en: '[PRE35]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: Note that you'll need to decorate this view using `login_required()`, or alternatively
    handle unauthorized users in the `form_valid()`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，您需要使用`login_required()`装饰此视图，或者在`form_valid()`中处理未经授权的用户。
- en: AJAX example
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AJAX示例
- en: 'Here is a simple example showing how you might go about implementing a form
    that works for AJAX requests as well as *normal* form `POST`:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个简单的示例，展示了如何实现一个既适用于AJAX请求又适用于*普通*表单`POST`的表单。
- en: '[PRE36]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
