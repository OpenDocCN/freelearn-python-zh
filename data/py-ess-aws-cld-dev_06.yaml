- en: '6'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '6'
- en: Deploying Python Applications on Elastic Beanstalk
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Elastic Beanstalk上部署Python应用程序
- en: In this chapter, we are going to learn how to deploy Python applications on
    **Elastic Beanstalk**. Elastic Beanstalk is an AWS service that allows you to
    deploy web applications in the cloud. Basically, you don’t need to provision a
    server; Elastic Beanstalk provisions an infrastructure in the backend and deploys
    your web application. Another advantage of Elastic Beanstalk is being able to
    scale up your web applications when there are a large number of requests from
    the user.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何在Elastic Beanstalk上部署Python应用程序。Elastic Beanstalk是AWS服务，允许您在云中部署网络应用程序。基本上，您不需要配置服务器；Elastic
    Beanstalk在后台配置基础设施并部署您的网络应用程序。Elastic Beanstalk的另一个优点是在用户请求量大时能够扩展您的网络应用程序。
- en: 'This chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: What is Elastic Beanstalk?
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是Elastic Beanstalk？
- en: Creating a Python web application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个Python网络应用程序
- en: Deploying a simple Python web application on Elastic Beanstalk
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Elastic Beanstalk上部署简单的Python网络应用程序
- en: What is Elastic Beanstalk?
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Elastic Beanstalk？
- en: Elastic Beanstalk is an AWS service that is used to deploy web applications
    in the cloud. It supports multiple web application frameworks such as Python,
    Java, .NET, PHP, Node.js, Ruby, and Go. Once you deploy your application, Elastic
    Beanstalk manages the infrastructure in order to deploy, run, scale, and monitor
    applications.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Beanstalk是AWS服务，用于在云中部署网络应用程序。它支持多种网络应用程序框架，如Python、Java、.NET、PHP、Node.js、Ruby和Go。一旦部署了您的应用程序，Elastic
    Beanstalk就会管理基础设施以部署、运行、扩展和监控应用程序。
- en: Features of Elastic Beanstalk
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Elastic Beanstalk的功能
- en: 'Let’s take a look at the high-level features of Elastic Beanstalk:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看Elastic Beanstalk的高级功能：
- en: It supports monitoring and logging; hence, you can easily track how the application
    is behaving. For example, if an application goes down, you can check via Elastic
    Beanstalk.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持监控和日志记录；因此，您可以轻松跟踪应用程序的行为。例如，如果应用程序崩溃，您可以通过Elastic Beanstalk进行检查。
- en: It manages updates for infrastructure. In some cases, your application should
    be updated with the latest improvements in Python or other libraries and Elastic
    Beanstalk manages the updates with you in control.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它管理基础设施的更新。在某些情况下，您的应用程序应该使用Python或其他库的最新改进进行更新，而Elastic Beanstalk与您一起管理更新。
- en: It manages scaling features up and scaling features down; hence, if your application
    has too many requests, it adds more resources, and your application can then meet
    the requests. On the other hand, if there is less demand, it reduces the resources
    and helps to reduce the cost.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它管理向上和向下扩展的功能；因此，如果您的应用程序有太多的请求，它会添加更多资源，您的应用程序可以满足这些请求。另一方面，如果需求较少，它会减少资源，有助于降低成本。
- en: It supports some financial data or protected health information standards; hence,
    you can use Elastic Beanstalk for financial applications as well as health information
    applications.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它支持一些财务数据或受保护的健康信息标准；因此，您可以使用Elastic Beanstalk用于财务应用程序以及健康信息应用程序。
- en: We have taken a look at the basic features of Elastic Beanstalk, and we will
    now start to implement a sample web application with Python to deploy via Elastic
    Beanstalk.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了Elastic Beanstalk的基本功能，现在我们将开始使用Python实现一个示例网络应用程序，并通过Elastic Beanstalk进行部署。
- en: Creating a Python web application
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个Python网络应用程序
- en: We are going to create a sample web application with Python. For that purpose,
    **Flask** will be used as a web application framework for Python.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Python创建一个示例网络应用程序。为此，**Flask**将作为Python的网络应用程序框架。
- en: 'Flask is a web application framework that is written with Python. It has the
    required libraries to start implementing web applications as a beginner. In the
    following code block, you can see a sample "**Hello, World!**" web application
    with Flask:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Flask是一个用Python编写的网络应用程序框架。它具有作为初学者开始实现网络应用程序所需的库。在下面的代码块中，您可以看到一个使用Flask的示例“**Hello,
    World!**”网络应用程序：
- en: '[PRE0]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The code imports the Flask library and runs the application on localhost port
    `5000`. When you run it, you will see "**Hello World!**" in the browser.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 代码导入Flask库，并在本地主机端口`5000`上运行应用程序。当您运行它时，您将在浏览器中看到“**Hello World!**”。
- en: 'You can also check the Flask framework at the following website: [https://flask.palletsprojects.com/en/2.2.x/](https://flask.palletsprojects.com/en/2.2.x/).'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在以下网站上查看Flask框架：[https://flask.palletsprojects.com/en/2.2.x/](https://flask.palletsprojects.com/en/2.2.x/)。
- en: As the next step, we are going to deploy a Python web application to Elastic
    Beanstalk.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 作为下一步，我们将部署一个Python网络应用程序到Elastic Beanstalk。
- en: Deploying a Python web application on Elastic Beanstalk
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Elastic Beanstalk上部署Python网络应用程序
- en: 'In this section, we are going to deploy a sample Python web application on
    Elastic Beanstalk:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将部署一个示例Python网络应用程序到Elastic Beanstalk：
- en: 'Type `Elastic Beanstalk` in the AWS Management Console search box and click
    **Elastic Beanstalk**:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS管理控制台搜索框中输入`Elastic Beanstalk`并点击**Elastic Beanstalk**：
- en: '![](img/Figure_6.1_B19195.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.1_B19195.jpg)'
- en: Figure 6.1 – AWS Console
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.1 – AWS控制台
- en: 'You will see the main page of Elastic Beanstalk:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到Elastic Beanstalk的主页：
- en: '![](img/Figure_6.2_B19195.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.2_B19195.jpg)'
- en: Figure 6.2 – Elastic Beanstalk
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.2 – Elastic Beanstalk
- en: 'Click **Environments** on the left side in order to create a new Python web
    application, and then click the **Create a new** **environment** button:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在左侧点击**环境**以创建一个新的Python网络应用程序，然后点击**创建新** **环境**按钮：
- en: '![](img/Figure_6.3_B19195.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.3_B19195.jpg)'
- en: Figure 6.3 – Environment list
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.3 – 环境列表
- en: 'In the next panel, we are going to select what type of environment we want.
    Since we would like to deploy a web application, select **Web** **server environment**:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个面板中，我们将选择我们想要的环境类型。由于我们想要部署网络应用程序，请选择**Web** **服务器环境**：
- en: '![](img/Figure_6.4_B19195.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.4_B19195.jpg)'
- en: Figure 6.4 – Selecting an environment
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.4 – 选择环境
- en: 'I have named the file `Python Web app`. You can name it whatever you want:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我将文件命名为`Python Web app`。你可以将其命名为任何你想要的名称：
- en: '![](img/Figure_6.5_B19195.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.5_B19195.jpg)'
- en: Figure 6.5 – Naming the application
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.5 – 命名应用程序
- en: After naming the application, scroll down and fill in the **Environment name**
    input field. Keep in mind that this can also be named by the AWS Console by default.
    You have the option to change it.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命名应用程序后，向下滚动并填写**环境名称**输入字段。请注意，这也可以由AWS控制台默认命名。你有权更改它。
- en: '![](img/Figure_6.6_B19195.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.6_B19195.jpg)'
- en: Figure 6.6 – Environment name field
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.6 – 环境名称字段
- en: 'When you scroll down further, there is another input field to fill out – `test-training`
    and check the availability by clicking the **Check** **availability** button:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你继续向下滚动时，还有一个输入字段需要填写 – `test-training`，并通过点击**检查** **可用性**按钮来检查其可用性：
- en: '![](img/Figure_6.7_B19195.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.7_B19195.jpg)'
- en: Figure 6.7 – Naming the domain
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.7 – 命名域名
- en: 'Once you find the available domain name, scroll down, and locate the **Platform**
    panel. In this panel, we need to select the web application framework. Elastic
    Beanstalk supports different web environments such as Java, PHP, Node.js, Python,
    and so on. We will select the Python platform to deploy a Python web application.
    Depending on which Python platform you are working on, you can select it from
    the **Platform branch** field. In this example, I am selecting the **Python 3.8
    running on 64bit Amazon Linux 2** version. **Platform version** consists of some
    updates and patches according to the platform. You can proceed with the latest
    version; for example, if AWS finds a security patch, it creates a new version:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦找到可用的域名，向下滚动，找到**平台**面板。在这个面板中，我们需要选择网络应用程序框架。Elastic Beanstalk支持不同的网络环境，如Java、PHP、Node.js、Python等。我们将选择Python平台来部署Python网络应用程序。根据你正在使用的Python平台，你可以从**平台分支**字段中选择它。在这个例子中，我选择了**在64位Amazon
    Linux 2上运行的Python 3.8**版本。**平台版本**包含根据平台的一些更新和补丁。你可以使用最新版本；例如，如果AWS发现安全补丁，它将创建一个新版本：
- en: '![](img/Figure_6.8_B19195.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.8_B19195.jpg)'
- en: Figure 6.8 – Selecting the platform
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.8 – 选择平台
- en: 'Scroll down and you will see the latest panel on the page. In this example,
    we will proceed with **Sample application** and click **Create environment**:'
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向下滚动，你将看到页面上的最新面板。在这个例子中，我们将进行**示例应用程序**并点击**创建环境**：
- en: '![](img/Figure_6.9_B19195.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.9_B19195.jpg)'
- en: Figure 6.9 – Finalizing the platform
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.9 – 完成平台
- en: 'Once you click **Create environment**, you will see the logs. Elastic Beanstalk
    creates the platform and deploys sample applications:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦点击**创建环境**，你将看到日志。Elastic Beanstalk创建平台并部署示例应用程序：
- en: '![](img/Figure_6.10_B19195.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.10_B19195.jpg)'
- en: Figure 6.10 – Logs of the platform
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.10 – 平台日志
- en: 'Wait a few minutes so that the application is deployed. Once deployed, you
    will be presented with the following screen:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 等待几分钟，以便应用程序部署完成。一旦部署完成，你将看到以下屏幕：
- en: '![](img/Figure_6.11_B19195.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_6.11_B19195.jpg)'
- en: Figure 6.11 – Application deployment
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.11 – 应用程序部署
- en: 'It seems like the sample application has been deployed and is running properly.
    Click the domain link to see the running application. In the preceding screenshot,
    the domain link is [test-training.us-east-2.elasticbeanstalk.com](http://test-training.us-east-2.elasticbeanstalk.com):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 样例应用似乎已成功部署并正常运行。点击域名链接查看运行中的应用。在前面的屏幕截图中，域名链接是[test-training.us-east-2.elasticbeanstalk.com](http://test-training.us-east-2.elasticbeanstalk.com)：
- en: '![](img/Figure_6.12_B19195.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.12_B19195.jpg)'
- en: Figure 6.12 – Application
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.12 – 应用
- en: Congrats! You deployed the sample web application to the cloud.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！您已将示例网络应用部署到云端。
- en: 'In this example, we deployed the sample application to Elastic Beanstalk. The
    sample web application is implemented by AWS. As the next step, we are going to
    implement a simple Python web application to be deployed by Elastic Beanstalk:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在本例中，我们将示例应用部署到了Elastic Beanstalk。该示例网络应用由AWS实现。作为下一步，我们将实现一个简单的Python网络应用，并通过Elastic
    Beanstalk进行部署：
- en: Open the Elastic Beanstalk service in AWS.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在AWS中打开Elastic Beanstalk服务。
- en: 'Click **Environments** on the left side and see the list of environments. In
    the previous section, we created an environment and deployed the sample application.
    In this example, we will use the same Python web environment:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧的**环境**，查看环境列表。在上一节中，我们创建了一个环境并部署了示例应用。在本例中，我们将使用相同的Python网络环境：
- en: '![](img/Figure_6.13_B19195.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.13_B19195.jpg)'
- en: Figure 6.13 – Environments
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.13 – 环境
- en: 'Click **Pythonwebapp-env-1** in the list as it supports Python web applications.
    It could be different in your environment, based on the naming conventions:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在列表中点击**Pythonwebapp-env-1**，因为它支持Python网络应用。根据命名约定，您的环境可能不同：
- en: '![](img/Figure_6.14_B19195.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.14_B19195.jpg)'
- en: Figure 6.14 – Python All environments
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.14 – Python所有环境
- en: 'Click the **Upload and deploy** button in order to follow the deployment process:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**上传和部署**按钮以遵循部署过程：
- en: '![](img/Figure_6.15_B19195.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.15_B19195.jpg)'
- en: Figure 6.15 – Python web environment
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.15 – Python网络环境
- en: 'In the **Upload and deploy** window, click the **Choose** **file** button:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**上传和部署**窗口中，点击**选择** **文件**按钮：
- en: '![](img/Figure_6.16_B19195.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.16_B19195.jpg)'
- en: Figure 6.16 – Deploy environment
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.16 – 部署环境
- en: Once you click the **Choose file** button, your Python web application will
    be deployed to Elastic Beanstalk.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击**选择文件**按钮，你的Python网络应用将被部署到Elastic Beanstalk。
- en: 'As you can see in the following screenshot, you are going to select the local
    folder:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在以下屏幕截图中所见，您将选择本地文件夹：
- en: '![](img/Figure_6.17_B19195.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_6.17_B19195.jpg)'
- en: Figure 6.17 – Local folder
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图6.17 – 本地文件夹
- en: You can deploy whichever Python web framework you prefer, such as Flask, Django,
    and so on.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以部署您喜欢的任何Python网络框架，例如Flask、Django等。
- en: In this section, we learned how to deploy a custom Python web application to
    Elastic Beanstalk.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们学习了如何将自定义Python网络应用部署到Elastic Beanstalk。
- en: Summary
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned about the AWS Elastic Beanstalk service and how
    to create a Python web environment in the cloud. Elastic Beanstalk is useful when
    you deploy web applications in the cloud. It comes with scalability, logging,
    and monitoring advantages. In the following chapter, we will take a look at how
    to monitor our applications via CloudWatch.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了AWS Elastic Beanstalk服务以及如何在云中创建Python网络环境。当您在云中部署网络应用时，Elastic Beanstalk非常有用。它具有可扩展性、日志记录和监控优势。在下一章中，我们将探讨如何通过CloudWatch监控我们的应用。
- en: 'Part 3: Useful AWS Services to Implement Python'
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3部分：实现Python的有用AWS服务
- en: In this part, you will deep-dive into other AWS services for Python programming,
    such as monitoring, creating an API, database operations, and NoSQL with DynamoDB.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，您将深入了解其他AWS服务，用于Python编程，例如监控、创建API、数据库操作和与DynamoDB的NoSQL。
- en: 'This part has the following chapters:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分包含以下章节：
- en: '[*Chapter 7*](B19195_07.xhtml#_idTextAnchor011), *Monitoring Applications via
    CloudWatch*'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B19195_07.xhtml#_idTextAnchor011)，*通过CloudWatch监控应用*'
- en: '[*Chapter 8*](B19195_08.xhtml#_idTextAnchor012), *Database Operations with
    RDS*'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B19195_08.xhtml#_idTextAnchor012)，*使用RDS进行数据库操作*'
- en: '[*Chapter 9*](B19195_09.xhtml#_idTextAnchor013), *Creating an API in AWS*'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B19195_09.xhtml#_idTextAnchor013)，*在AWS中创建API*'
- en: '[*Chapter 10*](B19195_10.xhtml#_idTextAnchor014), *Using Python with NoSQL
    (DynamoDB)*'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*](B19195_10.xhtml#_idTextAnchor014)，*使用Python与NoSQL (DynamoDB)*'
- en: '[*Chapter 11*](B19195_11.xhtml#_idTextAnchor015), *Using Python with Glue*'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B19195_11.xhtml#_idTextAnchor015)，*使用Python与Glue*'
- en: '[*Chapter 12*](B19195_12.xhtml#_idTextAnchor016), *Reference Project on AWS*'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B19195_12.xhtml#_idTextAnchor016), *AWS参考项目*'
