- en: '23'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '23'
- en: Managing Emails in Odoo
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Odoo中管理电子邮件
- en: Email integration is the most prominent feature of Odoo. You can send and receive
    emails directly from the Odoo user interface. You can even manage email threads
    on business documents, such as leads, sales orders, and projects. In this chapter,
    we will explore a few important ways to deal with emails in Odoo.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件集成是Odoo最突出的功能。您可以直接从Odoo用户界面发送和接收电子邮件。您甚至可以管理业务文档上的电子邮件线程，例如潜在客户、销售订单和项目。在本章中，我们将探讨一些处理Odoo中电子邮件的重要方法。
- en: 'Here, we’ll cover the following recipes:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将涵盖以下食谱：
- en: Configuring incoming and outgoing email servers
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置入站和出站电子邮件服务器
- en: Managing chatter on documents
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理文档上的聊天
- en: Managing activities on documents
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理文档上的活动
- en: Sending emails using the Jinja template
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Jinja模板发送电子邮件
- en: Sending emails using the QWeb template
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用QWeb模板发送电子邮件
- en: Managing the email alias
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理电子邮件别名
- en: Logging user changes in a chatter
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在聊天中记录用户更改
- en: Sending periodic digest emails
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送周期性摘要电子邮件
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: All the code used in this chapter can be downloaded from [https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter23](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter23).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的所有代码都可以从[https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter23](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter23)下载。
- en: Configuring incoming and outgoing email servers
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置入站和出站电子邮件服务器
- en: Before you start sending and receiving emails in Odoo, you will need to configure
    the incoming and outgoing email servers. In this recipe, you will learn how to
    configure email servers in Odoo.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始在Odoo中发送和接收电子邮件之前，您需要配置入站和出站电子邮件服务器。在本食谱中，您将学习如何在Odoo中配置电子邮件服务器。
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: There is no development needed for this recipe, but you will require email server
    information, such as the server URL, port, server type, username, and password.
    We will use this information to configure the email servers.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱不需要开发，但您将需要电子邮件服务器信息，例如服务器URL、端口、服务器类型、用户名和密码。我们将使用这些信息来配置电子邮件服务器。
- en: Note
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: If you are using **Odoo Online** or **Odoo.sh**, you do not need to configure
    the email servers. You can send and receive emails without any complex configurations
    on those platforms. This recipe is for on-premises Odoo instances.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用**Odoo Online**或**Odoo.sh**，您不需要配置电子邮件服务器。您可以在这些平台上发送和接收电子邮件，而无需任何复杂的配置。本食谱是为本地Odoo实例准备的。
- en: How to do it...
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Configuring incoming and outgoing email servers involves a few steps that are
    common to the processes for incoming and outgoing servers and a few steps that
    are unique to each kind of server. So, first, we will see the common configuration
    steps, and then we will configure the incoming and outgoing email servers individually.
    The following are the steps required for both incoming and outgoing email servers:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 配置入站和出站电子邮件服务器涉及一些步骤，这些步骤对于入站和出站服务器是通用的，还有一些步骤是针对每种服务器独特的。因此，首先，我们将查看通用配置步骤，然后我们将分别配置入站和出站电子邮件服务器。以下是为入站和出站电子邮件服务器所需的步骤：
- en: Open the **General Settings** form menu, at **Settings** | **General Settings**.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**常规设置**表单菜单，在**设置** | **常规设置**。
- en: 'Go to the **Discuss** section and inside **Alias Domain**. This will display
    the following options:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**讨论**部分，并在**别名域名**内部。这将显示以下选项：
- en: '![Figure 23.1 – Setting an alias domain](img/B20997_23_01.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![图23.1 – 设置别名域名](img/B20997_23_01.jpg)'
- en: Figure 23.1 – Setting an alias domain
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.1 – 设置别名域名
- en: In the **Alias Domain** field, enter the domain name on which your email server
    is running. Then, save the configuration.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**别名域名**字段中，输入您的电子邮件服务器正在运行的域名。然后，保存配置。
- en: Configuring the incoming email server
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置入站电子邮件服务器
- en: 'Perform the following steps to configure the incoming email server:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以配置入站电子邮件服务器：
- en: Open **General Settings** and click on the **Incoming Email Servers** link under
    Technical | Email. This will redirect you to a list view of incoming email servers.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**常规设置**并点击技术 | 电子邮件下的**入站电子邮件服务器**链接。这将重定向到入站电子邮件服务器的列表视图。
- en: 'Click on the **Create** button, which will open the following form view. Enter
    the details of your incoming email server (see the *How it works…* section for
    an explanation of each field):'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**按钮，这将打开以下表单视图。输入您的入站电子邮件服务器的详细信息（有关每个字段的解释，请参阅*如何操作…*部分）：
- en: '![Figure 23.2 – Configuring the incoming email server](img/B20997_23_02.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图23.2 – 配置入站邮件服务器](img/B20997_23_02.jpg)'
- en: Figure 23.2 – Configuring the incoming email server
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.2 – 配置入站邮件服务器
- en: Click on the **Test & Confirm** button to verify your configuration. It will
    show an error message if you have wrongly configured the incoming email server.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**测试 & 确认**按钮以验证您的配置。如果您错误地配置了入站邮件服务器，它将显示错误消息。
- en: Configuring the outgoing email server
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 配置出站邮件服务器
- en: 'Follow these steps to configure the outgoing email server:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤配置出站邮件服务器：
- en: Open **General Settings** and enable the **Custom Email Servers** option, then
    click on the **Outgoing Email Servers** link. This will redirect you to the list
    view of outgoing email servers.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**常规设置**并启用**自定义邮件服务器**选项，然后点击**出站邮件服务器**链接。这将带您到出站邮件服务器的列表视图。
- en: 'Click on **Create**, which will open the following form view. Enter the details
    of your outgoing email server (see the *How it works…* section for an explanation
    of each field):'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**创建**，这将打开以下表单视图。输入您的出站邮件服务器的详细信息（有关每个字段的说明，请参阅*如何工作…*部分）：
- en: '![Figure 23.3 – Configuring the outgoing email server](img/B20997_23_03.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图23.3 – 配置出站邮件服务器](img/B20997_23_03.jpg)'
- en: Figure 23.3 – Configuring the outgoing email server
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.3 – 配置出站邮件服务器
- en: Click on **Test Connection** at the bottom of the screen to verify your configuration.
    It will show an error message if you have wrongly configured the outgoing email
    server.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在屏幕底部点击**测试连接**以验证您的配置。如果您错误地配置了出站邮件服务器，它将显示错误消息。
- en: The outgoing email server will display the error dialog even if you have configured
    it properly. Look for a **Connection Test Successful!** message in the error dialog
    body. It means your outgoing server is configured correctly.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 即使您已正确配置，出站邮件服务器也会显示错误对话框。在错误对话框正文中寻找**连接测试成功**消息。这意味着您的出站服务器已正确配置。
- en: How it works...
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The steps given in this recipe are self-explanatory and do not require further
    explanation. But the outgoing email and incoming email records have several fields,
    so let’s see their purpose.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱中给出的步骤是自我解释的，不需要进一步解释。但是，出站邮件和入站邮件记录有多个字段，让我们看看它们的目的。
- en: 'Here is a list of fields used to configure the incoming email server:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为配置入站邮件服务器使用的字段列表：
- en: '**Name**: The name of the server, which helps you identify a specific incoming
    email server when you have configured multiple incoming email servers.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：服务器的名称，有助于您在配置了多个入站邮件服务器时识别特定的入站邮件服务器。'
- en: '**Server Type**: Here, you need to choose from three options: **POP Server**,
    **IMAP Server**, and **Local Server**. The value of this field will be based on
    your email service provider.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器类型**：在此处，您需要从三个选项中选择：**POP服务器**、**IMAP服务器**和**本地服务器**。此字段的值将基于您的电子邮件服务提供商。'
- en: '**Server Name**: The domain of the server on which the service is running.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务器名称**：运行服务的服务器域名。'
- en: '**Port**: The number of the port on which the server is running.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**端口**：服务器运行的端口号。'
- en: '**SSL/TLS**: Check this field if you are using SSL/TLS encryption.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SSL/TLS**：如果您正在使用SSL/TLS加密，请勾选此字段。'
- en: '**Username**: The email address for which you are fetching emails.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户名**：您正在获取邮件的电子邮件地址。'
- en: '**Password**: The password for the email address provided.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：提供的电子邮件地址的密码。'
- en: '**Active**: This field is used to enable or disable the incoming email server.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**激活**：此字段用于启用或禁用入站邮件服务器。'
- en: '**Keep Attachment**: Turn off this option if you do not want to manage attachments
    from incoming emails.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保留附件**：如果您不想管理入站邮件的附件，请关闭此选项。'
- en: '**Keep Original**: Turn on this option if you want to keep the original email
    along with the preceding one.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**保留原始**：如果您想保留原始邮件及其前一个邮件，请启用此选项。'
- en: 'The following is a list of fields used for configuring the outgoing email server:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是为配置出站邮件服务器使用的字段列表：
- en: '**Name**: The name of the server, which helps you identify a specific incoming
    email server when you have configured multiple incoming email servers.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**名称**：服务器的名称，有助于您在配置了多个入站邮件服务器时识别特定的入站邮件服务器。'
- en: '**Priority**: This field is used to define the priority of the outgoing email
    server. Lower numbers get higher priority, so email servers with a lower priority
    number will be used most.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**优先级**：此字段用于定义出站邮件服务器的优先级。数字越小，优先级越高，因此具有较低优先级数字的邮件服务器将被使用最多。'
- en: '**SMTP Server**: The domain of the server on which the service is running.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SMTP服务器**：运行服务的服务器域名。'
- en: '**SMTP Port**: The number of the port on which the server is running.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SMTP端口**：服务器运行的端口号。'
- en: '**Connection Encryption**: The type of security used to send emails.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**连接加密**：用于发送电子邮件的安全类型。'
- en: '**Username**: The email account used for sending emails.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户名**：用于发送电子邮件的电子邮件账户。'
- en: '**Password**: The password for the email account provided.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**密码**：提供的电子邮件账户的密码。'
- en: '**Active**: This field is used to enable or disable the outgoing email server.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**激活**：此字段用于启用或禁用出站电子邮件服务器。'
- en: There’s more...
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'By default, incoming emails are fetched every 5 minutes. If you want to change
    this interval, follow these steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，每5分钟检索一次传入的电子邮件。如果您想更改此间隔，请按照以下步骤操作：
- en: Activate developer mode.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 激活开发者模式。
- en: Open **Scheduled Actions** at **Settings** | **Technical** | **Automation**
    |**Scheduled Actions**.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**设置** | **技术** | **自动化** | **计划任务**中打开**计划任务**。
- en: Search for and open the scheduled action named **Mail:** **Fetchmail Service**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 搜索并打开名为**邮件**：**Fetchmail服务**的计划任务。
- en: Change the interval using the field labeled **Execute Every**.
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用标记为**执行间隔**的字段更改间隔。
- en: Managing chatter on documents
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理文档上的聊天
- en: In this recipe, you will learn how to manage chatter on your documents and add
    a communication thread to a record.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本配方中，您将学习如何管理文档上的聊天，并将通信线程添加到记录中。
- en: Getting ready
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will reuse the `my_hostel` module from [*Chapter 8*](B20997_08.xhtml#_idTextAnchor388),
    *Advanced Server-Side Development Techniques*. You can grab an initial copy of
    the module from the `Chapter23/ 00_initial_module` directory of the GitHub repository
    for this hostel room. In this recipe, we will add chatter to the `hostel.student`
    model.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本配方，我们将重用[*第8章*](B20997_08.xhtml#_idTextAnchor388)中的`my_hostel`模块，*高级服务器端开发技术*。您可以从GitHub仓库中该宿舍房间的`Chapter23/
    00_initial_module`目录中获取模块的初始副本。在本配方中，我们将向`hostel.student`模型添加聊天。
- en: How to do it...
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Follow these steps to add chatter on the records of the `hostel.student` model:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤在`hostel.student`模型的记录中添加聊天：
- en: 'Add the `mail` module dependency in the `__manifest__.py` file:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`__manifest__.py`文件中添加`mail`模块依赖项：
- en: '[PRE0]'
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Inherit `mail.thread` in the Python definition of the `hostel.student` model:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostel.student`模型的Python定义中继承`mail.thread`：
- en: '[PRE1]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Add chatter widgets on the form view of the `hostel.student` model:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostel.student`模型的表单视图中添加聊天小部件：
- en: '[PRE2]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Install the `my_hostel` module to see the changes in action:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装`my_hostel`模块以查看实际效果：
- en: '![Figure 23.4 – Chatter on the hostel student form view](img/B20997_23_04.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图23.4 – 宿舍学生表单视图上的聊天](img/B20997_23_04.jpg)'
- en: Figure 23.4 – Chatter on the hostel student form view
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.4 – 宿舍学生表单视图上的聊天
- en: As shown in the preceding screenshot, after installing the module, you will
    be able to see chatter in the form view.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，安装模块后，您将在表单视图中看到聊天内容。
- en: How it works...
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In order to enable chatter on any model, you will need to install the `mail`
    module first. This is because all the code required to enable chatter or mailing
    capabilities is part of the `mail` module. That’s why, in *step 1*, we added the
    `mail` module dependency in the manifest file of the `my_hostel` module. This
    will automatically install the `mail` module whenever you install the `my_hostel`
    module.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在任何模型上启用聊天，您首先需要安装`mail`模块。这是因为启用聊天或邮件功能所需的所有代码都是`mail`模块的一部分。这就是为什么在*步骤1*中，我们在`my_hostel`模块的清单文件中添加了`mail`模块依赖项。这将自动在您安装`my_hostel`模块时安装`mail`模块。
- en: The fields and methods required to operate chatter are part of the `mail.thread`
    model. The `mail.thread` model is an abstract model and is just used for inheritance
    purposes. In *step 2*, we inherited the `mail.thread` model in the `hostel.student`
    model. This will add all the necessary fields and methods required for chatter
    in the `hostel.student` model. If you don’t know how model inheritance works,
    refer to the *Using abstract models for reusable model features* recipe in [*Chapter
    4*](B20997_04.xhtml#_idTextAnchor118), *Application Models*.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 操作聊天所需字段和方法是`mail.thread`模型的一部分。`mail.thread`模型是一个抽象模型，仅用于继承目的。在*步骤2*中，我们在`hostel.student`模型中继承了`mail.thread`模型。这将向`hostel.student`模型添加所有必要的字段和方法，以实现聊天功能。如果您不知道模型继承是如何工作的，请参阅[*第4章*](B20997_04.xhtml#_idTextAnchor118)中的*使用抽象模型实现可重用模型功能*配方，*应用模型*。
- en: In *steps 1* and *2*, we added all the fields and methods required for chatter.
    The only remaining thing for chatter is adding a user interface in the form view.
    In *step 3*, we added a message thread and follower widget. You might be wondering
    about the `message_follower_ids` and `message_ids` fields. These fields are not
    added in the `hostel.student` model definition but they are added from the `mail.thread`
    model through inheritance.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤1*和*步骤2*中，我们添加了聊天所需的所有字段和方法。对于聊天来说，唯一剩下的事情是在表单视图中添加用户界面。在*步骤3*中，我们添加了消息线程和关注者小部件。你可能想知道`message_follower_ids`和`message_ids`字段。这些字段没有在`hostel.student`模型定义中添加，但它们是通过继承从`mail.thread`模型添加的。
- en: There’s more...
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'When you post messages in a chatter, emails will be sent to the followers.
    If you noticed in the example of this recipe, the room of the student is not the
    follower of the records, so they will not receive the messages. If you want to
    send an email notification to the student, you will need to add them to the student
    list. You can add the follower manually from the user interface, but if you want
    to add them automatically, you can use the `message_subscribe()` method. Take
    a look at the following code—when we assign a hostel room, the given code will
    automatically add the student to the list of followers:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在聊天中发布消息时，会向关注者发送电子邮件。如果你注意到这个食谱的例子，学生的房间不是记录的关注者，所以他们不会收到消息。如果你想向学生发送电子邮件通知，你需要将他们添加到学生列表中。你可以从用户界面手动添加关注者，但如果你想自动添加，可以使用`message_subscribe()`方法。看看下面的代码——当我们分配宿舍房间时，给定的代码将自动将学生添加到关注者列表中：
- en: '[PRE3]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Similarly, if you want to remove followers from the list, you can use the `message_unsubscribe()`
    method.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果你想从列表中删除关注者，可以使用`message_unsubscribe()`方法。
- en: Managing activities on documents
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理文档上的活动
- en: When using chatter, you can also add activities. These are used to plan your
    actions on the record. It is kind of a to-do list for each record. In this recipe,
    you will learn how to enable activities on any model.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用聊天时，你也可以添加活动。这些用于规划你在记录上的操作。它类似于每个记录的待办事项列表。在这个食谱中，你将学习如何在任何模型上启用活动。
- en: Getting ready
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe,
    *Managing chatter on documents*. We will add activities to the `hostel.student`
    model.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们将使用之前食谱中的`my_hostel`模块，*在文档上管理聊天*。我们将向`hostel.student`模型添加活动。
- en: How to do it...
  id: totrans-98
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to add activities to the `hostel.student` model:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤将活动添加到`hostel.student`模型中：
- en: 'Inherit `mail.activity.mixin` in the Python definition of the `hostel.student`
    model:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostel.student`模型的Python定义中继承`mail.activity.mixin`：
- en: '[PRE4]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Add the `mail_activity` widget in the chatter of the `hostel.student` model:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`hostel.student`模型的聊天中添加`mail_activity`小部件：
- en: '[PRE5]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Update the `my_hostel` module to apply the changes. This will display chatter
    activities:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新`my_hostel`模块以应用更改。这将显示聊天活动：
- en: '![Figure 23.5 – Activity manager on the hostel student form view](img/Image96422.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图23.5 – 宿舍学生表单视图上的活动管理器](img/Image96422.jpg)'
- en: Figure 23.5 – Activity manager on the hostel student form view
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.5 – 宿舍学生表单视图上的活动管理器
- en: This is how the user will be able to manage different chatter activities. Note
    that an activity scheduled by one user is visible to all other users too.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是用户将能够管理不同的聊天活动。请注意，由一个用户安排的活动对其他所有用户也是可见的。
- en: How it works...
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: Activities are part of the `mail` module, and you can optionally enable them
    in chatter. In order to enable activities on records, you need to inherit `mail.activity.mixin`.
    Similar to the `mail.thread` model, `mail.activity.mixin` is also an abstract
    model. Inheriting `mail.activity.mixin` will add all the necessary fields and
    methods in the module. These methods and fields are used to manage activities
    on records. In *step 1*, we added `mail.activity.mixin` into the `hostel.student`
    model. Because of this, the inheritance of `hostel.student` will get all the methods
    and fields required to manage activities.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 活动是`mail`模块的一部分，并且你可以选择在聊天中启用它们。为了在记录上启用活动，你需要继承`mail.activity.mixin`。类似于`mail.thread`模型，`mail.activity.mixin`也是一个抽象模型。继承`mail.activity.mixin`将在模块中添加所有必要的字段和方法。这些方法和字段用于管理记录上的活动。在*步骤1*中，我们将`mail.activity.mixin`添加到`hostel.student`模型中。因此，`hostel.student`的继承将获得管理活动所需的所有方法和字段。
- en: In *step 2*, we added the `mail_activity` widget in the form view. This will
    display the UI for managing activities. The `activity_ids` field is added in the
    `hostel.student` model through inheritance.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤2* 中，我们在表单视图中添加了 `mail_activity` 小部件。这将显示管理活动的UI。通过继承，在 `hostel.student`
    模型中添加了 `activity_ids` 字段。
- en: Activities can be of different types. By default, you can create activities
    with types such as `Email`, `Call`, `Meeting`, and `To-Do`. If you want to add
    your own activity type, you can do it by going to **Settings** | **Technical**
    | **Discuss** | **Activity Types** in developer mode.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 活动可以是不同类型的。默认情况下，你可以创建具有 `Email`、`Call`、`Meeting` 和 `To-Do` 等类型的活动。如果你想添加自己的活动类型，可以在开发者模式下转到
    **设置** | **技术** | **讨论** | **活动类型** 来实现。
- en: There’s more...
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'If you want to schedule an activity automatically, you can use the `activity_schedule()`
    method of the `mail.activity.mixin` model. This will create an activity on a given
    discharge date. You can schedule the activity manually with the `activity_schedule()`
    method, as follows:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想自动安排活动，可以使用 `mail.activity.mixin` 模型的 `activity_schedule()` 方法。这将创建一个在指定退宿日期的活动。你可以使用
    `activity_schedule()` 方法手动安排活动，如下所示：
- en: '[PRE6]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This example will schedule a call activity for the student whenever someone
    discharges a hostel. The deadline for the activity will be set as the discharge
    date of the hostel so that the rector can make a call to the student on that date.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在此示例中，每当有人退宿时，将为学生安排一个呼叫活动。活动的截止日期将被设置为宿舍的退宿日期，以便校长可以在那天给学生打电话。
- en: Sending emails using the Jinja template
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Jinja模板发送电子邮件
- en: Odoo supports creating dynamic emails through Jinja templates. Jinja is a text-based
    templating engine used to generate dynamic HTML content. In this recipe, we will
    create a Jinja email template and then send emails with its help.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo支持通过Jinja模板创建动态电子邮件。Jinja是一个基于文本的模板引擎，用于生成动态HTML内容。在本食谱中，我们将创建一个Jinja电子邮件模板，然后使用它发送电子邮件。
- en: Getting ready
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe,
    *Managing activities on documents*. We will add the Jinja template to send an
    email to the student to tell them about the admission to the hostel.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个食谱，我们将使用之前食谱中提到的 `my_hostel` 模块，即 *管理文档上的活动*。我们将添加 Jinja 模板来向学生发送电子邮件，通知他们宿舍的录取情况。
- en: How to do it...
  id: totrans-120
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to send a reminder email to the student:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤向学生发送提醒电子邮件：
- en: 'Create a new file called `my_hostel/data/mail_template.xml` and add the email
    template:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `my_hostel/data/mail_template.xml` 的新文件，并添加电子邮件模板：
- en: '[PRE7]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Register the template file in the manifest file:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在清单文件中注册模板文件：
- en: '[PRE8]'
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Add a `hostel.student` model to send the email:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `hostel.student` 模型以发送电子邮件：
- en: '[PRE9]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Add the `send_mail_assign_room()` method to the `hostel.student` model:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `send_mail_assign_room()` 方法添加到 `hostel.student` 模型：
- en: '[PRE10]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Update the `my_hostel` module to apply the changes. This will add a `hostel.student`
    model. When they click on the button, followers will get this message:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 `my_hostel` 模块以应用更改。这将添加一个 `hostel.student` 模型。当他们点击按钮时，关注者将收到以下消息：
- en: '![Figure 23.6 – Email sent via a Jinja template](img/B20997_23_06.jpg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图23.6 – 通过Jinja模板发送的电子邮件](img/B20997_23_06.jpg)'
- en: Figure 23.6 – Email sent via a Jinja template
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.6 – 通过Jinja模板发送的电子邮件
- en: The procedure shown in this recipe is useful when you want to send updates to
    your customers through emails. Because of the Jinja template, you can send emails
    dynamically based on individual records.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 本食谱中所示的过程在你想要通过电子邮件向客户发送更新时很有用。由于Jinja模板，你可以根据单个记录动态发送电子邮件。
- en: How it works...
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'In *step 1*, we created an email template using Jinja. Jinja templates help
    us generate a dynamic email based on record data. The email template is stored
    in the `mail.template` model. Let’s see a list of fields you will need to pass
    in order to create a Jinja email template:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤1* 中，我们使用Jinja创建了一个电子邮件模板。Jinja模板帮助我们根据记录数据生成动态电子邮件。电子邮件模板存储在 `mail.template`
    模型中。让我们看看你需要传递的字段列表，以便创建一个Jinja电子邮件模板：
- en: '`name`: The name of the template that is used to identify a specific template.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：用于识别特定模板的模板名称。'
- en: '`email_from`: The value of this field will be the email address from which
    this email is sent.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email_from`：此字段的值将是发送此电子邮件的电子邮件地址。'
- en: '`email_to`: The value of this field will be the email address of the recipient.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email_to`：此字段的值将是收件人的电子邮件地址。'
- en: '`email_cc`: The value of this field will be used for the email address to send
    a copy of the email.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email_cc`：此字段的值将用于发送电子邮件副本的电子邮件地址。'
- en: '`subject`: This field contains the subject of the email.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`subject`: 此字段包含电子邮件的主题。'
- en: '`model_id`: This field contains the reference of the model. The email template
    will be rendered with the data of this model.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model_id`: 此字段包含模型的引用。电子邮件模板将使用此模型的数据进行渲染。'
- en: '`body_html`: This field will contain the body of the email template. It is
    a Jinja template, so you can use variables, loops, conditions, and so on. If you
    want to learn more about Jinja templates, go to [http://jinja.pocoo.org/docs/2.10/](http://jinja.pocoo.org/docs/2.10/).
    Usually, we wrap the content in the `CDATA` tag so that the content in the body
    is considered as character data and not as markup.'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`body_html`: 此字段将包含电子邮件模板的主体。它是一个Jinja模板，因此您可以使用变量、循环、条件等。如果您想了解更多关于Jinja模板的信息，请访问[http://jinja.pocoo.org/docs/2.10/](http://jinja.pocoo.org/docs/2.10/)。通常，我们在`CDATA`标签中包装内容，这样主体中的内容就被视为字符数据，而不是标记。'
- en: '`auto_delete`: This is a Boolean field that deletes an email once the email
    is sent. The default value of this field is `False`.'
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`auto_delete`: 这是一个布尔字段，在发送电子邮件后删除电子邮件。此字段的默认值为`False`。'
- en: '`lang`: This field is used to translate the email template into another language.'
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lang`: 此字段用于将电子邮件模板翻译成另一种语言。'
- en: '`scheduled_date`: This field is used to schedule emails in the future.'
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scheduled_date`: 此字段用于安排未来的电子邮件。'
- en: Information
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 信息
- en: You can use `${}` in the `email_form`, `email_to`, `email_cc`, `subject`, `scheduled_date`,
    and `lang` fields. This helps you to set values dynamically. Take a look at *step
    1* in our recipe—we used `{{ (object.email) }}` to set the `email_to` field dynamically.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在`email_form`、`email_to`、`email_cc`、`subject`、`scheduled_date`和`lang`字段中使用`${}`。这有助于您动态设置值。看看我们配方中的*步骤
    1*——我们使用了`{{ (object.email) }}`来动态设置`email_to`字段。
- en: 'If you look closely at the content of the `body_html` field, you will notice
    we used `<t t-out="object.name">`. Here, the object is the recordset of the `hostel.student`
    model. During the rendering,`<t t-out="object.hostel_id.name"></t>` will be replaced
    with the hostel name. As well as `object`, some other helper functions and variables
    are passed in the rendering context. Here is a list of helpers passed to the renderer
    context:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仔细查看`body_html`字段的内容，您会注意到我们使用了`<t t-out="object.name">`。在这里，对象是`hostel.student`模型的记录集。在渲染过程中，`<t
    t-out="object.hostel_id.name"></t>`将被替换为宿舍名称。以及`object`，一些其他辅助函数和变量也被传递到渲染上下文中。以下是传递给渲染上下文的辅助函数列表：
- en: '`object`: This variable will contain the recordset of the model, which is set
    in the template by the `model_id` field'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`object`: 此变量将包含模型的记录集，该记录集由模板中的`model_id`字段设置'
- en: '`format_date`: This is a reference to the method used to format date-time objects'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`format_date`: 这是用于格式化日期时间对象的方法的引用'
- en: '`format_datetime`: This is a reference to the method used to convert the UTC
    date and time into the date and time for another time zone'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`format_datetime`: 这是用于将UTC日期和时间转换为另一个时区的日期和时间的方法的引用'
- en: '`format_amount`: This is a reference to the method used to convert `float`
    into `string` with the currency symbol'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`format_amount`: 这是用于将`float`转换为带有货币符号的字符串的方法的引用'
- en: '`format_duration`: This method is used to convert `float` into `time`—for instance,
    to convert 1.5 to 01:30'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`format_duration`: 此方法用于将`float`转换为`time`——例如，将1.5转换为01:30'
- en: '`user`: This will be the recordset of the current user'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user`: 这将是当前用户的记录集'
- en: '`ctx`: This will contain the dictionary of the environment context'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ctx`: 这将包含环境上下文的字典'
- en: Note
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 备注
- en: If you want to see the list of templates, activate developer mode, and open
    the **Settings** | **Technical** | **Email** | **Templates** menu. The form view
    of the template also provides a button to preview the rendered template.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看模板列表，请激活开发者模式，并打开**设置** | **技术** | **电子邮件** | **模板**菜单。模板的表单视图还提供了一个按钮来预览渲染的模板。
- en: In *step 2*, we registered the template file in the manifest file.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 2*中，我们在清单文件中注册了模板文件。
- en: In *step 3*, we added a button in the form view to invoke the `send_mail_assign_room()`
    method, which will send the email to the followers.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤 3*中，我们在表单视图中添加了一个按钮来调用`send_mail_assign_room()`方法，该方法将电子邮件发送给关注者。
- en: In *step 4*, we added the `send_mail_assign_room()` method, which will be invoked
    by clicking the button. The `message_post_with_source()` method is used to send
    the email. The `message_post_with_source()` method is inherited in the model through
    `mail.thread` inheritance. To send the email, you just need to pass the template
    ID as the parameter.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 4* 中，我们添加了 `send_mail_assign_room()` 方法，该方法将在点击按钮时被调用。`message_post_with_source()`
    方法用于发送电子邮件。`message_post_with_source()` 方法通过 `mail.thread` 继承在模型中。要发送电子邮件，您只需将模板
    ID 作为参数传递。
- en: There’s more...
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'The `message_post_with_source()` method is used to send emails with the Jinja
    template. If you just want to send an email with plain text, you can use the `message_post()`
    method:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_post_with_source()` 方法用于使用 Jinja 模板发送电子邮件。如果您只想发送纯文本电子邮件，可以使用 `message_post()`
    方法：'
- en: '[PRE11]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The preceding code will add a `subtype_id` parameter.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将添加一个 `subtype_id` 参数。
- en: Sending emails using the QWeb template
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 QWeb 模板发送电子邮件
- en: In the previous recipe, we learned how to send emails using the Jinja template.
    In this recipe, we will see another way to send dynamic emails. We will send emails
    with the help of the QWeb template.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的菜谱中，我们学习了如何使用 Jinja 模板发送电子邮件。在这个菜谱中，我们将看到另一种发送动态电子邮件的方法。我们将借助 QWeb 模板发送电子邮件。
- en: Getting ready
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will use the `my_hostel` module from the previous recipe,
    *Sending emails using the Jinja template*. We will use the QWeb template to send
    an email to the student informing them that their admission was completed in the
    hostel.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本菜谱，我们将使用前一个菜谱 *使用 Jinja 模板发送电子邮件* 中的 `my_hostel` 模块。我们将使用 QWeb 模板向学生发送电子邮件，告知他们在宿舍的入学已完成。
- en: How to do it...
  id: totrans-169
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to send a reminder email to the student:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤向学生发送提醒电子邮件：
- en: 'Add the QWeb template into the `my_hostel/data/mail_template.xml` file:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 QWeb 模板添加到 `my_hostel/data/mail_template.xml` 文件中：
- en: '[PRE12]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Add a `hostel.student` model to send the email:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `hostel.student` 模型以发送电子邮件：
- en: '[PRE13]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add the `send_mail_assign_room_qweb()` method in the `hostel.student` model:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `hostel.student` 模型中添加 `send_mail_assign_room_qweb()` 方法：
- en: '[PRE14]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Update the `my_hostel` module to apply the changes. This will add a `hostel.student`
    model. When the button is clicked, followers will get a message like this:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更新 `my_hostel` 模块以应用更改。这将添加一个 `hostel.student` 模型。当按钮被点击时，关注者将收到如下消息：
- en: '![Figure 23.7 – Email sent via the QWeb template](img/B20997_23_07.jpg)'
  id: totrans-178
  prefs: []
  type: TYPE_IMG
  zh: '![图 23.7 – 通过 QWeb 模板发送的电子邮件](img/B20997_23_07.jpg)'
- en: Figure 23.7 – Email sent via the QWeb template
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23.7 – 通过 QWeb 模板发送的电子邮件
- en: The procedure shown in this recipe works exactly like the previous recipe, *Sending
    emails using the Jinja template*. The only difference is the template type, as
    this recipe uses QWeb templates.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 本菜谱中显示的程序与前面的菜谱 *使用 Jinja 模板发送电子邮件* 的工作方式完全相同。唯一的区别是模板类型，因为本菜谱使用 QWeb 模板。
- en: How it works...
  id: totrans-181
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: In *step 1*, we created a QWeb template with the `send_mail_assign_room_qweb`
    ID. If you look in the template, you’ll see we are not using the `format_date()`
    data field method anymore. This is because the QWeb rendering engine handles this
    automatically and displays the date based on the user’s language. For the same
    reason, you are not required to use the `format_amount()` method to display currency
    symbols. The QWeb rendering engine will manage this automatically. If you want
    to learn more about QWeb templates, refer to the *Creating or modifying templates*
    recipe in [*Chapter 14*](B20997_14.xhtml#_idTextAnchor734), *CMS* *Website Development*.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 1* 中，我们创建了一个具有 `send_mail_assign_room_qweb` ID 的 QWeb 模板。如果您查看模板，您会看到我们不再使用
    `format_date()` 数据字段方法了。这是因为 QWeb 渲染引擎会自动处理这一点，并基于用户的语言显示日期。出于同样的原因，您不需要使用 `format_amount()`
    方法来显示货币符号。QWeb 渲染引擎将自动处理这一点。如果您想了解更多关于 QWeb 模板的信息，请参考 [*第 14 章*](B20997_14.xhtml#_idTextAnchor734)
    中的 *创建或修改模板* 菜谱，*CMS* *网站开发*。
- en: In *step 2*, we added a button in the form view to invoke the `send_mail_assign_room_qweb()`
    method, which sends the email to the followers.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 2* 中，我们在表单视图中添加了一个按钮，用于调用 `send_mail_assign_room_qweb()` 方法，该方法将电子邮件发送给关注者。
- en: In *step 3*, we added the `send_mail_assign_room_qweb()` method, which will
    be invoked by a button click. The `message_post_with_source()` method is used
    to send the email. The `message_post_with_source()` method is inherited in the
    model through `mail.thread` inheritance. To send the email, you just need to pass
    the web template’s XML ID as the parameter.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 3* 中，我们添加了 `send_mail_assign_room_qweb()` 方法，该方法将由按钮点击触发。`message_post_with_source()`
    方法用于发送电子邮件。`message_post_with_source()` 方法通过 `mail.thread` 继承在模型中继承。要发送电子邮件，只需将
    Web 模板的 XML ID 作为参数传递即可。
- en: 'Sending emails with the QWeb template works exactly the same as in the previous
    recipe, but there are some subtle differences between the QWeb email template
    and the Jinja email template. Here is a quick comparison between both templates:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 QWeb 模板发送电子邮件与上一个配方中的操作完全相同，但 QWeb 电子邮件模板和 Jinja 电子邮件模板之间存在一些细微的差异。以下是两个模板的快速比较：
- en: 'There is no simple way to send extra parameters in the email templates. You
    have to use a recordset in the `object` variable to fetch dynamic data. On the
    other hand, with QWeb email templates, you can pass extra values in the renderer
    context through the `values` parameter:'
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在电子邮件模板中发送额外参数没有简单的方法。您必须使用 `object` 变量中的记录集来获取动态数据。另一方面，使用 QWeb 电子邮件模板，您可以通过
    `values` 参数在渲染上下文中传递额外值：
- en: '[PRE15]'
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: To manage the date format, time zone, and amount with currency symbols, in the
    Jinja template, you have to use the `format_date`, `format_tz`, and `format_amount`
    functions, while in QWeb templates, it is managed automatically.
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要管理日期格式、时区和带有货币符号的金额，在 Jinja 模板中，您必须使用 `format_date`、`format_tz` 和 `format_amount`
    函数，而在 QWeb 模板中，这是自动管理的。
- en: It is not possible to modify an existing template for other modules in Jinja,
    whereas in QWeb templates, you can modify the email template through inheritance.
    If you want to learn more about QWeb inheritance, refer to the *Creating or modifying
    templates* recipe in [*Chapter 14*](B20997_14.xhtml#_idTextAnchor734), *CMS* *Website
    Development*.
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Jinja 中无法修改其他模块的现有模板，而在 QWeb 模板中，您可以通过继承来修改电子邮件模板。如果您想了解更多关于 QWeb 继承的信息，请参阅
    [*第 14 章*](B20997_14.xhtml#_idTextAnchor734) 中的 *创建或修改模板* 配方，*CMS* *网站开发*。
- en: 'You can select and use a Jinja template directly from the message composer.
    In the following screenshot, the drop-down menu in the bottom-right corner is
    used to select a Jinja template:'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以直接从消息编辑器中选择并使用 Jinja 模板。在以下屏幕截图中的右下角下拉菜单用于选择 Jinja 模板：
- en: '![Figure 23.8 – Template selection option](img/B20997_23_08.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图 23.8 – 模板选择选项](img/B20997_23_08.jpg)'
- en: Figure 23.8 – Template selection option
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23.8 – 模板选择选项
- en: Using QWeb, selecting a template directly from the message composer is not an
    option.
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 QWeb，直接从消息编辑器中选择模板不是一个选项。
- en: There’s more...
  id: totrans-194
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: All methods (`message_post` and `message_post_with_source`) respect the user’s
    preference. If the user changes the notification-management option from the user
    preferences, the user will not receive emails; instead, they will receive notifications
    in Odoo’s UI. This is the same for customers; if a customer opts out of emails,
    they will not receive any updates through email.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 所有方法（`message_post` 和 `message_post_with_source`）都尊重用户的偏好。如果用户从用户偏好中更改通知管理选项，用户将不会收到电子邮件；相反，他们将在
    Odoo 的 UI 中收到通知。对于客户也是如此；如果客户选择退出电子邮件，他们将不会通过电子邮件收到任何更新。
- en: 'Additionally, the Odoo message thread follows a concept called `subtype_id`,
    in `message_post_*` methods to send emails based on the subtype. Usually, the
    user will manage their subtypes from the dropdown of the **Follow** button. Let’s
    suppose the user has set their subtypes as follows:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Odoo 消息线程遵循一个称为 `subtype_id` 的概念，在 `message_post_*` 方法中根据子类型发送电子邮件。通常，用户将从
    **关注** 按钮的下拉菜单中管理他们的子类型。假设用户已将子类型设置为以下内容：
- en: '![Figure 23.9 – Option to edit subtype](img/B20997_23_09.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图 23.9 – 编辑子类型选项](img/B20997_23_09.jpg)'
- en: Figure 23.9 – Option to edit subtype
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23.9 – 编辑子类型选项
- en: Based on the user’s preference, the user will only get emails for **Discussions**
    messages.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 根据用户的偏好，用户将只为 **讨论** 消息接收电子邮件。
- en: Managing the email alias
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 管理电子邮件别名
- en: Email aliasing is a feature in Odoo that is used to create a record through
    incoming emails. The simplest example of an email alias is sales teams. You just
    need to send an email to `sale@yourdomain.com`, and Odoo will create a new record
    for `crm.lead` in the sales team. In this recipe, we will create one email alias
    to create a hostel student record.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 电子邮件别名是 Odoo 中用于通过传入电子邮件创建记录的功能。电子邮件别名的最简单例子是销售团队。您只需向 `sale@yourdomain.com`
    发送电子邮件，Odoo 就会在销售团队中为 `crm.lead` 创建一个新的记录。在这个配方中，我们将创建一个电子邮件别名来创建宿舍学生记录。
- en: Getting ready
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe,
    *Sending emails using the QWeb template*. We will create our email alias with
    the `hostelstudent@yourdomain.com` email address. If you send an email to this
    email address with the book’s name in the subject, a record is created in the
    `hostel.student` model.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们将使用前一个配方中的 `my_hostel` 模块，即 *使用 QWeb 模板发送电子邮件*。我们将使用 `hostelstudent@yourdomain.com`
    电子邮件地址创建我们的电子邮件别名。如果您向此电子邮件地址发送主题包含书籍名称的电子邮件，将在 `hostel.student` 模型中创建一个记录。
- en: How to do it...
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to add an email alias for the `hostel.student` model:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下步骤为 `hostel.student` 模型添加电子邮件别名：
- en: 'Add the email alias data in the `my_hostel/data/mail_template.xml` file:'
  id: totrans-206
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `my_hostel/data/mail_template.xml` 文件中添加电子邮件别名数据：
- en: '[PRE16]'
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following imports in the `my_hostel/models/hostel_student.py` file:'
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `my_hostel/models/hostel_student.py` 文件中添加以下导入：
- en: '[PRE17]'
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Override the `message_new()` method in the `hostel.student` model:'
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `hostel.student` 模型中覆盖 `message_new()` 方法：
- en: '[PRE18]'
  id: totrans-211
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Update the `my_hostel` module to apply the changes. Then, send an email to
    `hostelstudent@yourdomain.com`. This will create a new `hostel.student` record,
    and it will be displayed as follows:'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 更新 `my_hostel` 模块以应用更改。然后，向 `hostelstudent@yourdomain.com` 发送电子邮件。这将创建一个新的 `hostel.student`
    记录，并如下所示显示：
- en: '![Figure 23.10 – Record generated via email](img/B20997_23_010.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图 23.10 – 通过电子邮件生成的记录](img/B20997_23_010.jpg)'
- en: Figure 23.10 – Record generated via email
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图 23.10 – 通过电子邮件生成的记录
- en: Whenever you send an email to `hostelstudent@yourdomain.com`, Odoo will generate
    a new student record.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 每次您向 `hostelstudent@yourdomain.com` 发送电子邮件时，Odoo 都会生成一个新的学生记录。
- en: How it works...
  id: totrans-216
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'In *step 1*, we created a `mail.alias` record. This alias will handle the `hostelstudent@yourdomain.com`
    email address. When you send an email to this address, Odoo will create a new
    record in the `hostel.student` model. If you want to see the list of active aliases
    in the system, open **Settings** | **Technical** | **Email** | **Aliases**. Here
    is a list of fields available to configure the alias:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 1* 中，我们创建了一个 `mail.alias` 记录。此别名将处理 `hostelstudent@yourdomain.com` 电子邮件地址。当您向此地址发送电子邮件时，Odoo
    将在 `hostel.student` 模型中创建一个新的记录。如果您想查看系统中活跃的别名列表，请打开 **设置** | **技术** | **电子邮件**
    | **别名**。以下是可用于配置别名的字段列表：
- en: '`alias_name`: This field holds the local part of the email address; for example,
    the `hostelstudent` part in `hostelstudent@yourdomain.com` is the local part of
    the email address.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alias_name`: 此字段包含电子邮件地址的本地部分；例如，在 `hostelstudent@yourdomain.com` 中的 `hostelstudent`
    部分是电子邮件地址的本地部分。'
- en: '`alias_model_id`: The model reference on which a record should be created for
    the incoming email.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alias_model_id`: 应为传入的电子邮件创建记录的模型引用。'
- en: '`alias_contact`: This field holds the security preferences for the alias. Possible
    options are `everyone`, `partners`, `followers`, and `employees`.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alias_contact`: 此字段包含别名的安全偏好设置。可能的选项有 `everyone`、`partners`、`followers` 和
    `employees`。'
- en: '`alias_defaults`: When an incoming email is received, its record is created
    in the model specified on the alias. If you want to set default values in the
    record, give the values in the form of a dictionary in this field.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alias_defaults`: 当收到一封新邮件时，其记录会在别名指定的模型中创建。如果您想在记录中设置默认值，请以字典的形式在此字段中给出这些值。'
- en: 'In *step 2*, we added the necessary imports. In *step 3*, we overrode the `message_new()`
    method. This method is invoked automatically when a new email is received on the
    alias email address. This method will take two parameters:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在 *步骤 2* 中，我们添加了必要的导入。在 *步骤 3* 中，我们覆盖了 `message_new()` 方法。当在别名电子邮件地址上收到新邮件时，会自动调用此方法。此方法将接受两个参数：
- en: '`msg_dict`: This parameter will be the dictionary that contains information
    about the received email. It contains email information such as the sender’s email
    address, the receiver’s email address, the email subject, and the email body.'
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`msg_dict`: 此参数将是包含接收到的电子邮件信息的字典。它包含有关电子邮件的信息，例如发件人的电子邮件地址、收件人的电子邮件地址、电子邮件主题和电子邮件正文。'
- en: '`custom_values`: This is a custom value used to create a new record. This is
    the same value you set on the alias record using the `alias_defaults` field.'
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`custom_values`：这是一个用于创建新记录的自定义值。这是你在别名记录上使用`alias_defaults`字段设置的相同值。'
- en: 'In our recipe, we overrode the `message_new()` method and fetched the name
    from the email through a regular expression. Then, we fetched the email address
    of the sender with the help of the tools we imported in *step 2*. We used the
    sender’s email address to create a student record. Then, we updated `custom_values`
    with these two values: `name` and `email`. We passed this updated `custom_values`
    data to the `super()` method, which created a new `hostel.student` record with
    the given `name` and `email` values. This is how a record is created when you
    send an email to the alias.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的配方中，我们覆盖了`message_new()`方法，并通过正则表达式从电子邮件中获取名称。然后，我们通过在*步骤2*中导入的工具获取发送者的电子邮件地址。我们使用发送者的电子邮件地址来创建学生记录。然后，我们使用这两个值更新`custom_values`：`name`和`email`。我们将更新的`custom_values`数据传递给`super()`方法，该方法使用给定的`name`和`email`值创建一个新的`hostel.student`记录。这就是当你向别名发送电子邮件时创建记录的方式。
- en: There’s more...
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Some business models have a requirement that means you need a separate alias
    per record. For example, the sales team model has separate aliases for each team,
    such as `sale-in@example.com` for Team India and `sale-be@example.com` for Team
    Belgium. If you want to manage such aliases in your model, you can use `mail.alias.mixin`.
    In order to use it in your model, you will need to inherit the mixin:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 一些商业模式有这样一个要求，即每个记录都需要一个单独的别名。例如，销售团队模式为每个团队提供单独的别名，如印度团队的`sale-in@example.com`和比利时团队的`sale-be@example.com`。如果你想在你的模型中管理这样的别名，你可以使用`mail.alias.mixin`。为了在你的模型中使用它，你需要继承这个mixin：
- en: '[PRE19]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: After inheriting the mixin, you will need to add the `alias_name` field into
    the form view so that end users can add aliases by themselves.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 继承mixin后，你需要将`alias_name`字段添加到表单视图中，以便最终用户可以自己添加别名。
- en: Logging user changes in a chatter
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在聊天记录中记录用户更改
- en: The Odoo framework provides a built-in facility to log field changes in a chatter.
    In this recipe, we will enable logging on some of the fields so that when changes
    are made in them, Odoo will add logs in the chatter.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo框架提供了一个内置功能来在聊天记录中记录字段更改。在这个配方中，我们将启用一些字段的日志记录，以便当它们发生变化时，Odoo将在聊天记录中添加日志。
- en: Getting ready
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe,
    *Managing the email alias*. In this recipe, we will log changes from a few fields
    in the `hostel.student` model.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个配方，我们将使用之前配方中的`my_hostel`模块，即*管理电子邮件别名*。在这个配方中，我们将记录`hostel.student`模型中几个字段的更改。
- en: How to do it...
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'Modify the definitions of the fields, to enable logs for the fields when you
    change them. This is shown in the following code snippet:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 修改字段的定义，以便在更改它们时启用日志记录。这在下述代码片段中显示：
- en: '[PRE20]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Update the `my_hostel` module to apply the changes. Create a new record in
    the `hostel.student` model, make some changes in the fields, and then admission
    and discharge the hostel. If you check the chatter, you will see the following
    logs:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 更新`my_hostel`模块以应用更改。在`hostel.student`模型中创建一个新记录，更改字段，然后入住和退宿宿舍。如果你检查聊天记录，你会看到以下日志：
- en: '![Figure 23.11 – Changelogs in the chatter](img/B20997_23_011.jpg)'
  id: totrans-238
  prefs: []
  type: TYPE_IMG
  zh: '![图23.11 – 聊天记录中的更改日志](img/B20997_23_011.jpg)'
- en: Figure 23.11 – Changelogs in the chatter
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.11 – 聊天记录中的更改日志
- en: Whenever you make changes to `state`, `admission_date`, or `discharge_date`,
    you will see a new log in the chatter. This will help you to see the full history
    of the record.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 每当你更改`state`、`admission_date`或`discharge_date`时，你将在聊天记录中看到一条新的日志。这将帮助你看到记录的完整历史。
- en: How it works...
  id: totrans-241
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'By adding the `tracking=True` attribute on the field, you can enable logging
    for that field. When you set the `tracking=True` attribute, Odoo will add a log
    that changes in the chatter whenever you update the field value. If you enable
    tracking on multiple records and you want to provide a sequence in the tracking
    values, you can also pass a number in the tracking parameter like this: `tracking=20`.
    When you pass `tracking=True`, then the default sequence is used, which is `100`.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在字段上添加`tracking=True`属性，你可以为该字段启用日志记录。当你设置`tracking=True`属性时，Odoo会在你更新字段值时在聊天记录中添加日志。如果你在多个记录上启用跟踪，并且想在跟踪值中提供一个序列，你也可以在跟踪参数中传递一个数字，例如：`tracking=20`。当你传递`tracking=True`时，将使用默认序列，即`100`。
- en: In our recipe, we added `tracking=True` on the `state`, `admission_date`, and
    `discharge_date` fields. This means Odoo will log changes when you update the
    values of the `admission_date`, `discharge_date`, or `state` fields. Take a look
    at the screenshot in the *How to do it…* section; we have only changed the `admission_date`
    and `discharge_date` fields.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的食谱中，我们在`state`、`admission_date`和`discharge_date`字段上添加了`tracking=True`。这意味着当您更新`admission_date`、`discharge_date`或`state`字段的值时，Odoo将记录更改。请查看*如何做…*部分中的截图；我们只更改了`admission_date`和`discharge_date`字段。
- en: Note that the `track_visibility` feature only works if your model inherits the
    `mail.thread` model because the code-related chatter and logs are part of the
    `mail.thread` model.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，`track_visibility`功能仅在您的模型继承`mail.thread`模型时才有效，因为与代码相关的聊天和日志是`mail.thread`模型的一部分。
- en: Sending periodic digest emails
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发送周期性摘要电子邮件
- en: The Odoo framework has built-in support for sending out periodic digest emails.
    With digest emails, you can send an email with information about business KPIs.
    In this recipe, we will send data about the hostel room to the rector (or any
    other authorized person).
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo框架内置了对发送周期性摘要电子邮件的支持。通过摘要电子邮件，您可以发送包含业务关键绩效指标（KPIs）信息的电子邮件。在本食谱中，我们将发送宿舍房间数据给校长（或任何其他授权人员）。
- en: Getting ready
  id: totrans-247
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: For this recipe, we will be using the `my_hostel` module from the previous recipe,
    *Logging user changes in* *a chatter*.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本食谱，我们将使用之前食谱中的`my_hostel`模块，即*在聊天中记录用户更改*。
- en: How to do it...
  id: totrans-249
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Follow these steps to generate digest emails for room rent records:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤生成房间租金记录的摘要电子邮件：
- en: 'Inherit the `digest.digest` model and add fields for the KPIs:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继承`digest.digest`模型并添加KPI字段：
- en: '[PRE21]'
  id: totrans-252
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Inherit the `digest.digest` model’s form view and add the KPI fields:'
  id: totrans-253
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 继承`digest.digest`模型的表单视图并添加KPI字段：
- en: '[PRE22]'
  id: totrans-254
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Update the module to apply the changes. Once you update the module, enable
    developer mode and open **Settings** | **Technical** | **Emails** | **Digest Emails**,
    as seen in the following screenshot:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 更新模块以应用更改。一旦更新了模块，启用开发者模式并打开**设置** | **技术** | **电子邮件** | **摘要电子邮件**，如图所示：
- en: '![Figure 23.12 – Enabling the digest email for room rent data](img/B20997_23_012.jpg)'
  id: totrans-256
  prefs: []
  type: TYPE_IMG
  zh: '![图23.12 – 启用房间租金数据的摘要电子邮件](img/B20997_23_012.jpg)'
- en: Figure 23.12 – Enabling the digest email for room rent data
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.12 – 启用房间租金数据的摘要电子邮件
- en: Once you enable this and if you have subscribed to digest emails, you will start
    receiving digest emails.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦启用此功能并且您已订阅摘要电子邮件，您将开始接收摘要电子邮件。
- en: How it works...
  id: totrans-259
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的…
- en: 'In order to build a customized digest email, you need two fields. The first
    field will be a `Boolean` field, used to enable and disable the KPI, while the
    second field will be a `compute` field and will be called to acquire the KPI value.
    We created both of the fields in *step 1*. If you check the definition of the
    `compute` field, it uses the `_get_kpi_compute_parameters` method. This method
    returns three parameters: a start date, an end date, and the company record. You
    can use these parameters to generate a value for your KPI. We have returned the
    number of rooms rented during a particular period of time. If your KPI is multi-website
    compatible, then you can use a `company` parameter.'
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建定制的摘要电子邮件，您需要两个字段。第一个字段将是一个`Boolean`字段，用于启用和禁用KPI，而第二个字段将是一个`compute`字段，将被调用以获取KPI值。我们在*步骤1*中创建了这两个字段。如果您检查`compute`字段的定义，它使用`_get_kpi_compute_parameters`方法。此方法返回三个参数：一个开始日期、一个结束日期和公司记录。您可以使用这些参数为您KPI生成一个值。我们返回了特定时间段内租出的房间数量。如果您的KPI是跨站点的，那么您可以使用`company`参数。
- en: 'In *step 2*, we added a field to the digest form view. This field is used to
    enable/disable digest emails. When you enable it, you will start receiving digest
    emails:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 在*步骤2*中，我们在摘要表单视图中添加了一个字段。此字段用于启用/禁用摘要电子邮件。当您启用它时，您将开始接收摘要电子邮件：
- en: '![Figure 23.13 – Digest email for room rent records](img/B20997_23_013.jpg)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图23.13 – 房间租金记录的摘要电子邮件](img/B20997_23_013.jpg)'
- en: Figure 23.13 – Digest email for room rent records
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 图23.13 – 房间租金记录的摘要电子邮件
- en: Enable developer mode, then open **Settings** | **Technical** | **Emails** |
    **Digest Emails**. Here, you can configure the recipients of digest emails and
    set the periodicity for digest emails. You can also enable/disable digest emails
    from here.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 启用开发者模式，然后打开**设置** | **技术** | **电子邮件** | **摘要电子邮件**。在这里，您可以配置摘要电子邮件的收件人并设置摘要电子邮件的周期性。您还可以从这里启用/禁用摘要电子邮件。
