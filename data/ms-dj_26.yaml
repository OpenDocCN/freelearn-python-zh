- en: Appendix E. Built-in Template Tags and Filters
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录 E. 内置模板标签和过滤器
- en: '[Chapter 3](ch03.xhtml "Chapter 3. Templates"), *Templates*, lists a number
    of the most useful built-in template tags and filters. However, Django ships with
    many more built-in tags and filters. This appendix provides a summary of all template
    tags and filters in Django. For more detailed information and use cases, see the
    Django Project website at [https://docs.djangoproject.com/en/1.8/ref/templates/builtins/](https://docs.djangoproject.com/en/1.8/ref/templates/builtins/).'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 3 章](ch03.xhtml "第 3. 章. 模板"), *模板*, 列出了一些最有用的内置模板标签和过滤器。但是，Django 还附带了许多其他内置标签和过滤器。本附录提供了
    Django 中所有模板标签和过滤器的摘要。有关更详细的信息和用例，请参见 Django 项目网站 [https://docs.djangoproject.com/en/1.8/ref/templates/builtins/](https://docs.djangoproject.com/en/1.8/ref/templates/builtins/)。'
- en: Built-in tags
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内置标签
- en: autoescape
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: autoescape
- en: Controls the current auto-escaping behavior. This tag takes either `on` or `off`
    as an argument and that determines whether auto-escaping is in effect inside the
    block. The block is closed with an `endautoescape` ending tag.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 控制当前自动转义行为。此标签接受 `on` 或 `off` 作为参数，决定块内是否生效自动转义。块以 `endautoescape` 结束标签关闭。
- en: When auto-escaping is in effect, all variable content has HTML escaping applied
    to it before placing the result into the output (but after any filters have been
    applied). This is equivalent to manually applying the `escape` filter to each
    variable.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 当自动转义生效时，所有变量内容在放入输出结果之前都会应用 HTML 转义（但在应用任何过滤器之后）。这相当于手动对每个变量应用 `escape` 过滤器。
- en: 'The only exceptions are variables that are already marked as safe from escaping,
    either by the code that populated the variable, or because it has had the `safe`
    or `escape` filters applied. Sample usage:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 唯一的例外是已经标记为不需要转义的变量，要么是由填充变量的代码标记的，要么是因为已经应用了 `safe` 或 `escape` 过滤器。示例用法：
- en: '[PRE0]'
  id: totrans-7
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: block
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: block
- en: Defines a block that can be overridden by child templates. See "template inheritance"
    in [Chapter 3](ch03.xhtml "Chapter 3. Templates"), *Templates*, for more information.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 定义一个可以被子模板覆盖的块。有关更多信息，请参见 [第 3 章](ch03.xhtml "第 3. 章. 模板"), *模板*, 中的 "模板继承"。
- en: comment
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: comment
- en: Ignores everything between `{% comment %}` and `{% endcomment %}`. An optional
    note may be inserted in the first tag. For example, this is useful when commenting
    out code for documenting why the code was disabled.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 忽略 `{% comment %}` 和 `{% endcomment %}` 之间的所有内容。第一个标签中可以插入一个可选的注释。例如，当注释掉代码以记录为什么禁用代码时，这是有用的。
- en: '`Comment` tags cannot be nested.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`Comment` 标签不能嵌套。'
- en: csrf_token
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: csrf_token
- en: This tag is used for CSRF protection. For more information on **Cross Site Request
    Forgeries** (**CSRF**) see [Chapter 3](ch03.xhtml "Chapter 3. Templates"), *Templates*,
    and [Chapter 19](ch19.xhtml "Chapter 19. Security in Django"), *Security in Django*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 此标签用于 CSRF 保护。有关 **跨站点请求伪造** (**CSRF**) 的更多信息，请参见 [第 3 章](ch03.xhtml "第 3. 章. 模板"),
    *模板*, 和 [第 19 章](ch19.xhtml "第 19. 章. Django 中的安全性"), *Django 中的安全性*。
- en: cycle
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: cycle
- en: 'Produces one of its arguments each time this tag is encountered. The first
    argument is produced on the first encounter, the second argument on the second
    encounter, and so forth. Once all arguments are exhausted, the tag cycles to the
    first argument and produces it again. This tag is particularly useful in a loop:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 每次遇到此标签时，产生其中的一个参数。第一次遇到时产生第一个参数，第二次遇到时产生第二个参数，依此类推。一旦所有参数用完，标签就会循环到第一个参数并再次产生它。这个标签在循环中特别有用：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The first iteration produces HTML that refers to class `row1`, the second to
    `row2`, the third to `row1` again, and so on for each iteration of the loop. You
    can use variables, too. For example, if you have two template variables, `rowvalue1`
    and `rowvalue2`, you can alternate between their values like this:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次迭代生成引用 `row1` 类的 HTML，第二次生成 `row2`，第三次再次生成 `row1`，依此类推。您也可以使用变量。例如，如果有两个模板变量
    `rowvalue1` 和 `rowvalue2`，您可以像这样在它们的值之间交替：
- en: '[PRE2]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can also mix variables and strings:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以混合变量和字符串：
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can use any number of values in a `cycle` tag, separated by spaces. Values
    enclosed in single quotes (`'`) or double quotes (`"`) are treated as string literals,
    while values without quotes are treated as template variables.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在 `cycle` 标签中使用任意数量的值，用空格分隔。用单引号 (`'`) 或双引号 (`"`) 括起来的值被视为字符串字面量，而没有引号的值被视为模板变量。
- en: debug
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: debug
- en: Outputs a whole load of debugging information, including the current context
    and imported modules.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 输出大量的调试信息，包括当前上下文和导入的模块。
- en: extends
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: extends
- en: 'Signals that this template extends a parent template. This tag can be used
    in two ways:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 表示此模板扩展了父模板。此标签可以以两种方式使用：
- en: '`{% extends "base.html" %}` (with quotes) uses the literal value `"base.html"`
    as the name of the parent template to extend.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{% extends "base.html" %}`（带引号）使用字面值 `"base.html"` 作为要扩展的父模板的名称。'
- en: '`{% extends variable %}` uses the value of `variable`. If the variable evaluates
    to a string, Django will use that string as the name of the parent template. If
    the variable evaluates to a `Template` object, Django will use that object as
    the parent template.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`{% extends variable %}` 使用 `variable` 的值。如果变量求值为字符串，Django 将使用该字符串作为父模板的名称。如果变量求值为
    `Template` 对象，Django 将使用该对象作为父模板。'
- en: filter
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: filter
- en: Filters the contents of the block through one or more filters. See the Built-in
    Filters section later in this appendix for a list of filters in Django.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过一个或多个过滤器过滤块的内容。有关 Django 中过滤器的列表，请参见附录后面的内置过滤器部分。
- en: firstof
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: firstof
- en: 'Outputs the first argument variable that is not `False`. Outputs nothing if
    all the passed variables are `False`. Sample usage:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 输出第一个不是 `False` 的参数变量。如果所有传递的变量都是 `False`，则不输出任何内容。示例用法：
- en: '[PRE4]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'This is equivalent to:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 这相当于：
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: for
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: for
- en: 'Loops over each item in an array, making the item available in a context variable.
    For example, to display a list of athletes provided in `athlete_list`:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在数组中循环每个项目，使项目在上下文变量中可用。例如，要显示提供的 `athlete_list` 中的运动员列表：
- en: '[PRE6]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'You can loop over a list in reverse by using `{% for obj in list reversed %}`.
    If you need to loop over a list of lists, you can unpack the values in each sub
    list into individual variables. This can also be useful if you need to access
    the items in a dictionary. For example, if your context contained a dictionary
    `data`, the following would display the keys and values of the dictionary:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过使用`{% for obj in list reversed %}`在列表上进行反向循环。如果需要循环遍历一个列表的列表，可以将每个子列表中的值解压缩为单独的变量。如果需要访问字典中的项目，这也可能很有用。例如，如果您的上下文包含一个名为`data`的字典，则以下内容将显示字典的键和值：
- en: '[PRE7]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: for... empty
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: for... empty
- en: 'The `for` tag can take an optional `{% empty %}` clause whose text is displayed
    if the given array is empty or could not be found:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`for`标签可以带一个可选的`{% empty %}`子句，如果给定的数组为空或找不到，则显示其文本：'
- en: '[PRE8]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: if
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如果
- en: 'The `{% if %}` tag evaluates a variable, and if that variable is true (that
    is, exists, is not empty, and is not a false boolean value) the contents of the
    block are output:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`{% if %}`标签评估一个变量，如果该变量为真（即存在，不为空，并且不是false布尔值），则输出块的内容：'
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: In the above, if `athlete_list` is not empty, the number of athletes will be
    displayed by the `{{ athlete_list|length }}` variable. As you can see, the `if`
    tag may take one or several `{% elif %}` clauses, as well as an `{% else %}` clause
    that will be displayed if all previous conditions fail. These clauses are optional.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的例子中，如果`athlete_list`不为空，则将通过`{{ athlete_list|length }}`变量显示运动员的数量。正如您所看到的，`if`标签可以带一个或多个`{%
    elif %}`子句，以及一个`{% else %}`子句，如果所有先前的条件都失败，则将显示该子句。这些子句是可选的。
- en: Boolean operators
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 布尔运算符
- en: '`if` tags may use `and`, `or`, or `not` to test a number of variables or to
    negate a given variable:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`if`标签可以使用`and`、`or`或`not`来测试多个变量或否定给定变量：'
- en: '[PRE10]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Use of both `and` and `or` clauses within the same tag is allowed, with `and`
    having higher precedence than `or` for example:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一个标签中使用`and`和`or`子句是允许的，例如，`and`的优先级高于`or`：
- en: '[PRE11]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'will be interpreted like:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 将被解释为：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Use of actual parentheses in the `if` tag is invalid syntax. If you need them
    to indicate precedence, you should use nested `if` tags.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在`if`标签中使用实际括号是无效的语法。如果需要它们来表示优先级，应该使用嵌套的`if`标签。
- en: '`if` tags may also use the operators `==`, `!=`, `<`, `>`, `<=`, `>=`, and
    `in` which work as listed in *Table E.1*.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '`if`标签也可以使用`==`、`!=`、`<`、`>`、`<=`、`>=`和`in`运算符，其工作方式如*表E.1*中所列。'
- en: '| Operator | Example |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| 运算符 | 示例 |'
- en: '| --- | --- |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| == | {% if somevar == "x" %} ... |'
  id: totrans-59
  prefs: []
  type: TYPE_TB
  zh: '| == | {% if somevar == "x" %} ... |'
- en: '| != | {% if somevar != "x" %} ... |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| != | {% if somevar != "x" %} ... |'
- en: '| < | {% if somevar < 100 %} ... |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| < | {% if somevar < 100 %} ... |'
- en: '| > | {% if somevar > 10 %} ... |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| > | {% if somevar > 10 %} ... |'
- en: '| <= | {% if somevar <= 100 %} ... |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| <= | {% if somevar <= 100 %} ... |'
- en: '| >= | {% if somevar >= 10 %} ... |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| >= | {% if somevar >= 10 %} ... |'
- en: '| In | {% if "bc" in "abcdef" %} |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| In | {% if "bc" in "abcdef" %} |'
- en: 'Table E.1: Boolean operators in template tags'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 表E.1：模板标签中的布尔运算符
- en: Complex expressions
  id: totrans-67
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 复杂表达式
- en: 'All of the above can be combined to form complex expressions. For such expressions,
    it can be important to know how the operators are grouped when the expression
    is evaluated-that is, the precedence rules. The precedence of the operators, from
    lowest to highest, is as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 所有上述内容都可以组合成复杂的表达式。对于这样的表达式，了解在评估表达式时运算符是如何分组的可能很重要，即优先级规则。运算符的优先级从低到高依次为：
- en: '`or`'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`or`'
- en: '`and`'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`and`'
- en: '`not`'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`not`'
- en: '`in`'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`in`'
- en: '`==`, `!=`, `<`, `>`, `<=`, and `>=`'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`==`、`!=`、`<`、`>`、`<=`和`>=`'
- en: This order of precedence follows Python exactly.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这个优先顺序与Python完全一致。
- en: Filters
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 过滤器
- en: 'You can also use filters in the `if` expression. For example:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在`if`表达式中使用过滤器。例如：
- en: '[PRE13]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: ifchanged
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ifchanged
- en: Check if a value has changed from the last iteration of a loop. The
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 检查值是否与循环的上一次迭代不同。
- en: '`{% ifchanged %}` block tag is used within a loop. It has two possible uses:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`{% ifchanged %}`块标签在循环内使用。它有两种可能的用法：'
- en: Checks its own rendered contents against its previous state and only displays
    the content if it has changed
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查其自身的渲染内容与其先前状态是否不同，仅在内容发生变化时显示内容
- en: If given one or more variables, check whether any variable has changed
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果给定一个或多个变量，检查任何变量是否发生了变化
- en: ifequal
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ifequal
- en: 'Output the contents of the block if the two arguments equal each other. Example:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个参数相等，则输出块的内容。示例：
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: An alternative to the `ifequal` tag is to use the `if` tag and the `==` operator.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '`ifequal`标签的替代方法是使用`if`标签和`==`运算符。'
- en: ifnotequal
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ifnotequal
- en: Just like `ifequal`, except it tests that the two arguments are not equal. An
    alternative to the `ifnotequal` tag is to use the `if` tag and the `!=` operator.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 与`ifequal`类似，只是它测试两个参数是否不相等。使用`ifnotequal`标签的替代方法是使用`if`标签和`!=`运算符。
- en: include
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包括
- en: 'Loads a template and renders it with the current context. This is a way of
    including other templates within a template. The template name can either be a
    variable:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 加载模板并使用当前上下文进行渲染。这是在模板中包含其他模板的一种方式。模板名称可以是一个变量：
- en: '[PRE15]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'or a hard-coded (quoted) string:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 或硬编码（带引号）的字符串：
- en: '[PRE16]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: load
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载
- en: 'Loads a custom template tag set. For example, the following template would
    load all the tags and filters registered in `somelibrary` and `otherlibrary` located
    in package `package`:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 加载自定义模板标签集。例如，以下模板将加载`somelibrary`和`otherlibrary`中注册的所有标签和过滤器，这些库位于`package`包中：
- en: '[PRE17]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: You can also selectively load individual filters or tags from a library, using
    the `from` argument.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用`from`参数从库中选择性地加载单个过滤器或标签。
- en: 'In this example, the template tags/filters named `foo` and `bar` will be loaded
    from `somelibrary`:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，模板标签/过滤器`foo`和`bar`将从`somelibrary`中加载：
- en: '[PRE18]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: See *Custom tag* and *Filter libraries* for more information.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 有关更多信息，请参阅*自定义标签*和*过滤器库*。
- en: lorem
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: lorem
- en: 'Displays random lorem ipsum Latin text. This is useful for providing sample
    data in templates. Usage:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 显示随机的lorem ipsum拉丁文。这对于在模板中提供示例数据很有用。用法：
- en: '[PRE19]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The `{% lorem %}` tag can be used with zero, one, two or three arguments. The
    arguments are:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`{% lorem %}`标签可以使用零个、一个、两个或三个参数。这些参数是：'
- en: '**Count:** A number (or variable) containing the number of paragraphs or words
    to generate (default is 1).'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**计数：**生成段落或单词的数量（默认为1）的数字（或变量）。'
- en: '**Method:** Either w for words, p for HTML paragraphs or b for plain-text paragraph
    blocks (default is b).'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**方法：**单词的w，HTML段落的p或纯文本段落块的b（默认为b）。'
- en: '**Random:** The word random, which if given, does not use the common paragraph
    (Lorem ipsum dolor sit amet...) when generating text.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**随机：**单词随机，如果给定，则在生成文本时不使用常见段落（Lorem ipsum dolor sit amet...）。'
- en: For example, `{% lorem 2 w random %}` will output two random Latin words.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`{% lorem 2 w random %}`将输出两个随机拉丁单词。
- en: now
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: now
- en: 'Displays the current date and/or time, using a format according to the given
    string. Such string can contain format specifiers characters as described in the
    `date` filter section. Example:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 显示当前日期和/或时间，使用与给定字符串相符的格式。该字符串可以包含格式说明符字符，如`date`过滤器部分所述。例如：
- en: '[PRE20]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The format passed can also be one of the predefined ones `DATE_FORMAT`, `DATETIME_FORMAT`,
    `SHORT_DATE_FORMAT`, or `SHORT_DATETIME_FORMAT`. The predefined formats may vary
    depending on the current locale and if format-localization is enabled, for example:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 传递的格式也可以是预定义的格式之一`DATE_FORMAT`、`DATETIME_FORMAT`、`SHORT_DATE_FORMAT`或`SHORT_DATETIME_FORMAT`。预定义的格式可能会根据当前区域设置和格式本地化的启用情况而有所不同，例如：
- en: '[PRE21]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: regroup
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: regroup
- en: Regroups a list of alike objects by a common attribute.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 通过共同属性对类似对象的列表进行重新分组。
- en: '`{% regroup %}` produces a list of *group objects*. Each group object has two
    attributes:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`{% regroup %}`生成*组对象*的列表。每个组对象有两个属性：'
- en: '`grouper`: The item that was grouped by (for example, the string India or Japan)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grouper`：按其共同属性进行分组的项目（例如，字符串India或Japan）'
- en: '`list`: A list of all items in this group (for example, a list of all cities
    with `country = "India"`)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`list`：此组中所有项目的列表（例如，所有`country = "India"`的城市列表）'
- en: Note that `{% regroup %}` does not order its input!
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，`{% regroup %}`不会对其输入进行排序！
- en: Any valid template lookup is a legal grouping attribute for the regroup tag,
    including methods, attributes, dictionary keys, and list items.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 任何有效的模板查找都是`regroup`标记的合法分组属性，包括方法、属性、字典键和列表项。
- en: spaceless
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: spaceless
- en: 'Removes whitespace between HTML tags. This includes tab characters and newlines.
    Example usage:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 删除HTML标签之间的空格。这包括制表符和换行符。例如用法：
- en: '[PRE22]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'This example would return this HTML:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例将返回此HTML：
- en: '[PRE23]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: templatetag
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: templatetag
- en: 'Outputs one of the syntax characters used to compose template tags. Since the
    template system has no concept of escaping, to display one of the bits used in
    template tags, you must use the `{% templatetag %}` tag. The argument tells which
    template bit to output:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 输出用于组成模板标记的语法字符之一。由于模板系统没有转义的概念，因此要显示模板标记中使用的位之一，必须使用`{% templatetag %}`标记。参数告诉要输出哪个模板位：
- en: '`openblock` outputs: `{%`'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openblock`输出：`{%`'
- en: '`closeblock` outputs: `%}`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closeblock`输出：`%}`'
- en: '`openvariable` outputs: `{{`'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openvariable`输出：`{{`'
- en: '`closevariable` outputs: `}}`'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closevariable`输出：`}}`'
- en: '`openbrace` outputs: `{`'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openbrace`输出：`{`'
- en: '`closebrace` outputs: `}`'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closebrace`输出：`}`'
- en: '`opencomment` outputs: `{#`'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`opencomment`输出：`{#`'
- en: '`closecomment` outputs: `#}`'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`closecomment`输出：`#}`'
- en: 'Sample usage:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 示例用法：
- en: '[PRE24]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: url
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: url
- en: 'Returns an absolute path reference (a URL without the domain name) matching
    a given view function and optional parameters. Any special characters in the resulting
    path will be encoded using `iri_to_uri()`. This is a way to output links without
    violating the DRY principle by having to hard-code URLs in your templates:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 返回与给定视图函数和可选参数匹配的绝对路径引用（不包括域名的URL）。结果路径中的任何特殊字符都将使用`iri_to_uri()`进行编码。这是一种在模板中输出链接的方法，而不违反DRY原则，因为不必在模板中硬编码URL：
- en: '[PRE25]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The first argument is a path to a view function in the format `package.package.module.function`.
    It can be a quoted literal or any other context variable. Additional arguments
    are optional and should be space-separated values that will be used as arguments
    in the URL.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个参数是视图函数的路径，格式为`package.package.module.function`。它可以是带引号的文字或任何其他上下文变量。其他参数是可选的，应该是用空格分隔的值，这些值将用作URL中的参数。
- en: verbatim
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: verbatim
- en: Stops the template engine from rendering the contents of this block tag. A common
    use is to allow a Javascript template layer that collides with Django's syntax.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 阻止模板引擎渲染此块标记的内容。常见用途是允许与Django语法冲突的JavaScript模板层。
- en: widthratio
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: widthratio
- en: 'For creating bar charts and such, this tag calculates the ratio of a given
    value to a maximum value, and then applies that ratio to a constant. For example:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 用于创建条形图等，此标记计算给定值与最大值的比率，然后将该比率应用于常数。例如：
- en: '[PRE26]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: with
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: with
- en: 'Caches a complex variable under a simpler name. This is useful when accessing
    an expensive method (for example, one that hits the database) multiple times.
    For example:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 将复杂变量缓存到更简单的名称下。在多次访问昂贵的方法（例如，多次访问数据库的方法）时很有用。例如：
- en: '[PRE27]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Built-in filters
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内置过滤器
- en: add
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: add
- en: 'Adds the argument to the value. For example:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将参数添加到值。例如：
- en: '[PRE28]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: If `value` is `4`, then the output will be `6`.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`4`，则输出将是`6`。
- en: addslashes
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: addslashes
- en: 'Adds slashes before quotes. Useful for escaping strings in CSV, for example.
    For example:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 在引号前添加斜杠。例如，在CSV中转义字符串很有用。例如：
- en: '[PRE29]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: If `value` is `I'm using Django`, the output will be `I'm using Django`.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`I'm using Django`，输出将是`I'm using Django`。
- en: capfirst
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: capfirst
- en: Capitalizes the first character of the value. If the first character is not
    a letter, this filter has no effect.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 将值的第一个字符大写。如果第一个字符不是字母，则此过滤器无效。
- en: center
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: center
- en: 'Centers the value in a field of a given width. For example:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 将值居中在给定宽度的字段中。例如：
- en: '[PRE30]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: If `value` is `Django`, the output will be  `Django`.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`Django`，输出将是`Django`。
- en: cut
  id: totrans-165
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: cut
- en: Removes all values of `arg` from the given string.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定字符串中删除所有`arg`的值。
- en: date
  id: totrans-167
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: date
- en: Formats a date according to the given format. Uses a similar format as PHP's
    `date()` function with some differences.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 根据给定的格式格式化日期。使用与PHP的`date()`函数类似的格式，但有一些不同之处。
- en: Note
  id: totrans-169
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: These format characters are not used in Django outside of templates. They were
    designed to be compatible with PHP to ease transitioning for designers. For a
    full list of format strings see the Django Project website at [https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date](https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date).
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这些格式字符在Django模板之外不使用。它们旨在与PHP兼容，以便设计人员更轻松地过渡。有关格式字符串的完整列表，请参见Django项目网站[https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date](https://docs.djangoproject.com/en/dev/ref/templates/builtins/#date)。
- en: 'For example:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 例如：
- en: '[PRE31]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: If `value` is a `datetime` object (for example, the result of `datetime.datetime.now()`),
    the output will be the string `Fri 01 Jul 2016`. The format passed can be one
    of the predefined ones `DATE_FORMAT`, `DATETIME_FORMAT`, `SHORT_DATE_FORMAT`,
    or `SHORT_DATETIME_FORMAT`, or a custom format that uses date format specifiers.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`datetime`对象（例如，`datetime.datetime.now()`的结果），输出将是字符串`Fri 01 Jul 2016`。传递的格式可以是预定义的`DATE_FORMAT`、`DATETIME_FORMAT`、`SHORT_DATE_FORMAT`或`SHORT_DATETIME_FORMAT`之一，也可以是使用日期格式说明符的自定义格式。
- en: default
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 默认
- en: 'If value evaluates to `False`, uses the given default. Otherwise, uses the
    value. For example:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值评估为`False`，则使用给定的默认值。否则，使用该值。例如：
- en: '[PRE32]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: default_if_none
  id: totrans-177
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: default_if_none
- en: If (and only if) value is `None`, uses the given default. Otherwise, uses the
    value.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 如果（且仅当）值为`None`，则使用给定的默认值。否则，使用该值。
- en: dictsort
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: dictsort
- en: 'Takes a list of dictionaries and returns that list sorted by the key given
    in the argument. For example:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 接受一个字典列表并返回按参数中给定的键排序的列表。例如：
- en: '[PRE33]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: dictsortreversed
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: dictsortreversed
- en: Takes a list of dictionaries and returns that list sorted in reverse order by
    the key given in the argument.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 接受一个字典列表并返回按参数中给定的键的相反顺序排序的列表。
- en: divisibleby
  id: totrans-184
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可被整除
- en: 'Returns `True` if the value is divisible by the argument. For example:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值可以被参数整除，则返回`True`。例如：
- en: '[PRE34]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: If `value` is `21`, the output would be `True`.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`21`，输出将是`True`。
- en: escape
  id: totrans-188
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转义
- en: 'Escapes a string''s HTML. Specifically, it makes these replacements:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 转义字符串的HTML。具体来说，它进行以下替换：
- en: '`<` is converted to `&lt;`'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<`转换为`&lt;`'
- en: '`>` is converted to `&gt;`'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`>`转换为`&gt;`'
- en: '`''` (single quote) is converted to `''`'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`''`（单引号）转换为`''`'
- en: '`"` (double quote) is converted to `&quot;`'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`"`（双引号）转换为`&quot;`'
- en: '`&` is converted to `&amp;`'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`&`转换为`&amp;`'
- en: 'The escaping is only applied when the string is output, so it does not matter
    where in a chained sequence of filters you put `escape`: it will always be applied
    as though it were the last filter.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 转义仅在输出字符串时应用，因此不管在过滤器的链式序列中放置`escape`的位置如何：它始终会被应用，就好像它是最后一个过滤器一样。
- en: escapejs
  id: totrans-196
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: escapejs
- en: Escapes characters for use in JavaScript strings. This does *not* make the string
    safe for use in HTML, but does protect you from syntax errors when using templates
    to generate JavaScript/JSON.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 转义用于JavaScript字符串。这并*不*使字符串在HTML中安全使用，但可以保护您免受在使用模板生成JavaScript/JSON时的语法错误。
- en: filesizeformat
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: filesizeformat
- en: 'Formats the value like a ''human-readable'' file size (that is, `''13 KB''`,
    `''4.1 MB''`, `''102 bytes''`, and more). For example:'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 格式化值，如“人类可读”的文件大小（即`'13 KB'`、`'4.1 MB'`、`'102 bytes'`等）。例如：
- en: '[PRE35]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: If `value` is `123456789`, the output would be `117.7 MB`.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`123456789`，输出将是`117.7 MB`。
- en: first
  id: totrans-202
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第一
- en: Returns the first item in a list.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列表中的第一项。
- en: floatformat
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: floatformat
- en: When used without an argument, rounds a floating-point number to one decimal
    place-but only if there's a decimal part to be displayed. If used with a numeric
    integer argument, `floatformat` rounds a number to that many decimal places.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 在没有参数的情况下使用时，将浮点数四舍五入到小数点后一位，但只有在有小数部分要显示时才会这样做。如果与数字整数参数一起使用，`floatformat`将将数字四舍五入到该小数位数。
- en: For example, if `value` is `34.23234`, `{{ value|floatformat:3 }}` will output
    `34.232`.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果“value”是“34.23234”，`{{ value|floatformat:3 }}`将输出`34.232`。
- en: get_digit
  id: totrans-207
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: get_digit
- en: Given a whole number, returns the requested digit, where 1 is the right-most
    digit.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 给定一个整数，返回请求的数字，其中1是最右边的数字。
- en: iriencode
  id: totrans-209
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iriencode
- en: Converts an **Internationalized Resource Identifier** (**IRI**) to a string
    that is suitable for including in a URL.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 将**国际化资源标识符**（**IRI**）转换为适合包含在URL中的字符串。
- en: join
  id: totrans-211
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: join
- en: Joins a list with a string, like Python's `str.join(list)`.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 使用字符串将列表连接起来，就像Python的`str.join(list)`一样。
- en: last
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最后
- en: Returns the last item in a list.
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列表中的最后一项。
- en: length
  id: totrans-215
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 长度
- en: Returns the length of the value. This works for both strings and lists.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 返回值的长度。这适用于字符串和列表。
- en: length_is
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: length_is
- en: 'Returns `True` if the value''s length is the argument, or `False` otherwise.
    For example:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值的长度是参数，则返回`True`，否则返回`False`。例如：
- en: '[PRE36]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: linebreaks
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: linebreaks
- en: Replaces line breaks in plain text with appropriate HTML; a single newline becomes
    an HTML line break (`<br />`) and a new line followed by a blank line becomes
    a paragraph break (`</p>`).
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 用适当的HTML替换纯文本中的换行符；单个换行符变成HTML换行符（`<br />`），换行符后面跟着一个空行变成段落换行符（`</p>`）。
- en: linebreaksbr
  id: totrans-222
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: linebreaksbr
- en: Converts all newlines in a piece of plain text to HTML line breaks (`<br />`).
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 将纯文本中的所有换行符转换为HTML换行符（`<br />`）。
- en: linenumbers
  id: totrans-224
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 行号
- en: Displays text with line numbers.
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 显示带有行号的文本。
- en: ljust
  id: totrans-226
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ljust
- en: 'Left-aligns the value in a field of a given width. For example:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 将值左对齐在给定宽度的字段中。例如：
- en: '[PRE37]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: If `value` is `Django`, the output will be `Django`.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`Django`，输出将是`Django`。
- en: lower
  id: totrans-230
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: lower
- en: Converts a string into all lowercase.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 将字符串转换为全部小写。
- en: make_list
  id: totrans-232
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: make_list
- en: Returns the value turned into a list. For a string, it's a list of characters.
    For an integer, the argument is cast into an Unicode string before creating a
    list.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 返回转换为列表的值。对于字符串，它是一个字符列表。对于整数，在创建列表之前，参数被转换为Unicode字符串。
- en: phone2numeric
  id: totrans-234
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: phone2numeric
- en: 'Converts a phone number (possibly containing letters) to its numerical equivalent.
    The input doesn''t have to be a valid phone number. This will happily convert
    any string. For example:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 将电话号码（可能包含字母）转换为其数字等价物。输入不一定是有效的电话号码。这将愉快地转换任何字符串。例如：
- en: '[PRE38]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: If `value` is `800-COLLECT`, the output will be `800-2655328`.
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`800-COLLECT`，输出将是`800-2655328`。
- en: pluralize
  id: totrans-238
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: pluralize
- en: Returns a plural suffix if the value is not `1`. By default, this suffix is
    `s`.
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如果值不是`1`，则返回复数后缀。默认情况下，此后缀为`s`。
- en: 'For words that don''t pluralize by simple suffix, you can specify both a singular
    and plural suffix, separated by a comma. Example:'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 对于不通过简单后缀复数化的单词，可以指定由逗号分隔的单数和复数后缀。例如：
- en: '[PRE39]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: pprint
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 漂亮打印
- en: A wrapper around `pprint.pprint()`--for debugging.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`pprint.pprint()`的包装器-用于调试。'
- en: random
  id: totrans-244
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 随机
- en: Returns a random item from the given list.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 从给定列表返回一个随机项。
- en: rjust
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: rjust
- en: 'Right-aligns the value in a field of a given width. For example:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 将值右对齐到给定宽度的字段。例如：
- en: '[PRE40]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: If `value` is `Django`, the output will be  `Django`.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`Django`，输出将是`Django`。
- en: safe
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全
- en: Marks a string as not requiring further HTML escaping prior to output. When
    autoescaping is off, this filter has no effect.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 将字符串标记为在输出之前不需要进一步的HTML转义。当自动转义关闭时，此过滤器没有效果。
- en: safeseq
  id: totrans-252
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: safeseq
- en: 'Applies the `safe` filter to each element of a sequence. Useful in conjunction
    with other filters that operate on sequences, such as `join`. For example:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 将`safe`过滤器应用于序列的每个元素。与操作序列的其他过滤器（如`join`）一起使用时很有用。例如：
- en: '[PRE41]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: You couldn't use the `safe` filter directly in this case, as it would first
    convert the variable into a string, rather than working with the individual elements
    of the sequence.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您不能直接使用`safe`过滤器，因为它首先会将变量转换为字符串，而不是处理序列的各个元素。
- en: slice
  id: totrans-256
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 切片
- en: Returns a slice of the list. Uses the same syntax as Python's list slicing.
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 返回列表的一个切片。使用与Python列表切片相同的语法。
- en: slugify
  id: totrans-258
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: slugify
- en: Converts to ASCII. Converts spaces to hyphens. Removes characters that aren't
    alphanumeric, underscores, or hyphens. Converts to lowercase. Also strips leading
    and trailing whitespace.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为ASCII。将空格转换为连字符。删除非字母数字、下划线或连字符的字符。转换为小写。还会去除前导和尾随空格。
- en: stringformat
  id: totrans-260
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: stringformat
- en: Formats the variable according to the argument, a string formatting specifier.
    This specifier uses Python string formatting syntax, with the exception that the
    leading % is dropped.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 根据参数格式化变量，一个字符串格式化说明符。此说明符使用Python字符串格式化语法，唯一的例外是省略了前导%。
- en: striptags
  id: totrans-262
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 去除标签
- en: 'Makes all possible efforts to strip all [X]HTML tags. For example:'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 尽一切可能去除所有[X]HTML标记。例如：
- en: '[PRE42]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: time
  id: totrans-265
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 时间
- en: Formats a time according to the given format. Given format can be the predefined
    one `TIME_FORMAT`, or a custom format, same as the `date` filter.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 根据给定的格式格式化时间。给定的格式可以是预定义的`TIME_FORMAT`，也可以是与`date`过滤器相同的自定义格式。
- en: timesince
  id: totrans-267
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: timesince
- en: Formats a date as the time since that date (for example, 4 days, 6 hours). Takes
    an optional argument that is a variable containing the date to use as the comparison
    point (without the argument, the comparison point is `now`).
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 将日期格式化为自那日期以来的时间（例如，4天，6小时）。接受一个可选参数，该参数是包含要用作比较点的日期的变量（没有参数，则比较点是`now`）。
- en: timeuntil
  id: totrans-269
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: timeuntil
- en: Measures the time from now until the given date or `datetime`.
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 从现在起测量到给定日期或`datetime`的时间。
- en: title
  id: totrans-271
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 标题
- en: Converts a string into title case by making words start with an uppercase character
    and the remaining characters lowercase.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使单词以大写字母开头并将其余字符转换为小写，将字符串转换为标题大小写。
- en: truncatechars
  id: totrans-273
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: truncatechars
- en: 'Truncates a string if it is longer than the specified number of characters.
    Truncated strings will end with a translatable ellipsis sequence (...). For example:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 如果字符串长度超过指定的字符数，则截断字符串。截断的字符串将以可翻译的省略号序列（...）结尾。例如：
- en: '[PRE43]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: truncatechars_html
  id: totrans-276
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: truncatechars_html
- en: Similar to `truncatechars`, except that it is aware of HTML tags.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`truncatechars`，只是它知道HTML标记。
- en: truncatewords
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: truncatewords
- en: Truncates a string after a certain number of words.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 在一定数量的单词后截断字符串。
- en: truncatewords_html
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: truncatewords_html
- en: Similar to `truncatewords`, except that it is aware of HTML tags.
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`truncatewords`，只是它知道HTML标记。
- en: unordered_list
  id: totrans-282
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: unordered_list
- en: Recursively takes a self-nested list and returns an HTML unordered list-without
    opening and closing tags.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 递归地获取自我嵌套列表并返回一个不带开放和关闭标签的HTML无序列表。
- en: upper
  id: totrans-284
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上限
- en: Converts a string into all uppercase.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 将字符串转换为大写。
- en: urlencode
  id: totrans-286
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: urlencode
- en: Escapes a value for use in a URL.
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 为在URL中使用而转义值。
- en: urlize
  id: totrans-288
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: urlize
- en: Converts URLs and email addresses in text into clickable links. This template
    tag works on links prefixed with `http://`, `https://`, or `www.`.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 将文本中的URL和电子邮件地址转换为可点击的链接。此模板标签适用于以`http://`、`https://`或`www.`为前缀的链接。
- en: urlizetrunc
  id: totrans-290
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: urlizetrunc
- en: 'Converts URLs and email addresses into clickable links just like `urlize`,
    but truncates URLs longer than the given character limit. For example:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 将URL和电子邮件地址转换为可点击的链接，就像`urlize`一样，但截断超过给定字符限制的URL。例如：
- en: '[PRE44]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: If `value` is `Check out www.djangoproject.com`, the output would be `Check
    out <a href="http://www.djangoproject.com" rel="nofollow">www.djangopr...</a>`.
    As with `urlize`, this filter should only be applied to plain text.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 如果`value`是`Check out www.djangoproject.com`，输出将是`Check out <a href="http://www.djangoproject.com"
    rel="nofollow">www.djangopr...</a>`。与`urlize`一样，此过滤器只应用于纯文本。
- en: wordcount
  id: totrans-294
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: wordcount
- en: Returns the number of words.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 返回单词数。
- en: wordwrap
  id: totrans-296
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: wordwrap
- en: Wraps words at specified line length.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在指定的行长度处包装单词。
- en: yesno
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: yesno
- en: 'Maps values for true, false and (optionally) None, to the strings yes, no,
    maybe, or a custom mapping passed as a comma-separated list, and returns one of
    those strings according to the value: For example:'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 将真、假和（可选）无映射值为字符串yes、no、maybe，或作为逗号分隔列表传递的自定义映射之一，并根据值返回其中之一：例如：
- en: '[PRE45]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: Internationalization tags and filters
  id: totrans-301
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 国际化标签和过滤器
- en: Django provides template tags and filters to control each aspect of internationalization
    in templates. They allow for granular control of translations, formatting, and
    time zone conversions.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: Django提供模板标签和过滤器来控制模板中国际化的每个方面。它们允许对翻译、格式化和时区转换进行细粒度控制。
- en: i18n
  id: totrans-303
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: i18n
- en: This library allows specifying translatable text in templates. To enable it,
    set `USE_I18N` to `True`, then load it with `{% load i18n %}`.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 此库允许在模板中指定可翻译的文本。要启用它，请将`USE_I18N`设置为`True`，然后使用`{% load i18n %}`加载它。
- en: l10n
  id: totrans-305
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: l10n
- en: This library provides control over the localization of values in templates.
    You only need to load the library using `{% load l10n %}`, but you'll often set
    `USE_L10N` to `True` so that localization is active by default.
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库提供了对模板中数值本地化的控制。你只需要使用`{% load l10n %}`加载库，但通常会将`USE_L10N`设置为`True`，以便默认情况下启用本地化。
- en: tz
  id: totrans-307
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: tz
- en: This library provides control over time zone conversions in templates. Like
    `l10n`, you only need to load the library using `{% load tz %}`, but you'll usually
    also set `USE_TZ` to `True` so that conversion to local time happens by default.
    See time-zones-in-templates.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库提供了对模板中时区转换的控制。像`l10n`一样，你只需要使用`{% load tz %}`加载库，但通常也会将`USE_TZ`设置为`True`，以便默认情况下进行本地时间转换。请参阅模板中的时区。
- en: Other tags and filters libraries
  id: totrans-309
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他标签和过滤器库
- en: static
  id: totrans-310
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: static
- en: To link to static files that are saved in `STATIC_ROOT` Django ships with a
    `static` template tag. You can use this regardless if you're using `RequestContext`
    or not.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 要链接到保存在`STATIC_ROOT`中的静态文件，Django附带了一个`static`模板标签。无论你是否使用`RequestContext`，你都可以使用它。
- en: '[PRE46]'
  id: totrans-312
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'It is also able to consume standard context variables, for example, assuming
    a `user_stylesheet` variable is passed to the template:'
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 它还能够使用标准上下文变量，例如，假设一个`user_stylesheet`变量被传递给模板：
- en: '[PRE47]'
  id: totrans-314
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'If you''d like to retrieve a static URL without displaying it, you can use
    a slightly different call:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要检索静态URL而不显示它，你可以使用稍微不同的调用：
- en: '[PRE48]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'The `staticfiles` contrib app also ships with a `static template tag` which
    uses `staticfiles` `STATICFILES_STORAGE` to build the URL of the given path (rather
    than simply using `urllib.parse.urljoin()` with the `STATIC_URL` setting and the
    given path). Use that instead if you have an advanced use case such as using a
    cloud service to serve static files:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: '`staticfiles` contrib应用程序还附带了一个`static模板标签`，它使用`staticfiles` `STATICFILES_STORAGE`来构建给定路径的URL（而不仅仅是使用`STATIC_URL`设置和给定路径的`urllib.parse.urljoin()`）。如果你有高级用例，比如使用云服务来提供静态文件，那就使用它：'
- en: '[PRE49]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: get_static_prefix
  id: totrans-319
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: get_static_prefix
- en: 'You should prefer the `static` template tag, but if you need more control over
    exactly where and how `STATIC_URL` is injected into the template, you can use
    the `get_static_prefix` template tag:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该优先使用`static`模板标签，但如果你需要更多控制`STATIC_URL`被注入到模板的位置和方式，你可以使用`get_static_prefix`模板标签：
- en: '[PRE50]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'There''s also a second form you can use to avoid extra processing if you need
    the value multiple times:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 还有第二种形式，如果你需要多次使用该值，可以避免额外的处理：
- en: '[PRE51]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: get_media_prefix
  id: totrans-324
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: get_media_prefix
- en: 'Similar to the `get_static_prefix`, `get_media_prefix` populates a template
    variable with the media prefix `MEDIA_URL`, for example:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于`get_static_prefix`，`get_media_prefix`会用媒体前缀`MEDIA_URL`填充模板变量，例如：
- en: '[PRE52]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: Django comes with a couple of other template-tag libraries that you have to
    enable explicitly in your `INSTALLED_APPS` setting and enable in your template
    with the `{% load %}` tag.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: Django还附带了一些其他模板标签库，你必须在`INSTALLED_APPS`设置中显式启用它们，并在模板中使用`{% load %}`标签启用它们。
