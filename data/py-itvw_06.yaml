- en: Chapter 6. Massimo Di Pierro
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。Massimo Di Pierro
- en: '![Massimo Di Pierro](img/B08180_12_01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Massimo Di Pierro](img/B08180_12_01.jpg)'
- en: Massimo Di Pierro is an Italian web developer, data science expert, and lecturer.
    For the last 15 years, Massimo has been a professor for the School of Computing
    at DePaul University in Chicago. He is the inventor and lead developer of web2py,
    an open source web application framework written in Python. Massimo is a regular
    contributor to open source Python projects around the world and has published
    three books on Python, including *Annotated Algorithms in Python*. His active
    work in the Python community has seen him elected a member of the Python Software
    Foundation (PSF).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Massimo Di Pierro是一位意大利网络开发者、数据科学专家和讲师。在过去15年里，Massimo在芝加哥的德保罗大学计算机学院担任教授。他是开源网络应用框架web2py的发明者和主要开发者，该框架是用Python编写的。Massimo是全球开源Python项目的常规贡献者，并出版了三本关于Python的书籍，包括《Python注释算法》。他在Python社区中的活跃工作使他被选为Python软件基金会（PSF）的成员。
- en: '**Discussion themes: web2py, Python books, v2.7/v3.x.**'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**讨论主题：web2py、Python书籍、v2.7/v3.x。**'
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Massimo Di Pierro here: @mdipierro**'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**在这里与Massimo Di Pierro取得联系：@mdipierro**'
- en: '**Mike Driscoll**: How did you become a computer programmer?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mike Driscoll**: 你是如何成为一名计算机程序员的？'
- en: '**Massimo Di Pierro**: So I am a physicist, but I actually started computer
    programming when I was in middle school. My dad had the IBM PC at home. He was
    a COBOL programmer and he was mostly working with accounting software.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Massimo Di Pierro**: 所以我是一名物理学家，但实际上我是在中学时开始学习计算机编程的。我爸爸在家里有IBM PC。他是一名COBOL程序员，他主要使用会计软件。'
- en: When I was 13 years old, my dad gave a lecture on COBOL. I went with him and
    he thought I was just tagging along, but I understood what he was saying and something
    clicked. My dad then got me a Commodore 64 and I started programming in BASIC
    first, and Pascal later.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当我13岁时，我爸爸给我讲了一堂COBOL课。我和他一起去，他以为我只是跟着去，但我理解他在说什么，然后我有所领悟。我爸爸后来给我买了一台Commodore
    64，我开始用BASIC编程，后来又用Pascal。
- en: '**Driscoll**: So how did you get into the Python language?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 你是如何接触到Python语言的？'
- en: '**Di Pierro**: That was much later. I was doing my Ph.D. in the UK and I was
    mostly programming in Fortran, C, and C++. My work was on lattice quantum chromodynamics
    and my machine was a Cray T3E. That was when I started learning Python. At the
    time, it was mostly used as a tool to automate the processing of file and scripting
    maintenance tasks. By 2004, it had become my favorite language.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**Di Pierro**: 那是在很久以后。我在英国读博士，那时我主要用Fortran、C和C++编程。我的工作是在晶格量子色动力学领域，我的机器是Cray
    T3E。那是我开始学习Python的时候。当时，Python主要被用作自动化文件处理和脚本维护任务的工具。到2004年，它已经成为我最喜欢的语言。'
- en: '**Driscoll**: Was there some epiphany that made you decide that Python was
    your favorite language, or were you just using the language so much?'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 是有什么顿悟让你决定Python是你的最爱语言，还是你只是大量使用这个语言？'
- en: '**Di Pierro**: So, at the time, a lot of the libraries that exist today were
    either not available, or not as mature.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**Di Pierro**: 那么，当时很多现在存在的库要么不可用，要么不够成熟。'
- en: 'The thing that I really liked about Python was that I could do introspection:
    I could ask a function what its arguments were. So using Python, I could write
    code that would understand itself to some extent.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我真正喜欢Python的地方在于我可以进行内省：我可以询问一个函数它的参数是什么。所以使用Python，我可以编写出在一定程度上能理解自己的代码。
- en: '**Di Pierro: ''Using Python, I could write code that would understand itself
    to some extent.''**'
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Di Pierro: ''使用Python，我可以编写出在一定程度上能理解自己的代码。''**'
- en: I remember doing something similar in BASIC many years before, but I could not
    easily do that in a language like C++. I really liked the idea of writing a program
    that could rewrite itself. For example, I have written a library called OCL that
    allows me to decorate some simple functions in Python, and they get converted
    at runtime, in C or OpenCL, and run at a higher speed (it uses PyOpenCL).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得在多年前用BASIC做过类似的事情，但在C++这样的语言中我无法轻易做到。我真的很喜欢编写能够重写自己的程序的想法。例如，我编写了一个名为OCL的库，它允许我在Python中装饰一些简单的函数，它们在运行时会被转换成C或OpenCL，并以更高的速度运行（它使用PyOpenCL）。
- en: '**Driscoll**: So what made you create web2py?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 那么，是什么让你创造了web2py？'
- en: '**Di Pierro**: So web2py started in 2007\. At that time, the two most popular
    Python frameworks were Django and TurboGears. I had two needs: I wanted to teach
    web development in the model-view-controller architecture, and for myself I needed
    to build some web apps.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**Di Pierro**：所以 web2py 是在 2007 年开始的。当时，最受欢迎的两个 Python 框架是 Django 和 TurboGears。我有两个需求：我想在模型-视图-控制器架构中教授网络开发，而且我自己需要构建一些网络应用。'
- en: I was evaluating Django and TurboGears, and I had been using Django for some
    time. I had built a content management system for the United Nations in Django,
    as pro bono work with the university. So I knew Django pretty well, but I thought
    that Django was verbose and kind of difficult to teach as a first framework.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我当时正在评估 Django 和 TurboGears，并且我已经使用 Django 有一段时间了。我为联合国开发了一个内容管理系统，这是大学的一项无偿工作。所以我对
    Django 非常了解，但我认为 Django 语法冗长，作为初学框架来说有点难以教授。
- en: In order to be able to prime in Django for example, you needed to have some
    familiarity with the Bash shell and some system administration tools. A lot of
    my students at that time did not have that experience. So I wanted to teach web
    development in Python, but for me to go through all the tools to get to that point
    was too much work. I needed a framework that would download a file, start, and
    do everything through the web interface.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 Django 中进行初始化，你需要对 Bash shell 和一些系统管理工具有所了解。当时我很多学生都没有这样的经验。所以我想要教授 Python
    网络开发，但对我来说，通过所有这些工具到达那个点的工作量太大。我需要一个框架，它能下载一个文件，启动，并通过网络界面完成所有操作。
- en: '**Di Pierro: ''I needed a framework that would download a file, start, and
    do everything through the web interface.''**'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Di Pierro**：“我需要一个框架，它能下载一个文件，启动，并通过网络界面完成所有操作。”'
- en: I also worked in TurboGears, which in many ways I liked better than Django.
    But TurboGears was going through a big transition. It was a framework assembled
    out of components, and a lot of the components were being replaced, because they
    were not being maintained.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我还在 TurboGears 上工作过，在很多方面我更喜欢它，但 TurboGears 正处于一个大的转型期。它是一个由组件组成的框架，很多组件正在被替换，因为它们没有得到维护。
- en: TurboGears did not appear to have a stable API and therefore it was not suitable
    for me as a teaching tool. So I decided to apply what I had learned, and build
    a framework which, in my opinion, was simpler to start with. I never thought that
    framework would become as popular as it did.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: TurboGears 似乎没有一个稳定的 API，因此它不适合我作为教学工具。所以我决定应用我所学的知识，构建一个我认为更容易开始的框架。我从未想过这个框架会像现在这样受欢迎。
- en: '**Di Pierro: ''I decided to apply what I had learned, and build a framework
    which, in my opinion, was simpler to start with.''**'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Di Pierro**：“我决定应用我所学的知识，构建一个我认为更容易开始的框架。”'
- en: '**Driscoll**: So what do you consider to be the most important lesson that
    you learned while you were creating web2py?'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：那么，你认为你在创建 web2py 的过程中学到的最重要的教训是什么？'
- en: '**Di Pierro**: The most important lesson that I learned was the importance
    of building a community. I got to know a lot of people by working with them remotely,
    although many of them I have still never met.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**Di Pierro**：我学到的最重要的教训是建立社区的重要性。通过远程工作，我认识了很多很多人，尽管其中很多人我至今都没有见过。'
- en: When I started web2py I was not familiar with collaboration tools like Git.
    The first version of web2py used Launchpad. I remember having interactions where
    people just sent me emails offering their help or making suggestions. I was not
    prepared for that.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我开始开发 web2py 时，我对像 Git 这样的协作工具并不熟悉。web2py 的第一个版本使用了 Launchpad。我记得有人通过电子邮件给我发邮件提供帮助或提出建议。我对此并没有做好准备。
- en: '**Di Pierro: ''I still consider it a critical skill being able to collaborate
    with people remotely, even if you don''t know them personally.''**'
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Di Pierro**：“我仍然认为能够与远程的人进行协作是一项关键技能，即使你并不认识他们。”'
- en: I didn't know exactly how to handle collaboration for many years. Today, I still
    consider it a critical skill being able to collaborate with people remotely, even
    if you don't know them personally. I mean, eventually I got to know them and trust
    them a lot. Some of the people I trust the most are people I met through web2py.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道如何处理协作很多年。今天，我仍然认为能够与远程的人进行协作是一项关键技能，即使你并不认识他们。我的意思是，最终我认识并信任了他们。我最信任的一些人是我通过
    web2py 认识的。
- en: '**Driscoll**: Are there any features that you''ve seen in FaaS or Django that
    you think would be good in web2py?'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你有没有在 FaaS 或 Django 中看到任何你认为适合 web2py 的功能？'
- en: '**Di Pierro**: web2py owes a lot to Django, as many ideas came from it, as
    well as from other frameworks. Yet, we added into web2py many features that Django
    did not have at the time. For example, stronger default security settings, like
    always escaping strings by default. The frameworks have very different philosophies.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪·皮埃罗**：web2py在很大程度上得益于Django，因为许多想法都来自它，以及其他框架。然而，我们在web2py中添加了许多Django当时没有的特性。例如，更强的默认安全设置，如默认情况下总是转义字符串。这些框架有着非常不同的哲学。'
- en: There are many projects that use Django and each one has a different name and
    its own maintainers. They are very advanced and very well maintained. In web2py,
    we try to keep everything in one package, so that we don't have a big ecosystem
    outside of the framework.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多使用Django的项目，每个项目都有自己的名称和维护者。它们非常先进，维护得很好。在web2py中，我们试图将所有内容都放在一个包中，这样我们就不需要在框架之外有一个庞大的生态系统。
- en: '**Di Pierro: ''web2py owes a lot to Django, as many ideas came from it, as
    well as from other frameworks.''**'
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪·皮埃罗**：“web2py在很大程度上得益于Django，因为许多想法都来自它，以及其他框架。”'
- en: There are many ideas from web2py that originated in other frameworks, but I
    believe that we improved on some of those ideas. For example, the mechanism for
    form generation and processing in web2py is not unique but, when it was developed,
    it was better than the competition.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: web2py中有许多来自其他框架的想法，但我相信我们在一些想法上有所改进。例如，web2py中表单生成和处理的机制并不独特，但在开发时，它比竞争对手更好。
- en: The model-view-controller design architecture was mostly taken from Django and
    the URL mapping was also very similar. For the latter, we gave it default routing
    rules, like in Ruby on Rails. For the template language, we decided that we didn't
    want a domain-specific language. Instead, we wanted pure Python in templates,
    which is kind of the same model as the ERB template language in Ruby on Rails,
    but using the Python language.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 模型-视图-控制器设计架构主要来自Django，URL映射也非常相似。对于后者，我们提供了默认路由规则，就像在Ruby on Rails中一样。对于模板语言，我们决定我们不希望有一个特定领域的语言。相反，我们希望在模板中使用纯Python，这与Ruby
    on Rails中的ERB模板语言有点相似，但使用Python语言。
- en: There are other features, that were added later in web2py that were also inspired
    by other frameworks. For example, one thing I liked from Flask was this idea of
    thread-local variables. So thread-local would allow any module to access the current
    request object, the current response object, or the current session, even if the
    code was rooted in a module which was imported from somewhere else. I liked the
    way Flask handled that.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在web2py中后来添加的其他特性，也受到了其他框架的启发。例如，我从Flask中喜欢的一个想法是线程局部变量的概念。所以线程局部变量允许任何模块访问当前的请求对象、当前响应对象或当前会话，即使代码是从其他地方导入的模块中根生的。我喜欢Flask处理这个问题的方法。
- en: So there are definitely many ideas that came from other frameworks and I think
    there's been a lot of learning from each other. Not everybody admits that, but
    I'm happy to admit it.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，确实有很多来自其他框架的想法，我认为彼此之间有很多学习。并不是每个人都承认这一点，但我很高兴承认这一点。
- en: '**Di Pierro: ''There''s been a lot of learning from each other. Not everybody
    admits that, but I''m happy to admit it.''**'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪·皮埃罗**：“彼此之间有很多学习。并不是每个人都承认这一点，但我很高兴承认这一点。”'
- en: '**Driscoll**: So I saw that you started self-publishing books. How did that
    happen?'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：所以我看到你开始自出版书籍。这是怎么发生的？'
- en: '**Di Pierro**: I''m an academic, so I''m supposed to write papers and write
    books. Because I was writing documentation for software, it was extremely important
    for me to have the ability to update the content of a book quickly. Self-publishing
    allows that.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪·皮埃罗**：我是一名学者，所以我应该写论文和写书。因为我正在为软件编写文档，所以我能够快速更新书籍内容的能力对我来说非常重要。自出版允许这样做。'
- en: I really believe in open source, not just for code, but in general for educational
    content. I self-publish my books almost at cost and I make them available for
    free download. For me, making the content up-to-date and available quickly is
    the priority.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我真的相信开源，不仅是对代码，而且在一般的教育内容上也是如此。我几乎以成本价自出版我的书籍，并免费提供下载。对我来说，使内容保持最新和快速提供是首要任务。
- en: Moreover, if I write a book, then it is because I want people to read it, not
    because I think there is a profit to be made. In the end, the validation of the
    content comes from the readers and not from the publisher. So I found that self-publishing
    was ideal for me. That said, once you're done with a book, then you don't want
    to touch it too much. Instead, you want to write another book!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果我写一本书，那是因为我想让人们阅读它，而不是因为我认为可以从中获利。最终，内容的验证来自读者，而不是出版商。所以我发现自出版对我来说是理想的。话虽如此，一旦你完成了一本书，你就不想再碰它太多。相反，你想要写另一本书！
- en: '**Driscoll**: Did you have any challenges that you needed to overcome when
    you were writing your books?'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：你在写书时遇到了哪些挑战需要克服？'
- en: '**Di Pierro**: Well, first of all, I''m not a native English speaker. So I
    can write, but I tend to make a lot of mistakes. It takes me forever to review
    things and make sure that they are fixed.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪·皮耶罗**：首先，我不是母语为英语的人。所以我会写，但我倾向于犯很多错误。我花了很多时间来审查事情并确保它们被修复。'
- en: '**Di Pierro: ''Even if I consider myself an expert, that does not mean that
    I know everything about a subject.''**'
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪·皮耶罗**：“即使我认为自己是专家，这并不意味着我了解一个主题的所有内容。”'
- en: Another challenge is that even if I consider myself an expert, that does not
    mean that I know everything about a subject. I always have a process, which is
    to write the code first. Then I look at the code and I turn the code into a paper
    or a book. In that way, I manage to make the text consistent with the code examples.
    If you change the code after you've written the text, then sometimes the text
    gets out of sync, so I really try to make sure that my examples are as good and
    as complete as possible.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个挑战是，即使我认为自己是专家，这并不意味着我了解一个主题的所有内容。我总是有一个过程，那就是先写代码。然后我看代码，把代码变成论文或书籍。这样，我设法使文本与代码示例保持一致。如果你在写完文本后更改了代码，那么有时文本就会脱节，所以我真的很想确保我的示例尽可能好、尽可能完整。
- en: One challenge surrounding the book *web2py* was that I had a lot of people submitting
    pull requests to the book on GitHub. They initially contributed by making small
    corrections, but now sometimes they contribute quite substantially.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 围绕《web2py》这本书的一个挑战是，我收到了很多人在GitHub上提交给这本书的拉取请求。他们最初通过进行小的修正来做出贡献，但现在有时他们贡献得相当多。
- en: Keeping track of contributors was difficult, because I knew their GitHub names,
    but I couldn't acknowledge them as people properly. People always send me code,
    but they never submit the pull request in the acknowledgements section. It's work
    for me to figure out who these people are to acknowledge them.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 跟踪贡献者很困难，因为我知道他们的GitHub名字，但无法正确地认可他们。人们总是给我发代码，但他们从未在致谢部分提交拉取请求。为了认可这些人，我需要做很多工作。
- en: '**Driscoll**: So as a scientist, or a teacher, how do you see Python helping
    the scientific community?'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：那么作为一个科学家或教师，你是如何看待Python帮助科学界的？'
- en: '**Di Pierro**: I can see that Python has been growing a lot and especially
    within the scientific community. In particular, I''ve seen growth with all of
    the machine learning stuff that''s been coming out, such as sklearn, TensorFlow,
    and Keras.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪·皮耶罗**：我发现Python已经发展得非常快，尤其是在科学界。特别是，我看到了随着sklearn、TensorFlow和Keras等机器学习工具的出现而带来的增长。'
- en: I remember when I started teaching 15 years ago, people didn't know what Python
    was. Some colleagues were objecting to a switch from Java to Python as the primary
    teaching language. Python was considered by many to be "only a scripting language"
    and something very specialized.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我记得当我15年前开始教学时，人们不知道Python是什么。一些同事反对将Java切换为Python作为主要教学语言。许多人认为Python“仅仅是一种脚本语言”，并且非常专业化。
- en: '**Di Pierro: ''Python was considered by many to be "only a scripting language"
    and something very specialized.''**'
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪·皮耶罗**：“许多人认为Python“仅仅是一种脚本语言”，并且非常专业化。”'
- en: Today, in almost every class we teach, whether it's a neural network class,
    a machine learning class, or a data analysis class, almost everybody uses Python.
    So things have really changed a lot in that respect.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在我们教授的几乎每一门课程中，无论是神经网络课程、机器学习课程还是数据分析课程，几乎每个人都使用Python。在这方面，事情真的发生了很大的变化。
- en: '**Di Pierro: ''The major problem I see is that the relation between Python
    2 and Python 3 is still an issue.''**'
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪·皮耶罗**：“我看到的最大问题是Python 2和Python 3之间的关系仍然是一个问题。”'
- en: The major problem I see is that the relation between Python 2 and Python 3 is
    still an issue. At DePaul University, we use Python 3 almost everywhere, whereas
    the industry still uses mostly Python 2 everywhere, which is a problem sometimes.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我看到的主要问题是Python 2和Python 3之间的关系仍然是一个问题。在德保罗大学，我们几乎到处都在使用Python 3，而行业仍然主要使用Python
    2，这在某些时候是个问题。
- en: Another issue is that very few people use the new async logic that is available
    in Python 3\. I think Python's new async logic is really powerful, but it's not
    as friendly as JavaScript's async logic. People who really like event-driven async
    programming tend to prefer JavaScript (and Node.js) over Python.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题是非常少的人使用Python 3中可用的新的异步逻辑。我认为Python的新异步逻辑非常强大，但它不像JavaScript的异步逻辑那样友好。真正喜欢事件驱动异步编程的人往往更倾向于选择JavaScript（和Node.js）而不是Python。
- en: '**Di Pierro: ''I think Python''s new async logic is really powerful, but it''s
    not as friendly as JavaScript''s async logic.''**'
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪皮埃罗**：“我认为Python的新异步逻辑非常强大，但它不像JavaScript的异步逻辑那样友好。”'
- en: '**Driscoll**: I''m actually a little bit concerned about these other companies
    that are starting to support Python 2\. What do you think is going to happen to
    these splinter groups, that are following Anaconda or Intel, if they continue
    to support Python 2 instead of 3?'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：“我实际上对开始支持Python 2的其他公司有点担心。如果他们继续支持Python 2而不是Python 3，您认为这些分裂的小组会发生什么，尤其是那些跟随Anaconda或Intel的小组？”'
- en: '**Di Pierro**: Well, I don''t argue about the fact that Python 3 is a better
    language than Python 2, but I think that migration from Python 2 to Python 3 is
    difficult. It cannot be completely automated and often it requires understanding
    the code. People do not want to touch things that currently work.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪皮埃罗**：“嗯，我不争论Python 3比Python 2更好的事实，但我认为从Python 2迁移到Python 3是困难的。这不能完全自动化，通常它需要理解代码。人们不愿意去碰那些目前还在工作的事物。”'
- en: '**Di Pierro: ''I don''t argue about the fact that Python 3 is a better language
    than Python 2, but I think that migration from Python 2 to Python 3 is difficult.''**'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**迪皮埃罗**：“我不争论Python 3比Python 2更好的事实，但我认为从Python 2迁移到Python 3是困难的。”'
- en: For example, the `str` function in Python 2 converts to a string of bytes, but
    in Python 3, it converts to Unicode. So this makes it impossible to switch from
    Python 2 to Python 3, without actually going through the code and understanding
    what type of input is being passed to the function, and what kind of output is
    expected.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Python 2中的`str`函数将转换为字节字符串，但在Python 3中，它转换为Unicode。这使得在没有实际通过代码并理解传递给函数的输入类型和预期的输出类型的情况下，从Python
    2切换到Python 3变得不可能。
- en: 'A naïve conversion may work very well as long as you don''t have any strange
    characters in your input (like byte sequences that do not map into Unicode). When
    that happens, you don''t know if the code is doing what it was supposed to do
    originally or not. Consider banks, for example. They have huge codebases in Python,
    which have been developed and tested over many years. They are not going to switch
    easily because it is difficult to justify that cost. Consider this: some banks
    still use COBOL.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的输入中没有奇怪的字符（比如不映射到Unicode的字节序列），那么简单的转换可能工作得很好。当这种情况发生时，你不知道代码是否在执行它原本应该执行的操作。以银行为例，他们有巨大的Python代码库，这些代码经过多年的开发和测试。他们不会轻易转换，因为这很难证明这种成本是合理的。考虑这一点：一些银行仍在使用COBOL。
- en: There are tools to help with the transition from Python 2 to Python 3\. I'm
    not really an expert on those tools, so a lot of the problems I see may have a
    solution that I'm not aware of. But I still found that each time I had to convert
    code, this process was not as straightforward as I would like.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有工具可以帮助从Python 2迁移到Python 3。我并不是这些工具的专家，所以我看到的大部分问题可能都有解决方案，但我并不知情。但每次我需要转换代码时，这个过程都没有我想象的那么简单。
- en: '**Driscoll**: Do you see Python having any challenges in its adoption by data
    science?'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：您是否看到Python在数据科学领域的采用有任何挑战？'
- en: '**Di Pierro**: I think that data scientists love Python. The major competitor
    is R and I get the impression that R is more popular among economists and statisticians.
    But I don''t think R is more popular because it''s better, only because it has
    been around longer and it is more focused.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**迪皮埃罗**：“我认为数据科学家喜欢Python。主要竞争对手是R，我有一种印象，R在经济学家和统计学家中更受欢迎。但我不认为R更受欢迎是因为它更好，只是因为它存在的时间更长，而且它更专注于这一点。”'
- en: R has been around for a long time and people know what they can do with R. The
    people who know the language well don't see the need to learn something different.
    R has always been focused on data science specifically, so people in that community
    are more familiar with that language.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: R 语言已经存在很长时间了，人们都知道他们可以用 R 做些什么。那些精通这种语言的人并不觉得有必要学习其他的东西。R 语言始终专注于数据科学领域，因此那个社区的人对这种语言更为熟悉。
- en: '**Di Pierro: ''I see Python being adopted more and more and eventually becoming
    more popular than R for data science.''**'
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Di Pierro**: “我看到 Python 被越来越多人采用，最终可能会比 R 更受欢迎，用于数据科学。”'
- en: I would compare R not so much with Python as a language, but with the pandas
    library. I think that Python plus pandas makes a compelling case in a comparison
    with R. That, in fact, is what I am using right now in a machine learning class.
    But I see Python being adopted more and more and eventually becoming more popular
    than R for data science. I've no doubt that will happen.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会将 R 语言与 Python 语言本身进行比较，而是将其与 pandas 库进行比较。我认为 Python 加上 pandas 在与 R 的比较中构成了一个很有说服力的案例。事实上，这正是我现在在机器学习课程中使用的方法。但我看到
    Python 被越来越多人采用，最终可能会比 R 更受欢迎，用于数据科学。我毫不怀疑这一点将会发生。
- en: '**Driscoll**: Thank you, Massimo Di Pierro.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 谢谢，Massimo Di Pierro。'
