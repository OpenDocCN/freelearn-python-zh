- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'The setting is familiar enough: you''re a web developer who has worked with
    a few programming languages, frameworks and environments, and decided to learn
    enough Python to make a few toy web applications. Maybe you''ve already used some
    Python web frameworks to build an application or two, and want to explore a few
    of the alternative options that you keep hearing about.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 情景很熟悉：你是一名网页开发者，已经使用过几种编程语言、框架和环境，决定学习足够的Python来制作一些玩具网页应用程序。也许你已经使用过一些Python网页框架来构建一个或两个应用程序，并且想探索一些你一直听说过的替代选项。
- en: This is usually how people come to know about Flask.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常是人们了解Flask的方式。
- en: 'As a microframework, Flask is built to help you and then get out of your way.
    Taking a very different approach from most other general-purpose web frameworks,
    Flask consists of a very small core that handles the processing and normalization
    of HTTP and the WSGI specification (via Werkzeug) and provides an exceptionally
    good templating language (via Jinja2). The beauty of Flask lies in its intrinsic
    extensibility: as it was designed from the start to do very little, it was also
    designed to be extended very easily. A pleasant consequence of this is that you
    are not beholden to a particular database abstraction layer, authentication protocol,
    or caching mechanism.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个微框架，Flask旨在帮助你，然后不再干涉你。与大多数其他通用网页框架采取非常不同的方法，Flask由一个非常小的核心组成，处理和规范化HTTP和WSGI规范（通过Werkzeug），并提供一个非常好的模板语言（通过Jinja2）。Flask的美妙之处在于其固有的可扩展性：由于它从一开始就被设计为做得很少，因此也很容易扩展。这样做的一个愉快的结果是，你不必受制于特定的数据库抽象层、身份验证协议或缓存机制。
- en: 'Learning a new framework is not simply about learning the basic functions and
    objects that are provided to you: it''s often as important to learn how the framework
    can be adapted to help you build the specific requirements of your application.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 学习一个新的框架不仅仅是学习提供给你的基本功能和对象：同样重要的是学习如何调整框架以帮助你构建应用程序的特定要求。
- en: This book will demonstrate how to develop a series of web application projects
    with the Python web microframework, and leverage extensions and external Python
    libraries/APIs to extend the development of a variety of larger and more complex
    web applications.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书将演示如何使用Python网页微框架开发一系列网页应用程序项目，并利用扩展和外部Python库/API来扩展各种更大更复杂的网页应用程序的开发。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](ch01.html "Chapter 1. Starting on the Right Foot – Using Virtualenv"),
    *Starting on the Right Foot – Using Virtualenv*, kicks off our dive into Python
    web application development with the basics of using and managing virtual environments
    to isolate the application dependencies. We will look at the setup tools, pip,
    libraries, and utilities that are used to install and distribute reusable packages
    of Python code, and virtualenv, a tool to create isolated environments for the
    Python-based software requirements of a project. We will also discuss what these
    tools are not able to do, and look at the virtualenvwrapper abstraction to augment
    the functionality that virtualenv provides.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。从正确的角度开始-使用Virtualenv")，“从正确的角度开始-使用Virtualenv”，开始了我们对Python网页应用程序开发的深入探讨，介绍了使用和管理虚拟环境来隔离应用程序依赖关系的基础知识。我们将研究安装和分发可重用的Python代码包的设置工具、pip、库和实用程序，以及virtualenv，这是一个用于创建项目的基于Python软件要求的隔离环境的工具。我们还将讨论这些工具无法做到的事情，并研究virtualenvwrapper抽象，以增强virtualenv提供的功能。'
- en: '[Chapter 2](ch02.html "Chapter 2. Small to Big – Growing the Flask Application
    Structure"), *Small to Big – Growing the Flask Application Structure*, explores
    the various baseline layouts and configurations that you might consider for a
    Flask application. The pros and cons of each approach are outlined as we progress
    from the simplest one-file application structure to the more complex, multipackage
    Blueprint architecture.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。从小到大-扩展Flask应用程序结构")，“从小到大-扩展Flask应用程序结构”，探讨了你可能考虑为Flask应用程序考虑的各种基线布局和配置。随着我们从最简单的单文件应用程序结构逐渐进展到更复杂的多包蓝图架构，我们概述了每种方法的利弊。'
- en: '[Chapter 3](ch03.html "Chapter 3. Snap – the Code Snippet Sharing Application"),
    *Snap – the Code Snippet Sharing Application*, builds our first simple Flask application
    centered around learning the basics of one of the most popular relational database
    abstractions, SQLAlchemy, and several of the most popular Flask extensions: Flask-Login
    to handle authenticated user login sessions, Flask-Bcrypt to ensure that account
    passwords are stored in a secure manner, and Flask-WTF to create and process form-based
    input data.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。Snap-代码片段共享应用程序")，“Snap-代码片段共享应用程序”，构建了我们的第一个简单的Flask应用程序，重点是学习最流行的关系数据库抽象之一，SQLAlchemy，以及一些最流行的Flask扩展：Flask-Login用于处理经过身份验证的用户登录会话，Flask-Bcrypt确保帐户密码以安全方式存储，Flask-WTF用于创建和处理基于表单的输入数据。'
- en: '[Chapter 4](ch04.html "Chapter 4. Socializer – the Testable Timeline"), *Socializer
    – the Testable Timeline*, builds a very simple data model for a social web application
    where the main focus is on unit and functional testing using pytest, the Python
    testing framework and tools. We will also explore the use of the application factory
    pattern, which allows us to instantiate separate versions of our application for
    the purposes of simplifying testing. Additionally, the use and creation of often-omitted
    (and forgotten) signals, provided by the Blinker library, are described in detail.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。Socializer-可测试的时间轴")，“Socializer-可测试的时间轴”，为社交网页应用程序构建了一个非常简单的数据模型，主要关注使用pytest，Python测试框架和工具进行单元和功能测试。我们还将探讨应用程序工厂模式的使用，该模式允许我们为简化测试目的实例化我们应用程序的不同版本。此外，详细描述了Blinker库提供的常常被省略（和遗忘）的信号的使用和创建。'
- en: '[Chapter 5](ch05.html "Chapter 5. Shutterbug, the Photo Stream API"), *Shutterbug,
    the Photo Stream API*, builds a skeleton of an application around a JSON-based
    API, which is a requirement for any modern web application these days. One of
    the many API-based Flask extensions, Flask-RESTful, is used to prototype the API,
    where we also delve into simple authentication mechanisms for stateless systems
    and even write a few tests along the way. A short detour is made into the world
    of Werkzeug, the WSGI toolkit that Flask is built upon, to build a custom WSGI
    middleware that allows the seamless handling of URI-based version numbers for
    our nascent API.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。Shutterbug，Photo Stream API")，*Shutterbug，Photo Stream
    API*，围绕基于JSON的API构建了一个应用程序的框架，这是当今任何现代Web应用程序的要求。我们使用了许多基于API的Flask扩展之一，Flask-RESTful，用于原型设计API，我们还深入研究了无状态系统的简单身份验证机制，并在此过程中编写了一些测试。我们还短暂地进入了Werkzeug的世界，这是Flask构建的WSGI工具包，用于构建自定义WSGI中间件，允许无缝处理基于URI的版本号，以适应我们新生API的需求。'
- en: '[Chapter 6](ch06.html "Chapter 6. Hublot – Flask CLI Tools"), *Hublot – Flask
    CLI Tools*, covers a topic that is often omitted from most web application framework
    discussions: command-line tools. The use of Flask-Script is explained, and several
    CLI-based tools are created to interact with the data models of our application.
    Additionally, we will build our very own custom Flask extension that wraps an
    existing Python library to fetch the repository and issue information from the
    GitHub API.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。Hublot – Flask CLI Tools")，*Hublot – Flask CLI Tools*，涵盖了大多数Web应用程序框架讨论中经常省略的一个主题：命令行工具。解释了Flask-Script的使用，并创建了几个基于CLI的工具，以与我们应用程序的数据模型进行交互。此外，我们将构建我们自己的自定义Flask扩展，用于包装现有的Python库，以从GitHub
    API获取存储库和问题信息。'
- en: '[Chapter 7](ch07.html "Chapter 7. Dinnerly – Recipe Sharing"), *Dinnerly –
    Recipe Sharing*, introduces the somewhat intimidating concept of the OAuth authorization
    flow that many large web applications, such as Twitter, Facebook, and GitHub,
    implement in order to allow third-party applications to act on behalf of the account
    owners without compromising basic account security credentials. A barebones data
    model is constructed for a recipe-sharing application that allows the so-called
    social sign in and the ability to cross-post the data from our application to
    the feeds or streams of the services that a user has connected. Finally, we will
    introduce the concept of database migrations using Alembic, which allow you to
    synchronize your SQLAlchemy model metadata with the schemas of the underlying
    relational database tables in a reliable manner.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。Dinnerly – Recipe Sharing")，*Dinnerly – Recipe Sharing*，介绍了OAuth授权流程的概念，这是许多大型Web应用程序（如Twitter、Facebook和GitHub）实施的，以允许第三方应用程序代表帐户所有者行事，而不会损害基本帐户安全凭据。为食谱共享应用程序构建了一个简单的数据模型，允许所谓的社交登录以及将数据从我们的应用程序跨发布到用户连接的服务的feeds或streams。最后，我们将介绍使用Alembic的数据库迁移的概念，它允许您以可靠的方式将SQLAlchemy模型元数据与基础关系数据库表的模式同步。'
- en: What you need for this book
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书需要什么
- en: To work through most of the examples in this book, all you need is your favorite
    text editor or IDE, access to the Internet (to install the various Flask extensions,
    not to mention Flask itself), a relational database (one of SQLite, MySQL, or
    PostgreSQL), a browser, and some familiarity with the command line. Care has been
    taken to indicate when additional packages or libraries are required to complete
    the examples in each chapter.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要完成本书中大多数示例的操作，您只需要您喜欢的文本编辑器或IDE，访问互联网（以安装各种Flask扩展，更不用说Flask本身了），一个关系数据库（SQLite、MySQL或PostgreSQL之一），一个浏览器，以及对命令行的一些熟悉。我们已经注意到了在每一章中完成示例所需的额外软件包或库。
- en: Who this book is for
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合谁
- en: This book was created for the new Python developers who wish to dive into the
    world of web application development, or for the seasoned Python web application
    professional who is interested in learning about Flask and the extension-based
    ecosystem behind it. To get the most out of each chapter, you should have a solid
    understanding of the Python programming language, a basic knowledge of relational
    database systems, and fluency with the command line.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是为希望深入了解Web应用程序开发世界的新Python开发人员，或者对学习Flask及其背后的基于扩展的生态系统感兴趣的经验丰富的Python Web应用程序专业人士而创建的。要充分利用每一章，您应该对Python编程语言有扎实的了解，对关系数据库系统有基本的了解，并且熟练掌握命令行。
- en: Conventions
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中，您将找到许多不同类型信息的文本样式。以下是一些样式的示例，以及它们的含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "This
    will create a blank `app1` environment and activate it. You should see an (app1)
    tag in your shell prompt."'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下："这将创建一个空的`app1`环境并激活它。您应该在shell提示符中看到一个（app1）标签。"
- en: 'A block of code is set as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目以粗体显示：
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Then it asserts that the **Sign up!** button text appears in the returned HTML".'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以这样的方式出现在文本中："然后它断言返回的HTML中出现了**注册！**按钮文本"。'
- en: Note
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明显示在这样的框中。
- en: Tip
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧显示如下。
