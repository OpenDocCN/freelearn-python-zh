- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Mobile applications ceased to be the "new hotness" a long time ago, and these
    days users routinely expect that new software—be it a videogame or a social network—has
    a mobile version. Similar trend affects desktop operating systems; writing cross-platform
    software, once uncommon, has swiftly become a norm. Even game developers, usually
    limited to Microsoft operating systems on desktop, can be seen working on Mac
    and Linux ports for many new titles (for example, Steam, at the time of writing,
    hosts more than a hundred games that run on Mac and more than 50 that run on Linux).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 移动应用早已不再是“新热点”，如今用户通常期望新的软件——无论是视频游戏还是社交网络——都有一个移动版本。类似的趋势也影响了桌面操作系统；编写跨平台软件，曾经是不常见的，迅速成为了一种规范。即使是通常仅限于桌面Microsoft操作系统的游戏开发者，现在也可以看到他们在为许多新游戏（例如，在撰写本文时，Steam托管了超过一百款在Mac上运行的游戏，以及超过五十款在Linux上运行的游戏）开发Mac和Linux版本。
- en: 'This is especially valuable for start-ups and indie developers: building truly
    cross-platform software widens the potential audience, which leads to increased
    sales and may create good press along the way.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这对于初创公司和独立开发者来说尤其有价值：构建真正跨平台的软件可以扩大潜在受众，从而增加销量，并在过程中可能创造良好的舆论。
- en: On the downside, writing portable software can be a very resource-hungry process,
    and this also affects small developers much more than big corporations.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，编写可移植的软件可能是一个非常资源密集的过程，这对小型开发者的影响远大于大型企业。
- en: 'In particular, many platforms have a preferred programming language and **software
    development kit** (**SDK**): iOS apps are mostly written in Objective-C and Swift,
    Android suggests the subpar Java programming language, and Microsoft promotes
    the use of the .NET framework, especially C#, for building Windows software.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其是许多平台都有一个首选的编程语言和**软件开发工具包**（**SDK**）：iOS应用大多是用Objective-C和Swift编写的，Android推荐使用不太理想的Java编程语言，而微软则推广使用.NET框架，特别是C#，来构建Windows软件。
- en: Employing these tools allows you to leverage the native user interface and underlying
    functionality of an OS, but it also automatically prevents code reuse. This means
    that even if you are equally proficient in all programming languages and interfaces
    involved, porting the code may still take a non-trivial amount of time and introduce
    new bugs.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些工具允许你利用操作系统的原生用户界面和底层功能，但它也自动防止了代码重用。这意味着即使你对所有涉及的编程语言和接口都同样精通，移植代码可能仍然需要相当多的时间，并引入新的错误。
- en: Write once, run anywhere
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写一次，运行任何地方
- en: 'This whole situation creates a demand for a universal, multi-platform way to
    program. The problem isn''t exactly new: one solution to it, created by Sun in
    1995, is the Java programming language. Its marketing promise—*write once, run
    anywhere*—was never fulfilled and the language itself is unreasonably cumbersome
    to use. This led to many mocking variations of the slogan, culminating with *write
    once, run away* that refers to many developers abandoning Java in favor of better
    programming languages, including Python.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这种整个情况产生了对一种通用、多平台编程方式的需求。这个问题并不是全新的：1995年由Sun提出的解决方案之一是Java编程语言。它的营销承诺——“编写一次，运行任何地方”——从未实现，而且该语言本身使用起来非常繁琐。这导致了众多对该口号的嘲讽变体，最终以“编写一次，逃离一次”为高潮，指的是许多开发者放弃了Java，转而使用更好的编程语言，包括Python。
- en: 'Not coincidentally, Kivy—the main topic of this book—is a graphical user interface
    library facilitating easy creation of multi-platform Python applications. The
    main features of Kivy toolkit are as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便提一下，Kivy——本书的主要主题——是一个图形用户界面库，它简化了多平台Python应用的创建。Kivy工具包的主要特性如下：
- en: '**Compatibility**: Kivy-based apps work in Linux, Mac OS X, Windows, Android,
    and iOS—all from a single codebase.'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**兼容性**：基于Kivy的应用在Linux、Mac OS X、Windows、Android和iOS上都能运行——所有这些都来自同一个代码库。'
- en: '**Natural user interface**: Kivy bridges the gap between different input methods,
    allowing you to handle a multitude of possible user interactions with similar
    code, mouse events and multitouch gestures alike.'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**自然用户界面**：Kivy弥合了不同输入方法之间的差距，允许你使用类似的代码处理多种可能的用户交互，无论是鼠标事件还是多点触控手势。'
- en: '**Fast hardware-accelerated graphics**: OpenGL rendering makes Kivy suitable
    for creating graphics-heavy applications such as videogames, and also improves
    the user experience with smooth transitions.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速硬件加速图形**：OpenGL渲染使Kivy适合创建图形密集型应用，如视频游戏，同时也通过平滑的过渡改善了用户体验。'
- en: '**The use of Python**: Kivy apps are written in Python, one of the better general
    purpose programming languages. In addition to being inherently portable, expressive,
    and readable, Python features a useful standard library and a rich ecosystem of
    third-party packages, the **Python Package Index** (**PyPI**).'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python 的使用**：Kivy 应用是用 Python 编写的，Python 是一种较好的通用编程语言。除了本身具有可移植性、表达性和可读性之外，Python
    还具有有用的标准库和丰富的第三方包生态系统，即 **Python 包索引**（**PyPI**）。'
- en: 'Speaking of third-party packages, Kivy can be seen as a superset of many battle-tested
    components: a large part of its functionality relies on well-known libraries such
    as Pygame, SDL, and GStreamer. The API that Kivy exposes, however, is very high-level
    and unified.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 谈到第三方包，Kivy 可以被视为许多经过实战检验的组件的超集：其功能的大部分依赖于知名的库，如 Pygame、SDL 和 GStreamer。然而，Kivy
    提供的 API 非常高级且统一。
- en: It's worth mentioning that Kivy is free and open source MIT licensed software.
    In practice, this means that you can use it commercially without paying licensing
    fees. Its full source code is hosted on GitHub, so you can also patch bugs or
    add new features to it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 值得一提的是，Kivy 是一款免费且开源的 MIT 许可软件。在实践中，这意味着您可以在不支付许可费用的情况下将其用于商业用途。它的完整源代码托管在 GitHub
    上，因此您也可以修复错误或为其添加新功能。
- en: What this book covers
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Building a Clock App"), *Building a Clock
    App* provides a gentle introduction to writing applications with Kivy. It covers
    the Kivy language, layouts, widgets and timers. By the end of the chapter we build
    a simple Clock app, similar to the one found in your cellphone.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 1 章](ch01.html "第 1 章。构建时钟应用")，《构建时钟应用》为使用 Kivy 编写应用提供了一个温和的介绍。它涵盖了 Kivy
    语言、布局、小部件和计时器。到本章结束时，我们将构建一个简单的时钟应用，类似于您手机中的时钟应用。'
- en: '[Chapter 2](ch02.html "Chapter 2. Building a Paint App"), *Building a Paint
    App* is a further exploration of the Kivy framework''s components and functionality.
    The resulting Paint app showcases the customization of built-in widgets, drawing
    arbitrary shapes on canvas and handling multi-touch events.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 2 章](ch02.html "第 2 章。构建绘图应用")，《构建绘图应用》进一步探讨了 Kivy 框架的组件和功能。生成的绘图应用展示了内置小部件的定制、在画布上绘制任意形状以及处理多点触控事件。'
- en: '[Chapter 3](ch03.html "Chapter 3. Sound Recorder for Android"), *Sound Recorder
    for Android* serves as an example of writing a Kivy-based Android app. It shows
    how to use the Pyjnius interoperability layer to load Java classes into Python,
    which enables us to mix Android API calls with a Kivy-based user interface.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 3 章](ch03.html "第 3 章。Android 声音录制器")，《Android 声音录制器》作为编写基于 Kivy 的 Android
    应用的示例。它展示了如何使用 Pyjnius 互操作性层将 Java 类加载到 Python 中，这使得我们可以将 Android API 调用与基于 Kivy
    的用户界面混合使用。'
- en: '[Chapter 4](ch04.html "Chapter 4. Kivy Networking"), *Kivy Networking* is a
    hands-on guide to building a network application from the ground up. In covers
    a number of topics, from creating a simple protocol to writing server and client
    software in Python, and culminates with the Kivy Chat application.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 4 章](ch04.html "第 4 章。Kivy 网络编程")，《Kivy 网络编程》是一本从零开始构建网络应用的实战指南。它涵盖了从创建简单协议到用
    Python 编写服务器和客户端软件的多个主题，并以 Kivy 聊天应用作为总结。'
- en: '[Chapter 5](ch05.html "Chapter 5. Making a Remote Desktop App"), *Making a
    Remote Desktop App* exemplifies another way of writing client-server apps. This
    chapter''s program is based on the HTTP protocol—the one that powers the Internet.
    We develop a command-line HTTP server first, and then build the Remote Desktop
    client app with Kivy.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 5 章](ch05.html "第 5 章。制作远程桌面应用")，《制作远程桌面应用》展示了编写客户端-服务器应用的另一种方式。本章的程序基于
    HTTP 协议——互联网背后的协议。我们首先开发了一个命令行 HTTP 服务器，然后使用 Kivy 构建远程桌面客户端应用。'
- en: '[Chapter 6](ch06.html "Chapter 6. Making the 2048 Game"), *Making the 2048
    Game* walks you through building a playable replica of the 2048 game. We demonstrate
    more complex Kivy functionality, such as creating custom widgets, using Kivy properties
    for data binding, and processing touch screen gestures.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第 6 章](ch06.html "第 6 章。制作 2048 游戏")，《制作 2048 游戏》将指导您构建一个可玩的游戏副本。我们展示了更复杂的
    Kivy 功能，例如创建自定义小部件、使用 Kivy 属性进行数据绑定以及处理触摸屏手势。'
- en: '[Chapter 7](ch07.html "Chapter 7. Writing a Flappy Bird Clone"), *Writing a
    Flappy Bird Clone* introduces another Kivy-based game, this time it''s an arcade
    game similar to the well-known Flappy Bird title. Over the course of this chapter
    we discuss the use of texture coordinates and sounds effects, implement arcade
    physics and collision detection.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。编写Flappy Bird克隆")，*编写Flappy Bird克隆*介绍了另一个基于Kivy的游戏，这次是一个类似于著名Flappy
    Bird标题的街机游戏。在本章中，我们讨论了纹理坐标和音效的使用，实现了街机物理和碰撞检测。'
- en: '[Chapter 8](ch08.html "Chapter 8. Introducing Shaders"), *Introducing Shaders*
    demonstrates the use of GLSL shaders in the context of a Kivy application. In
    this tutorial you will learn about OpenGL primitives such as indices and vertices,
    and then write incredibly fast low-level code that runs directly on the GPU.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。介绍着色器")，*介绍着色器*展示了在Kivy应用程序中使用GLSL着色器的用法。在本教程中，您将了解OpenGL原语，如索引和顶点，然后编写直接在GPU上运行的极快级代码。'
- en: '[Chapter 9](ch09.html "Chapter 9. Making a Shoot-Em-Up Game"), *Making a Shoot-Em-Up
    Game* continues where the previous chapter left off: we use the knowledge of GLSL
    in order to build a side-scrolling shooter. A reusable particle system class is
    developed along the way. This project concludes the series and capitalizes on
    many techniques that were explained throughout the book, such as collision detection,
    touch screen controls, sound effects and so on.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。制作射击游戏")，*制作射击游戏*从上一章结束的地方继续：我们使用GLSL的知识来构建一个侧滚动射击游戏。在此过程中，开发了一个可重用的粒子系统类。本项目总结了整个系列，并利用了书中解释的许多技术，例如碰撞检测、触摸屏控制、音效等。'
- en: '[Appendix](apa.html "Appendix A. The Python Ecosystem"), *The Python Ecosystem*,
    gives you more on Python libraries and tools.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录](apa.html "附录A。Python生态系统")，*Python生态系统*为您提供了更多关于Python库和工具的信息。'
- en: Setting up the working environment
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置工作环境
- en: This section briefly discusses the requirements needed to effectively follow
    the narrative, implement, and run Kivy applications. Personal computer running
    a modern operating system—a Mac, Linux, or Windows box—is implied.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要讨论了有效遵循叙述、实现和运行Kivy应用程序所需的条件。一台运行现代操作系统的个人电脑——Mac、Linux或Windows计算机——是隐含的。
- en: A note on Python
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于Python的说明
- en: Python is the primary programming language used in the book; good knowledge
    of it, while not strictly necessary, may help.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Python是本书中使用的首选编程语言；虽然不是严格必要的，但对其有良好的了解可能会有所帮助。
- en: At the time of writing, there are two incompatible versions of Python in wide
    use. Python 2.7 is monumentally stable but no longer actively developed, and Python
    3 is a newer and slightly more controversial version bringing many improvements
    to the language, but occasionally breaking compatibility along the way.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，广泛使用中的Python有两个不兼容的版本。Python 2.7非常稳定，但不再积极开发，而Python 3是一个较新的、略带争议的版本，为语言带来了许多改进，但偶尔会破坏兼容性。
- en: The code in this book should largely work in both Python versions, but it may
    need minor adjustments to be fully compatible with Python 3; for best results,
    it's recommended that you use Python 2.7, or the latest Python 2 version available
    for your system.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码应该在大致上适用于Python的两个版本，但可能需要稍作调整才能完全兼容Python 3；为了获得最佳效果，建议您使用Python 2.7或您系统上可用的最新Python
    2版本。
- en: Note
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Installing Python separately for Kivy development is not necessary on most
    platforms: it either comes preinstalled (Mac OS X), bundled with Kivy (MS Windows),
    or included as a dependency (Linux, Ubuntu in particular).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数平台上，不需要单独安装Python用于Kivy开发：它可能预装在系统上（Mac OS X）、与Kivy捆绑（MS Windows），或者作为依赖项包含（Linux，尤其是Ubuntu）。
- en: Installing and running Kivy
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装和运行Kivy
- en: Kivy can be downloaded from the official site ([http://kivy.org/](http://kivy.org/));
    just choose an appropriate version and follow the instructions. This whole procedure
    should be pretty straightforward and simple.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从官方网站([http://kivy.org/](http://kivy.org/))下载Kivy；只需选择合适的版本并按照说明操作。整个过程应该相当直接和简单。
- en: '![Installing and running Kivy](img/7849OS_Preface_01.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![安装和运行Kivy](img/7849OS_Preface_01.jpg)'
- en: Kivy downloads
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Kivy下载
- en: 'To check whether the installation is working, follow these instructions:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要检查安装是否正常工作，请按照以下说明操作：
- en: 'On a Mac:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Mac上：
- en: Open **Terminal.app**.
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**Terminal.app**。
- en: Run `kivy`.
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行`kivy`。
- en: The Python prompt, `>>>`, should appear. Type `import kivy`.
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该出现Python提示符`>>>`。输入`import kivy`。
- en: The command should complete with no errors, printing a message along the lines
    of `[INFO] Kivy v1.8.0`.
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令应该无错误完成，并打印类似 `[INFO] Kivy v1.8.0` 的消息。
- en: 'On a Linux machine:'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 机器上：
- en: Open a terminal.
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开一个终端。
- en: Run `python`.
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行 `python`。
- en: The Python prompt, `>>>`, should appear. Type `import kivy`.
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应该出现 Python 提示符 `>>>`。输入 `import kivy`。
- en: The command should print a message similar to `[INFO] Kivy v1.8.0`.
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令应该打印类似 `[INFO] Kivy v1.8.0` 的消息。
- en: 'On a Windows box:'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 系统上：
- en: Double-click **kivy.bat** inside the Kivy package directory.
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击 Kivy 软件包目录内的 **kivy.bat**。
- en: Type `python` at the command prompt.
  id: totrans-51
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在命令提示符中输入 `python`。
- en: Type `import kivy`.
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `import kivy`。
- en: The command should print a message similar to `[INFO] Kivy v1.8.0`.
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 命令应该打印类似 `[INFO] Kivy v1.8.0` 的消息。
- en: '![Installing and running Kivy](img/7849OS_Preface_02.jpg)'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![安装和运行 Kivy](img/7849OS_Preface_02.jpg)'
- en: A terminal session
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 终端会话
- en: 'Running a Kivy application (basically, a Python program) is achieved similarly:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 运行 Kivy 应用程序（基本上是一个 Python 程序）的方式类似：
- en: On a Mac, use `kivy main.py`
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Mac 上，使用 `kivy main.py`
- en: On Linux, use `python main.py`
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Linux 上，使用 `python main.py`
- en: On Windows, use `kivy.bat main.py` (or drag-and-drop the **main.py** file on
    top of **kivy.bat**).
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 Windows 上，使用 `kivy.bat main.py`（或将 **main.py** 文件拖放到 **kivy.bat** 之上）。
- en: Note on coding
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码注意事项
- en: Programming typically amounts to working with text a lot; hence, it's important
    to choose a good text editor. This is why I profoundly recommend trying Vim before
    you consider other options.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 编程通常涉及大量文本处理；因此，选择一个好的文本编辑器非常重要。这就是为什么我强烈建议在考虑其他选项之前先尝试使用 Vim。
- en: Vim is one of the better text editors largely available; it's highly configurable
    and built specifically for effective text editing (way more so than a typical
    alternative). Vim has a vibrant community, is actively maintained, and comes preinstalled
    with many Unix-like operating systems—including Mac OS X and Linux. It is known
    that (at least some) developers of the Kivy framework also prefer Vim.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: Vim 是目前可用的优秀文本编辑器之一；它高度可配置，专为有效文本编辑而构建（比典型替代品更有效）。Vim 拥有一个充满活力的社区，正在积极维护，并且预安装在许多类
    Unix 操作系统中——包括 Mac OS X 和 Linux。已知（至少一些）Kivy 框架的开发者也喜欢使用 Vim。
- en: 'Here are some quick Kivy-related tips for Vim users out there:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一些针对 Vim 用户快速了解 Kivy 的技巧：
- en: '**Python-mode** ([https://github.com/klen/python-mode](https://github.com/klen/python-mode))
    is great for writing Python code. It throws in a lot of extra functionality, such
    as stylistic and static checker, smart completion, and support for refactoring.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Python-mode** ([https://github.com/klen/python-mode](https://github.com/klen/python-mode))
    对于编写 Python 代码非常出色。它提供了许多额外功能，例如样式和静态检查器、智能完成以及重构支持。'
- en: Source code of GLSL shaders can be properly highlighted using the `vim-glsl`
    syntax ([https://github.com/tikhomirov/vim-glsl](https://github.com/tikhomirov/vim-glsl)).
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GLSL 着色器的源代码可以使用 `vim-glsl` 语法正确高亮显示（[https://github.com/tikhomirov/vim-glsl](https://github.com/tikhomirov/vim-glsl)）。
- en: 'Kivy texture maps (the `.atlas` files, covered in [Chapter 8](ch08.html "Chapter 8. Introducing
    Shaders"), *Introducing Shaders*) are basically JSON, so you can use, for example,
    **vim-json** ([https://github.com/elzr/vim-json](https://github.com/elzr/vim-json)),
    and add a file association to your `.vimrc` file like this:'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kivy 纹理映射（即 `.atlas` 文件，在第 8 章 [介绍着色器](ch08.html "第 8 章。介绍着色器") 中介绍），基本上是 JSON
    格式，因此您可以使用，例如 **vim-json** ([https://github.com/elzr/vim-json](https://github.com/elzr/vim-json))，并将以下行添加到您的
    `.vimrc` 文件中，以创建文件关联：
- en: '[PRE0]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Kivy layout files, `.kv`, are slightly more complicated to handle as they''re
    similar to Python, but don''t really parse as Python. There is an incomplete Vim
    plugin in the Kivy repository, but at the time of writing, Vim''s built-in **YAML**
    support highlights these files better (this obviously might change in future).
    To load `.kv` files as YAML, add the following line to your `.vimrc` file:'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Kivy 布局文件（`.kv`）处理起来稍微复杂一些，因为它们与 Python 类似，但并不真正像 Python 那样解析。Kivy 仓库中有一个不完整的
    Vim 插件，但在撰写本文时，Vim 内置的 **YAML** 支持更好地突出显示这些文件（这显然可能在将来发生变化）。要将 `.kv` 文件作为 YAML
    加载，请将以下行添加到您的 `.vimrc` 文件中：
- en: '[PRE1]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Clearly, you are not *obliged* to use Vim to follow examples of this book—this
    is but a mere suggestion. Now let's write a bit of code, shall we?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 显然，您并不 **必须** 使用 Vim 来跟随本书的示例——这只是一个建议。现在让我们写一点代码，怎么样？
- en: Hello, Kivy
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello, Kivy
- en: 'When learning a new programming language or technology, the first thing demonstrated
    to students is traditionally a "hello, world" program. This is how it looks in
    Python:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当学习一门新的编程语言或技术时，学生通常会首先看到的是一个传统的 "hello, world" 程序。在 Python 中它看起来是这样的：
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The Kivy version of a "hello, world" is a little lengthier and consists of two
    files, namely, a Python module and a `.kv` layout definition.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Kivy 的“hello, world”版本稍微长一些，由两个文件组成，即一个 Python 模块和一个 `.kv` 布局定义。
- en: Code
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 代码
- en: 'A Kivy application''s entry point is customarily called `main.py`, and its
    contents are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: Kivy 应用程序的入口通常称为 `main.py`，其内容如下：
- en: '[PRE3]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see, this takes Kivy's `App` class, adds absolutely nothing to it,
    and calls `run()`.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这使用了 Kivy 的 `App` 类，对其没有任何添加，并调用了 `run()` 方法。
- en: Layout
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 布局
- en: 'A layout file is typically named after the application class, in this case
    `HelloApp`, sans the `App` suffix and in lowercase: `hello.kv`. It contains the
    following lines:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 布局文件通常以应用程序类名命名，在本例中为 `HelloApp`，不带 `App` 后缀且为小写：`hello.kv`。它包含以下行：
- en: '[PRE4]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This is a very simple Kivy layout definition consisting of a single widget,
    `Label`, with the desired text inside. Layout files allow building complex widget
    hierarchies in a concise, declarative fashion, which is clearly not displayed
    here, but will be heavily used over the course of this book.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个非常简单的 Kivy 布局定义，仅包含一个 `Label` 小部件，其中包含所需文本。布局文件允许以简洁、声明性的方式构建复杂的组件层次结构，这在此处未显示，但将在本书的整个过程中被大量使用。
- en: 'If we run the program now (refer to the *Installing and running Kivy* section
    for details), this is what we''ll get:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们现在运行程序（有关详细信息，请参阅*安装和运行 Kivy*部分），这将是我们得到的结果：
- en: '![Layout](img/7849OS_Preface_03.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![布局](img/7849OS_Preface_03.jpg)'
- en: Our first application powered by Kivy
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们由 Kivy 驱动的第一个应用程序
- en: Now you're ready to move on to the first chapter and start writing real programs.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经准备好进入第一章，并开始编写真正的程序。
- en: Who this book is for
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is intended for programmers who are comfortable with the Python language
    and who want to build desktop and mobile applications with a rich graphical user
    interface in Python with minimal hassle. Knowledge of Kivy, while certainly won't
    hurt, is not required—every aspect of the framework is described when it's first
    used.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在为那些熟悉 Python 语言并希望以最小麻烦使用 Python 构建桌面和移动应用程序的程序员编写。虽然了解 Kivy 对您有所帮助，但并非必需——框架的每个方面在首次使用时都会进行描述。
- en: At various points in this book, we will make an analogy between Kivy and web
    development practices. However, an extensive knowledge of the latter also isn't
    required to follow the narrative.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书的各个部分，我们将 Kivy 与 Web 开发实践进行类比。然而，对后者的深入了解也不是必需的，以跟随叙述。
- en: Conventions
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规范
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "Kivy
    application''s entry point is customarily called `main.py`."'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 用户名如下所示：“Kivy 应用的入口通常称为
    `main.py`。”
- en: 'A block of code is set as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望将您的注意力引向代码块的一个特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE6]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都如下所示：
- en: '[PRE7]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The first event handler is for the **Start** and **Stop** buttons."'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。屏幕上看到的单词，例如在菜单或对话框中，在文本中如下所示：“第一个事件处理器是为**开始**和**停止**按钮。”'
- en: Note
  id: totrans-100
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项如下所示：
- en: Tip
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: Reader feedback
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者反馈。请告诉我们您对本书的看法——您喜欢或不喜欢的地方。读者反馈对我们很重要，因为它帮助我们开发出您真正能从中受益的标题。
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 向我们发送一般反馈，只需发送电子邮件至 `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`，并在邮件主题中提及本书的标题。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个领域有专业知识，并且你对撰写或为书籍做出贡献感兴趣，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经是Packt图书的骄傲拥有者，我们有一些事情可以帮助你从购买中获得最大收益。
- en: Downloading the example code
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you. Another option of getting
    the up-to-date source code is by cloning the GitHub repository, [https://github.com/mvasilkov/kb](https://github.com/mvasilkov/kb).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你购买的所有Packt出版物的账户中下载示例代码文件[http://www.packtpub.com](http://www.packtpub.com)。如果你在其他地方购买了这本书，你可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给你。获取最新源代码的另一种方法是克隆GitHub仓库[https://github.com/mvasilkov/kb](https://github.com/mvasilkov/kb)。
- en: Downloading the color images of this book
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载本书的彩色图像
- en: 'We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from: [http://www.packtpub.com/sites/default/files/downloads/7849OS_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/7849OS_ColorImages.pdf).'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为你提供了一份包含本书中使用的截图/图表彩色图像的PDF文件。彩色图像将帮助你更好地理解输出的变化。你可以从以下链接下载此文件：[http://www.packtpub.com/sites/default/files/downloads/7849OS_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/7849OS_ColorImages.pdf)。
- en: Errata
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果你在我们的书中发现错误——可能是文本或代码中的错误——如果你能向我们报告这一点，我们将不胜感激。通过这样做，你可以帮助其他读者避免挫败感，并帮助我们改进本书的后续版本。如果你发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择你的书籍，点击**勘误提交表单**链接，并输入你的勘误详情来报告它们。一旦你的勘误得到验证，你的提交将被接受，勘误将被上传到我们的网站或添加到该标题的勘误部分下的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看之前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将出现在**勘误**部分下。
- en: Piracy
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上版权材料的盗版是一个跨所有媒体的持续问题。在Packt，我们非常重视我们版权和许可证的保护。如果你在互联网上发现任何形式的我们作品的非法副本，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过发送链接到疑似盗版材料的方式，与我们联系 `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢你在保护我们的作者和我们提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-121
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在这本书的任何方面遇到问题，您可以通过 `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    联系我们，我们将尽力解决问题。
