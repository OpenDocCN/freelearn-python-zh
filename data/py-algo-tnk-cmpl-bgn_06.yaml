- en: Chapter 2
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第二章
- en: Python and Integrated Development Environments
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Python 和集成开发环境
- en: 2.1 What is Python?
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.1 什么是 Python？
- en: Python is a widely used general-purpose, high-level computer programming language
    that allows programmers to create applications, web pages, and many other types
    of software.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种广泛使用的通用、高级计算机编程语言，允许程序员创建应用程序、网页以及许多其他类型的软件。
- en: Python is often referred to as a scripting language despite the fact that the
    official website says that it's a programming language. The truth, of course,
    is somewhere in the middle. Python can be used either as a scripting language,
    or a programming language!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管官方网站称 Python 是一种编程语言，但 Python 通常被称为脚本语言。当然，事实真相介于两者之间。Python 可以用作脚本语言，也可以用作编程语言！
- en: 2.2 What is the Difference Between a Script and a Program?
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.2 脚本和程序之间的区别是什么？
- en: Technically speaking, a script is interpreted whereas a program is compiled,
    but this is actually not their major difference. There is another more important
    difference between them!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术角度讲，脚本被解释执行，而程序被编译执行，但这并不是它们的主要区别。它们之间还有一个更重要的大区别！
- en: The main purpose of a script written in a scripting language such as JavaScript,
    or VBA (Visual Basic for Applications) is to control another application. So you
    can say that, in some ways JavaScript controls the web browser, and VBA controls
    a Microsoft^® Office application such as MS Word or MS Excel.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 JavaScript 或 VBA（应用程序可视化基本）等脚本语言编写的脚本的主要目的是控制另一个应用程序。因此，可以说在某些方面 JavaScript
    控制着网络浏览器，而 VBA 控制着 Microsoft^® Office 应用程序，如 MS Word 或 MS Excel。
- en: On the other hand, a program written in a programming language such as Python,
    C++, or Java (to name a few) executes independently of any other application.
    A program is executed as stand-alone any time the user wishes without the need
    of a hosting application.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，用 Python、C++ 或 Java（仅举几个例子）等编程语言编写的程序独立于任何其他应用程序执行。程序可以在用户希望时独立执行，无需托管应用程序。
- en: '![](img/notice.jpg)Macros of Microsoft Office are scripts written in VBA. Their
    purpose is to automate certain functions within Microsoft Office.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)Microsoft Office 的宏是用 VBA 编写的脚本。它们的目的在于自动化 Microsoft Office
    中的某些功能。'
- en: '![](img/notice.jpg)A lot of people think that JavaScript is a simplified version
    of Java but in fact the similarity of the names is just a coincidence.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)很多人认为 JavaScript 是 Java 的简化版本，但实际上名字的相似性只是巧合。'
- en: '![](img/remember.jpg)A script cannot be executed as stand-alone. It requires
    a hosting application in order to execute.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/remember.jpg)脚本不能独立执行。它需要托管应用程序才能执行。'
- en: 2.3 Why You Should Learn Python
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.3 为什么你应该学习 Python
- en: Python is what is known as a “high-level” computer language. Python's coding
    style is very easy to understand. It is a flexible and powerful language, making
    it well-suited for developing medium-scale applications or dynamic web pages.
    It is the perfect language for teaching programming, especially at the introductory
    level, and it is widely used in scientific and numerical computing.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Python 是一种所谓的“高级”计算机语言。Python 的编码风格非常易于理解。它是一种灵活且功能强大的语言，非常适合开发中等规模的应用程序或动态网页。它是教授编程的完美语言，尤其是在入门级别，并且在科学和数值计算中得到广泛应用。
- en: One of Python's capabilities is the ability to interact with the file system
    of a computer. Python can create files, write in files, or read the contents from
    files. It can also create directories, copy files, delete files, rename files,
    or even change file attributes. Python can perform almost any task related to
    the file system, making it suitable even for system administration tasks. For
    example, you can write a Python program to back up your files or a program that
    processes text files by reformatting their contents.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的一个能力是能够与计算机的文件系统交互。Python 可以创建文件、写入文件或从文件中读取内容。它还可以创建目录、复制文件、删除文件、重命名文件，甚至更改文件属性。Python
    几乎可以执行与文件系统相关的任何任务，使其甚至适用于系统管理任务。例如，你可以编写一个 Python 程序来备份你的文件，或者一个通过重新格式化内容来处理文本文件的程序。
- en: Moreover, Python can execute system commands or any other program installed
    on your system. Thus, programs written and compiled in C, C++, Java, or any other
    computer language can be executed from Python and Python can make use of their
    output. This enables you to add functionality to your Python programs without
    spending time rewriting your old ones.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Python 可以执行系统命令或您系统上安装的任何其他程序。因此，用 C、C++、Java 或任何其他计算机语言编写的和编译的程序都可以从 Python
    中执行，并且 Python 可以利用它们的输出。这使得您可以在不花费时间重写旧程序的情况下，为您的 Python 程序添加功能。
- en: There are millions—probably even billions—of lines of code already written in
    Python and your possibilities for code reuse are huge! This is why many people
    prefer using Python to any other programming language. This is also a very good
    reason why you should actually learn Python!
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 已经用 Python 编写了数百万——可能甚至数十亿——行代码，您代码重用的可能性巨大！这就是为什么许多人更喜欢使用 Python 而不是其他任何编程语言的原因。这也是您实际上应该学习
    Python 的一个非常好的理由！
- en: 2.4 How Python Works
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.4 Python 的工作原理
- en: Computers do not understand natural languages such as English or Greek, so you
    need a computer language such as Python to communicate with them. Python is a
    very powerful high-level computer language. The Python interpreter (or, actually,
    a combination of a compiler and an interpreter) converts Python language to a
    language that computers can actually understand, and that is known as the “machine
    language”.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机不理解自然语言，如英语或希腊语，因此您需要一种计算机语言，如 Python，才能与它们通信。Python 是一种非常强大的高级计算机语言。Python
    解释器（或者实际上是一个编译器和解释器的组合）将 Python 语言转换为计算机实际上能理解的语言，这被称为“机器语言”。
- en: In the past, computer languages made use of either an interpreter or a compiler.
    Nowadays however, many computer languages including Python use both a compiler
    and an interpreter. The Python compiler translates Python statements into bytecode
    statements and saves them in a .pyc file. Later, when a user wants to execute
    the file, the interpreter (often called Python Virtual Machine or Python VM) converts
    the bytecode into low-level machine language code for direct execution on the
    hardware.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去，计算机语言要么使用解释器，要么使用编译器。然而，如今，包括 Python 在内的许多计算机语言都同时使用编译器和解释器。Python 编译器将
    Python 语句翻译成字节码语句，并将它们保存到 .pyc 文件中。稍后，当用户想要执行该文件时，解释器（通常称为 Python 虚拟机或 Python
    VM）将字节码转换为低级机器语言代码，以便在硬件上直接执行。
- en: '![](img/notice.jpg)Python bytecode is a machine language executed by the Python
    Virtual Machine.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](img/notice.jpg)Python 字节码是由 Python 虚拟机执行的一种机器语言。'
- en: '![](img/notice.jpg)Instead of a compiler and an interpreter, some languages
    use two compilers. In C#, for example, the first compiler translates C# statements
    into an intermediate language called Common Intermediate Language (CIL). The CIL
    code is stored on disk in an executable file called an assembly, typically with
    an extension of .exe. Later, when a user wants to execute the file, the .NET Framework
    performs a Just In Time (JIT) compilation to convert the CIL code into low-level
    machine language code for direct execution on the hardware.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](img/notice.jpg)一些语言使用两个编译器而不是编译器和解释器。例如，在 C# 中，第一个编译器将 C# 语句翻译成一种称为公共中间语言（CIL）的中间语言。CIL
    代码存储在磁盘上的一个可执行文件中，通常具有 .exe 扩展名。稍后，当用户想要执行该文件时，.NET 框架执行即时（JIT）编译，将 CIL 代码转换为低级机器语言代码，以便在硬件上直接执行。'
- en: In Figure 2–1 you can see how statements written in Python are compiled into
    bytecode and how bytecode is then executed using interpretation.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在图 2–1 中，您可以看到用 Python 编写的语句是如何编译成字节码的，以及字节码是如何通过解释来执行的。
- en: .![Image](img/chapter02-02.png)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '![Image](img/chapter02-02.png)'
- en: Figure 2–1 Executing Python statements using the Python Virtual Machine
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2–1 使用 Python 虚拟机执行 Python 语句
- en: 'Now come some reasonable questions: Why all this trouble? Why does Python and
    other languages (such as C#) translate twice? Why are Python statements not directly
    translated into low-level machine language code? The answer lies in the fact that
    Python is designed to be a platform-independent programming language. This means
    that a program is written once but it can be executed on any device, regardless
    of its operating system or its architecture, as long as the appropriate version
    of Python is installed on it. In the past, programs had to be recompiled, or even
    rewritten, for each computer platform. One of the biggest advantages of Python
    is that you only have to write and compile a program once! In Figure 2–2 you can
    see how statements written in Python are compiled into bytecode and how bytecode
    can then be executed on any platform that has the appropriate version of Python
    installed on it.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有一些合理的问题：为什么会有这么多麻烦？为什么Python和其他语言（如C#）需要翻译两次？为什么Python语句不能直接翻译成低级机器语言代码？答案在于Python被设计成一种平台无关的编程语言。这意味着程序只需编写一次，但可以在任何设备上执行，无论其操作系统或架构如何，只要安装了适当的Python版本。在过去，程序必须为每个计算机平台重新编译，甚至重写。Python最大的优点之一就是您只需编写和编译一次程序！在图2-2中，您可以看到Python编写的语句是如何编译成字节码的，以及字节码是如何在安装了适当Python版本的任何平台上执行的。
- en: '![Image](img/chapter02-01.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![Image](img/chapter02-01.png)'
- en: Figure 2–2 Executing Python statements on different platforms
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 图2–2 在不同平台上执行Python语句
- en: 'Efficiency is another reason why Python statements are not directly translated
    into low-level machine language code because:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 效率是Python语句不直接翻译成低级机器语言代码的另一个原因，因为：
- en: 1)Small optimizations can be performed on the intermediate code (bytecode).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 1)可以在中间代码（字节码）上执行小的优化。
- en: 2)If a .pyc file with the same name as the .py file you invoke is present, Python
    automatically executes it. This means that if a .pyc file is present and you haven't
    made any changes in the source code, Python can save some time by not having to
    re-compile the source code.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 2)如果存在与您调用的.py文件同名的.pyc文件，Python将自动执行它。这意味着如果存在.pyc文件且您没有对源代码进行任何更改，Python可以通过不重新编译源代码来节省一些时间。
- en: '![](img/notice.jpg)Today few, if any, interpreters really interpret code directly,
    line by line. Almost all interpreters now use some type of intermediate representation.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)如今，很少有解释器真正逐行直接解释代码。现在几乎所有解释器都使用某种中间表示形式。'
- en: 'To write and execute Python programs, you need to install two software applications:
    a Python interpreter and an Integrated Development Environment (IDE). The IDE
    is necessary for writing Python programs, while the Python interpreter is required
    for executing them.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要编写和执行Python程序，您需要安装两个软件应用：一个Python解释器和集成开发环境（IDE）。IDE是编写Python程序所必需的，而Python解释器则是执行程序所必需的。
- en: 2.5 Integrated Development Environments
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.5 集成开发环境
- en: An Integrated Development Environment, or IDE, is a type of software that includes
    all the basic tools programmers need to write and test programs. An IDE typically
    contains a source code editor and integrates tools such as a compiler or an interpreter,
    along with a debugger. IDLE and Visual Studio Code are examples of IDEs that let
    programmers write, execute and debug their source code.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 集成开发环境，或IDE，是一种包含程序员编写和测试程序所需的所有基本工具的软件。IDE通常包含源代码编辑器，并集成了编译器或解释器等工具，以及调试器。IDLE和Visual
    Studio Code是允许程序员编写、执行和调试源代码的IDE示例。
- en: '![](img/notice.jpg)A “debugger” is a tool that helps programmers to find and
    correct many of their mistakes.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)“调试器”是一种帮助程序员找到和纠正许多错误的工具。'
- en: 2.6 IDLE
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.6 IDLE
- en: IDLE is an Integrated Development Environment (IDE) that provides a very simple
    environment suitable for beginners, especially in an educational setting. With
    IDLE, novice programmers can effortlessly write and execute their Python programs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: IDLE是一个集成开发环境（IDE），它提供了一个非常适合初学者的简单环境，尤其是在教育环境中。使用IDLE，新手程序员可以轻松地编写和执行他们的Python程序。
- en: In Windows, the IDLE module is included by default in the Python installer and
    will be installed when you follow the steps outlined in the next chapter ([Chapter
    3](chapter03.html)). Additionally, in [Chapter 9](chapter09.html), you will be
    guided on how to use IDLE to write, execute and debug Python programs. You will
    also learn numerous tips and tricks that will be valuable in your first steps
    as a budding programmer!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Windows 中，IDLE 模块默认包含在 Python 安装程序中，并在你遵循下一章（[第 3 章](chapter03.html)）中概述的步骤时安装。此外，在第
    9 章（[第 9 章](chapter09.html)）中，你将指导如何使用 IDLE 编写、执行和调试 Python 程序。你还将学习许多有用的技巧和窍门，这些技巧和窍门对于你作为初学者程序员的第一步将非常有价值！
- en: '![](img/notice.jpg)Python and IDLE are included by default in many Linux distributions,
    but not necessarily in all of them. For example, in Ubuntu Linux, Python is installed
    by default, but you may need to install the IDLE module separately.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)Python 和 IDLE 在许多 Linux 发行版中默认包含，但并非所有发行版都包含。例如，在 Ubuntu
    Linux 中，Python 默认安装，但你可能需要单独安装 IDLE 模块。'
- en: 2.7 Microsoft Visual Studio
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 2.7 Microsoft Visual Studio
- en: Microsoft Visual Studio is an Integrated Development Environment (IDE) that
    provides a great set of tools for many programming languages (via extensions installed
    separately) and lets you easily create applications for Android, iOS, macOS, Windows,
    and the cloud, as well as websites, web applications, and web services.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Microsoft Visual Studio 是一个集成开发环境（IDE），它为许多编程语言提供了一套强大的工具（通过单独安装的扩展），并允许你轻松地为
    Android、iOS、macOS、Windows 和云端创建应用程序，以及网站、Web 应用程序和 Web 服务。
- en: Visual Studio is much more than a text editor. It can indent lines, match words
    and brackets, and highlight source code that is written incorrectly. It also provides
    automatic code (IntelliSense^®), which means that as you type, it displays a list
    of possible completions. The IDE also provides hints to help you analyze your
    code and find any potential problems. It even suggests some simple solutions to
    fix those problems. You can use the Visual Studio not only to write but also to
    execute your programs directly from the IDE.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 远不止是一个文本编辑器。它可以缩进行、匹配单词和括号，并突出显示编写错误的源代码。它还提供自动代码（IntelliSense^®），这意味着当你键入时，它会显示可能的完成列表。IDE
    还提供提示，帮助你分析代码并找到任何潜在的问题。它甚至建议一些简单的解决方案来修复这些问题。你可以使用 Visual Studio 不仅来编写，还可以直接从
    IDE 中执行你的程序。
- en: 'Visual Studio has a large community of users all around the world and this
    is why it comes in so many different flavors. Specifically, in Microsoft''s download
    page you can download:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio 在全球拥有庞大的用户群，这也是为什么它有这么多不同版本的原因。具体来说，在 Microsoft 的下载页面上，你可以下载：
- en: ►Visual Studio (Community, Professional, or Enterprise), which runs on Windows
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: ►在 Windows 上运行的 Visual Studio（社区版、专业版或企业版）
- en: ►Visual Studio for Mac, which runs on macOS
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: ►在 macOS 上运行的 Visual Studio for Mac
- en: ►Visual Studio Code, which runs on Windows, macOS, and Linux
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ►在 Windows、macOS 和 Linux 上运行的 Visual Studio Code
- en: In the next chapter ([Chapter 3](chapter03.html)), you will find links guiding
    you to instructions on how to install and configure whatever is necessary on your
    computer, such as the Python interpreter, and IDLE or Visual Studio Code, on either
    Windows or Linux. Then, in [Chapter 9](chapter09.html), you will discover guidance
    on using IDLE or Visual Studio Code to write, execute and debug Python programs.
    These instructions are available on my website. Additionally, you will find numerous
    tips and tricks there that will be valuable in your first steps as a budding programmer!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章（[第 3 章](chapter03.html)）中，你将找到链接，指导你如何在你的计算机上安装和配置所需的一切，例如 Python 解释器、IDLE
    或 Visual Studio Code，无论是在 Windows 还是 Linux 上。然后，在第 9 章（[第 9 章](chapter09.html)）中，你将发现有关如何使用
    IDLE 或 Visual Studio Code 编写、执行和调试 Python 程序的指导。这些说明可在我的网站上找到。此外，你还可以在那里找到许多有用的技巧和窍门，这些技巧和窍门对于你作为初学者程序员的第一步将非常有价值！
