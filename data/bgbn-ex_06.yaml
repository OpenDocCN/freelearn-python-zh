- en: Chapter 6. Home Automation Using BeagleBone
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章：使用BeagleBone进行家庭自动化
- en: In this chapter, we will be learning how to build a home automation system using
    BeagleBone Black. To get started, first we will be learning about Internet connected
    home automation systems and how they work. Then, we will move on to setting up
    Python Flask library that lets you run the HTTP server on your BeagleBone Black
    using Python.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何使用BeagleBone Black构建家庭自动化系统。要开始，我们首先将学习关于互联网连接的家庭自动化系统以及它们是如何工作的。然后，我们将继续设置Python
    Flask库，它允许你使用Python在BeagleBone Black上运行HTTP服务器。
- en: Once we are up and running with the server using a Flask library on Python,
    we will use it to go ahead and create a program in which you can turn a GPIO on
    and turn off using the input from the webpage created by the server. This GPIO
    pin will be used to turn on and turn off an electrical relay to switch a lamp
    on and off.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们在Python上使用Flask库运行服务器，我们将使用它来创建一个程序，你可以通过服务器创建的网页输入来打开和关闭GPIO。这个GPIO引脚将用于打开和关闭一个电继电器来开关灯泡。
- en: 'The contents of the chapter are divided into the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章内容分为以下几部分：
- en: Prerequisites
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前提条件
- en: The structure of home automation systems
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 家庭自动化系统的结构
- en: An introduction to webservers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络服务器简介
- en: An introduction to Flask for Python
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python Flask简介
- en: Setting up Flask for Python on a BeagleBone board
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在BeagleBone板上设置Python Flask
- en: Creating a webserver using Flask
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Flask创建网络服务器
- en: Transistors, relays, and power switches
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 晶体管、继电器和电源开关
- en: 'Advanced project: An Internet-controlled power switch – controlling an AC bulb
    from the Internet'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级项目：互联网控制电源开关 – 从互联网控制交流灯泡
- en: Prerequisites
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: This topic will cover what parts you need in this Chapter. You can buy them
    from any electrical store or online.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题将涵盖本章中你需要哪些部分。你可以从任何电器店或在线购买。
- en: Materials needed
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需要的材料
- en: 1x BeagleBone Black
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x BeagleBone Black
- en: 1x microSD card with latest version of Debian flashed on it to boot the BeagleBone
    board from a microSD card
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 带有最新版本Debian的microSD卡，用于从microSD卡启动BeagleBone板
- en: 1x 5V DC, 2A power supply
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 5V DC，2A 电源
- en: 1x Ethernet cable
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 以太网线
- en: 1x BreadBoard
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 面包板
- en: 1x relay board
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 继电器板
- en: The structure of home automation systems
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 家庭自动化系统结构
- en: 'This section will give you a basic idea about home automation systems that
    are connected to the Internet. In the following picture you can see that the mobile
    phone and the IoT devices are connected to Internet via the LAN Routers:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将为你提供一个关于连接到互联网的家庭自动化系统的基本概念。在下面的图片中，你可以看到移动电话和物联网设备通过局域网路由器连接到互联网：
- en: '![The structure of home automation systems](img/4602_06_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![家庭自动化系统结构](img/4602_06_01.jpg)'
- en: We will also be doing something similar in this chapter using the BeagleBone
    board, connected to Internet via our home router, to control an AC bulb using
    the relay circuit which is interfaced with the BeagleBone board. To do this, we
    will have setup a webserver on our BeagleBone board. We will see how to do this
    in the next topic of this chapter.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们也将使用BeagleBone板来做类似的事情，通过我们的家庭路由器连接到互联网，使用与BeagleBone板接口的继电器电路来控制交流灯泡。为此，我们将在BeagleBone板上设置一个web服务器。我们将在本章的下一个主题中看到如何做到这一点。
- en: Introduction to web servers
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网络服务器简介
- en: 'Web servers are computers that are connected to the Internet, or intranet,
    to serve the requests that comes from the web browser of client computers or mobile
    devices. To understand this better, look at the following picture:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 网络服务器是连接到互联网或内网的计算机，用于服务来自客户端计算机或移动设备的网络浏览器的请求。为了更好地理解这一点，请看下面的图片：
- en: '![Introduction to web servers](img/4602_06_02.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![网络服务器简介](img/4602_06_02.jpg)'
- en: So, as shown in the preceding picture, a webserver is basically the computer
    which hosts the webpages and does the processing based on the requests sent from
    the web browser on the client's device. The client's device can be either a PC,
    laptop, mobile phone, tablet, or anything else which has a web browser, or a Linux
    shell that can make HTTP requests.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如图所示，web服务器基本上是托管网页并基于从客户端设备上的网络浏览器发送的请求进行处理的计算机。客户端设备可以是PC、笔记本电脑、移动电话、平板电脑或任何其他具有网络浏览器的设备，或者是一个可以发出HTTP请求的Linux
    shell。
- en: 'Go ahead and look at the following picture to understand this better:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 仔细看看下面的图片，以更好地理解这一点：
- en: '![Introduction to web servers](img/4602_06_03.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![网络服务器简介](img/4602_06_03.jpg)'
- en: Now in this you can see that multiple clients are connected to multiple servers
    via the Internet, that is the **World Wide Web** (**WWW**), **TCP/IP Network**.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以看到多个客户端通过互联网连接到多个服务器，这就是**万维网**（**WWW**），**TCP/IP网络**。
- en: What is TCP/IP? What exactly happens when you type a URL into your browser and
    hit enter?
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 什么是TCP/IP？当你在浏览器中输入URL并按回车键时，究竟发生了什么？
- en: 'Look at the following picture to understand more:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 看看下面的图片来了解更多信息：
- en: '![Introduction to web servers](img/4602_06_04.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![Web服务器简介](img/4602_06_04.jpg)'
- en: Similarly, in our system we have a webserver that goes through all the process
    as show in the preceding picture. A slight difference is that our webpage will
    be able to control the AC bulb. Now, that we know how webservers work, let's get
    ahead and setup a webserver on our BeagleBone board using Flask Python.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，在我们的系统中，我们有一个Web服务器，它执行前面图片中显示的所有过程。有一点不同，我们的网页将能够控制AC灯泡。现在，既然我们知道了Web服务器的工作原理，让我们继续在BeagleBone板上使用Flask
    Python设置一个Web服务器。
- en: Python-Flask on BeagleBone Black
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python-Flask在BeagleBone Black上
- en: 'Flask is a Python framework to set up web servers using Python. In this topic,
    we will look at how we can set up a web server on BeagleBone Black using Python.
    The first thing we need to do to get started is to install the Python-Flask package
    on your BeagleBone Black from the Python package index. The steps below will walk
    you through how you can set up Flask and test it, followed by writing a Python
    code to interface it with your relay circuit. We will see this in the next topic
    followed by the main project of controlling an AC bulb from the Internet in the
    last topic of this chapter:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: Flask是一个用于设置Web服务器的Python框架。在本主题中，我们将探讨如何使用Python在BeagleBone Black上设置Web服务器。要开始，我们需要在BeagleBone
    Black上从Python包索引安装Python-Flask包。以下步骤将指导您如何设置Flask并测试它，然后编写Python代码将其与继电器电路接口。我们将在下一主题中看到这一点，然后在本章的最后一个主题中，我们将看到从互联网控制AC灯泡的主要项目：
- en: 'Step 1: Installing PIP as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 第1步：按照以下步骤安装PIP：
- en: '`sudo apt-get install python-pip`:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo apt-get install python-pip`：'
- en: You should see that it's been already installed, since we have the latest version
    of Debian installed, and its already available in version. Some of the other versions
    might not have this, and it will be installed if it's not available, or upgraded
    if a newer version is available than the one that is installed in the current
    operating system.
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你应该能看到它已经被安装了，因为我们已经安装了最新的Debian版本，并且它已经在版本中可用。其他一些版本可能没有这个功能，如果没有可用，则会安装，如果当前操作系统中安装的版本有更新，则会升级。
- en: '![Python-Flask on BeagleBone Black](img/4602_06_05.jpg)'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_05.jpg)'
- en: PIP installs and manages software packages that are written in Python. Many
    software packages can be found in the **Python Package Index** (**PyPI**).
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: PIP安装并管理用Python编写的软件包。许多软件包可以在**Python包索引**（**PyPI**）中找到。
- en: 'Step 2: Install Flask-Python library as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第2步：按照以下步骤安装Flask-Python库：
- en: '`sudo pip install flask`![Python-Flask on BeagleBone Black](img/4602_06_06.jpg)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo pip install flask`![Python-Flask on BeagleBone Black](img/4602_06_06.jpg)'
- en: 'Create a basic web application to test whether the package was installed successfully
    as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个基本的Web应用程序来测试是否成功安装了包，如下所示：
- en: 'Step 1: Create a directory on your BeagleBone Black:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 第1步：在您的BeagleBone Black上创建一个目录：
- en: '`mkdir HomeAutomation`![Python-Flask on BeagleBone Black](img/4602_06_07.jpg)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mkdir HomeAutomation`![Python-Flask on BeagleBone Black](img/4602_06_07.jpg)'
- en: 'Step 2: Change to the directory you created:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 第2步：切换到您创建的目录：
- en: '`cd HomeAutomation`![Python-Flask on BeagleBone Black](img/4602_06_08.jpg)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd HomeAutomation`![Python-Flask on BeagleBone Black](img/4602_06_08.jpg)'
- en: 'Step 3: Create a Python file and write the code to setup a Hello World printing
    webpage server as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 第3步：创建一个Python文件并编写以下代码来设置一个打印Hello World网页服务器的服务器：
- en: '`nano WebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_09.jpg)'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nano WebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_09.jpg)'
- en: 'Now type down the code on the file you created as shown in the following and
    save it:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在按照以下所示在您创建的文件中输入代码并保存：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_10.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_10.jpg)'
- en: 'Step 4: Run the Python program as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 第4步：按照以下步骤运行Python程序：
- en: '`sudo python WebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_11.jpg)'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo python WebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_11.jpg)'
- en: If you see the output as shown in the preceding picture, then you have done
    the previous steps correctly, and we have a server up and running on our BeagleBone
    board.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到的前面图片中的输出，那么您已经正确完成了前面的步骤，我们已经在BeagleBone板上启动并运行了一个服务器。
- en: 'Now open the web server that we have running on the BeagleBone board by opening
    a webpage on the browser of a PC or mobile phone connected to the same LAN network
    to which the BeagleBone is connected. In order to do this type the following:
    `IPAddress_of_BeagleBone_Board:5000`, so, in my case, it would be `192.168.1.20:5000`
    on the URL address bar on the browser where `5000` is the default port number
    at which Python-Flask routes its connection. You can change this to different
    port numbers. Read more on the web to better understand different ports of web
    servers.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在通过打开连接到同一局域网（与 BeagleBone 连接的局域网）的 PC 或手机上的网页来打开我们在 BeagleBone 板上运行的网络服务器。为了做到这一点，输入以下内容：`BeagleBone
    板的 IP 地址:5000`，所以，在我的情况下，它将是浏览器地址栏上的 `192.168.1.20:5000`，其中 `5000` 是 Python-Flask
    路由其连接的默认端口号。你可以将其更改为不同的端口号。在网络上了解更多关于不同网络服务器端口的详细信息。
- en: 'When you make the call to the server from the browser, you should see something
    like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当你从浏览器调用服务器时，你应该会看到类似下面的内容：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_12.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask 在 BeagleBone Black 上](img/4602_06_12.jpg)'
- en: 'You will also be able to see the request call made by the browser to the server
    on BeagleBone as shown in the following screenshot:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将能够看到浏览器在 BeagleBone 服务器上发出的请求调用，如下面的截图所示：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_13.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask 在 BeagleBone Black 上](img/4602_06_13.jpg)'
- en: 'Hit *Ctrl* + *C* to stop it:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 按 *Ctrl* + *C* 来停止它：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_14.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask 在 BeagleBone Black 上](img/4602_06_14.jpg)'
- en: Now that was a very basic thing we did using Python-Flask by echoing a text
    line.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们用 Python-Flask 通过回显一行文本做了一件非常基础的事情。
- en: 'Let''s go ahead and do something using HTML layouts to make the web page look
    better. To do this create a directory called `templates` inside the home automation
    directory:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续使用 HTML 布局做一些事情，使网页看起来更好。为此，在家庭自动化目录内创建一个名为 `templates` 的目录：
- en: '`mkdir templates`![Python-Flask on BeagleBone Black](img/4602_06_15.jpg)'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mkdir templates`![Python-Flask 在 BeagleBone Black 上](img/4602_06_15.jpg)'
- en: 'Switch to the new templates directory you created in order to create and save
    the HTML file inside it:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 切换到你创建的新模板目录，以便在其中创建和保存 HTML 文件：
- en: '`cd templates`![Python-Flask on BeagleBone Black](img/4602_06_16.jpg)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd templates`![Python-Flask 在 BeagleBone Black 上](img/4602_06_16.jpg)'
- en: So this directory will be the place where you will find the HTML and CSS files
    through which you can route the web server to respond to requests from the client
    devices browser.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这个目录将是您找到 HTML 和 CSS 文件的地方，通过这些文件可以将网络服务器路由到客户端设备浏览器的请求。
- en: 'Now let''s go ahead and create an HTML page inside this directory as shown
    in the following screenshot:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续在这个目录内创建一个 HTML 页面，如下面的截图所示：
- en: '`nano index.html`![Python-Flask on BeagleBone Black](img/4602_06_17.jpg)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nano index.html`![Python-Flask 在 BeagleBone Black 上](img/4602_06_17.jpg)'
- en: 'Once you are done with typing the content in the HTML file, as shown in the
    preceding picture, you can save the file by hitting *Ctrl* + *X* to save it. Once
    you have saved it, go ahead and switch back to the home automation directory:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在 HTML 文件中输入内容完成，如图所示，你可以通过按 *Ctrl* + *X* 来保存文件。保存后，继续切换回家庭自动化目录：
- en: '`cd ..`![Python-Flask on BeagleBone Black](img/4602_06_18.jpg)'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cd ..`![Python-Flask 在 BeagleBone Black 上](img/4602_06_18.jpg)'
- en: 'Now we need to write a different program to route the web server to the HTML
    file that we created. Instead of writing something from scratch, let us modify
    the `WebApp.py` file that we created before and save it as `WebAppFromTemplate.py`,
    as most of the lines of code are same. See in the following screenshot:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要编写一个不同的程序来将网络服务器路由到我们创建的 HTML 文件。而不是从头开始编写，让我们修改之前创建的 `WebApp.py` 文件，并将其保存为
    `WebAppFromTemplate.py`，因为大部分代码行都是相同的。如下面的截图所示：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_19.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask 在 BeagleBone Black 上](img/4602_06_19.jpg)'
- en: 'Once you have edited the file and saved it as `WebAppFromTemplate.py`, you
    can go ahead and run the code as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你编辑了文件并将其保存为 `WebAppFromTemplate.py`，你可以继续运行以下代码：
- en: '`sudo python WebAppFromTemplate.py`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo python WebAppFromTemplate.py`'
- en: 'Again, let''s go ahead and open the URL from the browser and check the output.
    You should see something similar to the web page shown in the picture below:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，让我们打开浏览器中的 URL 并检查输出。你应该会看到类似于下面图片所示的网页：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_20.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask 在 BeagleBone Black 上](img/4602_06_20.jpg)'
- en: Now you can see that the text **Webpage from a template!** is formatted using
    HTML, and you can see it as an HTML based web page.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以看到文本**Webpage from a template!**是使用HTML格式化的，并且您可以看到它作为一个基于HTML的网页。
- en: 'Like last time, you will see the HTTP call from the browser for debugging the
    shell:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 和上次一样，您将看到浏览器为调试shell发出的HTTP调用：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_21.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_21.jpg)'
- en: For the project that we have in this chapter to control an AC bulb from Internet,
    we should have buttons on the web page instead of just the text that we displayed
    previously.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章中我们控制来自互联网的交流灯泡的项目，我们应该在网页上放置按钮，而不是之前显示的纯文本。
- en: In order to have buttons on the HTML page we need to write HTML code for the
    webpage template and similarly we should write Python code to read the input when
    the buttons are clicked on the webpage. We can use these inputs to change the
    states of the GPIOs on the BeagleBone Black using Python code.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在HTML页面上放置按钮，我们需要编写网页模板的HTML代码，同样，我们也应该编写Python代码来读取网页上按钮点击时的输入。我们可以使用这些输入通过Python代码来改变BeagleBone
    Black上GPIO的状态。
- en: We will be looking into the details of how we can toggle the GPIO states from
    HTML button click inputs in the project section of this chapter. Before that,
    as the last part of this topic, let's create an HTML page with button inputs,
    read those inputs when they are made, and print a text that this particular button
    was clicked. We will have two buttons on the web page and these will be **ON**
    and **OFF**. Whenever any of these are clicked on the web page, the Python code
    will print that the particular button was clicked. Let's go ahead and do that.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章的项目部分详细探讨如何从HTML按钮点击输入中切换GPIO状态。在此之前，作为这个主题的最后一部分，让我们创建一个带有按钮输入的HTML页面，当这些输入被触发时读取它们，并打印出特定按钮被点击的文本。网页上将有两个按钮，它们将是**ON**和**OFF**。无论哪个按钮在网页上被点击，Python代码都会打印出该按钮被点击的信息。让我们继续做吧。
- en: 'First, switch back to the templates folder and create a file named `main.html`
    file with the content as shown in the following screenshot:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，切换回模板文件夹，创建一个名为`main.html`的文件，其内容如以下截图所示：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_22.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_22.jpg)'
- en: Now you can see that it has two button elements with ID on and off.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以看到它有两个带有ID的按钮元素。
- en: 'Once you are done with creating this file, save it and go back to the home
    automation directory, edit the file `WebAppFromTemplate.py` as shown in following
    screenshot, and save it as `ControlWebApp.py`:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 完成创建此文件后，保存它并返回到智能家居目录，根据以下截图编辑文件`WebAppFromTemplate.py`，并将其保存为`ControlWebApp.py`：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_23.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_23.jpg)'
- en: 'Once you have saved it, you can go ahead and run the program as follows:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 保存后，您可以继续运行程序，如下所示：
- en: '`sudo python ControlWebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_24.jpg)'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sudo python ControlWebApp.py`![Python-Flask on BeagleBone Black](img/4602_06_24.jpg)'
- en: 'Now you can open the webpage and see how it looks. You should see something
    similar to the following screenshot:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您可以打开网页，看看它的样子。您应该会看到以下截图类似的内容：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_25.jpg)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_25.jpg)'
- en: 'When you click on the **ON** button, you should see something like the following
    screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**ON**按钮时，您应该会看到以下截图类似的内容：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_26.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_26.jpg)'
- en: 'The output is as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 输出如下：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_27.jpg)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_27.jpg)'
- en: 'When you click on the **OFF** button, you should see something like the following
    screenshot:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**OFF**按钮时，您应该会看到以下截图类似的内容：
- en: '![Python-Flask on BeagleBone Black](img/4602_06_28.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![Python-Flask on BeagleBone Black](img/4602_06_28.jpg)'
- en: So now we have a program that can print which button was clicked. All we need
    is to write a program to change the state of the GPIO available on BeagleBone
    Black to HIGH and LOW whenever a button is pressed on the web page. We will be
    doing this in the project topic of this chapter. Before doing that, in the topic
    of this chapter, we will learn how a relay circuit works and how we can switch
    a relay circuit using the very little voltage that we get from the GPIO pins of
    the BeagleBone Black. In this way we will be able to use the relay to switch the
    AC Bulb on and off.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们现在有一个程序可以打印出哪个按钮被点击了。我们只需要编写一个程序，在网页上按下按钮时，将BeagleBone Black上可用的GPIO的状态改变为高和低。我们将在本章的项目主题中这样做。在这样做之前，在本章的主题中，我们将学习继电器电路是如何工作的，以及我们如何使用从BeagleBone
    Black的GPIO引脚获得的非常低的电压来切换继电器电路。这样我们就能使用继电器来开关交流灯泡。
- en: Transistors, relays, power switches
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 晶体管、继电器、电源开关
- en: 'So basically, to switch an AC appliance or any circuit, you will need a switch,
    just like you have in your houses, where you have a switch to turn on a bulb or
    a fan. There is a basic circuit involved which looks very much like the following
    picture:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，基本上，要切换交流电器或任何电路，你需要一个开关，就像你在家里有的那样，你有一个开关来打开灯或风扇。涉及的基本电路看起来非常像下面的图片：
- en: '![Transistors, relays, power switches](img/4602_06_29.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_29.jpg)'
- en: So, as we can see in the preceding picture, if you toggle the switch it's going
    to open and close the circuit. This in turn will make the bulb go off and on.
    But this is done mechanically in normal mechanical switches.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，正如我们可以在前面的图片中看到的那样，如果你切换开关，它将打开和关闭电路。这反过来会使灯泡关闭和开启。但这在普通机械开关中是机械完成的。
- en: 'Whenever we want the same action to be performed, we will be using the electrically
    controlled switches, which are on an electrical relay. The image below shows an
    electrically controlled relay in off and on states:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 每当我们想要执行相同的动作时，我们都会使用电控开关，这些开关位于电气继电器上。下面的图片显示了电气继电器在开启和关闭状态下的图像：
- en: '![Transistors, relays, power switches](img/4602_06_30.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_30.jpg)'
- en: In the preceding diagram you can see that whenever the power is supplied to
    the coil from the **3V** power supply, the coil energizes and acts like a magnet
    pulling the terminal down. This connects the other terminal and closes the circuit
    and current flows through the circuit from the **6V** battery to the DC lamp.
    You can see this in action in Figure 2 in the preceding image. And when the coil
    is de-energized, as shown in Figure 1, the terminal is left open, which cuts off
    the circuit and opens it up so the lamp is in the off state, as no current flows
    through the circuit. Again, in the preceding example, you can see that a mechanical
    switch is used to switch the low voltage supply (3V) and the electrical relay
    is switching the high voltage supply.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，你可以看到，当电源从**3V**电源供给线圈时，线圈被激活并像磁铁一样拉动端子向下。这连接了另一个端子并闭合了电路，电流从**6V**电池流向直流灯。你可以在前面的图像中的图2中看到这个动作。而当线圈失电时，如图1所示，端子保持开放，这切断了电路并使其打开，因此灯处于关闭状态，因为没有电流通过电路。再次，在前面的例子中，你可以看到使用机械开关来切换低压供电（3V），而电气继电器则切换高压供电。
- en: Usually the easily available relays are off 5V DC operated where the voltage
    needed to energize the coil is 5V and enough current supply. But the GPIOs available
    on BeagleBone board are 3.3V at HIGH and 0V at LOW states respectively. We will
    be using a new electronic element in between to switch the low voltage supply,
    and this element is the transistor. I won't be going into details of types of
    transistor and their operation. You can browse around to learn more about it in
    detail. But in basic terms, it's an electronically controlled switch whenever
    base of the transistor is given supply i.e. on conduction happens via collector
    emitter and when base of transistor is low i.e. off, no conduction takes place.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 通常容易获得的继电器是5V直流供电的，其中线圈激活所需的电压是5V，以及足够的电流供应。但BeagleBone板上可用的GPIO在HIGH状态下为3.3V，在LOW状态下为0V。我们将在其中间使用一个新的电子元件来切换低压供电，这个元件是晶体管。我不会深入讲解晶体管类型及其工作原理的细节。你可以浏览一下，详细了解它。但在基本术语中，当晶体管的基极供电时，它就是一个电子控制的开关，即导通通过集电极和发射极；当晶体管的基极为低，即关闭时，没有导通发生。
- en: 'Look at the following diagram to understand how our circuit is going to be
    with a transistor interfaced with the relay when the relay is used to make a connection
    for the AC Bulb:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 观察以下图表，了解当使用继电器为AC灯泡建立连接时，我们的电路将如何通过晶体管与继电器接口：
- en: '![Transistors, relays, power switches](img/4602_06_31.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_31.jpg)'
- en: So whenever the base driver is ON, that is to say HIGH, it will switch on the
    relay and whenever the base of the transistor is OFF, or LOW it will switch off
    the relay and, in turn, switch off the AC bulb.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，每当基极驱动器打开，即高电平时，它将打开继电器；而每当晶体管的基极关闭，或低电平时，它将关闭继电器，进而关闭AC灯泡。
- en: You can directory connect the base of the transistor to the GPIO of the BeagleBone
    board which will turn the transistor on and off whenever the GPIO pin is HIGH
    and LOW respectively.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以直接将晶体管的基极连接到BeagleBone板的GPIO上，这样当GPIO引脚为高电平时，晶体管将打开，当GPIO引脚为低电平时，晶体管将关闭。
- en: 'Relays board are available that are ready-made with transistors and relays.
    You can directly interface these with BeagleBone boards or with any other microcontroller
    boards as you can see in the following picture:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 有现成的继电器板，带有晶体管和继电器。您可以直接将这些与BeagleBone板或其他任何微控制器板接口，如下面图片所示：
- en: '![Transistors, relays, power switches](img/4602_06_32.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_32.jpg)'
- en: Getting one of these will make your work simple, but if you want to make one
    by yourself you can also do that researching it on the Internet. To make it easier
    for the next steps, I got one of the ready-made modules and interfaced it to the
    GPIO of the BeagleBone Black. The connections are pretty straightforward, as shown
    in the previous figures. D1 of the relay module is connected to GPIO_60 i.e. P9_12
    and Vcc to 5V on BeagleBone Black, and the Gnd pin of the relay module is connected
    to the Gnd Pin of the relay module. Connect the phase and neutral wire from the
    AC bulb via the K1 NO and C terminals of the relay, as the D1 input corresponds
    to switching the K1 relay in the module.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 获得这些之一将使您的工作变得简单，但如果您想自己制作，也可以通过在互联网上搜索来实现。为了使下一步更容易，我获得了一个现成的模块，并将其接口连接到BeagleBone
    Black的GPIO上。连接相当直接，如前图所示。继电器模块的D1连接到GPIO_60，即P9_12，Vcc连接到BeagleBone Black的5V，继电器模块的Gnd引脚连接到继电器模块的Gnd引脚。通过继电器的K1
    NO和C端子将AC灯泡的相线和零线连接到继电器，因为D1输入对应于模块中K1继电器的切换。
- en: '![Transistors, relays, power switches](img/4602_06_47.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_47.jpg)'
- en: You can see the schematic given above for more clear details about the circuit
    connections.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过查看上面给出的电路图来获得更多关于电路连接的详细信息。
- en: '![Transistors, relays, power switches](img/4602_06_33.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![晶体管、继电器、电源开关](img/4602_06_33.jpg)'
- en: Once you are done with the circuit connections, use the blink code that we used
    in the second chapter to test whether the relay is switching on and off, or else
    go ahead to the next topic to write down the code to control the circuit from
    the web page.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦完成电路连接，使用我们在第二章中使用的闪烁代码来测试继电器是否能够打开和关闭，或者继续到下一个主题，编写从网页控制电路的代码。
- en: 'Advanced project: An Internet controlled power switch – controlling an AC bulb
    from the Internet'
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级项目：互联网控制电源开关 – 从互联网控制AC灯泡
- en: 'Now we have set up the circuit from the previous topic, we will code it on
    Python to switch the GPIO to HIGH and LOW from the web page. You can proceed and
    write the code as shown in the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经从上一个主题中设置了电路，我们将用Python编写代码来从网页切换GPIO到高电平和低电平。您可以继续编写如下截图所示的代码：
- en: '![Advanced project: An Internet controlled power switch – controlling an AC
    bulb from the Internet](img/4602_06_34.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：互联网控制电源开关 – 从互联网控制AC灯泡](img/4602_06_34.jpg)'
- en: Now save the file as `GPIOControlWebApp.py`.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在将文件保存为 `GPIOControlWebApp.py`。
- en: 'Let''s run the code to switch the lamp on and off, and go ahead and open the
    page from the Android tablet. The tablet is connected to the same LAN Wi-Fi router
    as the BeagleBone board. Click the on and off buttons and you will see the output
    in the shell terminal as shown in the following screenshot:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们运行代码来开关灯泡，然后从Android平板电脑打开页面。该平板电脑连接到与BeagleBone板相同的LAN Wi-Fi路由器。点击开关按钮，您将在以下截图所示的shell终端中看到输出：
- en: '![Advanced project: An Internet controlled power switch – controlling an AC
    bulb from the Internet](img/4602_06_35.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：互联网控制电源开关 – 从互联网控制AC灯泡](img/4602_06_35.jpg)'
- en: 'And the bulb will turn on and off as shown in the following pictures:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 灯泡将像以下图片所示那样开关：
- en: '![Advanced project: An Internet controlled power switch – controlling an AC
    bulb from the Internet](img/4602_06_36.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：互联网控制电源开关 – 从互联网控制AC灯泡](img/4602_06_36.jpg)'
- en: Bulb is in the off state
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 灯泡处于关闭状态
- en: '![Advanced project: An Internet controlled power switch – controlling an AC
    bulb from the Internet](img/4602_06_37.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：互联网控制电源开关 – 从互联网控制AC灯泡](img/4602_06_37.jpg)'
- en: Bulb is in the on state
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 灯泡处于开启状态
- en: But right now, we are just doing this on our local network within our home router
    LAN network to which the BeagleBone board is connected. What if we wanted to control
    the bulb via a 3G connection available on our phone? In this case you need to
    route your BeagleBone Black and connect to it via the Internet from your phone,
    which is connected to the Internet via 3G. If you go back to web servers topic
    in this chapter you can see that there are lots of routers, DNS gateways in between
    to connect to a server from one end of the Internet from a client to the server.
    In our case, our BeagleBone board device itself is acting as a server. We will
    be just be port forwarding our router to redirect the requests that comes to the
    router's public IP address to the particular port at which BeagleBone Black is
    hosting its server, that is 5000, in our case, the default port at which Python-Flask
    routes its requests. So, let's go ahead and do the port forwarding to access the
    web server on the BeagleBone board via the public IP assigned to our router by
    the Internet service provider.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 但现在，我们只是在我们的本地网络内，在我们的家庭路由器LAN网络中进行此操作，BeagleBone板连接到这个网络。如果我们想通过手机上的3G连接来控制灯泡怎么办？在这种情况下，你需要将你的BeagleBone
    Black路由并从你的手机通过互联网连接到它，你的手机通过3G连接到互联网。如果你回到本章的Web服务器主题，你可以看到有很多路由器、DNS网关在客户端和服务器之间连接到互联网的任一端。在我们的情况下，我们的BeagleBone板设备本身正在充当服务器。我们只是将路由器的端口转发设置好，将路由器公共IP地址收到的请求重定向到BeagleBone
    Black托管服务器的特定端口，即5000，在我们的例子中，这是Python-Flask路由请求的默认端口。所以，让我们继续进行端口转发，通过互联网服务提供商分配给我们的路由器的公网IP地址来访问BeagleBone板上的Web服务器。
- en: Setting up port forwarding
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置端口转发
- en: 'Follow the steps to set up port forwarding:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤设置端口转发：
- en: As we did in [Chapter 1](ch01.html "Chapter 1. Getting Started with BeagleBone")*,
    Getting Started with BeagleBone*, login into your router's configuration page:![Setting
    up port forwarding](img/4602_06_38.jpg)
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们在[第1章](ch01.html "第1章. 开始使用BeagleBone")*开始使用BeagleBone*中做的那样，登录到你的路由器配置页面：![设置端口转发](img/4602_06_38.jpg)
- en: Go to **ADVANCED** settings:![Setting up port forwarding](img/4602_06_39.jpg)
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**高级**设置：![设置端口转发](img/4602_06_39.jpg)
- en: Go to **Advanced Setup**:![Setting up port forwarding](img/4602_06_40.jpg)
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**高级设置**：![设置端口转发](img/4602_06_40.jpg)
- en: Click on **Port Forwarding**:![Setting up port forwarding](img/4602_06_41.jpg)
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**端口转发**：![设置端口转发](img/4602_06_41.jpg)
- en: Click on **Add Custom Service**.You will see the page as shown in the following
    screenshot:![Setting up port forwarding](img/4602_06_42.jpg)
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**添加自定义服务**。你将看到如下截图所示的页面：![设置端口转发](img/4602_06_42.jpg)
- en: 'Fill in the details and save the configuration by clicking on **Apply**:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 填写详细信息，然后通过点击**应用**来保存配置：
- en: '![Setting up port forwarding](img/4602_06_43.jpg)![Setting up port forwarding](img/4602_06_44.jpg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![设置端口转发](img/4602_06_43.jpg)![设置端口转发](img/4602_06_44.jpg)'
- en: 'Once you are done with this. Go to Google and type in `what is my ip?` This
    will check your public IP Address, and you should get the output as shown in the
    following screenshot:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些操作后，去谷歌搜索“我的IP是什么？”这将检查你的公网IP地址，你应该会得到如下截图所示的输出：
- en: '![Setting up port forwarding](img/4602_06_45.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![设置端口转发](img/4602_06_45.jpg)'
- en: 'Once you have this, pull out your phone and connect to 3G, using this public
    IP address followed by port number `5000` to access your BeagleBone board. This
    will allow you to switch the AC bulb on and off from your phone. You will get
    a web page as shown in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了这个，拿出你的手机并连接到3G，使用这个公网IP地址加上端口号`5000`来访问你的BeagleBone板。这将允许你通过手机开关AC灯泡。你将看到一个如下截图所示的网页：
- en: '![Setting up port forwarding](img/4602_06_46.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![设置端口转发](img/4602_06_46.jpg)'
- en: Now you can give the web link `183.82.111.33:5000` to any person who is connected
    to the Internet to access you BeagleBone board and control the bulb from any place
    around the world. Thus, you have your home automation system connected to the
    Internet. You can also call it as you have built your Internet of Things project
    by end of this chapter. Try it out on your own to control two appliances, change
    the style of the HTML webpage and add colors and control graphics to the webpage
    to learn and have more fun.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以将网络链接`183.82.111.33:5000`提供给任何连接到互联网的人，以便他们可以访问你的BeagleBone板，并从世界任何地方控制灯泡。这样，你的家庭自动化系统就已经连接到互联网了。你也可以称之为在本章结束时你已经构建了自己的物联网项目。尝试自己控制两个电器，更改HTML网页的风格，并为网页添加颜色和控制图形，以学习和获得更多乐趣。
- en: Summary
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learnt how web servers work to setup our own home automation
    system where an AC bulb is controlled from any place around the world via the
    Internet. In the process of building it we learnt how to set up a web server on
    a BeagleBone board using a Python-Flask web framework. Then we also learnt how
    to interface an AC circuit with a BeagleBone board using a relay circuit to control
    an AC bulb via the web server running on the BeagleBone board. In this way, you
    have built an advanced Internet of Things project in this chapter. In the next
    chapter, we will be looking at how to interface a camera with the BeagleBone Black
    and work with OpenCV for image processing on BeagleBone Black.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何通过互联网设置我们自己的家庭自动化系统，其中空调灯泡可以从世界任何地方通过互联网进行控制。在构建它的过程中，我们学习了如何在BeagleBone板上使用Python-Flask网络框架设置一个网络服务器。然后我们还学习了如何使用继电器电路将交流电路与BeagleBone板连接起来，通过运行在BeagleBone板上的网络服务器来控制交流灯泡。通过这种方式，你已经在本章中构建了一个高级的物联网项目。在下一章中，我们将探讨如何将摄像头与BeagleBone
    Black连接起来，并在BeagleBone Black上使用OpenCV进行图像处理。
