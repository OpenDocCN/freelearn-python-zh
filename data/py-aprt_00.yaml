- en: Preface
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前言
- en: This book came about by circuitous means. In 2013, when we incorporated our
    Norway-based software consultancy and training business *Sixty North*, we were
    courted by *Pluralsight*, a publisher of online video training material, to produce
    Python training videos for the rapidly growing MOOC market. At the time, we had
    no experience of producing video training material, but we were sure we wanted
    to carefully structure our introductory Python content to respect certain constraints.
    For example, we wanted an absolute minimum of forward references since those would
    be very inconvenient for our viewers. We’re both men of words who live by Turing
    Award winner Leslie Lamport’s maxim *“If you’re thinking without writing you only
    think you’re thinking”*, so it was natural for us to attack video course production
    by first writing a script.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是通过迂回的方式产生的。2013年，当我们成立了位于挪威的软件咨询和培训公司 *Sixty North* 时，我们受到了在线视频培训材料出版商 *Pluralsight*
    的追捧，他们希望我们为迅速增长的大规模在线开放课程（MOOC）市场制作Python培训视频。当时，我们没有制作视频培训材料的经验，但我们确定希望仔细构建我们的Python入门内容，以尊重某些限制。例如，我们希望最少使用前向引用，因为这对我们的观众来说非常不方便。我们都是言辞之人，遵循图灵奖得主莱斯利·兰波特的格言
    *“如果你在不写作的情况下思考，你只是以为自己在思考”*，因此，我们首先通过撰写脚本来攻击视频课程制作。
- en: In short order our online video course was written, recorded, and published
    by *Pluralsight* as [Python Fundamentals](https://www.pluralsight.com/courses/python-fundamentals),
    to a hugely positive reception which has sustained for several years now. From
    the earliest days we had in mind that the script could form the basis of a book,
    although it’s fair to say we underestimated the effort required to transform the
    content from a good script into a better book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 很快，我们的在线视频课程被 *Pluralsight* 以 [Python基础知识](https://www.pluralsight.com/courses/python-fundamentals)
    的形式写成、录制并发布，受到了极其积极的反响，这种反响已经持续了几年。从最早的日子起，我们就想到这个脚本可以成为一本书的基础，尽管可以说我们低估了将内容从一个好的脚本转化为一本更好的书所需的努力。
- en: '*The Python Apprentice* is the result of that transformation. It can be used
    either as a standalone Python tutorial, or as the companion volume to our video
    course, depending on which style of learning suits you best. *The Python Apprentice*
    is the first in a trilogy of three books, comprising in addition [*The Python
    Journeyman*](https://leanpub.com/python-journeyman) and [*The Python Master*](https://leanpub.com/python-master).
    The two later books correspond to our subsequent *Pluralsight* courses [*Python
    - Beyond the Basics*](https://app.pluralsight.com/library/courses/python-beyond-basics/)
    and [*Advanced Python*](https://app.pluralsight.com/library/courses/advanced-python/).'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '*Python学徒* 就是这种转变的结果。它可以作为独立的Python教程，也可以作为我们视频课程的配套教材，具体取决于哪种学习方式更适合您。*Python学徒*
    是三本书中的第一本，另外两本分别是 [*Python熟练者*](https://leanpub.com/python-journeyman) 和 [*Python大师*](https://leanpub.com/python-master)。后两本书对应于我们随后的
    *Pluralsight* 课程 [*Python - 进阶*](https://app.pluralsight.com/library/courses/python-beyond-basics/)
    和 [*高级Python*](https://app.pluralsight.com/library/courses/advanced-python/)。'
- en: Errata and Suggestions
  id: totrans-4
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 勘误和建议
- en: All the material in this book has been thoroughly reviewed and tested; nevertheless,
    it’s inevitable that some mistakes have crept in. If you do spot a mistake, we’d
    really appreciate it if you’d let us know via the *Leanpub* [Python Apprentice
    Discussion](https://leanpub.com/python-apprentice/feedback) page so we can make
    amends and deploy a new version.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有材料都经过了彻底的审查和测试；然而，不可避免地会出现一些错误。如果您发现了错误，我们会非常感激您通过 *Leanpub* [Python学徒讨论](https://leanpub.com/python-apprentice/feedback)
    页面让我们知道，这样我们就可以进行修正并部署新版本。
- en: Conventions Used in This Book
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书中使用的约定
- en: 'Code examples in this book are shown in a fixed-width text which is colored
    with syntax highlighting:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的代码示例显示为带有语法高亮的固定宽度文本：
- en: '[PRE0]'
  id: totrans-8
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Some of our examples show code saved in files, and others — such as the one
    above — are from interactive Python sessions. In such interactive cases, we include
    the prompts from the Python session such as the triple-arrow (`>>>`) and triple-dot
    (`...`) prompts. You don’t need to type these arrows or dots. Similarly, for operating
    system shell-commands we will use a dollar prompt (`$`) for Linux, macOS and other
    Unixes, or where the particular operating system is unimportant for the task at
    hand:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的一些示例显示了保存在文件中的代码，而其他一些示例（如上面的示例）来自交互式Python会话。在这种交互式情况下，我们包括Python会话中的提示符，如三角形箭头（`>>>`）和三个点（`...`）提示符。您不需要输入这些箭头或点。同样，对于操作系统的shell命令，我们将使用Linux、macOS和其他Unix系统的美元提示符（`$`），或者在特定操作系统对于当前任务无关紧要的情况下使用。
- en: '[PRE1]'
  id: totrans-10
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this case, you don’t need to type the `$` character.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，您不需要输入 `$` 字符。
- en: 'For Windows-specific commands we will use a leading greater-than prompt:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于特定于Windows的命令，我们将使用一个前导大于提示符：
- en: '[PRE2]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Again, there’s no need to type the `>` character.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，无需输入 `>` 字符。
- en: 'For code blocks which need to be placed in a file, rather than entered interactively,
    we show code without any leading prompts:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 对于需要放置在文件中而不是交互输入的代码块，我们显示的代码没有任何前导提示符：
- en: '[PRE3]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We’ve worked hard to make sure that our lines of code are short enough so that
    each single logical line of code corresponds to a single physical line of code
    in your book. However, the vagaries of publishing e-books to different devices
    and the very genuine need for occasional long lines of code mean we can’t guarantee
    that lines don’t wrap. What we can guarantee, however, is that where a line does
    wrap, the publisher has inserted a backslash character `\` in the final column.
    You need to use your judgement to determine whether this character is legitimate
    part of the code or has been added by the e-book platform.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们努力确保我们的代码行足够短，以便每一行逻辑代码对应于您的书中的一行物理代码。然而，电子书发布到不同设备的变化和偶尔需要长行代码的真正需求意味着我们无法保证行不会换行。然而，我们可以保证，如果一行换行，出版商已经在最后一列插入了一个反斜杠字符
    `\`。您需要自行判断这个字符是否是代码的合法部分，还是由电子书平台添加的。
- en: '[PRE4]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: If you see a backslash at the end of the line within the above quoted string,
    it is *not* part of the code, and should not be entered.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在上述引用的字符串中看到一条反斜杠，那么它*不*是代码的一部分，不应该输入。
- en: 'Occasionally, we’ll number lines of code so we can refer to them easily from
    the narrative next. These line numbers should not be entered as part of the code.
    Numbered code blocks look like this:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 偶尔，我们会对代码行进行编号，这样我们就可以很容易地从下一个叙述中引用它们。这些行号不应该作为代码的一部分输入。编号的代码块看起来像这样：
- en: '[PRE5]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Sometimes we need to present code snippets which are incomplete. Usually this
    is for brevity where we are adding code to an existing block, and where we want
    to be clear about the block structure without repeating all existing contents
    of the block. In such cases we use a Python comment containing three dots `# ...`
    to indicate the elided code:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要呈现不完整的代码片段。通常这是为了简洁起见，我们要向现有的代码块添加代码，并且我们希望清楚地了解代码块的结构，而不重复所有现有的代码块内容。在这种情况下，我们使用包含三个点的Python注释`#
    ...`来指示省略的代码：
- en: '[PRE6]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Here it is implied that some other code already exists within the `Flight` class
    block before the `make_boarding_cards()` function.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这里暗示了在`Flight`类块中的`make_boarding_cards()`函数之前已经存在一些其他代码。
- en: Finally, within the text of the book, when we are referring to an identifier
    which is also a function we will use the identifier with empty parentheses, just
    as we did with `make_boarding_cards()` in the preceding paragraph.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在书的文本中，当我们提到一个既是标识符又是函数的标识符时，我们将使用带有空括号的标识符，就像我们在前面一段中使用`make_boarding_cards()`一样。
