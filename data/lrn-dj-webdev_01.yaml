- en: Chapter 1. Introduction to Django
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章 Django简介
- en: Welcome to version 2.0 of Development with Django!
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到Django开发2.0版本！
- en: Django is a web development framework, and web development is a skill. To master
    any skill one can follow the famous "10,000 hours" rule, which says that if you
    practice anything for that amount of time you will certainly become an expert
    at it. But that's a lot of time, and without a proper plan, this can go wrong.
    Terribly wrong.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Django是一个网页开发框架，网页开发是一种技能。要掌握任何技能，可以遵循著名的"1万小时"规则，即如果你练习任何东西达到那么长时间，你肯定会成为专家。但那是很长的时间，没有合适的计划，这可能会出错。非常出错。
- en: So, is there any better way to achieve your goal? Yes! Break the skill you want
    to learn into smaller subskills and then master them one at a time. (Programmers
    call this the "divide and conquer" rule.) You will need to identify the most important
    subskills by researching them. The more the frequent mentions of the subskill,
    the more important it becomes to master.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，有没有更好的方法来实现你的目标？有！将你想学习的技能分解成更小的子技能，然后逐个掌握它们。 （程序员称之为"分而治之"规则。）你需要通过研究来确定最重要的子技能。子技能被频繁提及的次数越多，掌握它就越重要。
- en: 'As you have decided to learn a new skill, as the author of this book, I request
    that you make a commitment, that you will stick with this book in the early frustrating
    hours. Frustration happens when you are learning a new thing, and trust me on
    this: when you feel it''s too simple, you are doing it right.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本书的作者，我请求您做出承诺，即在最初令人沮丧的时刻坚持学习本书。学习新技能时会感到沮丧，相信我：当你觉得太简单时，你是在做对的。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Why web development in the first place?
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先为什么要进行网页开发？
- en: What has changed in web development
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网页开发中的变化
- en: The MVC pattern in web development
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网页开发中的MVC模式
- en: Why Django
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为什么选择Django
- en: Inside Django
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Django内部
- en: Why web development in the first place?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 首先为什么要进行网页开发？
- en: A website makes the first impression about the company or product directly on
    a global audience. Every startup now has a website, which helps to pitch their
    idea to their potential clients or investors.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 网站直接在全球观众面前给公司或产品留下第一印象。现在每个初创公司都有一个网站，这有助于向潜在客户或投资者推销他们的想法。
- en: Everything is online now, so instead of just sitting and watching the change,
    why not participate and learn to code it? Learning web development is one of the
    most valuable investments you can make with your time. It will not only benefit
    you by getting you a better job, but you will also be able to code your idea into
    a prototype in a very simple and straightforward manner.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切都在线，所以与其坐视变化，为什么不参与并学习编码呢？学习网页开发是你可以用时间做出的最有价值的投资之一。它不仅会通过让你找到更好的工作来使你受益，而且你还可以以非常简单和直接的方式将你的想法编码成原型。
- en: Must-have ingredients for web development include user interface and user experience,
    but they are unfortunately out of the scope of this book.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 网页开发必备的要素包括用户界面和用户体验，但遗憾的是这超出了本书的范围。
- en: What has changed in web development
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 网页开发中的变化
- en: 'Web development has made great progress during the last few years. Some of
    the improvements are listed as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 网页开发在过去几年取得了巨大进步。一些改进列举如下：
- en: '**JavaScript**: Evolved from writing complex selectors to manipulating **Document
    Object Model** (**DOM**). Libraries such as **jQuery** and **AngularJs** have
    made frontend dynamics much simpler. JavaScript has even evolved to build a production-ready
    server-side framework called **node.js**.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**JavaScript**：从编写复杂的选择器到操作**文档对象模型**（**DOM**）。像**jQuery**和**AngularJs**这样的库使前端动态变得更简单。JavaScript甚至发展出了构建生产就绪的服务器端框架**node.js**。'
- en: '**Browsers**: Evolved from being as simplistic as breaking the page across
    browsers to now intelligently restoring the connection, telling you which tab
    is playing music, or flawlessly rendering a real-time game.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**浏览器**：从在各种浏览器上简单地打破页面发展到智能地恢复连接，告诉你哪个标签正在播放音乐，或者无缝地渲染实时游戏。'
- en: '**Open source**: Using code written by someone else has finally become preferable
    than writing your own code. This helped a lot of projects to stop reinventing
    the wheel, **Django** being one of the best examples.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开源**：使用他人编写的代码现在比编写自己的代码更可取。这帮助许多项目停止重复造轮子，**Django**就是最好的例子之一。'
- en: '**API as spinal cord**: Web technologies today might not be the same tomorrow,
    or data might not be represented in the same way or in the same place tomorrow.
    In other words, more devices will come with different screen sizes. Therefore,
    its always best to have text separated from visuals.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API作为脊柱**：今天的网络技术可能明天就不一样，或者数据可能不会以相同的方式或在相同的位置表示。换句话说，更多的设备将带有不同的屏幕尺寸。因此，最好将文本与视觉分开。'
- en: '**User Interface**: In the past, the precious time of the development team
    was consumed by User Interface design. But frameworks such as **Bootstrap** and
    **Foundation** have made web development a lot easier.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用户界面**：过去，开发团队的宝贵时间被用户界面设计消耗。但是像**Bootstrap**和**Foundation**这样的框架使网页开发变得更加容易。'
- en: '**Agile development**: Moving fast in the development cycle is acceptable to
    most startup companies. The complete requirement is never asked for at the beginning
    of the software development cycle. Therefore, continuous customer or stakeholder
    involvement is very important. The Django framework is the most suitable framework
    for this kind of development. As Django''s slogan says, "*the web framework for
    perfectionists with deadlines*".'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**敏捷开发**：在开发周期中快速前进对大多数初创公司是可以接受的。在软件开发周期开始时从未要求完整的需求。因此，持续的客户或利益相关者参与非常重要。Django框架是这种开发的最合适的框架。正如Django的口号所说，"*完美主义者的网络框架，有截止日期*"'
- en: '**Evolution of cloud computing**: This has played a significant role at the
    hosting end of web applications and enables faster, more reliable, and cheaper
    solutions for getting online.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 云计算的演变：这在Web应用程序的托管端发挥了重要作用，并为上线提供了更快、更可靠和更便宜的解决方案。
- en: '**Birth of NoSQL**: Cutting costs much further, NoSQL gave freedoms such as
    **Store it Now, Find The Value Later** and **Store Anything Together** to developers
    being cloud friendly and more fault tolerant.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL的诞生：大大降低成本，NoSQL为开发人员提供了诸如“立即存储，稍后查找价值”和“一起存储任何东西”的自由，使其更适合云环境并具有更强的容错性。
- en: The MVC pattern in web development
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Web开发中的MVC模式
- en: In this book, you will learn about employing a **Model-View-Controller** (**MVC**)
    web framework called Django, which is written in **Python**, a powerful and popular
    programming language.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将了解如何使用一个名为Django的Model-View-Controller（MVC）Web框架，它是用强大而流行的编程语言Python编写的。
- en: MVC works on the idea of separate presentation. The idea behind separated presentation
    is to make a clear division between domain objects that model our perception of
    the real world and presentation objects that are the **user interface** (**UI**)
    elements we see on the screen. Domain objects should be completely self-contained
    and should work without reference to the presentation or data-handling logic (controller).
    They should also be able to support multiple presentations, possibly simultaneously.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: MVC基于分离表示的概念。分离表示的理念是在领域对象（模拟我们对真实世界的看法）和表示对象（我们在屏幕上看到的用户界面（UI）元素）之间进行清晰的划分。领域对象应完全独立，并且应该能够支持多个演示，可能同时进行。
- en: The benefits of this pattern are obvious. With it, designers can work on the
    interface without worrying about data storage or management. And developers are
    able to program the logic of data handling without getting into the details of
    presentation. As a result, the MVC pattern quickly found its way into web languages,
    and serious web developers started to embrace it over previous techniques.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这种模式的好处是显而易见的。有了它，设计师可以在不担心数据存储或管理的情况下工作在界面上。开发人员能够编写数据处理的逻辑，而不必深入了解演示细节。因此，MVC模式迅速进入了Web语言，并且严肃的Web开发人员开始接受它而不是以前的技术。
- en: This book emphasizes on utilizing Django and Python to create a Web 2.0 microblogging
    web application with many common features found in today's Web 2.0 sites. The
    book follows a tutorial style to introduce concepts and explain solutions to problems.
    It is not meant to be a reference manual for Python or Django, for both have plenty
    of resources already. The book only assumes working knowledge of standard web
    technologies (HTML and CSS) and the Python programming language. Django, on the
    other hand, will be explained as we build features throughout the chapters, until
    we realize our goal of having a working Web 2.0 application.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本书强调利用Django和Python创建一个具有今天Web 2.0网站常见功能的微型博客Web应用程序。本书采用教程风格介绍概念并解释问题的解决方案。它不是Python或Django的参考手册，因为两者已经有很多资源。本书只假设对标准Web技术（HTML和CSS）和Python编程语言有工作知识。另一方面，Django将在我们在各章节中构建功能时进行解释，直到我们实现拥有一个可工作的Web
    2.0应用程序的目标。
- en: Multilingual support
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多语言支持
- en: Django supports multilingual websites through its built-in internationalization
    system. This can be very valuable for those working on websites with more than
    one language. The system makes translating the interface a very simple task.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Django通过其内置的国际化系统支持多语言网站。对于那些在拥有多种语言的网站上工作的人来说，这可能非常有价值。该系统使翻译界面变得非常简单。
- en: So, to conclude, Django provides a set of integrated and mature components,
    with excellent documentation, at [http://www.djangoproject.com/documentation/](http://www.djangoproject.com/documentation/).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总之，Django提供了一组集成和成熟的组件，具有出色的文档，网址为[http://www.djangoproject.com/documentation/](http://www.djangoproject.com/documentation/)。
- en: Thanks to its large community of developers and users, there has never been
    a better time to start learning a web development framework!
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 由于其庞大的开发人员和用户社区，现在学习Web开发框架的时机是最好的！
- en: Why Django?
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么选择Django？
- en: Since the spread of the MVC pattern into web development, and unlike most of
    the other languages, Python has enjoyed quite a few choices when it comes to web
    frameworks. Although choosing one from many can be confusing at first, having
    several competing frameworks can only be a good thing for the Python community.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 自MVC模式传播到Web开发以来，与大多数其他语言不同，Python在Web框架方面有了相当多的选择。尽管一开始从众多选择中选择一个可能会令人困惑，但有几个竞争框架只能对Python社区有利。
- en: 'Django is one of the available frameworks for Python, so the question is: what
    sets it apart to become the topic of this book?'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: Django是Python的一个可用框架，所以问题是：它有什么特别之处，以至于成为本书的主题？
- en: First of all, Django provides a set of tightly integrated components. All of
    these components are developed by the Django team itself. Django was originally
    developed as an in-house framework to manage a series of news-oriented websites.
    Later, its code was released on the Internet and the Django team continued its
    development using the open source model. Because of its roots, Django's components
    were designed for integration, reusability, and speed from the start.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，Django提供了一组紧密集成的组件。所有这些组件都是由Django团队自己开发的。Django最初是作为一个内部框架开发的，用于管理一系列面向新闻的网站。后来，它的代码在互联网上发布，Django团队继续使用开源模型进行开发。由于其根源，Django的组件从一开始就被设计用于集成、可重用性和速度。
- en: 'Django''s database component, the Object-relational Mapper (ORM), provides
    a bridge between the data model and the database engine. It supports a large set
    of database systems, and switching from one engine to another is a matter of changing
    a configuration file. This gives the developer great flexibility if a decision
    is made to change from one database engine to another. If you are in trouble,
    you can find the driver (binary Python package) here: [http://www.lfd.uci.edu/~gohlke/pythonlibs/](http://www.lfd.uci.edu/~gohlke/pythonlibs/).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Django的数据库组件，对象关系映射器（ORM），提供了数据模型和数据库引擎之间的桥梁。它支持大量的数据库系统，从一个引擎切换到另一个引擎只是改变一个配置文件的事情。如果决定从一个数据库引擎切换到另一个数据库引擎，这给开发人员带来了很大的灵活性。如果遇到问题，可以在这里找到驱动程序（二进制Python包）：[http://www.lfd.uci.edu/~gohlke/pythonlibs/](http://www.lfd.uci.edu/~gohlke/pythonlibs/)。
- en: In addition, Django provides a neat development environment. It comes with a
    lightweight web server for development and testing. When debugging mode is enabled,
    Django provides very thorough and detailed error messages with a lot of debugging
    information. All of this makes isolating and fixing bugs very easy.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Django提供了一个整洁的开发环境。它带有一个轻量级的Web服务器用于开发和测试。当启用调试模式时，Django提供非常彻底和详细的错误消息，包含大量的调试信息。所有这些都使得隔离和修复错误变得非常容易。
- en: Django supports multilingual websites through its built-in internationalization
    system. This can be very valuable for those working on websites with more than
    one language. The system makes translating the interface a very simple task.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Django通过其内置的国际化系统支持多语言网站。对于那些在拥有多种语言的网站上工作的人来说，这可能非常有价值。该系统使得翻译界面变得非常简单。
- en: 'The standard features expected of a web framework are all available in Django.
    These include the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Django具备一个Web框架所期望的标准功能。这些功能包括以下内容：
- en: A template and text-filtering engine with simple but extensible syntax
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个具有简单但可扩展语法的模板和文本过滤引擎
- en: A form generation and validation API
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 表单生成和验证API
- en: An extensible authentication system
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展的身份验证系统
- en: A caching system for speeding up the performance of applications
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于加速应用程序性能的缓存系统
- en: A feed framework for generating RSS feeds
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个用于生成RSS订阅的饲料框架
- en: Even though Django does not provide a JavaScript library to simplify working
    with Ajax, choosing one and integrating it with Django is a straightforward matter,
    as we will see in later chapters.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Django没有提供简化使用Ajax的JavaScript库，但选择一个库并将其与Django集成是一件简单的事情，我们将在后面的章节中看到。
- en: So, to conclude, Django provides a set of integrated and mature components with
    excellent documentation, thanks to its large community of developers and users.
    With Django available, there has never been a better time to start learning a
    web development framework!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，总之，Django提供了一套集成和成熟的组件，并拥有出色的文档，这要归功于其庞大的开发人员和用户社区。有了Django，现在是学习Web开发框架的最佳时机！
- en: Inside Django
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Django内部
- en: We will mention some important reasons why we use Django for better web development.
    Some of the most important features are explained in the following subsections.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将提到一些使用Django进行更好的Web开发的重要原因。以下小节解释了一些最重要的功能。
- en: Django is mature
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Django是成熟的
- en: Many corporations are directly using Django in their production and with constant
    contributions from developers around the world. Some famous sites include **Pinterest**
    and **Quora**. It has established itself as the perfect web development framework.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 许多公司直接在生产中使用Django，并得到了来自世界各地开发人员的持续贡献。一些著名的网站包括**Pinterest**和**Quora**。它已经成为完美的Web开发框架。
- en: Batteries included
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 电池包含
- en: Django follows Python's **batteries included** philosophy, which means Django
    comes with many extra features and options that are important in solving common
    problems faced during web development.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: Django遵循Python的**电池包含**哲学，这意味着Django带有许多在Web开发过程中解决常见问题的重要额外功能和选项。
- en: Tight integration between the component and modular framework
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组件和模块化框架之间紧密集成
- en: Django is very flexible in terms of its integration with their party module.
    The chances of there existing a popular project (for example, **mongoDB** in database
    domain or **SocialAuth** in **OpenID** main) that does have an **Appliaction Program
    Interface** (**API**) or complete plugin for Django integration are very few.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Django在与第三方模块集成方面非常灵活。存在一个流行的项目（例如数据库领域的**mongoDB**或**OpenID**主要的**SocialAuth**），它没有一个用于Django集成的**应用程序编程接口**（**API**）或完整的插件的可能性非常小。
- en: Object-relational mapper
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 对象关系映射器
- en: This is one of the most important parts of the Django project. Django's database
    component, the ORM, provides a bridge between the data model and the database
    engine. The ORM layer provides features such as encapsulation, portability, safety,
    and expressiveness to Django's **Modal Class**, which are mapped to the configured
    database of choice.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Django项目中最重要的部分之一。Django的数据库组件，ORM，为Django的**模态类**提供了封装、可移植性、安全性和表现力等功能，这些功能映射到配置的选择数据库。
- en: Clean URL design
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 清晰的URL设计
- en: The URL system in Django is very flexible and powerful. It lets you define patterns
    for the URLs in your application and to define Python functions to handle each
    pattern.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: Django中的URL系统非常灵活和强大。它允许您为应用程序中的URL定义模式，并定义Python函数来处理每个模式。
- en: This enables developers to create URLs that are both human-friendly (avoiding
    URL ending patterns such as `.php`, `.aspx`, and so on) and search engine-friendly.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这使开发人员能够创建既人性化（避免URL以`.php`、`.aspx`等结尾的模式）又搜索引擎友好的URL。
- en: Automatic administration interface
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 自动管理界面
- en: Django comes with an administration interface that is ready to be used. This
    interface makes the management of your application's data a breeze. It is also
    highly flexible and customizable.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Django带有一个准备好使用的管理界面。这个界面使得管理应用程序数据变得轻而易举。它也非常灵活和可定制。
- en: Advanced development environment
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 高级开发环境
- en: In addition, Django provides a neat development environment. It comes with a
    lightweight web server for development and testing. When the debugging mode is
    enabled, Django provides very thorough and detailed error messages with a lot
    of debugging information. All of this makes isolating and fixing bugs very easy.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Django提供了一个整洁的开发环境。它配备了一个轻量级的Web服务器用于开发和测试。当启用调试模式时，Django提供非常彻底和详细的错误消息，带有大量的调试信息。所有这些都使得隔离和修复错误变得非常容易。
- en: What's new in Django 1.6 and 1.7
  id: totrans-66
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Django 1.6和1.7中的新功能
- en: 'With the latest release, version 1.6, Django has brought some major changes
    and a few of them are as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在最新版本1.6中，Django带来了一些重大变化，其中一些如下：
- en: Python 3 is officially supported with this release, which means it is stable
    and can be used in production.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3在此版本中得到了官方支持，这意味着它是稳定的，可以用于生产。
- en: The layout is simple. New defaults have been added, the Django Admin template
    has been added by default, and the Sites package has been removed.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 布局简单。添加了新的默认值，默认情况下添加了Django管理模板，并删除了Sites包。
- en: Clickjacking prevention has been added.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加了点击劫持防护。
- en: The default Database is SQLite3.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 默认数据库是SQLite3。
- en: As old APIs are deprecated, the biggest change is that the transactions have
    been improved. The DB layer auto-commit is enabled by default.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随着旧的API被弃用，最大的变化是事务得到了改进。DB层的自动提交默认已启用。
- en: The DB connection in this release is persistant. Until Django 1.5, a new connection
    was made for every HTTP request, but from 1.6, the same connection will be reused
    between requests.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 此版本中的DB连接是持久的。在Django 1.5之前，每个HTTP请求都会建立一个新连接，但从1.6开始，相同的连接将在请求之间重复使用。
- en: Time zone defaults to UTC.
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 时区默认为UTC。
- en: Simple application integration.
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单的应用集成。
- en: Scalable.
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展的。
- en: Powerful configuration mechanism.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 强大的配置机制。
- en: There is no need to have a `models.py` file if you don't have a model.
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果没有模型，就不需要`models.py`文件。
- en: A new method has been added for its subclasses.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为其子类添加了一个新方法。
- en: It allows a cursor to be used as a context manager.
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许将游标用作上下文管理器。
- en: Many features have been added for internationalization, form, and file upload.
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为国际化、表单和文件上传添加了许多功能。
- en: It has a better feature to avoid CSRF.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它具有更好的功能来避免CSRF。
- en: Apart from these, a binary field has been introduced, as have HTML 5 input fields
    (e-mail, URL, and number).
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除此之外，还引入了一个二进制字段，以及HTML 5输入字段（电子邮件、URL和数字）。
- en: 'You can read the newly added features in detail here: [https://docs.djangoproject.com/en/1.7/releases/1.7/](https://docs.djangoproject.com/en/1.7/releases/1.7/).'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在此处详细阅读新添加的功能：[https://docs.djangoproject.com/en/1.7/releases/1.7/](https://docs.djangoproject.com/en/1.7/releases/1.7/)。
- en: Supported databases
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 支持的数据库
- en: 'Django has a great and powerful respect for data. Model the data correctly,
    and the rest of the site will just fall into place. With the convention that Django
    was designed for relational database, unofficial NoSQL implementation exists for
    Django as well. Here is the list of relational databases that Django supports:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Django对数据有着很好和强大的尊重。正确地对数据进行建模，站点的其余部分就会顺理成章。尽管Django是为关系数据库设计的，但非官方的NoSQL实现也存在于Django中。以下是Django支持的关系数据库列表：
- en: '**SQL**: SQLite, MySQL, and PostgreSQL.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQL：SQLite，MySQL和PostgreSQL。
- en: '**SQLite**: This is the default database for Django applications and is mainly
    used for testing purposes.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQLite：这是Django应用程序的默认数据库，主要用于测试目的。
- en: '**PostgreSQL**: This is an open source, widely used RDBS. We will build our
    microblogging example based on this.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PostgreSQL：这是一个广泛使用的开源关系型数据库。我们将基于此构建我们的微博示例。
- en: Note
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: MySQL and PostgreSQL are the two most common databases used in the Django community,
    and PostgreSQL is the most popular in the Django community.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: MySQL和PostgreSQL是Django社区中最常用的两种数据库，而PostgreSQL是Django社区中最受欢迎的。
- en: '**NoSQL**: How about having a single table for your data, whether it contains
    user''s information or their comments, and so on? In other words, how about having
    no rules for the structure of inserted data or nesting data, like Articles with
    subdocument array with comments? Sound strange? Yes, it is. In the early days,
    people were using the one and only relational database concept, but since the
    dawn of the cloud computing era, programmers love to implement NoSQL architecture
    for every possible single project. It doesn''t store and doesn''t follow any normal
    forms. You can''t use joins, but there are many other advantages of using it.'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL：你的数据是否只需要一个表，无论是用户信息还是他们的评论等等？换句话说，是否可以没有插入数据的结构规则或嵌套数据，比如带有评论子文档数组的文章？听起来奇怪吗？是的，它是。在早期，人们使用的是唯一的关系数据库概念，但自从云计算时代开始，程序员们喜欢为每个可能的项目实现NoSQL架构。它不存储也不遵循任何正常形式。你不能使用连接，但使用它有许多其他优点。
- en: App Engine, MongoDB, Elasticsearch, Cassandra, and Redis are some famous NoSQL
    DBs that Django supports. MongoDB is getting popular among the Django community
    these days.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: App Engine、MongoDB、Elasticsearch、Cassandra和Redis是Django支持的一些著名的NoSQL数据库。MongoDB在Django社区中变得越来越受欢迎。
- en: '**MongoDB**: This is an open source, widely used NoSQL document-based database.
    We will be using it for creating our second small application for URL shortener.'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB：这是一个广泛使用的开源NoSQL文档型数据库。我们将用它来创建我们的第二个小型应用程序，用于URL缩短。
- en: In this book, we will mainly deal with three databases from the preceding list,
    but implementation of others can be almost identical with minimal configuration
    changes.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将主要处理前述列表中的三个数据库，但其他数据库的实现几乎可以通过最小的配置更改来实现。
- en: 'There are many famous websites powered by Django. Some of them are as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多由Django提供支持的知名网站。其中一些如下：
- en: '**Pinterest**: A content sharing service, especially for images and videos'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pinterest：一个内容分享服务，特别是图片和视频
- en: '**Disqus**: A blog comment hosting service'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Disqus：一个博客评论托管服务
- en: '**Quora**: A question-and-answer based website'
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Quora：一个基于问题和答案的网站
- en: '**Bitbucket**: A free code hosting site for Git and mercurial'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bitbucket：一个免费的Git和mercurial代码托管站点
- en: '**Mozilla Firefox**: The **Mozilla** support page'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Mozilla Firefox**：**Mozilla**支持页面'
- en: What you will learn using this book
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用本书您将学到的内容
- en: 'This book focuses on building a microblogging web application and adding common
    Web 2.0 features to it. Some of these features are as follows:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 本书侧重于构建微博网站应用程序，并向其添加常见的Web 2.0功能。其中一些功能如下：
- en: '**Creating Django view, model, and controller**: This ideally deals with learning
    the Django framework, that is, how requests are handled on controllers to render
    the view after making the required manipulations with models that are stored on
    the database.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Django视图、模型和控制器：这主要涉及学习Django框架，即如何在控制器上处理请求，在对存储在数据库中的模型进行必要的操作后呈现视图。
- en: '**Tags and tag clouds**: In the microblogging site project, every message will
    have a hashtag in it (a tag starting with **#**). The mapping of these tags will
    be dealt with in this section.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**标签和标签云**：在微博网站项目中，每条消息都将有一个带有**#**的标签。这些标签的映射将在本节中处理。'
- en: '**Content customization and searching**: Searching for messages based on keywords
    or hashtags.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**内容定制和搜索**：根据关键词或标签搜索消息。'
- en: '**Ajax enhancements**: Using Ajax for autocomplete during search or tagging,
    and making edits in place for saved messages or tags.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ajax增强**：在搜索或标记期间使用Ajax进行自动完成，并对保存的消息或标记进行就地编辑。'
- en: '**Friend networks**: Listing all the friends of the profile and calculating
    other vital statistics.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**朋友网络**：列出个人资料的所有朋友并计算其他重要统计数据。'
- en: Instead of concentrating on teaching various Django features, this book uses
    a tutorial style to teach how to implement these features using Django. Thus,
    it works as a complementary resource to the official Django documentation, which
    is freely available online.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 本书不是专注于教授各种Django功能，而是使用教程风格来教授如何使用Django实现这些功能。因此，它作为官方Django文档的补充资源，该文档可以在网上免费获取。
- en: Interested? Great! Prepare for the ride, as I guarantee that it will be both
    fun and interesting.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 感兴趣吗？太棒了！准备好了吗？我保证这将既有趣又有意思。
- en: Summary
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have learned why web development is getting an edge and
    what has changed in the web technologies domain; how to leverage new web technologies
    using the Python and Django frameworks; what Django actually is and what we can
    achieve using it; and finally, the different kind of databases that support Django.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了为什么网页开发正在获得优势以及Web技术领域发生了什么变化；如何利用Python和Django框架来利用新的Web技术；Django实际上是什么以及我们可以用它实现什么；最后，支持Django的不同类型的数据库。
- en: In the next chapter, we will cover the installation of Python and Django on
    various operating systems, such as Windows, Linux, and Mac, and setting up our
    first project using the Django platform.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍如何在各种操作系统上（如Windows、Linux和Mac）安装Python和Django，并使用Django平台设置我们的第一个项目。
