- en: '[*Chapter 12*](B16119_12_Final_PD_ePub.xhtml#_idTextAnchor358): Creating Printable
    PDF Reports with Server-Side QWeb'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第12章*](B16119_12_Final_PD_ePub.xhtml#_idTextAnchor358)：使用服务器端QWeb创建可打印的PDF报告'
- en: While a regular view can provide valuable information to users, there will be
    cases where a printed output is needed. Maybe it is a PDF document to be sent
    to a customer, or a paper document that is needed to support a physical process.
    To address these cases, Odoo apps support printed business reports. These are
    generated using QWeb and then exported to PDF documents, which can then be printed,
    emailed, or simply stored.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然常规视图可以为用户提供有价值的信息，但有时需要打印输出。可能是一个要发送给客户的PDF文档，或者是一个需要支持物理过程的纸质文档。为了解决这些问题，Odoo应用程序支持打印业务报告。这些报告使用QWeb生成，然后导出为PDF文档，之后可以打印、发送电子邮件或简单地存储。
- en: Being QWeb-based means that the same skills that can be used for Kanban views
    and web pages can be reused to design reports. Beyond QWeb, specific mechanisms
    are used, such as report actions, paper formats, and the variables that are available
    for QWeb report rendering.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 基于QWeb意味着可以重复使用用于看板视图和网页的相同技能来设计报告。除了QWeb之外，还使用特定的机制，例如报告操作、纸张格式以及可用于QWeb报告渲染的变量。
- en: In this chapter, examples will be used to illustrate how to structure and add
    content to a report. The usual report structure has a **header**, **details**,
    and **footer sections**. The content that can be added includes **field data**,
    including specific widgets such as images. Also common in reports is the need
    to present totals. All of these will be explained in detail in this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，将通过示例说明如何构建和向报告添加内容。通常的报告结构包括**页眉**、**详细信息**和**页脚**部分。可以添加的内容包括**字段数据**，包括图像等特定小部件。在报告中，通常还需要展示总计。所有这些内容将在本章中详细解释。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Installing wkhtmltopdf
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装wkhtmltopdf
- en: Creating business reports
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建业务报告
- en: Designing report content
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设计报告内容
- en: Creating custom reports
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建自定义报告
- en: By the end of this chapter, you will be familiar with all the steps needed to
    create Odoo reports, from report action to specific techniques that can be used
    on QWeb templates.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将熟悉创建Odoo报告所需的所有步骤，从报告操作到可以在QWeb模板上使用的特定技术。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: This chapter expands the existing `library_app` add-on module, based on the
    code first created in [*Chapter 3*](B16119_03_Final_PD_ePub.xhtml#_idTextAnchor072),
    *Your First Odoo Application*. This chapter's code can be found in this book's
    GitHub repository at [https://github.com/PacktPublishing/Odoo-15-Development-Essentials](https://github.com/PacktPublishing/Odoo-15-Development-Essentials)
    in the `ch12/` subdirectory.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本章扩展了基于在[*第3章*](B16119_03_Final_PD_ePub.xhtml#_idTextAnchor072)中首先创建的代码的现有`library_app`附加模块，即*您的第一个Odoo应用程序*。本章的代码可以在本书的GitHub存储库中找到，位于[https://github.com/PacktPublishing/Odoo-15-Development-Essentials](https://github.com/PacktPublishing/Odoo-15-Development-Essentials)的`ch12/`子目录中。
- en: Installing wkhtmltopdf
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装wkhtmltopdf
- en: Odoo reports are just HTML pages that are then converted into PDF files. For
    this conversion, the `wkhtmltopdf` command-line tool is used. Its name stands
    for **Webkit HTML to PDF**.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo报告只是被转换为PDF文件的HTML页面。为此转换，使用了`wkhtmltopdf`命令行工具。其名称代表**Webkit HTML to PDF**。
- en: For reports to be generated correctly, the recommended version of the `wkhtmltopdf`
    utility needs to be installed. Some versions of the `wkhtmltopdf` library are
    known to have issues, such as not printing page headers and footers, so we need
    to be picky about the version we use.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确生成报告，需要安装推荐的`wkhtmltopdf`实用程序版本。已知某些版本的`wkhtmltopdf`库存在问题，例如无法打印页面页眉和页脚，因此我们需要对我们使用的版本进行挑剔。
- en: Since Odoo 10, version 0.12.5 is the officially recommended one. The most up-to-date
    Odoo information about `wkhtmltopdf` can be found at [https://github.com/odoo/odoo/wiki/Wkhtmltopdf](https://github.com/odoo/odoo/wiki/Wkhtmltopdf).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 自Odoo 10以来，版本0.12.5是官方推荐的版本。有关`wkhtmltopdf`的最新Odoo信息，可以在[https://github.com/odoo/odoo/wiki/Wkhtmltopdf](https://github.com/odoo/odoo/wiki/Wkhtmltopdf)找到。
- en: The packaged version provided by Debian or Ubuntu may not be appropriate. So,
    the recommendation is to directly download and install the correct package. The
    download links can be found at [https://github.com/wkhtmltopdf/wkhtmltopdf/releases/tag/0.12.5](https://github.com/wkhtmltopdf/wkhtmltopdf/releases/tag/0.12.5).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Debian或Ubuntu提供的打包版本可能不合适。因此，建议直接下载并安装正确的包。下载链接可以在[https://github.com/wkhtmltopdf/wkhtmltopdf/releases/tag/0.12.5](https://github.com/wkhtmltopdf/wkhtmltopdf/releases/tag/0.12.5)找到。
- en: 'To install the correct version of `wkhtmltopdf`, follow these steps:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装正确的`wkhtmltopdf`版本，请按照以下步骤操作：
- en: 'First, make sure that there isn''t an incorrect version already installed on
    the system by inputting the following command:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，确保系统上没有安装不正确的版本，请输入以下命令：
- en: '[PRE0]'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'If the preceding command reports a version other than the recommended one,
    it should be uninstalled. To do so, on a Debian/Ubuntu system, input the following
    command:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果前面的命令报告的版本不是推荐的版本，则应卸载它。要在Debian/Ubuntu系统上这样做，请输入以下命令：
- en: '[PRE1]'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, you need to download the appropriate package for your system and install
    it. Check the release page for the correct download link. At the time of the Odoo
    15 release, Ubuntu 20.04 LTS *Focal Fossa* is the latest long-term support version.
    For a 64-bit architecture, install the `wkhtmltox_0.12.5-1.focal_amd64.deb` package.
    The download command to use in this case is as follows:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要下载适合您系统的适当包并安装它。检查发布页面以获取正确的下载链接。在Odoo 15发布时，Ubuntu 20.04 LTS *Focal
    Fossa* 是最新的长期支持版本。对于64位架构，安装`wkhtmltox_0.12.5-1.focal_amd64.deb`包。在这种情况下要使用的下载命令如下：
- en: '[PRE2]'
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, install the downloaded package with the following command:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下命令安装下载的包：
- en: '[PRE3]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This may display an error because of missing dependencies. In that case, the
    following command can be used to fix this:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这可能因为缺少依赖项而显示错误。在这种情况下，可以使用以下命令来修复：
- en: '[PRE4]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Finally, verify that the `wkhtmltopdf` library is correctly installed with
    the intended version number with the following command:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用以下命令验证`wkhtmltopdf`库是否已正确安装并带有预期的版本号：
- en: '[PRE5]'
  id: totrans-29
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: With this, you have successfully installed the correct version of `wkhtmltopdf`
    and now the Odoo server log won't display the **You need Wkhtmltopdf to print
    a pdf version of the report** information message during the startup sequence.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样，您已成功安装了正确的`wkhtmltopdf`版本，并且现在Odoo服务器日志在启动过程中不会显示**您需要Wkhtmltopdf以打印报告的PDF版本**的信息消息。
- en: Now that you know how to download and install a suitable version of the `wkhtmltopdf`
    tool, let's look at how to create business reports.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道了如何下载和安装适合的`wkhtmltopdf`工具版本，让我们看看如何创建商业报告。
- en: Creating business reports
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建商业报告
- en: It would be helpful for the Library app to print out a report containing the
    book catalog. This report should list the book titles, along with details such
    as **publisher**, **publishing date**, and **authors**.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图书馆应用来说，打印包含图书目录的报告将非常有用。这份报告应列出书名，以及如**出版社**、**出版日期**和**作者**等详细信息。
- en: We will implement this throughout this chapter, and in the process showcase
    the several techniques involved in implementing Odoo reports. The report will
    be added to the existing `library_app` module.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章中实现这一点，并在过程中展示实现Odoo报告所涉及的几种技术。报告将被添加到现有的`library_app`模块中。
- en: The convention is to have report files in a `/reports` subdirectory, so a `reports/library_book_report.xml`
    data file will be added. As usual, when adding data files, remember to also declare
    them in the `data` key of the `__manifest__.py` file.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 习惯上，报告文件应放在`/reports`子目录中，因此将添加一个`reports/library_book_report.xml`数据文件。像往常一样，在添加数据文件时，请记住在`__manifest__.py`文件的`data`键中声明它们。
- en: To be able to run a report, the first thing we must add is the report action.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行报告，我们首先必须添加报告操作。
- en: Adding the report action
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加报告操作
- en: The `ir.actions.report` XML model, and it can be inspected by using the **Settings**
    | **Technical** | **Actions** | **Reports** menu option.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`ir.actions.report` XML模型，可以通过使用**设置** | **技术** | **操作** | **报告**菜单选项进行检查。'
- en: Changes in Odoo 14
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 14中的变化
- en: Odoo 14 deprecated the `<report>` shortcut tag for report actions. A `<record
    model=""ir.actions.report">` element should be used instead.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 14已弃用用于报告操作的`<report>`快捷标签。应使用`<record model=""ir.actions.report">`元素代替。
- en: 'To add the report action and trigger the execution of the report, edit the
    `reports/library_book_report.xml` file, as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加报告操作并触发报告的执行，请编辑`reports/library_book_report.xml`文件，如下所示：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This report action makes this report available at the top of the **Library
    Books** view, on the **Print** button, next to the **Action** button:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 此报告操作使此报告在 **图书馆书籍** 视图的顶部可用，在 **打印** 按钮旁边，紧挨着 **操作** 按钮：
- en: '![](img/Figure_12.1_B16119.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图 12.1 - 打印上下文按钮](img/Figure_12.1_B16119.jpg)'
- en: Figure 12.1 – The Print context button
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图 12.1 – 打印上下文按钮
- en: This marks the first step of having a report available to users.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这标志着向用户提供报告的第一步。
- en: 'The essential fields that were used in the previous code are as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中使用的必要字段如下：
- en: '`name` is the report action''s title.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是报告操作的标题。'
- en: '`model` is the technical name of the report''s base model.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`model` 是报告基础模型的名称。'
- en: '`report_type` is the type of document to generate. The options are `qweb-pdf`,
    `qweb-html,` or `qweb-text`.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`report_type` 是要生成的文档类型。选项有 `qweb-pdf`、`qweb-html` 或 `qweb-text`。'
- en: '`report_name` is the XML ID of the QWeb template to be used to generate the
    report''s content. Unlike other identifier references, it must be a complete reference
    that includes the module name; that is, `<module_name>.<identifier_name>`.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`report_name` 是用于生成报告内容的 QWeb 模板的 XML ID。与其他标识符引用不同，它必须是一个完整的引用，包括模块名称；即 `<module_name>.<identifier_name>`。'
- en: Tip
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 小贴士
- en: While working on report development, setting `report_type` to `qweb-html` allows
    you to inspect the HTML result that's generated by the QWeb template, and it also
    makes it easier to troubleshoot issues. When you've done this, it can be changed
    back to `qweb-pdf`.
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在报告开发过程中，将 `report_type` 设置为 `qweb-html` 允许您检查由 QWeb 模板生成的 HTML 结果，并且它还使解决问题更容易。完成此操作后，可以将其更改为
    `qweb-pdf`。
- en: 'The following fields are not required to add the report action, but are needed
    for the report to be presented in the **Print** menu, next to the **Action** menu:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 以下字段不是添加报告操作所必需的，但需要报告在 **打印** 菜单中显示，紧挨着 **操作** 菜单：
- en: '`binding_model_id` is a many-to-one field for identifying the model where the
    report print option should be available.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binding_model_id` 是用于标识报告打印选项应可用的模型的单对多字段。'
- en: '`binding_type` should be set to `report`.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binding_type` 应设置为 `report`。'
- en: 'The other optional fields are as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 其他可选字段如下：
- en: '`print_report_name` is a Python expression that''s used to provide the report''s
    title and filename. The `object` variable is available and represents the current
    record.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`print_report_name` 是一个 Python 表达式，用于提供报告的标题和文件名。`object` 变量可用，代表当前记录。'
- en: '`attachment` is a Python expression where you have to generate the attachment
    filename. The `object` variable is available and represents the current record.
    When set, the generated report is stored as an attachment.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attachment` 是一个 Python 表达式，您必须生成附件文件名。`object` 变量可用，代表当前记录。当设置时，生成的报告将作为附件存储。'
- en: '`attachment_use`, when set to `True`, means that new report generations reopen
    the stored original report instead of regenerating it.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attachment_use` 当设置为 `True` 时，表示新的报告生成将重新打开存储的原始报告而不是重新生成它。'
- en: '`paperformat_id` is a many-to-one field for the paper format to use. Paper
    formats include the page size and the portrait or landscape orientation.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`paperformat_id` 是用于纸张格式的多对一字段。纸张格式包括页面大小和纵向或横向方向。'
- en: '`groups_id` is a many-to-many field with the security groups that can use the
    report.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups_id` 是一个多对多字段，与可以使用报告的安全组相关联。'
- en: '`multi`, when set to `True`, means that the report is not available in the
    form view.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`multi` 当设置为 `True` 时，表示报告在表单视图中不可用。'
- en: These actions won't work right now since the referenced QWeb template is missing.
    We'll deal with this in the following sections.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 由于引用的 QWeb 模板缺失，以下操作现在无法正常工作。我们将在以下章节中处理这个问题。
- en: Using a QWeb report template for per-record documents
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 QWeb 报告模板为每条记录的文档
- en: Odoo reports are generated using QWeb templates. QWeb generates HTML that can
    then be converted into a PDF document. QWeb directives and flow controls can be
    used as usual, but specific containers should be used to ensure proper page formatting.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 报表使用 QWeb 模板生成。QWeb 生成 HTML，然后可以将其转换为 PDF 文档。QWeb 指令和流程控制可以像往常一样使用，但应使用特定的容器以确保正确的页面格式。
- en: 'The following example provides a minimum viable template for a QWeb report.
    Add the following code to the `reports/library_book_report.xml` file, just after
    the report action element that we added in the previous section:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 以下示例提供了一个 QWeb 报告的最小可行模板。将以下代码添加到 `reports/library_book_report.xml` 文件中，紧接在我们之前添加的报告操作元素之后：
- en: '[PRE7]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The most important elements here are the `t-call` directives that are using
    standard report structures. The `web.html_container` template does the basic setup
    to support an HTML document. The `web.external_layout` template handles the report
    header and footer using the corresponding company setup. The `web.internal_layout`
    template can be used as an alternative, featuring only a basic header; it's better
    suited for internal use reports.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这里最重要的元素是使用标准报告结构的`t-call`指令。`web.html_container`模板执行基本的设置以支持HTML文档。`web.external_layout`模板使用相应的公司设置处理报告的页眉和页脚。`web.internal_layout`模板可以作为替代使用，它只包含基本的页眉；更适合内部使用报告。
- en: Changed Since Odoo 11
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 自Odoo 11以来的更改
- en: In Odoo 11, the report layouts moved from the `report` module to the `web` module.
    Previous Odoo versions used `report.external_layout` or `report.internal_layout`
    references. Starting with Odoo 11, these need to be changed to `web.<...>` references.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在Odoo 11中，报告布局从`report`模块移动到了`web`模块。之前的Odoo版本使用`report.external_layout`或`report.internal_layout`引用。从Odoo
    11开始，这些需要更改为`web.<...>`引用。
- en: The `docs` variable represents the base record set to generate the report. The
    report will typically use a `t-foreach` QWeb directive to iterate through each
    record. The previous report template generates a report header and footer for
    each record.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`docs`变量代表用于生成报告的基本记录集。报告通常使用`t-foreach` QWeb指令遍历每个记录。之前的报告模板为每个记录生成报告页眉和页脚。'
- en: Notice that, since reports are just QWeb templates, inheritance can be applied,
    just like in the other views. QWeb templates that are used in reports can be extended
    using regular template inheritance – that is, using *XPath* expressions – as we
    will discuss next.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，由于报告只是QWeb模板，因此可以应用继承，就像在其他视图中一样。用于报告的QWeb模板可以使用常规模板继承进行扩展——即使用*XPath*表达式——我们将在下一节讨论。
- en: Using a QWeb report template for record listings
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用QWeb报告模板进行记录列表
- en: In the case of the book catalog, there is a single report document, with a header
    and a footer, containing a line or section for each record.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在图书目录的情况下，有一个单独的报告文档，包含页眉和页脚，每个记录都有一个行或部分。
- en: 'So, the report template needs to be adjusted for this, as shown in the following
    code:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，报告模板需要根据以下代码进行调整：
- en: '[PRE8]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In the previous code, the `<div class="page">` element was moved before `<t
    t-foreach="docs">` so that a single report header and footer are printed, and
    the individual records will print additional content inside the same document.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的代码中，`<div class="page">`元素被移动到`<t t-foreach="docs">`之前，以便打印单个报告页眉和页脚，而单个记录将在同一文档内打印额外的内容。
- en: Now that we have the basic report template, we can customize the report layout,
    which we will do next.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了基本的报告模板，我们可以自定义报告布局，这将在下一步进行。
- en: Choosing a report layout
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择报告布局
- en: The report layout can be customized by users. This will be applied to the report,
    so long as it uses `external_layout`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 报告布局可以由用户自定义。只要它使用`external_layout`，这个设置就会应用于报告。
- en: 'The options for this are available from the **Settings** | **General Settings**
    menu, in the **Companies** | **Document** **Layout** section, as shown in the
    following screenshot:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这些选项可以从**设置** | **常规设置**菜单中的**公司** | **文档布局**部分获得，如下面的截图所示：
- en: '![](img/Figure_12.2_B16119.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/Figure_12.2_B16119.jpg)'
- en: Figure 12.2 – Document layout configuration options
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.2 – 文档布局配置选项
- en: Here, the **Configure Document Layout** button opens a report template configurator,
    provides a few layout options, and allows you to make selections regarding the
    company logo, colors, or text font.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，**配置文档布局**按钮打开报告模板配置器，提供一些布局选项，并允许您选择公司标志、颜色或文本字体。
- en: The selected layout can be set on the settings **Layout** field, and **Edit
    Layout** opens the corresponding view form, allowing you to directly customize
    the layout's QWeb XML definition.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 所选布局可以在设置中的**布局**字段进行设置，**编辑布局**将打开相应的视图表单，允许您直接自定义布局的QWeb XML定义。
- en: Now that you know how to set up the general report layout, let's look at how
    to work with page formats.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经知道了如何设置通用报告布局，让我们看看如何处理页面格式。
- en: Setting a paper format
  id: totrans-88
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置纸张格式
- en: Odoo proposes a few page formats out of the box, including European *A4* and
    *US Letter*. Additional page formats can be added, including those for specific
    page orientations.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo默认提供了一些页面格式，包括欧洲*A4*和*US Letter*。还可以添加额外的页面格式，包括特定页面方向的格式。
- en: Paper formats are stored in the `report.paperformat` model. The existing formats
    can be inspected using the **Settings** | **Technical** | **Reporting** | **Paper
    Format** menu option.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 纸张格式存储在 `report.paperformat` 模型中。可以使用 **设置** | **技术** | **报告** | **纸张格式** 菜单选项检查现有格式。
- en: For the book catalog report, a **landscape orientation** will be used, and a
    new page format will be added for this.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图书目录报告，将使用**横版**方向，并为此添加新的页面格式。
- en: 'To add the `reports/library_book_report.xml` file:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加 `reports/library_book_report.xml` 文件：
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: This is a copy of the European A4 format, defined by the `base` module, in the
    `data/report_paperformat_data.xml` file, with the orientation changed from portrait
    to landscape.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这是欧洲 A4 格式的副本，由 `base` 模块定义，在 `data/report_paperformat_data.xml` 文件中，方向已从纵向改为横版。
- en: This paper format can now be used for reports. The default paper format is defined
    in the company setup, but reports can set specific paper formats to be used. This
    can be done using the `paperfomat_id` field in the report action.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以使用此纸张格式进行报告。默认纸张格式在公司设置中定义，但报告可以设置特定的纸张格式以使用。这可以通过报告操作中的 `paperfomat_id`
    字段来完成。
- en: 'The report action can be edited to add this field:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 可以编辑报告操作以添加此字段：
- en: '[PRE10]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: With the basic skeleton for the report in place, it is time to start designing
    the report content.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在报告的基本框架就绪后，现在是时候开始设计报告内容了。
- en: Designing report content
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计报告内容
- en: The report content is written in HTML and makes use of Bootstrap 4 to help design
    the report's layout. Bootstrap is widely used in web development.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 报告内容是用 HTML 编写的，并使用 Bootstrap 4 来帮助设计报告的布局。Bootstrap 在网络开发中被广泛使用。
- en: Tip
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: A complete reference can be found at [http://getbootstrap.com](http://getbootstrap.com).
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的参考可以在 [http://getbootstrap.com](http://getbootstrap.com) 找到。
- en: Unlike Kanban views, the report QWeb templates are rendered on the server side
    and use the Python QWeb implementation. So, there are some differences to be aware
    of, compared to the JavaScript QWeb implementation. QWeb expressions are evaluated
    using Python syntax, not JavaScript.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 与看板视图不同，报告 QWeb 模板在服务器端渲染，并使用 Python QWeb 实现。因此，与 JavaScript QWeb 实现相比，有一些需要注意的差异。QWeb
    表达式使用 Python 语法而不是 JavaScript 语法进行评估。
- en: Understanding the report rendering context
  id: totrans-104
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解报告渲染上下文
- en: 'The server-side context where expressions are evaluated is also different from
    the client-side context that''s used for Kanban views. On a report template, the
    following variables are available:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 表达式评估的服务端上下文与用于看板视图的客户端上下文不同。在报告模板中，以下变量可用：
- en: '`docs` is an iterable collection with the records to render the report for.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docs` 是一个可迭代的记录集合，用于渲染报告。'
- en: '`doc_ids` is a list of the IDs of the records to render the report for.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doc_ids` 是要渲染报告的记录的 ID 列表。'
- en: '`doc_model` identifies the model of the records; for example, `library.book`.'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`doc_model` 识别记录的模型；例如，`library.book`。'
- en: '`user` is the record for the user running the report.'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`user` 是运行报告的用户记录。'
- en: '`res_company` is the record for the current user''s company.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res_company` 是当前用户公司的记录。'
- en: '`website` is the record for the current website, if any. This could be `None`.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`website` 是当前网站（如果有）的记录。这可能为 `None`。'
- en: '`web_base_url` is the base address of the Odoo server.'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`web_base_url` 是 Odoo 服务器的基址。'
- en: '`time` is a reference to Python''s `time` library.'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`time` 是对 Python 的 `time` 库的引用。'
- en: '`context_timestamp` is a function that takes a datetime object in UTC and converts
    it into the user''s time zone.'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context_timestamp` 是一个函数，它接受一个 UTC 中的 datetime 对象并将其转换为用户的时区。'
- en: 'These values and Python libraries can be used in code expressions inside the
    template. For example, to print out the current user, we could use the following
    command:'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些值和 Python 库可以在模板内的代码表达式中使用。例如，要打印当前用户，我们可以使用以下命令：
- en: '[PRE11]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `docs` value is particularly important since it contains the data to be
    used for the report.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`docs` 值特别重要，因为它包含用于报告的数据。'
- en: Now that you know how to access the data for the report, the next step is to
    add the report content.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道了如何访问报告的数据，下一步是添加报告内容。
- en: Adding the report content
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加报告内容
- en: With the basic QWeb template, including its header, details, and footer, in
    place, you can now add content to it.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在基本 QWeb 模板就绪后，包括其标题、细节和页脚，你现在可以向其中添加内容。
- en: 'Here is the XML you must use to render the report header. It should be placed
    inside the `<div class="page">` node and before the `<t t-foreach=...>` element:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 这是渲染报告标题必须使用的 XML。它应该放在 `<div class="page">` 节点内，并在 `<t t-foreach=...>` 元素之前：
- en: '[PRE12]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: This content layout uses the Bootstrap 4 grid system, which was added with the
    `<div class="container">` element. Bootstrap has a grid layout with 12 available
    columns. More details on Bootstrap can be found at [https://getbootstrap.com/docs/4.1/layout/grid](https://getbootstrap.com/docs/4.1/layout/grid).
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 此内容布局使用Bootstrap 4网格系统，它是通过`<div class="container">`元素添加的。Bootstrap有一个12列可用的网格布局。更多关于Bootstrap的详细信息可以在[https://getbootstrap.com/docs/4.1/layout/grid](https://getbootstrap.com/docs/4.1/layout/grid)找到。
- en: Changes in Odoo 12
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 12中的更改
- en: 'Odoo used Bootstrap 3 until Odoo 11 and started using Bootstrap 4 from Odoo
    12\. Bootstrap 4 is not backward compatible with Bootstrap 3\. For tips on the
    changes from Bootstrap 3 to Bootstrap 4, see the Odoo wiki page on this topic:
    [https://github.com/odoo/odoo/wiki/Tips-and-tricks:-BS3-to-BS4](https://github.com/odoo/odoo/wiki/Tips-and-tricks:-BS3-to-BS4).'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo在Odoo 11之前使用Bootstrap 3，并从Odoo 12开始使用Bootstrap 4。Bootstrap 4与Bootstrap 3不向后兼容。有关从Bootstrap
    3到Bootstrap 4的更改提示，请参阅Odoo关于此主题的wiki页面：[https://github.com/odoo/odoo/wiki/Tips-and-tricks:-BS3-to-BS4](https://github.com/odoo/odoo/wiki/Tips-and-tricks:-BS3-to-BS4)。
- en: The previous code adds a header row with column titles. After this, there is
    a `t-foreach` loop to iterate through each record and render a row for each.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码添加了一个带有列标题的表头行。之后，有一个`t-foreach`循环来遍历每条记录并为每条记录渲染一行。
- en: Next, the focus will be on rendering the row for each record – in this case,
    one for each book in the catalog.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，重点将放在为每条记录渲染行上——在这种情况下，为目录中的每本书渲染一行。
- en: Rows are added using a `<div class="row">` element. A row contains cells, and
    each cell can span several columns so that the row takes up 12 columns. Each cell
    is added using a `<div class="col-N">` element, where `N` is the number of columns
    it spans. For example, `<div class="col-3">Title</div>` is a cell spanning three
    columns.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`<div class="row">`元素添加行。行包含单元格，每个单元格可以跨越多个列，使行占据12列。每个单元格使用`<div class="col-N">`元素添加，其中`N`是它跨越的列数。例如，`<div
    class="col-3">标题</div>`是一个跨越三列的单元格。
- en: The QWeb template rendering is done on the server side, and record set objects
    are used. So, `o.name` gets the value of the `name` field from the `o` record.
    And it is easy to follow relational fields to access their data. For example,
    `o.publisher_id.email` gets the `email` field from the partner record referenced
    by the `publisher_id` field. Notice that this is not possible in client-side rendered
    QWeb views, such as web client Kanban views.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: QWeb模板的渲染是在服务器端完成的，并使用记录集对象。因此，`o.name`从`o`记录的`name`字段获取值。并且很容易跟踪关系字段以访问其数据。例如，`o.publisher_id.email`从由`publisher_id`字段引用的合作伙伴记录中获取`email`字段。请注意，在客户端渲染的QWeb视图中，例如Web客户端看板视图，这是不可能的。
- en: 'To add the content for each record row, add the following XML inside the `<div
    class="row">` element:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 要为每条记录行添加内容，请在`<div class="row">`元素内添加以下XML：
- en: '[PRE13]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the previous code, the `t-field` attributes are being used to render field
    data.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，`t-field`属性被用来渲染字段数据。
- en: The `t-options` attribute can also be used to provide additional options for
    the field rendering, such as the widget to use.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`t-options`属性也可以用来为字段渲染提供额外的选项，例如要使用的小部件。'
- en: Let's have a closer look at the field widgets and their options.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看字段小部件及其选项。
- en: Using field widgets
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用字段小部件
- en: In the template, field values are rendered using the `t-field` attribute. This
    can be complemented with the `t-options` attribute so that you can use a specific
    widget to render the field content.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在模板中，字段值使用`t-field`属性进行渲染。这可以通过`t-options`属性来补充，以便您可以使用特定的小部件来渲染字段内容。
- en: '`t-options` is set with a dictionary-like data structure. The widget key can
    be used to represent the field data.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`t-options`使用类似于字典的数据结构设置。小部件键可以用来表示字段数据。'
- en: 'In the previous example code, `"widget": "contact"` is used to present an address.
    It was used to render the publishing company''s address, `o.publisher_id`. The
    `no_marker="true"` option was used to disable some pictograms and the `contact`
    widget, which are displayed by default.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '在前面的示例代码中，`"widget": "contact"`用于展示地址。它被用来渲染出版公司的地址`o.publisher_id`。`no_marker="true"`选项被用来禁用一些默认显示的图标和`contact`小部件。'
- en: Changes in Odoo 11
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 11中的更改
- en: The `t-options` attribute was introduced in Odoo 11, replacing the `t-field-options`
    attribute that was used in previous Odoo versions.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`t-options`属性是在Odoo 11中引入的，取代了之前Odoo版本中使用的`t-field-options`属性。'
- en: 'For example, assuming that `doc` represents a particular record, rendering
    a date field value looks like this:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设`doc`代表一个特定的记录，渲染日期字段值看起来像这样：
- en: '[PRE14]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The reference documentation for the supported widgets and options can be found
    at [https://www.odoo.com/documentation/15.0/developer/reference/frontend/javascript_reference.html#field-widgets](https://www.odoo.com/documentation/15.0/developer/reference/frontend/javascript_reference.html#field-widgets).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 支持的控件和选项的参考文档可以在[https://www.odoo.com/documentation/15.0/developer/reference/frontend/javascript_reference.html#field-widgets](https://www.odoo.com/documentation/15.0/developer/reference/frontend/javascript_reference.html#field-widgets)找到。
- en: Tip
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: Documentation is not always up to date, and additional details may be found
    regarding the corresponding source code. The place to look is [https://github.com/odoo/odoo/blob/15.0/odoo/addons/base/models/ir_qweb_fields.py](https://github.com/odoo/odoo/blob/15.0/odoo/addons/base/models/ir_qweb_fields.py).
    Look for classes that inherit from `ir.qweb.field`. The `get_available_options()`
    methods give insight into the supported options.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 文档并不总是最新的，有关相应的源代码的更多详细信息可能可以在[https://github.com/odoo/odoo/blob/15.0/odoo/addons/base/models/ir_qweb_fields.py](https://github.com/odoo/odoo/blob/15.0/odoo/addons/base/models/ir_qweb_fields.py)找到。寻找继承自`ir.qweb.field`的类。`get_available_options()`方法提供了对支持选项的见解。
- en: With that, we've added the QWeb XML code to render the row for each book. However,
    the `authors` column is missing. The next section will add the author names, along
    with their images, illustrating how to add image content to a report.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，我们已经添加了QWeb XML代码来渲染每本书的行。然而，`authors`列缺失。下一节将添加作者姓名，以及他们的图像，展示如何向报告中添加图像内容。
- en: Rendering images
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 渲染图像
- en: The last column of the report features should present the list of authors, along
    with their avatars. The avatar image can be presented using the `t-field` attribute
    and the `image` widget.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 报告特征的最后一列应展示作者列表，以及他们的头像。头像图像可以使用`t-field`属性和`image`小部件来展示。
- en: 'In the last column, add the following code:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一列中，添加以下代码：
- en: '[PRE15]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: In the previous code, there is a loop on the values to the `author_ids` many-to-many
    field. For each author, you must render the image in the `image_128` partner field
    using the `image` widget.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，有一个循环遍历`author_ids`多对多字段中的值。对于每个作者，你必须使用`image`小部件在`image_128`合作伙伴字段中渲染图像。
- en: With that, you have added the header and details rows. The next few sections
    will work on the report footer, which is presented at the end of the report, and
    in the process introduce report totals.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，你已经添加了标题和详情行。接下来的几节将处理报告页脚，它位于报告的末尾，在这个过程中将介绍报告总计。
- en: Calculating totals
  id: totrans-153
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算总计
- en: A common need in reports is to provide **totals**. In some cases, the model
    has fields computing these, and the report just needs to use them. In other cases,
    the totals might have to be computed by the report.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 报告中常见的需求是提供**总计**。在某些情况下，模型中有字段计算这些总计，报告只需使用它们。在其他情况下，总计可能需要由报告来计算。
- en: As an example, the Book Catalog report will present the total number of books
    and authors in a final row.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 以为例，图书目录报告将在最后一行展示图书和作者的总数。
- en: For this, a last row should be added after the closing tag of the `<t t-foreach="docs">`
    element, to present the report totals.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，应在`<t t-foreach="docs">`元素的结束标签之后添加最后一行，以展示报告总计。
- en: 'To do so, add the footer content with the following XML:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 要做到这一点，请使用以下XML添加页脚内容：
- en: '[PRE16]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `len()` Python function is used to count the number of elements in a collection.
    Similarly, totals can also be computed using `sum()` over a list of values. For
    example, the following list comprehension computes a total amount:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: Python函数`len()`用于计算集合中元素的数量。同样，总计也可以通过在值列表上使用`sum()`来计算。例如，以下列表推导式计算了一个总计金额：
- en: '[PRE17]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: This list comprehension is a loop on the `docs` variable and returns a list
    of values stating the `amount` value of each record.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表推导式是对`docs`变量的循环，并返回一个包含每个记录的`amount`值的值列表。
- en: Your last low with the report's total is created. However, there are cases where
    grand totals are not enough, and running totals are needed. The next section will
    show you how to accumulate the values for these running totals.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经创建了报告的最后一个总计行。然而，在某些情况下，总计数不足以满足需求，需要累计总计。下一节将展示如何累计这些累计总计的值。
- en: Calculating running totals
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算累计总计
- en: In some cases, the report needs to perform computations throughout its iterations
    – for example, to keep a **running total**, with the total sum up to the current
    record. This kind of logic can be implemented in QWeb using a variable to accumulate
    values on each record iteration.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，报告需要在迭代过程中执行计算——例如，为了保持**累计总和**，累计总和达到当前记录的总数。这种逻辑可以使用 QWeb 中的变量在每条记录迭代中累积值来实现。
- en: 'To illustrate this, you can compute the accumulated number of authors. Start
    by initializing the variable, just before the `t-foreach` loop on the `docs` record
    set, using the following code:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明这一点，您可以计算累积的作者数量。首先，在 `docs` 记录集的 `t-foreach` 循环之前初始化变量，使用以下代码：
- en: '[PRE18]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, inside the loop, add the record''s number of authors to the variable.
    Do this right after presenting the list of authors, and also print out the current
    total on every line:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在循环内部，将记录的作者数量添加到变量中。在展示作者列表之后立即这样做，并在每一行打印出当前的总数：
- en: '[PRE19]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The previous code can be added to any of the report cells – for example, in
    the *Publisher* column cell.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码可以添加到任何报告单元格中——例如，在*出版社*列单元格中。
- en: With that, you have added all the report content, including report totals. Another
    feature that you can use on reports is **multilingual support**. This is supported
    in Odoo and the next section explains how to use it.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 这样，您已经添加了所有报告内容，包括报告总计。您还可以在报告中使用的一个功能是**多语言支持**。Odoo 支持此功能，下一节将解释如何使用它。
- en: Enabling language translation in reports
  id: totrans-171
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在报告中启用语言翻译
- en: The Odoo user interface uses the language selected by the current user. In some
    cases, a report might need to change this to a particular language. For example,
    a document might be better printed using the customer language, rather than the
    user's selected language.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 用户界面使用当前用户选择的语言。在某些情况下，报告可能需要将其更改为特定语言。例如，使用客户语言打印文档可能比使用用户选择的语言更好。
- en: In QWeb, the `t-call` directive, which is used to render a template, can be
    followed by the `t-lang` attribute, with an expression evaluation of the language
    to use. It should evaluate to a language code, such as `es` or `en_US`, and is
    usually an expression with the field where the language to use can be found.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在 QWeb 中，用于渲染模板的 `t-call` 指令后面可以跟一个 `t-lang` 属性，该属性对要使用的语言进行表达式评估。它应该评估为一个语言代码，例如
    `es` 或 `en_US`，通常是一个字段的表达式，其中可以找到要使用的语言。
- en: To showcase this, the *Library* app will include a version of the *Book Catalog*
    report using the library's base language, not the user's language. The library
    language will be the one that's set on the company partner record.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示这一点，*图书馆*应用将包括一个使用图书馆基础语言的*图书目录*报告版本，而不是用户语言。图书馆语言将是设置在公司合作伙伴记录上的语言。
- en: For this, the existing `book_catalog` template can be reused. It should be called
    from another template, and that call can set the language to use for the rendering
    process.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这一点，现有的 `book_catalog` 模板可以被重用。它应该从另一个模板中调用，并且这个调用可以设置用于渲染过程的语言。
- en: 'In the `reports/library_book_report.xml` file, add the following two record
    elements:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `reports/library_book_report.xml` 文件中，添加以下两个记录元素：
- en: '[PRE20]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The first record adds the *Native Language Book Catalog* report action, which
    uses the `library_app.book_catalog_native` template to render the report.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个记录添加了*原生语言图书目录*报告操作，该操作使用 `library_app.book_catalog_native` 模板来渲染报告。
- en: The second record adds the report template. It is a single QWeb element that
    uses `t-call` to render the `book_catalog` template and `t-lang` to set the language
    to be used.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个记录添加了报告模板。它是一个使用 `t-call` 渲染 `book_catalog` 模板并使用 `t-lang` 设置要使用语言的单一 QWeb
    元素。
- en: The expression that's used to find the language value is `res_company.parter_id.lang`.
    The `res_company` variable is one of the many that's available in any report and
    is the active company. Companies have a related partner record, `partner_id`,
    and partners have a field to store the language in, called `lang`.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 用于查找语言值的表达式是 `res_company.parter_id.lang`。`res_company` 变量是任何报告中可用的许多变量之一，是活动公司。公司有一个相关的合作伙伴记录
    `partner_id`，合作伙伴有一个字段来存储语言，称为 `lang`。
- en: The reports being worked on are based on a record set, such as `Books`. But
    there are cases where the data to be used needs specific computation. The next
    section describes options to handle these cases.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 正在处理的报告基于一个记录集，例如 `Books`。但在某些情况下，需要使用的数据需要进行特定的计算。下一节将描述处理这些情况的选择。
- en: 'After completing this step, the final book catalog report example should look
    as follows:'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，最终的图书目录报告示例应如下所示：
- en: '![](img/Figure_12.3_B16119.jpg)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_12.3_B16119.jpg)'
- en: Figure 12.3 – The final book catalog report
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3 – 最终的图书目录报告
- en: The essential elements for building printable reports in Odoo were covered throughout
    this section. Going further, advanced reports can use specific logic to build
    the data to be used in the report. The next section discusses how to do this.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了在Odoo中构建可打印报告的基本元素。进一步来说，高级报告可以使用特定逻辑来构建报告中使用的数据。下一节将讨论如何做到这一点。
- en: Creating custom reports
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义报告
- en: By default, a report is rendered for the selected records and is available in
    the rendering context through the `docs` variable. In some cases, it is useful
    to prepare arbitrary data structures to be used in the report. This is possible
    using **custom reports**.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，将为所选记录生成报告，并通过`docs`变量在渲染上下文中可用。在某些情况下，准备任意数据结构以供报告使用是有用的。这可以通过**自定义报告**来实现。
- en: A custom report can add whatever data that's needed to the report rendering
    context. This is done using an abstract model with a specific name, following
    the naming convention of `report.<module>.<report-name>`.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义报告可以将所需的数据添加到报告渲染上下文中。这是通过一个具有特定名称的抽象模型来完成的，遵循`report.<module>.<report-name>`的命名约定。
- en: This model should implement a `_get_report_values()` method, which returns a
    dictionary with the variables to add to the rendering context.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 此模型应实现一个`_get_report_values()`方法，该方法返回一个字典，其中包含要添加到渲染上下文中的变量。
- en: 'As an example, a *Books by Publisher* custom report will be added to the *Library*
    app. It will show the books that have been published by each publisher. The following
    screenshot shows an example of the report''s output:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，将一个*按出版商的图书*自定义报告添加到*图书馆*应用中。它将显示每个出版商出版的书籍。下面的截图显示了报告输出的示例：
- en: '![](img/Figure_12.4_B16119.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_12.4_B16119.jpg)'
- en: Figure 12.4 – Example of the Books by Publisher custom report
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.4 – 按出版商的图书自定义报告示例
- en: 'The report will be available in the *Contacts* list. One or more partners can
    be selected, and the report will present the titles published by each, if any.
    It can also be run from the publisher''s form, as shown in the following screenshot:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 报告将在*联系人*列表中可用。可以选择一个或多个合作伙伴，如果有的话，报告将展示他们出版的标题。它也可以从出版者表单中运行，如下面的截图所示：
- en: '![](img/Figure_12.5_B16119.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_12.5_B16119.jpg)'
- en: Figure 12.5 – Print menu option for the Books by Publisher report
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.5 – 图书按出版商报告的打印菜单选项
- en: This report implementation can be split into two steps. The first is the business
    logic for preparing the data to be used by the report, while the second is the
    QWeb template for the report layout.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 此报告实现可以分为两个步骤。第一步是为报告准备数据的业务逻辑，第二步是报告布局的QWeb模板。
- en: The next section explains how to prepare the report data.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将解释如何准备报告数据。
- en: Preparing custom report data
  id: totrans-198
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备自定义报告数据
- en: A custom report can use data that's been prepared by specific business logic,
    instead of simply using the record set that's been selected by the user.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义报告可以使用由特定业务逻辑准备的数据，而不是简单地使用用户选择的记录集。
- en: This can be done using an abstract model while following a specific name convention,
    that implements a `_get_report_values()` method, to return a dictionary with the
    variables to be used by the report template.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以通过使用抽象模型并遵循特定的命名约定来完成，该约定实现了一个`_get_report_values()`方法，用于返回一个包含报告模板将使用的变量的字典。
- en: 'To implement this as a custom report, add the `reports/library_publisher_report.py`
    file with the following code:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 要将其实现为自定义报告，请添加`reports/library_publisher_report.py`文件，并包含以下代码：
- en: '[PRE21]'
  id: totrans-202
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'For this file to be loaded by the module, it is also necessary to do the following:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此文件被模块加载，还必须执行以下操作：
- en: Add the `reports/__init__.py` file with a `from . import library_publisher_report`
    line.
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加`reports/__init__.py`文件，并包含`from . import library_publisher_report`行。
- en: Add a `from . import reports` line to the top of the `__init__.py` file.
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`__init__.py`文件的顶部添加`from . import reports`行。
- en: The model is an `AbstractModel`, meaning that it has no database representation
    and holds no data. The data to be used for rendering will be computed by specific
    business logic.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型是一个`AbstractModel`，这意味着它没有数据库表示，也不存储数据。用于渲染的数据将由特定的业务逻辑计算得出。
- en: The report template identifier name will be `publisher_report`, so the model
    name should be `report.library_app.publisher_report`.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 报告模板标识名称将是`publisher_report`，因此模型名称应该是`report.library_app.publisher_report`。
- en: The model has an `@api.model` decorated method named `_get_report_values`. The
    `docids` argument is a list of the numeric IDs selected to print the report. The
    base model to run the report is `res.partner`, so these will be partner IDs.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 模型有一个名为`_get_report_values`的`@api.model`装饰方法。`docids`参数是要打印报告的所选数字ID的列表。运行报告的基本模型是`res.partner`，因此这些将是合作伙伴ID。
- en: The method uses specific business logic to find the books from the selected
    publishers and groups them by publisher. The result is in the `publisher_books`
    variable, which is a list of pairs, along with the publisher records and a record
    set of book records; that is, `[(res.partner(1), library.book(1, 2, 3)]`.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 此方法使用特定的业务逻辑从所选的出版商中查找书籍并将它们按出版商分组。结果存储在`publisher_books`变量中，这是一个包含出版商记录和书籍记录集的成对列表；即`[(res.partner(1),
    library.book(1, 2, 3))]`。
- en: '`_get_report_values` returns a dictionary with a `publisher_books` key that
    returns this data structure. This key will be available as a variable in the report
    template and can be iterated in a loop.'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: '`_get_report_values`返回一个包含`publisher_books`键的字典，该键返回此数据结构。此键将在报告模板中作为变量可用，并可以在循环中进行迭代。'
- en: Now that the custom report data has been prepared, the next step is to add the
    QWeb report template.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 现在已经准备好了自定义报告数据，下一步是添加QWeb报告模板。
- en: Adding the report template
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加报告模板
- en: The next step is to create the QWeb template that's used to render the report.
    This template is similar to what is done for regular reports. An XML file is needed,
    along with the report action and the report QWeb template. The only difference
    is that, instead of the `docs` context variable, this template will have context
    variables available as whatever key/values are returned by the `_get_report_values`
    method.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是创建用于渲染报告的QWeb模板。此模板与常规报告所做的工作类似。需要一个XML文件，以及报告操作和报告QWeb模板。唯一的不同是，此模板将使用`_get_report_values`方法返回的键/值对作为上下文变量，而不是使用`docs`上下文变量。
- en: 'To implement the report action and template, add the `reports/library_publisher_report.xml`
    file with the following code:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现报告操作和模板，请添加包含以下代码的`reports/library_publisher_report.xml`文件：
- en: '[PRE22]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The previous XML includes two records – one for adding the *Books by Publisher*
    report action and another for adding the `publisher_report` report template.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的XML包括两个记录 - 一个用于添加“按出版商书籍”报告操作，另一个用于添加`publisher_report`报告模板。
- en: When running this report, the report engine will try finding a `report.library_app.`
    `publisher_report` model. If it exists, as is the case here, the `_get_report_values()`
    method is used to add variables to the rendering context.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行此报告时，报告引擎将尝试查找`report.library_app.` `publisher_report`模型。如果存在，就像这里的情况一样，将使用`_get_report_values()`方法向渲染上下文添加变量。
- en: The QWeb template can then use the `publisher_books` variable to access the
    added data. It is a list containing a `group[0]`, is the publisher record that's
    used on the group header, while the second tuple element, `group[1]`, is the record
    set containing the published books, presented using a second for loop.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，QWeb模板可以使用`publisher_books`变量来访问添加的数据。它是一个包含`group[0]`的列表，是用于组标题的出版商记录，而第二个元组元素`group[1]`是包含已发布书籍的记录集，使用第二个for循环展示。
- en: Remember to also reference this XML file in the `__manifest__.py` module. Having
    done this, once the `library_app` module has been upgraded and the Odoo web browser
    page has been reloaded, you will have the *Books by Publisher* report available
    in the `Print` context menu, when records are selected in the *Contacts* list.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 记得还要在`__manifest__.py`模块中引用此XML文件。完成此操作后，一旦`library_app`模块已升级并且Odoo网络浏览器页面已重新加载，你将在`打印`上下文菜单中找到“按出版商书籍”报告，当在“联系人”列表中选择记录时。
- en: Summary
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the essential techniques to create and add
    custom Odoo reports. Installing the recommended version of the `wkhtmltopdf` utility
    is important to ensure the reports are rendered correctly. You learned that reports
    are run through report actions, which provide the basic information needed to
    render them. These may include the paper format to be used and you now know how
    to do so.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了创建和添加自定义Odoo报告的基本技术。安装推荐的`wkhtmltopdf`实用程序版本对于确保报告正确渲染非常重要。你了解到报告是通过报告操作运行的，这些操作提供了渲染它们所需的基本信息。这可能包括要使用的纸张格式，你现在知道如何做到这一点。
- en: The next thing you learned about is report design, which can be implemented
    with QWeb templates. Knowledge of QWeb, HTML, and Bootstrap is needed for this,
    as you have been made aware of. In some cases, reports need specific business
    logic to prepare the data to use. For this, you learned how to create custom report
    models, along with the techniques to use them.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 你接下来学习的是报告设计，这可以通过QWeb模板来实现。正如你所意识到的，为此需要了解QWeb、HTML和Bootstrap。在某些情况下，报告需要特定的业务逻辑来准备使用的数据。为此，你学习了如何创建自定义报告模型，以及如何使用它们的技巧。
- en: Printable reports can be important parts of a business application, as they
    are often needed as a simple way to send information to external parties or to
    support physical processes in the warehouse or shop floor. This chapter provided
    you with the tools and techniques to implement this kind of requirement. Now,
    you can ensure that your business application doesn't fall short of your user's
    needs.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 打印报告可以作为商业应用的重要部分，因为它们通常需要作为向外部发送信息或支持仓库或商店地面上的物理流程的简单方式。本章为你提供了实现此类要求所需的工具和技术。现在，你可以确保你的商业应用不会辜负用户的需求。
- en: In the next chapter, we will continue to use QWeb, this time to build website
    pages. Web controllers will also be explained, which allow richer features to
    be used on Odoo web pages.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续使用QWeb，这次是用来构建网站页面。同时，也会解释Web控制器，它允许在Odoo网页上使用更丰富的功能。
- en: Further reading
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: This additional reference material complements the topics described in this
    chapter.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 这额外的参考资料补充了本章中描述的主题。
- en: 'Relevant Odoo official documentation:'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 相关的Odoo官方文档：
- en: 'QWeb Reports: [https://www.odoo.com/documentation/15.0/developer/reference/backend/reports.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/reports.html%20)'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QWeb报告：[https://www.odoo.com/documentation/15.0/developer/reference/backend/reports.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/reports.html)
- en: 'QWeb Templates: [https://www.odoo.com/documentation/15.0/developer/reference/frontend/qweb.html](https://www.odoo.com/documentation/15.0/developer/reference/frontend/qweb.html%20)'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: QWeb模板：[https://www.odoo.com/documentation/15.0/developer/reference/frontend/qweb.html](https://www.odoo.com/documentation/15.0/developer/reference/frontend/qweb.html)
- en: 'Bootstrap 4 official documentation: [https://getbootstrap.com/docs/4.1](https://getbootstrap.com/docs/4.1%20)'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bootstrap 4官方文档：[https://getbootstrap.com/docs/4.1](https://getbootstrap.com/docs/4.1)
- en: 'Other relevant resources:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 其他相关资源：
- en: The Odoo Community Association hosts a project dedicated to the enhanced report
    feature at https://github.com/OCA/reporting-engine.
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Odoo社区协会在https://github.com/OCA/reporting-engine处托管了一个致力于增强报告功能的专案。
- en: Bootstrap additional learning resources from Packt Publishing can be found at
    [https://www.packtpub.com/tech/bootstrap](https://www.packtpub.com/tech/bootstrap).
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Packt Publishing提供的Bootstrap额外学习资源可以在[https://www.packtpub.com/tech/bootstrap](https://www.packtpub.com/tech/bootstrap)找到。
