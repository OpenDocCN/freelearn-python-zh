- en: Chapter 2. Creating a Django Project
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章。创建Django项目
- en: At the end of this chapter, you will have all the necessary elements to begin
    programming with Django. A website developed with Django is a project that contains
    one or more applications. Indeed, when a website becomes more important, it becomes
    necessary to logically separate it into several modules. These modules are then
    placed in the project that corresponds to the website. In this book, we will not
    need to create many applications, but they can be very helpful in some cases.
    Indeed, if one day you create an application and you want to use it in another
    project, you will need to copy and adapt this application to the new project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将拥有开始使用Django进行编程所需的所有必要元素。使用Django开发的网站是包含一个或多个应用程序的项目。实际上，当一个网站变得更加重要时，将其在逻辑上分成几个模块变得必要。然后，这些模块被放置在对应于网站的项目中。在本书中，我们不需要创建许多应用程序，但在某些情况下它们可能非常有用。实际上，如果有一天您创建了一个应用程序，并且希望在另一个项目中使用它，您将需要将该应用程序复制并调整以适应新项目。
- en: 'To be able to use Django, you need to install the following software:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够使用Django，您需要安装以下软件：
- en: Python 3, to enjoy the third version innovations.
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3，享受第三版的创新。
- en: setuptools is a module that simplifies the installation of the external Python
    module. However, it does not manage to uninstall the module.
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: setuptools是一个简化外部Python模块安装的模块。但是，它无法管理卸载模块。
- en: PIP extends the possibilities of setuptools by removing packages, using easier
    syntax, and providing other benefits.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PIP通过删除软件包、使用更简单的语法和提供其他好处来扩展setuptools的可能性。
- en: Django, which that we are going to install thanks to PIP.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Django，我们将通过PIP安装。
- en: These installations will be compatible with Windows, Linux, and Mac OS X.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这些安装将与Windows、Linux和Mac OS X兼容。
- en: Installing Python 3
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Python 3
- en: To use all the tools that we have talked about so far, we first need to install
    Python 3\. The following sections describe how we can install Python on different
    operating systems.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用到目前为止我们谈到的所有工具，我们首先需要安装Python 3。以下部分描述了如何在不同的操作系统上安装Python。
- en: Installing Python 3 for Windows
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Windows安装Python 3
- en: To download the Python executable, visit [http://www.python.org/download/](http://www.python.org/download/)
    and download the **Python MSI** file. Please make sure that you choose the right
    version concerning your platform. The Python installation may need an administrator
    account.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载Python可执行文件，请访问[http://www.python.org/download/](http://www.python.org/download/)并下载**Python
    MSI**文件。请确保您选择与您的平台相关的正确版本。Python安装可能需要管理员帐户。
- en: 'For all the stages of the Python installation, you can leave all the settings
    at their default values. If the installation has been done properly, you should
    see the following dialog window open:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python安装的所有阶段，您可以将所有设置保留为默认值。如果安装正确完成，您应该看到以下对话框窗口打开：
- en: '![Installing Python 3 for Windows](img/00004.jpeg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![为Windows安装Python 3](img/00004.jpeg)'
- en: Installing Python 3 for Linux
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Linux安装Python 3
- en: 'To set up Python 3 on Linux, we can use the packet manager APT with the following
    command:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Linux上设置Python 3，我们可以使用以下命令的包管理器APT：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-17
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从您在[http://www.packtpub.com](http://www.packtpub.com)的帐户中为您购买的所有Packt图书下载示例代码文件。如果您在其他地方购买了本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。
- en: We need to confirm the modifications proposed by APT.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要确认APT提出的修改。
- en: Installing Python 3 for Mac OS
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Mac OS安装Python 3
- en: 'The latest version of Mac OS already has a version of Python. However, Version
    2 of Python is installed, and we would like to install Version 3\. To do this,
    visit [https://www.python.org/download/](https://www.python.org/download/) and
    download the right version. Then, open the file with the extension `.dmp`. Finally,
    run the file with the extension `.mpkg`. If you get an error such as `Python cannot
    be opened because it is from an unidentified developer`, perform the following
    steps:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 最新版本的Mac OS已经安装了Python的一个版本。但是，安装了Python的第2版，我们想要安装第3版。为此，请访问[https://www.python.org/download/](https://www.python.org/download/)并下载正确的版本。然后，打开扩展名为`.dmp`的文件。最后，运行扩展名为`.mpkg`的文件。如果出现诸如`Python无法打开，因为它来自未知开发者`的错误，请执行以下步骤：
- en: In **Finder**, locate the Python install.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**Finder**中，找到Python安装位置。
- en: Press the *ctrl* key and then click on the app's icon.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*ctrl*键，然后单击应用程序图标。
- en: Select **Open** from the shortcut menu.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从快捷菜单中选择**打开**。
- en: Click on **Open**.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**打开**。
- en: Installing setuptools
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装setuptools
- en: PIP is a dependence of setuptools. We need to install setuptools to use PIP.
    The following sections describe how we can install setuptools on different operating
    systems.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: PIP是setuptools的一个依赖项。我们需要安装setuptools才能使用PIP。以下部分描述了如何在不同的操作系统上安装setuptools。
- en: Installing setuptools for Windows
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Windows安装setuptools
- en: 'To download the setuptools executable, you have to go to the PyPI website at
    [https://pypi.python.org/pypi/setuptools](https://pypi.python.org/pypi/setuptools).
    Then, we need to click on **Downloads** and select the right version. In this
    book, we use Version 1.1, as shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载setuptools可执行文件，您必须转到PyPI网站[https://pypi.python.org/pypi/setuptools](https://pypi.python.org/pypi/setuptools)。然后，我们需要单击**下载**并选择正确的版本。在本书中，我们使用1.1版本，如下面的屏幕截图所示：
- en: '![Installing setuptools for Windows](img/00005.jpeg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![为Windows安装setuptools](img/00005.jpeg)'
- en: Installing setuptools for Linux
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Linux安装setuptools
- en: When using APT, we do not need to install setuptools. Indeed, APT will automatically
    install it before installing PIP.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 使用APT时，我们不需要安装setuptools。实际上，APT将在安装PIP之前自动安装它。
- en: Installing setuptools for Mac OS
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Mac OS安装setuptools
- en: When we install PIP with the `get-pip.py` file, setuptools will be directly
    installed. Therefore, we do not need to install it for the moment.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们使用`get-pip.py`文件安装PIP时，setuptools将直接安装。因此，我们暂时不需要安装它。
- en: Installing PIP
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装PIP
- en: PIP is very popular among Python users, and using PIP is a Django community
    best practice. It handles the package installation, performs updates, and removes
    all the Python package extensions. Thanks to this, we can install all the required
    packages for Python.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: PIP在Python用户中非常受欢迎，并且使用PIP是Django社区的最佳实践。它处理包安装，执行更新，并删除所有Python包扩展。由于这个，我们可以安装所有Python所需的包。
- en: If you have installed Python 3.4 or later, PIP is included with Python.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您安装了Python 3.4或更高版本，PIP已包含在Python中。
- en: Installing PIP for Windows
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装PIP
- en: To install PIP, first download it from [https://pypi.python.org/pypi/pip/1.5.4](https://pypi.python.org/pypi/pip/1.5.4).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装PIP，首先从[https://pypi.python.org/pypi/pip/1.5.4](https://pypi.python.org/pypi/pip/1.5.4)下载它。
- en: 'Then, we need to install PIP from the executable, but don''t forget to define
    the right Python installation folder, as you can see in the following screenshot:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要从可执行文件安装PIP，但不要忘记定义正确的Python安装文件夹，如下面的屏幕截图所示：
- en: '![Installing PIP for Windows](img/00006.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![为Windows安装PIP](img/00006.jpeg)'
- en: For the next set of steps, go with the default options and complete the installation.
    With PIP, we will be installing all the required Python packages.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于下一组步骤，请使用默认选项并完成安装。有了PIP，我们将安装所有所需的Python包。
- en: Installing PIP for Linux
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Linux上安装PIP
- en: 'To install PIP and all the components including setuptools for Linux, you have
    to use the `get-pip.py` file with the following commands:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Linux上安装PIP和包括setuptools在内的所有组件，您必须使用以下命令使用`get-pip.py`文件：
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Installing PIP for Mac OS
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Mac OS上安装PIP
- en: 'To install PIP on Mac OS, we must use the `get-pip.py` file in the following
    manner:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Mac OS上安装PIP，我们必须以以下方式使用`get-pip.py`文件：
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Installing Django
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Django
- en: We will then install the framework on which we will be working. The following
    sections describe how we can install Django on different operating systems.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将安装我们将要使用的框架。以下部分描述了如何在不同的操作系统上安装Django。
- en: Installing Django for Windows
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows上安装Django
- en: 'To install Django with PIP, you have to open a command prompt and go to the
    `Scripts` directory that you can find in the `Python` folder. You can install
    Django with the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用PIP安装Django，您必须打开命令提示符并转到`Python`文件夹中可以找到的`Scripts`目录。您可以使用以下命令安装Django：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: PIP will download and install the Django packages in the `site-packages` repository
    of Python.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: PIP将在Python的`site-packages`存储库中下载并安装Django包。
- en: Installing Django for Linux
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Linux上安装Django
- en: 'To facilitate the PIP utilization that we have just installed, we have to look
    for the version installed on the system and define an alias to refer to the PIP
    version installed. Do not forget to execute the following commands as root:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便我们刚刚安装的PIP的使用，我们必须查找系统上安装的版本并定义一个别名来引用已安装的PIP版本。不要忘记以root身份执行以下命令：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The first command looks for a usable command containing the word `pip`. You
    will certainly find a line such as `pip-3.2`. It's on this command that we will
    define an alias with the second command.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个命令查找包含单词`pip`的可用命令。您肯定会找到一行，比如`pip-3.2`。我们将在这个命令上使用第二个命令定义一个别名。
- en: The third command installs Version 1.6 of Django.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 第三个命令安装Django的1.6版本。
- en: Installing Django for Mac OS
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Mac OS上安装Django
- en: 'If you want to use PIP more easily, we can create a symbolic link with the
    following commands:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想更轻松地使用PIP，可以使用以下命令创建符号链接：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We can then install Django using the following command:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用以下命令安装Django：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Starting your project with Django
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Django启动您的项目
- en: Before you start using Django, you need to create an environment for your applications.
    We will create a Django project. This project will then contain our applications.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用Django之前，您需要为您的应用程序创建一个环境。我们将创建一个Django项目。然后，这个项目将包含我们的应用程序。
- en: 'To create the project of our application, we need to run the following command
    using the `django-admin.py` file (you can find it in the `Python33\Scripts` folder):'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建我们的应用程序的项目，我们需要使用`django-admin.py`文件运行以下命令（您可以在`Python33\Scripts`文件夹中找到它）：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'So as to facilitate the use of the Django commands, we can set the environmental
    variable of Windows. To do this, you must perform the following steps:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便使用Django命令，我们可以设置Windows的环境变量。为此，您必须执行以下步骤：
- en: Right-click on **My computer** on the desktop.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在桌面上右键单击**我的电脑**。
- en: Click on **Advanced System Settings**.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**高级系统设置**。
- en: Next, click on **Environmental Variable**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击**环境变量**。
- en: 'Add or update the `PATH` variable:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加或更新`PATH`变量：
- en: If it does not exist, create the `PATH` variable and set its value as `C:\Python33/Scripts`
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果不存在，创建`PATH`变量并将其值设置为`C:\Python33/Scripts`
- en: If it exists, append `;C:\Python33\Scripts` to the existing value
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果存在，将`;C:\Python33\Scripts`追加到现有值
- en: Now, you can use the precedent command without the need to put yourself in the
    `Python33/Scripts` folder.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以使用之前的命令，而无需进入`Python33/Scripts`文件夹。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'There are different ways to perform the previous command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同的方法来执行前面的命令：
- en: 'The following command will be performed in all cases:'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以下命令将在所有情况下执行：
- en: '[PRE8]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The following command will be performed if we have defined `C:\Python33\Scripts`
    in the `PATH` variable:'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们在`PATH`变量中定义了`C:\Python33\Scripts`，则将执行以下命令：
- en: '[PRE9]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The following command will be performed if we have defined `C:\Python33\Scripts`
    in the `PATH` variable and the `.py` extension file is defined to run with Python:'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们在`PATH`变量中定义了`C:\Python33\Scripts`并且`.py`扩展文件被定义为与Python一起运行，则将执行以下命令：
- en: '[PRE10]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This command creates a `Work_manager` folder in the folder from where you run
    the command. We will find a folder and a file in that folder:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令在您运行命令的文件夹中创建一个`Work_manager`文件夹。我们将在该文件夹中找到一个文件夹和一个文件：
- en: The `manage.py` file will be used for actions performed on the project such
    as starting the development server or synchronizing the database with the models.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`manage.py`文件将用于在项目上执行操作，比如启动开发服务器或将数据库与模型同步。'
- en: The `Work_manager` folder represents an application of our project. By default,
    the `startproject` command creates a new application.
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Work_manager`文件夹代表我们项目的一个应用程序。默认情况下，`startproject`命令会创建一个新的应用程序。'
- en: 'The `Work_manager` folder contains two very important files:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`Work_manager`文件夹包含两个非常重要的文件：'
- en: The `settings.py` file contains the parameters of our project. This file is
    common to all our applications. We use it to define the debug mode, configure
    the database, or define Django packages that we will use. The `settings.py` file
    allows us to do more things, but our use will be limited to what has been previously
    described.
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`settings.py`文件包含我们项目的参数。这个文件对我们所有的应用程序都是通用的。我们用它来定义调试模式，配置数据库，或者定义我们将使用的Django包。`settings.py`文件允许我们做更多的事情，但我们的使用将局限于之前描述的内容。'
- en: The `urls.py` file contains all our URLs. It is with this file that we make
    the routing in Django. We will cover this in the next chapter.
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`urls.py`文件包含我们所有的URL。通过这个文件，我们在Django中进行路由。我们将在下一章中介绍这个。'
- en: Creating an application
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个应用程序
- en: We will not program our application in the `Work_manager` folder because we
    want to create our own `Task_manager` application.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会在`Work_manager`文件夹中编写我们的应用程序，因为我们想要创建我们自己的`Task_manager`应用程序。
- en: 'For this, run the following command using the `manage.py` file created by the
    `startproject` command You must run the following command in the `Work_manager`
    folder which contains `manage.py` file:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，请使用`startproject`命令创建的`manage.py`文件运行以下命令。您必须在包含`manage.py`文件的`Work_manager`文件夹中运行以下命令：
- en: '[PRE11]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This command creates a `TasksManager` folder in the folder of our project.
    This folder contains five files:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这个命令在我们项目的文件夹中创建了一个`TasksManager`文件夹。这个文件夹包含五个文件：
- en: The `__ init__.py` file defines a package. Python needs it to differentiate
    between the standard folders and the packages.
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`__init__.py`文件定义了一个包。Python需要它来区分标准文件夹和包。'
- en: The `admin.py` file is not useful at this moment. It contains the models that
    need to be incorporated in the administration module.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`admin.py`文件目前没有用。它包含需要并入管理模块的模型。'
- en: The `models.py` file contains all the models of our application. We use it a
    lot for the development of our application. Models allow us to create our database
    and store information. We will discuss this in [Chapter 5](part0042.html#page
    "Chapter 5. Working with Models"), *Working with Models*.
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`models.py`文件包含我们应用程序的所有模型。我们在应用程序的开发中经常使用它。模型允许我们创建数据库并存储信息。我们将在[第5章](part0042.html#page
    "Chapter 5. Working with Models")中讨论这一点，*使用模型*。'
- en: The `tests.py` file contains the unit tests of our application.
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tests.py`文件包含我们应用程序的单元测试。'
- en: The `views.py` file can contain views. This file will contain all the actions
    before sending the HTML page to the client.
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`views.py`文件可以包含视图。这个文件将包含在将HTML页面发送给客户端之前执行的所有操作。'
- en: Now that we know the most important files of Django, we can configure our project.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们知道了Django最重要的文件，我们可以配置我们的项目了。
- en: Configuring the application
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置应用程序
- en: To configure our project or our application, we need to edit the `settings.py`
    file in the project folder.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 要配置我们的项目或应用程序，我们需要编辑项目文件夹中的`settings.py`文件。
- en: 'This file contains variables. These variables are the settings that Django
    reads when initializing the web app. The following are a few of these variables:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个文件包含变量。这些变量是Django在初始化Web应用程序时读取的设置。以下是其中的一些变量：
- en: '`DEBUG`: This parameter must be set to `True` throughout the duration of development
    because it is the one that enables the errors to be displayed. Do not forget to
    set it to `False` when putting the project into production, because an error gives
    very sensitive information about the site security.'
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DEBUG`：在开发过程中，此参数必须设置为`True`，因为它可以显示错误。当将项目投入生产时，不要忘记将其设置为`False`，因为错误会提供有关站点安全性的非常敏感的信息。'
- en: '`TIME_ZONE`: This parameter sets the region referring to which it must calculate
    dates and times. The default is `UTC`.'
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`TIME_ZONE`：此参数设置了必须计算日期和时间的区域。默认值是`UTC`。'
- en: '`DEFAULT_CHARSET`: This sets the character encoding used. On the `task_manager`
    application, we use UTF-8 encoding to simplify internationalization. To do this,
    you must add a line as follows:'
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DEFAULT_CHARSET`：这设置了所使用的字符编码。在`task_manager`应用程序中，我们使用UTF-8编码来简化国际化。为此，您必须添加以下行：'
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`LANGUAGE_CODE`: This sets the language to be used on the website. This is
    the main useful parameter for internationalization.'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LANGUAGE_CODE`：这设置了网站上要使用的语言。这是国际化的主要有用参数。'
- en: '`MIDDLEWARE_CLASSES`: This defines the different middleware used.'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`MIDDLEWARE_CLASSES`：这定义了所使用的不同中间件。'
- en: 'Middleware are classes and methods, including the methods that are performed
    during the request process. To simplify the beginning of the development, we will
    remove a middleware from that parameter. This requires you to comment out the
    line by adding `#` in front of it:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 中间件是在请求过程中执行的类和方法，包括在参数中执行的方法。为了简化开发的开始，我们将从该参数中删除一个中间件。这需要您在行前添加`#`来注释掉该行：
- en: '[PRE13]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: We'll talk about this middleware in a later chapter to explain its operation
    and importance.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在后面的章节中讨论这个中间件，以解释它的操作和重要性。
- en: Now that we have seen the general settings of Django, we can start developing
    our application.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经了解了Django的一般设置，我们可以开始开发我们的应用程序了。
- en: Summary
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have installed all the software needed to use Django. In
    this chapter, we learned how to create a Django project and an application. We
    also learned how to configure an application.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经安装了使用Django所需的所有软件。我们学会了如何创建Django项目和应用程序。我们还学会了如何配置应用程序。
- en: In the next chapter, we will start the Django development with an example of
    a web page containing the text `Hello World!`.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将以一个包含文本`Hello World!`的网页示例开始Django开发。
