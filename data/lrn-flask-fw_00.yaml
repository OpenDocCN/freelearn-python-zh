- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Welcome to Learning Flask, the book that will teach you the necessary skills
    to build web applications with Flask, a lightweight Python web framework. This
    book takes an example-driven approach that is designed to get you started quickly.
    The practical examples are balanced with just the right amount of background information
    to ensure that you understand not only the how, but also the why of Flask development.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读《学习Flask》，这本书将教会您使用Flask构建Web应用程序所需的必要技能，这是一个轻量级的Python Web框架。本书采用了一个以示例驱动的方法，旨在让您快速入门。实际示例与适量的背景信息相结合，以确保您不仅了解Flask开发的如何，还了解为什么。
- en: Flask was originally released by Armin Ronacher as part of an elaborate April
    Fool's Day prank in 2010\. The project touted itself as, "The next generation
    python micro web-framework," and lampooned features made popular by similar microframeworks.
    Although Flask was intended as a prank, the authors were caught by surprise when
    many people expressed serious interest in the project.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Flask最初是由Armin Ronacher在2010年作为复杂的愚人节恶作剧的一部分发布的。该项目吹嘘自己是“下一代Python微型Web框架”，并讽刺了类似微框架所流行的功能。尽管Flask原本是一个恶作剧，但作者们对该项目引起了许多人的严肃兴趣感到意外。
- en: 'Flask is a microframework that is built on top of two excellent libraries:
    the Jinja2 templating engine, and the Werkzeug WSGI toolkit. Despite being a relative
    new-comer compared to other frameworks, such as Django, and Pylons, Flask has
    garnered a large and loyal following. Flask provides powerful tools for common
    web development tasks and encourages a bring-your-own-library approach for everything
    else, allowing programmers the flexibility to pick and choose the best components
    for their application. Every Flask app is different, and as the project''s documentation
    states, "Flask is Fun".'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Flask是一个建立在两个优秀库之上的微框架：Jinja2模板引擎和Werkzeug WSGI工具包。尽管与其他框架（如Django和Pylons）相比，Flask是一个相对较新的框架，但它已经获得了大量忠实的追随者。Flask为常见的Web开发任务提供了强大的工具，并鼓励采用自己的库来处理其他一切，使程序员有灵活性来选择最佳组件来构建他们的应用程序。每个Flask应用程序都是不同的，正如项目的文档所述，“Flask很有趣”。
- en: The Flask microframework represents a departure in terms of design and API from
    most other popular Python web frameworks, which has led many developers that are
    new to Flask to ask, "What is the right way to build an app?" Flask does not offer
    any strong opinions on how we, the developers, should build our app. Instead,
    it provides opinions on what you need to build an app. Flask can be thought of
    as a collection of objects and functions to deal with common web tasks, such as
    routing URLs to code, processing request data, and rendering templates. While
    the level of flexibility that Flask provides is liberating, it can also lead to
    confusion and poor designs.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Flask微框架在设计和API方面代表了与大多数其他流行的Python Web框架的不同，这导致许多新手开发人员问：“构建应用程序的正确方法是什么？”
    Flask对于我们开发者应该如何构建应用程序并没有提供强烈的意见。相反，它提供了关于构建应用程序所需的意见。Flask可以被认为是一组对象和函数，用于处理常见的Web任务，如将URL路由到代码、处理请求数据和渲染模板。虽然Flask提供的灵活性令人振奋，但它也可能导致混乱和糟糕的设计。
- en: The purpose of this book is to help you see this flexibility as opportunity.
    Over the course of this book, we will be building and progressively enhancing
    a Flask-powered blogging site. New concepts will be introduced through the addition
    of new features to the site. By the end of the book, we will have created a fully-featured
    website, and you will have a strong working knowledge of Flask and the ecosystem
    of its commonly-used extensions and libraries.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目的是帮助您将这种灵活性视为机会。在本书的过程中，我们将构建并逐步增强一个由Flask驱动的博客网站。通过向网站添加新功能来介绍新概念。到本书结束时，我们将创建一个功能齐全的网站，您将对Flask及其常用扩展和库生态系统有着扎实的工作知识。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[Chapter 1](ch01.html "Chapter 1. Creating Your First Flask Application"),
    *Creating Your First Flask Application*, begins with the bold declaration, "Flask
    is fun", which is one of the first things that you see when you view the official
    Flask documentation, and in this chapter, you will get to grips with why so many
    Python developers agree.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 《第1章》《创建您的第一个Flask应用程序》以大胆宣言“Flask很有趣”开始，这是当您查看官方Flask文档时看到的第一件事情之一，在本章中，您将了解为什么许多Python开发人员都同意这一观点。
- en: '[Chapter 2](ch02.html "Chapter 2. Relational Databases with SQLAlchemy"), *Relational
    Databases with SQLAlchemy*, says that relational databases are the bedrock upon
    which almost all modern web applications are built. We will use SQLAlchemy, a
    powerful object-relational mapper that allows us to abstract away the complexities
    of multiple database engines. In this chapter, you will learn about how the data
    model that you choose early on will affect almost every facet of the code that
    follows.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 《第2章》《使用SQLAlchemy的关系数据库》指出，关系数据库是几乎所有现代Web应用程序构建的基石。我们将使用SQLAlchemy，这是一个强大的对象关系映射器，可以让我们抽象出多个数据库引擎的复杂性。在本章中，您将了解您早期选择的数据模型将影响随后代码的几乎每个方面。
- en: '[Chapter 3](ch03.html "Chapter 3. Templates and Views"), *Templates and Views*,
    covers two of the most recognizable components of the framework: the Jinja2 template
    language, and the URL routing framework. We will fully immerse ourselves in Flask
    and see our app finally start to take shape. As we progress through the chapter,
    our app will start looking like a proper website.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 《第3章》《模板和视图》涵盖了框架中最具代表性的两个组件：Jinja2模板语言和URL路由框架。我们将完全沉浸在Flask中，看到我们的应用程序最终开始成形。随着我们在本章的进展，我们的应用程序将开始看起来像一个真正的网站。
- en: '[Chapter 4](ch04.html "Chapter 4. Forms and Validation"), *Forms and Validation*,
    shows you how to use forms to modify content on your blog directly through the
    site handled by the popular WTForms library. This is a fun chapter because we
    will add all sorts of new ways to interact with our site. We will create forms
    to work with our data models and learn how to receive and validate user data.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章 表单和验证") *表单和验证*，向您展示如何使用表单直接通过由流行的WTForms库处理的网站修改博客内容。这是一个有趣的章节，因为我们将添加各种与网站交互的新方式。我们将创建与我们的数据模型一起工作的表单，并学习如何接收和验证用户数据。'
- en: '[Chapter 5](ch05.html "Chapter 5. Authenticating Users"), *Authenticating Users*,
    explains how you can add user authentication to your site. Being able to distinguish
    one user from another allows us to develop an entirely new class of features.
    For instance, we will see how to restrict access to the create, edit, and delete
    views, preventing anonymous users from tampering with site content. We can also
    display a user''s draft posts to them but hide them from everyone else.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章 用户认证") *用户认证*，解释了如何向您的网站添加用户认证。能够区分一个用户和另一个用户使我们能够开发一整套新的功能。例如，我们将看到如何限制对创建、编辑和删除视图的访问，防止匿名用户篡改网站内容。我们还可以向用户显示他们的草稿帖子，但对其他人隐藏。'
- en: '[Chapter 6](ch06.html "Chapter 6. Building an Administrative Dashboard"), *Building
    an Administrative Dashboard*, shows you how you can build an administrative dashboard
    for your site, using the excellent Flask-Admin. Our admin dashboard will give
    certain selected users the ability to manage all the content across the entire
    site. In essence, the admin site will be a graphical frontend for the database,
    supporting operations to create, edit, and delete rows in our application''s tables.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章 建立管理仪表板") *建立管理仪表板*，向您展示如何为您的网站构建一个管理仪表板，使用优秀的Flask-Admin。我们的管理仪表板将使特定选定的用户能够管理整个网站上的所有内容。实质上，管理站点将是数据库的图形前端，支持创建、编辑和删除应用程序表中的行的操作。'
- en: '[Chapter 7](ch07.html "Chapter 7. AJAX and RESTful APIs"), *AJAX and RESTful
    APIs*, uses Flask-Restless to create a RESTful API for the blogging app. A RESTful
    API is a powerful way of accessing your app programmatically by providing highly-structured
    data to represent it. Flask-Restless works very well with our SQLAlchemy models,
    and it also handles complex tasks, such as serialization, and result filtering.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章 AJAX和RESTful API") *AJAX和RESTful API*，使用Flask-Restless为博客应用程序创建RESTful
    API。RESTful API是一种强大的访问应用程序的方式，通过提供高度结构化的数据来表示它。Flask-Restless与我们的SQLAlchemy模型非常配合，它还处理复杂的任务，如序列化和结果过滤。'
- en: '[Chapter 8](ch08.html "Chapter 8. Testing Flask Apps"), *Testing Flask Apps*,
    covers how you can write unit tests covering all parts of the blogging app. We
    will utilize Flask''s test client to simulate "live" requests. We will also see
    how the Mock library can simplify testing complex interactions, such as calling
    third-party services, such as databases.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章 测试Flask应用") *测试Flask应用*，介绍了如何编写覆盖博客应用程序所有部分的单元测试。我们将利用Flask的测试客户端来模拟“实时”请求。我们还将看到Mock库如何简化测试复杂的交互，如调用数据库等第三方服务。'
- en: '[Chapter 9](ch09.html "Chapter 9. Excellent Extensions"), *Excellent Extensions*,
    teaches you how to enhance your Flask installation with popular third-party extensions.
    We used extensions throughout the book, but we can now explore the added extra
    security or functionality with very little effort and can polish off your app
    nicely.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章 优秀的扩展") *优秀的扩展*，教您如何使用流行的第三方扩展增强您的Flask安装。我们在整本书中都使用了扩展，但现在我们可以探索额外的安全性或功能，而几乎不费吹灰之力，可以很好地完善您的应用程序。'
- en: '[Chapter 10](ch10.html "Chapter 10. Deploying Your Application"), *Deploying
    Your Application*, teaches you how to deploy your Flask applications securely
    and in an automated, repeatable manner. We will look at how to configure the commonly-used
    WSGI capable servers, such as Apache and Nginx, as well as the Python web server
    Gunicorn, to give you plenty of options. Then, we will see how to secure part
    or the entire site using SSL before finally wrapping up our application in a configuration
    management tool to automate our deployment.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章 部署您的应用程序") *部署您的应用程序*，教您如何安全地以自动化、可重复的方式部署您的Flask应用程序。我们将看看如何配置常用的WSGI能力服务器，如Apache和Nginx，以及Python
    Web服务器Gunicorn，为您提供多种选择。然后，我们将看到如何使用SSL安全地部分或整个网站，最后使用配置管理工具来自动化我们的部署。'
- en: What you need for this book
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书所需内容
- en: While Python is at home on most operating systems, and we have tried to keep
    an operating system-agnostic approach within the book, it is advisable to use
    a computer running a Linux distribution or OS X when working with this book, as
    Python is already installed and running. The Linux distribution can be either
    installed on the machine or within a virtual machine. Almost any Linux distribution
    will do, and any recent version of Ubuntu will be fine.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然Python在大多数操作系统上都能很好地运行，而且我们在本书中尽量保持了与操作系统无关的方法，但建议在使用本书时使用运行Linux发行版或OS X的计算机，因为Python已经安装并运行。Linux发行版可以安装在计算机上或虚拟机中。几乎任何Linux发行版都可以，任何最新版本的Ubuntu都可以。
- en: Who this book is for
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is for anyone who wants to develop their knowledge of Python into
    something that can be used on the Web. Flask follows Python design principles,
    and it can be easily understood by anyone who knows Python and even by those who
    do not.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书适合任何想要将他们对Python的知识发展成可以在Web上使用的人。Flask遵循Python的设计原则，任何了解Python甚至不了解Python的人都可以轻松理解。
- en: Conventions
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是这些样式的一些示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "We
    can include other contexts through the use of the `include` directive."'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名显示如下：“我们可以通过使用`include`指令来包含其他上下文。”
- en: 'A block of code is set as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关的行或项目会以粗体显示：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式书写：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "You should see the message **Hello, Flask** displayed on a blank white
    page."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以这样的方式出现在文本中：“您应该在空白白色页面上看到消息**Hello,
    Flask**显示。”'
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会出现在这样的框中。
- en: Tip
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这样的方式出现。
