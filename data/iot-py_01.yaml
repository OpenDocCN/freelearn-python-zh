- en: Chapter 1. Understanding and Setting up the Base IoT Hardware
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 理解和设置基础物联网硬件
- en: In this chapter, we will start our journey towards **Internet of Things** (**IoT**)
    with Python and the Intel Galileo Gen 2 board. Python is one of the most popular
    and versatile programming languages. You can use Python to create multiplatform
    desktops and Web, mobile, and scientific applications. You can work with huge
    amounts of data and develop the complex algorithms that are popular in Big Data
    scenarios with Python. There are thousands of Python packages, which allow you
    to extend Python capabilities to any kind of domain you can imagine.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将开始使用Python和英特尔Galileo Gen 2主板探索通往**物联网**（**IoT**）的旅程。Python是最受欢迎且功能最全面的编程语言之一。您可以使用Python创建多平台桌面和Web、移动以及科学应用。您可以使用Python处理大量数据，并开发在大数据场景中流行的复杂算法。有成千上万的Python包，这些包允许您将Python的能力扩展到您能想象到的任何领域。
- en: We can leverage our existing knowledge of Python and all of its packages to
    code the different pieces of our IoT ecosystem. We can use the object-oriented
    features, which we love from Python. in code that interacts with the Intel Galileo
    Gen 2 board and the electronic components connected to it. We can use the different
    packages that make it possible for us to easily run a Web server and provide a
    RESTful API. We can use all the packages that we already know to interact with
    databases, Web services, and different APIs. Python makes it easy for us to jump
    into the IoT world. We don't need to learn another programming language, we can
    use the one we already know and love.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以利用我们对Python及其所有包的现有知识来编写我们物联网生态系统的不同部分。我们可以使用Python中我们喜爱的面向对象特性，在交互英特尔Galileo
    Gen 2主板及其连接的电子组件的代码中。我们可以使用不同的包，使我们能够轻松运行Web服务器并提供RESTful API。我们可以使用我们已知的所有包来与数据库、Web服务和不同的API交互。Python使我们能够轻松地进入物联网世界。我们不需要学习另一种编程语言，我们可以使用我们已知的并喜爱的语言。
- en: 'First, we will learn about the features included in the Intel Galileo Gen 2
    board. We will:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们将学习英特尔Galileo Gen 2主板包含的功能。我们将：
- en: Understand the Intel Galileo Gen 2 board and its components
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解英特尔Galileo Gen 2主板及其组件
- en: Recognize the Input/Output and the Arduino 1.0 pinout
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 识别输入/输出和Arduino 1.0引脚排列
- en: Learn about the additional expansion and connectivity capabilities
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 了解额外的扩展和连接功能
- en: Understand the buttons and the LEDs found in the board
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解主板中发现的按钮和LED
- en: Check and upgrade the board's firmware
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检查并升级主板固件
- en: Understanding the Intel Galileo Gen 2 board and its components
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解英特尔Galileo Gen 2主板及其组件
- en: We want to bring our ideas to life, easily. We want to be able to display a
    happy birthday message on a screen when we clap our hands. We want to collect
    huge amounts of data from the real world. We want to create wearables that keep
    track of all our activities during an entire day. We want to use the data to perform
    actions and interact with real-world elements. We want to use our mobile devices
    to control robots. We want to be able to determine whether the weather is hot
    or cold based on the data retrieved from a temperature sensor. We want to make
    decisions based on the values collected from a humidity sensor.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望轻松地将我们的想法变为现实。我们希望能够在拍手时在屏幕上显示生日快乐的信息。我们希望从现实世界中收集大量数据。我们希望创建能够跟踪我们一整天所有活动的可穿戴设备。我们希望使用数据执行操作并与现实世界元素交互。我们希望使用我们的移动设备来控制机器人。我们希望能够根据从温度传感器获取的数据确定天气是热还是冷。我们希望根据从湿度传感器收集的值做出决策。
- en: We want to measure how much of our favorite beverage is there in the cup and
    display the information on an LCD dot matrix display. We want to analyze all the
    data collected by things that are connected to the Internet. We want to become
    makers in the Internet of Things era by leveraging our existing Python programming
    skills.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望测量杯子里有多少我们最喜欢的饮料，并在LCD点阵显示屏上显示信息。我们希望分析所有连接到互联网的事物收集的数据。我们希望利用我们现有的Python编程技能，成为物联网时代的创造者。
- en: We will use Python as the main programming language to control the different
    components connected to an Intel Galileo Gen 2 board, specifically Python 2.7.3\.
    However, before we can become makers, it is necessary to understand some of this
    board's features.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用Python作为主要的编程语言来控制连接到英特尔Galileo Gen 2主板的不同组件，特别是Python 2.7.3。然而，在我们成为创造者之前，了解这块主板的一些功能是必要的。
- en: 'After we unbox an Intel Galileo Gen 2, we will find the following elements:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们打开英特尔Galileo Gen 2板后，我们将找到以下元素：
- en: The Intel Galileo Gen 2 board
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 英特尔Galileo Gen 2板
- en: A 12 VDC (Volts direct current), 1.5 A (Amperes) power supply
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个12 VDC（直流伏特），1.5 A（安培）的电源
- en: 'The following image shows the front view for an unboxed Intel Galileo Gen 2
    board:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了未开封的英特尔Galileo Gen 2板的前视图：
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_01.jpg)'
- en: Let's have a look at the front view of the board for a few minutes. We will
    notice many familiar elements, such as an Ethernet jack, host USB port, and many
    labeled pins. In case we have previous experience with an Arduino UNO R3 board,
    we will easily realize that many elements are in the same locations as in that
    board. In case we have previous experience with embedded systems and electronics,
    we will easily realize that the board provides the necessary pins (SCL and SDA)
    to talk with the devices that support the I²C bus. In case we don't have any previous
    experience, we will learn what we can do with all these pins in the examples included
    in the forthcoming chapters.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们花几分钟时间看看板的前视图。我们会注意到许多熟悉的元素，例如以太网插孔、主机USB端口和许多标记的引脚。如果我们之前有Arduino UNO R3板的经验，我们会很容易意识到许多元素与该板上的位置相同。如果我们有嵌入式系统和电子方面的经验，我们会很容易意识到该板提供了与支持I²C总线的设备通信所需的引脚（SCL和SDA）。如果我们没有任何先前的经验，我们将在接下来的章节中包含的示例中学习我们可以用所有这些引脚做什么。
- en: The next image shows the graphical representation of the Intel Galileo Gen 2
    board in the Fritzing open source and free software. As you might notice, the
    graphical representation includes only the important pieces of the board and all
    the things we can wire and connect, with the necessary labels to help recognize
    them easily. We will use the Fritzing diagrams to illustrate all the wirings that
    we must do in order to complete each sample project through the book.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图像显示了Fritzing开源免费软件中英特尔Galileo Gen 2板的图形表示。正如你可能注意到的，图形表示仅包括板上的重要部件和所有我们可以布线和连接的东西，以及必要的标签以帮助轻松识别。我们将使用Fritzing图来展示我们必须完成的全部布线，以便通过本书完成每个示例项目。
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_02.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_02.jpg)'
- en: Tip
  id: totrans-21
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can download the latest version of Fritzing from [http://fritzing.org/download/](http://fritzing.org/download/).
    Fritzing runs on Windows, Mac OS X and Linux. You will find the Fritzing sketches
    for all the examples included throughout the book in files with an FZZ extension
    (`*.fzz`) as a part of the code files that you can download for this book. The
    files are saved with Fritzing 0.92\. Thus, you can open the sketches in Fritzing,
    check the breadboard view, and make any changes to it based on your needs.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://fritzing.org/download/](http://fritzing.org/download/)下载Fritzing的最新版本。Fritzing在Windows、Mac
    OS X和Linux上运行。您将在具有FZZ扩展名（`*.fzz`）的文件中找到本书中包含的所有示例的Fritzing草图，这些文件是您可以下载的代码文件的一部分。文件以Fritzing
    0.92版本保存。因此，您可以在Fritzing中打开草图，检查面包板视图，并根据您的需求进行任何更改。
- en: The next image shows the electronic schematic representation of the Intel Galileo
    Gen 2 board, that is, the symbolic representation of the board to make it easy
    to understand the interconnections of the electronic circuits related to the board.
    The electronic schematic is also known as circuit diagram or electrical diagram.
    The symbol includes all the pins provided by the board shown as connectors. We
    can easily recognize the many labels that appear on the board as labels for each
    connector in the symbol. Fritzing allows us to work with both the breadboard and
    the electronic schematic representation.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图像显示了英特尔Galileo Gen 2板的电子原理图表示，即板的符号表示，以便于理解与板相关的电子电路的互连。电子原理图也称为电路图或电气图。符号包括板上提供的所有引脚，显示为连接器。我们可以轻松识别出板上出现的许多标签，它们是符号中每个连接器的标签。Fritzing允许我们同时使用面包板和电子原理图表示。
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_03.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_03.jpg)'
- en: Tip
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: When you open the Fritzing file for each sample included in the book, you will
    be able to easily switch from the breadboard view to the schematic view by clicking
    on either the Breadboard or the Schematic buttons located at the top of the main
    Fritzing window.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当你打开书中包含的每个示例的Fritzing文件时，你可以通过点击位于主Fritzing窗口顶部的面包板或原理图按钮，轻松地在面包板视图和原理图视图之间切换。
- en: 'The next image shows the system block diagram for the Intel Galileo Gen 2 board.
    The diagram is a part of the content included in the Intel Galileo Gen 2 design
    document: [http://www.intel.com/content/dam/www/public/us/en/documents/guides/galileo-g2-schematic.pdf](http://www.intel.com/content/dam/www/public/us/en/documents/guides/galileo-g2-schematic.pdf).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图像展示了英特尔Galileo Gen 2板的系统框图。该图是英特尔Galileo Gen 2设计文档中包含的内容的一部分：[http://www.intel.com/content/dam/www/public/us/en/documents/guides/galileo-g2-schematic.pdf](http://www.intel.com/content/dam/www/public/us/en/documents/guides/galileo-g2-schematic.pdf)。
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_04.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_04.jpg)'
- en: 'The Intel Galileo Gen 2 board is an Arduino certified embedded computer that
    we will use to develop and prototype our IoT projects. The board is based on Intel
    architecture and uses an Intel Quark SoC X1000 system on a chip, known as SoC
    or application processor. The SoC is a single-core and single-threaded application
    processor that is compatible with the Intel Pentium 32-bit **instruction set architecture**
    (**ISA**). Its operating speed is up to 400 MHz. The following image shows the
    SoC, located approximately at the center of the board. The following page provides
    detailed information about the Intel Quark SoC X1000: [http://ark.intel.com/products/79084/Intel-Quark-SoC-X1000-16K-Cache-400-MHz](http://ark.intel.com/products/79084/Intel-Quark-SoC-X1000-16K-Cache-400-MHz)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 英特尔Galileo Gen 2板是Arduino认证的嵌入式计算机，我们将用它来开发和原型化我们的物联网项目。该板基于英特尔架构，并使用英特尔Quark
    SoC X1000系统芯片，也称为SoC或应用处理器。SoC是一个单核单线程的应用处理器，与英特尔Pentium 32位**指令集架构**（ISA）兼容。其运行速度高达400
    MHz。以下图像显示了位于板中心大约位置的SoC。以下页面提供了关于英特尔Quark SoC X1000的详细信息：[http://ark.intel.com/products/79084/Intel-Quark-SoC-X1000-16K-Cache-400-MHz](http://ark.intel.com/products/79084/Intel-Quark-SoC-X1000-16K-Cache-400-MHz)
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_05.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_05.jpg)'
- en: On the right-hand side of the CPU, the board has two integrated circuits that
    provide 256 MB of DDR3 **RAM** (short for **Random Access Memory**) memory. The
    operating system and Python will be able to work with this RAM memory. As it happens
    in any computer, RAM memory loses its information after we turn off the board.
    Thus, we say that RAM is volatile, as the data stored in it is lost when the memory
    isn't powered. The following image shows the DDR3 memory chips.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在CPU的右侧，该板有两个集成电路，提供256 MB的DDR3**RAM**（随机存取存储器）内存。操作系统和Python将能够与这种RAM内存一起工作。就像在任何计算机中发生的那样，RAM内存在我们关闭板子后会丢失其信息。因此，我们说RAM是易失的，因为当内存未供电时，存储在其中的数据会丢失。以下图像显示了DDR3内存芯片。
- en: '![Understanding the Intel Galileo Gen 2 board and its components](img/B05042_01_06.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![理解英特尔Galileo Gen 2板及其组件](img/B05042_01_06.jpg)'
- en: 'In addition, the board provides access to the following onboard memories:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，该板还提供了以下板载存储器的访问：
- en: 512 KB embedded **SRAM** (short for **Static Random Access Memory**).
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 512 KB的嵌入式**SRAM**（静态随机存取存储器）。
- en: 8 MB Legacy SPI NOR Flash, non-volatile memory. Its goal is to store the board's
    firmware and sketches.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 8 MB的Legacy SPI NOR闪存，非易失性存储器。其目的是存储板的固件和草图。
- en: 11 KB **EEPROM** (short for **Electrically Erasable Programmable Read-Only Memory**).
    It is non-volatile and we can store data in it for our own purposes.
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 11 KB的**EEPROM**（电可擦可编程只读存储器）。它是非易失性的，我们可以用它来存储我们自己的数据。
- en: Recognizing the Input/Output and the Arduino 1.0 pinout
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别输入/输出和Arduino 1.0引脚布局
- en: 'The board provides the following I/O pins:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 该板提供了以下I/O引脚：
- en: 14 digital I/O pins
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 14个数字I/O引脚
- en: Six **PWM** (short for **Pulse Width Modulation**) output pins
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六个**PWM**（脉冲宽度调制）输出引脚
- en: Six analog input pins
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六个模拟输入引脚
- en: The board is hardware and software pin-compatible with Arduino shields designed
    for the Arduino Uno R3\. The 14 digital I/O pins numbered from 0 to 13 are located
    in the upper-right corner of the board and they also include the adjacent **AREF**
    and **GND** pins, as in the Arduino Uno R3\. The pins configuration is also known
    as Arduino 1.0 pinout.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 该板在硬件和软件引脚上与为Arduino Uno R3设计的Arduino保护板兼容。编号从0到13的14个数字I/O引脚位于板的右上角，它们还包括相邻的**AREF**和**GND**引脚，如Arduino
    Uno R3所示。引脚配置也称为Arduino 1.0引脚排布。
- en: Tip
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Shields are boards that we can plug on top of the Intel Galileo Gen 2 board
    to extend its capabilities. For example, you can plug a shield that provides two
    high current motor controllers or a shield that adds an LED matrix.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 保护板是我们可以插在Intel Galileo Gen 2板上以扩展其功能的板。例如，您可以插入一个提供两个高电流电机控制器的保护板，或者插入一个添加LED矩阵的保护板。
- en: 'As it happens in the Arduino Uno R3, we can use six of these digital I/O pins
    as PWM (Pulse Width Modulation) output pins. Specifically, the pins labeled with
    a tilde symbol (**~**) as a prefix to the number have this capability: pins **~11**,
    **~10**, **~9**, **~6**, **~5** and **~3**. The following are the pins that compose
    the header from left to right:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如同Arduino Uno R3一样，我们可以使用这些数字I/O引脚中的六个作为PWM（脉冲宽度调制）输出引脚。具体来说，带有波浪线符号（**~**）作为数字前缀的引脚具有这种功能：引脚**~11**、**~10**、**~9**、**~6**、**~5**和**~3**。以下是从左到右组成引脚头的引脚：
- en: SCL
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SCL
- en: SDA
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SDA
- en: AREF
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AREF
- en: GND
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GND
- en: '13'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '13'
- en: '12'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '12'
- en: ~11
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~11
- en: ~10
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~10
- en: ~9
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~9
- en: '8'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '8'
- en: '7'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '7'
- en: ~6
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~6
- en: ~5
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~5
- en: '4'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '4'
- en: ~3
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ~3
- en: '2'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '2'
- en: TX->1
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TX->1
- en: RX<-0
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RX<-0
- en: 'The next image shows the 14 digital I/O pins and the six PWM output pins labeled
    with a tilde symbol (**~**) as a prefix for the number. The first two pins, starting
    from the left are for the two I²C bus lines: **SCL** (**Serial CLock**) and **SDA**
    (**Serial DAta**). The last two pins, starting from the left, labeled **TX->1**
    and **RX<-0** are the UART 0 port pins. A **UART** port stands for **Universal
    Asynchronous Receiver/Transmitter**.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个图像显示了14个数字I/O引脚和六个带有波浪线符号（**~**）作为前缀的PWM输出引脚。从左数起的前两个引脚是两个I²C总线线：**SCL**（串行时钟）和**SDA**（串行数据）。从左数起的最后两个引脚，标记为**TX->1**和**RX<-0**，是UART
    0端口引脚。**UART**端口代表**通用异步接收/发送器**。
- en: '![Recognizing the Input/Output and the Arduino 1.0 pinout](img/B05042_01_07.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![识别输入/输出和Arduino 1.0引脚排布](img/B05042_01_07.jpg)'
- en: 'The six analogous input pins numbered from **A0** to **A5** are located in
    the lower-right corner of the board, as in the Arduino Uno R3\. On the left-hand
    side of the analog input pins, we can see the following power pins that compose
    the power header:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 编号从**A0**到**A5**的六个类似输入引脚位于板的右下角，如Arduino Uno R3所示。在模拟输入引脚的左侧，我们可以看到以下组成电源头的电源引脚：
- en: POWER
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电源
- en: IOREF
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IOREF
- en: RESET
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RESET
- en: 3.3V
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3.3V
- en: 5V
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 5V
- en: GND
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GND
- en: GND
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GND
- en: VIN
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: VIN
- en: The **VIN** pin in the power header provides the input voltage that is supplied
    to the board through its power jack. The power supply included in the box provides
    12V. However, the board can operate with an input voltage ranging from 7V to 15V.
    The board also provides support to Power over Ethernet, also known as PoE, this
    passes the electrical power to the board along with data on the Ethernet cable.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 电源头中的**VIN**引脚提供输入电压，该电压通过电源插头供应到板上。盒子中包含的电源提供12V。然而，该板可以在7V到15V的输入电压范围内运行。该板还支持以太网供电（PoE），这通过以太网电缆将电力传递到板上，同时传递数据。
- en: 'The following screenshot shows the power pins, also known as power headers,
    and the six analog input pins:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了电源引脚，也称为电源头，以及六个模拟输入引脚：
- en: '![Recognizing the Input/Output and the Arduino 1.0 pinout](img/B05042_01_08.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![识别输入/输出和Arduino 1.0引脚排布](img/B05042_01_08.jpg)'
- en: The board includes a jumper labeled **IOREF** that allows us to select between
    a 3.3V or 5V shield operation and provides voltage-level translation to all the
    I/O pins. Based on the jumper position, the board can work with either a 3.3V
    or 5V Arduino shield. By default, the **IOREF** jumper is set to the 5V position,
    and therefore, the initial setting allows us to work with 5V shields. The following
    screenshot shows the **IOREF** jumper set to the 5V position.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 该板包括一个标记为**IOREF**的跳线，允许我们在3.3V或5V保护板操作之间进行选择，并为所有I/O引脚提供电压级别转换。根据跳线位置，该板可以与3.3V或5VArduino保护板一起工作。默认情况下，**IOREF**跳线设置为5V位置，因此初始设置允许我们使用5V保护板。以下截图显示了**IOREF**跳线设置为5V位置。
- en: '![Recognizing the Input/Output and the Arduino 1.0 pinout](img/B05042_01_09.jpg)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![识别输入/输出和Arduino 1.0引脚排布](img/B05042_01_09.jpg)'
- en: Tip
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The **IOREF** pin in the power header provides the operational voltage reference
    based on the **IOREF** jumper position. Thus, based on the **IOREF** jumper position,
    the voltage reference in the **IOREF** pin can be either 5V or 3.3V.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 电源头中的**IOREF**引脚提供基于**IOREF**跳线位置的运行电压参考。因此，根据**IOREF**跳线位置，**IOREF**引脚的电压参考可以是5V或3.3V。
- en: 'On the right-hand side of the board, there is a 6 pin, specifically 2x3 pin,
    ICSP (In-Circuit Serial Programming) header, labeled **ICSP**. The location of
    this header is also compatible with the Arduino 1.0 pinout. The following screenshot
    shows the ICSP header:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在板的右侧，有一个6针，具体是2x3针，ICSP（In-Circuit Serial Programming）头，标记为**ICSP**。此头的位置也与Arduino
    1.0引脚排列兼容。以下截图显示了ICSP头：
- en: '![Recognizing the Input/Output and the Arduino 1.0 pinout](img/B05042_01_11.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![识别输入/输出和Arduino 1.0引脚排列](img/B05042_01_11.jpg)'
- en: Recognizing additional expansion and connectivity capabilities
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 识别额外的扩展和连接能力
- en: The power jack is located on the left-hand side of the board and it is labeled
    **PWR**. Below the power jack, there is a microSD card connector, labeled **SDIO**.
    The microSD card connector supports microSD cards with a maximum support capacity
    of 32 GB. We will use the microSD card as our main storage to store the operating
    system, Python, and the necessary libraries. The board can boot from the microSD
    card. Thus, we can think of the microSD card as our main hard drive to work with
    IoT projects. The following screenshot shows the power jack with the power supply
    connected to it and the microSD card connector with an 8 GB microSD card being
    connected to it.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 电源插孔位于板的左侧，标记为**PWR**。在电源插孔下方，有一个微SD卡连接器，标记为**SDIO**。微SD卡连接器支持最大容量为32 GB的微SD卡。我们将使用微SD卡作为我们的主要存储来存储操作系统、Python和必要的库。该板可以从微SD卡启动。因此，我们可以将微SD卡视为我们与物联网项目一起工作的主要硬盘。以下截图显示了连接电源供应的电源插孔以及连接了8
    GB微SD卡的微SD卡连接器。
- en: '![Recognizing additional expansion and connectivity capabilities](img/B05042_01_10.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![识别额外的扩展和连接能力](img/B05042_01_10.jpg)'
- en: The Ethernet jack is located in the upper-left corner of the board, labeled
    **10/100 LAN**, above the power jack. The Ethernet port supports both the Ethernet
    and Fast Ethernet standards, and therefore, it can work with either 10 Mbps or
    100 Mbps nominal throughput rates. The Ethernet port is extremely useful to connect
    the board to our LAN and access it through an IP address. There is an adhesive
    label with the MAC (Media Access Control) address for the Ethernet onboard network
    interface card. The MAC address is also known as physical address.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以太网插孔位于板的左上角，标记为**10/100 LAN**，位于电源插孔上方。以太网端口支持以太网和快速以太网标准，因此它可以与10 Mbps或100
    Mbps的标称吞吐量率一起工作。以太网端口对于将板连接到我们的LAN并通过IP地址访问它来说非常有用。有一个带有以太网板上网络接口卡MAC（媒体访问控制）地址的粘性标签。MAC地址也称为物理地址。
- en: The following screenshot shows this adhesive label on the Ethernet jacket and
    a cable plugged in it. The MAC address for the board shown in the image is A1B2C3D4E5F6\.
    If we use the convention that expresses a MAC address as six groups of two hexadecimal
    digits separated by colons (:), the MAC address will be expressed as A1:B2:C3:D4:E5:F6\.
    The MAC address is extremely useful to identify the board in our LAN DHCP client
    list. For security reasons, the original MAC address has been erased and we use
    a fake MAC address for our example.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了以太网外壳上的这个粘性标签以及插入其中的电缆。图中所示板的MAC地址为A1B2C3D4E5F6。如果我们使用将MAC地址表示为用冒号(:)分隔的六组两个十六进制数字的约定，则MAC地址将表示为A1:B2:C3:D4:E5:F6。MAC地址对于在我们的LAN
    DHCP客户端列表中识别板来说非常有用。出于安全原因，原始MAC地址已被擦除，我们使用一个假MAC地址作为示例。
- en: '![Recognizing additional expansion and connectivity capabilities](img/B05042_01_12.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![识别额外的扩展和连接能力](img/B05042_01_12.jpg)'
- en: 'A six pin, 3.3V USB TTL UART header is located next to the Ethernet jack, specifically
    UART 1, the second UART port in the board. The six pin, 3.3V USB TTL UART header
    has the following labels on the right-hand side:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太网插孔旁边，有一个六针、3.3V USB TTL UART 头，具体是 UART 1，即板上的第二个 UART 端口。六针、3.3V USB TTL
    UART 头的右侧有以下标签：
- en: CTS
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CTS
- en: TXO
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: TXO
- en: RXI
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RXI
- en: No label (empty)
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无标签（空）
- en: RTS
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RTS
- en: GND
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GND
- en: Next to the Ethernet jack and the UART header, there is a micro USB Type B connection,
    labeled **USB CLIENT**. We can use this connection to connect the computer to
    the board, in order to perform firmware updates or transfer sketches.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在以太网插孔和UART引脚旁边，有一个微型USB Type B连接，标记为**USB客户端**。我们可以使用这个连接将计算机连接到板子，以便执行固件更新或传输草图。
- en: Tip
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: However, it is important to know that you cannot power the board off USB. In
    addition to it, never connect a cable to the micro USB Type B connection before
    you connect the power supply to the board.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，重要的是要知道，您不能通过USB关闭板子的电源。此外，在连接电源供应到板子之前，切勿将电缆连接到微型USB Type B连接。
- en: Next to the micro USB connection, there is a USB 2.0 host connector, labeled
    **USB HOST**. The connector supports a maximum of 128 USB endpoint devices. We
    can use this connector to plug a USB thumb drive for additional storage, USB keyboard,
    USB mouse, or any other USB device that we might need. However, we must consider
    the necessary drivers and their compatibility with the Linux distribution that
    we will be using with the board, before we plug any device.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在微型USB连接旁边，有一个USB 2.0主机连接器，标记为**USB主机**。该连接器支持最多128个USB端点设备。我们可以使用这个连接器插入USB闪存驱动器以进行额外存储，USB键盘、USB鼠标或我们可能需要的任何其他USB设备。然而，在我们插入任何设备之前，我们必须考虑必要的驱动程序以及它们与我们将在板上使用的Linux发行版的兼容性。
- en: The following image shows the UART header, micro USB connector, and the USB
    2.0 port, from left to right, next to the Ethernet jack.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了从左到右依次是UART引脚、微型USB连接器和USB 2.0端口，旁边是以太网插孔。
- en: '![Recognizing additional expansion and connectivity capabilities](img/B05042_01_13.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![识别额外的扩展和连接功能](img/B05042_01_13.jpg)'
- en: The following image shows the side view with all the connectors and jacks. From
    left to right, the USB 2.0 port, the micro USB connector, the UART header, and
    the Ethernet jack with the green (SPEED) and yellow (LINK) LEDs.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图片显示了带有所有连接器和插孔的侧面视图。从左到右，USB 2.0端口、微型USB连接器、UART引脚和带有绿色（速度）和黄色（链路）LED的以太网插孔。
- en: '![Recognizing additional expansion and connectivity capabilities](img/B05042_01_14.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![识别额外的扩展和连接功能](img/B05042_01_14.jpg)'
- en: The back of the board provides a mini PCI Express slot, also known as the mPICe
    slot, compliant with PCIe 2.0 features, labeled **PCIE**. The slot is compatible
    with both full size and half size mPCIe modules that we can connect to the board
    to expand its capabilities. The half size mPCIe module requires an adapter to
    be connected to the slot on the board.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 板子的背面提供了一个迷你PCI Express插槽，也称为mPCIe插槽，符合PCIe 2.0特性，标记为**PCIE**。该插槽与全尺寸和半尺寸mPCIe模块兼容，我们可以将其连接到板上以扩展其功能。半尺寸mPCIe模块需要适配器才能连接到板上的插槽。
- en: Tip
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: It is possible to add another USB host port via the mPCIe slot. The mPCIe slot
    is extremely useful to provide WiFi, Bluetooth, and other types of connectivity
    that aren't included as onboard features.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通过mPCIe插槽添加另一个USB主机端口是可能的。mPCIe插槽对于提供WiFi、蓝牙和其他类型的不作为板载功能的连接非常有用。
- en: Next to the mPCIe slot, there is a 10-pin JTAG (Joint Test Action Group) header,
    labeled **JTAG**. It is possible to use the JTAG interface for debugging purposes
    in combination with debugging software that supports the Intel Quark SoC X1000
    application processor, such as the free and open source on-chip debugging software
    OpenOCD.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在mPCIe插槽旁边，有一个10针JTAG（联合测试行动小组）引脚，标记为**JTAG**。可以使用JTAG接口与支持英特尔Quark SoC X1000应用处理器的调试软件进行调试，例如免费和开源的片上调试软件OpenOCD。
- en: The next image shows the back-view for the board with mPCIe slot and the JTAG
    header.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 下一张图片显示了带有mPCIe插槽和JTAG引脚的板子背面视图。
- en: '![Recognizing additional expansion and connectivity capabilities](img/B05042_01_15.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![识别额外的扩展和连接功能](img/B05042_01_15.jpg)'
- en: Understanding the buttons and the LEDs
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解按钮和LED
- en: 'The front of the board provides two buttons located at the bottom labeled **REBOOT**
    and **RESET**. The following image shows these two buttons:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 板子的前面提供了两个位于底部的按钮，分别标记为**重启**和**重置**。以下图片显示了这两个按钮：
- en: '![Understanding the buttons and the LEDs](img/B05042_01_16.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![理解按钮和LED](img/B05042_01_16.jpg)'
- en: The button labeled **REBOOT** resets the Intel Quark SoC X1000 application processor.
    The button labeled **RESET** resets the sketch and any shield attached to the
    board. In this book, we won't be working with the Arduino sketches but we might
    need to reset a shield.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 标有**REBOOT**的按钮重置英特尔Quark SoC X1000应用处理器。标有**RESET**的按钮重置草图以及任何连接到板上的屏蔽。在这本书中，我们不会使用Arduino草图，但我们可能需要重置一个屏蔽。
- en: 'There are five rectangular LEDs located next to the USB 2.0 host connector:
    two LEDs on the left-hand side of the connector and three LEDs on the right-hand
    side. The following are the labels and the meaning of the LEDs:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在USB 2.0主机连接器旁边有五个矩形LED：连接器左侧有两个LED，右侧有三个LED。以下是对LED标签及其含义的说明：
- en: '**OC**: The LED signals over-current when the board is powered through the
    micro USB connector. However, this feature is not enabled on Intel Galileo Gen
    2 boards, and therefore, we just have the LED turned off. If the LED turns on,
    it means that the board is not working OK or the power supply is failing. This
    LED usually turns on when the board is bricked. We say a board is bricked when
    it doesn''t work anymore and is technologically as useful as a brick.'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OC**：当板通过micro USB连接器供电时，LED指示过流。然而，此功能在英特尔Galileo Gen 2板上未启用，因此我们只是将LED关闭。如果LED打开，则表示板工作不正常或电源供应失败。通常，当板被砖化时，此LED会打开。我们说板被砖化，当它不再工作，技术上就像一块砖一样有用。'
- en: '**USB**: It is the micro USB ready LED. The LED turns on after the board has
    finished the boot process and allows us to connect the micro USB cable to the
    micro USB connection labeled **USB CLIENT**. We should never connect a cable to
    the micro USB connection before this LED turns on because we can damage the board.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**USB**：这是micro USB就绪LED。在板完成引导过程后，LED会打开，允许我们将micro USB电缆连接到标有**USB CLIENT**的micro
    USB连接。我们绝对不应该在LED打开之前将电缆连接到micro USB连接，因为这可能会损坏板。'
- en: '**L**: The LED is connected to pin 13 of the digital I/O pins, and therefore,
    a high level sent to pin 13 will turn on this LED and a low level will turn it
    off.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**L**：该LED连接到数字I/O引脚的13号引脚，因此，向13号引脚发送高电平会打开此LED，而低电平会关闭它。'
- en: '**ON**: It is a power LED and indicates that the board is connected to the
    power supply.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ON**：这是一个电源LED，表示板已连接到电源。'
- en: '**SD**: The LED indicates I/O activity with the microSD card connector, labeled
    **SDIO**, and therefore, this LED will blink whenever the board is reading or
    writing on the microSD card.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**SD**：该LED指示与microSD卡连接器（标为**SDIO**）的I/O活动，因此，当板在microSD卡上读取或写入时，此LED会闪烁。'
- en: The following image shows the **OC** and **USB** LEDs on the left-hand side
    of the USB 2.0 host connector and the **L**, **ON** and **SD** LEDs on its right-hand
    side.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了USB 2.0主机连接器左侧的**OC**和**USB**LED以及右侧的**L**、**ON**和**SD**LED。
- en: '![Understanding the buttons and the LEDs](img/B05042_01_17.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![理解按钮和LED](img/B05042_01_17.jpg)'
- en: The board includes an integrated real-time clock, known as RTC. It is possible
    to connect a 3V coin-cell battery to keep the RTC operation between turn-on cycles.
    Unluckily, the battery is not included in the box. The two RTC coin-cell connector
    pins are located in the lower-left corner of the Intel Quark SoC X1000 application
    processor, labeled **COIN** and with a battery icon. The next image shows the
    two RTC coin-cell connector pins.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 该板包括一个集成的实时时钟，称为RTC。可以将3V的纽扣电池连接到RTC，以在开机周期之间保持RTC运行。不幸的是，电池不包括在包装内。两个RTC纽扣电池连接器位于英特尔Quark
    SoC X1000应用处理器左下角，标为**COIN**，并带有电池图标。下一张图像显示了两个RTC纽扣电池连接器。
- en: '![Understanding the buttons and the LEDs](img/B05042_01_18.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![理解按钮和LED](img/B05042_01_18.jpg)'
- en: Checking and upgrading the board's firmware
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查和升级板上的固件
- en: Sometimes, the original firmware included in the board is the latest one available
    for Intel Galileo Gen 2\. However, in some cases, we might need a firmware update,
    and therefore it is always convenient to make sure that we are working with the
    latest available version for the onboard firmware.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，板中包含的原始固件是英特尔Galileo Gen 2可用的最新固件。然而，在某些情况下，我们可能需要固件更新，因此始终确保我们使用的是板上固件的最新可用版本。
- en: Tip
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Firmware updates solve bugs and compatibility issues. Thus, it is always convenient
    to work with the latest firmware. However, in case you don't feel sure about following
    the procedure to update the firmware, it is convenient to keep the version that
    came with the board. A wrong procedure while updating the firmware or a power
    loss during the process might damage the board, that is, it might transform the
    board into a bricked one. You definitely don't want this to happen to your board.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 固件更新可以解决错误和兼容性问题。因此，始终使用最新的固件是非常方便的。然而，如果您对遵循固件更新程序没有信心，保留随板卡提供的版本会更方便。在更新固件过程中，如果操作不当或发生断电，可能会损坏板卡，即可能将板卡变成砖头。您肯定不希望这种情况发生在您的板卡上。
- en: 'If you want to check the current firmware version and check whether it is necessary
    to upgrade the board''s firmware, you must follow the following steps:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想检查当前固件版本并确定是否需要升级板卡的固件，您必须遵循以下步骤：
- en: 'Go to the Intel Galileo Firmware and Drivers download page at [http://downloadcenter.intel.com/download/24748/Intel-Galileo-Firmware-and-Drivers-1-0-4](http://downloadcenter.intel.com/download/24748/Intel-Galileo-Firmware-and-Drivers-1-0-4).
    The URL is for the latest firmware version at the time this book has been written:
    1.0.4\. However, always make sure that you are downloading the latest available
    version from Intel Drivers & Software Download Center. In case the version is
    higher than 1.0.4, the procedure will be the same but you just need to replace
    1.0.4 with the new version numbers.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问英特尔Galileo固件和驱动程序下载页面[http://downloadcenter.intel.com/download/24748/Intel-Galileo-Firmware-and-Drivers-1-0-4](http://downloadcenter.intel.com/download/24748/Intel-Galileo-Firmware-and-Drivers-1-0-4)。该网址是本书编写时的最新固件版本：1.0.4。然而，请始终确保您从英特尔驱动程序和软件下载中心下载的是最新可用的版本。如果版本高于1.0.4，则操作步骤相同，只需将1.0.4替换为新版本号。
- en: 'The Web browser will display the available downloads for the supported operating
    systems. The Web page doesn''t detect the operating system you are using, and
    therefore, it offers the downloads for all the supported operating systems: Windows,
    Mac OS X, and Linux. The following image shows the contents for the Web page:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 网络浏览器将显示支持的操作系统的可用下载。网页无法检测您正在使用的操作系统，因此它为所有支持的操作系统的下载提供支持：Windows、Mac OS X和Linux。以下图片显示了网页的内容：
- en: '![Checking and upgrading the board''s firmware](img/B05042_01_19.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![检查和升级板卡的固件](img/B05042_01_19.jpg)'
- en: 'You will find a PDF user guide under **OS Independent**: **IntelGalileoFirmwareUpdaterUserGuide-1.0.4.pdf**.
    Click on the button, read and accept the Intel Software License Agreement, and
    read the Intel Galileo Firmware Updater Tool documentation. The documentation
    includes all the necessary steps to install the drivers in Windows and Linux.
    The Mac OS X doesn''t require any driver installation.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您将在**操作系统独立**下找到PDF用户指南：**IntelGalileoFirmwareUpdaterUserGuide-1.0.4.pdf**。点击按钮，阅读并接受英特尔软件许可协议，并阅读英特尔Galileo固件更新工具文档。文档包括在Windows和Linux中安装驱动程序的必要步骤。Mac
    OS X不需要安装任何驱动程序。
- en: Before you install the drivers or start the process to check the firmware version
    in your board, remove all the connections from the board, such as the microUSB
    cable and any USB device plugged into the USB 2.0 host connector. Remove any sketches
    and also the microSD card. Your Intel Galileo Gen 2 board should be empty just
    as when you unboxed it.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在您安装驱动程序或开始检查板卡固件版本的流程之前，请从板卡上移除所有连接，例如微型USB线缆和任何插入USB 2.0主机接口的USB设备。移除任何草图以及微型SD卡。您的英特尔Galileo
    Gen 2板卡应该像您拆箱时一样为空。
- en: Connect the power supply to the board and wait a few seconds until the rectangular
    LED labeled **USB** turns on. Once this LED is turned on, the boot process has
    already finished and it is safe to connect a USB Type A to Micro-B USB cable from
    your computer to the micro USB connector labeled **USB CLIENT** in the board.
    Unluckily, the cable isn't included within the board's box. The following image
    shows an Intel Galileo Gen 2 board with the connections done and the firmware
    updater tool running on Mac OS X.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 将电源连接到板卡，等待几秒钟，直到标有**USB**的矩形LED灯亮起。一旦此LED灯亮起，启动过程就已经完成，此时可以安全地将USB Type A到Micro-B
    USB线缆从您的计算机连接到板卡上标有**USB CLIENT**的微型USB接口。不幸的是，该线缆并未包含在板卡的包装盒内。以下图片显示了已完成连接并正在Mac
    OS X上运行固件更新工具的英特尔Galileo Gen 2板卡。
- en: '![Checking and upgrading the board''s firmware](img/B05042_01_20.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![检查和升级板卡的固件](img/B05042_01_20.jpg)'
- en: In case you are working with either Windows or Linux, follow the procedure to
    install the necessary drivers as explained in the **IntelGalileoFirmwareUpdaterUserGuide-1.0.4.pdf**
    document.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用Windows或Linux，请按照**IntelGalileoFirmwareUpdaterUserGuide-1.0.4.pdf**文档中解释的步骤安装必要的驱动程序。
- en: Tip
  id: totrans-138
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You already have the board connected to your computer, and therefore, you can
    skip this step in the document. In fact, many versions of this document didn't
    explain that you had to wait for the USB LED to turn on before you can connect
    the board to a computer through the micro USB connector and that caused many boards
    to have unexpected problems.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您的板已经连接到计算机，因此您可以跳过文档中的此步骤。实际上，许多版本的文档没有解释您在通过微型USB连接器将板连接到计算机之前必须等待USB LED灯亮起，这导致许多板出现了意外问题。
- en: Once you have the drivers installed in your computer and your board is connected
    to it, you can download and execute the ZIP file of the Intel Galileo Firmware
    Updater for your operating system. For Windows, the file is **IntelGalileoFirmwareUpdater-1.0.4-Windows.zip**.
    For Mac OS X, the file is **IntelGalileoFirmwareUpdater-1.0.4-OSX.zip**. You usually
    have to scroll down the Web page to find the appropriate file for your operating
    system. Once you click on the desired file button, it is necessary to read and
    accept the Intel Software License Agreement before you can download the zip file.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您在计算机上安装了驱动程序，并且您的板已连接到它，您就可以下载并执行适用于您的操作系统的英特尔Galileo固件更新器的ZIP文件。对于Windows，文件是**IntelGalileoFirmwareUpdater-1.0.4-Windows.zip**。对于Mac
    OS X，文件是**IntelGalileoFirmwareUpdater-1.0.4-OSX.zip**。通常您需要向下滚动网页以找到适用于您的操作系统的适当文件。一旦点击所需的文件按钮，您必须阅读并接受英特尔软件许可协议，然后才能下载ZIP文件。
- en: In Windows, download the **IntelGalileoFirmwareUpdater-1.0.4-Windows.zip** file,
    open it, and execute the **firmware-updater-1.0.4.exe** application included in
    the zip file. The **Intel Galileo Firmware Updater Tool** window will appear and
    it will automatically select the virtual COM port number, such as **COM3**, generated
    by the previously installed driver in the **Port** dropdown. The application will
    communicate with the board and then display the firmware version included with
    the tool in **Update Firmware Version** and the current board's firmware version
    in **Current Board Firmware**.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows中，下载**IntelGalileoFirmwareUpdater-1.0.4-Windows.zip**文件，打开它，并执行ZIP文件中包含的**firmware-updater-1.0.4.exe**应用程序。**英特尔Galileo固件更新工具**窗口将出现，并会自动选择之前安装的驱动程序生成的虚拟COM端口号，例如**COM3**，在**端口**下拉菜单中。应用程序将与板通信，然后将在**更新固件版本**中显示工具包含的固件版本，并在**当前板固件**中显示当前板的固件版本。
- en: The following image shows the Intel Galileo Firmware Updater Tool running on
    Windows 10\. In this case, the tool has the newest version for the firmware because
    it offers version **1.0.4** and the current board's firmware is **1.0.2**.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了在Windows 10上运行的英特尔Galileo固件更新工具。在这种情况下，该工具具有最新的固件版本，因为它提供**1.0.4**版本，当前板的固件是**1.0.2**。
- en: '![Checking and upgrading the board''s firmware](img/B05042_01_21.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![检查和升级板的固件](img/B05042_01_21.jpg)'
- en: In Mac OS X, download the **IntelGalileoFirmwareUpdater-1.0.4- OSX.zip** file
    and then execute the downloaded **Firmware Updater** application. Take into account
    that you might need to authorize the operating system to run the application based
    on your security settings and your OS X version. The **Intel Galileo Firmware
    Updater Tool** window will appear and it will automatically select the generated
    USB modem device for the connected board, such as **/dev/cu.usbmodem1411**, in
    the **Port** dropdown. The application will communicate with the board and then
    it will display the firmware version included with the tool in **Update Firmware
    Version** and the current board's firmware version in **Current Board Firmware**.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在Mac OS X中，下载**IntelGalileoFirmwareUpdater-1.0.4-OSX.zip**文件，然后执行下载的**固件更新器**应用程序。请注意，根据您的安全设置和OS
    X版本，您可能需要授权操作系统运行该应用程序。**英特尔Galileo固件更新工具**窗口将出现，并会自动选择连接到板的生成的USB调制解调器设备，例如**/dev/cu.usbmodem1411**，在**端口**下拉菜单中。应用程序将与板通信，然后将在**更新固件版本**中显示工具包含的固件版本，并在**当前板固件**中显示当前板的固件版本。
- en: The following image shows the Intel Galileo Firmware Updater Tool running on
    OS X El Capitan. In this case, the tool has the newest version for the firmware
    because it offers version **1.0.4** and the current board's firmware is **1.0.2**,
    as it happened with the Windows version.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了在OS X El Capitan上运行的英特尔Galileo固件更新工具。在这种情况下，该工具提供了最新的固件版本，因为它提供的是**1.0.4**版本，而当前板的固件是**1.0.2**版本，这与Windows版本的情况相同。
- en: '![Checking and upgrading the board''s firmware](img/B05042_01_22.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![检查和升级板的固件](img/B05042_01_22.jpg)'
- en: In case you decide that you need and want to update the firmware, considering
    the previously explained risks, you just need to click on the **Update Firmware**
    button and wait for the tool to indicate that the process has finished. The procedure
    is the same for either Windows or Mac OS X.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您决定需要并想要更新固件，考虑到之前解释的风险，您只需点击**更新固件**按钮，等待工具指示过程已完成。无论是Windows还是Mac OS X，该过程都是相同的。
- en: Tip
  id: totrans-148
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Don't unplug the USB cable from your computer connected to the board, don't
    disconnect the power supply from the board, and don't close the application until
    the tool indicates that the firmware update has finished. The safest way to perform
    a firmware update is to plug the power supply to a UPS (Uninterruptible Power
    Supply) to protect it from a power failure during the firmware update process.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在工具指示固件更新已完成之前，不要从连接到板的计算机上拔下USB电缆，不要从板上断开电源供应，不要关闭应用程序。在固件更新过程中，最安全的做法是将电源供应连接到不间断电源（UPS），以保护它免受电源故障的影响。
- en: Once the firmware update process has finished and the tool displays that you
    have the same firmware version on the board that the firmware version that the
    tool offers, you can close the application and disconnect the USB cable from your
    computer and the board. Make sure that you don't leave the USB cable connected
    to your board and then unplug the power supply.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 固件更新过程完成后，工具显示您在板上具有与工具提供的固件版本相同的版本时，您可以关闭应用程序，并从计算机和板上断开USB电缆。确保您不要将USB电缆留在板上，然后拔掉电源供应。
- en: Test your knowledge
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试你的知识
- en: 'The Intel Galileo Gen 2 board includes:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 英特尔Galileo Gen 2板包括：
- en: WiFi connectivity onboard with three antennas.
  id: totrans-153
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 板上具有三个天线的WiFi连接性。
- en: Ethernet connectivity onboard.
  id: totrans-154
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 板上具有以太网连接性。
- en: Bluetooth connectivity onboard.
  id: totrans-155
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 板上具有蓝牙连接性。
- en: 'The Intel Galileo Gen 2 board is hardware and pin compatible with a wide range
    of:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 英特尔Galileo Gen 2板与以下广泛的硬件和引脚兼容：
- en: Arduino Uno R3 shields.
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Arduino Uno R3屏蔽。
- en: Arduino Pi shields.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Arduino Pi屏蔽。
- en: Raspberry Pi shields.
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Raspberry Pi屏蔽。
- en: 'The jumper labeled IOREF allows us to:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标有IOREF的跳线允许我们：
- en: Select between 3.5V or 7V shield operation and provide voltage-level translation
    to all the I/O pins.
  id: totrans-161
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择3.5V或7V的屏蔽操作，并为所有I/O引脚提供电平转换。
- en: Select between 3.3V or 5V shield operation and provide voltage-level translation
    to all the I/O pins.
  id: totrans-162
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择3.3V或5V的屏蔽操作，并为所有I/O引脚提供电平转换。
- en: Reset the board.
  id: totrans-163
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重置板。
- en: 'The LED labeled L is connected to the following pins of the digital I/O pins:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 标有L的LED连接到以下数字I/O引脚：
- en: 11`.`
  id: totrans-165
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 11`.`。
- en: 12`.`
  id: totrans-166
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 12`.`。
- en: 13`.`
  id: totrans-167
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 13`.`。
- en: 'The back of the board provides the following slot:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 板的背面提供了以下插槽：
- en: Mini PCI Express.
  id: totrans-169
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: Mini PCI Express。
- en: PCMCIA.
  id: totrans-170
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: PCMCIA。
- en: Thunderbolt.
  id: totrans-171
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 雷电
- en: Summary
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learnt the different features offered by the Intel Galileo
    Gen 2 board. We visualized the different components of the board and we understood
    the meaning of the different pins, LEDs, and connectors. We also learned to check
    the board's firmware version and to update it in case it is necessary to do so.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了英特尔Galileo Gen 2板提供的不同功能。我们可视化了板上的不同组件，并理解了不同引脚、LED和连接器的含义。我们还学习了如何检查板的固件版本，并在必要时更新它。
- en: Now that we recognize the different components of the board, we have to prepare
    it to work with Python as our main programming language, which is what we are
    going to discuss in the next chapter.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经识别了板上的不同组件，我们必须准备它以Python作为我们的主要编程语言来工作，这是我们将在下一章中讨论的内容。
