- en: Deployment
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下内容：
- en: Releasing a reusable Django app
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布可重用的Django应用程序
- en: Deploying on Apache with mod_wsgi for the staging environment
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Apache上使用mod_wsgi进行暂存环境的部署
- en: Deploying on Apache with mod_wsgi for the production environment
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Apache上使用mod_wsgi进行生产环境的部署
- en: Deploying on Nginx and Gunicorn for the staging environment
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Nginx和Gunicorn上部署暂存环境
- en: Deploying on Nginx and Gunicorn for the production environment
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在生产环境中使用Nginx和Gunicorn进行部署
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Once you have a working website or reusable app, you will want to make it public.
    Deploying websites is one of the most difficult activities of development with
    Django, because there are lots of moving parts that you have to tackle:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了一个可用的网站或可重用的应用程序，您就会希望将其公开。部署网站是Django开发中最困难的活动之一，因为有许多需要解决的问题：
- en: Managing the web server
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理Web服务器
- en: Configuring the database
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置数据库
- en: Serving static and media files
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供静态和媒体文件
- en: Processing the Django project
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理Django项目
- en: Configuring caching
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置缓存
- en: Setting up email sending
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置发送电子邮件
- en: Managing domains
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理域名
- en: Arranging background tasks and cron jobs
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安排后台任务和定时作业
- en: Setting up continuous integration
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置持续集成
- en: Other tasks, depending on your project's scale and complexity
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 其他任务，取决于您的项目规模和复杂性
- en: In bigger teams, all those tasks are done by DevOps engineers and they require
    skills like deeply understanding networking and computer architecture, administering
    Linux servers, bash scripting, using vim, and so on.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在更大的团队中，所有这些任务都是由DevOps工程师完成的，他们需要像深入了解网络和计算机架构、管理Linux服务器、bash脚本编写、使用vim等技能。
- en: Professional websites usually have **development**, **staging**, and **production** environments.
    Each of them has a specific purpose. Development environments are used for creating
    the project. The production environment is the server (or servers) on which your
    public website is hosted. The staging environment is a system technically analogous
    to production, but is used to check the new features and optimizations before
    publishing them.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 专业网站通常有**开发**、**暂存**和**生产**环境。它们每个都有特定的目的。开发环境用于创建项目。生产环境是托管公共网站的服务器（或服务器）。暂存环境在技术上类似于生产环境，但用于在发布新功能和优化之前进行检查。
- en: Technical requirements
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For working with the code of this chapter, you will need the latest stable version
    of Python, MySQL, or PostgreSQL, and a Django project with a virtual environment.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用本章的代码，您需要最新稳定版本的Python、MySQL或PostgreSQL，以及一个带有虚拟环境的Django项目。
- en: You can find all the code for this chapter at the `ch12` directory of the GitHub
    repository, at [https://github.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition](https://github.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在GitHub存储库的`ch12`目录中找到本章的所有代码，网址为[https://github.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition](https://github.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition)。
- en: Releasing a reusable Django app
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布可重用的Django应用程序
- en: The Django documentation has a tutorial on how to package your reusable apps
    so that they can be installed later, with pip, in any virtual environment. This
    can be viewed at [https://docs.djangoproject.com/en/3.0/intro/reusable-apps/](https://docs.djangoproject.com/en/3.0/intro/reusable-apps/)​.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Django文档中有一个关于如何打包可重用应用程序的教程，以便以后可以在任何虚拟环境中使用pip进行安装。请访问[https://docs.djangoproject.com/en/3.0/intro/reusable-apps/](https://docs.djangoproject.com/en/3.0/intro/reusable-apps/)​。
- en: However, there is another (and arguably better) way to package and release a
    reusable Django app, using the tool, which creates templates for different coding
    projects, such as the new Django CMS website, the Flask website, or the jQuery
    plugin. One of the available project templates is `cookiecutter-djangopackage`.
    In this recipe, you will learn how to use it to distribute the reusable `likes` app.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有另一种（可能更好的）打包和发布可重用的Django应用程序的方法，使用该工具为不同的编码项目创建模板，例如新的Django CMS网站、Flask网站或jQuery插件。其中一个可用的项目模板是`cookiecutter-djangopackage`。在这个教程中，您将学习如何使用它来分发可重用的`likes`应用程序。
- en: Getting ready
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Create a new project with a virtual environment and install `cookiecutter`
    there, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用虚拟环境创建一个新项目，并在其中安装`cookiecutter`，如下所示：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it...
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'To release your `likes` app, follow these steps:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 要发布您的`likes`应用程序，请按照以下步骤进行：
- en: 'Start a new Django app project, as follows:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下步骤启动一个新的Django应用项目：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Or, since this is a GitHub-hosted `cookiecutter` template, we can use a shorthand
    syntax, as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，由于这是一个托管在GitHub上的`cookiecutter`模板，我们可以使用简写语法，如下所示：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Answer the questions to create the app template, as follows:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 回答问题以创建应用程序模板，如下所示：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This will create a basic file structure for the releasable Django package,
    similar to the following:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个基本的文件结构，用于可发布的Django包，类似于以下内容：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Copy the files of the `likes` app from the Django project where you are using
    it to the `django-likes/likes` directory. In cases where `cookiecutter` created
    the same files, the content will need to be merged, rather than overwritten. For
    instance, the `likes/__init__.py` file will need to contain a version string to
    work properly with `setup.py` in later steps, as follows:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`likes`应用程序的文件从您正在使用的Django项目复制到`django-likes/likes`目录。在`cookiecutter`创建相同文件的情况下，内容需要合并，而不是覆盖。例如，`likes/__init__.py`文件需要包含一个版本字符串，以便在后续步骤中与`setup.py`正常工作，如下所示：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Rework dependencies so that there are no imports from the Django project and
    all the used functions and classes are inside of this app. For example, in the `likes` app,
    we have a dependency upon some mixins in the `core` app. We'll need to copy the
    related code directly into the files in the `django-likes` app.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新安排依赖项，以便不再从Django项目导入，并且所有使用的函数和类都在此应用程序内部。例如，在`likes`应用程序中，我们依赖于`core`应用程序中的一些混合。我们需要将相关代码直接复制到`django-likes`应用程序的文件中。
- en: Alternatively, if there is a lot of dependent code, we can release the `core` app
    as an uncoupled package, but then we have to maintain it separately.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，如果有很多依赖代码，我们可以将`core`应用程序作为一个不耦合的包发布，但然后我们必须单独维护它。
- en: Add the reusable app project to the Git repository in GitHub, using the `repo_name` that
    was entered previously.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将可重用的应用程序项目添加到GitHub的Git存储库中，使用之前输入的`repo_name`。
- en: Explore the different files and complete the license, `README`, documentation,
    configuration, and other files.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览不同的文件并完成许可证、`README`、文档、配置和其他文件。
- en: 'Make sure that the app passes the `cookiecutter` template tests:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保应用程序通过`cookiecutter`模板测试：
- en: '[PRE6]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'If your package is closed source, create a shareable release as a ZIP archive,
    as follows:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您的软件包是闭源的，可以创建一个可共享的ZIP存档作为发布，如下所示：
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will create a `django-likes/dist/django-likes-0.1.0.tar.gz` file that
    can then be installed or uninstalled into a virtual environment of any project
    with `pip`, as follows:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建一个`django-likes/dist/django-likes-0.1.0.tar.gz`文件，然后可以使用`pip`安装或卸载到任何项目的虚拟环境中，如下所示：
- en: '[PRE8]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'If your package is open source, you can register and publish your app to the
    Python Package Index (PyPI):'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '如果您的软件包是开源的，可以将您的应用程序注册并发布到Python包索引(PyPI)： '
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Also, to spread the word, add your app to the Django packages by submitting
    a form at [https://www.djangopackages.com/packages/add/](https://www.djangopackages.com/packages/add/).
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，为了宣传，通过在[https://www.djangopackages.com/packages/add/](https://www.djangopackages.com/packages/add/)提交表单，将您的应用程序添加到Django包中。
- en: How it works...
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: '**Cookiecutter** fills in the requested data in different parts of the Django
    app project template, using the defaults given in [square brackets] if you simply
    press *Enter* without entering anything. As a result, you get the `setup.py` file
    ready for distribution to the Python Package Index, Sphinx documentation, MIT
    as the default license, the universal text editor configuration for the project,
    static files and templates included in your app, and other goodies.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cookiecutter**在Django应用程序项目模板的不同部分中填写请求的数据，如果您只是按下*Enter*而不输入任何内容，则使用方括号中给出的默认值。结果，您将得到`setup.py`文件，准备好分发到Python包索引、Sphinx文档、MIT作为默认许可证、项目的通用文本编辑器配置、包含在您的应用程序中的静态文件和模板，以及其他好东西。'
- en: See also
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Creating a project file structure* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django
    3.0*中的*创建项目文件结构*教程'
- en: The *Working with Docker containers for Django, Gunicorn, Nginx, and PostgreSQL* recipe
    in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with
    Django 3.0*
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django
    3.0*中的*使用Docker容器处理Django、Gunicorn、Nginx和PostgreSQL*教程'
- en: The *Handling project dependencies with pip* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django
    3.0*中的*使用pip处理项目依赖*教程'
- en: The *Implementing the Like widget* recipe in [Chapter 4](707758de-0bea-479d-8e79-3e4de6c956d5.xhtml)*,
    Templates and JavaScript*
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第4章](707758de-0bea-479d-8e79-3e4de6c956d5.xhtml)*, Templates and JavaScript*中的*实现Like小部件*教程'
- en: The *Testing views with mock* recipe in [Chapter 11](f22676ec-495d-430d-a535-06a7c9001e61.xhtml)*,
    Testing*
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第11章](f22676ec-495d-430d-a535-06a7c9001e61.xhtml)*, Testing*中的*使用模拟测试视图*教程'
- en: Deploying on Apache with mod_wsgi for the staging environment
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Apache上使用mod_wsgi进行暂存环境部署
- en: In this recipe, I will show you how to create a script for deploying your project
    to a staging environment on a virtual machine on your computer. The project will
    be using the **Apache** web server with the **mod_wsgi** module. For the installation,
    we are going to use **Ansible**, **Vagrant**, and **VirtualBox**. As mentioned
    before, there are lots of details to take care of and usually, several days are
    necessary to develop an optimal deployment script similar to this.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我将向您展示如何创建一个脚本，将您的项目部署到计算机上的虚拟机上的暂存环境。该项目将使用带有**mod_wsgi**模块的**Apache**网络服务器。对于安装，我们将使用**Ansible**，**Vagrant**和**VirtualBox**。如前所述，有很多细节需要注意，通常需要几天时间来开发类似于此的最佳部署脚本。
- en: Getting ready
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Go through the deployment checklist and make sure that your configuration passes
    all security recommendations, as listed at [https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/](https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/).
    At least make sure that your project configuration doesn''t raise warnings when
    you run the following:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 查看部署清单，并确保您的配置符合列在[https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/](https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/)上的所有安全建议。至少确保在运行以下内容时，您的项目配置不会引发警告：
- en: '[PRE10]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Install the latest stable versions of Ansible, Vagrant, and VirtualBox. You
    can get them from the following official websites:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 安装最新稳定版本的Ansible、Vagrant和VirtualBox。您可以从以下官方网站获取它们：
- en: '**Ansible**: [https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html](https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html)'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ansible**: [https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html](https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html)'
- en: '**VirtualBox**: [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirtualBox**: [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)'
- en: '**Vagrant**: [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrant**: [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)'
- en: 'On macOS X, you can install all of them with **HomeBrew**:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS X上，您可以使用**HomeBrew**安装它们：
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How to do it...
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First of all, we''ll need to create some configuration templates for different
    services used on the server. Both staging and production deployment procedures
    will be using them:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为服务器上使用的不同服务创建一些配置模板。暂存和生产部署过程都将使用它们：
- en: In your Django project, create a `deployment` directory and, inside of it, create
    an `ansible_templates` directory.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Django项目中，创建一个`deployment`目录，并在其中创建一个`ansible_templates`目录。
- en: 'Create a Jinja template file for time zone configuration:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为时区配置创建一个Jinja模板文件：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Create a Jinja template file for Apache domain configuration before setting
    up the SSL certificates:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置SSL证书之前，为Apache域配置创建一个Jinja模板文件：
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Create a Jinja template file `deployment/ansible_templates/apache_site.conf.j2`
    for Apache domain configuration also including SSL certificates. For this file,
    copy the content from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/ansible_templates/apache_site.conf.j2](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/ansible_templates/apache_site.conf.j2)
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Apache域配置创建一个Jinja模板文件`deployment/ansible_templates/apache_site.conf.j2`，还包括SSL证书。对于此文件，从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/ansible_templates/apache_site.conf.j2](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/ansible_templates/apache_site.conf.j2)复制内容。
- en: Create a template for the PostgreSQL configuration file `deployment/ansible_templates/postgresql.j2`
    with content from [https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample](https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample).
    Later you can tweak the configuration there to match your server needs.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于PostgreSQL配置文件`deployment/ansible_templates/postgresql.j2`的模板，内容来自[https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample](https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample)。稍后，您可以在那里调整配置以匹配服务器需求。
- en: 'Create a template for the PostgreSQL permissions configuration file (currently,
    it is very permissive, but you can tweak it later according to your needs):'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于PostgreSQL权限配置文件的模板（目前非常宽松，但稍后可以根据需要进行调整）：
- en: '[PRE14]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a template for the Postfix email server configuration:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Postfix电子邮件服务器配置创建一个模板：
- en: '[PRE15]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a template for the email forwarding configuration:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于电子邮件转发配置的模板：
- en: '[PRE16]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Create a template for the `memcached` configuration:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个用于`memcached`配置的模板：
- en: '[PRE17]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Finally, create a Jinja template for the `secrets.json` file:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为`secrets.json`文件创建一个Jinja模板：
- en: '[PRE18]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, let''s work on the Vagrant and Ansible scripts specific to the staging
    environment:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们来处理特定于staging环境的Vagrant和Ansible脚本：
- en: 'In the `.gitignore` file, add lines to ignore some Vagrant- and Ansible-specific
    files:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`.gitignore`文件中，添加忽略一些Vagrant和Ansible特定文件的行：
- en: '[PRE19]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Create two directories, `deployment/staging` and `deployment/staging/ansible`.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建两个目录，`deployment/staging`和`deployment/staging/ansible`。
- en: 'Create a `Vagrantfile` file there with the following script to set up a virtual
    machine with Ubuntu 18 and run the Ansible script in it:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里创建一个`Vagrantfile`文件，其中包含以下脚本，用于设置一个带有Ubuntu 18的虚拟机，并在其中运行Ansible脚本：
- en: '[PRE20]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Create a `hosts` directory containing a `vagrant` file with the following content:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个包含`vagrant`文件的`hosts`目录，其中包含以下内容：
- en: '[PRE21]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Create a `vars.yml` file there with the variables that will be used in the
    installation scripts and Jinja templates for configurations:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里创建一个`vars.yml`文件，其中包含将在安装脚本和Jinja模板中使用的变量：
- en: '[PRE22]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Also, we''ll need a `secrets.yml` file with secret values including passwords
    and authentication keys. First, create a `sample_secrets.yml` file that will have
    no sensitive information, but only the variable names, and then copy it to `secrets.yml` and
    fill in the secrets. The former file will be under version control, whereas the
    latter will be ignored:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们还需要一个`secrets.yml`文件，其中包含密码和认证密钥等秘密值。首先，创建一个`sample_secrets.yml`文件，其中不包含敏感信息，只有变量名称，然后将其复制到`secrets.yml`中，并填写秘密信息。前者将受版本控制，而后者将被忽略：
- en: '[PRE23]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Now create an Ansible script (a so-called *playbook*) at `deployment/staging/ansible/setup.yml`
    for installing all the dependencies and configuring services. Copy the content
    for this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/setup.yml).
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`deployment/staging/ansible/setup.yml`创建一个Ansible脚本（所谓的*playbook*），用于安装所有依赖项和配置服务。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/setup.yml)复制此文件的内容。
- en: Then create another Ansible script at `deployment/staging/ansible/deploy.yml`
    for dealing with the Django project. Copy the content for this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/deploy.yml).
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在`deployment/staging/ansible/deploy.yml`创建另一个Ansible脚本，用于处理Django项目。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/staging/ansible/deploy.yml)复制此文件的内容。
- en: 'And create a bash script that you can execute to start the deployment:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 并创建一个bash脚本，您可以执行以启动部署：
- en: '[PRE24]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Add execution permissions for the bash script and run it:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为bash脚本添加执行权限并运行它：
- en: '[PRE25]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'If the script fails with errors, it''s likely that the virtual machine needs
    to be rebooted for the changes to take effect. You can do that by connecting to
    the virtual machine via `ssh`, changing to the root user, and then rebooting as
    follows:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果脚本出现错误，很可能需要重新启动虚拟机才能生效。您可以通过`ssh`连接到虚拟机，切换到root用户，然后按以下步骤重新启动：
- en: '[PRE26]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'To browse the Django project directories, `ssh` to the virtual machine and
    change the user to `myproject` as follows:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要浏览Django项目目录，`ssh`到虚拟机并将用户更改为`myproject`
- en: '[PRE27]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: How it works...
  id: totrans-115
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: VirtualBox allows you to have multiple virtual machines on your computer with
    different operating systems. Vagrant is a tool allowing you to create those virtual
    machines and to download and install operating systems on them using a script.
    Ansible is a Python-based utility that reads instructions from a `.yaml` configuration
    file and executes them on a remote server.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox允许您在计算机上拥有多个具有不同操作系统的虚拟机。Vagrant是一个工具，允许您创建这些虚拟机，并使用脚本下载和安装操作系统。Ansible是一个基于Python的实用程序，它从`.yaml`配置文件中读取指令，并在远程服务器上执行它们。
- en: 'The deployment scripts we have just written do the following:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚编写的部署脚本执行以下操作：
- en: Create a virtual machine in VirtualBox and install Ubuntu 18 there
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VirtualBox中创建一个虚拟机并安装Ubuntu 18
- en: Assign the IP of `192.168.50.5` to the virtual machine
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将虚拟机的IP分配为`192.168.50.5`
- en: Set a hostname for the virtual machine
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为虚拟机设置主机名
- en: Upgrade the Linux packages
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Linux软件包
- en: Set the localization settings for the server
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为服务器设置本地化设置
- en: Install all Linux dependencies, including Python, Apache, PostgreSQL, Postfix,
    Memcached, and so on
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装所有Linux依赖项，包括Python，Apache，PostgreSQL，Postfix，Memcached等
- en: Create a Linux user and `home` directory for the Django project
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建一个Linux用户和`home`目录
- en: Create a virtual environment for the Django project
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建虚拟环境
- en: Create the PostgreSQL database user and database
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PostgreSQL数据库用户和数据库
- en: Configure the Apache web server
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Apache web服务器
- en: Install a self-signed SSL certificate
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装自签名SSL证书
- en: Configure the Memcached caching service
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Memcached缓存服务
- en: Configure the Postfix email server
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Postfix邮件服务器
- en: Clone the Django project repository
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆Django项目存储库
- en: Install Python dependencies
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Python依赖项
- en: Create the `secrets.json` file
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建`secrets.json`文件
- en: Migrate the database
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: Collect static files
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集静态文件
- en: Restart Apache
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动Apache
- en: Now the Django website will be accessible at `https://www.myproject.192.168.50.5.xip.io` and
    will show you a Hello, World! page. Note that some browsers, such as Chrome, might
    not want to open a website with a self-signed SSL certificate and will block it
    as a security measure.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Django网站将可以在`https://www.myproject.192.168.50.5.xip.io`上访问，并显示一个Hello, World!页面。请注意，一些浏览器，如Chrome，可能不希望打开具有自签名SSL证书的网站，并且会将其作为安全措施进行阻止。
- en: xip.io is a wildcard DNS service that points IP-specific subdomains to the IP
    and allows you to use that for SSL certificates or other website features that
    require a domain.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: xip.io是一个通配符DNS服务，将特定于IP的子域指向IP，并允许您将其用于SSL证书或其他需要域的网站功能。
- en: If you want to experiment with different configurations or additional commands,
    it is reasonable to do the changes incrementally in small steps. For some parts,
    you will need to test things out directly on the virtual machine before converting
    the tasks to Ansible instructions.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 如果要尝试不同的配置或附加命令，逐步进行小步骤的更改是合理的。对于某些部分，您需要在虚拟机上直接测试，然后再将任务转换为Ansible指令。
- en: For information how to use Ansible, check the official documentation at [https://docs.ansible.com/ansible/latest/index.html](https://docs.ansible.com/ansible/latest/index.html).
    It shows lots of useful instruction examples for most use cases.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何使用Ansible的信息，请查看官方文档[https://docs.ansible.com/ansible/latest/index.html](https://docs.ansible.com/ansible/latest/index.html)。它显示了大量有用的指令示例，适用于大多数用例。
- en: If you get any errors with any service, `ssh` to the virtual machine, switch
    to the root user, and inspect the logs of that service. Googling the error messages
    will get you closer to a working system.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 如果出现任何服务错误，`ssh`到虚拟机，切换到root用户，并检查该服务的日志。通过谷歌错误消息可以更接近一个可用的系统。
- en: 'To rebuild the virtual machine, use the following commands:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 要重建虚拟机，请使用以下命令：
- en: '[PRE28]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: See also
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Creating a virtual environment project file structure* recipe in [Chapter
    1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django 3.0*
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Django 3.0入门*中的*创建虚拟环境项目文件结构*的步骤'
- en: The *Handling project dependencies with pip* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Django 3.0入门*中的*使用pip处理项目依赖*的步骤'
- en: The *Setting up STATIC_URL dynamically for Git users* recipe in[Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)**,
    Getting Started with Django 3.0**
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)**, Django 3.0入门**中的*为Git用户动态设置STATIC_URL*的步骤'
- en: The *Deploying on Apache with mod_wsgi for the production environment* recipe
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在生产环境中使用Apache和mod_wsgi部署*的步骤'
- en: The *Deploying on Nginx and Gunicorn for the staging environment* recipe
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在暂存环境中使用Nginx和Gunicorn部署*的步骤'
- en: The *Deploying on Nginx and Gunicorn for the production environment* recipe
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在生产环境中使用Nginx和Gunicorn部署*的步骤'
- en: The *Creating and restoring PostgreSQL database backups* recipe in [Chapter
    13](498be2b9-4d46-4b50-ab7a-27c535792ae6.xhtml)*, Maintenance*
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第13章](498be2b9-4d46-4b50-ab7a-27c535792ae6.xhtml)*, 维护*中的*创建和恢复PostgreSQL数据库备份*的步骤'
- en: The *Setting up cron jobs for regular tasks* recipe in [Chapter 13](498be2b9-4d46-4b50-ab7a-27c535792ae6.xhtml)*,
    Maintenance*
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第13章](498be2b9-4d46-4b50-ab7a-27c535792ae6.xhtml)*, 维护*中的*为常规任务设置cron作业*的步骤'
- en: Deploying on Apache with mod_wsgi for the production environment
  id: totrans-153
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在生产环境中使用Apache和mod_wsgi部署
- en: Apache is one of the most popular web servers. It makes sense to deploy your
    Django project under Apache if you also have to run some services for server management,
    monitoring, analytics, blogging, e-commerce, and so on that require Apache on
    the same server.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: Apache是最流行的Web服务器之一。如果您还必须在同一服务器上运行一些需要Apache的服务器管理、监控、分析、博客、电子商务等服务，那么将Django项目部署在Apache下是有意义的。
- en: In this recipe, we will continue working from the previous recipe and will implement
    an Ansible script (a *playbook*) to set up a production environment on **Apache** with
    the **mod_wsgi** module.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将继续从上一个教程中继续工作，并实现一个Ansible脚本（*playbook*），以在**Apache**上使用**mod_wsgi**模块设置生产环境。
- en: Getting ready
  id: totrans-156
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: 'Make sure that your project configuration doesn''t raise warnings when you
    run the following:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在运行以下命令时，项目配置不会引发警告：
- en: '[PRE29]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Make sure you have the latest stable version of Ansible.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 确保您拥有最新的稳定版本的Ansible。
- en: Choose a server provider and create a dedicated server there with root access
    via SSH with private and public key authentication. My provider of choice is DigitalOcean
    ([https://www.digitalocean.com/](https://www.digitalocean.com/)), with which I
    created a dedicated server (Droplet) with Ubuntu 18\. I can connect to the server
    by its IP, `142.93.167.30`, using a new SSH private and public key-pair, `~/.ssh/id_rsa_django_cookbook` and `~/.ssh/id_rsa_django_cookbook.pub`
    respectively.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 选择一个服务器提供商，在那里创建一个具有通过SSH的根访问权限的专用服务器，并使用私钥和公钥进行身份验证。我选择的提供商是DigitalOcean（[https://www.digitalocean.com/](https://www.digitalocean.com/)），我在那里创建了一个带有Ubuntu
    18的专用服务器（Droplet）。我可以通过其IP`142.93.167.30`连接到服务器，使用新的SSH私钥和公钥对`~/.ssh/id_rsa_django_cookbook`和`~/.ssh/id_rsa_django_cookbook.pub`。
- en: 'Locally, we need to configure SSH connections by creating or modifying the
    `~/.ssh/config` file with the following content:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地，我们需要通过创建或修改`~/.ssh/config`文件来配置SSH连接，内容如下：
- en: '[PRE30]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Now, we should be able to connect to the dedicated server as the root user
    via SSH using this command:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们应该能够使用以下命令作为root用户通过SSH连接到专用服务器：
- en: '[PRE31]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: In your domain configuration, point the **DNS A record** of your domain to the
    IP address of the dedicated server. In our case, we will just be using `myproject.142.93.167.30.xip.io` to
    show how to set up the server with an SSL certificate for the Django website.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的域配置中，将您的域的**DNS A记录**指向专用服务器的IP地址。在我们的情况下，我们将只使用`myproject.142.93.167.30.xip.io`来展示如何为Django网站设置服务器的SSL证书。
- en: As mentioned before, xip.io is a wildcard DNS service that points IP-specific
    subdomains to the IP and allows you to use that for SSL certificates or other
    website features that require a domain.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，xip.io是一个通配符DNS服务，它将特定于IP的子域指向IP，并允许您将其用于需要域的SSL证书或其他网站功能。
- en: How to do it...
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'To create a deployment script for production, perform these steps:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 要为生产创建部署脚本，请执行以下步骤：
- en: Make sure to have the `deployment/ansible_templates` directory with the Jinja
    templates for service configuration that we created in the previous *Deploying
    on Apache with mod_wsgi for the staging environment* recipe.
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保具有我们在上一个*在Apache上使用mod_wsgi部署到暂存环境*教程中创建的用于服务配置的Jinja模板的`deployment/ansible_templates`目录。
- en: Create the `deployment/production` and `deployment/production/ansible` directories
    for the Ansible scripts.
  id: totrans-170
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Ansible脚本创建`deployment/production`和`deployment/production/ansible`目录。
- en: 'There, create a `hosts` directory with a `remote` file containing the following
    content:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里，创建一个包含以下内容的`hosts`目录和`remote`文件：
- en: '[PRE32]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Create a `vars.yml` file there with the variables that will be used in the
    installation scripts and Jinja templates for configurations:'
  id: totrans-173
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里创建一个`vars.yml`文件，其中包含将在安装脚本和Jinja模板中使用的变量：
- en: '[PRE33]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Also, we''ll need a `secrets.yml` file with secret values including passwords
    and authentication keys. First, create a `sample_secrets.yml` file that will have
    no sensitive information, but only the variable names, and then copy it to `secrets.yml` and
    fill in the secrets. The former file will be under version control whereas the
    latter will be ignored:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，我们还需要一个`secrets.yml`文件，其中包含密码和身份验证密钥等秘密值。首先创建一个`sample_secrets.yml`文件，其中不包含敏感信息，只有变量名称，然后将其复制到`secrets.yml`并填写秘密信息。前者将受版本控制，而后者将被忽略：
- en: '[PRE34]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: Now create an Ansible script (a *playbook*) at `deployment/production/ansible/setup.yml` for
    installing all the dependencies and configuring services. Copy the content for
    this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/setup.yml).
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`deployment/production/ansible/setup.yml`创建一个Ansible脚本（*playbook*），用于安装所有依赖项和配置服务。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/setup.yml)复制此文件的内容。
- en: Then create another Ansible script, `deployment/production/ansible/deploy.yml`, for
    dealing with the Django project. Copy the content for this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/deploy.yml).
  id: totrans-178
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后创建另一个Ansible脚本，`deployment/production/ansible/deploy.yml`，用于处理Django项目。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-apache/production/ansible/deploy.yml)复制此文件的内容。
- en: 'Create a bash script that you can execute to start the deployment:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个可以执行以开始部署的bash脚本：
- en: '[PRE35]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'Add execution permissions for the bash script and run it:'
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为bash脚本添加执行权限并运行它：
- en: '[PRE36]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'If the script fails with errors, it''s likely that the dedicated server needs
    to be rebooted for the changes to take effect. You can do that by connecting to
    the server via `ssh` and rebooting as follows:'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果脚本出现错误，则可能需要重新启动专用服务器才能生效。 您可以通过`ssh`连接到服务器并按以下方式重新启动：
- en: '[PRE37]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Create another bash script just for updating the Django project:'
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个仅用于更新Django项目的bash脚本：
- en: '[PRE38]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Add execution permissions for this bash script:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为此bash脚本添加执行权限：
- en: '[PRE39]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: How it works...
  id: totrans-189
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: 'An Ansible script (a *playbook*) is idempotent. It means that you can execute
    it multiple times and you will always get the same result: an up-to-date dedicated
    server with a Django website installed and running. If you have any technical
    hardware issues with the server and have backups of the database and media files,
    you can relatively quickly install the same configuration on another dedicated
    server.'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible脚本（*playbook*）是幂等的。 这意味着您可以多次执行它，您将始终获得相同的结果：安装并运行Django网站的最新专用服务器。 如果服务器出现任何技术硬件问题，并且具有数据库和媒体文件的备份，您可以相对快速地在另一个专用服务器上安装相同的配置。
- en: 'The production deployment scripts do these things:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 生产部署脚本执行以下操作：
- en: Set a hostname for the virtual machine
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为虚拟机设置主机名
- en: Upgrade the Linux packages
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Linux软件包
- en: Set the localization settings for the server
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为服务器设置本地化设置
- en: Install all Linux dependencies including Python, Apache, PostgreSQL, Postfix,
    Memcached, and so on
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装包括Python、Apache、PostgreSQL、Postfix、Memcached等在内的所有Linux依赖项
- en: Create a Linux user and `home` directory for the Django project
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建Linux用户和`home`目录
- en: Create a virtual environment for the Django project
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建虚拟环境
- en: Create the PostgreSQL database user and database
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PostgreSQL数据库用户和数据库
- en: Configure the Apache web server
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Apache Web服务器
- en: Install the *Let's Encrypt* SSL certificate
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装*Let's Encrypt* SSL证书
- en: Configure the Memcached caching service
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Memcached缓存服务
- en: Configure the Postfix email server
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Postfix电子邮件服务器
- en: Clone the Django project repository
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆Django项目存储库
- en: Install Python dependencies
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Python依赖项
- en: Create the `secrets.json` file
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建`secrets.json`文件
- en: Migrate the database
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: Collect static files
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集静态文件
- en: Restart Apache
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动Apache
- en: Run the `setup_remotely.sh` script when you need to install the services and
    dependencies for the first time. Later, you can use `deploy_remotely.sh` if you
    need to update just the Django project. As you can see, the installation is very
    similar to the one on the staging server, but, to keep it flexible and more tweakable,
    we saved it separately in the `deployment/production` directory.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次需要安装服务和依赖项时运行`setup_remotely.sh`脚本。 稍后，如果只需要更新Django项目，可以使用`deploy_remotely.sh`。
    如您所见，安装与暂存服务器上的安装非常相似，但是为了保持灵活性和更易调整，我们将其单独保存在`deployment/production`目录中。
- en: Theoretically, you could skip the staging environment altogether, but it is
    more practical to try out the deployment procedure in a virtual machine at first
    rather than experimenting with installing directly on a remote server.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，您可以完全跳过暂存环境，但最好在虚拟机中首先尝试部署过程，而不是直接在远程服务器上进行实验。
- en: See also
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Creating a virtual environment project file structure* recipe in [Chapter
    1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django 3.0*
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*中的*创建虚拟环境项目文件结构*食谱，开始使用Django
    3.0*'
- en: The *Handling project dependencies with pip* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*中的*使用pip处理项目依赖项*食谱，开始使用Django
    3.0*'
- en: The *Setting up STATIC_URL dynamically for Git users* recipe in[Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*中的*为Git用户动态设置STATIC_URL*食谱，开始使用Django
    3.0*'
- en: The *Deploying on Apache with mod_wsgi for the staging environment* recipe
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在暂存环境中使用Apache和mod_wsgi部署*食谱'
- en: The *Deploying on Nginx and Gunicorn for the staging environment* recipe
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在暂存环境中使用Nginx和Gunicorn部署*食谱'
- en: The *Deploying on Nginx and Gunicorn for the production environment* recipe
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在生产环境中使用Nginx和Gunicorn部署*食谱'
- en: The *Creating and restoring PostgreSQL database backups* recipe
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建和恢复PostgreSQL数据库备份*食谱'
- en: The *Setting up cron jobs for regular tasks* recipe
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为常规任务设置cron作业*食谱'
- en: Deploying on Nginx and Gunicorn for the staging environment
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在暂存环境中使用Nginx和Gunicorn进行部署
- en: Apache with mod_wsgi is a good and stable approach for deployment, but when
    you need high performance, it is recommended to use **Nginx** with **Gunicorn** to
    serve your Django website. Gunicorn is a Python server running WSGI scripts. Nginx
    is a web server that parses domain configurations and passes requests to Gunicorn.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 使用mod_wsgi的Apache是部署的一个良好且稳定的方法，但是当您需要高性能时，建议使用**Nginx**和**Gunicorn**来为您的Django网站提供服务。
    Gunicorn是运行WSGI脚本的Python服务器。 Nginx是一个Web服务器，它解析域配置并将请求传递给Gunicorn。
- en: In this recipe, I will show you how to create a script for deploying your project
    to a staging environment on a virtual machine on your computer. To do this, we
    are going to use **Ansible**, **Vagrant**, and **VirtualBox**. As mentioned before,
    there are lots of details to bear in mind and several days are usually necessary
    to develop an optimal deployment script similar to this.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个食谱中，我将向您展示如何创建一个脚本，将您的项目部署到计算机上的虚拟机的暂存环境中。 为此，我们将使用**Ansible**，**Vagrant**和**VirtualBox**。
    如前所述，需要牢记许多细节，通常需要几天时间来开发类似于此的最佳部署脚本。
- en: Getting ready
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Go through the deployment checklist and make sure that your configuration passes
    all security recommendations at [https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/](https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/).
    At least make sure that your project configuration doesn''t raise warnings when
    you run the following:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 通过部署清单，确保您的配置通过了[https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/]中的所有安全建议。至少确保在运行以下内容时，您的项目配置不会引发警告：
- en: '[PRE40]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Install the latest stable versions of Ansible, Vagrant, and VirtualBox. You
    can get them from the following official websites:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 安装最新稳定版本的Ansible、Vagrant和VirtualBox。您可以从以下官方网站获取它们：
- en: '**Ansible**: [https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html](https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html)'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ansible**：[https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html](https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html)'
- en: '**VirtualBox**: [https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VirtualBox**：[https://www.virtualbox.org/wiki/Downloads](https://www.virtualbox.org/wiki/Downloads)'
- en: '**Vagrant**: [https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vagrant**：[https://www.vagrantup.com/downloads.html](https://www.vagrantup.com/downloads.html)'
- en: 'On macOS X you can install all of them with **HomeBrew**:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 在macOS X上，您可以使用**HomeBrew**安装所有这些：
- en: '[PRE41]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: How to do it...
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'First of all, we''ll need to create some configuration templates for the different
    services used on the server. These will be used by both deployment procedures:
    staging and production.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要为服务器上使用的不同服务创建一些配置模板。这些将被部署程序使用：分段和生产。
- en: In your Django project, create a `deployment` directory and inside of it create
    an `ansible_templates` directory.
  id: totrans-234
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Django项目中，创建一个`deployment`目录，并在其中创建一个`ansible_templates`目录。
- en: 'Create a Jinja template file for time zone configuration:'
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为时区配置创建一个Jinja模板文件：
- en: '[PRE42]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Create a Jinja template file for Nginx domain configuration before setting
    the SSL certificates:'
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置SSL证书之前，为Nginx域配置创建一个Jinja模板文件：
- en: '[PRE43]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Create a Jinja template file at `deployment/ansible_templates/nginx.j2` for
    our Nginx domain configuration, including the SSL certificates. For this file,
    copy the content from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/ansible_templates/nginx.j2](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/ansible_templates/nginx.j2).
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`deployment/ansible_templates/nginx.j2`中为我们的Nginx域配置创建一个Jinja模板文件，包括SSL证书。对于此文件，请从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/ansible_templates/nginx.j2]复制内容。
- en: 'Create a template for the Gunicorn service configuration:'
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Gunicorn服务配置创建一个模板：
- en: '[PRE44]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Create a template for the PostgreSQL configuration file at `deployment/ansible_templates/postgresql.j2` with
    content from [https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample](https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample).
    Later you can tweak the configuration in this file.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`deployment/ansible_templates/postgresql.j2`中为PostgreSQL配置文件创建一个模板，其中包含来自[https://github.com/postgres/postgres/blob/REL_10_STABLE/src/backend/utils/misc/postgresql.conf.sample]的内容。稍后您可以在此文件中调整配置。
- en: 'Create a template for the PostgreSQL permissions configuration file (currently,
    it is very permissive, but you can tweak it later according to your needs):'
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为PostgreSQL权限配置文件创建一个模板（当前非常宽松，但您可以根据需要稍后进行调整）：
- en: '[PRE45]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Create a template for the Postfix email server configuration:'
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Postfix邮件服务器配置创建一个模板：
- en: '[PRE46]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'Create a template for the email forwarding configuration:'
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为电子邮件转发配置创建一个模板：
- en: '[PRE47]'
  id: totrans-248
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Create a template for the `memcached` configuration:'
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为`memcached`配置创建一个模板：
- en: '[PRE48]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Finally, create a Jinja template for the `secrets.json` file:'
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，为`secrets.json`文件创建一个Jinja模板：
- en: '[PRE49]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Now let''s work on the Vagrant and Ansible scripts specific to the staging
    environment:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来处理针对分段环境的Vagrant和Ansible脚本：
- en: 'In the `.gitignore` file, add the following lines to ignore some Vagrant- and
    Ansible-specific files:'
  id: totrans-254
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`.gitignore`文件中，添加以下行以忽略一些与Vagrant和Ansible特定的文件：
- en: '[PRE50]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: Create the `deployment/staging` and `deployment/staging/ansible` directories.
  id: totrans-256
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建`deployment/staging`和`deployment/staging/ansible`目录。
- en: 'In the `deployment/staging/ansible` directory, create a `Vagrantfile` file
    with the following script to set up a virtual machine with Ubuntu 18 and run the
    Ansible script in it:'
  id: totrans-257
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`deployment/staging/ansible`目录中，创建一个`Vagrantfile`文件，其中包含以下脚本，以在其中设置一个带有Ubuntu
    18的虚拟机并在其中运行Ansible脚本：
- en: '[PRE51]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Create a `hosts` directory with a `vagrant` file containing the following content:'
  id: totrans-259
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`hosts`目录，其中包含一个`vagrant`文件，其中包含以下内容：
- en: '[PRE52]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: 'Create a `vars.yml` file there with the variables that will be used in the
    installation scripts and Jinja templates for configurations:'
  id: totrans-261
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里创建一个`vars.yml`文件，其中包含将在安装脚本和Jinja模板中使用的变量：
- en: '[PRE53]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'We''ll also need a `secrets.yml` file containing secret values, such as passwords
    and authentication keys. First, create a `sample_secrets.yml` file that will have
    no sensitive information, but only the variable names, and then copy it to `secrets.yml` and
    fill in the secrets. The former file will be under version control whereas the
    latter will be ignored:'
  id: totrans-263
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要一个包含秘密值的`secrets.yml`文件，例如密码和身份验证密钥。首先，创建一个`sample_secrets.yml`文件，其中不包含敏感信息，而只包含变量名称，然后将其复制到`secrets.yml`并填写秘密信息。前者将受版本控制，而后者将被忽略：
- en: '[PRE54]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: Now create an Ansible script (a *playbook*) at `deployment/staging/ansible/setup.yml` for
    installing all the dependencies and configuring services. Copy the content for
    this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/setup.yml).
  id: totrans-265
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在`deployment/staging/ansible/setup.yml`创建一个Ansible脚本（*playbook*）以安装所有依赖项并配置服务。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/setup.yml)复制此文件的内容。
- en: Then create another Ansible script at `deployment/staging/ansible/deploy.yml` for
    dealing with the Django project. Copy the content for this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/deploy.yml).
  id: totrans-266
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在`deployment/staging/ansible/deploy.yml`创建另一个Ansible脚本以处理Django项目。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/staging/ansible/deploy.yml)复制此文件的内容。
- en: 'And create a bash script that you can execute to start the deployment:'
  id: totrans-267
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个bash脚本，您可以执行以开始部署：
- en: '[PRE55]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: 'Add execution permissions for the bash script and run it:'
  id: totrans-269
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为bash脚本添加执行权限并运行它：
- en: '[PRE56]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'If the script fails with errors, it''s likely that the virtual machine needs
    to be rebooted for the changes to take effect. You can do that by connecting to
    the virtual machine via `ssh`, changing to the root user, and then rebooting as
    follows:'
  id: totrans-271
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果脚本出现错误，则可能需要重新启动虚拟机才能生效。您可以通过`ssh`连接到虚拟机，切换到root用户，然后按以下步骤重新启动：
- en: '[PRE57]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'To browse the Django project directories, `ssh` to the virtual machine and
    change the user to `myproject` as follows:'
  id: totrans-273
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览Django项目目录，`ssh`到虚拟机并将用户更改为`myproject`如下：
- en: '[PRE58]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: How it works...
  id: totrans-275
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: VirtualBox allows you to have multiple virtual machines on your computer with
    different operating systems. Vagrant is a tool that creates those virtual machines
    and lets you download and install operating systems on them. Ansible is a Python-based
    utility that reads instructions from a `.yaml` configuration file and executes
    them on a remote server.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: VirtualBox允许您在计算机上拥有具有不同操作系统的多个虚拟机。Vagrant是一个工具，它创建这些虚拟机，并允许您下载和安装操作系统。Ansible是一个基于Python的实用程序，它从`.yaml`配置文件中读取指令，并在远程服务器上执行它们。
- en: 'The deployment scripts we have just written do these things:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚编写的部署脚本执行以下操作：
- en: Create a virtual machine in a VirtualBox and installs Ubuntu 18 there
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在VirtualBox中创建一个虚拟机并安装Ubuntu 18
- en: Assign an IP of `192.168.50.5` to the virtual machine
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为虚拟机分配IP`192.168.50.5`
- en: Set a hostname for the virtual machine
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为虚拟机设置主机名
- en: Upgrade the Linux packages
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Linux软件包
- en: Set localization settings for the server
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为服务器设置本地化设置
- en: Install all Linux dependencies, including Python, Nginx, PostgreSQL, Postfix,
    Memcached, and so on
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装所有Linux依赖项，包括Python、Nginx、PostgreSQL、Postfix、Memcached等
- en: Create a Linux user and `home` directory for the Django project
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建一个Linux用户和`home`目录
- en: Create a virtual environment for the Django project
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建一个虚拟环境
- en: Create the PostgreSQL database user and database
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PostgreSQL数据库用户和数据库
- en: Configure the Nginx web server
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Nginx Web服务器
- en: Install the self-signed SSL certificate
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装自签名SSL证书
- en: Configure the Memcached caching service
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Memcached缓存服务
- en: Configure the Postfix email server
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Postfix邮件服务器
- en: Clone the Django project repository
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆Django项目存储库
- en: Install Python dependencies
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Python依赖项
- en: Set up Gunicorn
  id: totrans-293
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Gunicorn
- en: Create the `secrets.json` file
  id: totrans-294
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建`secrets.json`文件
- en: Migrate the database
  id: totrans-295
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: Collect static files
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集静态文件
- en: Restart Nginx
  id: totrans-297
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动Nginx
- en: Now the Django website will be accessible at `https://www.myproject.192.168.50.5.xip.io` and
    will show you a Hello, World! page. Note that some browsers including Chrome might
    not want to open a website with a self-signed SSL certificate and will block it
    as a security measure.
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Django网站将可以在`https://www.myproject.192.168.50.5.xip.io`访问，并显示一个Hello, World!页面。请注意，包括Chrome在内的一些浏览器可能不希望打开具有自签名SSL证书的网站，并将其作为安全措施阻止。
- en: xip.io is a wildcard DNS service that points IP-specific subdomains to the IP
    and allows you to use that for SSL certificates or other website features that
    require a domain.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: xip.io是一个通配符DNS服务，将IP特定子域指向IP，并允许您用于SSL证书或其他需要域的网站功能。
- en: If you want to experiment with different configurations or additional commands,
    it is reasonable to do the changes incrementally in small steps. For some parts,
    you will need to test things out directly on the virtual machine before converting
    the tasks to Ansible instructions.
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想尝试不同的配置或附加命令，逐步以小步骤进行更改是合理的。对于某些部分，您需要在虚拟机上直接测试，然后再将任务转换为Ansible指令。
- en: For information about how to use Ansible, check the official documentation at [https://docs.ansible.com/ansible/latest/index.html](https://docs.ansible.com/ansible/latest/index.html).
    It shows lots of useful instruction examples for most use cases.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 有关如何使用Ansible的信息，请查看官方文档[https://docs.ansible.com/ansible/latest/index.html](https://docs.ansible.com/ansible/latest/index.html)。它显示了大多数用例的许多有用的指令示例。
- en: If you get any errors with any service, `ssh` to the virtual machine, switch
    to the root user, and inspect the logs of that service. Googling the error messages
    will get you closer to a working system.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在任何服务中遇到任何错误，请`ssh`到虚拟机，切换到root用户，并检查该服务的日志。谷歌错误消息将使您更接近一个可用的系统。
- en: 'To rebuild the virtual machine, use the following commands:'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 要重建虚拟机，请使用以下命令：
- en: '[PRE59]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: See also
  id: totrans-305
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Creating a virtual environment project file structure* recipe in [Chapter
    1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django 3.0*
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建虚拟环境项目文件结构*配方在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*，使用Django
    3.0入门*'
- en: The *Handling project dependencies with pip* recipe in[Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用pip处理项目依赖关系*配方在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*，使用Django
    3.0入门*'
- en: The *Setting up STATIC_URL dynamically for Git users* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)**,
    Getting Started with Django 3.0**
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为Git用户动态设置STATIC_URL*配方在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*，使用Django
    3.0入门*'
- en: The *Deploying on Apache with mod_wsgi for the staging environment* recipe
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Apache上使用mod_wsgi部署用于暂存环境*配方'
- en: The *Deploying on Apache with mod_wsgi for the production environment* recipe
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Apache上使用mod_wsgi部署用于生产环境*配方'
- en: The *Deploying on Nginx and Gunicorn for the production environment* recipe
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在生产环境上使用Nginx和Gunicorn部署*配方'
- en: The *Creating and restoring PostgreSQL database backups* recipe
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建和恢复PostgreSQL数据库备份*配方'
- en: The *Setting up cron jobs for regular tasks* recipe
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为常规任务设置cron作业*配方'
- en: Deploying on Nginx and Gunicorn for the production environment
  id: totrans-314
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在生产环境中使用Nginx和Gunicorn部署
- en: In this recipe, we will continue working from the previous recipe and will implement
    an **Ansible** script (playbook) to set up a production environment with **Nginx** and **Gunicorn**.
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个配方中，我们将继续从上一个配方中工作，并实现一个**Ansible**脚本（playbook）来设置一个带有**Nginx**和**Gunicorn**的生产环境。
- en: Getting ready
  id: totrans-316
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'Check that your project configuration doesn''t raise warnings when you run
    the following:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 检查您的项目配置是否在运行以下命令时不会引发警告：
- en: '[PRE60]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: Make sure to have the latest stable version of Ansible.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 确保使用最新的稳定版本的Ansible。
- en: Choose a server provider and create a dedicated server there with root access
    via `ssh` by private and public key authentication. My provider of choice is DigitalOcean
    ([https://www.digitalocean.com/](https://www.digitalocean.com/)). At DigitalOcean
    control panel, I created a dedicated server (Droplet) with Ubuntu 18\. I can connect
    to the server by its IP of `46.101.136.102` using a new SSH private and public
    key pair, `~/.ssh/id_rsa_django_cookbook` and `~/.ssh/id_rsa_django_cookbook.pub`
    respectively.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 选择服务器提供商，并通过私钥和公钥认证创建具有`ssh`根访问权限的专用服务器。我选择的提供商是DigitalOcean ([https://www.digitalocean.com/](https://www.digitalocean.com/))。在DigitalOcean控制面板上，我创建了一个带有Ubuntu
    18的专用服务器（Droplet）。我可以通过其IP `46.101.136.102`使用新的SSH私钥和公钥对`~/.ssh/id_rsa_django_cookbook`和`~/.ssh/id_rsa_django_cookbook.pub`连接到服务器。
- en: 'Locally, we need to configure SSH connections by creating or modifying a `~/.ssh/config` file with
    the following content:'
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 在本地，我们需要通过创建或修改`~/.ssh/config`文件来配置SSH连接，内容如下：
- en: '[PRE61]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: 'Now we should be able to connect to the dedicated server as the root user via
    `ssh` using this command:'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们应该能够使用以下命令作为root用户通过`ssh`连接到专用服务器：
- en: '[PRE62]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: In your domain configuration, point the **DNS A record** of your domain to the
    IP address of the dedicated server. In our case, we will just be using `myproject.46.101.136.102.xip.io` to
    show how to set up the server with an SSL certificate for the Django website.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的域配置中，将您的域的**DNS A记录**指向专用服务器的IP地址。在我们的情况下，我们将只使用`myproject.46.101.136.102.xip.io`来演示如何为Django网站设置服务器的SSL证书。
- en: How to do it...
  id: totrans-326
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '如何做... '
- en: 'To create a deployment script for production, perform these steps:'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 要为生产创建部署脚本，请执行以下步骤：
- en: Make sure to have a `deployment/ansible_templates` directory with the Jinja
    templates for service configuration that we created in the previous *Deploying
    on Nginx with Gunicorn for the staging environment* recipe.
  id: totrans-328
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保有一个`deployment/ansible_templates`目录，其中包含我们在前一篇*在暂存环境中使用Nginx和Gunicorn部署*配方中创建的用于服务配置的Jinja模板。
- en: Create the `deployment/production` and `deployment/production/ansible` directories
    for the Ansible scripts.
  id: totrans-329
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为Ansible脚本创建`deployment/production`和`deployment/production/ansible`目录。
- en: 'Create a `hosts` directory with a `remote` file containing the following content:'
  id: totrans-330
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`hosts`目录，其中包含一个包含以下内容的`remote`文件：
- en: '[PRE63]'
  id: totrans-331
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: 'Create a `vars.yml` file there with the variables that will be used in the
    installation scripts and Jinja templates for configurations:'
  id: totrans-332
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在那里创建一个`vars.yml`文件，其中包含将在安装脚本和Jinja模板中使用的变量：
- en: '[PRE64]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: 'We''ll also need a `secrets.yml` file with secret values such as passwords
    and authentication keys. First, create a `sample_secrets.yml` file that will have
    no sensitive information, but only the variable names, and then copy it to `secrets.yml` and
    fill in the secrets. The former file will be under version control, whereas the
    latter will be ignored:'
  id: totrans-334
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还需要一个`secrets.yml`文件，其中包含诸如密码和身份验证密钥之类的秘密值。首先，创建一个`sample_secrets.yml`文件，其中不包含敏感信息，而只包含变量名称，然后将其复制到`secrets.yml`并填写秘密信息。前者将受版本控制，而后者将被忽略：
- en: '[PRE65]'
  id: totrans-335
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: Now create an Ansible script (a *playbook*) at `deployment/production/ansible/setup.yml` for
    installing all the dependencies and configuring services. Copy the contents for
    this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/setup.yml).
  id: totrans-336
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在`deployment/production/ansible/setup.yml`创建一个Ansible脚本（*playbook*）以安装所有依赖项并配置服务。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/setup.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/setup.yml)复制此文件的内容。
- en: Then create another Ansible script at `deployment/production/ansible/deploy.yml` for
    dealing with the Django project. Copy the contents for this file from [https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/deploy.yml).
  id: totrans-337
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在`deployment/production/ansible/deploy.yml`创建另一个Ansible脚本以处理Django项目。从[https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/deploy.yml](https://raw.githubusercontent.com/PacktPublishing/Django-3-Web-Development-Cookbook-Fourth-Edition/master/ch12/myproject_virtualenv/src/django-myproject/deployment-nginx/production/ansible/deploy.yml)复制此文件的内容。
- en: 'Create a bash script that you can execute to start the deployment:'
  id: totrans-338
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个bash脚本，您可以执行以开始部署：
- en: '[PRE66]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: 'Add execution permissions for the bash script and run it:'
  id: totrans-340
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为bash脚本添加执行权限并运行它：
- en: '[PRE67]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: 'If the script fails with errors, it''s likely that the dedicated server needs
    to be rebooted for the changes to take effect. You can do that by connecting to
    the server via `ssh` and rebooting as follows:'
  id: totrans-342
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果脚本出现错误，很可能是专用服务器需要重新启动才能生效。您可以通过`ssh`连接到服务器并按以下方式重新启动来执行此操作：
- en: '[PRE68]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: 'Create another bash script just for updating the Django project:'
  id: totrans-344
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建另一个仅用于更新Django项目的bash脚本：
- en: '[PRE69]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: 'Add execution permissions for the bash script:'
  id: totrans-346
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为bash脚本添加执行权限：
- en: '[PRE70]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: How it works...
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: An Ansible script (a *playbook*) is idempotent. It means that you can execute
    it multiple times and you will always get the same results, an up-to-date dedicated
    server with Django website installed and running. If you have any technical hardware
    issues with the server and have backups of the database and media files, you can
    relatively quickly install the same configuration on another dedicated server.
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: Ansible脚本（*playbook*）是幂等的。这意味着您可以多次执行它，您将始终获得相同的结果，即安装并运行Django网站的最新专用服务器。如果服务器出现任何技术硬件问题，并且有数据库和媒体文件的备份，您可以相对快速地在另一个专用服务器上安装相同的配置。
- en: 'The production deployment scripts do these things:'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 生产部署脚本执行以下操作：
- en: Set a hostname for the virtual machine
  id: totrans-351
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为虚拟机设置主机名
- en: Upgrade the Linux packages
  id: totrans-352
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 升级Linux软件包
- en: Set the localization settings for the server
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为服务器设置本地化设置
- en: Install all Linux dependencies such as Python, Nginx, PostgreSQL, Postfix, Memcached,
    and so on
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装所有Linux依赖项，如Python、Nginx、PostgreSQL、Postfix、Memcached等
- en: Create a Linux user and `home` directory for the Django projec
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建Linux用户和`home`目录
- en: Create a virtual environment for the Django project
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为Django项目创建虚拟环境
- en: Create the PostgreSQL database user and database
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建PostgreSQL数据库用户和数据库
- en: Configure the Nginx web server
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Nginx Web服务器
- en: Install the *Let's Encrypt* SSL certificate
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装*Let's Encrypt* SSL证书
- en: Configure the Memcached caching service
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Memcached缓存服务
- en: Configure the Postfix email server
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置Postfix邮件服务器
- en: Clone the Django project repository
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆Django项目存储库
- en: Install Python dependencies
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装Python依赖项
- en: Set up Gunicorn
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置Gunicorn
- en: Create the `secrets.json` file
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建`secrets.json`文件
- en: Migrate the database
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迁移数据库
- en: Collect static files
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 收集静态文件
- en: Restart Nginx
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新启动Nginx
- en: As you can see, the installation is very similar to the one on the staging server,
    but, to keep it flexible and more tweakable, we saved it separately in the `deployment/production` directory.
  id: totrans-369
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，安装与暂存服务器上的安装非常相似，但是为了保持灵活性和更易调整，我们将其分别保存在`deployment/production`目录中。
- en: Theoretically, you could skip the staging environment altogether, but it is
    practical to try out the deployment procedure in a virtual machine rather than
    experimenting with installing directly on a remote server.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 理论上，您可以完全跳过暂存环境，但是在虚拟机中尝试部署过程比直接在远程服务器上进行实验更实际。
- en: See also
  id: totrans-371
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: The *Creating a virtual environment project file structure* recipe in [Chapter
    1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*, Getting Started with Django 3.0*
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*《使用Django 3.0入门》中的*创建虚拟环境项目文件结构*配方'
- en: The *Handling project dependencies with pip* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*《使用Django 3.0入门》中的*使用pip处理项目依赖项*配方'
- en: The *Setting up STATIC_URL dynamically for Git users* recipe in [Chapter 1](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*,
    Getting Started with Django 3.0*
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在[第1章](87d1a2a0-31bb-4c77-ab38-98b738f55fa1.xhtml)*《使用Django 3.0入门》中的*为Git用户动态设置STATIC_URL*配方'
- en: The *Deploying on Apache with mod_wsgi for the staging environment* recipe
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Apache上使用mod_wsgi部署暂存环境*配方'
- en: The *Deploying on Apache with mod_wsgi for the production environment* recipe
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在生产环境中使用Apache和mod_wsgi部署*配方'
- en: The *Deploying on Nginx and Gunicorn for the staging environment* recipe
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*在Nginx和Gunicorn上部署暂存环境*配方'
- en: The *Creating and restoring PostgreSQL database backups* recipe
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*创建和恢复PostgreSQL数据库备份*配方'
- en: The *Setting up cron jobs for regular tasks* recipe
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*为常规任务设置cron作业*配方'
