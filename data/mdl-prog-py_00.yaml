- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Modular programming is a way of organizing your program's source code. By organizing
    your code into modules (Python source files) and packages (collections of modules),
    and then importing those modules and packages into your program, you can keep
    your programs logically organized and keep potential problems to a minimum.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 模块化编程是一种组织程序源代码的方式。通过将代码组织成模块（Python源文件）和包（模块集合），然后将这些模块和包导入到程序中，您可以保持程序的逻辑组织，并将潜在问题降至最低。
- en: As your program grows and changes, you will often have to rewrite or expand
    certain parts of your code. Modular programming techniques help to manage these
    changes, minimizing side-effects, and keeping your code under control.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 随着程序的增长和变化，您经常需要重写或扩展代码的某些部分。模块化编程技术有助于管理这些变化，最小化副作用，并控制代码。
- en: As you work with modular programming techniques, you will learn a number of
    common patterns for using modules and packages, including the divide and conquer
    approach to programming, the use of abstraction and encapsulation, and the idea
    of writing extensible modules.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用模块化编程技术时，您将学习一些常见的使用模块和包的模式，包括编程的分而治之方法，抽象和封装的使用，以及编写可扩展模块的概念。
- en: Modular programming techniques are also a great way of sharing your code, either
    by making it available for other people to use or by reusing your code in another
    program. Using popular tools such as GitHub and the Python Package Index, you
    will learn how to publish your code, as well as use code written by other people.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 模块化编程技术也是共享代码的好方法，可以通过使其可供他人使用或在另一个程序中重用您的代码。使用流行工具如GitHub和Python包索引，您将学习如何发布您的代码，以及使用其他人编写的代码。
- en: Putting all these techniques together, you will learn how apply "modular thinking"
    to create better programs. You will see how modules can be used to deal with complexity
    and change in a large program and how modular programming really is the foundation
    of good programming technique.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有这些技术结合起来，您将学习如何应用“模块化思维”来创建更好的程序。您将看到模块如何用于处理大型程序中的复杂性和变化，以及模块化编程实际上是良好编程技术的基础。
- en: By the end of the book, you will have an excellent understanding of how modules
    and packages work in Python and how to use them to create high-quality and robust
    software that can be shared with others.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书结束时，您将对Python中的模块和包的工作原理有很好的理解，并且知道如何使用它们来创建高质量和健壮的软件，可以与他人共享。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](ch01.html "Chapter 1. Introducing Modular Programming"), *Introducing
    Modular Programming*, looks at the ways you can use Python modules and packages
    to help organize your programs, why it is important to use modular techniques,
    and how modular programming helps you to deal with the ongoing process of programming.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](ch01.html "第1章。介绍模块化编程")，“介绍模块化编程”，探讨了您可以使用Python模块和包来帮助组织程序的方式，为什么使用模块化技术很重要，以及模块化编程如何帮助您处理持续的编程过程。'
- en: '[Chapter 2](ch02.html "Chapter 2. Writing Your First Modular Program"), *Writing
    Your First Modular Program*, introduces the *divide and conquer* approach to programming
    and applies this technique to the process of building an inventory control system
    based on modular programming principles.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](ch02.html "第2章。编写您的第一个模块化程序")，“编写您的第一个模块化程序”，介绍了编程的“分而治之”方法，并将此技术应用于基于模块化编程原则构建库存控制系统的过程。'
- en: '[Chapter 3](ch03.html "Chapter 3. Using Modules and Packages"), *Using Modules
    and Packages*, covers the nuts and bolts of modular programming using Python,
    including nested packages, package and module initialization techniques, relative
    imports, choosing what gets imported, and how to deal with circular references.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](ch03.html "第3章。使用模块和包")，“使用模块和包”，涵盖了使用Python进行模块化编程的基础知识，包括嵌套包，包和模块初始化技术，相对导入，选择导入内容，以及如何处理循环引用。'
- en: '[Chapter 4](ch04.html "Chapter 4. Using Modules for Real-World Programming"),
    *Using Modules for Real-World Programming*, uses the implementation of a chart-generation
    library to show how modular techniques help to deal with changing requirements
    in the best possible way.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](ch04.html "第4章。将模块用于实际编程")，“将模块用于实际编程”，使用图表生成库的实现来展示模块化技术如何以最佳方式处理不断变化的需求。'
- en: '[Chapter 5](ch05.html "Chapter 5. Working with Module Patterns"), *Working
    with Module Patterns*, looks at a number of standard patterns for working with
    modules and packages, including the divide and conquer technique, abstraction,
    encapsulation, wrappers, and how to write extensible modules using dynamic imports,
    plugins, and hooks.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](ch05.html "第5章。使用模块模式")，“使用模块模式”，探讨了一些与模块和包一起使用的标准模式，包括分而治之技术，抽象，封装，包装器，以及如何使用动态导入，插件和钩子编写可扩展模块。'
- en: '[Chapter 6](ch06.html "Chapter 6. Creating Reusable Modules"), *Creating Reusable
    Modules*, shows how to design and create modules and packages that are intended
    to be shared with other people.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ch06.html "第6章。创建可重用模块")，“创建可重用模块”，展示了如何设计和创建旨在与其他人共享的模块和包。'
- en: '[Chapter 7](ch07.html "Chapter 7. Advanced Module Techniques"), *Advanced Module
    Techniques*, looks at some of the more distinctive aspects of modular programming
    in Python, including optional and local imports, tweaking the module search path,
    "gotchas" to be aware of, how to use modules and packages for rapid application
    development, working with package globals, package configuration, and package
    data files.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](ch07.html "第7章。高级模块技术")，“高级模块技术”，探讨了Python中模块化编程的一些更独特的方面，包括可选和本地导入，调整模块搜索路径，“要注意的事项”，如何使用模块和包进行快速应用程序开发，处理包全局变量，包配置和包数据文件。'
- en: '[Chapter 8](ch08.html "Chapter 8. Testing and Deploying Modules"), *Testing
    and Deploying Modules*, examines the concept of unit testing, how to prepare your
    modules and packages for publication, how to upload and publish your work, and
    how to make use of modules and packages written by other people.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。测试和部署模块")，“测试和部署模块”探讨了单元测试的概念，如何准备您的模块和包以供发布，如何上传和发布您的工作，以及如何使用其他人编写的模块和包。'
- en: '[Chapter 9](ch09.html "Chapter 9. Modular Programming as a Foundation for Good
    Programming Technique"), *Modular Programming as a Foundation for Good Programming
    Technique*, shows how modular techniques help to deal with the ongoing process
    of programming by dealing with change and managing complexity, and how modular
    programming techniques help you to be a more effective programmer.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。作为良好编程技术基础的模块化编程")，“作为良好编程技术基础的模块化编程”展示了模块化技术如何帮助处理编程的持续过程，如何处理变化和管理复杂性，以及模块化编程技术如何帮助您成为更有效的程序员。'
- en: What you need for this book
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要什么来阅读本书
- en: All you need to follow through the examples in this book is a computer running
    any recent version of Python. While the examples all use Python 3, they can easily
    be adapted to work with Python 2 only a few changes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中跟随示例所需的只是运行任何最新版本的Python的计算机。虽然所有示例都使用Python 3，但它们可以很容易地适应Python 2，只需进行少量更改。
- en: Who this book is for
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is aimed at the beginner to intermediate level Python programmer who
    wishes to use modular programming techniques to create high-quality and well organized
    programs. While the reader must know the basics of Python, no prior knowledge
    of modular programming is required.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向初学者到中级水平的Python程序员，希望使用模块化编程技术创建高质量和组织良好的程序。读者必须了解Python的基础知识，但不需要先前的模块化编程知识。
- en: Conventions
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您会发现一些文本样式，用于区分不同类型的信息。以下是这些样式的一些示例以及它们的含义解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "
    This one-line program would be saved in a file on disk, typically named something
    like `hello.py` "'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄显示如下：“这个一行程序将被保存在磁盘上的一个文件中，通常命名为`hello.py`”
- en: 'A block of code is set as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关的行或项目会以粗体显示：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以这种方式出现在文本中：“单击**下一步**按钮会将您移至下一个屏幕。”'
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明显示在这样的框中。
- en: Tip
  id: totrans-33
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
