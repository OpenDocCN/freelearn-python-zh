- en: Chapter 10. Customizing the CRM Application
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章. 定制 CRM 应用程序
- en: In this final chapter, we will add functionality to our framework to allow for
    some finishing touches.
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在本章的最后，我们将向我们的框架添加功能，以便进行一些收尾工作。
- en: 'Specifically, we will see:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我们将看到：
- en: What is needed to enhance the user interface to use the sort and filter capabilities
    in the framework
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要什么来增强用户界面，以便在框架中使用排序和筛选功能
- en: How we can provide the end user with the means to customize an application without
    the need to program
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们如何为最终用户提供自定义应用程序的手段，而无需编程
- en: How to use these customizations to enhance the display of items and list of
    items
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用这些自定义来增强项目和项目列表的显示
- en: How to enhance the stored information with information from external sources
    such as Google Maps
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用来自外部来源的信息，如 Google Maps，来增强存储的信息
- en: Time for action sorting
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作时间排序
- en: When we implemented the `Browse` class in [Chapter 8](ch08.html "Chapter 8. Managing
    Customer Relations"), *Managing Customer Relations*, together with the underlying
    functionality in the `listids()` method of the `AbstractEntity` class, we already
    took care of sorting and filtering.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在第8章（[Chapter 8](ch08.html "第8章. 管理客户关系"））中实现 `Browse` 类，以及 `AbstractEntity`
    类的 `listids()` 方法中的底层功能时，我们已经处理了排序和筛选。
- en: 'We did not yet allow for any user interaction to make it actually possible
    to sort the list of entities shown. What was missing was the JavaScript code and
    some CSS to make this happen. Take a look at the following screenshot and notice
    the small arrow icons next to some headers on top of the list of accounts:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有允许任何用户交互来使显示的实体列表可排序。所缺少的是实现这一功能的 JavaScript 代码和一些 CSS。看看下面的截图，注意列表顶部账户旁边的一些表头旁边的小箭头图标：
- en: '![Time for action sorting](img/3746_10_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间排序](img/3746_10_01.jpg)'
- en: You can try the sort options for yourself when you run `crm2.py`.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行 `crm2.py` 时，你可以亲自尝试排序选项。
- en: Clicking once on a column marked with the small double arrows will sort the
    list on that specific column in ascending order. The header will change its background
    color to indicate that the list is now sorted and the small icon will change into
    a single up arrow.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 点击带有小双箭头标记的列一次，将按该特定列的升序排序列表。表头将改变其背景颜色以指示列表现在已排序，小图标将变成一个单向上箭头。
- en: Clicking it again will sort the list in descending order and this will be indicated
    by a small icon of a downward pointing arrow. A final click will render the list
    of items unsorted, as clicking the reset button will (not shown).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 再次点击它将按降序排序列表，这将通过一个指向下的小箭头图标来表示。最后一次点击将使项目列表无序，就像点击重置按钮一样（未显示）。
- en: What just happened?
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'This sorting behavior is implemented by a few small parts:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这种排序行为是通过几个小部分实现的：
- en: jQuery click handlers associated with the table headers
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与表头关联的 jQuery 点击处理程序
- en: Some CSS to style those headers with suitable icons
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一些 CSS 代码来为这些表头添加合适的图标
- en: Minor changes to the Python code that produces the table to make it simpler
    to track the sorting state in the browser.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对生成表格的 Python 代码进行的一些小修改，以便在浏览器中更容易跟踪排序状态。
- en: First, let's see what has to be added to the JavaScript (the complete file is
    available as `browse.js):`
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们看看需要添加到 JavaScript 中的内容（完整的文件作为 `browse.js` 提供）：`
- en: '**Chapter10/browse.js**'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/browse.js**'
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Installing the click handlers is straightforward in itself, but what they have
    to accomplish is a little complicated.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 安装点击处理程序本身很简单，但它们需要完成的任务稍微复杂一些。
- en: The click handler must first determine which column will be used as the sort
    key. The element that is clicked on is available to the handler as `this` and
    this will give us access to a`<div>` element within the header that contains the
    column's name. This`<div>` element is not shown because its `display` attribute
    will be set to `none`. It is added because we need access to the column's canonical
    name. The`<th>` element itself contains just the display name of the column, which
    may be different from its canonical name.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 点击处理程序必须首先确定哪个列将用作排序键。被点击的元素作为 `this` 可用于处理程序，这将使我们能够访问包含列名称的 `<div>` 元素，该元素位于表头内。这个
    `<div>` 元素没有显示，因为它的 `display` 属性将被设置为 `none`。它是添加的，因为我们需要访问列的规范名称。`<th>` 元素本身只包含列的显示名称，这可能与规范名称不同。
- en: 'This sort key will have to be passed to the application server and to this
    end we will use the machinery already in place: if we trigger submission of the
    form with the navigation buttons and make sure the proper sort parameters are
    passed along, we''re almost there. How can this be accomplished?'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这个排序键必须传递给应用服务器，为此我们将使用现有的机制：如果我们通过导航按钮触发表单的提交并确保传递了正确的排序参数，我们几乎就完成了。这该如何实现呢？
- en: jQuery provides convenient methods to insert new HTML elements into the existing
    markup (highlighted). From the name of the column, we construct a suitable value
    by appending either `asc` or `desc` to it, separated by a comma and use this as
    the value of a new hidden input element with a name of `sortorder` and insert
    this into the first`<form>` element with the `append()` method. The first form
    in the page is the form element containing the navigation buttons.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: jQuery提供了方便的方法来将新的HTML元素插入到现有的标记中（突出显示）。从列名中，我们通过添加`asc`或`desc`来构造一个合适的值，用逗号分隔，并使用这个值作为具有`sortorder`名称的新隐藏输入元素的值，然后使用`append()`方法将其插入到第一个`<form>`元素中。页面中的第一个表单是包含导航按钮的表单元素。
- en: Because these same types of hidden`<input>` elements are used to maintain state
    when the user pages through the list of items, we first remove any`<input>` elements
    with a `name` attribute equal to `sortorder` to make sure these elements reflect
    the newly selected sort order and not any old one. The removal is accomplished
    by the aptly named `remove()` method.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些相同类型的隐藏`<input>`元素用于在用户翻页浏览项目列表时维护状态，我们首先删除任何具有`name`属性等于`sortorder`的`<input>`元素，以确保这些元素反映的是新选定的排序顺序，而不是任何旧的排序顺序。删除操作是通过名为`remove()`的方法完成的。
- en: The final step is to submit the form. We could trigger the submit event itself
    but because we have several buttons with a `type` attribute equal to `submit`,
    we have to be more specific.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是提交表单。我们可以直接触发提交事件，但由于我们有多个具有`type`属性等于`submit`的按钮，我们必须更加具体。
- en: It is not possible to trigger a `submit` event on a button, only on a form,
    but it is possible to trigger the `click` event on a button, thus mimicking the
    user interaction. Once the `click` event is triggered on the button with the `name`
    attribute of `first`, the form is submitted together with all its`<input>` elements,
    even hidden ones, including the new or replaced ones that indicate the sort order.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在按钮上无法触发`submit`事件，只能是在表单上，但可以在按钮上触发`click`事件，从而模拟用户交互。一旦在具有`name`属性为`first`的按钮上触发`click`事件，表单将连同所有其`<input>`元素一起提交，包括隐藏的元素，以及表示排序顺序的新增或替换的元素。
- en: The handler for a`<th>` element that is already sorted in ascending order and
    marked by a `sorted-asc` class is almost identical. The only change we make is
    that the value of the hidden`<input>` element with `name=sortorder` is the column
    name with a `,desc` suffix instead of an `,asc` suffix.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 对于已经按升序排序并带有`sorted-asc`类的`<th>`元素的处理器几乎相同。我们做的唯一改变是将具有`name=sortorder`的隐藏`<input>`元素的值改为带有`,`后缀的列名，而不是`asc`后缀。
- en: Clicking on the`<th>` element when it is already sorted in descending order
    will cycle back to showing the unsorted state, so this click handler is even simpler
    as it just triggers the click handler of the clear button, which will result in
    an unsorted list.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当`<th>`元素已经按降序排序时，点击它将循环回到显示未排序状态，因此这个点击处理器甚至更简单，它只是触发清除按钮的点击处理器，这将导致列表未排序。
- en: The changes in the `index()` method in the `Browse` class are as follows (full
    code available as `browse.py):`
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '`Browse`类中的`index()`方法的变化如下（完整代码可在`browse.py`中找到）：`'
- en: '**Chapter10/browse.py**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/browse.py**'
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The Python code in our application barely has to change to accommodate this
    way of interaction. We merely adorn the`<th>` element of a column with a class
    that indicates the state of sorting.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序中的Python代码几乎不需要改变，以适应这种交互方式。我们只是给列的`<th>`元素添加一个表示排序状态的类。
- en: It's either `notsorted, sorted-asc`, or `sorted-desc`. We also insert a`<div>`
    element to hold the true name of the column and an empty`<span>` element flagged
    with suitable jQuery UI icon classes to hold the icons that signal the sorting
    state (highlighted).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 它是`notsorted, sorted-asc`或`sorted-desc`之一。我们还插入一个`<div>`元素来保存列的真实名称，以及一个带有合适的jQuery
    UI图标类的空`<span>`元素来保存表示排序状态的图标（突出显示）。
- en: The `sortorder` list holds a number of tuples, each with the name of the column
    to sort as the first element and either `asc` or `desc` as the second element.
    This second element is used as the index into a dictionary that maps `asc` to
    `n` and `desc` to `s`, resulting in choosing either a `ui-icon-triangle-1-n` or
    a `ui-icon-triangle-1-s` class. Appending these classes together with a `ui-icon`
    class is all we need to let the jQuery UI stylesheets render our`<span>` element
    with a meaningful icon.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`sortorder` 列表包含多个元组，每个元组都有一个要排序的列的名称作为第一个元素，以及 `asc` 或 `desc` 作为第二个元素。第二个元素用作字典的索引，该字典将
    `asc` 映射到 `n`，将 `desc` 映射到 `s`，从而选择 `ui-icon-triangle-1-n` 或 `ui-icon-triangle-1-s`
    类。将这些类与 `ui-icon` 类一起附加，这就是我们需要让 jQuery UI 样式表渲染我们的 `<span>` 元素并带有有意义图标的全部。'
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Many arrow-like icons, available in jQuery UI, follow a naming pattern similar
    to those for the small triangles here. The final part indicates a compass direction
    (here `n` for north, or upward) and the number indicates how many arrowheads are
    depicted in the icon (here just one, but there are many double-headed variants).
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 许多类似箭头的图标，在 jQuery UI 中可用，遵循与这里的小三角形相似的命名模式。最后的部分表示一个罗盘方向（这里 `n` 表示北，或向上）和数字表示图标中描绘了多少个箭头（这里只有一个，但有许多双头变体）。
- en: 'The resulting HTML for a column named `time` that is currently sorted in ascending
    order, would look something like this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 对于当前按升序排序的名为 `time` 的列，生成的 HTML 可能看起来像这样：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Besides the icon, we add some additional styles to `base.css` to make the headers
    more visible:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 除了图标外，我们还在 `base.css` 中添加了一些额外的样式，使标题更易于识别：
- en: '**Chapter10/base.css**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/base.css**'
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The table headers themselves are merely styled with a light gray color, but
    floating the`<span>` element that will hold the icon to the right is important,
    otherwise it would move below the text in the column header instead of the side.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 表头本身只是用浅灰色进行了样式化，但将包含图标的 `<span>` 元素浮动到右侧是很重要的，否则它会在列标题的下方而不是旁边移动。
- en: Time for action filtering
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动作过滤时间
- en: 'Almost the same approach we used for sorting can be used for filtering as well,
    only this time it is not a single click on a column header that does the trick,
    but we must provide the user with a way to enter the filter values. Take a look
    at the following screenshot or filter the data yourself by running `crm2.py` again:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用于排序的几乎相同的方法也可以用于过滤，只是这一次不是点击列标题就能完成，我们必须为用户提供一种输入过滤值的方法。查看以下屏幕截图或通过再次运行 `crm2.py`
    来自己过滤数据：
- en: '![Time for action filtering](img/3746_10_03.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![动作过滤时间](img/3746_10_03.jpg)'
- en: If you insert values in any of the input fields below the columns in the table
    and click on the filter button (the one with the magnifying glass icon), the list
    of items to show is reduced to those items that match the filter values. Note
    that sorting and filtering may be combined and that clicking the clear button
    will remove both sorting and filtering settings.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将值插入到表格下方列的任何输入字段中，并点击过滤按钮（带有放大镜图标的按钮），要显示的项目列表将减少到与过滤值匹配的项目。请注意，排序和过滤可以组合使用，并且点击清除按钮将删除排序和过滤设置。
- en: What just happened?
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'Let''s have a look at the JavaScript code:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看 JavaScript 代码：
- en: '**Chapter10/browse.js**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/browse.js**'
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Most of the work is done in the click handler of the search button. When the
    search button is clicked, we have to construct hidden`<input>` elements in the
    first form with a `name` attribute equal to `pattern` because it is those hidden
    filter inputs that will be passed to the server as arguments to the action URL
    when we trigger a submit of the form.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分工作是在搜索按钮的点击处理程序中完成的。当点击搜索按钮时，我们必须在第一个表单中构建隐藏的 `<input>` 元素，其 `name` 属性等于
    `pattern`，因为正是这些隐藏的过滤输入将在我们触发表单提交时作为参数传递给动作 URL。
- en: Note the second argument to the jQuery function ($) that selects an`<input>`
    element (highlighted). Both the visible`<input>` elements provided for the user
    to enter pattern values and the hidden ones in the form containing the navigation
    buttons have the same `name` attribute (pattern). We do not want to remove the
    visible ones as they contain the pattern values we are interested in. Therefore,
    we restrict the selection to the context of the first form, which is passed as
    the second argument.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 注意jQuery函数（$）的第二个参数，它选择一个`<input>`元素（突出显示）。提供给用户输入模式值的所有可见`<input>`元素以及包含导航按钮的表单中的隐藏元素都具有相同的`name`属性（模式）。我们不希望删除可见的元素，因为它们包含我们感兴趣的模式值。因此，我们将选择限制在第一个表单的上下文中，该表单作为第二个参数传递。
- en: After this, we are left with just the visible`<input>` elements which we iterate
    over with the `.each()` method. We collect both, the value of the`<input>` element
    and the content of its next sibling, which will be a (hidden)`<span>` element
    containing the true name of the column to filter. Together, these are used to
    construct a new hidden`<input>` element that is appended to the form that will
    be submitted.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们只剩下可见的`<input>`元素，我们使用`.each()`方法遍历它们。我们收集`<input>`元素的价值及其下一个兄弟元素的内容，该兄弟元素将是一个包含要过滤的列的真实名称的（隐藏的）`<span>`元素。这些元素一起用于构建一个新隐藏的`<input>`元素，该元素将被附加到将要提交的表单中。
- en: After the elements are inserted, we submit this form by triggering the click
    handler of the submit button with the `name` attribute equal to `first`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在元素插入后，我们通过触发具有等于`first`属性的`name`属性的提交按钮的点击处理程序来提交此表单。
- en: '**Chapter10/browse.py**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/browse.py**'
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The only changes needed in the Python part of our web application are the insertion
    of suitable`<input>` elements that are initialized with the current pattern values
    to give a visible feedback to the user. The resulting HTML for a column that is
    currently filtered on the value ABC might look like this:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们网络应用程序的Python部分中，唯一需要更改的是插入适当的`<input>`元素，这些元素使用当前的模式值初始化，以向用户提供可见的反馈。当前过滤值为ABC的列的HTML结果可能如下所示：
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Customization
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制
- en: No matter how well designed and elaborate your application is, there is always
    more functionality that the user wants from it. Of course, with a proper framework
    in place and your code well documented, changes should not be a big problem, but
    on the other hand, you wouldn't want to restart an application just because some
    minor customizations are needed.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你的应用程序设计得多好、多么详尽，用户总是希望从中获得更多功能。当然，有了适当的框架和良好的代码文档，更改不应成为大问题，但另一方面，你也不想仅仅因为需要一些小的定制就重新启动应用程序。
- en: Many requests regarding an application will be concerned with the usability
    of the user interface, for example, different behavior of widgets or some additional
    features with regard to the information shown, like spell-checking entered text,
    finding stock market information related to a company shown, or the current exchange
    rate of a value on screen in a different currency. Quite a few companies including
    Microsoft, Yahoo!, and Google offer all sorts of free API's that may be used to
    enhance the display of values.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 许多关于应用程序的请求将关注用户界面的可用性，例如，小部件的不同行为或与显示信息相关的某些附加功能，如检查输入文本的拼写，查找与显示的公司相关的股票市场信息，或屏幕上某个价值的当前汇率以不同货币表示。包括微软、雅虎和谷歌在内的许多公司提供各种免费API，可用于增强值的显示。
- en: Time for action customizing entity displays
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制实体显示的行动时间
- en: 'Say we want to offer the end user the possibility to locate an address on Google
    Maps by simply clicking a button next to an address. Run `crmcustomize.py` and
    add a new address or edit an existing address. The edit/add screen will look similar
    to this:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想通过简单地点击地址旁边的按钮，让最终用户能够通过谷歌地图定位地址。运行`crmcustomize.py`并添加新地址或编辑现有地址。编辑/添加屏幕将类似于以下内容：
- en: '![Time for action customizing entity displays](img/3746_10_04.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![定制实体显示的行动时间](img/3746_10_04.jpg)'
- en: When you click on the **Map** button, a new window will open, showing a map
    of that address as long as Google Maps was able to find it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击**地图**按钮时，将打开一个新窗口，显示该地址的地图，只要谷歌地图能够找到它。
- en: 'This functionality was added by the end user without the need to restart the
    server. Notice that in the opening screen, we have a new menu, **Customize**.
    If that menu is selected, we get a familiar looking interface showing a list of
    customizations added for different entities. If we double-click the one for `Address`
    with the Google Maps description, we get an edit screen, as shown in the following
    illustration:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这种功能是由最终用户添加的，无需重新启动服务器。注意，在打开屏幕中，我们有一个新的菜单，**自定义**。如果选择该菜单，我们会看到一个熟悉的界面，显示为不同实体添加的自定义设置列表。如果我们双击带有Google
    Maps描述的`地址`，我们会得到一个编辑屏幕，如下面的插图所示：
- en: '![Time for action customizing entity displays](img/3746_10_05.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![操作时间：自定义实体显示](img/3746_10_05.jpg)'
- en: A quick glance will show that the customization itself is simply HTML mixed
    with some JavaScript that is added to the markup produced by the application each
    time we open an edit or add screen for an `Address` entity.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 快速浏览一下就会显示，这种自定义本身仅仅是HTML与一些JavaScript的混合，这些JavaScript是在每次我们为`地址`实体打开编辑或添加屏幕时添加到应用程序生成的标记中的。
- en: Note
  id: totrans-71
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: It might not always be a good idea to allow any end user to customize an application.
    You might want to restrict some or all of the customization options to a subset
    of end users. Role-based access control is then again a suitable way to administer
    privileges.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 允许任何最终用户自定义应用程序可能并不总是好主意。你可能希望将一些或所有自定义选项限制为最终用户的一个子集。基于角色的访问控制再次是一种管理权限的合适方式。
- en: What just happened?
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'Let''s first have a look at the customization itself to get a feel of what
    can be accomplished. The code consists of a few lines of HTML and an embedded
    piece of JavaScript:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先看看自定义本身，以了解可以完成什么。代码由几行HTML和一段嵌入的JavaScript组成：
- en: '**Chapter10/customization.html**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**Chapter10/customization.html**'
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Because our application itself relies on jQuery, any customization code may
    use this library as well, so after we have defined a suitable button, we add a
    click handler to this button (highlighted) that constructs a Google Maps URL from
    the values of several`<input>` elements that will be present on the edit or add
    page of an `Address`, notably `address, city`, and `country`. This URL is then
    passed the `window.open()` method to open a new screen or tab with the results
    of this query.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的应用程序本身依赖于jQuery，任何自定义代码都可以使用这个库，因此在我们定义了一个合适的按钮之后，我们添加了一个点击处理程序（突出显示）来从几个`<input>`元素的值构建一个Google
    Maps URL，这些元素将出现在`地址`的编辑或添加页面上，特别是`地址`、`城市`和`国家`。然后，这个URL通过`window.open()`方法传递，以打开一个新屏幕或标签页，显示此查询的结果。
- en: Note
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Even better results may be obtained when the Google Maps API is used see [http://code.google.com/intl/nl/apis/maps/documentation/javascript](http://code.google.com/intl/nl/apis/maps/documentation/javascript).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 Google Maps API 时，可能会获得更好的结果，请参阅[http://code.google.com/intl/nl/apis/maps/documentation/javascript](http://code.google.com/intl/nl/apis/maps/documentation/javascript)。
- en: What do we need to change in our framework to allow for this simple end user
    customization?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要在我们的框架中更改什么以允许这种简单的最终用户自定义？
- en: 'We need several related components to make this work:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要几个相关组件来使这个功能正常工作：
- en: The `Display` class needs to be adapted to produce the custom code suitable
    for the instance that is shown.
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Display`类需要被修改以生成适合显示实例的定制代码。'
- en: We need some way of storing the customization in the database together with
    the rest of the application.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要一种方法将自定义存储在数据库中，与应用程序的其他部分一起。
- en: We need to allow a way to edit these customizations.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们需要允许一种方式来编辑这些自定义设置。
- en: Let's look at these requirements in detail. The most important part is a way
    to store this information. Like we did for role-based access control, we can actually
    use our framework again; this time by defining a `custom` class. This `custom`
    class will create a `DisplayCustomization` class and provide access to it for
    all entities derived from the `AbstractEntity` class. The changes needed in the
    entity module are modest (the full code is available in `rbacentity.py):`
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们详细看看这些要求。最重要的部分是存储这些信息的方法。就像我们为基于角色的访问控制所做的那样，我们实际上可以再次使用我们的框架；这次是通过定义一个`custom`类。这个`custom`类将创建一个`DisplayCustomization`类，并为从`AbstractEntity`类派生的所有实体提供对其的访问。在实体模块中需要的更改是适度的（完整的代码可在`rbacentity.py`中找到）：
- en: '**Chapter10/rbacentity.py**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**Chapter10/rbacentity.py**'
- en: '[PRE8]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Now that we have access to this storage for customization, any application can
    use it, but it also has to provide a way to let the application user edit these
    customizations. This entails defining a `Browse` class and adding a link to provide
    access to it. This is how it was done in the `crmcustomize` application, shown
    in the example (relevant changes only, full code available in `crmcustomize.py):`
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '现在我们已经可以访问这个存储自定义功能的地方，任何应用程序都可以使用它，但同时也必须提供一个方式让应用程序用户编辑这些自定义功能。这涉及到定义一个`Browse`类并添加一个链接来提供访问。这是在`crmcustomize`应用程序中是如何实现的，如下例所示（仅显示相关更改，完整代码可在`crmcustomize.py`中找到）： '
- en: '**Chapter10/crmcustomize.py**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/crmcustomize.py**'
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The final step is to enhance the display module with the means to retrieve
    and deliver these customizations. This is done by adding a few lines to the end
    of the `index()` method, as shown:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是使用检索和传递这些自定义功能的方法来增强显示模块。这是通过在`index()`方法的末尾添加几行代码来完成的，如下所示：
- en: '**Chapter10/display.py**'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/display.py**'
- en: '[PRE10]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Retrieving is straightforward enough and we actually retrieve two bits of customization:
    one for the specific entity we are showing and one for the customization code
    that is relevant for all entities. The user can add such customization with a
    special entity name of * (a single asterisk character). By putting the general
    customizations first in the markup we deliver, it is possible to override anything
    that is provided for the general case with customizations for the specific entities.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 检索是相当直接的，我们实际上检索了两部分自定义功能：一部分是我们正在显示的特定实体，另一部分是对所有实体都相关的自定义代码。用户可以使用特殊实体名称*（单个星号字符）添加此类自定义。通过在提供的标记中首先放置一般自定义功能，我们可以覆盖为通用情况提供的任何内容，以特定实体的自定义功能来替代。
- en: There is a bit of trickery needed elsewhere in the code of the `Display` class,
    however. Because the customization code may consist of HTML, including`<script>`
    elements containing JavaScript and`<style>` elements containing CSS, we might
    run into trouble when we display the forms to edit the customization code as these
    forms are HTML themselves. We, therefore, need some way to escape this code to
    prevent the content of the input box from being interpreted as HTML.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在`Display`类的代码中还需要一些技巧。因为自定义代码可能包含HTML，包括包含JavaScript的`<script>`元素和包含CSS的`<style>`元素，当我们显示用于编辑自定义代码的表单时，这些表单本身就是HTML，我们可能会遇到麻烦。因此，我们需要某种方法来转义此代码，以防止输入框中的内容被解释为HTML。
- en: 'This is accomplished in the following way (the relevant changes to the `Attribute`
    class are shown):'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这是以以下方式实现的（以下是对`Attribute`类的相关更改）：
- en: '**Chapter10/rbacentity.py**'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/rbacentity.py**'
- en: '[PRE11]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `Attribute` class provided in the entity module is extended to take an extra
    `htmlescape` parameter. If we set this to `True`, we indicate that the contents
    of this attribute should be escaped prior to showing it in a page.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 实体模块中提供的`Attribute`类被扩展以接受额外的`htmlescape`参数。如果我们将其设置为`True`，则表示应在此属性显示在页面之前对其进行转义。
- en: 'The `MetaEntity` class will have to be extended as well to act upon these new
    features in the `Attribute` class:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`MetaEntity`类还需要扩展以在`Attribute`类的新功能上操作：'
- en: '**Chapter10/rbacentity.py**'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/rbacentity.py**'
- en: '[PRE12]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The `MetaEntity` class is changed to store any `htmlescape` attributes in the
    `htmlescape` class attribute, a dictionary indexed by the attribute name.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`MetaEntity`类被修改为将任何`htmlescape`属性存储在`htmlescape`类的属性中，这是一个按属性名称索引的字典。'
- en: 'At this point, we can create new entities with attributes marked for escape,
    but the `Display` class itself has to act on this information. We therefore add
    the following lines to the `index()` method of the `Display` class:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们可以创建带有标记为转义的属性的新实体，但`Display`类本身必须对此信息采取行动。因此，我们在`Display`类的`index()`方法中添加以下行：
- en: '**Chapter10/display.py**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/display.py**'
- en: '[PRE13]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In the `index()` method of the `Display` class, before constructing an`<input>`
    element we can now check this `htmlescape` dictionary to see if we should escape
    the value of the attribute, and if so, use the `escape()` function provided in
    Python's `xml.sax.saxutils` module to convert any characters that might interfere.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Display`类的`index()`方法中，在构建`<input>`元素之前，我们现在可以检查这个`htmlescape`字典，看看是否应该转义属性的值，如果是这样，就使用Python的`xml.sax.saxutils`模块中提供的`escape()`函数来转换可能干扰的任何字符。
- en: Note
  id: totrans-108
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**A note of caution:**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意事项：**'
- en: Allowing people to customize an application with HTML and JavaScript carries
    an inherent risk. When we developed a wiki application, we restricted the allowed
    input on pages by scrubbing the input of unwanted HTML. If you are serious about
    security (and you should be!), you have to think about what you will allow for
    customizations as well, especially to prevent cross-site scripting (XSS). Check,
    for example, [http://www.owasp.org/](http://www.owasp.org/) for more on this and
    other security subjects.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 允许人们使用HTML和JavaScript定制应用程序固有的风险。当我们开发wiki应用程序时，我们通过清除不想要的HTML输入来限制页面上允许的输入。如果你对安全（你应该这样）认真负责，你必须考虑你将允许的定制内容，特别是为了防止跨站脚本（XSS）。例如，检查[http://www.owasp.org/](http://www.owasp.org/)了解更多关于此和其他安全主题的信息。
- en: Time for action customizing entity lists
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制实体列表的操作时间
- en: 'Of course, if we offer the user the opportunity to customize the display of
    *individual* entities, it makes sense to offer the same functionality for lists
    of entities. If you run `crm4.py` and click on the **Contacts** menu item, you
    will see a list as follows:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果我们为用户提供定制单个实体显示的机会，那么为实体列表提供相同的功能也是有意义的。如果你运行`crm4.py`并点击**联系人**菜单项，你会看到一个如下列表：
- en: '![Time for action customizing entity lists](img/3746_10_06.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![定制实体列表的操作时间](img/3746_10_06.jpg)'
- en: You will notice that in the column containing the telephone numbers, those beginning
    with a plus sign are shown in a bold font. This will give a visible hint that
    this is probably a foreign number that needs some special code on your telephone
    switch.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 你会注意到在包含电话号码的列中，以加号开头的那些电话号码以粗体显示。这将给出一个明显的提示，这可能是一个需要电话交换机上特殊代码的外国号码。
- en: What just happened?
  id: totrans-115
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'The customization itself is a small piece of JavaScript that is inserted at
    the end of the page that shows the list of contacts:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 定制本身是一小段JavaScript代码，它被插入到显示联系人列表的页面末尾：
- en: '**Chapter10/customizationexample3.html**'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/customizationexample3.html**'
- en: '[PRE14]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: It uses jQuery to iterate over all`<td>` elements, which is the fourth child
    of their parent (a`<tr>` element, code highlighted). If the text contained in
    that element matches something that begins with optional whitespace and a plus
    sign (the regular expression itself is defined in the first line of the script),
    we set the `font-weight` CSS attribute of that element to `bold`.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 它使用jQuery遍历所有`<td>`元素，这是它们父元素的第四个子元素（一个`<tr>`元素，代码被突出显示）。如果该元素包含的文本与以可选空白和一个加号开头的文本匹配（正则表达式本身在脚本的第
    一行定义），我们将该元素的`font-weight` CSS属性设置为`bold`。
- en: Just as with the customization of `Display`, we need to add some way to store
    the customizations. The alterations to the `custom` class in the entity module
    are straightforward and copy the pattern set for `Display` (the complete code
    is available in `rbacentity.py):`
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 就像对`Display`的定制一样，我们需要添加一些方式来存储这些定制。在实体模块中对`custom`类的修改是直接的，并且复制了为`Display`设置的模板（完整的代码可在`rbacentity.py`中找到）：
- en: '**Chapter10/rbacentity.py**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/rbacentity.py**'
- en: '[PRE15]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The definition of the `Browse` class in `browse.py` needs to be extended as
    well to retrieve and deliver the customizations (shown are the relevant lines
    from `browse.py):`
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在`browse.py`中定义的`Browse`类也需要扩展，以便检索和传递定制（以下是从`browse.py`中显示的相关行）：
- en: '**Chapter10/browse.py**'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/browse.py**'
- en: '[PRE16]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'And the final step is to provide the user with a link to edit the customizations.
    This is done in the main application (available as `crm4.py)` by adding these
    lines, again following the pattern set for the display customizations (the lines
    relevant for the browse customizations are highlighted):'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是为用户提供一个编辑定制的链接。这是在主应用程序（作为`crm4.py`提供）中通过添加这些行来完成的，再次遵循为显示定制设置的模板（与浏览定制相关的行被突出显示）：
- en: '**Chapter10/crm4.py**'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/crm4.py**'
- en: '[PRE17]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: We are, of course, not restricted to actions on the client-side only. As we
    may utilize all the AJAX capabilities of jQuery, we can do quite elaborate things.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 我们当然不仅限于客户端的操作。因为我们可以利用jQuery的所有AJAX功能，我们可以做相当复杂的事情。
- en: Our entity browser already has the functionality to mark a row as selected if
    we click it a single time. However, we did not implement any useful action to
    go with this selection.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的实体浏览器已经具有在单击一次时将行标记为选中的功能。然而，我们没有为这个选择实现任何有用的操作。
- en: When we first implemented the `Display` class, we added a `delete()` method
    and exposed it to the CherryPy engine. We do not make use of this method in any
    way. Now that we can customize the entity browser, we can correct this and implement
    some functionality to add a button that when clicked will delete all selected
    entries. Mind you, it probably makes more sense to provide such basic functionality
    in a real application from the start, but it does show what is possible.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们最初实现`Display`类时，我们添加了一个`delete()`方法并将其暴露给CherryPy引擎。我们并没有以任何方式使用这个方法。现在，由于我们可以自定义实体浏览器，我们可以纠正这一点并实现一些功能，添加一个按钮，当点击时将删除所有选定的条目。请注意，在真实的应用程序中从一开始就提供这样的基本功能可能更有意义，但这确实展示了可能实现的功能。
- en: Time for action adding a delete button
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加删除按钮的时间
- en: 'Run `crm4.py` once more, and in the **Customize List** menu, add an item that
    applies to all entities (and hence is marked as ''*'') as follows:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 再次运行`crm4.py`，然后在**定制列表**菜单中添加一个适用于所有实体（因此标记为`*`）的项目，如下所示：
- en: '![Time for action adding a delete button](img/3746_10_07.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![添加删除按钮的行动时间](img/3746_10_07.jpg)'
- en: 'If we now open, for example, the list of contacts, we see a new button with
    a trashcan icon:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们现在打开联系人列表，我们会看到一个带有垃圾桶图标的新按钮：
- en: '![Time for action adding a delete button](img/3746_10_08.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![添加删除按钮的行动时间](img/3746_10_08.jpg)'
- en: What just happened?
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 刚才发生了什么？
- en: 'The customization we added consists of some HTML to define a`<button>` element
    and some JavaScript to render it as a nice trashcan button and to act on a click:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加的自定义包括一些HTML来定义`<button>`元素和一些JavaScript来将其渲染为漂亮的垃圾桶按钮并对其点击进行操作：
- en: '**Chapter10/customizationexample4.html**'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**第10章/定制示例4.html**'
- en: '[PRE18]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The click handler fetches the `action` attribute from the last form in the list
    of entities (highlighted). This form holds the add button and this `action` attribute
    will therefore point to the URL serviced by the `index()` method of a `Display`
    instance. We simply add `delete` to it to make it point to the URL that will be
    serviced by the `delete()` method.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 点击处理程序从实体列表中的最后一个表单中获取`action`属性（突出显示）。这个表单包含添加按钮，因此这个`action`属性将指向由`Display`实例的`index()`方法服务的URL。我们只需将其添加`delete`即可使其指向将由`delete()`方法服务的URL。
- en: The next step is to iterate over all`<tr>` elements with a `selected` class
    and use jQuery's `get()` method to fetch the URL with the `id` attribute from
    the`<tr>` element added as an argument.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是遍历所有具有`selected`类的`<tr>`元素，并使用jQuery的`get()`方法从添加为参数的`<tr>`元素中获取具有`id`属性的URL。
- en: Finally, we have to redisplay the list of entities to show the effects of the
    deletion. If the list was filtered and/or sorted, we would like to retain that,
    but we still have to remove the hidden`<input>` element that holds the `cacheid`,
    otherwise we would be presenting the old list. After removing it, we trigger the
    click handler on the first button to initiate a reload.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们必须重新显示实体列表以显示删除的效果。如果列表已被过滤和/或排序，我们希望保留这些设置，但我们仍然必须删除包含`cacheid`的隐藏`<input>`元素，否则我们将展示旧列表。删除它后，我们触发第一个按钮的点击处理程序以启动重新加载。
- en: Like almost every jQuery method, the `click()` method returns the selected elements
    it was invoked on, so we can chain a `button()` method to adorn our button element
    with a proper icon.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 与几乎每个jQuery方法一样，`click()`方法返回它被调用的选定元素，因此我们可以将`button()`方法链接到我们的按钮元素上，以添加适当的图标。
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This final chapter was all about polishing up our CRM application. We enhanced
    the user interface to utilize the sort and filter features of the underlying framework,
    reused the framework itself to store and manage user customizations, and showed
    how powerful these customizations can be by enhancing the display of items and
    list of items by retrieving data from Google Maps.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 这最后一章全部关于完善我们的CRM应用程序。我们增强了用户界面以利用底层框架的排序和过滤功能，重用了框架本身来存储和管理用户自定义，并通过从Google
    Maps检索数据来增强项目显示和项目列表，展示了这些自定义的强大功能。
- en: Appendix A. References to Resources
  id: totrans-147
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A.资源参考
- en: Without repeating each and every reference given in the book, this appendix
    lists a number of resources that give good and comprehensive information on various
    subjects of interest to people building web applications.
  id: totrans-148
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在不重复书中给出的每个参考的情况下，本附录列出了一些资源，这些资源提供了关于人们构建Web应用程序的各种感兴趣主题的良好和全面的信息。
- en: Good old offline reference books
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 良好的离线参考书籍
- en: 'Sometimes it''s nice to leave the keyboard and just relax with a book (or e-reader)
    and do some reading about our favorite subjects. The following small selection
    of books is reference work I pick up regularly (some ISBNs may reflect the e-book
    version):'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，放下键盘，放松一下，读一些关于我们最喜欢的主题的书（或电子阅读器）是很不错的。以下是一些我经常参考的参考书籍（一些ISBN可能反映电子书版本）：
- en: 'Especially for people familiar with Python, having some good books around about
    JavaScript and the jQuery libraries is very convenient. The following three books
    are good starters:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 尤其对于熟悉Python的人来说，拥有一些关于JavaScript和jQuery库的好书是非常方便的。以下三本书是很好的入门选择：
- en: '**Learning JavaScript, Second Edition, Shelley Powers, O''Reilly, 978-0-596-52187-5**'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《学习JavaScript，第二版》，Shelley Powers 著，O''Reilly出版社，978-0-596-52187-5**'
- en: Comprehensive introduction to JavaScript basics.
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对JavaScript基础的综合介绍。
- en: '**jQuery Cookbook, Cody Lindley, O''Reilly, 978-0-596-15977-1**'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《jQuery食谱》，Cody Lindley 著，O''Reilly出版社，978-0-596-15977-1**'
- en: A large selection of practical examples of how to solve common requirements
    with jQuery.
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 介绍了如何使用jQuery解决常见需求的大量实用示例。
- en: '**jQuery UI 1.7, Dan Wellman, Packt, 978-1-847199-72-0**'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《jQuery UI 1.7》，Dan Wellman 著，Packt出版社，978-1-847199-72-0**'
- en: A step-by-step explanation of all the functionality of the jQuery UI library,
    including advanced features like drag-and-drop.
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对jQuery UI库的所有功能进行逐步解释，包括像拖放这样的高级功能。
- en: 'Python has very good documentation online. Especially the coverage of the standard
    modules distributed with Python is excellent, but to get a thorough insight into
    the language itself and the features added in version 3, this book is a good start:
    **Programming in Python 3, Mark Summerfield, Addison Wesley, 978-0-32168056-3**'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: Python在网上有非常好的文档。特别是对与Python一起分发的标准模块的覆盖非常出色，但要深入了解语言本身以及3.0版本中添加的功能，这本书是一个很好的起点：**《Python
    3编程》，Mark Summerfield 著，Addison Wesley出版社，978-0-32168056-3**
- en: 'All of the following books cover Python subjects that play an important role
    in this book:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 以下所有书籍都涵盖了在这本书中扮演重要角色的Python主题：
- en: '**Python Testing Beginner''s Guide, Daniel Arbuckle, Packt, 978-1847198-84-6**'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《Python测试入门指南》，Daniel Arbuckle 著，Packt出版社，978-1847198-84-6**'
- en: Testing doesn't have to be difficult and this book shows why.
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 测试不必困难，这本书展示了原因。
- en: '**CherryPy Essentials, Sylvain Hellegouarch, Packt, 978-1904811-84-8**'
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《CherryPy基础教程》，Sylvain Hellegouarch 著，Packt出版社，978-1904811-84-8**'
- en: The CherryPy application server that we use extensively in the examples in this
    book is capable of much more. Written by its primary developer, this book covers
    all the features and gives practical examples of some web applications as well.
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们在这本书的示例中广泛使用的CherryPy应用程序服务器功能强大得多。由其主要开发者撰写，本书涵盖了所有功能，并提供了某些网络应用的实用示例。
- en: '**Using SQLite, Jay A. Kreibich, O''Reilly, 978-0-596-52118-9**'
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《使用SQLite》，Jay A. Kreibich 著，O''Reilly出版社，978-0-596-52118-9**'
- en: This book shows what SQLite is capable of and is even a good introduction to
    database design and the use of SQL. Not Python-specific (SQLite is used in many
    more places than Python alone).
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书展示了SQLite的能力，甚至是对数据库设计和SQL使用的良好介绍。它不是针对Python的（SQLite在许多地方比Python本身使用得更多）。
- en: '**Mastering Regular Expressions, Third Edition, O''Reilly, 978-0-596-52812-6**'
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《精通正则表达式，第三版》，O''Reilly出版社，978-0-596-52812-6**'
- en: This book is everything there is to know about regular expressions. It's mostly
    not Python-specific, but as the regular expression library in Python closely resembles
    the one in Perl, almost all examples can be used as is in Python.
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这本书涵盖了关于正则表达式的所有知识。它主要不是针对Python的，但由于Python的正则表达式库与Perl中的非常相似，几乎所有示例都可以直接在Python中使用。
- en: '**CSS Mastery, Andy Budd, Friends of Ed, 978-159059-614-2**'
  id: totrans-168
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**《CSS精通》，Andy Budd 著，Friends of Ed出版社，978-159059-614-2**'
- en: Not all style issues are covered by jQuery UI of course and CSS can be tricky.
    This book is one of the most readable ones I've found.
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当然，jQuery UI并没有涵盖所有样式问题，CSS也可能很棘手。这本书是我找到的最易读的之一。
- en: Additional websites, wikis, and blogs
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他网站、维基和博客
- en: Additional information on the tools and resources used in the book can be found
    online.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 关于书中使用的工具和资源的更多信息可以在网上找到。
- en: Tools and frameworks
  id: totrans-172
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工具和框架
- en: '[http://www.cherrypy.org/](http://www.cherrypy.org/)'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.cherrypy.org/](http://www.cherrypy.org/)'
- en: The pure Python application server used in the examples in this book.
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 本书示例中使用的纯Python应用程序服务器。
- en: '[http://projects.apache.org/projects/http_server.html](http://projects.apache.org/projects/http_server.html)'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://projects.apache.org/projects/http_server.html](http://projects.apache.org/projects/http_server.html)'
- en: Apache is much more than just a web server, but this links to this webserver
    workhorse directly.
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Apache不仅仅是一个Web服务器，但这个链接直接指向这个工作马。
- en: '[http://jquery.com/](http://jquery.com/)'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jquery.com/](http://jquery.com/)'
- en: '[http://jqueryui.com/](http://jqueryui.com/%20)'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://jqueryui.com/](http://jqueryui.com/%20)'
- en: All about the JavaScript libraries used throughout this book to spice up the
    user interface.
  id: totrans-179
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 整本书中用于增强用户界面的JavaScript库的所有内容。
- en: '[http://www.prototypejs.org/](http://www.prototypejs.org/)'
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.prototypejs.org/](http://www.prototypejs.org/)'
- en: '[http://www.sencha.com/products/extjs/](http://www.sencha.com/products/extjs/%20)'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.sencha.com/products/extjs/](http://www.sencha.com/products/extjs/%20)'
- en: '[http://mootools.net/](http://mootools.net/%20)'
  id: totrans-182
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://mootools.net/](http://mootools.net/%20)'
- en: '[http://dojotoolkit.org/](http://dojotoolkit.org/)'
  id: totrans-183
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://dojotoolkit.org/](http://dojotoolkit.org/)'
- en: Possible alternatives to the jQuery/jQuery UI libraries. Each has its own strengths
    and weaknesses.
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: jQuery/jQuery UI库的可能替代品。每个都有自己的优点和缺点。
- en: '[http://sqlite.org/](http://sqlite.org/)'
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://sqlite.org/](http://sqlite.org/)'
- en: '[http://wiki.python.org/moin/DatabaseInterfaces](http://wiki.python.org/moin/DatabaseInterfaces)'
  id: totrans-186
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://wiki.python.org/moin/DatabaseInterfaces](http://wiki.python.org/moin/DatabaseInterfaces)'
- en: The home of the embedded database engine bundled with Python and a list of alternative
    database engines that work with Python.
  id: totrans-187
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 随Python捆绑的嵌入式数据库引擎及其与Python兼容的替代数据库引擎列表。
- en: '[http://www.aminus.net/dejavu](http://www.aminus.net/dejavu)'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.aminus.net/dejavu](http://www.aminus.net/dejavu)'
- en: '[http://www.djangoproject.com/](http://www.djangoproject.com/%20)'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.djangoproject.com/](http://www.djangoproject.com/%20)'
- en: '[http://www.sqlalchemy.org/](http://www.sqlalchemy.org/%20)'
  id: totrans-190
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.sqlalchemy.org/](http://www.sqlalchemy.org/%20)'
- en: '[http://elixir.ematia.de/trac/](http://elixir.ematia.de/trac/%20)'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://elixir.ematia.de/trac/](http://elixir.ematia.de/trac/%20)'
- en: Some quality object relational mappers.
  id: totrans-192
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一些高质量的面向对象关系映射器。
- en: '[http://subversion.apache.org/](http://subversion.apache.org/)'
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://subversion.apache.org/](http://subversion.apache.org/)'
- en: '[http://git-scm.com/](http://git-scm.com/%20)'
  id: totrans-194
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://git-scm.com/](http://git-scm.com/%20)'
- en: Both good! Widely used version management tools.
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 都很好！广泛使用的版本管理工具。
- en: '[http://code.google.com/apis/libraries/devguide.html](http://code.google.com/apis/libraries/devguide.html)'
  id: totrans-196
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://code.google.com/apis/libraries/devguide.html](http://code.google.com/apis/libraries/devguide.html)'
- en: '[http://www.asp.net/ajaxlibrary/cdn.ashx](http://www.asp.net/ajaxlibrary/cdn.ashx%20)'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.asp.net/ajaxlibrary/cdn.ashx](http://www.asp.net/ajaxlibrary/cdn.ashx%20)'
- en: Content delivery frameworks may reduce the load on your own web server significantly.
  id: totrans-198
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 内容交付框架可以显著减少您自己的Web服务器负载。
- en: '[http://pypi.python.org/pypi](http://pypi.python.org/pypi)'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://pypi.python.org/pypi](http://pypi.python.org/pypi)'
- en: The Python package index. Lists thousands of packages ready for use with Python.
    Check this first before reinventing the wheel.
  id: totrans-200
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Python包索引。列出数千个可用于Python的包。在重新发明轮子之前先查看这个。
- en: '[http://www.datatables.net/](http://www.datatables.net/)'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.datatables.net/](http://www.datatables.net/)'
- en: '[http://www.appelsiini.net/projects/jeditable](http://www.appelsiini.net/projects/jeditable)'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[http://www.appelsiini.net/projects/jeditable](http://www.appelsiini.net/projects/jeditable)'
- en: Two very capable jQuery plugins. Both are excellent examples of how to extend
    jQuery.
  id: totrans-203
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 两个非常强大的jQuery插件。都是如何扩展jQuery的优秀示例。
- en: '[http://getfirebug.com/](http://getfirebug.com/)'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://getfirebug.com/](http://getfirebug.com/)'
- en: An extension for the Firefox browser. Invaluable when debugging web applications.
  id: totrans-205
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Firefox浏览器的扩展。在调试Web应用程序时非常有用。
- en: '[http://seleniumhq.org](http://seleniumhq.org)'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://seleniumhq.org](http://seleniumhq.org)'
- en: A tool to test user interfaces/web pages.
  id: totrans-207
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 一个用于测试用户界面/网页的工具。
- en: '[http://www.owasp.org/index.php/Main_Page](http://www.owasp.org/index.php/Main_Page)'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.owasp.org/index.php/Main_Page](http://www.owasp.org/index.php/Main_Page)'
- en: Securing your application is very important. On this site, you will find information
    about general principles as well as specific attack patterns (and their remedies).
  id: totrans-209
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 保护您的应用程序非常重要。在这个网站上，您可以找到关于一般原则以及特定攻击模式（及其补救措施）的信息。
- en: Newsfeeds
  id: totrans-210
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 新闻源
- en: '[http://planet.python.org/](http://planet.python.org/)'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://planet.python.org/](http://planet.python.org/)'
- en: A large collection of blogs about Python.
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于Python的大量博客集合。
- en: '[http://michelanders.blogspot.com/](http://michelanders.blogspot.com/)'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://michelanders.blogspot.com/](http://michelanders.blogspot.com/)'
- en: The author's blog about writing web applications in Python.
  id: totrans-214
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 作者关于用Python编写Web应用的博客。
- en: Appendix B. Pop Quiz Answers
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录B. 临时测验答案
- en: Chapter 2, Creating a Simple Spreadsheet
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章，创建一个简单的电子表格
- en: Serving content with CherryPy
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用CherryPy提供内容
- en: 'Answer:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: Rename the `index()` method to `content()`
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 将`index()`方法重命名为`content()`
- en: Remember that in order to serve the content referred to by a URL such as [http://127.0.0.1/content](http://127.0.0.1/content),
    CherryPy looks for a method named `content()` in the object instance passed to
    the `quickstart()` function. Later on, we will see that it is also possible to
    build hierarchies of classes that enable CherryPy to serve URLs like `http://127.0.0.1/app/toplevel/content`
    as well.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，为了服务由 URL 指定的内容，例如 [http://127.0.0.1/content](http://127.0.0.1/content)，CherryPy
    会寻找在传递给 `quickstart()` 函数的对象实例中名为 `content()` 的方法。稍后，我们将看到也可以构建类层次结构，使 CherryPy
    能够服务类似 `http://127.0.0.1/app/toplevel/content` 的 URL。
- en: Adding an icon to a button
  id: totrans-221
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向按钮添加图标
- en: 'Answer:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: '`$("button").button({icons: {primary: ''ui-icon-refresh''}})`'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`$("button").button({icons: {primary: ''ui-icon-refresh''}})`'
- en: 'Like many jQuery and jQuery UI plugins, the button widget takes an `options`
    object as an argument. This `options` object may have a number of attributes,
    one of them the `icons` attribute. The value of this attribute itself is an object
    again, its `primary` attribute determining which of the many standard icons will
    be displayed on the button. Refer to the online documentation of the button widget
    to see all options: [http://jqueryui.com/demos/button/](http://jqueryui.com/demos/button/)
    and check jQuery UI''s themeroller page at [http://jqueryui.com/themeroller/](http://jqueryui.com/themeroller/)
    for an overview of all available icons for a given theme.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 与许多 jQuery 和 jQuery UI 插件一样，按钮小部件接受一个 `options` 对象作为参数。这个 `options` 对象可能有许多属性，其中之一是
    `icons` 属性。这个属性的值本身也是一个对象，它的 `primary` 属性决定了将在按钮上显示的许多标准图标中的哪一个。请参阅按钮小部件的在线文档以查看所有选项：[http://jqueryui.com/demos/button/](http://jqueryui.com/demos/button/)，并查看
    jQuery UI 的 themeroller 页面 [http://jqueryui.com/themeroller/](http://jqueryui.com/themeroller/)
    以了解给定主题的所有可用图标。
- en: Adding conversions to a unitconverter instance
  id: totrans-225
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 向 unitconverter 实例添加转换
- en: 'Answer:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: '[PRE19]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Changing option defaults
  id: totrans-228
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改选项默认值
- en: 'Answer: b'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：b
- en: 'Chapter 3, Tasklist I: Persistence'
  id: totrans-230
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章，任务列表 I：持久性
- en: Session IDs
  id: totrans-231
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 会话 ID
- en: 'Answer 1:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 答案 1：
- en: No, CherryPy will only save the session data to persistent storage if something
    is written to the session data while preparing a response. If an unknown session
    ID is received, the application cannot identify the user and will signal that
    to the client, but it will not store anything in the session data.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 不，CherryPy 只有在准备响应时向会话数据写入某些内容时，才会将会话数据保存到持久存储中。如果收到未知的会话 ID，应用程序无法识别用户，并将此信号发送给客户端，但它不会在会话数据中存储任何内容。
- en: 'Answer 2:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 答案 2：
- en: c, because a client that doesn't store cookies will never send a request containing
    the session ID, the server will generate a new one.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: c，因为不存储 cookie 的客户端永远不会发送包含会话 ID 的请求，服务器将生成一个新的。
- en: Styling screen elements
  id: totrans-236
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 屏幕元素样式
- en: 'Answer 1:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 答案 1：
- en: Either leave out the `text:false` in the `options` object passed to the `button()`
    function or explicitly show it with `text:true`.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 要么在传递给 `button()` 函数的 `options` 对象中省略 `text:false`，要么显式地使用 `text:true` 来显示它。
- en: 'Answer 2:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 答案 2：
- en: The`<div>` element that encloses the`<form>` element might be wider and an unsuitable
    background color may show up where the form isn't covering the full width.
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: 包围 `<form>` 元素的 `<div>` 元素可能更宽，不合适的背景颜色可能会在表单未覆盖完整宽度的地方显示。
- en: 'Chapter 4, Tasklist II: Databases and AJAX'
  id: totrans-241
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章，任务列表 II：数据库和 AJAX
- en: Using variable selection criteria
  id: totrans-242
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用变量选择标准
- en: 'Answer:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: '`cursor.execute(''select * from task where user_id = ?'',(username,))`'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`cursor.execute(''select * from task where user_id = ?'',(username,))`'
- en: A working implementation is available as `taskdb3.py`. Note that because there
    may be more than one placeholder present in a query, we pass the actual values
    for these placeholders as a tuple. A peculiarity of the Python syntax demands
    that a tuple is defined as parentheses containing a comma separated list of expressions
    and that a tuple consisting of a single item still has to contain a comma. `(username,)`
    is, therefore, a tuple with a single item.
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可工作的实现可以在 `taskdb3.py` 中找到。请注意，由于查询中可能存在多个占位符，我们传递这些占位符的实际值作为元组。Python 语法的一个特性要求元组必须定义为包含逗号分隔的表达式的括号，即使只包含一个项目，元组也必须包含逗号。因此，`(username,)`
    是一个只有一个项目的元组。
- en: Spotting the error
  id: totrans-246
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 查找错误
- en: 'Answer:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: '`test_number()`'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: '`test_number()`'
- en: 'It will fail in the very first assertion with an output like the following:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 它将在第一个断言中失败，输出如下：
- en: '[PRE20]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'It still doesn''t say what is wrong in the code, but now you know that the
    new implementation does not calculate the factorial of a number correctly. The
    solution might not be hard to spot this time: the `range()` function should be
    passed `2` as its first argument, because only 0 and 1 are treated as special-case
    in the code'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 代码仍然没有说明哪里出了问题，但现在你知道新的实现并没有正确地计算一个数的阶乘。这次解决方案可能并不难找到：`range()` 函数应该传递 `2` 作为其第一个参数，因为代码中只有
    `0` 和 `1` 被视为特殊情况。
- en: Chapter 5, Entities and Relations
  id: totrans-252
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章，实体和关系
- en: How to check a class
  id: totrans-253
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何检查一个类
- en: 'Answer:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: 'Python''s built-in function `issubclass()` can provide the information we need.
    Checking, for example, the `instance_a` attribute might be implemented like:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的内置函数 `issubclass()` 可以提供我们需要的信息。例如，检查 `instance_a` 属性可能实现如下：
- en: '[PRE21]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: How to select a limited number of books
  id: totrans-257
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何选择有限数量的书籍
- en: 'Answer:'
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: '`booksdb.list(offset=20,limit=10)`'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: '`booksdb.list(offset=20,limit=10)`'
- en: Chapter 6, Building a Wiki
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章，构建一个维基
- en: Pop quiz
  id: totrans-261
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验
- en: 'Answer:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 答案：
- en: The `id`, as it is unique as well.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`id`，因为它也是唯一的。'
