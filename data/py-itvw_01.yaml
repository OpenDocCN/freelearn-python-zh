- en: Chapter 1. Brett Cannon
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。布雷特·卡农
- en: '![Brett Cannon](img/B08180_07_01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![布雷特·卡农](img/B08180_07_01.jpg)'
- en: Brett Cannon is a Canadian software engineer and Python core developer. He is
    a principal software developer at Microsoft, where he works on editing tools.
    Previous roles include software engineer at Google and creator at Oplop. Brett
    became a fellow of the Python Software Foundation (PSF) in 2003 and served as
    a director of the PSF between 2013 and 2014\. He is a former PyCon US committee
    member and was conference chair of PyData Seattle 2017\. Brett led the migration
    of CPython to GitHub and created `importlib`. Among his open source achievements
    is *caniusepython3* and he is the co-author of *17 successful Python Enhancement
    Proposals*.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 布雷特·卡农是一位加拿大软件工程师和 Python 核心开发者。他是微软的主软件工程师，在那里他从事编辑工具的开发工作。他之前的工作包括谷歌的软件工程师和
    Oplop 的创始人。布雷特于 2003 年成为 Python 软件基金会（PSF）的会员，并在 2013 年至 2014 年间担任 PSF 的董事。他曾是
    PyCon US 委员会成员，并担任 2017 年 PyData 西雅图会议的主席。布雷特领导了 CPython 迁移到 GitHub，并创建了 `importlib`。他的开源成就包括
    *caniusepython3*，并且他是 *17 个成功的 Python 增强提案* 的合著者。
- en: '**Discussion themes: core developers, v2.7/v3.x, Python sprints.**'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**讨论主题：核心开发者、v2.7/v3.x、Python 疆场。**'
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Brett Cannon here: @brettsky**'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**在这里了解布雷特·卡农：@brettsky**'
- en: '**Mike Driscoll**: Why did you become a computer programmer?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**迈克·德里斯科尔：**你为什么成为了一名计算机程序员？'
- en: '**Brett Cannon**: I always found computers interesting, as far back as I can
    remember. I was lucky enough to go to an elementary school with a computer lab
    full of Apple IIes, back when that was the cutting edge, so I was exposed to them
    relatively early on.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**布雷特·卡农：**从我能够记事起，我就一直对计算机很感兴趣。我很幸运，能去一所小学，那里有一个装满了苹果II电脑的计算机实验室，当时那可是尖端技术，所以我相对较早地接触到了它们。'
- en: In the year between junior high and high school, I took a computer class over
    the summer and that included a little bit of Apple BASIC. I did it and I excelled
    at it, to the point that I think I finished the entire class in the first week.
    It hadn't really clicked that I could do that for a job at that point.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在初中和高中的那一年之间，我在夏天上了一个计算机课程，其中包括一点苹果 BASIC。我做到了，并且做得很好，以至于我认为我在第一周就完成了整个课程。在那个阶段，我还没有真正意识到我可以把它作为一份工作来做。
- en: This continued through high school, and then when it came time to pick courses
    for junior college, my mom had me promise her two things. I agreed that I would
    take a course in philosophy and I would take a course in computer programming.
    So that's what I did and I loved both.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这种情况一直持续到高中，然后到了选择大学课程的时候，我的妈妈让我答应她两件事。我同意我会上一门哲学课和一门计算机编程课。所以我就这样做了，并且我都很喜欢。
- en: Once again, I read my introductory C book in the first two weeks, which was
    supposed to last for the whole semester. I remember the first time I finished
    it, I sat down and implemented tic-tac-toe one day after class. I even forgot
    to eat dinner! It was just one of those eureka moments. The feeling of boundless
    creativity that this tool provided just engulfed me. That's how I got into programming.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我再次在最初的两个星期里读了我的 C 语言入门书，它原本应该持续整个学期。我记得我第一次读完它的时候，我在课后的一天就坐下来实现了井字棋。我甚至忘了吃晚饭！那真是一个那种“啊哈”的时刻。这种工具提供的无限创造力的感觉让我完全沉浸其中。这就是我进入编程的原因。
- en: '**Brett Cannon: ''The feeling of boundless creativity that this tool provided
    just engulfed me. That''s how I got into programming.''**'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·卡农：**“这种工具提供的无限创造力的感觉让我完全沉浸其中。这就是我进入编程的原因。”'
- en: I knew that tic-tac-toe was a solved problem, so I thought that I could actually
    write the logic so that I could play tic-tac-toe perfectly as a program. I spent
    something like six hours one evening doing it, and I was utterly blown away that
    I was actually able to do that. It opened up the possibilities of what computers
    could do, and the freedom of it and the ability to think about the problems just
    really grabbed me. I've been doing it ever since.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道井字棋是一个已解决的问题，所以我认为我可以编写逻辑，这样我就可以编写一个程序来完美地玩井字棋。我花了大约六个小时的一个晚上来做这件事，我完全震惊于我竟然真的做到了。这打开了计算机能做什么的可能性，以及它的自由和解决问题的能力真的吸引了我。从那以后，我就一直在做这件事。
- en: '**Driscoll**: What led you to becoming so involved with Python and its community?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**是什么让你如此深入地参与到 Python 及其社区中？'
- en: '**Cannon**: Well, I ended up going to Berkeley and getting a degree in philosophy,
    but I kept taking computer science courses. The introductory computer science
    course at Berkeley had an entrance exam, and I was worried that I didn''t know
    object-oriented programming, since I only knew C. So I looked around for an object-oriented
    programming language. I found Python, learned it, loved it, and kept writing personal
    programs in it.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**坎农**：嗯，我最终去了伯克利，获得了哲学学位，但我一直上计算机科学课程。伯克利的计算机科学入门课程有一个入学考试，我担心我不懂面向对象编程，因为我只知道C语言。所以我四处寻找面向对象编程语言。我发现了Python，学会了它，爱上了它，并且一直在用它编写个人程序。'
- en: At some point along the way, I needed `time.strptime`, the function to take
    a string that represents a `datetime` and parse it back into a time tuple. I was
    on Windows at the time, and `time.strptime` wasn't available on Windows. As a
    result, I came up with a way to parse it where you had to still plug in the locale
    information but it would still parse it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，我需要`time.strptime`函数，它可以将表示`datetime`的字符串解析回时间元组。当时我在Windows上，Windows上没有`time.strptime`。因此，我想出了一个方法来解析它，你仍然需要输入区域信息，但它仍然可以解析。
- en: Back then, ActiveState's cookbook site was still a thing, so I posted my recipe
    of how to do `strptime` up on ActiveState. Later, O'Reilly published the first
    edition of *Python Cookbook*, and Alex Martelli included that recipe as the last
    recipe in the book, which also happened to be the longest recipe in the book.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，ActiveState的食谱网站仍然存在，所以我把我如何实现`strptime`的方法发到了ActiveState。后来，O'Reilly出版了第一版《Python食谱》，亚历克斯·马尔蒂利将这个食谱作为书中的最后一个食谱，这恰好也是书中最长的食谱。
- en: '**Brett Cannon: ''So I posted my recipe of how to do strptime up on ActiveState.''**'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：''所以我把我如何实现strptime的方法发到了ActiveState。''**'
- en: It still ticked me off, though, that people had to input their locale information.
    I was frustrated that I couldn't solve that. So in the back of my mind, I was
    continuously thinking about how I could get that locale information out. Eventually,
    I solved it. It was actually the week after graduating from Berkeley, and I gifted
    myself the time to write up the solution, so that you didn't have to enter locale
    information anymore.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，人们必须输入他们的区域信息仍然让我感到不快。我因为无法解决这个问题而感到沮丧。所以在我心里，我一直在想如何获取这些区域信息。最终，我解决了这个问题。实际上是在我从伯克利毕业后的一周，我给自己留出了时间来整理解决方案，这样你就不必再输入区域信息了。
- en: After I did that, I emailed Alex Martelli, since we'd exchanged emails a couple
    of times at that point, and I said, "Hey, I've fixed this so it's not necessary
    to input the locale anymore. How do I get this upstream?" Alex Martelli said,
    "Oh, well you just email this mailing list, Python-Dev, and you can submit the
    patch."
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在我做了那之后，我给亚历克斯·马尔蒂利发了邮件，因为我们那时已经交换过几次邮件了，我说：“嘿，我已经修复了这个，不再需要输入区域信息了。我怎么才能让这个信息传上去？”亚历克斯·马尔蒂利说：“哦，你只需将这个补丁发送到Python-Dev邮件列表。”
- en: '**Brett Cannon: ''Alex Martelli said, "Oh, well you just email this mailing
    list, Python-Dev, and you can submit the patch."''**'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：''亚历克斯·马尔蒂利说：“哦，你只需将这个补丁发送到Python-Dev邮件列表。”''**'
- en: So, I emailed the list and I think Skip Montanaro was the first person to respond.
    Skip just said, "Yeah, that's great, just upload the file and we'll work at it
    and accept it." I thought that was awesome. I was able to contribute to this project
    and this language, which I thought was really interesting.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我给列表发了邮件，我认为是Skip Montanaro第一个回复的。Skip只是说：“是的，那太棒了，只需上传文件，我们会处理它并接受它。”我觉得那太棒了。我能够为这个项目和这种语言做出贡献，我认为这真的很有趣。
- en: '**Brett Cannon: ''I was able to contribute to this project and this language,
    which I thought was really interesting.''**'
  id: totrans-22
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：''我能够为这个项目和这种语言做出贡献，我认为这真的很有趣。''**'
- en: All of this happened during a gap year I was taking between undergraduate and
    graduate school. I was trying to get into graduate school for computer science
    and I knew that I was going to need some more programming experience, beyond the
    courses I was taking. I thought that I could contribute to Python and help out.
    I had all the time in the world back then, so I decided I'd get involved.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都是在本科和研究生之间的一年空档期发生的。我试图进入计算机科学研究生院，我知道我需要更多的编程经验，而不仅仅是上课。我认为我可以为Python做出贡献并帮助他人。当时我有很多时间，所以我决定我要参与进来。
- en: '**Brett Cannon: ''I decided I''d get involved.''**'
  id: totrans-24
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：''我决定我要参与进来。''**'
- en: I got on the mailing list and I lurked around asking questions. Then in that
    same year, I offered to start taking up the Python-Dev summaries, which had stopped
    at that point. Once again, I figured I had the time to do it, and I realized it
    was a good way for me to learn, because it forced me to read every single solitary
    email in Python-Dev.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我加入了邮件列表，并四处闲逛提问。然后在同一年，我提出开始承担Python-Dev总结的工作，那时它已经停止了。我再次认为我有时间去做这件事，我意识到这是一个让我学习的好方法，因为它迫使我阅读Python-Dev中的每一封单独的邮件。
- en: One interesting side effect was that I got to know about any small issues that
    nobody had time to take care of, so I saw anything that cropped up before almost
    anybody else. I was able to very easily pick up small issues to fix and learn,
    and I was able to continually do that.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个有趣的副作用是，我能够了解到任何没有人有时间去处理的小问题，所以我几乎总是比其他人更早看到出现的问题。我能够非常容易地挑选出小问题来修复和学习，而且我能够持续这样做。
- en: In the guise of the Python-Dev summaries, I got to ask more and more questions.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在Python-Dev总结的幌子下，我能够提出越来越多的问题。
- en: At some point, I knew enough, and I became a core developer right after the
    first PyCon (at least the first conference labeled PyCon), in 2003\. At that point
    I was hooked. I'd got to know the team and the people had become friends of mine.
    I just enjoyed it so much and it was fun, so I stuck with it and I've never really
    stopped for longer than a month since.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，我了解得足够多了，我就在2003年的第一次PyCon（至少是第一次被标记为PyCon的会议）之后成为了核心开发者。那时我上瘾了。我认识了团队，那些人已经成为我的朋友。我非常喜欢它，这很有趣，所以我坚持了下来，自从那时起我从未真正停止超过一个月。
- en: '**https://wiki.python.org/moin/GetInvolved**'
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**https://wiki.python.org/moin/GetInvolved**'
- en: That doesn't mean that you have to be a core developer to get into the Python
    community. As long you enjoy it, you can get hooked however it makes sense to
    you.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不意味着你必须成为核心开发者才能进入Python社区。只要你喜欢，你就可以以任何对你有意义的方式参与其中。
- en: '**Driscoll**: What then made you decide to start blogging and writing about
    Python?'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：那么是什么让你决定开始写博客并撰写关于Python的文章？'
- en: '**Cannon**: Blogging is one of those ways to get involved and since I enjoy
    writing, that medium happened to fit the way that I like to communicate. I started
    doing it way back when, and I''ve more or less consistently done it ever since.
    I always enjoy that aspect of dispensing knowledge to the world as best as I can.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**：写博客是参与其中的方式之一，因为我喜欢写作，这种媒介恰好符合我喜欢的沟通方式。我是在很久以前开始的，而且自那以后我基本上一直坚持这样做。我总是享受将知识尽可能好地传授给世界这一方面。'
- en: '**Driscoll**: Was it important that you got into Python at just the right time?
    Do you recommend getting in early on projects?'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：在正确的时间进入Python是否很重要？你推荐在项目早期就加入吗？'
- en: '**Cannon**: Yes, it was one of those situations where I was in the right place
    at the right time, and with the free time I needed to get going. I managed to
    start when I had enough time to contribute as much as I wanted.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**：是的，那是一种我恰好在正确的时间和地点，并且有足够的空闲时间开始的情况。我设法在有时间贡献尽可能多的时候开始了。'
- en: I also got started when the Python project wasn't that big. I remember when
    I started my master's degree, people would ask what I did in my spare time. When
    I said I contributed to Python, they'd reply, "Is that the language with the white
    space?" So I've just been doing this for a long time.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我也是在Python项目不是很大的时候开始的。我记得当我开始读硕士时，人们会问我业余时间做什么。当我说我为Python做贡献时，他们会回答，“是那个有空格的语言吗？”所以我已经做了很长时间。
- en: So yes, I got involved in the project at an ideal point, before interest in
    the language surged around 2005\. I sometimes wish that I'd been able to get started
    with it earlier somehow, but I'd have been younger, so that might not have worked.
    So it was serendipitous that it all just came together when it did.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，是的，我在一个理想的时间点参与了项目，在2005年左右人们对这种语言的兴趣激增之前。我有时希望我能够以某种方式更早地开始，但我会更年轻，所以这可能不起作用。所以当这一切都恰好在那时发生时，这真是偶然。
- en: '**Driscoll**: What parts of Python have you actively contributed to? Is there
    a module that you helped start or you had a major influence on, such as the `datetime`
    module?'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你积极贡献了Python的哪些部分？有没有一个模块是你帮助启动的，或者你在其中发挥了重要作用，比如`datetime`模块？'
- en: '**Cannon**: My influence was actually the `time` module. I predate the `datetime`
    module! The first modules that I ever authored were the `dummy_thread` and `dummy_threading`
    modules that were in Python 2.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**坎农**：我的影响实际上是在`time`模块。我比`datetime`模块还要早！我最早编写的模块是Python 2中的`dummy_thread`和`dummy_threading`模块。'
- en: That was another one of those instances where someone came forward and recommended
    it as a cool thing to do. They said they'd get to it, but over time they didn't
    get to it, so I emailed them saying, "Hey, are you going to get to this?" They
    said no, but that it would still be a useful thing to do, so I did it. Those were
    the first modules that I ever authored from scratch.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 那是那些有人站出来推荐它作为一件酷事来做的一个例子。他们说他们会去做，但过了一段时间，他们没有去做，所以我给他们发了邮件说，“嘿，你会去做这个吗？”他们说不会，但认为这仍然是一件有用的事情去做，所以我做了。这些是我第一次从头开始编写的模块。
- en: I've essentially touched, I think, everything in the Python language at this
    point. I've even touched the parser, which very few people ever have to touch.
    I think that I helped to write warnings for some tokenization thing at one point.
    I played a big part in the compiler, when we switched from going from a concrete
    syntax tree to byte code, to then having a proper concrete syntax tree, to an
    abstract syntax tree to Python.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为，到目前为止，我已经接触到了Python语言中的所有东西。我甚至接触到了解析器，这是非常少有人需要接触的。我想我在某个时候帮助编写了一些关于标记化问题的警告。我在编译器中发挥了重要作用，当我们从具体的语法树切换到字节码，然后再到正确的具体语法树，再到抽象语法树到Python的过程中。
- en: '**Brett Cannon: ''I''ve essentially touched, I think, everything in the Python
    language at this point.''**'
  id: totrans-41
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：**“我认为，到目前为止，我已经接触到了Python语言中的所有东西。”'
- en: Jeremy Hilton had started that project, and Guido van Rossum basically gave
    everyone an ultimatum, because the project had been taking years to finish. So
    Guido said, "You have until the next release to finish this."
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 杰里米·希尔顿开始了那个项目，吉多·范罗苏基本上给每个人下了最后通牒，因为这个项目已经花费了多年时间来完成。所以吉多说，“你有直到下一个版本发布的时间来完成这个。”
- en: '**Brett Cannon: ''So Guido said, "You have until the next release to finish
    this."''**'
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：**“所以吉多说，‘你有直到下一个版本发布的时间来完成这个。’”'
- en: I jumped in and helped Jeremy to carry it the last half of the way. I did a
    similar thing with the `warnings` module. Neil Norbits had started to implement
    it, but he kind of drifted off the project, so I picked it up and finished it
    the rest of the way. That's how I ended up being one of the people who knew the
    `warnings` module a little too well!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我介入并帮助杰里米完成了最后的一半工作。我还对`warnings`模块做了类似的事情。尼尔·诺比特开始实施它，但他有点偏离了项目，所以我接手并完成了剩下的工作。这就是我最终成为那些对`warnings`模块了解得有点过多的人之一的原因！
- en: What else has led me to becoming so involved in Python? Probably the one thing
    that I'm most known for is `importlib`. I wrote most of the current implementation
    of `import` (all of it for Python 3.3) and then Nick Coghlan and Eric Snow helped
    a lot subsequently, but the whole `importlib` package was my doing. Those are
    the ones that come to mind in terms of what came directly from me, but I've basically
    just touched everything everywhere. I can't keep track anymore after 14 years!
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 还有什么让我如此深入地参与到Python中？可能我最出名的事情是`importlib`。我编写了当前`import`的实现的大部分（Python 3.3中的全部），然后尼克·科格兰和埃里克·斯诺随后给予了大量帮助，但整个`importlib`包都是我做的。这些是我直接从我这里来的，但基本上我已经接触到了每个地方。14年后，我无法再跟踪了！
- en: '**Driscoll**: I know what you mean. I hate it when I come across some code
    and I think, "Who wrote this, and why is it so bad?" I then remember that I wrote
    it a good two years ago!'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：我知道你的意思。我讨厌当我遇到一些代码，我想，“这是谁写的，为什么它这么糟糕？”然后我想起我是在两年前写的！'
- en: '**Cannon**: Yeah, if you manage to read your own code from six months ago and
    it still looks good, then there''s probably something wrong. It usually means
    you haven''t learned something new yet.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**坎农**：是的，如果你能从六个月前阅读自己的代码并且它看起来仍然不错，那么可能有些不对劲。这通常意味着你还没有学到新的东西。'
- en: '**Brett Cannon: ''If you manage to read your own code from six months ago and
    it still looks good…it usually means you haven''t learned something new yet.''**'
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·坎农：**“如果你能从六个月前阅读自己的代码并且它看起来仍然不错……这通常意味着你还没有学到新的东西。”'
- en: '**Driscoll**: What do you consider to be the best thing about being a core
    developer of Python?'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：你认为成为Python核心开发者最好的事情是什么？'
- en: '**Cannon**: Probably just the friendships that I''ve made through being one.
    A lot of the core developers are friends of mine.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 大概就是通过成为其中一员所建立的友谊。许多核心开发者都是我的朋友。'
- en: We get together once a year and I get to spend almost 24 hours a day for a whole
    week with a lot of these people. That's on top of the time I get to spend with
    them online throughout the rest of the year. It's probably more time than I get
    to spend with a lot of my friends, because how often do you actually get to take
    basically a full week of vacation with good friends of yours?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们每年聚一次，我几乎可以和这些人一起度过一整周的24小时，一周的时间。这还加上我在这一年中在线与他们相处的时间。这可能比我花在许多朋友身上的时间还要多，因为你们有多少次能和好朋友一起度过一个完整的星期假期？
- en: So yeah, it's honestly the friendships at this point. It's being able to hang
    out and work with these people, learn from them and enjoy what we do and keep
    doing that.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，说实话，现在主要是友谊。能够和这些人一起出去玩，向他们学习，享受我们所做的事情，并继续这样做。
- en: I don't think about the impact of Python very often. It's a little mind-boggling
    sometimes to think about, so I try not to dwell on it. I don't want any form of
    an ego because of it, so I try to actively not think about it too much. If I do
    just sit here and think about working on this language that's used by however
    many millions of developers, then that's a bit of an eye-opener. It's kind of
    cool to be able to say that I work on that, but primarily it's about getting to
    work with friends.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我并不经常考虑Python的影响。有时候想到这一点会让人有些困惑，所以我尽量不去深想。我不希望因为这一点而形成任何形式的自我膨胀，所以我尽量不去过多地思考。如果我只是坐在这里，想着为这个被数百万开发者使用的语言工作，那确实是一种启发。能够说我在做这件事是很酷的，但主要还是关于和朋友们一起工作。
- en: I still remember very clearly when I first joined the team, and even further
    back when I joined the mailing list, so although people say I'm one of these big
    high-up leads on the Python developer team, I've never fully acclimated to that
    idea. I just don't think of myself that way. Guido famously was once asked at
    Google, "On a scale of one to ten, how well do you know Python?" He said an eight.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我仍然非常清楚地记得我第一次加入团队的时候，甚至更早的时候，当我加入邮件列表的时候，所以尽管人们说我是Python开发者团队中的这些高级领导之一，但我从未完全适应这个想法。我只是没有那样看待自己。Guido曾经在一次谷歌的采访中被问及，“在1到10的尺度上，您认为您对Python了解得有多好？”他说8分。
- en: '**''Guido famously was once asked at Google, "On a scale of one to ten, how
    well do you know Python?" He said an eight.''**'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**''Guido曾经在一次谷歌的采访中被问及，“在1到10的尺度上，您认为您对Python了解得有多好？”他说8分。’**'
- en: No one knows the entire system, because it's way too big a program to know.
    We can all fit the basic semantics in our heads, but not all the intricate details
    of how it actually works. How many people know descriptors or meta classes like
    the back of their hand? I have to look up that stuff on occasion, so nobody knows
    the whole system.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 没有人完全了解整个系统，因为这个程序太大了，不可能全部了解。我们都可以把基本语义记在脑子里，但并不是所有实际运作的复杂细节。有多少人像背书一样熟悉描述符或元类？我有时不得不查阅这些资料，所以没有人完全了解整个系统。
- en: '**Driscoll**: So where do you see Python going as a language, as a whole? Do
    you see it getting more popular in certain fields, or is Python getting into legacy
    status like C++?'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 那么，您如何看待Python作为一门语言的整体走向？您认为它在某些领域会变得更加流行，还是Python正像C++一样进入遗产状态？'
- en: '**Cannon**: Python is in an interesting position today, where there are very
    few places where Python hasn''t penetrated into as a major player. Sure, there
    are certain areas, like low-level operating systems and kernel development, that
    don''t suit Python, but otherwise it can feel like Python is pretty much everywhere.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: Python今天处于一个有趣的地位，几乎没有任何地方Python没有渗透成为主要玩家。当然，有一些领域，比如低级操作系统和内核开发，不适合Python，但除此之外，感觉Python几乎无处不在。'
- en: The one place I know we're still second with Python is in data science. I think
    our growth trends project that Python won't immediately overtake R as a data science
    language in the next couple of years at least. But long term, I do think that
    Python will catch up. Otherwise, I just don't know very many other fields, that
    don't require a systems language, where we aren't competitive for first place
    with Python.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我知道的一个地方，Python在数据科学领域仍然处于第二的位置。我认为我们的增长趋势预测表明，至少在未来几年内，Python不会立即超过R成为数据科学语言。但从长远来看，我认为Python会迎头赶上。否则，我真的不知道有多少其他领域，不需要系统语言，我们还没有在Python上取得第一名。
- en: I suppose another area, where Python isn't so strong, may be desktop apps, to
    a certain extent. Even on the desktop, people use us, so it's not like it's devoid,
    but there's just a lot of competition in that space. In the long term, and we
    might even be there already, we will hit the tipping point where there's so much
    Python code everywhere, that Python itself will probably never go away.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为Python在桌面应用程序方面可能不是那么强大，在某种程度上。即使在桌面上，人们也在使用我们，所以它并不是完全空白，但那个领域竞争非常激烈。从长远来看，我们可能已经到达了这样一个转折点，即到处都有如此多的
    Python 代码，以至于 Python 本身可能永远不会消失。
- en: '**Brett Cannon: ''In the long term, and we might even be there already, we
    will hit the tipping point where there''s so much Python code everywhere, that
    Python itself will probably never go away.''**'
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''从长远来看，我们可能已经到达了这样一个转折点，即到处都有如此多的 Python 代码，以至于 Python 本身可能永远不会消失。''**'
- en: Hopefully, Python will never be uttered in the same passing breath as COBOL,
    and maybe we'll be loved a little bit more and for longer, but I don't see us
    ever really going anywhere. I think there's just too much code at this point to
    have us ever disappear.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 希望Python永远不会和COBOL一样被轻率地提及，也许我们会受到更多的喜爱，并且持续更久，但我看不到我们真的会消失。我认为现在有太多的代码，我们永远不会消失。
- en: '**Driscoll**: Python is one of the major languages in the current AI and machine
    learning boom. What do you think makes Python such a good language for this?'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: Python 是当前人工智能和机器学习热潮中的主要语言之一。您认为是什么使得 Python 成为这种领域的优秀语言？'
- en: '**Cannon**: I think the ease of learning Python is what makes it good for AI.
    The people currently working in AI has expanded beyond just software developers,
    and now encompasses people like data scientists, who do not write code constantly.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 我认为 Python 学习的简便性使其成为人工智能领域的良好选择。目前从事人工智能工作的人员已经超越了仅仅是软件开发者，现在还包括像数据科学家这样的人，他们并不经常编写代码。'
- en: That means that there is a desire for a programming language that can be easily
    taught to non-programmers. Python fits that need nicely. You can look at how Python
    has garnered traction with people in the sciences and in computer science education,
    to see how this is not a new trend.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着人们对于一种可以轻松教授非程序员的编程语言有着强烈的愿望。Python 很好地满足了这一需求。你可以看看 Python 如何在科学和计算机科学教育领域获得人们的青睐，以了解这并不是一个新趋势。
- en: '**Driscoll**: Should people move over to Python 3 now?'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 人们现在应该转向 Python 3 吗？'
- en: '**Cannon**: As someone who helped to make Python 3 come about, I''m not exactly
    an unbiased person to ask about this. I obviously think people should make the
    switch to Python 3 immediately, to gain the benefits of what has been added to
    the language since Python 3.0 first came out.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 作为帮助 Python 3 诞生的人之一，我并不是一个完全无偏见的人来询问这个问题。我显然认为人们应该立即切换到 Python
    3，以获得自 Python 3.0 首次发布以来语言所增加的好处。'
- en: '**Brett Cannon: ''I hope people realize that the transition to Python 3 can
    be done gradually, so the switch doesn''t have to be abrupt or especially painful.''**'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''我希望人们意识到，向 Python 3 的过渡可以逐步进行，这样切换就不必是突然的或特别痛苦的。''**'
- en: I hope people realize that the transition to Python 3 can be done gradually,
    so the switch doesn't have to be abrupt or especially painful. Instagram switched
    in nine months, while continuing to develop new features, which shows that it
    can be done.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望人们意识到，向 Python 3 的过渡可以逐步进行，这样切换就不必是突然的或特别痛苦的。Instagram 在九个月内完成了切换，同时还在开发新功能，这表明这是可以做到的。
- en: '**Driscoll**: Looking ahead, what''s happening with Python 4?'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 展望未来，Python 4 发生了什么？'
- en: '**Cannon**: The Python 4 thing is a whole conversation of its own, of course.
    I haven''t heard much about Python 4, and I''d be happy to hear about it. It''s
    mythical and it doesn''t exist. Python 4 is like Py4k dreaming versus Py3k. Just
    where could the language go?'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: Python 4 的事情是一个完整的对话，当然。我并没有听到太多关于 Python 4 的信息，我很乐意听到关于它的讨论。它是神话般的，实际上并不存在。Python
    4 就像是 Py4k 的梦想与 Py3k 的对比。语言可能走向何方呢？'
- en: When it becomes time to do Python 4, we'll probably clean up the standard library
    a good amount and strip it down. There are some language elements we'll probably
    finally get rid of, instead of leaving them in there for compatibility with Python
    2.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们开始着手进行 Python 4 的开发时，我们可能会对标准库进行大量的清理和精简。有些语言元素我们可能会最终决定去除，而不是为了与 Python
    2 的兼容性而保留它们。
- en: '**Brett Cannon: ''When it''s time to do Python 4, we''ll probably clean up
    the standard library a good amount, and strip it down.''**'
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''当进行 Python 4 的开发时，我们可能会对标准库进行大量的清理，并对其进行精简。''**'
- en: 'For Python 4, we''ll likely have a tracing garbage collector, instead of reference
    counting to get that parallelism. I don''t know yet, but that''s where I see it
    going: more or less the same, especially because we''ve come to rely more on the
    things that the community has built up around Python. I mean, one of the reasons
    we have huge standard libraries, is because it negates the internet, right?'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 对于Python 4，我们可能会有一个跟踪垃圾回收器，而不是使用引用计数来获得并行性。我还不知道，但我看到它的发展方向是：更多或更少相同，特别是因为我们已经更多地依赖于社区围绕Python建立起来的事物。我的意思是，我们之所以有庞大的标准库，部分原因是因为它抵消了互联网，对吧？
- en: Python itself predates Unicode as an official standard, because Python first
    went public in February 1991 and Unicode 1.0 went final in October 1991\. I wasn't
    aware of that. I had to look it up, because it's one of those things where people
    ask me, "Hey, why didn't you do Unicode from the beginning like Java?" It's like,
    well, we predate Unicode, so that's why!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: Python本身在Unicode成为官方标准之前就已经存在了，因为Python首次公开是在1991年2月，而Unicode 1.0在1991年10月最终确定。我并不知道这一点。我不得不查一下，因为这是那种人们问我，“嘿，你为什么不像Java那样从一开始就使用Unicode？”的事情。就像，嗯，我们比Unicode早，所以这就是原因！
- en: So in the future, I don't think the standard library will need to be quite as
    big as it is today. We don't need it to be if you can just `pip` install the equivalent
    libraries.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在未来，我认为标准库不需要像今天这样大了。如果你能通过`pip`安装等效库，我们就不需要它那么大。
- en: We're lucky enough to have a vibrant community, so we have lots of alternative
    third-party libraries that are of such a high standard, that we can probably thin
    out the standard library and lower the maintenance burden on the core developers.
    I think we can do this in some future Python releases without any risk to the
    community being able to access quality modules. I think it'll make Python easier
    and leaner, and just better to work with.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 我们很幸运有一个充满活力的社区，所以我们有很多高质量的第三方库，我们可以减少标准库，降低核心开发者的维护负担。我认为我们可以在未来的Python版本中这样做，而不会对社区访问高质量模块造成任何风险。我认为这将使Python更简单、更精简，并且更容易使用。
- en: '**Brett Cannon: ''So in Python 4, I don''t think the standard library will
    need to be quite as big as it is today.''**'
  id: totrans-78
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布赖特·卡农：**“所以，在Python 4中，我认为标准库不需要像今天这样大了。”'
- en: That's what I suspect we'll do, but I don't get to make that call. It sounds
    like a good dream anyway. So yes, hopefully! I'm yet to have anyone tell me I'm
    completely insane when I answer questions about Python 4 with these ideas, which
    is a good litmus test.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我怀疑我们将要做的，但我没有做出这个决定的权利。无论如何，这听起来像是一个美好的梦想。所以，是的，希望如此！到目前为止，还没有人告诉我，当我用这些想法回答关于Python
    4的问题时，我是完全疯狂的，这是一个很好的试金石。
- en: '**Driscoll**: What do you think is driving the recent and growing interest
    in MicroPython?'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**你认为是什么驱使了最近对MicroPython日益增长的兴趣？'
- en: '**Cannon**: People do keep asking me about writing about MicroPython. While
    I don''t use it myself, I think that it must be getting bigger, because I keep
    getting asked about it! I''m willing to bet it''s because of the education sector,
    with a lot of people using microbits and all that stuff. So that''s probably where
    all the MicroPython interest is coming from.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡农：**人们一直在问我关于写MicroPython的事情。虽然我自己没有使用它，但我认为它必须越来越大，因为我一直在被问到！我愿意打赌这是由于教育领域，很多人在使用microbits和其他东西。所以，MicroPython的兴趣可能就是从这里来的。'
- en: '**Driscoll**: How can we all start to contribute to the Python language? How
    do we get started?'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**我们如何开始为Python语言做出贡献？我们如何开始？'
- en: '**Cannon**: We have this thing called the Dev Guide, which I started writing
    back in 2011\. Its full name is the *Python Developer''s Guide*. Basically, the
    Dev Guide outlines everything you need to know so that you can contribute to the
    Python language.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡农：**我们有一个叫做开发者指南的东西，我是在2011年开始写的。它的全名是《Python开发者指南》。基本上，《开发者指南》概述了你需要知道的一切，以便你可以为Python语言做出贡献。'
- en: '**Brett Cannon: ''The Dev Guide outlines everything you need to know so that
    you can contribute to the Python language.''**'
  id: totrans-84
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布赖特·卡农：**“《开发者指南》概述了你需要知道的一切，以便你可以为Python语言做出贡献。”'
- en: The Dev Guide (*https://devguide.python.org/*) shows you how to get the Python
    source code, compile it and run the test suite. It offers suggestions for how
    you can find things that you'd like to contribute. You'll also find the documentation
    for core developers, which shows you how you can do a code review and everything
    else.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 开发指南（*https://devguide.python.org/*）展示了如何获取Python源代码，编译它并运行测试套件。它还提供了关于如何找到你想要贡献的内容的建议。你还可以找到核心开发者的文档，它展示了你如何进行代码审查以及所有其他内容。
- en: The Dev Guide is a rather large document at this point and it's kind of taken
    on a life of its own. I just tell people to go and read the Dev Guide, and try
    to have an idea about what you want to help with. Pick a module that you're really
    familiar with, that you could help to fix bugs in, or that you feel very comfortable
    with.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 开发指南现在是一个相当大的文档，它已经有点像拥有了生命。我只是告诉人们去读开发指南，并尝试了解一下你想要帮助什么。选择一个你非常熟悉的模块，你可以帮助修复其中的bug，或者你感到非常舒适的模块。
- en: We have a core mentorship mailing list as well, which is not archived on purpose
    so that you can ask *any* question, and you don't have to worry about someone
    finding it five years later. So sign up for core mentorship, read the Dev Guide
    and then find something that you want to do!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有一个核心导师邮件列表，它是故意没有存档的，这样你就可以问任何问题，你不必担心有人在五年后找到它。所以请注册核心导师，阅读开发指南，然后找到你想要做的事情！
- en: '**Driscoll**: Can we contribute to Python through code reviews?'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 我们可以通过代码审查为Python做出贡献吗？'
- en: '**Cannon**: Yes, in fact at this point I''ve actually started to try to nudge
    people towards doing code reviews, so if you''re really familiar with a module
    and there''s a pull request on GitHub for it, please go for it and do a code review
    for that pull request.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 是的，事实上，到现在我已经开始尝试引导人们去做代码审查了，所以如果你真的熟悉一个模块，并且GitHub上有一个关于它的pull
    request，请去做代码审查。'
- en: If you feel comfortable doing code reviews and reviewing stuff on a module that
    you use regularly or not, that's a really great way to contribute to the development
    of the Python language.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得舒服，无论是定期还是不定期地对一个你经常使用的模块进行代码审查和审查，那真的是为Python语言的发展做出贡献的一种非常好的方式。
- en: '**Brett Cannon: ''If you feel comfortable doing code reviews and reviewing
    stuff on a module that you use regularly or not, that''s a really great way to
    contribute to the development of the Python language.''**'
  id: totrans-91
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''如果你觉得舒服，无论是定期还是不定期地对一个你经常使用的模块进行代码审查和审查，那真的是为Python语言的发展做出贡献的一种非常好的方式。''**'
- en: The biggest limitation we have, in driving Python forwards, is the bandwidth
    on the core developers. So your code reviews can really help to make the projects
    easier to manage. Please help us to get more patches in, and bugs fixed, by joining
    in.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在推动Python向前发展方面，我们最大的限制是核心开发者的带宽。所以你的代码审查真的可以帮助使项目更容易管理。请加入我们，帮助我们接收更多的补丁，修复更多的bug。
- en: '**Driscoll**: How else can we contribute to the Python language?'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 我们还能以其他什么方式为Python语言做出贡献？'
- en: '**Cannon**: A big help to the Python community is to answer questions that
    you see people asking about Python, and to answer those questions by just being
    open and honest. It''s also important, of course, not to be a jerk when you talk
    about Python. It''s fine to just be nice about it.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 对Python社区的一个大帮助就是回答你看到人们关于Python提出的问题，并且通过保持开放和诚实来回答这些问题。当然，在谈论Python时不要表现得像个混蛋也是很重要的。只是表现得友好一点是可以的。'
- en: '**Driscoll**: Are there any Python projects downstream that someone can jump
    in and contribute towards?'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 有没有哪些Python项目是有人可以加入并为其做出贡献的？'
- en: '**Cannon**: Yes, if you don''t find a current module that interests you, then
    you might find it interesting to contribute to some of the Python projects more
    downstream that need the help. For instance, the next version of the Python package
    index can always use some help. Jump on board if you find something downstream
    that you find interesting.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 是的，如果你没有找到让你感兴趣的当前模块，那么你可能对贡献一些需要帮助的更下游的Python项目感兴趣。例如，Python包索引的下一个版本总是需要一些帮助。如果你发现了一些你感兴趣的下游内容，就加入进来吧。'
- en: '**Driscoll**: How about starter projects?'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 关于入门项目怎么样？'
- en: '**Cannon**: Honestly, it''s really kind of hard to have starter projects. We
    typically have enough people who are involved and watching to just jump on and
    fix them instantly. So it''s hard to get started sometimes, which is why I''m
    starting to push for more of the pull request reviewing.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 诚实地讲，拥有启动项目真的很困难。我们通常有足够多的人参与和关注，可以立即跳上去修复它们。所以有时候很难开始，这也是为什么我开始推动更多的拉取请求审查。'
- en: '**Driscoll**: During PyCon, I see that there''s usually a sprint set on the
    Python language. What sort of things do you guys do in those PyCon sprints?'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 在 PyCon 期间，我看到通常会有一个关于 Python 语言的冲刺。你们在那些 PyCon 冲刺中都做些什么？'
- en: '**Cannon**: I''ve led a number of those PyCon sprints myself, and what we usually
    do is sit the Python core team down around some tables in one of the sprint rooms,
    and more or less just say, "Hey, if you want to contribute then come on in."'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**Cannon**: 我自己领导过许多那些 PyCon 冲刺，我们通常会把 Python 核心团队召集到冲刺房间的一些桌子旁，然后大致上就是，“嘿，如果你想贡献，那就进来吧。”'
- en: 'We tell PyCon sprint attendees the exact same things that we say to everyone
    who wants to contribute remotely: here''s the Dev Guide, read it, get your tool
    chain up and running, and look for something to work on. If you find something
    then go for it.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们告诉 PyCon 冲刺参与者与我们告诉所有想要远程贡献的人完全一样的话：这里有开发者指南，阅读它，设置你的工具链并运行，然后寻找可以工作的东西。如果你找到了，就去尝试吧。
- en: '**Brett Cannon: ''We tell PyCon sprint attendees...here''s the Dev Guide, read
    it, get your tool chain up and running, and look for something to work on.''**'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''我们告诉 PyCon 冲刺参与者...这里有开发者指南，阅读它，设置你的工具链并运行，然后寻找可以工作的东西。''**'
- en: Of course, at the sprints, we're there in the room to answer any questions that
    anyone may have. Typically, someone like R. David Murray will find a list of easy
    bugs to hand out to people in the sprint room. It's a great opportunity for people
    to come in and say hello. If they want to start contributing, then they have core
    Python people in the room, so they have a quick turnaround time for answers, instead
    of having to wait until someone sees the email and replies. It's very much just
    turn to the person to your left, or to your right, and you can ask and you get
    your answer.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，在冲刺期间，我们会在房间里回答任何可能的问题。通常，像 R. David Murray 这样的人会找到一些简单的错误列表，分发给冲刺房间的人。这是一个很好的机会，让人们进来打个招呼。如果他们想开始贡献，那么房间里就有核心的
    Python 人员，这样他们就可以快速得到答案，而不是等到有人看到邮件并回复。这非常简单，就是转向你左边或右边的人，然后你可以提问并得到答案。
- en: Sometimes we'll give a short presentation to set out where we're going during
    the sprint, and if people can join in then that's great. We say, "Here are the
    tools, here's how you run the build, and here's how you run the tests." Then we
    get coding.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们会做一个简短的演示，说明在冲刺期间我们将要做什么，如果人们可以加入那就太好了。我们说，“这里有一些工具，这是如何运行构建，以及如何运行测试。”然后我们开始编码。
- en: The sprints are very laid back and relaxing compared to the rest of a conference.
    I thoroughly recommend them when you can make them. It's just not as hectic in
    a sprint room as in the main area of a show. That's because there are less people,
    and everyone's just kind of sitting down and relaxing. There are no transitions,
    except to and from lunch, and it's easier to find people to have conversations
    with, which is great. So sprints are definitely fun to go to, and I'm going to
    try to go to one in the next year or two if I can.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 与会议的其他部分相比，冲刺非常轻松和放松。我强烈推荐你们在可能的时候参加。在冲刺房间里，没有像主展区那样忙碌。那是因为人比较少，大家只是坐下来放松。没有过渡，除了午餐前后的过渡，更容易找到人交谈，这很好。所以冲刺绝对是有趣的，我打算在明年或后年如果可能的话去参加一次。
- en: '**Brett Cannon: ''We say, "Here are the tools, here''s how you run the build,
    and here''s how you run the tests." Then we get coding.''**'
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Brett Cannon: ''我们说，''这里有一些工具，这是如何运行构建，以及如何运行测试。然后我们开始编码。''**'
- en: '**Driscoll**: Some other teams have nice little enticements too, like if you
    are helping out with Russell Keith-Magee''s BeeWare project, where you get a challenge
    coin on your first contribution. Have you seen those?'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 一些其他团队也有一些小小的诱惑，比如如果你在帮助 Russell Keith-Magee 的 BeeWare 项目，你的第一次贡献就能得到一个挑战币。你见过那些吗？'
- en: '**Cannon**: Yes, if you help Russell''s project out he gives you a challenge
    coin. It''s a big and impressive metal coin. The one I''m holding in my hand right
    now is one that I earned from Russell and it takes up a good chunk of my Nexus
    5X screen!'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡农**：是的，如果你帮助了 Russell 的项目，他会给你一个挑战币。那是一个大而令人印象深刻的金属币。我现在手里拿着的是我从 Russell
    那里赚来的一个，它几乎占满了我 Nexus 5X 屏幕的大部分空间！'
- en: 'Here''s how I earned my challenge coin from Russell: if you make a contribution
    that the BeeWare project accepts, such as docs or what have you, then you get
    one of these coins the next time you see Russell in person. So in my case, I happened
    to be on Twitter one day when Russell tweeted about an example repo, and I found
    a couple of typos. I sent a pull request to get them fixed and that''s how I finally
    got my coin. I''d been wanting one for ages, because I think it is a really cool
    token of appreciation, and anyone can earn one if they contribute.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我从 Russell 那里赚得挑战币的方式：如果你做出的贡献被 BeeWare 项目接受，比如文档或者别的什么，那么你下次见到 Russell 时就会得到一枚这样的币。所以在我这个例子中，我碰巧有一天在推特上看到
    Russell 发布了一个示例仓库，我发现了一些错误。我发送了一个拉取请求来修复它们，这就是我最终得到硬币的方式。我已经想要一枚很久了，因为我认为它是一个非常酷的感谢象征，任何人只要做出贡献就能得到一枚。
- en: If you don't know anything about challenge coins, then 99% Invisible had a really
    good podcast episode explaining these things ([https://99percentinvisible.org/episode/coin-check/](https://99percentinvisible.org/episode/coin-check/)).
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对挑战币一无所知，那么99% 无声的播客有一期非常好的节目解释了这些内容（[https://99percentinvisible.org/episode/coin-check/](https://99percentinvisible.org/episode/coin-check/)）。
- en: '**Brett Cannon: ''If you don''t know anything about challenge coins, then 99%
    Invisible had a really good podcast episode explaining these things.''**'
  id: totrans-111
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**布雷特·卡农：''如果你对挑战币一无所知，那么99% 无声的播客有一期非常好的节目解释了这些内容。''**'
- en: '**Driscoll**: Does the Python core team offer some incentives like Russell''s
    challenge coins? What do you feel is the core spirit and incentive for people
    to contribute to the Python language?'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：Python 核心团队是否提供像 Russell 的挑战币这样的激励措施？你认为人们为 Python 语言做出贡献的核心精神和动力是什么？'
- en: '**Cannon**: I''ve always wanted to make a challenge coin for Python, both for
    people who are core developers and for people who have contributed a patch. That''s
    a neat idea. But I also don''t travel as much as Russell, so it''s a little harder
    because I''d need to be at the conferences that people are attending in order
    to give them the coins. But it''s a cool idea and I wish more projects did it.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**卡农**：我一直想为 Python 制作挑战币，无论是为了核心开发者还是为了贡献补丁的人。这是一个不错的主意。但我没有 Russell 那么经常旅行，所以这有点困难，因为我需要出现在人们参加的会议上才能给他们发币。但这确实是个好主意，我希望有更多的项目这么做。'
- en: The Python core typically takes a very, kind of, passive approach to incentives.
    It's true, but that is really just because we're putting most of our time into
    the Python language elements that we want to get done, and we know that a lot
    of people are going to appreciate. That really is our deep incentive to contribute
    to Python, and I welcome everyone to join in, whether remotely, or during a conference
    sprint.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Python 核心通常采取一种非常，可以说，被动的激励方式。这是真的，但那主要是因为我们把大部分时间都投入到我们想要完成的 Python 语言元素上，我们知道很多人会欣赏这一点。这真的是我们为
    Python 做贡献的深层动力，我欢迎每个人无论远程还是参加会议冲刺都加入进来。
- en: '**Driscoll**: Thank you, Brett Cannon.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：谢谢，布雷特·卡农。'
