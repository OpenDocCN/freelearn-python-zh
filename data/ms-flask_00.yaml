- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Flask is a web framework for Python that is specifically designed to provide
    the minimum amount of functionality that is needed to create web apps. Unlike
    other web frameworks, especially those in other languages, Flask does not have
    an entire ecosystem of libraries bundled with it for things such as database querying
    or form handling. Flask instead prefers to be an implementation agnostic.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Flask是Python的一个Web框架，专门设计为提供创建Web应用程序所需的最少功能。与其他Web框架不同，特别是其他语言中的框架，Flask没有整个与其捆绑的库生态系统，用于诸如数据库查询或表单处理之类的功能。相反，Flask更喜欢是一个实现不可知的框架。
- en: The main feature of this setup is that it allows the programmer to design their
    app and their tools in any way they want. Not providing their own version of common
    abstractions also means that the standard library can be used much more often
    than other frameworks, which guarantees their stability and readability by other
    Python programmers. Because the Flask community is rather large, there are also
    many different community-provided ways of adding common functionality. One of
    the main focuses of this book is to introduce these extensions and find out how
    they can help avoid reinventing the wheel. The best part about these extensions
    is that if you don't need their extra functionality, you don't need to include
    them and your app will stay small.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设置的主要特点是它允许程序员以任何他们想要的方式设计他们的应用程序和工具。不提供常见抽象的自己版本也意味着标准库可以比其他框架更常用，这保证了它们的稳定性和其他Python程序员的可读性。由于Flask社区相当庞大，也有许多不同的社区提供的添加常见功能的方式。本书的主要重点之一是介绍这些扩展，并找出它们如何帮助避免重复造轮子。这些扩展的最大优点是，如果您不需要它们的额外功能，您不需要包含它们，您的应用程序将保持较小。
- en: The main downside of this setup is that the vast majority of new Flask users
    do not know how to properly structure large applications and end up creating an
    unintelligible and unmaintainable mess of code. This is why the other main focus
    of this book is how to create a Model View Controller (MVC) architecture with
    Flask apps.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这种设置的主要缺点是，绝大多数新的Flask用户不知道如何正确地构建大型应用程序，最终创建了难以理解和难以维护的代码混乱。这就是本书的另一个主要重点，即如何在Flask应用程序中创建模型视图控制器（MVC）架构。
- en: Originally invented to design desktop user interfaces, the MVC setup allows
    the data handling (models), user interaction (controllers), and user interface
    (views) to be separated into three different components.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 最初是为设计桌面用户界面而发明的MVC设置允许数据处理（模型）、用户交互（控制器）和用户界面（视图）分离为三个不同的组件。
- en: '![Preface](img/B03929_Preface.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![前言](img/B03929_Preface.jpg)'
- en: Separating these three different components allows the programmer to reuse code
    rather than re-implement the same functionality for each web page. For example,
    if the data handling code wasn't split into its own separate functions, we would
    have to write the same database connection code and SQL queries in each of the
    functions that render a web page.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 将这三个不同的组件分开允许程序员重用代码，而不是为每个网页重新实现相同的功能。例如，如果数据处理代码没有分割成自己独立的函数，我们将不得不在渲染网页的每个函数中编写相同的数据库连接代码和SQL查询。
- en: A large amount of research and a lot of painful first-hand experience of what
    can go wrong while developing web applications has made this book the most comprehensive
    resource on Flask available, so I sincerely hope that you will enjoy reading it.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 大量的研究和大量的痛苦的第一手经验使本书成为最全面的Flask资源，因此我真诚地希望您会喜欢阅读它。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](ch01.html "Chapter 1. Getting Started"), *Getting Started*, helps
    readers set up a Flask environment for development using the best practices for
    Python projects. Readers are given a very basic skeleton Flask app that is built
    throughout the book.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 第1章，“入门”，帮助读者使用Python项目的最佳实践设置Flask开发环境。读者将获得一个非常基本的Flask应用程序框架，该框架将贯穿整本书。
- en: '[Chapter 2](ch02.html "Chapter 2. Creating Models with SQLAlchemy"), *Creating
    Models with SQLAlchemy*, shows how to use the Python database library SQLAlchemy
    in conjunction with Flask to create an object-oriented API for your database.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 第2章，“使用SQLAlchemy创建模型”，展示了如何使用Python数据库库SQLAlchemy与Flask一起创建面向对象的数据库API。
- en: '[Chapter 3](ch03.html "Chapter 3. Creating Views with Templates"), *Creating
    Views with Templates*, shows how to use Flask''s templating system, Jinja, to
    dynamically create HTML by leveraging your SQLAlchemy models.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 第3章，“使用模板创建视图”，展示了如何使用Flask的模板系统Jinja，通过利用SQLAlchemy模型动态创建HTML。
- en: '[Chapter 4](ch04.html "Chapter 4. Creating Controllers with Blueprints"), *Creating
    Controllers with Blueprints*, covers how to use Flask''s blueprints feature in
    order to organize your view code while also avoiding repeating yourself.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 第4章，“使用蓝图创建控制器”，介绍了如何使用Flask的蓝图功能来组织您的视图代码，同时避免重复。
- en: '[Chapter 5](ch05.html "Chapter 5. Advanced Application Structure"), *Advanced
    Application Structure*, using the knowledge gained in the last four chapters,
    explains how to reorganize the code files in order to create a more maintainable
    and testable application structure.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章，“高级应用程序结构”，利用前四章所学的知识，解释了如何重新组织代码文件，以创建更易维护和可测试的应用程序结构。
- en: '[Chapter 6](ch06.html "Chapter 6. Securing Your App"), *Securing Your App*,
    explains how to use various Flask extensions in order to add a login system with
    permissions-based access to each view.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章，“保护您的应用程序”，解释了如何使用各种Flask扩展来添加具有基于权限的访问权限的登录系统。
- en: '[Chapter 7](ch07.html "Chapter 7. Using NoSQL with Flask"), *Using NoSQL with
    Flask*, shows what a NoSQL database is and how to integrate one into your application
    when it allows more powerful features.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章，“在Flask中使用NoSQL”，展示了NoSQL数据库是什么，以及如何在允许更强大功能时将其集成到您的应用程序中。
- en: '[Chapter 8](ch08.html "Chapter 8. Building RESTful APIs"), *Building RESTful
    APIs*, shows how to provide the data stored in the application''s database to
    third parties in a secure and easy-to-use manner.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](ch08.html "第8章。构建RESTful API")，“构建RESTful API”，展示了如何以安全且易于使用的方式向第三方提供应用程序数据库中存储的数据。'
- en: '[Chapter 9](ch09.html "Chapter 9. Creating Asynchronous Tasks with Celery"),
    *Creating Asynchronous Tasks with Celery*, explains how to move expensive or time-consuming
    programs to the background so the application does not slow down.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](ch09.html "第9章。使用Celery创建异步任务")，“使用Celery创建异步任务”，解释了如何将昂贵或耗时的程序移到后台，以便应用程序不会变慢。'
- en: '[Chapter 10](ch10.html "Chapter 10. Useful Flask Extensions"), *Useful Flask
    Extensions*, explains how to leverage popular Flask extensions in order to make
    your app faster, add more features, and make debugging easier.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](ch10.html "第10章。有用的Flask扩展")，“有用的Flask扩展”，解释了如何利用流行的Flask扩展，以使您的应用程序更快，添加更多功能，并使调试更容易。'
- en: '[Chapter 11](ch11.html "Chapter 11. Building Your Own Extension"), *Building
    Your Own Extension*, teaches you how Flask extensions work and how to create your
    own.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](ch11.html "第11章。构建您自己的扩展")，“构建您自己的扩展”，教您Flask扩展的工作原理以及如何创建您自己的扩展。'
- en: '[Chapter 12](ch12.html "Chapter 12. Testing Flask Apps"), *Testing Flask Apps*,
    explains how to add unit tests and user interface tests to your app for quality
    assurance and reducing the amount of buggy code.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](ch12.html "第12章。测试Flask应用")，“测试Flask应用”，解释了如何为您的应用程序添加单元测试和用户界面测试，以确保质量并减少错误代码的数量。'
- en: '[Chapter 13](ch13.html "Chapter 13. Deploying Flask Apps"), *Deploying Flask
    Apps*, explains how to take your completed app from development to being hosted
    on a live server.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[第13章](ch13.html "第13章。部署Flask应用")，“部署Flask应用”，解释了如何将您完成的应用程序从开发转移到托管在实时服务器上。'
- en: What you need for this book
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要为本书做好准备
- en: To get started with this book, all you will need is a text editor of your choice,
    a web browser, and Python installed on your machine.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始阅读本书，您只需要选择一个文本编辑器，一个网络浏览器，并在您的计算机上安装Python。
- en: Windows, Mac OS X, and Linux users should all be able to easily follow along
    with the content of this book.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Windows，Mac OS X和Linux用户都应该能够轻松地跟上本书的内容。
- en: Who this book is for
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁写的
- en: This book is written for web developers who are already somewhat familiar with
    Flask and want to take their Flask understanding from introductory to master level.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为已经对Flask有一定了解并希望将他们的Flask理解从入门到精通的Web开发人员编写的。
- en: Conventions
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些区分不同类型信息的文本样式。以下是这些样式的一些示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `first()` and `all()` methods return a value and therefore end the chain."'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码单词，数据库表名，文件夹名，文件名，文件扩展名，路径名，虚拟URL，用户输入和Twitter句柄显示如下：“`first()`和`all()`方法返回一个值，因此结束链。”
- en: 'A block of code is set as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都以以下方式编写：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Hit another button that says **Download Bootstrap** and you will start
    to download a Zip file."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。您在屏幕上看到的单词，例如菜单或对话框中的单词，会以这样的方式出现在文本中：“点击另一个按钮，上面写着**下载Bootstrap**，然后您将开始下载一个Zip文件。”'
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Warnings or important notes appear in a box like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要说明会出现在这样的框中。
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Tips and tricks appear like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会以这种方式出现。
