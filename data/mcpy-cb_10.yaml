- en: Controlling the ESP8266
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制ESP8266
- en: In this chapter, we will introduce the Adafruit Feather HUZZAH ESP8266 microcontroller.
    The ESP8266 is one of the most popular MicroPython hardware options when your
    embedded project needs to have support for internet connectivity. This connectivity
    is achieved using the board's built-in Wi-Fi capabilities.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍Adafruit Feather HUZZAH ESP8266微控制器。当您的嵌入式项目需要支持互联网连接时，ESP8266是最受欢迎的MicroPython硬件选项之一。通过板上内置的Wi-Fi功能实现此连接。
- en: 'This chapter will explore two main ways to get REPL access on the board: through
    a USB connection, and also wireless over Wi-Fi. We will also look at a number
    of recipes that cover different aspects of interacting with the Wi-Fi features
    on the board.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将探讨获取板上REPL访问的两种主要方法：通过USB连接，以及通过Wi-Fi无线连接。我们还将介绍一些配方，涵盖与板上Wi-Fi功能的不同交互方面。
- en: By the end of this chapter, you will have learned all the core skills necessary
    so that you can get productive with this board and start building your own embedded
    projects using this versatile and inexpensive piece of internet-connected hardware.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将学会所有必要的核心技能，以便可以高效地使用该板，并开始使用这种多功能且价格低廉的互联网连接硬件构建自己的嵌入式项目。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Using the REPL over a serial connection
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过串行连接使用REPL
- en: Scanning for available Wi-Fi networks
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 扫描可用的Wi-Fi网络
- en: Configuring settings for AP mode
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 配置AP模式的设置
- en: Connecting to an existing Wi-Fi network
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到现有的Wi-Fi网络
- en: Using the WebREPL over Wi-Fi
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过Wi-Fi使用WebREPL
- en: Transferring files with the WebREPL CLI
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用WebREPL CLI传输文件
- en: Controlling the blue and red LEDs
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制蓝色和红色LED
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: The code files for this chapter can be found in the `Chapter10` folder of this
    book's GitHub repository, available at [https://github.com/PacktPublishing/MicroPython-Cookbook](https://github.com/PacktPublishing/MicroPython-Cookbook).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以在本书的GitHub存储库的`Chapter10`文件夹中找到，网址为[https://github.com/PacktPublishing/MicroPython-Cookbook](https://github.com/PacktPublishing/MicroPython-Cookbook)。
- en: CircuitPython 3.1.2 was used for all the recipes in this chapter.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的所有配方都使用了CircuitPython 3.1.2。
- en: The Adafruit Feather HUZZAH ESP8266
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Adafruit Feather HUZZAH ESP8266
- en: The ESP8266 is an inexpensive microcontroller that's manufactured by Espressif
    Systems. It can run MicroPython and supports a full TCP/IP stack. Its built-in
    Wi-Fi supports 802.11b/g/n. The Adafruit Feather HUZZAH ESP8266 is a development
    board that comes with USB support for power and data connectivity.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ESP8266是由Espressif Systems制造的廉价微控制器。它可以运行MicroPython，并支持完整的TCP/IP堆栈。其内置的Wi-Fi支持802.11b/g/n。Adafruit
    Feather HUZZAH ESP8266是一款开发板，具有用于电源和数据连接的USB支持。
- en: 'The processor on this board runs at 80 MHz and comes with 4 MB of flash storage.
    The board comes with nine GPIO pins that can be connected to a number of other
    components. The board comes in a number of different versions. The following photo
    shows what this board looks like with the headers option:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 该板上的处理器运行在80 MHz，并配备了4 MB的闪存。该板配有九个GPIO引脚，可以连接到许多其他组件。该板有多个不同版本。以下照片显示了带有引脚选项的该板的外观：
- en: '![](assets/829cc862-59b3-4010-8e2e-3a9d44794a1f.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/829cc862-59b3-4010-8e2e-3a9d44794a1f.png)'
- en: 'The board also comes in a stacking header configuration that makes it possible
    to plug in additional components on top of the board, such as OLED displays and
    buttons. These upgrades can be plugged right in, without the need for soldering
    or breadboards. The following photo shows this version of the board, which has
    a stacking header:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 该板还具有堆叠式引脚配置，可以在板的顶部插入其他组件，如OLED显示屏和按钮。这些升级可以直接插入，无需焊接或面包板。以下照片显示了具有堆叠式引脚的板的版本：
- en: '![](assets/5467a9e0-0c89-4df8-a997-137d53bf4b15.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/5467a9e0-0c89-4df8-a997-137d53bf4b15.png)'
- en: 'You can also make your projects portable by powering the board with a rechargeable
    lithium ion polymer battery. These batteries can be connected to the board using
    its JST connector. The following photo shows a board connected to a lithium ion
    polymer battery:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过使用可充电锂聚合物电池为板载电源使您的项目具有便携性。这些电池可以使用其JST连接器连接到板上。以下照片显示了连接到锂聚合物电池的板：
- en: '![](assets/9967247a-f240-4e06-856a-6713b3559ad4.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/9967247a-f240-4e06-856a-6713b3559ad4.png)'
- en: The board has a built-in LiPoly charger, which can show the charging status
    using the indicator LED. The battery can then be charged whenever the board is
    connected with the USB cable.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 该板具有内置的LiPoly充电器，可以使用指示灯显示充电状态。只要板连接了USB电缆，电池就可以充电。
- en: Where can you buy these?
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您可以在哪里购买这些？
- en: This chapter uses the Adafruit Feather HUZZAH ESP8266 microcontroller. We recommend
    purchasing the version with a stacking header. The Adafruit Assembled Feather
    HUZZAH ESP8266 Wi-Fi microcontroller with stacking headers can be purchased directly
    from Adafruit ([https://www.adafruit.com/product/3213](https://www.adafruit.com/product/3213)).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 本章使用Adafruit Feather HUZZAH ESP8266微控制器。我们建议购买带有堆叠式引脚的版本。Adafruit已组装的Feather
    HUZZAH ESP8266 Wi-Fi微控制器带有堆叠式引脚，可以直接从Adafruit购买([https://www.adafruit.com/product/3213](https://www.adafruit.com/product/3213))。
- en: Using the REPL over a serial connection
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过串行连接使用REPL
- en: This recipe will show you how to get REPL access to the ESP8266 using a serial
    connection over USB. Even though the real power and excitement of this board comes
    from connecting to it wirelessly, the first thing we need to do is connect to
    it with a simple USB connection. Once this connection is set up, then you can
    proceed with the remaining recipes in this chapter, which set up your wireless
    settings so that you can unplug the board and interact with it completely wirelessly.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本配方将向您展示如何通过USB串行连接获取对ESP8266的REPL访问。尽管该板的真正功能和激动点来自于无线连接，但我们需要做的第一件事是通过简单的USB连接与其连接。设置好此连接后，您可以继续本章中的其余配方，设置无线设置，以便可以拔掉板并完全无线地与其交互。
- en: This recipe will help you get started with your own wireless embedded projects
    by setting up that initial connectivity to the board in order to establish wireless
    connectivity. It is also a valuable tool when you have a configured board that
    is facing connectivity issues and you want to get access to it to debug whatever
    Wi-Fi issues you might be facing.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将帮助您通过建立与板的初始连接来开始自己的无线嵌入式项目，以建立无线连接。当您的配置板面临连接问题并且您想要访问它以调试可能遇到的任何Wi-Fi问题时，它也是一个有价值的工具。
- en: Getting ready
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: Either macOS or a Linux computer can be used for this recipe, and you need the
    screen command to be available. On macOS, the screen application is built-in and
    thus requires no installation. On Ubuntu Linux, the screen command can be installed
    with the apt `install screen` command.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 此配方可以使用macOS或Linux计算机，并且需要可用的screen命令。在macOS上，screen应用程序是内置的，因此无需安装。在Ubuntu
    Linux上，可以使用apt `install screen`命令安装screen命令。
- en: How to do it...
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to use the REPL over a serial connection:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何通过串行连接使用REPL：
- en: Connect the ESP8266 to your computer using a USB cable.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用USB电缆将ESP8266连接到计算机。
- en: Open the Terminal application.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端应用程序。
- en: 'On most Linux systems, the name of the device should be `/dev/ttyUSB0`. Confirm
    that this device exists by running the following command in the Terminal:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在大多数Linux系统上，设备的名称应该是`/dev/ttyUSB0`。通过在终端中运行以下命令来确认该设备是否存在：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding command should run successfully if the ESP8266 was successfully
    detected by the operating system.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果ESP8266被操作系统成功检测到，上述命令应该成功运行。
- en: 'Run the following command to start a REPL session with the board:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令以启动与板的REPL会话：
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The previous command will start the `screen` command and connect to a device
    called `/dev/ttyUSB0` at a baud rate of 115,200 bits per second. If the connection
    was established successfully, you should see a message such as the following in
    the Terminal:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上面的命令将启动`screen`命令，并以每秒115,200比特的波特率连接到名为`/dev/ttyUSB0`的设备。如果连接成功建立，您应该在终端中看到以下消息：
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Execute the following code in the REPL:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中执行以下代码：
- en: '[PRE3]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The preceding block of code will import the `math` library and calculate the
    value of 8 to the power of 2.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 上面的代码块将导入`math`库并计算8的平方。
- en: How it works...
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The ESP8266 exposes a serial device over the USB connection. This serial device
    can then be interacted with using a Terminal emulator-like `screen`. Once the
    screen is connected, you can then gain access to the REPL and start executing
    Python code on the board. Whenever you execute Python code in the REPL, the commands
    are sent to the board to be executed, and then the results of the commands are
    transmitted back to the Terminal emulator over the serial connection.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ESP8266通过USB连接公开了一个串行设备。然后可以使用类似`screen`的终端仿真器与该串行设备进行交互。连接到screen后，您可以访问REPL并开始在板上执行Python代码。每当在REPL中执行Python代码时，命令都会被发送到板上执行，然后命令的结果通过串行连接传输回终端仿真器。
- en: There's more...
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: There are many excellent free Terminal emulators available on all major operating
    systems. `picocom` and `minicom` are popular alternatives to screen on Unix systems.
    On Windows, the Terminal emulator PuTTY can be used, while macOS has an application
    called CoolTerm that can be used for this purpose.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 所有主要操作系统上都有许多优秀的免费终端仿真器。`picocom`和`minicom`是Unix系统上screen的流行替代品。在Windows上，可以使用终端仿真器PuTTY，而macOS有一个名为CoolTerm的应用程序可以用于此目的。
- en: See also
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于这个配方的一些参考资料：
- en: Documentation on connecting to Adafruit Feather HUZZAH ESP8266 can be found
    at [https://learn.adafruit.com/adafruit-feather-huzzah-esp8266](https://learn.adafruit.com/adafruit-feather-huzzah-esp8266).
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接到Adafruit Feather HUZZAH ESP8266的文档可以在[https://learn.adafruit.com/adafruit-feather-huzzah-esp8266](https://learn.adafruit.com/adafruit-feather-huzzah-esp8266)找到。
- en: Details on the `picocom` command can be found at [https://github.com/npat-efault/picocom](https://github.com/npat-efault/picocom).
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`picocom`命令的详细信息可以在[https://github.com/npat-efault/picocom](https://github.com/npat-efault/picocom)找到。
- en: Scanning for available Wi-Fi networks
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扫描可用的Wi-Fi网络
- en: This recipe will show you how to use the ESP8266 to list all Wi-Fi networks
    that are available and can be connected to. We will introduce the MicroPython
    network library and explore how to use its objects to initialize the onboard Wi-Fi
    hardware.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将向您展示如何使用ESP8266列出所有可用的Wi-Fi网络，并且可以连接到这些网络。我们将介绍MicroPython网络库，并探讨如何使用它的对象来初始化板载Wi-Fi硬件。
- en: Once these components have been set up, we can use them to run a scan for wireless
    networks and store the results of that scan for further inspection. This recipe
    can provide you with useful techniques so that you can test the Wi-Fi capabilities
    of your board. Usually, listing wireless networks is the first step that's needed
    before you can proceed and connect to them later.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 设置好这些组件后，我们可以使用它们来扫描无线网络并将扫描结果存储以供进一步检查。这个配方可以为您提供有用的技术，以便您可以测试板的Wi-Fi功能。通常，在以后连接到它们之前，列出无线网络是需要的第一步。
- en: Getting ready
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL才能运行本配方中提供的代码。
- en: How to do it...
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to scan for available Wi-Fi networks:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何扫描可用的Wi-Fi网络：
- en: 'Run the following lines of code in the REPL:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中运行以下代码行：
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The network library has now been imported and a WLAN object has been created,
    which will provide a `station` interface. The following block of code will activate
    the `station` interface:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络库现在已经被导入，并且已经创建了一个WLAN对象，它将提供一个`station`接口。以下代码块将激活`station`接口：
- en: '[PRE5]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The following block of code will scan for all available wireless networks and
    store the results in the `networks` variable:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将扫描所有可用的无线网络并将结果存储在`networks`变量中：
- en: '[PRE6]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The following block of code will output the contents of the `networks` variable
    and show how many networks were found:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将输出`networks`变量的内容，并显示找到了多少个网络：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Run the following lines of code:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码行：
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Once executed, the code will extract the names of wireless networks and store
    them in a variable called `names`, which is then inspected.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 执行后，代码将提取无线网络的名称并将它们存储在一个名为`names`的变量中，然后进行检查。
- en: How it works...
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: MicroPython provides a module called `network` that can be used to interact
    with the Wi-Fi hardware on the ESP8266\. The WLAN object is instantiated and provided
    with `network.STA_IF` for its first argument. This will return an object that
    is created as a `station` interface.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: MicroPython提供了一个名为`network`的模块，可以用来与ESP8266上的Wi-Fi硬件进行交互。 WLAN对象被实例化，并提供了`network.STA_IF`作为其第一个参数。这将返回一个作为`station`接口创建的对象。
- en: The `station` interfaces are needed when you want to connect the board to existing
    Wi-Fi networks. Before a scan can be performed, the station must be activated
    by calling the `active` method with the `True` value. Then, the `scan` method
    can be called on the station, which will scan for available networks. This method
    returns a list of tuples that we store in the `networks` variable.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想要将板子连接到现有的Wi-Fi网络时，需要`station`接口。在执行扫描之前，必须通过调用`active`方法并传入`True`值来激活该接口。然后，可以在该接口上调用`scan`方法，该方法将扫描可用的网络。此方法返回一个元组列表，我们将其存储在`networks`变量中。
- en: We can then count the number of networks using the `len` function and loop through
    this list of tuples to extract the name of each network. The name, or **Service
    Set Identifier** (**SSID**), of each network will be stored in the first value
    of the tuple. This value is retrieved from each item in the `networks` variable
    using list comprehension, which we then save in the `names` variable.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以使用`len`函数计算网络的数量，并循环遍历这个元组列表，提取每个网络的名称。每个网络的名称，或**服务集标识符**（**SSID**），将存储在元组的第一个值中。我们使用列表推导式从`networks`变量中的每个项目中检索此值，然后将其保存在`names`变量中。
- en: There's more...
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe created a WLAN object as a `station` interface. In later recipes,
    we will learn how to create another type of WLAN object that can be used to configure
    the device as an AP. Besides using the `scan` method to get the names of the wireless
    networks, you can also inspect other details about each network, such as the channel
    it uses and the authentication mode it accepts.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程创建了一个WLAN对象作为`station`接口。在后续的教程中，我们将学习如何创建另一种类型的WLAN对象，该对象可用于将设备配置为AP。除了使用`scan`方法获取无线网络的名称之外，还可以检查有关每个网络的其他详细信息，例如它使用的信道和接受的认证模式。
- en: It's very helpful that the `scan` method returns its results as a simple data
    structure that you can store and process in the rest of your program. This makes
    it possible to create projects that periodically scan the available networks and
    save the results to a log file.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`scan`方法将其结果作为一个简单的数据结构返回，您可以在程序的其余部分中存储和处理。这使得可以创建定期扫描可用网络并将结果保存到日志文件中的项目成为可能。'
- en: See also
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于本教程的一些参考资料：
- en: Documentation on the `scan` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.scan](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.scan).
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scan`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.scan](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.scan)找到。'
- en: Documentation on the `active` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.active](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.active).
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`active`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.active](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.active)找到。'
- en: Configuring settings for AP mode
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 配置AP模式的设置
- en: This recipe will show you how to configure the **access point** (**AP**) mode
    on the ESP8266\. Once configured, the board will become a Wi-Fi AP, and you can
    connect laptops and phones directly to the board using a standard Wi-Fi connection.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将向您展示如何在ESP8266上配置**接入点**（**AP**）模式。配置完成后，板子将成为一个Wi-Fi AP，您可以直接使用标准Wi-Fi连接将笔记本电脑和手机连接到板子。
- en: Wi-Fi is so ubiquitous that this feature becomes a very powerful way to offer
    connectivity. You can use the technique shown in this recipe to incorporate Wi-Fi
    AP functionality into your own projects. This lets you establish wireless connections
    between your board and a phone or laptop, even when there are no other access
    points available.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Wi-Fi是如此普遍，以至于这个功能成为一种非常强大的提供连接的方式。您可以使用本教程中展示的技术将Wi-Fi AP功能合并到自己的项目中。这样，即使没有其他接入点可用，您也可以在板子和手机或笔记本电脑之间建立无线连接。
- en: Getting ready
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL来运行本教程中提供的代码。
- en: How to do it...
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Follow these steps to learn how to configure the settings for AP mode:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何配置AP模式的设置：
- en: 'Execute the following block of code in the REPL:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中执行以下代码块：
- en: '[PRE9]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'The `network` library has now been imported and a WLAN object has been created
    for AP mode. The following block of code will configure and activate the AP:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`network`库现在已被导入，并且已经为AP模式创建了一个WLAN对象。以下代码块将配置并激活AP：'
- en: '[PRE10]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Search and join the AP called `PyWifi` using a phone or laptop. The following
    output should appear in the REPL:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用手机或笔记本电脑搜索并加入名为`PyWifi`的AP。应该在REPL中看到以下输出：
- en: '[PRE11]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Connect another device to the same AP. You should see details of the joined
    device in the REPL output, as shown in the following block of code:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一台设备连接到相同的AP。您应该在REPL输出中看到已连接设备的详细信息，如下面的代码块所示：
- en: '[PRE12]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The board will also report devices that disconnect from the AP. Disconnect
    one of the connected devices from the AP—the following output should appear in
    the REPL:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 板子还将报告从AP断开连接的设备。从AP中断开一个连接的设备，应该在REPL中出现以下输出：
- en: '[PRE13]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Run the following code in the REPL:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中运行以下代码：
- en: '[PRE14]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The preceding code will get details about the IP address and subnet mask of
    the AP.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将获取有关AP的IP地址和子网掩码的详细信息。
- en: How it works...
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The MicroPython firmware provides functionality to create Wi-Fi access points
    using the ESP8266\. To use this functionally, we must first create a WLAN object
    and pass it the `network.AP_IF` value for its first argument. This will return
    an object that can be used to enable AP mode. The `config` method is then called,
    passing the desired name of the Wi-Fi network and the password that will be used
    for devices to connect to the AP.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: MicroPython固件提供了使用ESP8266创建Wi-Fi接入点的功能。要使用此功能，我们必须首先创建一个WLAN对象，并将`network.AP_IF`值作为其第一个参数传递。这将返回一个可以用于启用AP模式的对象。然后调用`config`方法，传递所需的Wi-Fi网络名称和设备连接到AP时将使用的密码。
- en: Finally, the AP must be activated by calling the `active` method with the `True`
    value. The board is then ready to receive connections. As devices join and leave
    the network, these details will be automatically printed as output to the REPL
    session.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过调用`active`方法并传入`True`值来激活AP。然后，板子就准备好接收连接了。当设备加入和离开网络时，这些细节将自动打印为REPL会话的输出。
- en: There's more...
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: As we saw in this recipe, multiple devices can be connected to the board at
    the same time. You can use this recipe as a starting point to experiment with
    this feature. You can, for example, connect a laptop and mobile phone to the AP
    and attempt to ping different devices on the Wi-Fi network. You could even ping
    your mobile phone or the ESP8266 board from your laptop.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在本教程中看到的，多个设备可以同时连接到板子上。您可以将此教程作为实验此功能的起点。例如，您可以将笔记本电脑和手机连接到AP，并尝试ping Wi-Fi网络上的不同设备。您甚至可以从笔记本电脑ping您的手机或ESP8266板。
- en: In later chapters, we'll learn how to run a web server on the board, and then
    you will be able to move beyond ping and interact with the board using your web
    browser over Wi-Fi.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在后续章节中，我们将学习如何在板子上运行Web服务器，然后您将能够超越ping并通过Wi-Fi使用您的Web浏览器与板子进行交互。
- en: See also
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关本教程的一些参考资料：
- en: Documentation on the `config` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.config](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.config).
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`config`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.config](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.config)找到。'
- en: Documentation on the `ifconfig` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.ifconfig](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.ifconfig).
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ifconfig`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.ifconfig](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.ifconfig)找到。'
- en: Connecting to an existing Wi-Fi network
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接到现有的Wi-Fi网络
- en: This recipe will show you how to connect the ESP8266 to an existing Wi-Fi network.
    There are many benefits to joining an existing Wi-Fi network. Doing so makes it
    possible to wirelessly access the board from different devices on your network.
    It also provides the board with internet connectivity through the Wi-Fi network's
    internet connection. You can use the approach shown in this recipe to connect
    your own embedded projects to different networks and help enable internet connectivity
    in these projects.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将向您展示如何将ESP8266连接到现有的Wi-Fi网络。加入现有的Wi-Fi网络有许多好处。这样做可以使不同设备在您的网络上无线访问板子成为可能。它还通过Wi-Fi网络的互联网连接为板子提供了互联网连接。您可以使用本教程中展示的方法将自己的嵌入式项目连接到不同的网络，并帮助这些项目实现互联网连接。
- en: Getting ready
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL来运行本教程中提供的代码。
- en: How to do it...
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Follow these steps to learn how to connect to an existing Wi-Fi network:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何连接到现有的Wi-Fi网络：
- en: 'Use the REPL to run the following lines of code:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用REPL运行以下代码行：
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The WLAN object has now been created and activated. Use the following block
    of code to verify that the AP you want to connect to appears in the list of available
    networks:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WLAN对象现已创建并激活。使用以下代码块验证要连接的AP是否出现在可用网络列表中：
- en: '[PRE16]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following line of code will connect to the Wi-Fi AP:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码行将连接到Wi-Fi AP：
- en: '[PRE17]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The following block of code will return a Boolean value that will indicate
    whether we are currently connected to the AP:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将返回一个布尔值，指示我们当前是否已连接到AP：
- en: '[PRE18]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The following lines of code will get details about our current network connection,
    including the board''s IP address, subnet mask, gateway, and DNS server:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码行将获取有关我们当前网络连接的详细信息，包括板的IP地址、子网掩码、网关和DNS服务器：
- en: '[PRE19]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Run the following block of code:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码块：
- en: '[PRE20]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Once run, this code will make the board disconnect from the AP.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码后，板将断开与AP的连接。
- en: How it works...
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The MicroPython firmware has the ability to connect to existing Wi-Fi access
    points using the ESP8266\. To do this, you must create a WLAN object and pass
    it the `network.STA_IF` value for its first argument. This object is saved into
    a variable called `station` in this recipe. The `station` object is then activated
    by calling the `active` method with a `True` value. Once activated, the `connect`
    method can be called with the name of the AP to connect to and its associated
    password. Once called, the `connect` method will print out a lot of information
    as the connection proceeds.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: MicroPython固件具有连接到现有Wi-Fi接入点的能力，使用ESP8266。为此，您必须创建一个WLAN对象，并将`network.STA_IF`值作为其第一个参数传递。在本教程中，将此对象保存到名为`station`的变量中。然后，通过调用`active`方法并传入`True`值来激活`station`对象。一旦激活，就可以调用`connect`方法并传入要连接的AP的名称及其关联密码。一旦调用`connect`方法，连接过程中将打印出大量信息。
- en: We can then check whether or not we are connected at any time by calling the
    `isconnected` method on the station object. This will return the `True` value
    if we are connected, or the `False` value otherwise. Then, we can retrieve network
    details about our IP address and DNS server by calling the `ifconfig` method.
    Finally, the `active` method can be called with a `False` argument to make the
    board disconnect from the network.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们随时可以通过在站点对象上调用`isconnected`方法来检查我们是否连接。如果我们连接，它将返回`True`值，否则返回`False`值。然后，我们可以通过调用`ifconfig`方法来检索有关我们的IP地址和DNS服务器的网络详细信息。最后，可以调用`active`方法，并使用`False`参数使板断开网络连接。
- en: There's more...
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe is packed with a number of different methods regarding the WLAN
    object that can be called and used. It showed you how to list networks, connect
    to them, poll the connection status, get network information about our current
    network, and how to disconnect from the network.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程中包含了关于WLAN对象的多种不同方法，可以调用和使用。它向您展示了如何列出网络、连接到网络、轮询连接状态、获取有关当前网络的网络信息以及如何断开网络连接。
- en: Using these methods, you can create a program that periodically scans nearby
    networks looking for a specific network. Whenever it is found, you can connect
    to it automatically. You could also write a different script that keeps polling
    the status of your network connectivity and updates a status LED that turns on to
    indicate that the Wi-Fi is connected, and off for disconnected.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这些方法，您可以创建一个定期扫描附近网络以寻找特定网络的程序。每当找到它时，您可以自动连接到它。您还可以编写一个不同的脚本，不断轮询网络连接状态并更新状态LED，以指示Wi-Fi已连接，并在断开连接时关闭。
- en: See also
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关本教程的一些参考资料：
- en: Documentation on the `connect` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.connect](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.connect).
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`connect`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.connect](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.connect)找到。
- en: Documentation on the `isconnected` method can be found at [https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.isconnected](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.isconnected).
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`isconnected`方法的文档可以在[https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.isconnected](https://docs.micropython.org/en/latest/library/network.html#network.AbstractNIC.isconnected)找到。
- en: Using the WebREPL over Wi-Fi
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过Wi-Fi使用WebREPL
- en: This recipe will show you how to use the WebREPL feature that is available on
    the ESP8266 board with MicroPython. The WebREPL is a service that can be started
    on the board and lets computers on your network wirelessly access the REPL through
    a web browser. We have seen how to access the REPL using the serial connection
    in the *Using the REPL over a serial connection* recipe in this chapter.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将向您展示如何在ESP8266板上使用MicroPython提供的WebREPL功能。 WebREPL是可以在板上启动的服务，它允许您的网络上的计算机通过网络浏览器无线访问REPL。我们已经在本章的*使用串行连接*教程中看到了如何使用串行连接访问REPL。
- en: This recipe will equip you with the skills you need to get a REPL over Wi-Fi,
    making it possible to remotely debug and execute code on the board, even when
    you don't have a direct physical connection to it.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程将为您提供通过Wi-Fi获取REPL所需的技能，从而即使在没有直接物理连接的情况下，也可以远程调试和执行板上的代码。
- en: Getting ready
  id: totrans-144
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe. You should follow the previous recipe, *Connecting to an existing
    Wi-Fi network*, before completing this recipe as you will use that recipe to connect
    the board to your network and get its IP address.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL才能运行本教程中提供的代码。在完成本教程之前，您应该按照前一个教程*连接到现有Wi-Fi网络*，因为您将使用该教程将板连接到您的网络并获取其IP地址。
- en: How to do it...
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Follow these steps to learn how to use the WebREPL over Wi-Fi:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何通过Wi-Fi使用WebREPL：
- en: 'Run the following lines of code in the REPL:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中运行以下代码行：
- en: '[PRE21]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The WebREPL configuration wizard will now start, asking you a series of questions
    so that the service can be configured. Respond to the following question with
    the letter `E` to enable the service at boot-up:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebREPL配置向导现在将开始，询问您一系列问题，以便配置服务。回答以下问题，使用字母`E`启用启动时的服务：
- en: '[PRE22]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The next set of questions will ask you to enter and confirm the WebREPL password:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来的一系列问题将要求您输入和确认WebREPL密码：
- en: '[PRE23]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Answer `y` (yes) for the next question so that the board can be rebooted and
    have the changes applied:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于下一个问题，回答`y`（是），以便可以重新启动板并应用更改：
- en: '[PRE24]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: You can see from the preceding output that once the board is booted up, it will
    show that the WebREPL service has been started and the URL that can be used to
    access the service.
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以从前面的输出中看到，一旦板子启动，它将显示WebREPL服务已启动以及可用于访问该服务的URL。
- en: Download the WebREPL software from [https://github.com/micropython/webrepl](https://github.com/micropython/webrepl)
    by clicking on the Clone or download button.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击克隆或下载按钮从[https://github.com/micropython/webrepl](https://github.com/micropython/webrepl)下载WebREPL软件。
- en: Extract the downloaded `.zip` file into any folder on your computer.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的`.zip`文件解压缩到计算机上的任何文件夹中。
- en: 'Open the `webrepl.html` file in any modern web browser. You should see the
    following interface appear in your web browser:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在任何现代的网络浏览器中打开`webrepl.html`文件。您应该在网络浏览器中看到以下界面：
- en: '![](assets/a36cc34c-8f7b-413d-a9fa-abcff78e24dd.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/a36cc34c-8f7b-413d-a9fa-abcff78e24dd.png)'
- en: Enter the URL of your device's WebREPL service in the text box next to the Connect
    button. In the previous screenshot, the IP address of the board was `10.0.0.38`,
    so it's given the URL `ws://10.0.0.38:8266`.
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在连接按钮旁边的文本框中输入设备的WebREPL服务的URL。在上一个屏幕截图中，板的IP地址是`10.0.0.38`，因此给出了URL`ws://10.0.0.38:8266`。
- en: 'Now, click on the Connect button and enter the WebREPL password when prompted.
    The following screenshot shows a WebREPL session where the `math` module is imported
    and the value of pi is displayed:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，单击“连接”按钮，并在提示时输入WebREPL密码。以下屏幕截图显示了一个WebREPL会话，其中导入了`math`模块并显示了pi的值：
- en: '![](assets/df9cdbce-06e5-4d30-b800-cbc427e40cfc.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/df9cdbce-06e5-4d30-b800-cbc427e40cfc.png)'
- en: The WebREPL also has the ability to upload files to the board. You can take
    a Python script called `main.py` that you would like to be uploaded to the board
    and upload it using this feature.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: WebREPL还具有上传文件到板上的功能。您可以使用此功能上传名为`main.py`的Python脚本到板上。
- en: Click on the Browse... button under Send a file.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“发送文件”下的“浏览...”按钮。
- en: Select your `main.py` file.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您的`main.py`文件。
- en: Click on the Send to device button.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“发送到设备”按钮。
- en: 'The following screenshot shows an example of a successful upload message that
    will appear after you upload a file to the board:'
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下屏幕截图显示了上传文件到板上后出现的成功上传消息的示例：
- en: '![](assets/8fc4762f-7697-48ce-a30f-36fb30f53a2e.png)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8fc4762f-7697-48ce-a30f-36fb30f53a2e.png)'
- en: The message on the screen confirms that the file was sent and reports the number
    of bytes that were transmitted.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 屏幕上的消息确认了文件已发送，并报告了传输的字节数。
- en: How it works...
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The MicroPython firmware comes with a built-in WebREPL server. Once you import
    the `webrepl_setup` module, it will start an interactive wizard that will let
    you enable the service. Set its password and configure it to run each time you
    boot up the board. Once this service runs, it exposes a WebSocket service that
    can receive connections from the WebREPL client running in the browser.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: MicroPython固件带有内置的WebREPL服务器。一旦导入`webrepl_setup`模块，它将启动一个交互式向导，让您启用该服务。设置其密码并配置它在每次启动板时运行。一旦此服务运行，它将公开一个WebSocket服务，可以接收来自在浏览器中运行的WebREPL客户端的连接。
- en: The WebREPL client doesn't need any special installation—it is just an HTML
    file that can be extracted locally to you computer and then opened in your web
    browser. Through this client, you can now specify the address of the board you
    want to connect to, and establish a connection to the board. Once connected, you
    will have an interactive REPL session in the web browser, as well as the ability
    to upload files to the board.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: WebREPL客户端不需要任何特殊的安装——它只是一个HTML文件，可以在本地提取到您的计算机，然后在网络浏览器中打开。通过此客户端，您现在可以指定要连接的板的地址，并与板建立连接。一旦连接，您将在网络浏览器中拥有一个交互式REPL会话，以及将文件上传到板的能力。
- en: There's more...
  id: totrans-174
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe focused on one of the WebREPL clients. The client that was shown
    in this recipe is intended to run in your web browser and make the process of
    working with your board over Wi-Fi an easy process. There is also a WebREPL client
    that can be run from the Terminal using a **command-line interface** (**CLI**)
    instead of the web browser.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方专注于WebREPL客户端之一。在这个配方中显示的客户端旨在在您的网络浏览器中运行，并使通过Wi-Fi与板卡一起工作的过程变得简单。还有一个WebREPL客户端，可以使用**命令行界面**（**CLI**）而不是网络浏览器来运行。
- en: Unlike the web browser client, the CLI version is written completely in Python.
    This gives you a great opportunity to explore the internals of how WebREPL transfers
    files over web sockets. The CLI version will be explored in more depth in the
    next recipe.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 与网络浏览器客户端不同，CLI版本完全由Python编写。这为您提供了一个很好的机会来探索WebREPL通过Web套接字传输文件的内部。下一个配方将更深入地探讨CLI版本。
- en: See also
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关此配方的一些参考资料：
- en: Documentation on accessing the WebREPL can be found at [https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html#webrepl-a-prompt-over-wifi](https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html#webrepl-a-prompt-over-wifi).
  id: totrans-179
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关访问WebREPL的文档可以在[https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html#webrepl-a-prompt-over-wifi](https://docs.micropython.org/en/latest/esp8266/tutorial/repl.html#webrepl-a-prompt-over-wifi)找到。
- en: A guide on connecting to the WebREPL can be found at [https://learn.adafruit.com/micropython-basics-esp8266-webrepl/](https://learn.adafruit.com/micropython-basics-esp8266-webrepl/).
  id: totrans-180
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关连接到WebREPL的指南可以在[https://learn.adafruit.com/micropython-basics-esp8266-webrepl/](https://learn.adafruit.com/micropython-basics-esp8266-webrepl/)找到。
- en: Transferring files with the WebREPL CLI
  id: totrans-181
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用WebREPL CLI传输文件
- en: This recipe will show you how we can use the WebREPL CLI to transfer files from
    a computer to the ESP8266 over Wi-Fi. This is a very powerful way of transferring
    files to the board. Each time you make changes to your Python code and want to
    try the latest change, you have to upload the file to the board. Doing this with
    your web browser over and over again can become tedious.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这个配方将向您展示如何使用WebREPL CLI通过Wi-Fi从计算机传输文件到ESP8266。这是一个非常强大的将文件传输到板上的方法。每次您对Python代码进行更改并希望尝试最新更改时，都必须将文件上传到板上。一遍又一遍地用您的网络浏览器做这件事可能会变得乏味。
- en: 'The beauty of using the CLI interface is that most Terminals remember their
    last executed commands, so you can rerun the last command with two simple keystrokes:
    you just press the *up* arrow key and the *Enter* key. This will make your cycle
    of code, upload, and run much faster and more productive.'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 使用CLI界面的美妙之处在于，大多数终端会记住它们最后执行的命令，因此您可以用两个简单的按键重新运行上一个命令：只需按下*上*箭头键和*Enter*键。这将使您的代码、上传和运行循环更快，更高效。
- en: Getting ready
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe. You should follow the previous recipe, *Using the WebREPL over Wi-Fi*,
    before tackling this recipe to ensure that the WebREPL is working correctly.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL才能运行本配方中提供的代码。在尝试本配方之前，应该先遵循上一个配方*通过Wi-Fi使用WebREPL*，以确保WebREPL正常工作。
- en: How to do it...
  id: totrans-186
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作方法...
- en: 'Follow these steps to learn how to transfer files with the WebREPL CLI:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使用WebREPL CLI传输文件：
- en: Download the WebREPL software from [https://github.com/micropython/webrepl](https://github.com/micropython/webrepl)
    by clicking on the Clone or download button.
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击“克隆或下载”按钮从[https://github.com/micropython/webrepl](https://github.com/micropython/webrepl)下载WebREPL软件。
- en: Extract the downloaded `.zip` file into any folder on your computer.
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将下载的`.zip`文件解压缩到计算机上的任何文件夹中。
- en: The extracted files will contain a script called `webrepl_cli.py`.
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提取的文件将包含一个名为`webrepl_cli.py`的脚本。
- en: Open a Terminal and change the working directory to the location of the `webrepl_cli.py`
    script.
  id: totrans-191
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开终端并将工作目录更改为`webrepl_cli.py`脚本的位置。
- en: 'Execute the following command in the Terminal to see the command''s options:'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在终端中执行以下命令以查看命令的选项：
- en: '[PRE25]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Run the following command to upload the `main.py` script to the board. You
    will need to enter the WebREPL password when prompted for it:'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下命令将`main.py`脚本上传到板子上。在提示时，您需要输入WebREPL密码：
- en: '[PRE26]'
  id: totrans-195
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'The following command is very similar to the previous one:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下命令与前一个命令非常相似：
- en: '[PRE27]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: The main difference is that the password is provided in the command line as
    a command-line option.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 主要区别在于密码是作为命令行选项在命令行中提供的。
- en: How it works...
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: This recipe starts with a simple command-line invocation of the `webrepl_cli.py`
    script to show details regarding the command-line options. It's a good idea to
    start with this command to at least verify that Python is executing the script
    successfully and producing the output you would expect.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程从简单的命令行调用`webrepl_cli.py`脚本开始，以显示有关命令行选项的详细信息。至少验证Python是否成功执行脚本并生成您期望的输出是一个好主意。
- en: The next time the command is called, it is used to upload the `main.py` script
    to the board. This is definitely a viable way of uploading scripts. However, its
    main downside is that you have to enter the password each time you upload the
    script. This can be addressed as it was in the previous example, where the password
    is provided on the command line. With the final example, the command can be run
    repeatedly with just a few key strokes.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 下次调用该命令时，它将用于将`main.py`脚本上传到板子上。这绝对是上传脚本的一种可行方式。但是，它的主要缺点是每次上传脚本时都必须输入密码。这可以像前面的例子一样解决，其中密码是在命令行上提供的。通过最后一个例子，可以只需按下几个按键重复运行该命令。
- en: There's more...
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This command can be a real time-saver when you are repeatedly uploading scripts
    to your board. You can also take it and combine it with other command-line software
    that watches for changes in a specific folder. For example, you could have this
    command automatically upload any changes to `main.py` each time the file changes
    by combining these two pieces of software.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 当您反复上传脚本到板子上时，这个命令可以节省真正的时间。您还可以将其与其他命令行软件结合起来，以监视特定文件夹中的更改。例如，您可以通过结合这两个软件，使该命令在每次文件更改时自动上传任何更改到`main.py`。
- en: 'Please note that, as mentioned in this command''s documentation, file transferring
    is still in alpha stage and has some known issues. If you find that the script
    is getting stuck after a few uploads, the most effective way to address this is
    to do a hard reset. This can be done by running the following block of code:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，正如该命令的文档中所述，文件传输仍处于alpha阶段，并且存在一些已知问题。如果发现脚本在上传几次后卡住，最有效的解决方法是进行硬复位。可以通过运行以下代码块来完成：
- en: '[PRE28]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: This can also be done by pressing the reset button on the board.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以通过按下板子上的复位按钮来完成。
- en: See also
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关此教程的一些参考资料：
- en: Documentation on performing hard resets can be found at [http://docs.micropython.org/en/v1.8.6/wipy/wipy/tutorial/reset.html](http://docs.micropython.org/en/v1.8.6/wipy/wipy/tutorial/reset.html)
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关执行硬复位的文档可以在[http://docs.micropython.org/en/v1.8.6/wipy/wipy/tutorial/reset.html](http://docs.micropython.org/en/v1.8.6/wipy/wipy/tutorial/reset.html)找到
- en: Documentation on using the `webrepl_cli.py` file to upload files can be found
    at [https://micropython-on-esp8266-workshop.readthedocs.io/en/latest/basics.html#uploading-files](https://micropython-on-esp8266-workshop.readthedocs.io/en/latest/basics.html#uploading-files).
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关使用`webrepl_cli.py`文件上传文件的文档可以在[https://micropython-on-esp8266-workshop.readthedocs.io/en/latest/basics.html#uploading-files](https://micropython-on-esp8266-workshop.readthedocs.io/en/latest/basics.html#uploading-files)找到。
- en: Controlling the blue and red LEDs
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制蓝色和红色LED
- en: 'The ESP8266 comes with two LEDs: one that''s red, and another that''s blue.
    Both of these LEDs can be controlled from the scripts you load on the board. This
    recipe will show you how you can control each one, and will end with an animation
    that blinks the lights between red and blue.'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: ESP8266配备了两个LED：一个是红色的，另一个是蓝色的。这两个LED都可以从加载到板子上的脚本中进行控制。本教程将向您展示如何控制每个LED，并以一个闪烁红色和蓝色灯的动画结束。
- en: The techniques that are shown in this recipe can be used in your own projects
    whenever you want to signal some sort of status to your users. You might want
    to have a blinking blue light when you are scanning for a Wi-Fi network, or to
    light up the red light when your board has lost its network connectivity.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 在您自己的项目中，每当您想要向用户发出某种状态信号时，都可以使用本教程中显示的技术。当您正在扫描Wi-Fi网络时，您可能希望有一个闪烁的蓝灯，或者在板子失去网络连接时点亮红灯。
- en: Getting ready
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on the ESP8266 to run the code presented in
    this recipe.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问ESP8266上的REPL才能运行本教程中提供的代码。
- en: How to do it...
  id: totrans-216
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to control the blue and red LEDs:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何控制蓝色和红色LED：
- en: 'Execute the following block of code in the REPL:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中执行以下代码块：
- en: '[PRE29]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'The red LED should now be turned on. Run the following block of code to turn
    the red LED off:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 红色LED现在应该已经打开。运行以下代码块以关闭红色LED：
- en: '[PRE30]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'The following block of code will turn on the blue LED:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码块将打开蓝色LED：
- en: '[PRE31]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'The following code will switch the blue LED off:'
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码将关闭蓝色LED：
- en: '[PRE32]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Run the following block of code:'
  id: totrans-226
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行以下代码块：
- en: '[PRE33]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The preceding code will create a light animation that switches between the red
    and blue light with a one second delay between each change.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码将创建一个灯光动画，每次变化之间有一秒的延迟，可以在红色和蓝色灯之间切换。
- en: How it works...
  id: totrans-229
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: First, the `Pin` object is imported from the machine module. This object will
    let us directly connect to the **general-purpose input/output** (**GPIO**) pins
    that come with the ESP8266 board. The red LED is connected on pin number 0\. The
    `Pin` object that's assigned to the `red` variable is connected to the red LED.
    Once this object is created, setting its value to `0` turns the light on and setting
    its value to 1 turns the light off.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，从machine模块中导入`Pin`对象。这个对象将让我们直接连接到ESP8266板上的**通用输入/输出**（**GPIO**）引脚。红色LED连接在引脚0上。分配给`red`变量的`Pin`对象连接到红色LED。一旦创建了这个对象，将其值设置为`0`会打开灯，将其值设置为1会关闭灯。
- en: The `blue` variable is defined as the `Pin` object connected to GPIO pin 2,
    which maps to the blue LED. It can be turned on and off in the same way. The last
    part of this recipe is an infinite loop that first turns the blue LED on and the
    red LED off.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`blue`变量被定义为连接到GPIO引脚2的`Pin`对象，它映射到蓝色LED。它可以以相同的方式打开和关闭。这个教程的最后部分是一个无限循环，首先打开蓝色LED并关闭红色LED。'
- en: A sleep delay of 1 second is applied before the blue LED is switched off and
    the red LED is turned on. Another sleep delay of 1 second is applied before the
    loop starts again from the start, performing the same actions.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 在蓝色LED关闭并打开红色LED之前应用了1秒的休眠延迟。在循环再次从头开始执行相同的操作之前，再次应用1秒的休眠延迟。
- en: There's more...
  id: totrans-233
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: This recipe shows you how to control the two LEDs that come with the board.
    Additional LEDs can be connected to the other available GPIO pins and can be controlled
    in a similar fashion. The board comes with 9 available GPIO pins. Beyond simple
    single color LEDs, the same GPIO pins can be used to connect NeoPixels, which
    offer a full range of colors, as they combine different levels of red, green,
    and blue LEDs.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 这个教程向你展示了如何控制板载的两个LED灯。额外的LED灯可以连接到其他可用的GPIO引脚，并且可以以类似的方式进行控制。该板载有9个可用的GPIO引脚。除了简单的单色LED灯外，相同的GPIO引脚也可以用于连接NeoPixels，它们提供了全彩色范围，因为它们结合了不同级别的红色、绿色和蓝色LED灯。
- en: See also
  id: totrans-235
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于这个教程的一些参考资料：
- en: Documentation on interacting with pins and the GPIO can be found at [https://docs.micropython.org/en/latest/esp8266/quickref.html#pins-and-gpio](https://docs.micropython.org/en/latest/esp8266/quickref.html#pins-and-gpio).
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在[https://docs.micropython.org/en/latest/esp8266/quickref.html#pins-and-gpio](https://docs.micropython.org/en/latest/esp8266/quickref.html#pins-and-gpio)找到与引脚和GPIO交互的文档。
- en: A tutorial on interacting with the GPIO pins can be found at [https://docs.micropython.org/en/latest/esp8266/tutorial/pins.html](https://docs.micropython.org/en/latest/esp8266/tutorial/pins.html).
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[https://docs.micropython.org/en/latest/esp8266/tutorial/pins.html](https://docs.micropython.org/en/latest/esp8266/tutorial/pins.html)可以找到与GPIO引脚交互的教程。
