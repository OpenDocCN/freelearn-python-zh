- en: A
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A
- en: A Quick Primer on reStructuredText
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: reStructuredText 快速入门
- en: When it comes to writing software documentation, software developers generally
    prefer to use a **lightweight markup language** over binary formats such as DOCX
    or other word processor files. Such languages aim to provide a standardized way
    of notating basic rich-text features like bullet lists, emphasized text, section
    headings, tables, and inline code within the limits of a plaintext file, while
    remaining human-readable. Documents written in lightweight markup languages can
    be read as-is, or compiled into other formats like PDF, DOCX, or HTML.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到编写软件文档时，软件开发人员通常更喜欢使用**轻量级标记语言**而不是像 DOCX 或其他字处理文件这样的二进制格式。这些语言旨在在纯文本文件的范围内提供一种标准化的方式来注释基本富文本功能，如项目符号列表、强调文本、章节标题、表格和内联代码，同时保持可读性。使用轻量级标记语言编写的文档可以原样阅读，或者编译成
    PDF、DOCX 或 HTML 等其他格式。
- en: 'This approach has several advantages over the use of binary word processor
    files:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法与使用二进制字处理文件相比有几个优点：
- en: 'The documentation can be treated like code: it can be edited with the code
    editor and easily managed with tools like a **Version Control System** (**VCS**).'
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档可以被当作代码来处理：它可以使用代码编辑器进行编辑，并且可以用像**版本控制系统**（**VCS**）这样的工具轻松管理。
- en: 'The documentation has universal access: it can be read from any system with
    a text editor, or even from a terminal prompt.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档具有通用访问性：它可以从任何带有文本编辑器的系统上阅读，甚至可以从终端提示符中读取。
- en: 'The writing process is less distracting: as markup languages typically focus
    on semantic objects like headings, paragraphs, tables, and so forth rather than
    cosmetic concerns like colors, font faces, or text size, the developer is less
    distracted with appearance details and more focused on organization and correct
    information.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 写作过程不那么分散注意力：因为标记语言通常关注语义对象，如标题、段落、表格等，而不是像颜色、字体或文本大小这样的外观细节，开发者就不会被外观细节所分散，更多地专注于组织和正确的信息。
- en: In the 1990s and earlier, developers tended to use various ASCII-art contrivances
    to convey rich-text features visually, such as tables made of pipes and underscores,
    bullet lists made with asterisks, or headings denoted with a second line of dashes.
    In the early 2000s, several projects worked to formalize and define these structures
    and develop tools that would allow developers to compile their markup into binary
    rich-text formats for distribution or publication.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在 1990 年代及之前，开发者倾向于使用各种 ASCII 艺术手段来视觉上传达富文本功能，如由管道和下划线组成的表格、用星号制作的列表或用第二行破折号表示的标题。在
    2000 年代初，几个项目致力于正式化和定义这些结构，并开发工具，使开发者能够将他们的标记编译成用于分发或出版的二进制富文本格式。
- en: This book was actually written in a code editor using a markup language, and
    then subsequently converted by scripts to the format required by the publisher.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书实际上是用一种标记语言在代码编辑器中编写的，然后通过脚本转换为出版商所需的格式。
- en: The reStructuredText markup language
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: reStructuredText 标记语言
- en: Though several markup language options exist, the Python community tends to
    prefer **reStructuredText** (**RST**). The reStructuredText markup language is
    part of the Python Docutils project, located at [http://docutils.sourceforge.net](http://docutils.sourceforge.net).
    The Docutils project develops the RST standard and provides utilities for converting
    RST to formats like PDF, ODT, HTML, and LaTeX.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然存在多种标记语言选项，但 Python 社区倾向于更喜欢**reStructuredText**（**RST**）。reStructuredText
    标记语言是 Python Docutils 项目的组成部分，位于 [http://docutils.sourceforge.net](http://docutils.sourceforge.net)。Docutils
    项目开发了 RST 标准，并提供将 RST 转换为 PDF、ODT、HTML 和 LaTeX 等格式的实用工具。
- en: Document structure
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档结构
- en: 'RST is geared toward the creation of structured documents; as such, the first
    thing we should create is a title for our document. This is denoted using a line
    of symbols above and below a single line of text, like so:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: RST 旨在创建结构化文档；因此，我们首先应该创建的是我们文档的标题。这可以通过在单行文本上方和下方使用一行符号来表示，如下所示：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In this case, we''ve used the equals sign on either side of the title to denote
    it as our document title. We can also add a subtitle by adding another line underlined
    with a different symbol:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们使用标题两边的等号来表示它是我们的文档标题。我们还可以通过添加带有不同符号的下划线行来添加副标题：
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The exact symbols used here are not important; they can be any of the following:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 这里使用的确切符号并不重要；它们可以是以下任何一种：
- en: '[PRE2]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: What establishes one as a title and the other as a subtitle is the order. Whichever
    symbol we choose to use first in the document will become the top-level title.
    Whichever we use second will become a second-level title, and so on. By convention,
    the equals sign is typically used for level one, the hyphen for level two, the
    tilde for level three, and the plus symbol for level four. This is only convention,
    however; within a document, the hierarchy is determined by the order in which
    you use the symbols.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 一个作为标题，另一个作为副标题的区分在于顺序。我们在文档中首先使用的符号将成为顶级标题。我们使用的第二个符号将成为二级标题，依此类推。按照惯例，等号通常用于一级，连字符用于二级，波浪号用于三级，加号用于四级。然而，这仅是一种惯例；在文档中，层次结构由您使用符号的顺序决定。
- en: 'We can write titles without the top line of symbols as well, like so:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也可以不使用符号的顶部行来写标题，如下所示：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: While not required, this style is usually preferred for section titles over
    the document title. The document title is denoted by creating a top-level section
    header with no content inside, whereas regular section headers have content.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这不是必需的，但这种样式通常比文档标题更适用于章节标题。文档标题是通过创建一个没有内容的顶级部分标题来表示的，而常规部分标题有内容。
- en: 'For example, they can contain paragraphs of text. Paragraphs in RST are indicated
    by a blank line between blocks of text, like so:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，它们可以包含文本段落。RST中的段落通过在文本块之间留一个空白行来表示，如下所示：
- en: '[PRE4]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Note that paragraphs should not be indented. Indenting a line of text would
    indicate some other structure, as we'll see below.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，段落不应缩进。缩进一行文本将表示其他结构，如下所示。
- en: Lists
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 列表
- en: RST is capable of denoting both bullet and number lists, both of which can contain
    nested lists.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: RST能够表示子弹列表和数字列表，两者都可以包含嵌套列表。
- en: 'Bullet lists are created by starting a line with any of `*`, `-`, or `+` followed
    by a space, as shown here:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 列表项是通过在一行开始处使用`*`、`-`或`+`符号后跟一个空格来创建的，如下所示：
- en: '[PRE5]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'To create a sub-list, simply indent two spaces, like so:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个子列表，只需缩进两个空格，如下所示：
- en: '[PRE6]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Note that the actual symbol used for the list doesn't have any syntactic meaning,
    though it can be helpful for plaintext readers to distinguish sub-lists. Also
    notice that we've created a multi-line bullet point (the last point under `markdown`)
    by indenting the subsequent lines to the same indent as the text in the first
    line of the bullet.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，列表中实际使用的符号没有任何语法意义，尽管它可以帮助纯文本读者区分子列表。另外，请注意，我们已经通过将后续行缩进到与列表第一行文本相同的缩进量，创建了一个多行列表项（`markdown`下的最后一个点）。
- en: Note the blank lines before the first point in the list, and around each sub-list.
    Lists should always have a blank line before the first item in the list and after
    the last. Lists can optionally contain blank lines between their bullet points,
    which is sometimes helpful for readability.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 注意列表中的第一个点之前和每个子列表周围的空白行。列表应该在列表的第一个项目之前和最后一个项目之后有一个空白行。列表可以在其项目符号之间包含可选的空白行，这在提高可读性方面有时很有帮助。
- en: 'Numbered lists are created like bullet lists, but using either digits or the
    `#` symbol, followed by a dot, as a bullet; for example:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 编号列表的创建方式与子弹列表类似，但使用数字或`#`符号，后跟一个点作为项目符号；例如：
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: While the `#` symbol is not very helpful to plaintext readers, conversion programs
    will automatically generate a numbered list in this case. Note that we can nest
    numbered lists or bullet lists within this numbered list.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然`#`符号对纯文本读者来说不太有帮助，但转换程序将自动在此情况下生成编号列表。注意，我们可以在编号列表中嵌套编号列表或子弹列表。
- en: Character styles
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 字符样式
- en: With reStructuredText we can denote a variety of inline character styles, the
    most common of which are emphasis, strong emphasis, and inline literals.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 使用reStructuredText，我们可以表示各种内联字符样式，其中最常见的是强调、强强调和内联文本。
- en: 'This is done by surrounding the text with particular symbols, as shown in this
    table:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过用特定的符号包围文本来完成的，如下表所示：
- en: '| Syntax | Use for | Typical rendering |'
  id: totrans-39
  prefs: []
  type: TYPE_TB
  zh: '| 语法 | 用途 | 常见显示 |'
- en: '| `*Single asterisks indicate emphasized text*` | Mild emphasis | Italic text
    |'
  id: totrans-40
  prefs: []
  type: TYPE_TB
  zh: '| `*单星号表示强调文本*` | 轻度强调 | 斜体文本 |'
- en: '| `**Double asterisks are for strongly emphasized text**` | Strong emphasis
    | Bold text |'
  id: totrans-41
  prefs: []
  type: TYPE_TB
  zh: '| `**双星号用于强烈强调文本**` | 强调 | 粗体文本 |'
- en: '| [PRE8] | Literal examples, such as code | Monospace text, inline whitespace
    preserved |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| [PRE8] | 文本示例，例如代码 | 等宽文本，保留内联空白 |'
- en: Note that there should be no space between the symbol and the text being marked
    up.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，符号和被标记的文本之间不应有空格。
- en: Blocks and quotes
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 块和引用
- en: 'When documenting code, it''s quite common that we might need to include a block
    quote from some other source. Simple block quotes can be done in RST by indenting
    a paragraph with four spaces, like so:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当记录代码时，我们可能需要从其他来源包含一个块引用的情况相当常见。在 RST 中，可以通过缩进一个包含只有两个冒号的段落来完成简单的块引用，如下所示：
- en: '[PRE9]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In situations where we need to preserve whitespace like indentation and line
    breaks, we can use a **line block**, in which each line begins with a vertical
    bar and a space. For example:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要保留空白（如缩进和换行符）的情况下，我们可以使用**行块**，其中每行以一个竖线和空格开始。例如：
- en: '[PRE10]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'While your documentation may contain a handful of poems or literary quotes,
    it''s far more likely to need code blocks. A code block in RST is indicated by
    an indented block preceded by a paragraph containing only a double colon, like
    so:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您的文档可能包含一些诗歌或文学引用，但更可能需要代码块。在 RST 中，代码块由一个缩进的块表示，该块之前是一个只包含两个冒号的段落，如下所示：
- en: '[PRE11]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Within a code block, whitespace will be preserved (ignoring the initial indent,
    of course), and no RST markup will be interpreted, just as you would expect for
    quoting actual code.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码块中，空白字符将被保留（当然，忽略初始缩进），并且不会解释 RST 标记，正如您期望引用实际代码那样。
- en: Tables
  id: totrans-52
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 表格
- en: 'Tables are commonly needed in documentation, and RST provides two ways of denoting
    them. The simpler but more limited approach looks like this:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在文档中，表格是常见的需求，RST 提供了两种表示表格的方法。更简单但更有限的方法如下所示：
- en: '[PRE12]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Using this syntax, we arrange the data in columns using spaces, and surround
    the table and header row with `=` symbols. An empty space through the whole table
    denotes a column break. Note that the symbols must extend as wide as the width
    of the longest cell. This syntax is limited in that it cannot represent multi-line
    cells or cells that span multiple rows or columns.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种语法，我们使用空格在列中排列数据，并用 `=` 符号包围表格和标题行。整个表格中的空格表示列分隔符。请注意，符号必须与最长单元格的宽度相同。这种语法的限制在于它不能表示多行单元格或跨越多行或多列的单元格。
- en: 'For that, we can use the more verbose table format:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，我们可以使用更详细的表格格式：
- en: '[PRE13]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: In this format, the table cells are defined using hyphens and pipes, with plus
    symbols at the corners of each cell. A cell can be made to span multiple rows
    or columns by simply omitting the border characters between them. For example,
    in the above table, the cell containing `Orange` extends to the bottom of the
    table, and the first row under the header spans the second and third columns.
    Note that table headers are denoted by using an equals symbol rather than a hyphen.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在此格式中，表格单元格使用连字符和管道定义，每个单元格的角落使用加号符号。通过简单地省略它们之间的边框字符，可以使单元格跨越多行或多列。例如，在上面的表格中，包含“Orange”的单元格延伸到表格底部，标题下的第一行跨越了第二和第三列。请注意，表格标题是通过使用等号符号而不是连字符来表示的。
- en: Tables can be tedious to create in a plaintext editor, but some programming
    tools have plugins to generate RST tables. If you plan to make a lot of tables
    in an RST document, you may want to see if your editor has a tool for this.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在纯文本编辑器中创建表格可能很繁琐，但一些编程工具具有生成 RST 表格的插件。如果您计划在 RST 文档中创建大量表格，您可能想看看您的编辑器是否有这样的工具。
- en: Converting RST to other formats
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将 RST 转换为其他格式
- en: If nothing else, following the reStructuredText syntax leads to a very readable
    and expressive plaintext file. However, the real power in using a standardized
    markup language is in converting it to other formats.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有其他选择，遵循 reStructuredText 语法将导致一个非常可读和表达力强的纯文本文件。然而，使用标准化标记语言的真正力量在于将其转换为其他格式。
- en: 'The `docutils` package, available in PyPI, comes with several command-line
    utilities for converting RST files. The more useful ones are listed here:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 可在 PyPI 上找到的 `docutils` 软件包包含几个用于转换 RST 文件的命令行实用程序。其中更有用的列在这里：
- en: '| Command | Format | Format description |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 命令 | 格式 | 格式描述 |'
- en: '| `rst2html` | Hypertext Markup Language (HTML) | Standard markup language
    for the web, useful for publishing to a website. |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `rst2html` | 超文本标记语言 (HTML) | 网页的标准标记语言，用于发布到网站。|'
- en: '| `rst2html5` | Hypertext Markup Language version 5 (HTML 5) | More modern
    version of HTML, preferred for web use. |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `rst2html5` | 超文本标记语言版本 5 (HTML 5) | 更现代的 HTML 版本，适用于网页使用。|'
- en: '| `rst2pdf` | Portable Document Format (PDF) | Good for printable documents,
    or for distributing read-only documentation. |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `rst2pdf` | 可移植文档格式 (PDF) | 适用于打印文档或分发只读文档。|'
- en: '| `rst2odt` | Open Document Text (ODT) | Word processing format, useful when
    you want to do further editing in a word processor. |'
  id: totrans-67
  prefs: []
  type: TYPE_TB
  zh: '| `rst2odt` | Open Document Text (ODT) | 文字处理格式，当你想在文字处理器中进行进一步编辑时很有用。'
- en: '| `rst2latex` | LaTeX markup language | Very powerful markup language often
    used in scientific publications. |'
  id: totrans-68
  prefs: []
  type: TYPE_TB
  zh: '| `rst2latex` | LaTeX 标记语言 | 一种非常强大的标记语言，常用于科学出版物。'
- en: '| `rst2man` | `MAN` page markup | Markup used by UNIX man pages. Useful for
    documentation on Linux, BSD, or macOS. |'
  id: totrans-69
  prefs: []
  type: TYPE_TB
  zh: '| `rst2man` | `MAN` 页面标记 | UNIX man 页面使用的标记。在 Linux、BSD 或 macOS 上的文档很有用。'
- en: '| `rst2s5` | Simple standards-based slideshow system (S5) | HTML-based slideshow
    format. Good for presentations. |'
  id: totrans-70
  prefs: []
  type: TYPE_TB
  zh: '| `rst2s5` | 简单的基于标准的幻灯片系统（S5） | 基于 HTML 的幻灯片格式。适合演示。'
- en: To use any of these commands, simply call it with the name of the RST file.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些命令中的任何一个，只需用 RST 文件的名称调用它即可。
- en: 'Depending on the command, an output file can be specified by either an `-o`
    switch or as a second positional argument, for example:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 根据命令，输出文件可以通过 `-o` 开关或作为第二个位置参数指定，例如：
- en: '[PRE14]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The scripts interpret the markup in the RST file and build a nicely formatted
    PDF or HTML file. You can try these commands on the `README.rst` file included
    with the example code for this appendix, which is a README for the binary release
    of ABQ Data Entry. For example, if you render a default HTML file, it will look
    something like this in your browser:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这些脚本会解析 RST 文件中的标记并构建一个格式良好的 PDF 或 HTML 文件。你可以在附录示例代码中的 `README.rst` 文件上尝试这些命令，这是
    ABQ 数据录入的二进制发布版本的 README。例如，如果你渲染一个默认的 HTML 文件，在浏览器中看起来可能就像这样：
- en: '![Default HTML5 rendering of README.rst](img/Figure_A.1.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![README.rst 的默认 HTML5 渲染](img/Figure_A.1.png)'
- en: 'Figure A.1: Default HTML5 rendering of README.rst'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图 A.1：README.rst 的默认 HTML5 渲染
- en: 'Each command has a large number of options available, which you can view by
    calling the command with the `--help` switch, like so:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 每个命令都有大量的选项可用，你可以通过使用 `--help` 开关调用命令来查看这些选项，如下所示：
- en: '[PRE15]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'For example, the `rst2html` command allows us to specify a CSS style sheet
    that will be embedded into the generated HTML file. We can use that to change
    the look of our generated document, like so:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，`rst2html` 命令允许我们指定一个将被嵌入到生成的 HTML 文件中的 CSS 样式表。我们可以用它来改变生成的文档的外观，如下所示：
- en: '[PRE16]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'An `abq_stylesheet.css` file is included with the example code for this book,
    though you can create your own if you know CSS. If you used the bundled file,
    the resulting HTML looks like this in the browser:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 随着本书的示例代码，包含了一个 `abq_stylesheet.css` 文件，尽管如果你知道 CSS，你也可以创建自己的文件。如果你使用了捆绑的文件，在浏览器中的结果看起来可能就像这样：
- en: '![](img/Figure_A.2.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/Figure_A.2.png)'
- en: 'Figure A.2: The README.rst file, but with a style sheet added'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图 A.2：添加了样式表的 README.rst 文件
- en: Other ways to render RST
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他渲染 RST 的方法
- en: 'In addition to `docutils`, there are other tools that can make use of an RST
    file:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 除了 `docutils`，还有其他工具可以利用 RST 文件：
- en: The `pandoc` utility, available from [https://pandoc.org](https://pandoc.org),
    can convert RST files to a wider variety of output formats with a number of additional
    rendering options.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 [https://pandoc.org](https://pandoc.org) 的 `pandoc` 工具可以将 RST 文件转换为更广泛的输出格式，并提供多种额外的渲染选项。
- en: Many popular code-sharing services like GitHub, GitLab, and Bitbucket will automatically
    render RST files to HTML for display in their web interfaces.
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多流行的代码共享服务，如 GitHub、GitLab 和 Bitbucket，将自动将 RST 文件渲染为 HTML，以便在它们的网络界面中显示。
- en: The Sphinx project, available from [https://sphinx-doc.org](https://sphinx-doc.org),
    is a comprehensive documentation generator for Python projects. It can generate
    complete documentation for your project by rendering RST it finds in docstrings,
    README files, and other documentation in your code. Sphinx is widely used by Python
    projects, including the official Python documentation at [https://docs.python.org](https://docs.python.org).
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 来自 [https://sphinx-doc.org](https://sphinx-doc.org) 的 Sphinx 项目是一个针对 Python
    项目的综合文档生成器。它可以通过渲染代码中的 docstrings、README 文件和其他文档中的 RST 来为你的项目生成完整的文档。Sphinx 在
    Python 项目中广泛使用，包括官方 Python 文档在 [https://docs.python.org](https://docs.python.org)。
- en: Since RST is widely accepted as the standard for Python documentation, you can
    safely assume that any documentation-oriented tools for Python will expect to
    work with it.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 RST 被广泛接受为 Python 文档的标准，你可以安全地假设任何针对 Python 的文档工具都将期望与之一起工作。
- en: This tutorial only scratched the surface of reStructuredText syntax! For a quick
    syntax reference, see [https://docutils.sourceforge.io/docs/user/rst/quickref.html](https://docutils.sourceforge.io/docs/user/rst/quickref.html).
    For complete documentation, see [https://docutils.sourceforge.io/rst.html](https://docutils.sourceforge.io/rst.html).
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程只是对 reStructuredText 语法进行了浅尝辄止！如需快速语法参考，请参阅[https://docutils.sourceforge.io/docs/user/rst/quickref.html](https://docutils.sourceforge.io/docs/user/rst/quickref.html)。如需完整文档，请参阅[https://docutils.sourceforge.io/rst.html](https://docutils.sourceforge.io/rst.html)。
