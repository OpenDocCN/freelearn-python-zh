- en: Setting Up Serverless Architectures
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置无服务器架构
- en: So far, we have understood what the serverless paradigm is, and also how serverless
    systems work. We have also understood how AWS Lambda's serverless tool works.
    We have also learned the basics of how triggers work in AWS Lambda as well as
    a detailed understanding of the system settings and configuration available to
    the user in the Lambda environment. We have also learned how the Lambda console
    works, and also how to identify and use various parts of the Lambda console in
    detail, including code deployment, trigger manipulation, deploying tests in the
    console, versioning our Lambda function, and also the different settings available.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经了解了无服务器范例是什么，以及无服务器系统是如何工作的。我们还了解了AWS Lambda的无服务器工具是如何工作的。我们还学习了AWS
    Lambda中触发器的基础知识，以及用户在Lambda环境中可用的系统设置和配置的详细理解。我们还学习了Lambda控制台的工作原理，以及如何详细识别和使用Lambda控制台的各个部分，包括代码部署、触发器操作、在控制台中部署测试、对Lambda函数进行版本控制，以及可用的不同设置。
- en: By the end of this chapter, you will have a clear understanding of all the important
    triggers available for AWS Lambda and how you can use them to set up efficient
    Lambda architectures. You will also understand what an event structure is, and
    what an event structure looks like for some AWS resources, and how you can use
    that knowledge to write and deploy better trigger-based Lambda architectures.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，您将清楚地了解AWS Lambda可用的所有重要触发器，以及如何使用它们来设置高效的Lambda架构。您还将了解事件结构是什么，以及某些AWS资源的事件结构是什么样子，以及如何使用这些知识来编写和部署基于触发器的Lambda架构。
- en: 'This chapter will cover the following points:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: S3 trigger
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: S3触发器
- en: SNS trigger
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SNS触发器
- en: SQS trigger
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQS触发器
- en: CloudWatch Event and Logs trigger
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch事件和日志触发器
- en: S3 trigger
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: S3触发器
- en: S3 is the AWS object storage service, where the user can store and retrieve
    any type of object. In this section, we shall be learning how the S3 trigger works,
    what the event structure of an S3 event looks like, and also how to make use of
    them in the learning to build a Lambda function.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: S3是AWS对象存储服务，用户可以存储和检索任何类型的对象。在本节中，我们将学习S3触发器的工作原理，S3事件的事件结构是什么样的，以及如何在学习中使用它们来构建Lambda函数。
- en: 'We will be building a Lambda function that does the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建一个Lambda函数，该函数执行以下操作：
- en: Receives a PUT request event from the S3 service
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从S3服务接收PUT请求事件
- en: Prints the name of the file and other major details
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印文件名和其他重要细节
- en: Transfers that file to a different bucket
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件传输到不同的存储桶
- en: 'So, let''s get started on learning how to use the S3 trigger efficiently. We
    will be working on this task step-by-step, as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们开始学习如何有效使用S3触发器。我们将逐步完成此任务，如下所示：
- en: Firstly, we need to create two S3 buckets for the task. One will be the bucket
    where the file will be uploaded by the user. The other will be the one where the
    file is transferred and uploaded by the Lambda function.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要为任务创建两个S3存储桶。一个将是用户上传文件的存储桶。另一个将是Lambda函数传输和上传文件的存储桶。
- en: The S3 console looks like the following screenshot when there are no pre-existing
    buckets. You can go there by selecting the S3 service from the drop-down Services
    menu in the top-left of your AWS console:![](img/09a5de57-300f-49c0-8b59-12bc529afa02.png)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当没有预先存在的存储桶时，S3控制台如下所示。您可以通过从AWS控制台左上角的下拉服务菜单中选择S3服务进入：![](img/09a5de57-300f-49c0-8b59-12bc529afa02.png)
- en: Let's create two buckets, namely `receiver-bucket` and `sender-bucket`.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建两个存储桶，即`receiver-bucket`和`sender-bucket`。
- en: The `sender-bucket` bucket will be used as the bucket where the user uploads
    the files. The `receiver-bucket` bucket is the one where the Lambda function uploads
    the files. So, as per our problem statement, whenever we upload files to the `sender-bucket`
    bucket, the Lambda function gets triggered and the files get uploaded to `receiver-bucket`.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sender-bucket`存储桶将用作用户上传文件的存储桶。`receiver-bucket`存储桶是Lambda函数上传文件的存储桶。因此，根据我们的问题陈述，每当我们将文件上传到`sender-bucket`存储桶时，Lambda函数将被触发，并且文件将被上传到`receiver-bucket`。'
- en: 'When we click on the Create bucket button in the S3 console, we get a dialog
    that looks like this:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在S3控制台中单击“创建存储桶”按钮时，我们会得到一个如下所示的对话框：
- en: '![](img/0a72eb0c-9445-40b1-9f8c-73b4b34d0e14.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0a72eb0c-9445-40b1-9f8c-73b4b34d0e14.png)'
- en: 'In the preceding dialog, we need to enter the following settings:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面的对话框中，我们需要输入以下设置：
- en: Bucket Name:As the name suggests, we need to enter the name of the bucket we
    are creating. For the creation of the first bucket, name it `sender-bucket` and
    name the second bucket `receiver-bucket`.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储桶名称：顾名思义，我们需要输入正在创建的存储桶的名称。对于第一个存储桶的创建，将其命名为`sender-bucket`，并将第二个存储桶命名为`receiver-bucket`。
- en: Region: This is an AWS region we want the bucket to reside in. You can use the
    default region for this or the region closest to wherever you are located.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域：这是我们希望存储桶所在的AWS区域。您可以使用默认区域，也可以使用距离您所在位置最近的区域。
- en: 'Copy settings from an existing bucket: This specifies whether we want to use
    the same settings as in some other bucket in the console for this bucket too.
    As we do not currently  have any other bucket in our console, we can skip this
    setting by leaving it empty. After this, you can click on the Next button in the
    bottom-right part of the popup.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从现有存储桶复制设置：这指定我们是否要在控制台中使用与其他存储桶相同的设置。由于我们目前在控制台中没有其他存储桶，因此可以通过将其留空来跳过此设置。之后，您可以单击弹出窗口右下角的“下一步”按钮。
- en: 'Once we click Next, we get redirected to the second tab of the popup, which
    is the Set properties menu and looks like this:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“下一步”后，我们将被重定向到弹出窗口的第二个选项卡，即“设置属性”菜单，如下所示：
- en: '![](img/10128d3e-10e6-45e9-b027-0f7ff5062db1.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10128d3e-10e6-45e9-b027-0f7ff5062db1.png)'
- en: 'In this part of the popup, we need to decide on the following settings:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在弹出窗口的此部分，我们需要决定以下设置：
- en: Versioning:This is relevant if we want to keep multiple versions of the files
    in the S3 bucket. This setting is required when you need a Git style versioning
    for your S3 bucket. Note that the storage cost would be included in line with
    the number of versioned documents.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制：如果我们想要在S3存储桶中保留多个文件版本，这是相关的。当您需要为您的S3存储桶使用Git风格的版本控制时，需要此设置。请注意，存储成本将根据版本化文档的数量包括在内。
- en: Server access logging: This will log all the access requests to the S3 bucket.
    This helps debug any security breaches and secure the S3 bucket and the files.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器访问日志：这将记录对S3存储桶的所有访问请求。这有助于调试任何安全漏洞，并保护S3存储桶和文件的安全。
- en: Tags: This will tag the bucket using a *Name:Value* style, the same style of
    tagging as we learned for Lambda functions.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签：这将使用*名称:值*样式对存储桶进行标记，与我们学习Lambda函数的标记样式相同。
- en: Object-level logging: This will use the CloudTrail service of AWS to log all
    the access requests and other details and activities on the S3 bucket. This will
    also include CloudTrail costs too. So, use this feature only if you need detailed
    logging. We shall skip using this for this section.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象级别日志记录：这将使用AWS的CloudTrail服务记录对S3存储桶的所有访问请求和其他详细信息和活动。这也将包括CloudTrail成本。因此，只有在需要详细记录时才使用此功能。我们将跳过在本节中使用此功能。
- en: 'After finishing creating the buckets, the S3 console will look like this, with
    both the created buckets listed:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成创建存储桶后，S3控制台将如下所示，列出了创建的两个存储桶：
- en: '![](img/f7f31807-cf46-4bef-ba8d-d20124be7acf.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f7f31807-cf46-4bef-ba8d-d20124be7acf.png)'
- en: We have successfully created S3 buckets for our task. Now, we have to create
    a Lambda function that can recognize an object upload in the `sender-bucket` bucket
    and send that file to the `receiver-bucket` bucket.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已成功为我们的任务创建了S3存储桶。现在，我们必须创建一个Lambda函数，该函数可以识别“sender-bucket”存储桶中的对象上传，并将该文件发送到“receiver-bucket”存储桶。
- en: 'While creating the Lambda function, this time choose the s3-get-object-python 
    blueprint from the listed options available:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建Lambda函数时，这次从列出的选项中选择s3-get-object-python蓝图：
- en: '![](img/cfc6e86a-9252-4248-b7ed-0055f37f1da5.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cfc6e86a-9252-4248-b7ed-0055f37f1da5.png)'
- en: 'Configure the bucket details in the next step. In the Bucket section, select
    the sender-bucket bucket and select the Object Created (All) option in the Event
    type action. This is because we want to send a notification to Lambda whenever
    an object gets created in the `sender-bucket` bucket. The completed part of the
    section will look like this:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中配置存储桶详细信息。在“存储桶”部分，选择“sender-bucket”存储桶，并在“事件类型”操作中选择“对象创建（全部）”选项。这是因为我们希望在“sender-bucket”存储桶中创建对象时向Lambda发送通知。该部分的完成部分将如下所示：
- en: '![](img/a382c99c-082c-489c-924f-b0ef76843400.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a382c99c-082c-489c-924f-b0ef76843400.png)'
- en: 'Once you have enabled the trigger, Lambda helps you by creating a boilerplate
    code for the task. All we need to do is write the code to put the object into
    the `receiver-bucket` bucket. The boilerplate code can be seen in the Lambda function
    code section:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您启用了触发器，Lambda将通过为任务创建样板代码来帮助您。我们所需要做的就是编写代码将对象放入“receiver-bucket”存储桶中。Lambda函数代码部分中可以看到样板代码：
- en: '![](img/5ea96838-08fa-4617-84f2-aa8a67147152.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5ea96838-08fa-4617-84f2-aa8a67147152.png)'
- en: 'When this step has been completed and you have clicked the Create function
    button, you can see the Triggers section of the Lambda console, which displays
    a success message in green at the top:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当完成此步骤并单击“创建函数”按钮后，您可以在Lambda控制台的触发器部分看到一个成功消息，该消息在顶部以绿色显示：
- en: '![](img/9186f527-a131-41b5-8fb6-21f6f1ddae21.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9186f527-a131-41b5-8fb6-21f6f1ddae21.png)'
- en: 'I have uploaded a small image file into the `sender-bucket` bucket. So, now
    the contents of the sender-bucket bucket look like this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我已将一个小图像文件上传到“sender-bucket”存储桶中。因此，现在“sender-bucket”存储桶的内容如下所示：
- en: '![](img/a3e237fe-2e78-4a2f-a67d-9878ec9a4f87.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a3e237fe-2e78-4a2f-a67d-9878ec9a4f87.png)'
- en: 'As soon as this file had been uploaded, the Lambda function got triggered.
    The Lambda function code looks like this:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦上传了这个文件，Lambda函数就会被触发。Lambda函数的代码如下所示：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, when you run the Lambda function, you can see the same file in the receiver-bucket
    bucket:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当您运行Lambda函数时，您可以在接收者存储桶中看到相同的文件：
- en: '![](img/957a5fbb-3d6b-4f34-8a69-ea62d47a06ed.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/957a5fbb-3d6b-4f34-8a69-ea62d47a06ed.png)'
- en: SNS trigger
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SNS触发器
- en: The SNS notification service can be used across multiple use cases, one of which
    involves triggering Lambda functions. The SNS trigger is popularly used as an
    interface between the AWS CloudWatch service and Lambda.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: SNS通知服务可以用于多种用例，其中之一涉及触发Lambda函数。SNS触发器通常用作AWS CloudWatch服务和Lambda之间的接口。
- en: 'So, in this section, we will do the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create an SNS topic
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个SNS主题
- en: Create a CloudWatch alarm for our `receiver-bucket` bucket to monitor the number
    of objects in the bucket
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的“receiver-bucket”存储桶创建一个CloudWatch警报，以监视存储桶中的对象数量
- en: Once the objects count reaches 5, the alarm will be set to ALERT and the corresponding
    notification will be sent to the SNS topic that we have just created
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦对象计数达到5，警报将被设置为警报，并相应的通知将被发送到我们刚刚创建的SNS主题
- en: This SNS topic will then trigger a Lambda function, which prints out a Hello
    World message for us
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，这个SNS主题将触发一个Lambda函数，为我们打印出“Hello World”消息
- en: This will help you understand how to monitor different AWS services and set
    up alarms for some thresholds for those metrics. And depending on whether the
    service's metrics have hit that threshold or not, the Lambda function will get
    triggered.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您了解如何监视不同的AWS服务并为这些指标设置一些阈值的警报。根据服务的指标是否达到了该阈值，Lambda函数将被触发。
- en: 'The process flow for this is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的流程如下：
- en: 'SNS topics can be created from the SNS dashboard. By clicking on the Create
    topic option, you will be redirected to the topic creation dashboard of SNS. The
    SNS dashboard of AWS looks like this:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SNS主题可以从SNS仪表板创建。通过单击“创建主题”选项，您将被重定向到SNS的主题创建仪表板。AWS的SNS仪表板如下所示：
- en: '![](img/3262ad33-76f7-4d57-8e43-2e12db82b2c0.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3262ad33-76f7-4d57-8e43-2e12db82b2c0.png)'
- en: 'The SNS topic creation wizard in the next step looks like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的SNS主题创建向导如下所示：
- en: '![](img/b51fe4e3-fed3-41be-80df-b59948f23419.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b51fe4e3-fed3-41be-80df-b59948f23419.png)'
- en: In this creation wizard, you can name the SNS topic that you are creating, and
    add any meta information you want to.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在此创建向导中，您可以为正在创建的SNS主题命名，并添加任何您想要的元信息。
- en: 'Once the topic is created, you can view it in the Topics menu, which is on
    the left of your SNS dashboard. The button looks like this:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主题创建后，您可以在SNS仪表板左侧的“主题”菜单中查看它。按钮如下所示：
- en: '![](img/698f8392-0c40-46b6-a558-4fd6309dfa26.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/698f8392-0c40-46b6-a558-4fd6309dfa26.png)'
- en: 'Upon clicking the Topics tab, a list of topics will be displayed, as shown
    in the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“主题”选项卡后，将显示主题列表，如下截图所示：
- en: '![](img/eeae4a00-0357-4153-a0fd-441b71dad76a.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/eeae4a00-0357-4153-a0fd-441b71dad76a.jpg)'
- en: 'Now that we have successfully created an SNS topic, we shall create a CloudWatch
    alarm to monitor our S3 bucket for files. The AWS CloudWatch dashboard looks something
    like this:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已成功创建了一个SNS主题，我们将创建一个CloudWatch警报来监视我们的S3存储桶中的文件。AWS CloudWatch仪表板看起来像这样：
- en: '![](img/10928218-5dfe-47a1-8c48-150d889b7496.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10928218-5dfe-47a1-8c48-150d889b7496.png)'
- en: 'Now, we can go to the Alarms page by clicking the Alarms button in the list
    on the left of the dashboard. The AWS Alarms page of looks like this:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过单击仪表板左侧列表中的“警报”按钮转到警报页面。AWS警报页面如下所示：
- en: '![](img/bc0501d4-b507-4d58-b7c2-2c589238c3bc.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/bc0501d4-b507-4d58-b7c2-2c589238c3bc.png)'
- en: 'Next, click on Create Alarm to create an alarm. This will open an alarm creation
    wizard with multiple options. The wizard looks like this, depending on the services
    running in your AWS ecosystem:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击“创建警报”以创建警报。这将打开一个带有多个选项的警报创建向导。根据您的AWS生态系统中运行的服务，向导如下所示：
- en: '![](img/a9f15a2f-b628-447e-a920-7f9287bc587b.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a9f15a2f-b628-447e-a920-7f9287bc587b.png)'
- en: 'As we intend to create an alarm for our S3 bucket, we can go to the S3 Metrics tab
    and ignore the rest of the available metrics. If you click on the Storage Metrics
    option in the S3 Metrics category, you will be re-directed to another alarm creation
    wizard that looks like the following, depending on the number of buckets you have
    in your S3:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们打算为我们的S3存储桶创建警报，我们可以转到S3指标选项卡，并忽略其他可用的指标。如果您点击S3指标类别中的存储指标选项，您将被重定向到另一个警报创建向导，具体取决于您在S3中拥有的存储桶数量：
- en: '![](img/32782120-1b76-4d1b-8b27-9a929f4dc6e3.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/32782120-1b76-4d1b-8b27-9a929f4dc6e3.png)'
- en: 'If you observe the options in the Metric Name column, you will see two options
    available for each bucket: NumberOfObjects and BucketSizeBytes. They are self-explanatory 
    and we will only need the NumberOfObjects option for the `receiver-bucket` bucket.
    So, select that option and click Next:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您观察“指标名称”列中的选项，您将看到每个存储桶都有两个选项可用：NumberOfObjects和BucketSizeBytes。它们是不言自明的，我们只需要“NumberOfObjects”选项来监视“receiver-bucket”存储桶。因此，选择该选项并单击“下一步”：
- en: '![](img/45fd818d-d08c-4100-857c-4377453774ea.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/45fd818d-d08c-4100-857c-4377453774ea.png)'
- en: 'This will take you to the alarm definition wizard, where you need to specify
    the details of the SNS topic and the threshold for the alarm. The wizard looks
    like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这将带您进入警报定义向导，在那里您需要指定SNS主题的详细信息和警报的阈值。向导如下所示：
- en: '![](img/0921bdeb-5fde-4537-8f95-04aed3bcf7e8.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0921bdeb-5fde-4537-8f95-04aed3bcf7e8.png)'
- en: 'Add in the details for the threshold and the name of the alarm. The threshold
    is five files, which means that the alarm will be triggered as soon as the number
    of files in the corresponding bucket (`receiver-bucket` in our case) reaches a
    total of five. The wizard looks like this:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加阈值和警报名称的详细信息。阈值为五个文件，这意味着一旦相应存储桶（在我们的情况下为“receiver-bucket”）中的文件数量达到五个，警报就会被触发。向导如下所示：
- en: '![](img/4148aba2-9c69-4913-b885-13d2a49687e7.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4148aba2-9c69-4913-b885-13d2a49687e7.png)'
- en: 'In the Actions option, we can configure the alarm to send the notification
    to the SNS topic that we have just created. You can select the topic from the
    drop-down list, as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“操作”选项中，我们可以配置警报将通知发送到我们刚刚创建的SNS主题。您可以从下拉列表中选择主题，如下所示：
- en: '![](img/9438ea9f-5fb0-46a7-bc73-ef23df6afa6c.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9438ea9f-5fb0-46a7-bc73-ef23df6afa6c.png)'
- en: 'Once we have configured the SNS topic, we can click on the blue Create Alarm button
    at the bottom. This will create the alarm that is linked to the SNS topic as a
    notification pipeline. The created alarm will look like this on the dashboard:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦配置了SNS主题，我们可以点击底部的“创建警报”按钮。这将创建与SNS主题链接的警报作为通知管道。在仪表板上，创建的警报将如下所示：
- en: '![](img/55201a98-53ba-42cd-bf02-c2827618e7fc.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](img/55201a98-53ba-42cd-bf02-c2827618e7fc.png)'
- en: 'Now, we can move on to building the Lambda function for the task. For this
    particular task, use the sns-message-python blueprint while creating our Lambda
    function:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以继续构建任务的Lambda函数。对于这个特定的任务，在创建Lambda函数时，请使用sns-message-python蓝图：
- en: '![](img/b08bdcd4-f8b2-4b7e-8ac5-14da83059c1f.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b08bdcd4-f8b2-4b7e-8ac5-14da83059c1f.png)'
- en: 'In the previous step, when you have selected the blueprint, you will be asked
    to enter some meta information regarding your Lambda function, just like we did
    previously while creating Lambda functions. In the same wizard, you will also
    be asked to mention the name of the SNS topic. You can specify it here:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在上一步中，当您选择了蓝图后，将要求您输入有关Lambda函数的一些元信息，就像我们之前创建Lambda函数时所做的那样。在同一向导中，您还将被要求提及SNS主题的名称。您可以在这里指定它：
- en: '![](img/9c4217ff-c8c1-4bce-b320-f7f88e46b38f.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9c4217ff-c8c1-4bce-b320-f7f88e46b38f.png)'
- en: 'Now that we have selected all the options for the Lambda function correctly,
    we can now go on to the code. The desired code will look like this:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已经正确选择了Lambda函数的所有选项，我们现在可以进行代码编写。期望的代码将如下所示：
- en: '![](img/b6107109-2c7f-4237-bc5e-62cbb37f1129.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6107109-2c7f-4237-bc5e-62cbb37f1129.png)'
- en: The preceding code will display a `Hello World` message whenever the Lambda
    function gets triggered. This we have completed the setup for this task.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将在Lambda函数触发时显示“Hello World”消息。这样我们就完成了此任务的设置。
- en: To test the preceding setup, you can simply upload more than five files to your
    `receiver-bucket` bucket and check for Lambda function's execution.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要测试前面的设置，您可以简单地将超过五个文件上传到您的`receiver-bucket`存储桶，并检查Lambda函数的执行情况。
- en: SQS trigger
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SQS触发器
- en: The **AWS Simple Queue Service (SQS)** is the AWS queue service. This service
    is similar to the queuing mechanisms that are used generally in software engineering.
    This enables us to add, store, and remove messages inside the queue.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**AWS简单队列服务（SQS）**是AWS队列服务。该服务类似于通常在软件工程中使用的排队机制。这使我们能够在队列中添加、存储和删除消息。'
- en: We will learn how to trigger a Lambda function, depending on the number of messages
    in a SQS queue. This task will help you understand how serverless batch data architectures
    can be built and how to build one yourself.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习如何根据SQS队列中的消息数量触发Lambda函数。此任务将帮助您了解如何构建无服务器批量数据架构，以及如何自己构建一个。
- en: We will do this by monitoring our SQS queue with a CloudWatch alarm and relaying
    the information to Lambda via an SNS topic, just like we did in the previous task.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过监视我们的SQS队列使用CloudWatch警报，并通过SNS主题将信息传递给Lambda，就像我们在上一个任务中所做的那样。
- en: 'So, in this section, we will do the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create an SQS queue
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个SQS队列
- en: Create an SNS topic
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个SNS主题
- en: Create a CloudWatch alarm for our SQS queue to monitor the number of messages
    in the queue
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的SQS队列创建一个CloudWatch警报，以监视队列中的消息数量
- en: Once the messages count reaches 5, the alarm will be set to ALERT and the corresponding
    notification will be sent to the SNS topic we have just created
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦消息计数达到5，警报将被设置为“警报”，并相应的通知将被发送到我们刚刚创建的SNS主题
- en: This SNS topic will then trigger a Lambda function, which prints out a `Hello
    World` message for us
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，这个SNS主题将触发一个Lambda函数，为我们打印一个“Hello World”消息。
- en: This will help you understand how to monitor queues and build efficient serverless
    data architectures that are batched, instead of in real time.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您了解如何监视队列，并构建高效的无服务器数据架构，而不是实时的批处理。
- en: 'The process flow for this is as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程的流程如下：
- en: 'We will start by creating an AWS SQS queue. We need to go to the SQS dashboard
    of our AWS account. The dashboard looks like this:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先创建一个AWS SQS队列。我们需要转到我们AWS账户的SQS仪表板。仪表板如下所示：
- en: '![](img/39c005af-791e-433c-858a-3ba9d9d1292b.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/39c005af-791e-433c-858a-3ba9d9d1292b.png)'
- en: 'Click on the Get Started Now button to create an SQS queue. It will redirect
    you to the queue creation wizard, where you need to enter details such as the
    name, type of queue, and so on. The queue creation wizard looks like this:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“立即开始”按钮创建一个SQS队列。它会将您重定向到队列创建向导，在那里您需要输入名称、队列类型等详细信息。队列创建向导如下所示：
- en: '![](img/50152dc5-a8d0-4eea-964c-ec94f4a3a3f5.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](img/50152dc5-a8d0-4eea-964c-ec94f4a3a3f5.png)'
- en: 'You can enter the name of the queue in Queue Name. In the What type of queue do
    you need? option, select the Standard Queue option. In the options at the bottom,
    select the blue Quick-Create Queue option:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在“队列名称”中输入队列的名称。在“您需要什么类型的队列？”选项中，选择“标准队列”选项。在底部的选项中，选择蓝色的“快速创建队列”选项：
- en: '![](img/03c94053-37fe-49db-bc53-bc2049fabe0e.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](img/03c94053-37fe-49db-bc53-bc2049fabe0e.png)'
- en: 'The Configure Queue option is for advanced settings. It is not necessary to
    tweak those settings for this task. This is what the advanced settings look like:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: “配置队列”选项是用于高级设置的。对于这个任务，不需要调整这些设置。高级设置如下所示：
- en: '![](img/67e1af76-950f-4b85-bfe9-f574dadb53cc.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](img/67e1af76-950f-4b85-bfe9-f574dadb53cc.png)'
- en: 'Once you have created the queue, you will be taken to the SQS page, where all
    the queues that you have created are listed similarly to the SNS list. This page
    looks like this:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建队列后，您将被带到SQS页面，那里列出了您创建的所有队列，类似于SNS列表。此页面如下所示：
- en: '![](img/6a3174a2-251c-4b5b-af46-673a86e7514e.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a3174a2-251c-4b5b-af46-673a86e7514e.jpg)'
- en: 'As we have already created an SNS topic in the previous task, we will use the
    same topic for this purpose. If you haven''t created an SNS topic, you can refer
    to the previous task for instructions on how to create one. The list of SNS topics
    looks like this:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们在上一个任务中已经创建了一个SNS主题，我们将为此目的使用相同的主题。如果您还没有创建SNS主题，您可以参考上一个任务中有关如何创建主题的说明。SNS主题列表如下所示：
- en: '![](img/489ab47d-2c1e-4d58-a857-5b33a52e7154.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](img/489ab47d-2c1e-4d58-a857-5b33a52e7154.jpg)'
- en: 'Now, we will go to the CloudWatch dashboard to create an alarm to monitor our
    SQS queue and send a notification to Lambda via the SNS topic that we have already
    created. We can now see the SQS queue metrics in the alarm creation wizard:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将转到CloudWatch仪表板，创建一个警报来监视我们的SQS队列，并通过我们已经创建的SNS主题向Lambda发送通知。我们现在可以在警报创建向导中看到SQS队列的指标：
- en: '![](img/70942869-f930-4886-be27-da5db529dc1b.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/70942869-f930-4886-be27-da5db529dc1b.png)'
- en: 'By clicking on the Queue Metrics option under SQS Metrics, we will be taken
    to the page where all queue metrics are listed, and we need to select one of them
    for our alarm:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过单击SQS指标下的“队列指标”选项，我们将被带到列出所有队列指标的页面，我们需要选择其中一个用于我们的警报：
- en: '![](img/8d9f61c2-5448-4a61-9350-36d7147f350f.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8d9f61c2-5448-4a61-9350-36d7147f350f.png)'
- en: Here, we are interested in the ApproximateNumberOfMessagesVisible metric, which
    gives the number of messages in the queue. It says Approximate, as SQS is a distributed
    queue and the number of messages can only be determined stochastically.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们对“ApproximateNumberOfMessagesVisible”指标感兴趣，该指标提供了队列中的消息数量。它说是“Approximate”，因为SQS是一个分布式队列，消息数量只能以随机方式确定。
- en: 'In the next page, after selecting the ApproximateNumberOfMessagesVisible metric
    from the list, the necessary settings can be configured as we did for the S3 Metrics
    in the previous task. The page should look like this:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页中，从列表中选择“ApproximateNumberOfMessagesVisible”指标后，可以像我们在上一个任务中为S3指标所做的那样配置必要的设置。页面应该如下所示：
- en: '![](img/ac9558df-bc94-4b64-835f-c0fea9f2e7fa.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ac9558df-bc94-4b64-835f-c0fea9f2e7fa.png)'
- en: 'In the Actions section, configure the SNS topic to which we want to send our
    notification. This step is also similar to how we configured the SNS topic in
    the previous task:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在操作部分，配置我们要发送通知的SNS主题。这一步与我们在上一个任务中配置SNS主题的方式类似：
- en: '![](img/6a9ed54d-2897-40b3-9ab1-e327bb359f61.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6a9ed54d-2897-40b3-9ab1-e327bb359f61.png)'
- en: 'Once you are satisfied with the metadata and the settings you have configured
    for the alarm, you can click the blue Create Alarm button on the bottom-right
    side of the screen. That will successfully create an alarm that monitors your
    SQS queue and sends a notification to the SNS topic that you have configured:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您对元数据和您为警报配置的设置感到满意，您可以单击屏幕右下角的蓝色创建警报按钮。这将成功创建一个监视您的SQS队列并向您配置的SNS主题发送通知的警报：
- en: '![](img/def27a8d-3fb9-4bcc-89d5-c2d7d93f2591.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/def27a8d-3fb9-4bcc-89d5-c2d7d93f2591.png)'
- en: 'We can use the Lambda function that we created in the previous task. Make sure
    the trigger is the SNS topic that we are using to configure the notification system
    of the alarm:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用上一个任务中创建的Lambda函数。确保触发器是我们用于配置警报通知系统的SNS主题：
- en: '![](img/5d5aae9c-805b-4fcb-8ea4-602553ca4ed8.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/5d5aae9c-805b-4fcb-8ea4-602553ca4ed8.jpg)'
- en: 'The Lambda function code for this task is as follows:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此任务的Lambda函数代码如下：
- en: '[PRE1]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: CloudWatch trigger
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudWatch触发器
- en: '**CloudWatch** is the logging and monitoring service for AWS, where logs from
    most services get stored and monitored. In this section, we will learn how CloudWatch
    trigger works, how CloudWatch querying works in practice, configuring this in
    the Lambda function, and also how to make use of this knowledge to build a Lambda
    function.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**CloudWatch**是AWS的日志记录和监控服务，大多数服务的日志都会被存储和监控。在本节中，我们将学习CloudWatch触发器的工作原理，CloudWatch查询在实践中的工作原理，如何在Lambda函数中配置它，以及如何利用这些知识来构建Lambda函数。'
- en: 'So, in this section, we will do the following:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create a CloudWatch log
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个CloudWatch日志
- en: Briefly understand how a CloudWatch log works
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简要了解CloudWatch日志的工作原理
- en: Create a Lambda function that gets triggered by the CloudWatch trigger
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个由CloudWatch触发器触发的Lambda函数
- en: This will help you understand and build resilient and stable serverless architectures.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您理解并构建弹性和稳定的无服务器架构。
- en: 'The process flow for this is as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程的流程如下：
- en: 'To create a CloudWatch Logs group, click on the Logs option to the left of
    the CloudWatch console:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建一个CloudWatch日志组，请点击CloudWatch控制台左侧的日志选项：
- en: '![](img/76623ee2-7ff2-40d9-b4e0-7e07a76ca89f.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76623ee2-7ff2-40d9-b4e0-7e07a76ca89f.png)'
- en: 'Once you are on the AWS CloudWatch Logs page, you will see a list of log groups
    that are already present. The CloudWatch Logs page looks something like this:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您进入AWS CloudWatch日志页面，您将看到一个已经存在的日志组列表。CloudWatch日志页面看起来是这样的：
- en: '![](img/c23bdbdf-ee89-4449-8979-5d503712e8e8.png)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c23bdbdf-ee89-4449-8979-5d503712e8e8.png)'
- en: 'Let''s go ahead and create a new CloudWatch log. You can see the option to
    create a new log group from the Actions drop-down menu at the top:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们继续创建一个新的CloudWatch日志。您可以在顶部的操作下拉菜单中看到创建新日志组的选项：
- en: '![](img/53517c8e-c595-4e20-925c-35967b6b0cac.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/53517c8e-c595-4e20-925c-35967b6b0cac.png)'
- en: 'In the next step, you will be asked to name the log group that you are creating.
    Go ahead and enter the relevant information and click Create log group:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中，您将被要求命名您正在创建的日志组。继续输入相关信息，然后单击创建日志组：
- en: '![](img/6315be94-5485-490f-ae80-d660c7e88531.png)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6315be94-5485-490f-ae80-d660c7e88531.png)'
- en: 'So, now we have a new log group listed in the list of log groups in our CloudWatch
    console:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以，现在我们在CloudWatch控制台的日志组列表中有一个新的日志组：
- en: '![](img/c02d6c18-85b0-4fcb-99cd-9e39456e0c45.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c02d6c18-85b0-4fcb-99cd-9e39456e0c45.png)'
- en: Once the log group has been created, we can now start working on our Lambda
    function. So, let's move on to the Lambda console and start creating a new function.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 日志组创建后，我们现在可以开始处理我们的Lambda函数。因此，让我们转到Lambda控制台并开始创建一个新函数。
- en: 'From the blueprints, choose the cloudwatch-logs-process-data blueprint. The
    description reads: A real-time consumer of log events ingested by an Amazon CloudWatch
    Logs log group:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从蓝图中选择cloudwatch-logs-process-data蓝图。描述如下：Amazon CloudWatch日志日志组摄取的实时日志事件的实时消费者：
- en: '![](img/61ffd152-0d65-4079-9dfb-5007b3dffeee.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/61ffd152-0d65-4079-9dfb-5007b3dffeee.png)'
- en: 'After selecting the corresponding blueprint option, you will be redirected
    to the Lambda creation wizard, as usual:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择相应的蓝图选项后，您将像往常一样被重定向到Lambda创建向导：
- en: '![](img/9d4e0e03-c35d-4b60-9d6f-708caf1b85e7.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9d4e0e03-c35d-4b60-9d6f-708caf1b85e7.png)'
- en: 'Just as we did in the previous task, we will also enter relevant information
    about the log name and other details in the cloudwatch-logs pane of the Lambda
    creation panel:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像我们在上一个任务中所做的那样，在Lambda创建面板的cloudwatch-logs窗格中，我们还将输入有关日志名称和其他细节的相关信息：
- en: '![](img/d882d70c-60fd-4d07-8019-83d11b359ea1.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d882d70c-60fd-4d07-8019-83d11b359ea1.png)'
- en: After clicking Create function, we will be directed to a Triggers page with
    the success message.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击创建函数后，我们将被重定向到一个触发器页面，并显示成功消息。
- en: '![](img/76767741-339a-45bd-9323-6b8fbc1ba9e1.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/76767741-339a-45bd-9323-6b8fbc1ba9e1.jpg)'
- en: 'So, now we write the Lambda function code to identify the log group and print `Hello
    World ` message:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所以，现在我们编写Lambda函数代码来识别日志组并打印`Hello World`消息：
- en: '![](img/42a6a6b2-7e14-46ac-bcf6-890cef77d9b3.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/42a6a6b2-7e14-46ac-bcf6-890cef77d9b3.png)'
- en: 'We have now successfully completed another task where we understood how to
    trigger a Lambda function via AWS CloudWatch Logs. The Lambda function code for
    this task is as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经成功完成了另一个任务，了解了如何通过AWS CloudWatch日志触发Lambda函数。此任务的Lambda函数代码如下：
- en: '[PRE2]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Summary
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned a great deal about how various Lambda triggers
    work, and how to configure them, set up the triggers, and write Lambda function
    code to handle the data from them.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经学到了有关各种Lambda触发器如何工作以及如何配置它们，设置触发器并编写Lambda函数代码来处理它们的数据。
- en: In the first task, we learned how S3 events work and how to understand and receive
    events from the S3 service to AWS Lambda. We have understood how to monitor S3
    buckets for file details via their metrics in CloudWatch and then send that notification
    via AWS SNS to a Lambda functions.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个任务中，我们学习了S3事件的工作原理，以及如何理解并接收来自S3服务的事件到AWS Lambda。我们了解了如何通过CloudWatch监视S3存储桶的文件详细信息，并通过AWS
    SNS将该通知发送到Lambda函数。
- en: We have also learned how to create SNS topics and how to use them as an intermediate
    route between several metrics of AWS services from CloudWatch to AWS Lambda.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何创建SNS主题，以及如何将它们用作从CloudWatch到AWS Lambda的多个AWS服务的中间路由。
- en: We have learned briefly about how AWS CloudWatch works. We understood what the
    metrics of various AWS services, such as S3, SQS, and CloudWatch, look like. We
    also learned how to set thresholds for CloudWatch Alarms, and how to connect those
    alarms to notification services, such as AWS SNS.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简要了解了AWS CloudWatch的工作原理。我们了解了各种AWS服务的指标是什么样子，比如S3、SQS和CloudWatch。我们还学会了为CloudWatch警报设置阈值，以及如何将这些警报连接到AWS
    SNS等通知服务。
- en: We learned how AWS CloudWatch Logs work and how to connect and use the CloudWatch
    trigger in Lambda so it's triggered whenever a new log event is added/received.
    Overall, we have successfully created new AWS services, such as SQS, CloudWatch
    Logs, SNS, and S3 buckets in this chapter, and successfully built and deployed
    three serverless tasks/pipelines.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了AWS CloudWatch Logs的工作原理，以及如何连接和使用Lambda中的CloudWatch触发器，以便在添加/接收新的日志事件时触发它。总的来说，在本章中，我们成功创建了新的AWS服务，如SQS、CloudWatch
    Logs、SNS和S3存储桶，并成功构建和部署了三个无服务器任务/流水线。
- en: In the next chapter, we will learn how to build serverless APIs, on which we
    will perform some tasks just like we did in this chapter, and get a hands-on understanding
    of how APIs work and, most importantly, how serverless APIs work.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何构建无服务器API，我们将在其中执行一些任务，就像我们在本章中所做的那样，并且深入了解API的工作原理，最重要的是，无服务器API的工作原理。
