- en: Chapter 4. Django in PTVS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章 PTVS中的Django
- en: Django is a high-level Python Web framework based on the **Model View Controller**
    (**MVC**) pattern; it provides a series of tools and helpers to create a rapid
    development environment for the Web. There are plenty of successful websites that
    are based on Django, such as Instagram, Pinterest, Disqus, and some parts of Dropbox.
    It has been in development since 2006, making it a rock-solid choice for web projects,
    especially when using Python as the language of choice. For more information about
    Django, refer to its official project website at [https://www.djangoproject.com/](https://www.djangoproject.com/).
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Django是一个基于**模型-视图-控制器**（**MVC**）模式的Python高级Web框架；它提供了一系列工具和助手，以创建一个快速开发环境。基于Django的网站有很多成功的例子，如Instagram、Pinterest、Disqus以及Dropbox的部分功能。它自2006年开始开发，使其成为Web项目的稳固选择，尤其是在选择Python作为语言时。有关Django的更多信息，请参阅其官方项目网站[https://www.djangoproject.com/](https://www.djangoproject.com/)。
- en: In this chapter, we will go deeper into Django framework integration in Visual
    Studio. We will see how to start a Django project, taking advantage of Visual
    Studio tools and setting up the development environment for it.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将深入了解Visual Studio中Django框架的集成。我们将看到如何利用Visual Studio工具启动Django项目，并为其设置开发环境。
- en: Once we have a basic working website, we will learn how to create a connection
    to the database and set up the admin interface to create a new Django application
    within Visual Studio.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有一个基本的工作网站，我们将学习如何创建数据库连接并设置管理界面，在Visual Studio中创建一个新的Django应用程序。
- en: Django project template and tools
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Django项目模板和工具
- en: 'Let''s take a look at Django-related tools and templates available in PTVS,
    starting with the Django project template. Project templates in Visual Studio
    are boilerplate helpers that create a project''s outline based on the specific
    type of the project. To start a new Django project, open the **New Project** window
    under the **File** menu. Once it''s open, select **Python** from the list on the
    left-hand side. This displays the installed project types available in the system.
    Here is what the window looks like:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看PTVS中可用的Django相关工具和模板，从Django项目模板开始。在Visual Studio中，项目模板是样板助手，根据项目的特定类型创建项目轮廓。要开始一个新的Django项目，在**文件**菜单下打开**新建项目**窗口。一旦打开，从左侧的列表中选择**Python**。这显示了系统中可用的已安装项目类型。以下是窗口的外观：
- en: '![Django project template and tools](img/8687OS_04_01.jpg)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![Django项目模板和工具](img/8687OS_04_01.jpg)'
- en: Click on the **Django Project** option in the right-hand panel to define the
    project name in the bottom of the window. We perform this action while specifying
    where the file should be saved. You can also define the solution name for the
    Visual Studio solution for the project. Once these properties are defined, clicking
    on **OK** creates the Django project.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在右侧面板中单击**Django项目**选项，在窗口底部定义项目名称。我们在指定文件应保存的位置时执行此操作。您还可以为项目的Visual Studio解决方案定义解决方案名称。一旦定义了这些属性，单击**确定**即可创建Django项目。
- en: '![Django project template and tools](img/8687OS_04_02.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Django项目模板和工具](img/8687OS_04_02.jpg)'
- en: Example default Django project structure shown in Solution Explorer
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在解决方案资源管理器中显示的示例默认Django项目结构
- en: Installing a Python package
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装Python包
- en: 'The basic Django project file structure is shown in the **Solution Explorer**
    window. With the project structure in place, the next step is to install the Python
    package required. We have to instruct our solution about either the Django framework''s
    whereabouts or the location where we need to install it. To begin, add a Python
    interpreter to the project—we are going to use Python 2.7—then install the Django
    packages by right-clicking on the installed **Python** entry in the **Python Environments**
    node of the **Solution Explorer** window, and finally select the **Install Python
    Package** entry:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 基本的Django项目文件结构在**解决方案资源管理器**窗口中显示。在项目结构就绪后，下一步是安装所需的Python包。我们必须向解决方案指示Django框架的位置或需要安装它的位置。首先，将Python解释器添加到项目中——我们将使用Python
    2.7——然后通过在**解决方案资源管理器**窗口的**Python环境**节点中右键单击已安装的**Python**条目来安装Django包，最后选择**安装Python包**条目：
- en: '![Installing a Python package](img/8687OS_04_04.jpg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![安装Python包](img/8687OS_04_04.jpg)'
- en: The **Install Python Package** window will open; here, insert the name of the
    `pip` Python package that is required to start referencing the framework in our
    environment, which is `django`. You can even choose a specific version of the
    framework by naming the version of the package in the `django==x.x.x` format.
    The `x.x.x` indicates the complete version label. If no version number is supplied,
    the latest available version of the package will be installed.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 将打开**安装 Python 包**窗口；在此处，输入启动环境中引用框架所需的`pip` Python包的名称，该名称为`django`。您甚至可以通过在`django==x.x.x`格式中命名包的版本来选择框架的特定版本。`x.x.x`表示完整的版本标签。如果没有提供版本号，将安装包的最新版本。
- en: '![Installing a Python package](img/8687OS_04_03.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Python 包](img/8687OS_04_03.jpg)'
- en: Click on **OK** to begin the Django package installation by downloading it from
    the `pip` repository. Make sure to check your system settings on the system agreement
    to give Visual Studio the privileges of a system administrator.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**确定**以通过从`pip`仓库下载开始安装Django包。请确保在系统协议中检查您的系统设置，以授予Visual Studio系统管理员的权限。
- en: Note
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The **Run as Administrator** checkbox should only be checked when the previous
    installation has failed. It ensures that `pip` has the necessary privileges on
    the system to install the package.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**以管理员身份运行**复选框仅在之前的安装失败时才应选中。它确保`pip`在系统上安装包具有必要的权限。'
- en: '![Installing a Python package](img/8687OS_04_05.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Python 包](img/8687OS_04_05.jpg)'
- en: The installation process can be viewed in the output window as shown in preceding
    screenshot. If you are using **Run as Administrator**, the real-time download
    progress is not available. In this scenario, **Installing 'django'** is displayed
    in the output window for a period of time, as this indicates that `pip` is still
    downloading.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 安装过程可以在输出窗口中查看，如前一个截图所示。如果您使用的是**以管理员身份运行**，则无法显示实时下载进度。在这种情况下，输出窗口将显示一段时间**安装'django'**，因为这表明`pip`仍在下载。
- en: '![Installing a Python package](img/8687OS_04_06.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![安装 Python 包](img/8687OS_04_06.jpg)'
- en: Once the downloading process finishes, a more detailed view is available as
    shown in preceding screenshot. It'll keep you informed about the installation
    process and whether it is successful. If everything happens without a hitch, a
    **'django' was installed successfully** message is shown at the end of the `pip`
    log in the **Output** window.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下载过程完成后，将显示更详细的信息，如前一个截图所示。它会通知您安装过程以及是否成功。如果一切顺利，`pip`日志的**输出**窗口将显示**'django'安装成功**的消息。
- en: Running the application
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: 'Now that the Django framework is successfully installed in the system and is
    referenced in the project, let''s make sure it works and all the workflows are
    running correctly. Run the application by pressing *F5* or by clicking on the
    **Run** icon in the toolbar. Since Visual Studio understands that the current
    project is a website, it will run the output in a browser instance. You can see
    the **Run** button followed by the name of the default system browser that will
    be started. It''s possible to select the browser in which we''ll run the project
    by clicking on the drop-down button that shows all possible choices:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Django框架已成功安装在系统中，并在项目中引用，让我们确保它正常工作，所有工作流程都运行正确。通过按*F5*键或通过在工具栏中单击**运行**图标来运行应用程序。由于Visual
    Studio知道当前项目是一个网站，它将在浏览器实例中运行输出。您可以看到紧随其后的**运行**按钮和将启动的默认系统浏览器的名称。您可以通过单击显示所有可能选择的下拉按钮来选择我们将要运行项目的浏览器：
- en: '![Running the application](img/8687OS_04_07.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/8687OS_04_07.jpg)'
- en: 'The following two things happen when you run the application:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 运行应用程序时会发生以下两件事：
- en: PTVS runs the Django `manage.py` command
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PTVS运行Django `manage.py`命令
- en: A browser instance with the output of the website is shown
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示了一个带有网站输出的浏览器实例
- en: The first one is shown in a command-prompt window that informs us about the
    result of the execution. It indicates whether there was any problem in the settings.
    It is the equivalent of launching the `python manage.py runserver` command from
    the command line.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个显示在命令提示符窗口中，告知我们执行的结果。它指示设置中是否存在任何问题。它是从命令行启动`python manage.py runserver`命令的等效操作。
- en: '![Running the application](img/8687OS_04_08.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/8687OS_04_08.jpg)'
- en: 'At the same time, a new instance of the browser is created with our website''s
    home page. In a new classical Django installation, you will see the following
    **It worked!** page:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 同时，还会创建一个新的浏览器实例，显示我们网站的首页。在一个新的经典 Django 安装中，你会看到以下 **It worked!** 页面：
- en: '![Running the application](img/8687OS_04_09.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/8687OS_04_09.jpg)'
- en: If you're able to see the preceding screen, it means that the setup of the Django
    project has been successfully completed. Now we can continue with the development
    of the website.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你能看到前面的屏幕，这意味着 Django 项目的设置已成功完成。现在我们可以继续开发网站。
- en: IntelliSense in Django templates
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Django 模板中的 IntelliSense
- en: We have already talked about the power of IntelliSense in Visual Studio in Python
    code. IntelliSense supports even the Django template editor, providing it with
    access to all the template tags of Django; it also provides access to the context
    defined by the calling view.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经讨论了 Visual Studio 中 IntelliSense 在 Python 代码中的强大功能。IntelliSense 还支持 Django
    模板编辑器，为其提供访问 Django 所有模板标签的权限；它还提供访问由调用视图定义的上下文的权限。
- en: 'IntelliSense offers help with the HTML part as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: IntelliSense 在 HTML 部分提供以下帮助：
- en: '![IntelliSense in Django templates](img/8687OS_04_10.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![Django 模板中的 IntelliSense](img/8687OS_04_10.jpg)'
- en: 'Additionally, when in a Django block tag, `("{% … %}")`, it shows Django-specific
    tags and view context objects. IntelliSense also helps with filters:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，当处于 Django 块标签 `("{% … %}")` 中时，它会显示 Django 特定的标签和视图上下文对象。IntelliSense 还在过滤器方面提供帮助：
- en: '![IntelliSense in Django templates](img/8687OS_04_11.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![Django 模板中的 IntelliSense](img/8687OS_04_11.jpg)'
- en: Setting up and managing a database for a Django project
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为 Django 项目设置和管理数据库
- en: Once a working Django project is set up, we will need to attach a database in
    order to have a place to store the website data and the overall configuration
    of the Django admin console. For the purpose of this book, we are going to use
    a SQLite database, which is easy to manage, to connect to the project. It's a
    file-based database and can be easily managed by Django. For more information
    on SQLite, refer to its website at [http://www.sqlite.org/](http://www.sqlite.org/).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设置好一个可工作的 Django 项目，我们还需要附加一个数据库，以便有一个存储网站数据和 Django 管理控制台整体配置的地方。为了本书的目的，我们将使用易于管理的
    SQLite 数据库来连接到项目。它是一个基于文件的数据库，可以很容易地由 Django 管理。有关 SQLite 的更多信息，请参阅其网站 [http://www.sqlite.org/](http://www.sqlite.org/)。
- en: 'Attaching a database to Django is really easy. You just have to tell Django
    which database to use and how to connect to it. This has to be done in the Django
    `settings.py` file. To connect to and create a SQLite database, the database section
    of code should look like the following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据库附加到 Django 非常简单。你只需告诉 Django 使用哪个数据库以及如何连接到它。这必须在 Django 的 `settings.py`
    文件中完成。要连接并创建 SQLite 数据库，代码中的数据库部分应如下所示：
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_12.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![为 Django 项目设置和管理数据库](img/8687OS_04_12.jpg)'
- en: 'Since SQLite is a file-based database, the `Name` property should be the path
    of the database file. We are using a constant that contains the project''s root
    path, `Project_Root`, which has to be defined first with the following two lines
    of code:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 SQLite 是基于文件的数据库，`Name` 属性应该是数据库文件的路径。我们使用一个包含项目根路径的常量 `Project_Root`，它必须首先通过以下两行代码定义：
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_13.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![为 Django 项目设置和管理数据库](img/8687OS_04_13.jpg)'
- en: 'The database is now connected to the Django project. To create the configuration
    tables in the database, use the Django sync DB command. Visual Studio provides
    a command, which starts this process from inside the IDE. To access the `sync`
    command, right-click on the project node of the **Solution Explorer** window and
    select the **Django Sync DB** entry to start the process:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库现在已连接到 Django 项目。要创建数据库中的配置表，请使用 Django sync DB 命令。Visual Studio 提供了一个命令，可以从
    IDE 内启动此过程。要访问 `sync` 命令，右键单击 **解决方案资源管理器** 窗口的项目节点，并选择 **Django Sync DB** 项以启动过程：
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_14.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![为 Django 项目设置和管理数据库](img/8687OS_04_14.jpg)'
- en: 'Once you click on **Django Sync DB**, the synchronizing starts. The **Django
    Management Console** option displays a detailed log of activities as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击 **Django Sync DB**，同步过程就开始。**Django 管理控制台**选项显示如下详细日志：
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_15.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![为 Django 项目设置和管理数据库](img/8687OS_04_15.jpg)'
- en: When the command is first executed, Django creates the actual database and also
    the authentication entries to be used for the Django administration console. The
    preferred username and password are asked to be entered. Once the information
    is provided, the process ends with the database created.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当命令首次执行时，Django会创建实际的数据库以及用于Django管理控制台的认证条目。系统会要求输入首选用户名和密码。一旦提供了信息，过程就会结束，数据库已创建。
- en: We can also see the result of the process in the **Solution Explorer** window
    since we have instructed Django to use SQLite and indicated the location to create
    the database file. To view this information, enable the **View all files** option
    in the solution folder by clicking on the **View all files** command in the **Solution
    Explorer** toolbar.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以在**解决方案资源管理器**窗口中看到此过程的输出，因为我们已指示Django使用SQLite并指明了创建数据库文件的路径。要查看此信息，请通过单击**解决方案资源管理器**工具栏中的**查看所有文件**命令，在解决方案文件夹中启用**查看所有文件**选项。
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_16.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![为Django项目设置和管理数据库](img/8687OS_04_16.jpg)'
- en: Find the "View all files" option in the toolbar
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在工具栏中找到“查看所有文件”选项
- en: Once the view is active, the file `db.sqlite3` can be found in the solution
    folder. It can be included in the solution files by right-clicking on it and selecting
    the **Include in Project** command. The SQLite file is then included in the list
    of files that are managed by Visual Studio.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦视图被激活，可以在解决方案文件夹中找到`db.sqlite3`文件。可以通过右键单击它并选择**包含在项目中**命令将其包含在解决方案文件中。然后SQLite文件被包含在由Visual
    Studio管理的文件列表中。
- en: '![Setting up and managing a database for a Django project](img/8687OS_04_17.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![为Django项目设置和管理数据库](img/8687OS_04_17.jpg)'
- en: Setting up the admin interface
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置管理界面
- en: Now that a database is attached to the project, we can activate the administration
    interface of Django in it. The process is really simple at this point; you just
    need to uncomment a couple of lines of code in the project settings file and the
    main URL manager.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在项目已经连接了数据库，我们可以在其中激活Django的管理界面。此时过程非常简单；你只需要在项目设置文件和主要URL管理器中取消注释几行代码即可。
- en: 'First, activate the Django application `django.contrib.admin` in the `Installed_Apps`
    section of the settings file:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，在设置文件的`Installed_Apps`部分激活Django应用程序`django.contrib.admin`：
- en: '![Setting up the admin interface](img/8687OS_04_18.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![设置管理界面](img/8687OS_04_18.jpg)'
- en: 'Second, go to the `urls.py` file and uncomment the section that imports the
    `admin` class and that enables the admin''s discovery of the models inside the
    project. Besides this, it is also necessary that we uncomment the last line of
    the URL pattern that manages the `/admin/` path:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步，转到`urls.py`文件，取消注释导入`admin`类并使管理员能够发现项目中的模型的段落。此外，还必须取消注释URL模式中管理的`/admin/`路径的最后一条线：
- en: '![Setting up the admin interface](img/8687OS_04_19.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![设置管理界面](img/8687OS_04_19.jpg)'
- en: 'Now the Django administration application is activated in the project. If the
    operation is successful, you will be presented with the admin login page. After
    launching the application, navigate to the `/admin/` page:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在Django管理应用程序已在项目中激活。如果操作成功，你将看到管理登录页面。启动应用程序后，导航到`/admin/`页面：
- en: '![Setting up the admin interface](img/8687OS_04_20.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![设置管理界面](img/8687OS_04_20.jpg)'
- en: 'Insert the credentials created during the database setup to access the administration
    section:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 将在数据库设置期间创建的凭据插入以访问管理部分：
- en: '![Setting up the admin interface](img/8687OS_04_21.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![设置管理界面](img/8687OS_04_21.jpg)'
- en: Now we have a fully set up and working Django environment. Let's go ahead and
    create a new Django application in Visual Studio.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经设置并启用了一个完整的Django环境。让我们继续在Visual Studio中创建一个新的Django应用程序。
- en: Creating a new Django application
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新的Django应用程序
- en: A Django application is a submodule of the project which is self-contained and
    not intertwined with other applications. In theory, you could copy it and put
    it in another project without much, or any, change.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Django应用程序是项目的一个子模块，它是自包含的，并且与其他应用程序不相互交织。在理论上，你可以复制它并将其放入另一个项目中，而不需要做太多，或者根本不需要做任何修改。
- en: Typically, to start a Django app, you have to run the `manage.py startapp` command
    in the command line, which will create a new folder in your projectwhere you can
    find a view, a model, an admin, and a test Python file.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，要启动Django应用程序，你必须在命令行中运行`manage.py startapp`命令，这将在你项目中创建一个新的文件夹，在那里你可以找到一个视图、一个模型、一个管理界面和一个测试Python文件。
- en: 'Visual Studio provides an easy way of creating a new Django app right in the
    IDE, automating the whole process; furthermore, the command is also in the process
    of creating a template folder. To create a new Django application, just right-click
    on the project node in the **Solution Explorer** window and select the **Django
    app** command in the **Add** menu:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Visual Studio提供了一个在IDE中创建新Django应用程序的简单方法，自动化整个流程；此外，命令也在创建模板文件夹的过程中。要创建一个新的Django应用程序，只需在**解决方案资源管理器**窗口中的项目节点上右键单击，然后在**添加**菜单中选择**Django应用程序**命令：
- en: '![Creating a new Django application](img/8687OS_04_22.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新的Django应用程序](img/8687OS_04_22.jpg)'
- en: 'This opens the **Add Django App** window in which you can assign the name of
    the Django app to be created:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开**添加Django应用程序**窗口，您可以在其中指定要创建的Django应用程序的名称：
- en: '![Creating a new Django application](img/8687OS_04_23.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新的Django应用程序](img/8687OS_04_23.jpg)'
- en: 'By clicking on **OK**, the Django app is created in the project, and a list
    of added files can be found in the **Solution Explorer** window:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过点击**确定**，Django应用程序将在项目中创建，并且可以在**解决方案资源管理器**窗口中找到添加的文件列表：
- en: '![Creating a new Django application](img/8687OS_04_24.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新的Django应用程序](img/8687OS_04_24.jpg)'
- en: 'Now you can create the code for the app as we usually do for Django. Take into
    account that even if Visual Studio automates the creation of the Django application,
    it doesn''t necessarily create the entry in the settings file. This has to be
    done manually as usual, adding the reference into the `Installed_Apps` section;
    to do this, just open the main `settings.py` file and add the newly created application
    in the `Installed_Apps` section:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以像通常为Django所做的那样创建应用程序的代码。请注意，即使Visual Studio自动化了Django应用程序的创建，它也不一定会在设置文件中创建条目。这需要像往常一样手动完成，将引用添加到`Installed_Apps`部分；为此，只需打开主`settings.py`文件，并在`Installed_Apps`部分中添加新创建的应用程序：
- en: '![Creating a new Django application](img/8687OS_04_25.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![创建一个新的Django应用程序](img/8687OS_04_25.jpg)'
- en: Deploying a Django project on Microsoft Azure
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在微软Azure上部署Django项目
- en: Cloud platforms are complex systems that provide ways to scale web applications
    across multiple server instances based on the traffic the application is receiving.
    They also offer an abstraction of the server environment in a way that developers
    do not need to deal with the hardware and software architecture of the system,
    but only with the resources and services. This is an advantage because with this
    in place, the developer does not actually need to configure and manage the server;
    however, at the same time, it also proves to be a disadvantage, since not all
    software components are able to work in such systems.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 云平台是复杂的系统，它们提供根据应用程序接收到的流量在多个服务器实例上扩展Web应用程序的方法。它们还以开发者无需处理系统硬件和软件架构的方式抽象化服务器环境，开发者只需处理资源和服务。这有其优势，因为这样一来，开发者实际上不需要配置和管理服务器；然而，同时这也证明是一个缺点，因为并非所有软件组件都能在这样的系统中运行。
- en: Azure is a cloud-hosting platform by Microsoft that enables developers to quickly
    build, deploy, and manage applications across a global network of Microsoft-managed
    data centers. It is tightly integrated in Visual Studio; also, the Python language
    is covered by this service.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: Azure是微软的一个云托管平台，它使开发者能够快速构建、部署和管理跨越全球微软管理的数据中心网络的应用程序。它与Visual Studio紧密集成；此外，Python语言也由这项服务支持。
- en: We are going to see how to deploy a Django project on Azure by using the tools
    that Visual Studio provides.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看到如何使用Visual Studio提供的工具在Azure上部署Django项目。
- en: To use Microsoft Windows Azure, first we need to create an Azure account via
    [http://www.windowsazure.com/](http://www.windowsazure.com/).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用微软Windows Azure，首先我们需要通过[http://www.windowsazure.com/](http://www.windowsazure.com/)创建一个Azure账户。
- en: 'After the account is created, you can access the **Portal** section that brings
    you to your Azure services portal in which you can find all the services available
    on the left-hand side menu. Now we''ll create a website:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 账户创建后，您可以访问**门户**部分，它将带您进入Azure服务门户，您可以在左侧菜单中找到所有可用的服务。现在我们将创建一个网站：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_26.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![在微软Azure上部署Django项目](img/8687OS_04_26.jpg)'
- en: 'To create a new website, click on the **CREATE A WEB SITE** link; this will
    open the **NEW** tab at the bottom of the page:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建一个新的网站，请点击**创建网站**链接；这将打开页面底部的**新**标签页：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_27.jpg)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![在微软Azure上部署Django项目](img/8687OS_04_27.jpg)'
- en: 'Just insert the name of the website that you want to create in the **URL**
    textbox; if the name is available, click on the **CREATE WEB SITE** button to
    create the website. This will initiate the website generation process, at the
    end of which you will see the created website:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 只需在**URL**文本框中插入你想要创建的网站的名称；如果该名称可用，点击**创建网站**按钮来创建网站。这将启动网站生成过程，在过程结束时，你将看到创建的网站：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_28.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_28.jpg)'
- en: 'Besides the website service, we also need to create a storage entry where the
    website files can be uploaded to. To create a storage entry, click on the **Storage**
    item on the left-hand side menu and click on **NEW**:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 除了网站服务外，我们还需要创建一个存储条目，以便将网站文件上传到那里。要创建存储条目，请点击左侧菜单中的**存储**项，然后点击**新建**：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_29.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_29.jpg)'
- en: 'This will open the storage creation area at the bottom of the page:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在页面底部打开存储创建区域：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_30.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_30.jpg)'
- en: As for the website service, we just need the name of the storage service in
    the **URL** textbox; once you have this, click on the **CREATE STORAGE ACCOUNT**
    button to create the storage service instance.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于网站服务，我们只需要在**URL**文本框中输入存储服务的名称；一旦你有了这个，点击**创建存储帐户**按钮来创建存储服务实例。
- en: Now we have all the elements needed to deploy our Django project to Azure. However,
    before going ahead, we need to ensure that our project is ready for it. Azure
    needs all the files related to the project that reside in the project folder,
    since it needs to ensure that all the Python libraries are present. To ensure
    that these requirements are met, the Django project needs to be created in a virtual
    environment. This will keep all the files to be included in the project folder;
    otherwise, the libraries just reside in the site-packages folder of the system.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经拥有了部署我们的Django项目到Azure所需的所有元素。然而，在继续之前，我们需要确保我们的项目已经准备好。Azure需要所有位于项目文件夹中的与项目相关的文件，因为它需要确保所有Python库都存在。为了确保满足这些要求，Django项目需要在虚拟环境中创建。这将保留所有要包含在项目文件夹中的文件；否则，库将仅位于系统的site-packages文件夹中。
- en: 'A virtual environment is an isolated working copy of the Python environment,
    which allows you to work on a specific project without worrying about affecting
    other projects. At the same time, it keeps together all the dependencies in the
    same folder structure. Creating a virtual environment is easy in PTVS; you can
    do this by selecting the **Add Virtual Environment** command from the **Python
    Environments** contextual menu, as shown in the following screenshot:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 虚拟环境是Python环境的独立工作副本，它允许你在不影响其他项目的情况下专注于特定项目。同时，它将所有依赖项保存在相同的文件夹结构中。在PTVS中创建虚拟环境很容易；你可以通过从**Python环境**上下文菜单中选择**添加虚拟环境**命令来完成此操作，如下面的截图所示：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_31.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_31.jpg)'
- en: 'This will open the **Add Virtual Environment** window:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开**添加虚拟环境**窗口：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_32.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_32.jpg)'
- en: 'Once you enter the name of the virtual environment and click on the **Create**
    button, the virtual environment is created in the project. Now, all the packages
    that you include in the project will be copied into it, so all the dependencies
    will be available inside the project folder, which doesn''t rely on the system''s
    site-packages folder:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你输入虚拟环境名称并点击**创建**按钮，虚拟环境将在项目中创建。现在，你将在项目中包含的所有包都将被复制进去，因此所有依赖项都将可在项目文件夹内使用，而不依赖于系统的site-packages文件夹：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_33.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![在Microsoft Azure上部署Django项目](img/8687OS_04_33.jpg)'
- en: Once we have ensured that our project is contained in a virtual environment,
    we can go ahead and configure Visual Studio in a way to be ready to deploy our
    Django project to Azure.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确保了我们的项目包含在虚拟环境中，我们就可以继续并配置Visual Studio，使其准备好部署我们的Django项目到Azure。
- en: 'The deployment procedure starts by invoking the **Publish** command from the
    contextual menu of the Django website node in the **Solution Explorer** tree view:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 部署过程从在**解决方案资源管理器**树视图中Django网站节点的上下文菜单中调用**发布**命令开始：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_34.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![在 Microsoft Azure 上部署 Django 项目](img/8687OS_04_34.jpg)'
- en: 'This will open the **Publish Web** wizard window, which will guide you through
    the deployment process of the Django project:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开 **发布网站** 向导窗口，该窗口将指导您完成 Django 项目的部署过程：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_35.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![在 Microsoft Azure 上部署 Django 项目](img/8687OS_04_35.jpg)'
- en: 'To link Visual Studio to the Azure website we created earlier, click on the
    **Import** button; once you are certain about being able to log in with your Azure
    account, select the name of the website you want the Django application to be
    deployed to:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Visual Studio 连接到我们之前创建的 Azure 网站，请点击 **导入** 按钮；一旦您确信可以使用 Azure 账户登录，请选择您希望
    Django 应用程序部署到的网站名称：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_36.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![在 Microsoft Azure 上部署 Django 项目](img/8687OS_04_36.jpg)'
- en: 'At this point, follow the other wizard entries and click on **Publish**. With
    this, Visual Studio will start the process of deploying all the files to the Azure
    platform; you can follow the deployment process from the **Output** window:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，按照其他向导步骤操作，并点击 **发布**。这样，Visual Studio 将开始将所有文件部署到 Azure 平台的过程；您可以从 **输出**
    窗口中跟踪部署过程：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_37.jpg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![在 Microsoft Azure 上部署 Django 项目](img/8687OS_04_37.jpg)'
- en: 'Once the deployment process finishes, Visual Studio will open in the default
    browser of the deployed website on Azure:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦部署过程完成，Visual Studio 将在 Azure 上部署网站的默认浏览器中打开：
- en: '![Deploying a Django project on Microsoft Azure](img/8687OS_04_38.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![在 Microsoft Azure 上部署 Django 项目](img/8687OS_04_38.jpg)'
- en: For further documentation about Python on Windows Azure, refer to the Windows
    Azure website at [http://www.windowsazure.com/en-us/develop/python/](http://www.windowsazure.com/en-us/develop/python/).
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 Windows Azure 上的 Python 的更多文档，请参阅 Windows Azure 网站 [http://www.windowsazure.com/en-us/develop/python/](http://www.windowsazure.com/en-us/develop/python/)。
- en: Summary
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned how to create a Django project in Visual Studio
    and set up the environment. We also learned about deploying a Django project on
    Microsoft Azure.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何在 Visual Studio 中创建 Django 项目并设置环境。我们还了解了如何在 Microsoft Azure 上部署
    Django 项目。
- en: In the next chapter, we are going to learn how to manage Python libraries inside
    Visual Studio. Also, we'll learn how to use some of the most powerful Python libraries
    for the Django framework to manage deployments, the synchronization of databases
    between environments, and a library that helps us use and manage images successfully
    and dynamically in our website.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何在 Visual Studio 中管理 Python 库。此外，我们还将学习如何使用一些最强大的 Python 库来管理 Django
    框架的部署、环境间数据库的同步，以及一个帮助我们成功且动态地在网站上使用和管理图像的库。
