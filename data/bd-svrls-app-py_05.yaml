- en: Logging and Monitoring
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日志和监控
- en: We have learned about the concepts of serverless architectures and understood
    the basics and the internals of AWS's serverless service, AWS Lambda. We have
    also created some example serverless projects to understand the concepts better.
    During the course of our learning, we have also learned the basics of several
    other AWS services, such as alarms, SNS, SQS, S3 buckets, and CloudWatch.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了无服务器架构的概念，并理解了 AWS 无服务器服务 AWS Lambda 的基本和内部结构。我们还创建了一些示例无服务器项目来更好地理解这些概念。在学习过程中，我们还学习了其他几个
    AWS 服务的基础知识，例如警报、SNS、SQS、S3 存储桶和 CloudWatch。
- en: In this chapter, we will learn about how to do the logging and monitoring for
    the serverless systems that we are building. Logging and monitoring software code
    and systems are very important, as they helps us with the telemetry and disaster
    recovery. Logging is a process where we store the logs emitted by our code or
    by our architecture as a whole. Monitoring is a process where we closely monitor
    the activities, status, and health of the components and processes in our code
    or architecture.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习如何为我们构建的无服务器系统进行日志记录和监控。日志记录和监控系统代码和系统非常重要，因为它们帮助我们进行遥测和灾难恢复。日志记录是一个过程，我们将代码或整个架构产生的日志存储起来。监控是一个过程，我们密切监控代码或架构中组件和进程的活动、状态和健康状况。
- en: So, you will be learning how to set up and understand the monitoring suite of
    AWS Lambda, which is closely integrated with the monitoring service of AWS, the
    CloudWatch Dashboards. We will also learn about the logging service of AWS, the
    CloudWatch Logs service. Finally, we will also learn about and understand the
    distributed tracing and monitoring service of AWS, the CloudTrail service.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你将学习如何设置和理解 AWS Lambda 的监控套件，它与 AWS 的监控服务 CloudWatch Dashboards 紧密集成。我们还将学习
    AWS 的日志服务，即 CloudWatch Logs 服务。最后，我们还将了解和理解 AWS 的分布式跟踪和监控服务，即 CloudTrail 服务。
- en: 'This chapter covers the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖以下主题：
- en: Understanding CloudWatch
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 CloudWatch
- en: Understanding CloudTrail
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 CloudTrail
- en: Lambda's metrics in CloudWatch
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch 中的 Lambda 指标
- en: Lambda's logs in CloudWatch
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch 中的 Lambda 日志
- en: Logging statements in Lambda
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lambda 中的日志语句
- en: Understanding CloudWatch
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 CloudWatch
- en: As mentioned earlier, CloudWatch is the logging and monitoring service of AWS.
    We have already looked at and learned about the CloudWatch Alarms, which are a
    sub-feature of CloudWatch. We will now learn about the graphing suite of the service.
    Almost every service in the AWS environment has a way to send it's logs and metrics
    to CloudWatch for logging and monitoring purposes. Each service might have several
    metrics which can be monitored, depending on the function.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，CloudWatch 是 AWS 的日志和监控服务。我们已经查看并学习了 CloudWatch Alarms，它是 CloudWatch 的一个子功能。现在我们将学习该服务的图形套件。AWS
    环境中的几乎每个服务都有一种方式将其日志和指标发送到 CloudWatch 进行日志记录和监控。每个服务可能都有几个可以监控的指标，这取决于功能。
- en: 'Similarly, AWS Lambda also has some metrics, such as the invocation count,
    the invocation''s running time, and so on, which it sends to CloudWatch. It is
    also helpful to note that the developers can also send custom metrics to CloudWatch.
    So in the following steps, we shall be learning about the different parts and
    functions of AWS CloudWatch corresponding to AWS Lambda:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，AWS Lambda 也有一些指标，例如调用次数、调用运行时间等，它将它们发送到 CloudWatch。值得注意的是，开发者也可以将自定义指标发送到
    CloudWatch。因此，在以下步骤中，我们将学习 AWS CloudWatch 对应于 AWS Lambda 的不同部分和功能：
- en: 'Firstly, let us see what the CloudWatch console looks like and also get a feel
    for it by navigating around the console. Browse to [console.aws.amazon.com/cloudwatch/](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fcloudwatch%2F%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fcloudwatch&forceMobileApp=0):'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '首先，让我们看看 CloudWatch 控制台的外观，并通过在控制台中进行导航来感受它。[控制台链接](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fcloudwatch%2F%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fcloudwatch&forceMobileApp=0):'
- en: '![](img/00149.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00149.jpeg)'
- en: As we can see, there is a lot of information in the CloudWatch console. So,
    we shall now try to understand each component one after the other. In the left
    side, we can see a list of options, which includes Dashboards, Alarms, Billing,
    and so on. We shall try to understand all of them and their functionality as part
    of understanding the CloudWatch console.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如我们所见，CloudWatch控制台中有很多信息。因此，我们现在将逐一尝试理解每个组件。在左侧，我们可以看到一个选项列表，包括仪表板、警报、计费等。我们将尝试理解它们以及它们的功能，作为理解CloudWatch控制台的一部分。
- en: 'A dashboard here is a panel of CloudWatch Metrics that the user can configure.
    For example, a user might want to have a particular set of server (EC2) metrics
    at a single place to be able to monitor them better. This is where AWS CloudWatch
    Dashboards come into play. When you click on the Dashboards option on the left,
    you can see the Dashboards console, which looks like this:'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，仪表板是用户可以配置的CloudWatch指标面板。例如，用户可能希望将一组特定的服务器（EC2）指标放在一个地方，以便更好地监控它们。这就是AWS
    CloudWatch仪表板发挥作用的地方。当您点击左侧的仪表板选项时，您可以看到仪表板控制台，如下所示：
- en: '![](img/00150.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00150.jpeg)'
- en: 'Let us go ahead and create a new dashboard by clicking the blue Create dashboard
    button on the top left-hand side of the console. The following box appears:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们继续创建一个新的仪表板，点击控制台左上角的蓝色创建仪表板按钮。以下框将出现：
- en: '![](img/00151.jpeg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00151.jpeg)'
- en: 'This will take you to the next step, where you will be asked to select a widget
    type for the dashboard. There are four types of widgets which are currently available.
    The widget selection screen looks like this:'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您进入下一步，您将在此处被要求为仪表板选择一个小部件类型。目前有四种类型的小部件可供选择。小部件选择屏幕看起来如下：
- en: '![](img/00152.jpeg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00152.jpeg)'
- en: 'For the sake of this tutorial, I am choosing the Line style widget. You can
    choose whatever widget would fit your graphing style and the monitoring you need
    to do. Once you select a widget style and click the blue Configure button, you
    will be redirected to a wizard where you will be asked to add a metric as shown
    in the following screenshot:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了本教程的目的，我选择了线条样式小部件。您可以选择适合您绘图风格和所需监控的任何小部件。一旦您选择了一个小部件样式并点击蓝色的配置按钮，您将被重定向到一个向导，您将在此处被要求添加一个指标，如下面的截图所示：
- en: '![](img/00153.jpeg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00153.jpeg)'
- en: 'Select one of the available metrics at the bottom and it will be added to the
    widget. Once you are done with selecting the metrics, click on the blue Create
    widget button in the lower-right part of the page as shown in the following screenshot:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在底部选择一个可用的指标，它将被添加到小部件中。一旦您完成选择指标，点击页面右下角的蓝色创建小部件按钮，如下面的截图所示：
- en: '![](img/00154.jpeg)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00154.jpeg)'
- en: 'Now, you can see the dashboard that you have just created in the Dashboards section:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以在仪表板部分看到您刚刚创建的仪表板：
- en: '![](img/00155.jpeg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00155.jpeg)'
- en: We have successfully learned and created an AWS CloudWatch Dashboard. We will
    now move on to learning about CloudWatch Events. We have already learned about
    CloudWatch Alarms in the previous chapters, looking at both their functionality
    and how to create and work with them.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已经成功学习和创建了AWS CloudWatch仪表板。我们现在将学习关于CloudWatch事件。在前面的章节中，我们已经学习了CloudWatch警报的功能以及如何创建和使用它们。
- en: 'Click on the Events link in the CloudWatch menu on the left. You will be redirected
    to the page of CloudWatch Events, as shown in the following screenshot:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击左侧的CloudWatch菜单中的事件链接。您将被重定向到CloudWatch事件的页面，如下面的截图所示：
- en: '![](img/00156.jpeg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00156.jpeg)'
- en: 'Once you click on the blue Create rule button, you will be redirected to the
    Events creation wizard, which looks like this:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您点击蓝色的创建规则按钮，您将被重定向到事件创建向导，其外观如下：
- en: '![](img/00157.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00157.jpeg)'
- en: 'There can be two types of events, namely Event Pattern and Schedule, each of
    which have different purposes. Here we will only learn about the Schedule type,
    as it comes in handy for scheduling Lambda functions:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 事件可以分为两种类型，即事件模式和计划，每种类型都有不同的用途。在这里，我们将只学习计划类型，因为它对于安排Lambda函数非常有用：
- en: '![](img/00158.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00158.jpeg)'
- en: 'The rate can be either set in terms of Minutes, Hours, or Days, or can be set
    as a cron expression, whichever way you are comfortable with. Now, the target
    needs to be selected. The target can be any valid Lambda function, as shown in
    the following drop-down menu:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 速率可以设置为分钟、小时或天，或者可以设置为cron表达式，您可以选择您舒适的方式。现在，需要选择目标。目标可以是任何有效的Lambda函数，如下面的下拉菜单所示：
- en: '![](img/00159.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片10](img/00159.jpeg)'
- en: 'Once you have selected the function, you can click on the blue Configure details
    at the bottom. It will take you to the Configure rule details page as shown in
    the following screenshot:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您选择了函数，您就可以点击底部的蓝色“配置详情”。它将带您到如下截图所示的配置规则详情页面：
- en: '![](img/00160.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片6](img/00160.jpeg)'
- en: 'Once you enter the name and the description of the rule that you want to create,
    you can click on the blue Create rule button at the bottom. This will successfully
    create an event, and the same will be reflected in your CloudWatch console:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您输入您想要创建的规则名称和描述，您就可以点击底部的蓝色“创建规则”按钮。这将成功创建一个事件，并在您的 CloudWatch 控制台中反映出来：
- en: '![](img/00161.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片5](img/00161.jpeg)'
- en: We have successfully added a cron event for a Lambda function which means that
    Lambda will be invoked at regular intervals, as specified by the user in the settings
    of the event.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已成功为 Lambda 函数添加了一个 cron 事件，这意味着 Lambda 将按照用户在事件设置中指定的定期间隔被调用。
- en: 'Now, we shall try to understand the Logs feature of AWS CloudWatch. This is
    where the Lambda functions store their logs. You can click on the Logs link in
    the menu on the left-hand side to access the console of CloudWatch Logs:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将尝试理解 AWS CloudWatch 的日志功能。这是 Lambda 函数存储日志的地方。您可以通过点击左侧菜单中的“日志”链接来访问 CloudWatch
    日志控制台：
- en: '![](img/00162.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片7](img/00162.jpeg)'
- en: 'We can see the complete list of logs for all of the Lambda functions we have
    ever created throughout the course of the book. When you click on a log group,
    you can find more details about it, and also options for customization. Each log
    stream is an invocation of the Lambda function that the log is associated with:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以看到在整个书籍过程中创建的所有 Lambda 函数的完整日志列表。当您点击一个日志组时，您可以找到更多关于它的详细信息，以及自定义选项。每个日志流都与日志关联的
    Lambda 函数的调用：
- en: '![](img/00163.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片1](img/00163.jpeg)'
- en: 'You can also make use of the additional functionality provided by CloudWatch
    for handling the logs data, which can be seen in the drop-down Actions menu in Log
    Groups:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以利用 CloudWatch 提供的附加功能来处理日志数据，这可以在日志组中的“操作”下拉菜单中看到：
- en: '![](img/00164.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图片3](img/00164.jpeg)'
- en: 'Finally, we will wrap up by exploring and learning about the CloudWatch Metrics.
    The metrics console can be accessed by clicking on the Metrics option on the left-hand
    side of the CloudWatch console:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们将通过探索和学习 CloudWatch 指标来结束本节。您可以通过点击 CloudWatch 控制台左侧的“指标”选项来访问指标控制台：
- en: '![](img/00165.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图片2](img/00165.jpeg)'
- en: 'You can select any option in the menu at the bottom for graphing the metrics.
    For the purpose of this tutorial, I have added a Lambda metric, which is the number
    of errors in the function, `serverless-api`:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以选择菜单底部的任何选项来绘制指标。在本教程中，我添加了一个 Lambda 指标，即函数中的错误数量，“serverless-api”：
- en: '![](img/00166.jpeg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图片8](img/00166.jpeg)'
- en: Understanding CloudTrail
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解 CloudTrail
- en: CloudTrail is another monitoring service of AWS where you can look at all of
    the events and trails that have happened in your AWS account. This service is
    a bit more detailed than the CloudWatch service in how it records and stores the
    events and trails.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: CloudTrail 是 AWS 的另一个监控服务，您可以在其中查看您 AWS 账户中发生的所有事件和跟踪。与 CloudWatch 服务相比，该服务在记录和存储事件和跟踪方面更为详细。
- en: 'So, we shall explore and learn about this service in the following steps:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们将按以下步骤探索和学习此服务：
- en: 'The AWS CloudTrail''s dashboard can be accessed at [console.aws.amazon.com/cloudtrail/](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fcloudtrail%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fcloudtrail&forceMobileApp=0):'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过访问 [console.aws.amazon.com/cloudtrail/](https://signin.aws.amazon.com/signin?redirect_uri=https%3A%2F%2Fconsole.aws.amazon.com%2Fcloudtrail%2Fhome%3Fstate%3DhashArgs%2523%26isauthcode%3Dtrue&client_id=arn%3Aaws%3Aiam%3A%3A015428540659%3Auser%2Fcloudtrail&forceMobileApp=0)
    来访问 AWS CloudTrail 的仪表板：
- en: '![](img/00167.jpeg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片9](img/00167.jpeg)'
- en: 'The list of events in your AWS account can be seen on the left-hand side of
    the CloudTrail menu when you click on the Event history button. The Event history
    page looks like this:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击 CloudTrail 菜单中的“事件历史”按钮时，可以在左侧看到您 AWS 账户中事件列表。事件历史页面看起来是这样的：
- en: '![](img/00168.jpeg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片4](img/00168.jpeg)'
- en: 'The third functionality of CloudTrail is the trails. The user can set up trails
    for their AWS services, such as Lambda. The trails that have been set up can be
    found on the Trails dashboard. This can be accessed by going to the Trails console
    by clicking on the Trails option in the menu on the left-hand side:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudTrail的第三个功能是跟踪。用户可以为他们的AWS服务设置跟踪，例如Lambda。已设置的跟踪可以在跟踪仪表板中找到。可以通过点击左侧菜单中的“跟踪”选项进入跟踪控制台：
- en: '![](img/00169.jpeg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图片7](img/00169.jpeg)'
- en: 'Now, let us understand how to create a trail in the CloudTrail dashboard. You
    can go to the main dashboard of CloudTrail and click on the blue Create trail
    button. This will take you to the trail creation wizard:'
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们了解如何在CloudTrail仪表板中创建跟踪。您可以去CloudTrail的主仪表板，点击蓝色“创建跟踪”按钮。这将带您到跟踪创建向导：
- en: '![](img/00170.jpeg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![图片8](img/00170.jpeg)'
- en: 'You can enter the details of your trail here. You can leave the default options
    as they are for the Apply trail to all regions and the Management events options:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在此处输入跟踪的详细信息。对于“将跟踪应用于所有区域”和“管理事件”选项，您可以保留默认选项：
- en: '![](img/00171.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图片9](img/00171.jpeg)'
- en: 'Now, moving on to the next setting, select the Lambda option and click on the
    Log all current and future functions in the options list. This will ensure that
    all of our Lambda functions are logged properly with CloudTrail:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，继续到下一个设置，选择Lambda选项，并在选项列表中点击“记录所有当前和未来的函数”。这将确保我们的所有Lambda函数都通过CloudTrail正确记录：
- en: '![](img/00172.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图片3](img/00172.jpeg)'
- en: 'Now, in the final Storage location option, select an S3 bucket for storing
    the CloudTrail logs. This can be an already existing bucket or you can also ask
    CloudTrail to create a new bucket for this purpose. I am using an existing bucket:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在最终的“存储位置”选项中，选择一个S3存储桶来存储CloudTrail日志。这可以是一个已存在的存储桶，或者您也可以要求CloudTrail为此创建一个新的存储桶。我正在使用一个现有的存储桶：
- en: '![](img/00173.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![图片11](img/00173.jpeg)'
- en: 'After all of the details and settings have been configured accordingly, you
    can click on the blue Create trail button to create the trail. Now, you see the
    trail you have just created in your CloudTrail dashboard as shown in the following
    screenshot:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在所有细节和设置都相应配置完毕后，您可以在蓝色“创建跟踪”按钮上点击以创建跟踪。现在，您可以在CloudTrail仪表板中看到您刚刚创建的跟踪，如下面的截图所示：
- en: '![](img/00174.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图片6](img/00174.jpeg)'
- en: 'Now, when you click on the trail that you have just created, you can see all
    of the details with which it has been configured as shown in the following screenshot:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当您点击您刚刚创建的跟踪时，您可以看到它配置的所有详细信息，如下面的截图所示：
- en: '![](img/00175.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片10](img/00175.jpeg)'
- en: 'You can also notice a very interesting option that enables you to configure
    CloudWatch Logs along with SNS to notify you of any specific activities, for example
    when there is an error in a Lambda function:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以注意到一个非常有趣的功能，它允许您配置CloudWatch日志以及SNS来通知您任何特定的活动，例如当Lambda函数中发生错误时：
- en: '![](img/00176.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片4](img/00176.jpeg)'
- en: 'And finally, you can also add tags to the trail, just like you can with the
    rest of your AWS services:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，您还可以像对其他AWS服务一样，为跟踪添加标签：
- en: '![](img/00177.gif)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片12](img/00177.gif)'
- en: 'Additionally, let us understand how to configure CloudWatch Logs for our trail.
    So, for this you need to click on the blue Configure button in the CloudWatch
    Logs section above the Tags section:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，让我们了解如何为我们的跟踪配置CloudWatch日志。因此，为此您需要点击上方标签部分以上的CloudWatch日志部分中的蓝色“配置”按钮：
- en: '![](img/00178.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片1](img/00178.jpeg)'
- en: 'When you click Continue, it takes you to the creation wizard where you need
    to configure the permissions accordingly with your IAM role settings. For the
    purpose of this tutorial, I have selected the Create a new IAM Role option as
    shown in the following screenshot:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击“继续”时，它将带您到创建向导，在那里您需要根据您的IAM角色设置相应地配置权限。为了本教程的目的，我选择了以下截图所示的“创建新的IAM角色”选项：
- en: '![](img/00179.jpeg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图片2](img/00179.jpeg)'
- en: 'After you have finished configuring the IAM role settings, you can click on
    the blue Allow button at the bottom. After a couple of seconds of validation,
    the CloudWatch Logs get configured, which you can see in the same CloudWatch Logs
    section here:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成IAM角色设置配置后，您可以在底部点击蓝色的“允许”按钮。经过几秒钟的验证后，CloudWatch日志配置完成，您可以在同一CloudWatch日志部分中看到：
- en: '![](img/00180.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片5](img/00180.jpeg)'
- en: Lambda’s metrics in CloudWatch
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudWatch中的Lambda指标
- en: As we have learned and understood how the CloudWatch and the CloudTrail services
    work with respect to logging and monitoring, we shall move on to try and implement
    them for our Lambda function(s). In this section, you will learn about the types
    of metrics that Lambda possesses, which are monitored by CloudWatch, and how to
    create a dashboard with all those metrics.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经学习和理解了CloudWatch和CloudTrail服务在日志和监控方面的运作方式，我们将继续尝试为我们的Lambda函数实现它们。在本节中，你将了解Lambda拥有的指标类型，这些指标由CloudWatch监控，以及如何创建包含所有这些指标的仪表板。
- en: 'Similar to previous sections in this chapter and book, we shall try and understand
    the concepts in the form of the following steps:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 与本章和本书前面的部分类似，我们将尝试以下步骤来理解这些概念：
- en: 'When you navigate over to your AWS Lambda console, you will see the Lambda
    function which you have already created, in the list of available functions:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你导航到你的AWS Lambda控制台时，你将看到你已创建的Lambda函数，在可用函数列表中：
- en: '![](img/00181.jpeg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00181.jpeg)'
- en: 'When you click on the function, you will see two available options on the top:
    Configuration and Monitoring. Navigate to the Monitoring section. You will see
    a dashboard of metrics, which contains the following:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击函数时，你将看到顶部有两个可用的选项：配置和监控。导航到监控部分。你将看到一个指标仪表板，其中包含以下内容：
- en: Invocations
  id: totrans-89
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调用
- en: Duration
  id: totrans-90
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续时间
- en: Errors
  id: totrans-91
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 错误
- en: Throttles
  id: totrans-92
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 限制
- en: Iterator age
  id: totrans-93
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 迭代器年龄
- en: DLQ errors
  id: totrans-94
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 死信队列错误
- en: '![](img/00182.jpeg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00182.jpeg)'
- en: Invocations and duration
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 调用和持续时间
- en: '![](img/00183.jpeg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00183.jpeg)'
- en: Errors and Throttles
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 错误和限制
- en: '![](img/00184.jpeg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00184.jpeg)'
- en: Iterator age and DLQ errors
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 迭代器年龄和死信队列错误
- en: 'Let us understand each of them in detail. The first metric is the Invocations
    metric, which has the time on the *x* axis and the number of invocations of the
    Lambda function on the *y *axis. This metric helps us understand when and how
    many times our Lambda function has been invocated:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们详细理解每一个。第一个指标是调用指标，它在*x*轴上有时间，在*y*轴上有Lambda函数的调用次数。这个指标帮助我们了解Lambda函数何时以及被调用了多少次：
- en: '![](img/00185.jpeg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00185.jpeg)'
- en: 'When you click Jump to Logs, it takes you to the CloudWatch Logs console of
    the Lambda invocations, which looks like this:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击“跳转到日志”时，它会带你进入Lambda调用的CloudWatch日志控制台，看起来如下所示：
- en: '![](img/00186.jpeg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00186.jpeg)'
- en: 'And when you click on the Jump to Metrics option, it will take you to the CloudWatch
    Metrics dashboard of that particular metric, which gives you a much more customized
    and granular graph of the same metric, which looks like this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当你点击“跳转到指标”选项时，它将带你去该特定指标的CloudWatch指标仪表板，它为你提供了一个更定制化和更细粒度的同一指标的图表，看起来如下所示：
- en: '![](img/00187.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00187.jpeg)'
- en: 'The second metric in the Lambda''s monitoring dashboard is the Duration metric,
    which tells you the duration of each invocation of our Lambda function. It also
    has time as the *X *axis, and the duration time in the *Y *axis in the unit of
    milliseconds. It also tells you the maximum, average, and the minimum duration
    of your Lambda function over a period of time:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Lambda监控仪表板中的第二个指标是持续时间指标，它告诉我们Lambda函数每次调用的持续时间。它也有时间作为*X*轴，以毫秒为单位，在*Y*轴上的持续时间时间。它还告诉你Lambda函数在一定时间内的最大、平均和最小持续时间：
- en: '![](img/00188.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00188.jpeg)'
- en: 'Again, clicking on the Jump to Logs button will take you to the same page as
    that of the previous metric. Clicking on the Jump to Metrics button will take
    you to the CloudWatch metric page of the Duration metric, which looks like this:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次点击“跳转到日志”按钮将带你去与上一个指标相同的页面。点击“跳转到指标”按钮将带你去持续时间指标的CloudWatch指标页面，看起来如下所示：
- en: '![](img/00189.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00189.jpeg)'
- en: 'The third metric is the Errors metric, which helps us keep a look out for errors
    in our invocations of the Lambda function. The *Y *axis is the number of errors
    while the *X *axis is the timeline:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第三个指标是错误指标，它帮助我们关注Lambda函数调用中的错误。*Y*轴是错误数量，而*X*轴是时间线：
- en: '![](img/00190.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00190.jpeg)'
- en: 'The CloudWatch Dashboard of the same metric can be seen by clicking on the
    Jump to Metrics link:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“跳转到指标”链接，你可以看到相同指标的CloudWatch仪表板：
- en: '![](img/00191.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00191.jpeg)'
- en: 'The fourth metric is Throttles. This metric counts the number of times your
    Lambda functions have been throttled, which means the number of times the concurrent
    executions of the functions have breached the set limit of 1,000 per region. We
    won''t encounter this metric very frequently as the Lambda functions which we
    build as examples in this book stay well within the concurrency limits:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第四个指标是节流。这个指标统计了您的 Lambda 函数被节流（即函数的并发执行次数超过了每个区域设置的 1,000 个限制）的次数。我们不会经常遇到这个指标，因为我们在这本书中构建的
    Lambda 函数示例都远远在并发限制之内：
- en: '![](img/00192.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00192.jpeg)'
- en: 'By clicking on the Jump to Metrics link, we can also see this metric in our
    CloudWatch Metrics dashboard:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击“跳转到指标”链接，我们也可以在我们的 CloudWatch 指标仪表板中看到这个指标：
- en: '![](img/00193.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00193.jpeg)'
- en: 'The fifth metric is the iterator age. This is only valid for functions which
    are triggered by the DynamoDB stream or the Kinesis stream. It gives the age of
    the last record which is processed by the function:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第五个指标是迭代器年龄。这个指标仅适用于由 DynamoDB 流或 Kinesis 流触发的函数。它给出了函数处理最后一条记录的年龄：
- en: '![](img/00194.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00194.jpeg)'
- en: 'The Jump to Metrics link takes you to the CloudWatch Metrics dashboard of this
    metric:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: “跳转到指标”链接将带您到这个指标的 CloudWatch 指标仪表板：
- en: '![](img/00195.jpeg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00195.jpeg)'
- en: 'The sixth and the last metric is the DLQ errors metric. This gives the number
    of errors that occurred while sending messages (failed event payloads) to a dead
    letter queue. Most often the errors would be caused due to faulty permission configurations
    and timeouts:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第六个也是最后一个指标是死信队列错误指标。这个指标给出了在向死信队列发送消息（失败的事件负载）时发生的错误数量。大多数情况下，错误是由于权限配置错误和超时引起的：
- en: '![](img/00196.jpeg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00196.jpeg)'
- en: 'The Jump to Metrics link will take you to the CloudWatch Metrics dashboard
    of the same metric:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: “跳转到指标”链接将带您到同一指标的 CloudWatch 指标仪表板：
- en: '![](img/00197.jpeg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00197.jpeg)'
- en: Lambda's logs in CloudWatch
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lambda 的日志在 CloudWatch 中
- en: 'So far, we have learned about and understood the metrics of AWS Lambda in great
    detail. Now, we will move on to understanding the logs of the Lambda functions.
    As always, we will try to understand them via the following steps:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经详细了解了 AWS Lambda 的指标。现在，我们将继续了解 Lambda 函数的日志。和往常一样，我们将通过以下步骤来理解它们：
- en: Logs for AWS Lambda functions are stored in CloudWatch's Logs service. You can
    access the CloudWatch Logs service by going to the Logs dashboard by clicking
    on the main CloudWatch dashboard.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AWS Lambda 函数的日志存储在 CloudWatch 的日志服务中。您可以通过点击主 CloudWatch 仪表板上的日志仪表板来访问 CloudWatch
    日志服务。
- en: 'When you click on the logs of the serverless-api, /aws/lambda/serverless-api,
    in the list, we go to the log stream of the serverless API, which looks like this:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您在列表中点击 serverless-api 的日志，/aws/lambda/serverless-api，我们将进入 serverless API
    的日志流，看起来像这样：
- en: '![](img/00198.jpeg)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00198.jpeg)'
- en: 'Each log stream here is a Lambda invocation. So, whenever your Lambda function
    is invoked, it creates a new log stream here. If the invocation is a part of Lambda''s
    retry process, then the logs for that particular invocation will be written under
    the most recent log stream. A single log stream can contain several details. But
    firstly, let us look at what a particular log stream looks like:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里每个日志流都是一个 Lambda 调用。所以，每当你的 Lambda 函数被调用时，它都会在这里创建一个新的日志流。如果调用是 Lambda 重试过程的一部分，那么该特定调用的日志将被写入最新的日志流下。单个日志流可以包含多个细节。但首先，让我们看看一个特定的日志流是什么样子的：
- en: '![](img/00199.jpeg)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00199.jpeg)'
- en: 'Also, if you look closely, you can observe that Lambda''s logs also give out
    information about the duration of the Lambda function''s invocation, the duration
    for which it is billed for, and also the memory used by the function. These metrics
    help in understanding our functions'' performance better and for further optimization
    and fine tuning:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此外，如果您仔细观察，您还可以发现 Lambda 的日志还提供了关于 Lambda 函数调用持续时间、计费持续时间和函数使用的内存的信息。这些指标有助于更好地理解我们函数的性能，以及进行进一步的优化和微调：
- en: '![](img/00200.jpeg)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00200.jpeg)'
- en: 'There are several columns in CloudWatch Logs for you to select from, which
    are not shown in the preceding screenshots. These are the available options:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CloudWatch 日志中有几个列可供选择，这些列在上面的截图中没有显示。这些是可用的选项：
- en: '![](img/00201.jpeg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00201.jpeg)'
- en: 'So, when you select more of those, you will see them in your dashboard as columns.
    These come in handy when you''re doing a much more fine-grained debugging of our
    Lambda functions:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，当你选择更多的这些选项时，你将在仪表板上看到它们作为列。这些在执行对Lambda函数的更精细的调试时非常有用：
- en: '![](img/00202.jpeg)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![图片00202](img/00202.jpeg)'
- en: Logging statements in Lambda
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lambda中的日志记录
- en: 'Logging your comments and errors clearly is always a good software practice.
    So, we shall now understand how to log from inside of Lambda functions. There
    are broadly two ways of logging inside Lambda functions. We shall now learn and
    understand them via examples from the following steps:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 清晰地记录注释和错误始终是良好的软件开发实践。因此，我们现在将了解如何在Lambda函数内部进行日志记录。在Lambda函数内部进行日志记录大致有两种方式。我们现在将通过以下步骤中的示例来学习和理解它们：
- en: 'The first way is to use Python''s `logging` library. This is widely used as
    a standard practice for logging in Python scripts. We shall edit the code we have
    written previously for the serverless API and add in the logging statements in
    it. The code will look like this:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一种方式是使用Python的`logging`库。这被广泛用作Python脚本中日志记录的标准实践。我们将编辑我们之前为无服务器API编写的代码，并在其中添加日志语句。代码将看起来像这样：
- en: '![](img/00203.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图片00203](img/00203.jpeg)'
- en: 'The code which is in the preceding screenshot is as follows:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 上一张截图中的代码如下：
- en: '[PRE0]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, when you run the Lambda function after saving, you can see a successful
    execution statement in green color, which looks like this:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当你保存后运行Lambda函数，你可以在绿色字体中看到成功的执行语句，看起来像这样：
- en: '![](img/00204.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![图片00204](img/00204.jpeg)'
- en: 'When you click on the Details option, you can see the logging statements being
    executed clearly:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当你点击“详情”选项时，你可以清楚地看到正在执行的日志语句：
- en: '![](img/00205.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片00205](img/00205.jpeg)'
- en: 'The next way of logging statements is by simply using the `print` statements
    in Python. It is the most common way of printing out logging statements in Python
    scripts. So, we shall add a `Hello from Lambda` print statement in our function
    code and see if we get the logs in our Lambda execution or not:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 记录日志语句的另一种方式是简单地使用Python中的`print`语句。这是在Python脚本中打印日志语句最常见的方式。因此，我们将在我们的函数代码中添加一个`Hello
    from Lambda`的打印语句，并查看我们是否能在Lambda执行中获得日志：
- en: '![](img/00206.jpeg)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![图片00206](img/00206.jpeg)'
- en: 'The code for this Lambda function is as follows:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 这个Lambda函数的代码如下：
- en: '[PRE1]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When we click on Test for executing the code, we should see a green color message,
    which indicates a successful execution:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们点击“测试”以执行代码时，我们应该看到一个绿色的消息，这表示执行成功：
- en: '![](img/00207.jpeg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
  zh: '![图片00207](img/00207.jpeg)'
- en: 'Again, just like we did previously, clicking on the Details toggle will give
    you the complete execution logs:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，就像我们之前做的那样，点击“详情”切换按钮将给出完整的执行日志：
- en: '![](img/00208.jpeg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![图片00208](img/00208.jpeg)'
- en: We can see the `Hello from Lambda` message too. Out of the two available logging
    options for our Lambda functions, it is always preferable to use the first option
    which is via the Python's logging module. This is because that module gives greater
    flexibility and helps you differentiate between info, error, and debug logs.
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们也可以看到`Hello from Lambda`的消息。在我们的Lambda函数可用的两种日志记录选项中，始终首选使用第一种，即通过Python的日志模块。这是因为该模块提供了更大的灵活性，并有助于你区分info、error和debug日志。
- en: Summary
  id: totrans-159
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned about the monitoring and the logging capabilities
    of AWS. We also learned about the available monitoring and logging tools inside
    the AWS environment. We have also learned how to monitor our Lambda functions
    and how to set up logging for our Lambda functions.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了AWS的监控和日志记录功能。我们还学习了AWS环境中可用的监控和日志记录工具。我们还学习了如何监控我们的Lambda函数以及如何为我们的Lambda函数设置日志记录。
- en: We have learned about the logging and monitoring practices that are followed
    by the industry and the various ways one can log statements in Python from inside
    of a Lambda function.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经了解了行业遵循的日志和监控实践，以及一个人如何在Lambda函数内部记录语句的各种方式。
- en: In the next chapter, we will learn how to scale up our serverless architectures
    to become distributed and to be able to handle massive workloads while still preserving
    the positives of a serverless setup.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何将我们的无服务器架构扩展为分布式，以便能够处理大量工作负载，同时仍然保留无服务器设置的优势。
