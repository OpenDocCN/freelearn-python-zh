- en: Chapter 8. Marc-André Lemburg
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。Marc-André Lemburg
- en: '![Marc-André Lemburg](img/B08180_19_01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![Marc-André Lemburg](img/B08180_19_01.jpg)'
- en: Marc-André Lemburg is a German software developer and entrepreneur. He is the
    CEO and founder of eGenix, which provides Python training and consulting services.
    Marc-André is a core developer for Python and the creator of a set of popular
    Python extensions. He is a founding member of the Python Software Foundation (PSF)
    and has served as a director twice. Marc-André is the co-founder of the Python
    Meeting Düsseldorf and the chair of the EuroPython Society (EPS). He regularly
    gives talks at Python conferences around the world.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Marc-André Lemburg是一位德国软件开发者和企业家。他是eGenix的CEO和创始人，该公司提供Python培训和咨询服务。Marc-André是Python的核心开发者，也是一系列流行Python扩展的创造者。他是Python软件基金会（PSF）的创始成员，曾两次担任董事。Marc-André是Düsseldorf
    Python会议的联合创始人，也是EuroPython协会（EPS）的主席。他经常在世界各地的Python会议上发表演讲。
- en: '**Discussion themes: mx packages, the PSF, v2.7/v3.x.**'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**讨论主题：mx包、PSF、v2.7/v3.x。**'
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Marc-André Lemburg here: @malemburg**'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**在这里与Marc-André Lemburg保持联系：@malemburg**'
- en: '**Mike Driscoll**: So why did you become a programmer?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**Mike Driscoll**：你为什么成为程序员？'
- en: '**Marc-André Lemburg**: My father worked at IBM, so I was exposed to programming
    computers quite early.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg**：我的父亲在IBM工作，所以我很早就接触到了计算机编程。'
- en: I loved technology and making things work, but at the time (late in the 1970s),
    computers were still pretty much out of reach for kids of my age. I played around
    with "programs" which were written down on a piece of paper and "run" by imagining
    how a real computer would probably execute them.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我热爱技术和让事物工作，但在当时（20世纪70年代末晚期），对于像我这样的孩子来说，电脑仍然遥不可及。我玩弄着写在一张纸上的“程序”，并通过想象一个真正的电脑可能会如何执行它们来“运行”它们。
- en: I learned programming aged 11, after my dad purchased a Sinclair ZX81\. First,
    I learned BASIC and then later Z80 assembler, since the ZX81 was a rather slow
    machine. Assembler was particularly fun. I had to write the programs by literally
    putting together the opcodes bit by bit, based on a Z80 manual. I then converted
    the opcodes to hex and entered them into a hex editor for the ZX81 by hand, in
    order to run the routines.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我在11岁时开始学习编程，那是在我爸爸买了一台Sinclair ZX81之后。首先，我学习了BASIC，然后后来学习了Z80汇编器，因为ZX81是一款相当慢的机器。汇编器特别有趣。我必须逐个字节地将操作码组合起来编写程序，基于Z80手册。然后我将操作码转换为十六进制，并手动将它们输入到ZX81的十六进制编辑器中，以便运行程序。
- en: '**Marc-André Lemburg: ''I learned to appreciate performance, as well as pay
    attention to details.''**'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg：“我学会了欣赏性能，以及注意细节。”**'
- en: The effort was worth it, since the routines ran much faster than the ZX81 BASIC.
    I learned to appreciate performance, as well as pay attention to details. A bug
    in the assembler code usually meant having to restart the ZX81, after running
    the program and having to reload everything all over again. Given the cassette
    drive interface, this took quite a while.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这种努力是值得的，因为程序运行得比ZX81的BASIC快得多。我学会了欣赏性能，并注意细节。汇编代码中的错误通常意味着在运行程序并重新加载所有内容后，需要重新启动ZX81。考虑到磁带驱动器接口，这需要相当长的时间。
- en: About two years later, my dad bought the first IBM PC1 and I started to learn
    MS BASIC, Turbo Pascal, and Turbo C. In school, I continued to work a lot with
    computers and during university I founded my first company.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 大约两年后，我爸爸买了第一台IBM PC1，我开始学习MS BASIC、Turbo Pascal和Turbo C。在学校，我继续大量使用电脑，并在大学期间创立了我的第一家公司。
- en: '**Driscoll**: So how did you come across Python?'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你是如何接触到Python的？'
- en: '**Lemburg**: I first found out about Python when looking through an OS/2 Freeware
    CD called Hobbes in 1994\. Python was listed as one of the programming languages
    and included in version 1.1.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**：我在1994年通过翻阅一张名为Hobbes的OS/2 Freeware CD时第一次了解到Python。Python被列为编程语言之一，并包含在1.1版本中。'
- en: I read Guido van Rossum's tutorial in an afternoon and was immediately convinced
    that I had found what I had always been looking for. Python is a language which
    has all of the important data structures, implemented in a way that is easy to
    use, with a clear syntax and no need for explicit memory management or parentheses
    to define blocks.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我在一个下午阅读了Guido van Rossum的教程，并立即确信我找到了我一直寻找的东西。Python是一种具有所有重要数据结构的语言，实现方式易于使用，语法清晰，无需显式内存管理或括号来定义块。
- en: At the time, I was mostly writing C code, so I had to deal with all of the difficulties
    of a system language on a regular basis. Problems included memory allocation,
    pointer arithmetic, overflows, segfaults, long sessions in debuggers, and the
    slow edit-compile-run-debug cycle.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，我主要编写C代码，因此我不得不定期处理系统语言的所有困难。这些问题包括内存分配、指针算术、溢出、段错误、在调试器中的长时间会话以及缓慢的编辑-编译-运行-调试周期。
- en: '**Marc-André Lemburg: ''Python had everything that made me happy.''**'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg: ''Python拥有让我感到快乐的一切。''**'
- en: 'Python had everything that made me happy: an interpreter for interactive experiments,
    good documentation, a fairly complete standard library and a really nice C API,
    with everything needed to interface Python to existing C code. This included a
    detail which I found particularly interesting: the interpreter was using the data
    structures it provided for the language to also implement its own internals.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: Python拥有让我感到快乐的一切：一个用于交互式实验的解释器、良好的文档、相当完整的标准库以及一个真正优秀的C API，其中包含了将Python与现有C代码接口所需的一切。这包括一个我发现特别有趣的小细节：解释器正在使用它为语言提供的数结构来实现其自身的内部机制。
- en: '**Driscoll**: Could you explain how you became an entrepreneur and founded
    your own company?'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 你能解释一下你是如何成为企业家并创立自己的公司的吗？'
- en: '**Lemburg**: I started working in IT at the age of 17\. In 1993, while at university,
    I formed my first company called IKDS and worked as a freelancer for local companies
    that wanted to enter the then new market of online business.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**: 我17岁时开始从事IT工作。1993年，在大学期间，我成立了我的第一家名为IKDS的公司，为想要进入当时新兴在线业务市场的本地公司做自由职业者。'
- en: After finishing university in 1997, I used my experience from building several
    website engines, to start working on a new web application server. My aim was
    to build a system that would make it easy and efficient to develop online web
    systems. The system would leverage object-oriented technology, relational databases,
    and the simplicity and elegance of Python.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 1997年大学毕业之后，我利用在构建几个网站引擎方面的经验，开始着手开发一个新的网络应用服务器。我的目标是构建一个使开发在线网络系统既容易又高效的系统。该系统将利用面向对象技术、关系数据库以及Python的简洁和优雅。
- en: After three years of hard work, I had finished the first release, with everything
    that was needed for a commercial enterprise product. I then started a limited
    company to market the product early in 2000\. The development of the application
    server resulted in me entering the world of open source.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 经过三年的艰苦努力，我完成了第一个版本，其中包含了商业企业产品所需的一切。然后，我在2000年初成立了一家有限公司来推广这个产品。应用服务器的开发使我进入了开源的世界。
- en: '**Marc-André Lemburg: ''The development of the application server resulted
    in me entering the world of open source.''**'
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg: ''应用服务器的开发使我进入了开源的世界。''**'
- en: Since I did not have enough resources available to thoroughly test the software
    that I was writing, I decided to make the basic modules used in the application
    server open source. This is how the popular mx Extensions came to be. Commercially,
    the application server was not a success. I found that the market simply didn't
    yet understand the benefits of such a product.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我没有足够的资源来彻底测试我正在编写的软件，我决定将应用服务器中使用的核心模块开源。这就是流行的mx扩展如何产生的。从商业角度来看，应用服务器并不成功。我发现市场还没有理解这种产品的优势。
- en: I then focused more on consulting and running projects for other companies.
    One of the more interesting projects was a financial trading system that was completely
    written in Python. Similar projects are keeping me fairly busy these days, so
    I unfortunately don't have much time to contribute to CPython development anymore.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我更多地专注于咨询和为其他公司运行项目。其中一个更有趣的项目是完全用Python编写的金融交易系统。如今，类似的项目让我相当忙碌，所以我很遗憾没有太多时间贡献于CPython的开发。
- en: '**Driscoll**: Can you explain a little more about the mx Extensions that your
    company distributes and maintains?'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 你能更详细地解释一下你们公司分发和维护的mx扩展吗？'
- en: '**Lemburg**: I started working on the mx Extensions while developing the web
    application server in 1997\. At the time, I found that Python was lacking a good
    general-purpose database module.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**: 我在1997年开发网络应用服务器时开始着手mx扩展。当时，我发现Python缺少一个优秀的通用数据库模块。'
- en: There was an old Windows-based ODBC interface, but it wasn't really up to the
    task of providing a viable and performant interface to databases across Windows
    and Unix platforms. I started writing mxODBC to address this need. I wanted to
    create a fast and portable interface for ODBC drivers, which would allow me to
    connect the application server to all of the popular databases.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 曾经有一个基于Windows的ODBC接口，但它并没有真正达到在Windows和Unix平台之间提供可行和高效数据库接口的任务。我开始编写mxODBC来满足这一需求。我想创建一个快速且可移植的ODBC驱动程序接口，这样我就可以将应用服务器连接到所有流行的数据库。
- en: While working on mxODBC, the lack of a good date/time handling module became
    apparent. mxDateTime was born to fix this and became a standard in the Python
    world for many years, until the Python stdlib grew its own datetime module in
    Python 2.3.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发mxODBC时，缺乏一个好的日期/时间处理模块变得明显。mxDateTime应运而生以解决这个问题，并在Python世界中成为标准，直到Python
    2.3中stdlib增长了自己的datetime模块。
- en: '**Marc-André Lemburg: ''mxDateTime was born...and became a standard in the
    Python world for many years.''**'
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·伦伯格**：“mxDateTime诞生了……并且多年来成为了Python世界的标准。”'
- en: mxTextTools and several of the other mx packages were the result of needing
    fast parsing for templating in the application server. This was later used by
    other people to write parsing engines, for example Biopython (parsing genome data),
    or drive parsers implementing user-defined grammars.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: mxTextTools和其他几个mx包是为了在应用服务器中快速解析模板而产生的。后来，其他人用它来编写解析引擎，例如Biopython（解析基因组数据），或者驱动实现用户定义语法的解析器。
- en: The Tagging Engine in mxTextTools works a bit like a Turing state machine, because
    it provides very fast parsing primitives, which can be assembled using Python
    tuples. Several utility functions help with using the parsing results for implementing
    search and replace. mxTextTools was first written for 8-bit text and binary data.
    A few years later, a client hired me to extend this to Unicode.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: mxTextTools中的标记引擎工作方式有点像图灵状态机，因为它提供了非常快速的解析原语，这些原语可以使用Python元组组装。几个实用函数有助于使用解析结果来实现搜索和替换。mxTextTools最初是为8位文本和二进制数据编写的。几年后，一位客户雇佣我将其扩展到Unicode。
- en: The lesser known mxStack and mxQueue played a role as fast data structures in
    the application server. The mxTools package is a collection of fast built-ins
    that I also wrote for the application server. Several of the ideas in mxTools
    were eventually added to core Python in some form.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 较少人知道的mxStack和mxQueue在应用服务器中扮演了快速数据结构的作用。mxTools包是我为应用服务器编写的一系列快速内置工具。mxTools中的几个想法最终以某种形式被添加到Python核心中。
- en: '**Driscoll**: So how did you become a Python core developer?'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：你是如何成为Python核心开发者的？'
- en: '**Lemburg**: While starting to write the mx Extensions, I had a lot of contact
    with the Python C API and its internals. I contributed back patches to CPython
    and became a core developer later in 1997.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**伦伯格**：在开始编写mx扩展时，我与Python C API及其内部有很多接触。我向CPython贡献了补丁，并在1997年后期成为核心开发者。'
- en: Probably more people know about my contributions to CPython in the form of the
    Unicode integration. In 1999, Guido contacted Fredrik Lundh and me and asked us
    to bring Unicode to Python. This was initiated by a grant from HP to the Python
    Consortium (a Python Software Foundation predecessor).
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 可能更多的人知道我对CPython的贡献是以Unicode集成形式出现的。1999年，吉多联系了弗雷德里克·伦德和 myself，并要求我们为Python引入Unicode。这是由HP向Python联盟（Python软件基金会的前身）提供的资助所启动的。
- en: '**Marc-André Lemburg: ''Guido contacted Fredrik Lundh and me and asked us to
    bring Unicode to Python.''**'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·伦伯格**：“吉多联系了弗雷德里克·伦德和 myself，并要求我们为Python引入Unicode。”'
- en: Fredrik worked on a new regular expression engine. I added native Unicode support
    to Python. I also designed and wrote the codec subsystem in Python. The initial
    release was in 2000, with Python 1.6/2.0\. I helped to maintain this part of CPython
    2.0 for more than 10 years.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 弗雷德里克开发了一个新的正则表达式引擎。我为Python添加了原生Unicode支持。我还设计了Python中的编解码器子系统。最初的发布是在2000年，Python
    1.6/2.0版本。我帮助维护了CPython 2.0的这个部分超过10年。
- en: '**Driscoll**: What are some of the other contributions that you have made to
    Python?'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：你为Python做出了哪些其他贡献？'
- en: '**Lemburg**: I contributed the source code encoding system, the platform module
    and parts of the locale module. I was also responsible for the pybench suite for
    measuring enhancements to CPython and several patches and ideas to make Python
    run faster, or to make it more comfortable.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**伦伯格：**我贡献了源代码编码系统、平台模块和locale模块的部分。我还负责pybench套件，用于测量CPython的增强，以及一些使Python运行更快或更舒适的补丁和想法。'
- en: '**Driscoll**: What challenges have you had as a core developer of Python?'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**作为Python的核心开发者，你遇到了哪些挑战？'
- en: '**Lemburg**: In the early years, being a core developer was a lot of fun, since
    the processes were a lot less formal than they are today. The only real challenge
    was that discussions targeting Unicode often resulted in endless discussions and
    sometimes flame wars.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**伦伯格：**在早期，作为核心开发者非常有趣，因为流程比现在要正式得多。唯一的真正挑战是针对Unicode的讨论往往导致无休止的讨论，有时甚至引发激烈的争论。'
- en: '**Marc-André Lemburg: ''Discussions targeting Unicode often resulted in endless
    discussions and sometimes flame wars.''**'
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·伦伯格：**“针对Unicode的讨论往往导致无休止的讨论，有时甚至引发激烈的争论。”'
- en: I don't know whether this was because Unicode was at the core of working with
    text, or simply due to the many strong egos participating in the discussions.
    I took most of these discussions with a grain of salt and good humor.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道这是否是因为Unicode是处理文本的核心，或者仅仅是因为参与讨论的许多人都很有个性。我对这些讨论大多持保留态度，并用幽默感来对待。
- en: Since then, we've seen several generations of core developers come and move
    on. Integrating the new developers was often not easy and involved lots of discussions.
    We had to try to explain how Python development worked and move all of the new
    energy in the right directions.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从那时起，我们已经看到了几代核心开发者来来去去。整合新开发者往往并不容易，涉及大量的讨论。我们不得不尝试解释Python开发是如何工作的，并将所有的新活力引导到正确的方向上。
- en: '**Driscoll**: Python is one of the major languages used in AI and machine learning.
    Why do you think this is?'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**Python是AI和机器学习中使用的主要语言之一。你认为这是为什么？'
- en: '**Lemburg**: Python is very easy to understand for scientists who are often
    not trained in computer science. It removes many of the complexities that you
    have to deal with, when trying to drive the external libraries that you need to
    perform research.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**伦伯格：**Python对于经常没有接受过计算机科学训练的科学家来说非常容易理解。它消除了你在尝试驱动进行研究的所需外部库时必须处理的许多复杂性。'
- en: After Numeric (now NumPy) started the development, the addition of IPython Notebooks
    (now Jupyter Notebooks), matplotlib, and many other tools to make things even
    more intuitive, Python has allowed scientists to mainly think about solutions
    to problems and not so much about the technology needed to drive these solutions.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在Numeric（现在是NumPy）开始开发之后，添加了IPython笔记本（现在是Jupyter笔记本）、matplotlib和其他许多工具，使事情更加直观，Python让科学家们主要思考问题的解决方案，而不是那么多的驱动这些解决方案所需的技术。
- en: '**Marc-André Lemburg: ''Python has allowed scientists to mainly think about
    solutions to problems and not so much about the technology needed to drive these
    solutions.''**'
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·伦伯格：**“Python让科学家们主要思考问题的解决方案，而不是那么多的驱动这些解决方案所需的技术。”'
- en: As in other areas, Python is an ideal integration language, which binds technologies
    together with ease. Python allows users to focus on the real problems, rather
    than spending time on implementation details. Apart from making things easier
    for the user, Python also shines as an ideal glue platform for the people who
    develop the low-level integrations with external libraries. This is mainly due
    to Python being very accessible via a nice and very complete C API.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他领域一样，Python是一个理想的集成语言，它能够轻松地将技术绑定在一起。Python使用户能够专注于真正的问题，而不是花费时间在实现细节上。除了让用户更轻松之外，Python还作为一个理想的粘合平台，为开发与外部库进行底层集成的开发者提供了便利。这主要归功于Python通过一个非常好且非常完整的C
    API非常易于访问。
- en: '**Driscoll**: How could Python be improved for AI and machine learning?'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**如何改进Python以适应AI和机器学习？'
- en: '**Lemburg**: I think that Python is already one of the best choices that you
    have for AI and machine learning. With a vibrant community engaged in making the
    language even better, Python is going to have a long and great future in this
    area.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**伦伯格：**我认为Python已经是你在AI和机器学习方面最好的选择之一。随着一个充满活力的社区致力于使语言更加完善，Python在这个领域将拥有漫长而辉煌的未来。'
- en: '**Mike Driscoll: Can you explain how the Python Software Foundation (PSF) was
    founded?**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**迈克·德里斯科尔：**你能解释一下Python软件基金会（PSF）是如何成立的吗？'
- en: '**Lemburg**: Before the PSF we had the Python Software Activity group (PSA),
    for which you had to pay a small amount each year. We also had the lesser known
    Python Consortium, for companies to support Python development, which paid big
    bucks each year.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**莱姆伯格**：在PSF之前，我们有Python软件活动小组（PSA），每年需要支付一小笔费用。我们还有一个不太为人所知的Python联盟，旨在支持Python开发，每年支付大笔资金。'
- en: Both groups did not really provide enough support for Python. The copyright
    in Python was also scattered across several different companies (see the Python
    license stack). Two companies that had significantly invested in Python, Zope
    Corporation, and ActivePython, started a project to potentially address all of
    these issues with a new non-profit organization.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个小组并没有真正为Python提供足够支持。Python的版权也分散在几家不同的公司（参见Python许可证堆栈）。两家在Python上投入了显著资金的公司，Zope公司和ActivePython，启动了一个项目，旨在通过一个新的非营利组织解决所有这些问题。
- en: This became the PSF and it was founded at IPC9, the commercial International
    Python Conference 9\. We had 16 Python core developers at the time and the two
    companies as founding members. The core developers, including Guido, licensed
    their contributions to the PSF by signing contributor agreements and all subsequent
    releases were done in the name of the PSF.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这成为了PSF，它是在IPC9（第九届商业国际Python会议）上成立的。当时我们有16位Python核心开发者，两家公司作为创始成员。核心开发者，包括吉多，通过签署贡献者协议将他们的贡献许可给了PSF，所有后续的发布都是以PSF的名义进行的。
- en: Initially, the PSF did nothing more than work as a legal body for maintaining
    the copyright in Python distribution. Later, the PSF also received the trademark
    rights to the wordmark Python from CNRI.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时，Python软件基金会（PSF）仅作为维护Python发行版版权的法律实体。后来，PSF还获得了来自CNRI的Python标志商标权。
- en: In 2003, the PSF then underwrote the first PyCon US conference in Washington.
    This new development introduced a revenue stream for the PSF, which opened up
    new possibilities for helping the Python community.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 2003年，PSF在华盛顿资助了首届PyCon US会议。这一新举措为PSF引入了收入来源，为帮助Python社区开辟了新的可能性。
- en: '**Marc-André Lemburg: ''This new development introduced a revenue stream for
    the PSF, which opened up new possibilities for helping the Python community.''**'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·莱姆伯格**：“这一新举措为PSF引入了收入来源，为帮助Python社区开辟了新的可能性。”'
- en: As PyCon US grew and commercial sponsors started supporting it more, the revenue
    also grew. This resulted in the PSF turning into a more mature organization over
    the years. I was on the PSF board for several years to help with these developments.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 随着PyCon US的成长和商业赞助商的支持增加，收入也相应增长。这导致PSF在多年后成为一个更加成熟的组织。我曾担任PSF董事会成员数年，以帮助这些发展。
- en: '**Driscoll**: I know that you helped to organize the first EuroPython. Could
    you tell me about that?'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：我知道你帮助组织了首届EuroPython会议。你能告诉我关于这件事的吗？'
- en: '**Lemburg**: In 2001, a group of European Python and Zope users and companies
    started a long discussion about the desire to have a Python conference in Europe.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**莱姆伯格**：2001年，一群欧洲Python和Zope用户及公司开始了一场关于在欧洲举办Python会议的长篇讨论。'
- en: The Python workshops and the IPC conferences were all in the US. There wasn't
    much going on for Python in Europe at the time. I was one of the participants
    in the discussions and they did not seem to want to end. Closer to the event,
    I then joined the executive committee to actually make the EuroPython conference
    happen. That's how EuroPython 2002 came to be.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Python研讨会和IPC会议都在美国举行。当时在欧洲几乎没有Python的活动。我是讨论的参与者之一，他们似乎并不想结束。在活动临近时，我加入了执行委员会，实际上促成了EuroPython会议的举办。这就是2002年EuroPython会议的由来。
- en: '**Marc-André Lemburg: ''There wasn''t much going on for Python in Europe at
    the time.''**'
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**马克-安德烈·莱姆伯格**：“当时在欧洲几乎没有Python的活动。”'
- en: The whole event was run by volunteers, unlike the commercial Python conferences
    in the US at the time. We were on a very small budget. As such, EuroPython also
    predates PyCon US, which was the first conference that was run by volunteers in
    the US.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 整个活动都是由志愿者组织的，与美国当时的商业Python会议不同。我们的预算非常有限。因此，EuroPython也早于PyCon US，后者是美国首个由志愿者组织的会议。
- en: EuroPython 2002 was held in Charleroi. It was a lot of fun to be able to run
    a first major European Python conference. EuroPython was also quite successful,
    with even Guido attending. Nowadays, there are lots of national Python events
    happening each year, so while EuroPython doesn't want to compete with other national
    Python events, it's definitely operating in that space.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: EuroPython 2002 在沙勒罗伊举行。能够举办第一次主要的欧洲 Python 会议非常有趣。EuroPython 也相当成功，甚至 Guido
    也出席了。如今，每年都有许多国家级的 Python 活动举行，因此虽然 EuroPython 不想与其他国家级 Python 活动竞争，但它确实在这个领域运营。
- en: '**Driscoll**: How has EuroPython changed over the years?'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：EuroPython 这些年是如何变化的？'
- en: '**Lemburg**: Since the early days, EuroPython has grown a lot and it passed
    the 1000 attendee mark in 2014\. The conference is still run by volunteers, but
    it''s no longer an operation which can be run on the side.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**：自从早期开始，EuroPython 就发展壮大，并在 2014 年达到了 1000 名参会者的里程碑。会议仍然由志愿者运营，但它已经不再是一个可以在旁边进行的操作了。'
- en: The EuroPython Society, which organizes EuroPython, has a lot of work to do
    each year to put on the conference. I'm the chair of the organization at the moment
    and have been on the board for several years. Each year, we're growing the event
    into a more professional setup. Still, it's a challenge staying on top of everything
    that needs to be done to put on a conference. The board members typically have
    to work between 200 and 400 hours each to make an event happen.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 组织 EuroPython 的 EuroPython 社会有很多工作要做，以确保每年都能举办会议。我目前是组织的主席，并且已经担任董事会成员多年。每年，我们都在将活动发展成一个更专业的设置。尽管如此，保持对举办会议所需完成的每一件事的掌控仍然是一个挑战。董事会成员通常需要投入
    200 到 400 个小时才能使活动得以举办。
- en: '**Driscoll**: What are you most excited about in Python today?'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你对当今的 Python 最兴奋的是什么？'
- en: '**Lemburg**: I''m most excited about the native async I/O support. With the
    addition of new keywords, this has finally become usable in Python and will go
    a long way in helping to use the full CPU power that''s available on today''s
    machines.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**：我最兴奋的是原生的异步 I/O 支持。随着新关键字的添加，这最终在 Python 中变得可用，并将大大有助于利用今天机器上可用的全部
    CPU 功率。'
- en: '**Marc-André Lemburg: ''I''m most excited about the native async I/O support.''**'
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg**：“我最兴奋的是原生的异步 I/O 支持。”'
- en: As an aside, I find the Python type annotations to be the least exciting development
    in today's Python. They take away a lot of the elegance of Python programs. Even
    though type annotations are optional, many companies will enforce their use via
    corporate policy. This will eventually result in more and more Python being written
    using these annotations and will make Python look a lot like any other modern
    statically typed scripting language.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 顺便说一下，我发现 Python 的类型注解是当今 Python 最不令人兴奋的发展。它们剥夺了 Python 程序的许多优雅之处。尽管类型注解是可选的，但许多公司将通过企业政策强制执行其使用。这最终会导致越来越多的
    Python 使用这些注解编写，使 Python 看起来更像任何其他现代静态类型脚本语言。
- en: '**Driscoll**: What do you think about Python 2.7? Should everyone be moving
    over to the latest version?'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你对 Python 2.7 有什么看法？每个人都应该迁移到最新版本吗？'
- en: '**Lemburg**: Yes, they should, but you have to consider the amount of work
    which has to go into a port from Python 2.7 to 3.x. Many companies have huge code
    bases written for Python 2.x, including my own company eGenix. Commercially, it
    doesn''t always make sense to port to Python 3.x, so the divide between the two
    worlds will continue to exist well beyond 2020.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**：是的，它们应该迁移，但你必须考虑从 Python 2.7 迁移到 3.x 需要投入多少工作量。许多公司都有为 Python 2.x
    编写的庞大代码库，包括我的公司 eGenix。从商业角度来看，并不总是有理由将代码迁移到 Python 3.x，因此两个世界之间的分歧将延续到 2020 年之后。'
- en: '**Marc-André Lemburg: ''Commercially, it doesn''t always make sense to port
    to Python 3.x, so the divide between the two worlds will continue to exist well
    beyond 2020.''**'
  id: totrans-76
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Marc-André Lemburg**：“从商业角度来看，并不总是有理由将代码迁移到 Python 3.x，因此两个世界之间的分歧将延续到 2020
    年之后。”'
- en: Python 2.7 does have its advantages because it became the LTS version of Python.
    Corporate users generally like these long-term support versions, since they reduce
    porting efforts from one version to the next.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Python 2.7 确实有其优势，因为它成为了 Python 的 LTS 版本。企业用户通常喜欢这些长期支持版本，因为它们减少了从一个版本迁移到下一个版本的工作量。
- en: I believe that Python will have to come up with an LTS 3.x version as well,
    to be able to sustain success in the corporate world. Once we settle on such a
    version, this will also make a more viable case for a Python 2.7 port, since the
    investment will then be secured for a good number of years.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为 Python 还需要推出一个 LTS 3.x 版本，以便在商业世界中持续成功。一旦我们确定这样的版本，这也将为 Python 2.7 的移植提供一个更可行的案例，因为投资将在接下来的几年中得到保障。
- en: '**Driscoll**: What changes would you like to see in future Python releases?'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 你希望在未来的 Python 版本中看到哪些变化？'
- en: '**Lemburg**: Python will need to make it easier to use the full number of cores
    and CPUs that you have in today''s machines. Async I/O has helped by making better
    use of a single core, but it''s not the answer to multi-core deployments.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lemburg**: Python 将需要使今天机器上的全部核心和 CPU 数量更容易使用。异步 I/O 通过更好地利用单个核心已经有所帮助，但这并不是多核部署的解决方案。'
- en: Removing the Global Interpreter Lock (GIL) and replacing it with more fine-grained
    locking mechanisms would be one approach, but it's going to be a long and rocky
    path to such a world. We should be careful not to underestimate the complexities
    and possible breakage to the many C extensions. Alienating these would set back
    Python a lot, since they are essential drivers of Python's success. As a result,
    we would have to provide a smooth upgrade path for the existing extensions, perhaps
    by keeping the GIL in place while they are in control.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 移除全局解释器锁（GIL）并用更细粒度的锁定机制来替换它是一种方法，但通往这样一个世界的道路将是漫长且坎坷的。我们应该小心不要低估其复杂性和可能对众多
    C 扩展造成的破坏。疏远这些扩展将会严重阻碍 Python 的发展，因为它们是 Python 成功的关键驱动因素。因此，我们必须为现有的扩展提供一个平稳的升级路径，也许可以通过在它们控制时保持
    GIL 来实现。
- en: In my opinion, we should also investigate other approaches, such as making inter-process
    communication more efficient and user friendly, perhaps even by adding new keywords
    to automatically run code in parallel.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，我们还应该调查其他方法，例如使进程间通信更加高效和用户友好，甚至可能通过添加新的关键字来自动并行运行代码。
- en: '**Driscoll**: Thank you, Marc-André Lemburg.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**: 谢谢，马克-安德烈·莱姆伯格。'
