- en: Chapter 9. Using Sessions
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章。使用会话
- en: Sessions are variables stored by the server according to the user. On many websites,
    it is useful to keep user data as an identifier, a basket, or a configuration
    item. For this, Django stores this information in the database. It then randomly
    generates a string as a hash code that is transmitted to the client as a cookie.
    This way of working allows you to store a lot of information about the user while
    minimizing the exchange of data between the server and client, for example, the
    type of identifier that the server can generate.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 会话是根据用户存储在服务器上的变量。在许多网站上，将用户数据保留为标识符、购物篮或配置项是有用的。为此，Django将这些信息存储在数据库中。然后，它随机生成一个字符串作为哈希码，传输给客户端作为cookie。这种工作方式允许您存储有关用户的大量信息，同时最大限度地减少服务器和客户端之间的数据交换，例如服务器可以生成的标识符类型。
- en: 'In this chapter, we will do the following:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将做以下事情：
- en: Study how session variables work with the Django framework
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 研究会话变量在Django框架中的工作方式
- en: Learn how to create and retrieve a session variable
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何创建和检索会话变量
- en: Study session variables with a practical and useful example
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过一个实际而有用的例子来研究会话变量
- en: Make ourselves aware of the safety of using session variables
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 让我们意识到使用会话变量的安全性
- en: 'Firebug is a plugin for Firefox. This is a handy tool for a web developer;
    it allows you to do the following:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Firebug是Firefox的一个插件。这是一个对于Web开发人员来说非常方便的工具；它允许您做以下事情：
- en: Display the JavaScript console to read errors
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示JavaScript控制台以读取错误
- en: Read and edit the HTML code of the page from the browser
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从浏览器中读取和编辑页面的HTML代码
- en: View the cookies used by the website consulted
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 查看网站使用的cookies
- en: '![Using Sessions](img/00024.jpeg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![使用会话](img/00024.jpeg)'
- en: Cookies realized with Firebug
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Firebug实现的cookies
- en: 'In this screenshot realized with Firebug, we notice that we have two cookies:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Firebug实现的这个截图中，我们注意到我们有两个cookies：
- en: '`sessionid`: This is our session ID. It is with this identifier that Django
    will know with which user it processes.'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sessionid`：这是我们的会话ID。Django将通过这个标识符知道它正在处理哪个用户。'
- en: '`csrftoken`: This cookie is typical Django. We already spoke about it in the
    chapter about forms. It won''t be used in this chapter.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`csrftoken`：这个cookie是典型的Django。我们在关于表单的章节中已经谈到过它。它在本章中不会被使用。'
- en: 'The following is a screenshot of the table where session data is stored:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是存储会话数据的表的截图：
- en: '![Using Sessions](img/00025.jpeg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![使用会话](img/00025.jpeg)'
- en: 'Sessions are very useful, especially for authentication systems. Indeed, in
    many cases, when a user connects to a website, we record their identifier in the
    session variable. Thus, with each HTTP request, the user sends this identifier
    to inform the site about their status. This is also an essential system to make
    the administration module work, which we will see in a later chapter. However,
    sessions have a disadvantage if they are not regularly removed: they take more
    space in the database. To use sessions in Django, the `django.contrib.sessions.middleware.SessionMiddleware`
    middleware must be enabled and the browser must accept cookies.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 会话对于认证系统特别有用。实际上，在许多情况下，当用户连接到网站时，我们会将他们的标识符记录在会话变量中。因此，每个HTTP请求，用户都会发送这个标识符来通知网站他们的状态。这也是使管理模块工作的重要系统，我们将在后面的章节中看到。然而，如果会话不经常被删除，它们有一个缺点：它们会在数据库中占用更多的空间。要在Django中使用会话，必须启用`django.contrib.sessions.middleware.SessionMiddleware`中间件，并且浏览器必须接受cookies。
- en: 'The life cycle of a session is explained as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 会话的生命周期如下所述：
- en: The user who does not have any session makes an HTTP request to the website.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有任何会话的用户向网站发出HTTP请求。
- en: The server generates a session identifier and sends it to the browser along
    with the page requested by the user.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 服务器生成一个会话标识符，并将其与用户请求的页面一起发送到浏览器。
- en: Whenever the browser makes a request, it will automatically send the session
    identifier.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每当浏览器发出请求时，它将自动发送会话标识符。
- en: Depending on the configuration of the system administrator, the server periodically
    checks if there are expired sessions. If this is the case, it may be deleted.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据系统管理员的配置，服务器定期检查是否有过期的会话。如果是这种情况，它可能会被删除。
- en: '![Using Sessions](img/00026.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![使用会话](img/00026.jpeg)'
- en: Creating and getting session variables
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建和获取会话变量
- en: 'With Django, storage in a database, generation of the hash code, and exchanges
    with the client will be transparent. Sessions are stored in the context represented
    by the `request` variable. To save a value in a session variable, we must use
    the following syntax:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Django，存储在数据库中、生成哈希码并与客户端交换将是透明的。会话存储在由`request`变量表示的上下文中。要在会话变量中保存一个值，我们必须使用以下语法：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Once the session variable is registered, you must use the following syntax
    to recover it:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦会话变量被注册，您必须使用以下语法来恢复它：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To use these lines, we have to be sure to interact with the request context.
    Indeed, in some cases, such as CBV, we do not have simple access to the request
    context.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用这些行，我们必须确保与请求上下文进行交互。实际上，在某些情况下，比如CBV，我们无法简单地访问请求上下文。
- en: An example – showing the last task consulted
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个例子 - 显示最后一个被查看的任务
- en: In this example, we will show a practical example of using session variables.
    In general, a developer consults the tasks to be done. He/she selects one task,
    studies it, and then realizes and notes the time spent. We will store the identifier
    of the last task accessed in a session variable, and we will display it at the
    top of the tasks list to be carried out.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将展示一个使用会话变量的实际例子。一般来说，开发人员会查看要做的任务。他/她选择一个任务，研究它，然后记录和注明花费的时间。我们将在会话变量中存储最后访问的任务的标识符，并将其显示在待完成任务列表的顶部。
- en: 'For this, we will no longer use the `DetailView` CBV to display the details
    of a task, but we will use a real view. First, we must define the URL that will
    allow us to see our view. For this, we will modify the `task_detail` URL with
    the following code:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为此，我们将不再使用`DetailView` CBV来显示任务的详细信息，而是使用一个真正的视图。首先，我们必须定义一个URL，以便查看我们的视图。为此，我们将使用以下代码修改`task_detail`
    URL：
- en: '[PRE2]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will create our view in the `views/task_detail.py` file with the following
    code:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在`views/task_detail.py`文件中创建我们的视图，使用以下代码：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We will then create a list of the tasks with the `ListView` CBV. To do this,
    we must add the following URL to the `urls.py` file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将使用`ListView` CBV创建任务列表。为此，我们必须将以下URL添加到`urls.py`文件中：
- en: '[PRE4]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The corresponding view for this URL is as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该URL的相应视图如下：
- en: '[PRE5]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'We will then create the template for our list. This example will be complete
    because this list will create, read, update, and delete tasks. The following code
    must be placed in the `tasks_list.html` file:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们将为我们的列表创建模板。这个例子将是完整的，因为这个列表将创建、读取、更新和删除任务。以下代码必须放在`tasks_list.html`文件中：
- en: '[PRE6]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For this example to be complete, we must add the following lines in the `style.css`
    file that we have created:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这个例子完整，我们必须在我们创建的`style.css`文件中添加以下行：
- en: '[PRE7]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: These lines are used to highlight the row of the last task consulted.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些行用于突出显示最后一个被查询的任务的行。
- en: About session security
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关于会话安全
- en: Session variables are not modifiable by the user because they are stored by
    the server, unless if in your website you choose to store data sent by the client.
    However, there is a type of flaw that uses the system session. Indeed, if a user
    cannot change their session variables, they may try to usurp another user session.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 会话变量不可被用户修改，因为它们是由服务器存储的，除非在您的网站中选择存储客户端发送的数据。然而，有一种利用系统会话的缺陷。事实上，如果用户无法更改他们的会话变量，他们可能会尝试篡夺另一个用户的会话。
- en: 'We will imagine a realistic attack scenario. We are in a company that uses
    a website to centralize e-mails and the schedule of each employee. An employee
    we appoint, Bob, is very interested in one of his colleagues, Alicia. He wants
    to read her e-mails to learn more about her. One day, when she goes to take her
    coffee in the break room, Bob sits at Alicia''s computer. Like all employees,
    he uses the same password to ease administration, and he can easily connect to
    Alicia''s PC. Luckily, the browser has been left open. Besides, the browser periodically
    contacts the server to see if new messages have arrived so that the session does
    not have time to expire. He downloads a tool such as Firebug that allows him to
    read cookies. He retrieves the hash, erases the traces, and returns to his computer.
    He changes the `ID` session cookies in his browser; therefore, he has access to
    all the information about Alicia. Moreover, when there is no encryption, this
    kind of attack can be done remotely in a local network that sniffs network traffic.
    This is called session fixation. To protect ourselves from this kind of attack,
    it is possible to take a few measures:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将想象一个现实的攻击场景。我们在一家公司，该公司使用网站来集中每个员工的电子邮件和日程安排。我们指定的员工Bob对他的同事Alicia非常感兴趣。他想读她的电子邮件以了解更多关于她的信息。有一天，当她去休息室喝咖啡时，Bob坐在Alicia的电脑前。像所有员工一样，他使用相同的密码以便于管理，并且可以轻松地连接到Alicia的PC。幸运的是，浏览器已经打开。此外，浏览器定期联系服务器以查看是否有新消息到达，以便会话没有时间过期。他下载了一个工具，比如Firebug，可以读取cookies。他检索哈希值，擦除痕迹，然后返回到他的电脑。他更改了浏览器中的`ID`会话cookies；因此，他可以访问关于Alicia的所有信息。此外，在没有加密的情况下，这种攻击可以在嗅探网络流量的本地网络中远程执行。这被称为会话固定。为了保护自己免受这种攻击，可以采取一些措施：
- en: Encrypt communications between the server and client with SSL, for example.
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用SSL等加密通信服务器和客户端之间的通信。
- en: Ask the user to enter a password before they can access sensitive information,
    such as banking information.
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要求用户在访问敏感信息之前输入密码，例如银行信息。
- en: Conduct an audit of the IP address and session number. Disconnect the user if
    he/she changes his/her IP address. Notwithstanding this measure, the attacker
    can perform an IP spoofing to usurp the IP's victim.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对IP地址和会话号码进行审计。如果用户更改IP地址，则断开用户的连接。尽管有这个措施，攻击者仍然可以进行IP欺骗来窃取受害者的IP。
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we managed to save data related to a user. This data is stored
    for the whole duration of the session. It cannot be modified directly by the user.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们成功保存了与用户相关的数据。这些数据将在整个会话期间存储。用户无法直接修改它。
- en: We also studied the safety sessions. Keep in mind that a user session can be
    stolen by an attacker. Depending on the size of the project, it is necessary to
    take measures to secure the website.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还研究了安全会话。请记住，用户会话可能会被攻击者窃取。根据项目的规模，有必要采取措施来保护网站。
- en: In the next chapter, we will learn how to use the authentication module. It
    will allow us to create users and restrict access to certain pages to the logged-in
    users.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何使用认证模块。它将允许我们创建用户并限制已登录用户访问某些页面。
