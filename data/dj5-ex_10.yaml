- en: '10'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '10'
- en: Extending Your Shop
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展你的店铺
- en: In the previous chapter, you learned how to integrate a payment gateway into
    your shop. You also learned how to generate CSV and PDF files.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，你学习了如何将支付网关集成到你的店铺中。你还学习了如何生成 CSV 和 PDF 文件。
- en: In this chapter, you will add a coupon system to your shop and create a product
    recommendation engine.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将为你的店铺添加一个优惠券系统并创建一个产品推荐引擎。
- en: 'This chapter will cover the following points:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: Creating a coupon system
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建优惠券系统
- en: Applying coupons to the shopping cart
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将优惠券应用于购物车
- en: Applying coupons to orders
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将优惠券应用于订单
- en: Creating coupons for Stripe Checkout
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为 Stripe 结账创建优惠券
- en: Storing products that are usually bought together
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储通常一起购买的产品
- en: Building a product recommendation engine with Redis
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Redis 构建产品推荐引擎
- en: Functional overview
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能概述
- en: '*Figure 10.1* shows a representation of the views, templates, and functionalities
    that will be built in this chapter:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.1* 展示了本章将要构建的视图、模板和功能：'
- en: '![](img/B21088_10_01.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_01.png)'
- en: 'Figure 10.1: Diagram of functionalities built in Chapter 10'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.1：第 10 章构建的功能图
- en: In this chapter, you will build a new `coupons` application and create the `coupon_apply`
    view to apply discount coupons to the cart session. You will add the discount
    applied to the template of the `cart_detail` view of the `cart` application. When
    an order is created with the `order_create` view of the `orders` application,
    you will save the coupon to the order created. Then, when you create the Stripe
    session in the `payment_process` view of the `payment` application, you will add
    the coupon to the Stripe checkout session before redirecting the user to Stripe
    to complete the payment. You will add the discount applied to the templates of
    the admin views `admin_order_detail` and `admin_order_pdf` of the `order` application.
    In addition to the coupon system, you will also implement a recommendation system.
    When the `checkout.session.completed` Stripe event is received by the `stripe_webhook`
    view, you will save the products that have been bought together in Redis. You
    will add product recommendations to the `product_detail` and `cart_detail` views
    by retrieving from Redis the items that are frequently bought together.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将构建一个新的 `coupons` 应用程序，并创建 `coupon_apply` 视图以将折扣优惠券应用于购物车会话。你将把应用的折扣添加到
    `cart` 应用程序的 `cart_detail` 视图模板中。当使用 `orders` 应用的 `order_create` 视图创建订单时，你将把优惠券保存到创建的订单中。然后，当你创建
    `payment` 应用的 `payment_process` 视图中的 Stripe 会话时，你将在将用户重定向到 Stripe 完成支付之前，将优惠券添加到
    Stripe 结账会话中。你将把应用的折扣添加到 `order` 应用的管理员视图 `admin_order_detail` 和 `admin_order_pdf`
    的模板中。除了优惠券系统，你还将实现一个推荐系统。当 `stripe_webhook` 视图接收到 `checkout.session.completed`
    Stripe 事件时，你将把一起购买的产品保存到 Redis 中。你将通过从 Redis 中检索经常一起购买的项目，将产品推荐添加到 `product_detail`
    和 `cart_detail` 视图中。
- en: The source code for this chapter can be found at [https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10](https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的源代码可以在 [https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10](https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10)
    找到。
- en: All the Python packages used in this chapter are included in the `requirements.txt`
    file in the source code for the chapter. You can follow the instructions to install
    each Python package in the following sections, or you can install all the requirements
    at once with the command `python -m pip install -r requirements.txt`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中使用的所有 Python 包都包含在章节源代码的 `requirements.txt` 文件中。你可以按照以下部分的说明安装每个 Python 包，或者你可以使用命令
    `python -m pip install -r requirements.txt` 一次性安装所有依赖。
- en: Creating a coupon system
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建优惠券系统
- en: Many online shops give out coupons to customers that can be redeemed for discounts
    on their purchases. An online coupon usually consists of a code that is given
    to users and is valid for a specific time frame.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 许多在线商店会给顾客发放优惠券，顾客可以用这些优惠券在购买时享受折扣。在线优惠券通常由一个给用户的代码组成，并在特定时间段内有效。
- en: You are going to create a coupon system for your shop. Your coupons will be
    valid for customers during a certain time frame. The coupons will not have any
    limitations in terms of the number of times they can be redeemed, and they will
    be applied to the total value of the shopping cart.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你将为你店铺创建一个优惠券系统。你的优惠券将在特定时间段内对顾客有效。优惠券在可兑换次数上没有限制，并将应用于购物车总价值。
- en: For this functionality, you will need to create a model to store the coupon
    code, a valid time frame, and the discount to apply.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这个功能，您需要创建一个模型来存储优惠券代码、有效时间范围和要应用的折扣。
- en: 'Create a new application inside the `myshop` project using the following command:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令在 `myshop` 项目中创建一个新的应用程序：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Edit the `settings.py` file of `myshop` and add the application to the `INSTALLED_APPS`
    setting, as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `myshop` 的 `settings.py` 文件，并将应用程序添加到 `INSTALLED_APPS` 设置中，如下所示：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The new application is now active in your Django project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 新的应用程序现在已在您的Django项目中生效。
- en: Building the coupon model
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建优惠券模型
- en: 'Let’s start by creating the `Coupon` model. Edit the `models.py` file of the
    `coupons` application and add the following code to it:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从创建 `Coupon` 模型开始。编辑 `coupons` 应用程序的 `models.py` 文件，并向其中添加以下代码：
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This is the model that you are going to use to store coupons. The `Coupon`
    model contains the following fields:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是您将要用来存储优惠券的模型。`Coupon` 模型包含以下字段：
- en: '`code`: The code that users have to enter in order to apply the coupon to their
    purchase.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`code`：用户必须输入以将优惠券应用到他们的购买中的代码。'
- en: '`valid_from`: The datetime value that indicates when the coupon becomes valid.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`valid_from`：表示优惠券何时生效的日期时间值。'
- en: '`valid_to`: The datetime value that indicates when the coupon becomes invalid.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`valid_to`：表示优惠券何时失效的日期时间值。'
- en: '`discount`: The discount rate to apply (this is a percentage, so it takes values
    from `0` to `100`). You use validators for this field to limit the minimum and
    maximum accepted values.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`discount`：要应用的折扣率（这是一个百分比，因此其值从 `0` 到 `100`）。您可以使用验证器来限制该字段的最低和最高接受值。'
- en: '`active`: A Boolean that indicates whether the coupon is active.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`active`：一个布尔值，表示优惠券是否激活。'
- en: 'Run the following command to generate the initial migration for the `coupons`
    application:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 运行以下命令为 `coupons` 应用程序生成初始迁移：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The output should include the following lines:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 输出应包括以下行：
- en: '[PRE4]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then, execute the next command to apply migrations:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，执行以下命令以应用迁移：
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You should see an output that includes the following line:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到包含以下行的输出：
- en: '[PRE6]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The migrations have now been applied to the database. Let’s add the `Coupon`
    model to the administration site. Edit the `admin.py` file of the `coupons` application
    and add the following code to it:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 迁移现在已应用到数据库。让我们将 `Coupon` 模型添加到管理站点。编辑 `coupons` 应用程序的 `admin.py` 文件，并向其中添加以下代码：
- en: '[PRE7]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The `Coupon` model is now registered on the administration site. Ensure that
    your local server is running with the following command:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`Coupon` 模型现在已在管理站点注册。请确保您的本地服务器正在以下命令下运行：'
- en: '[PRE8]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Open `http://127.0.0.1:8000/admin/coupons/coupon/add/` in your browser.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开 `http://127.0.0.1:8000/admin/coupons/coupon/add/`。
- en: 'You should see the following form:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下表单：
- en: '![](img/B21088_10_02.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_02.png)'
- en: 'Figure 10.2: The Add coupon form on the Django administration site'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2：Django管理站点上的添加优惠券表单
- en: 'Fill in the form to create a new coupon that is valid for the current date.
    Make sure that you check the **Active** checkbox, and click the **SAVE** button.
    *Figure 10.3* shows an example of creating a coupon:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 填写表单以创建一个适用于当前日期的新优惠券。确保您勾选了**激活**复选框，并点击**保存**按钮。*图10.3*展示了创建优惠券的示例：
- en: '![](img/B21088_10_03.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_03.png)'
- en: 'Figure 10.3: The Add coupon form with sample data'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3：带有示例数据的添加优惠券表单
- en: 'After creating the coupon, the coupon change list page on the administration
    site will look similar to *Figure 10.4*:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 创建优惠券后，管理站点上的优惠券更改列表页面将类似于*图10.4*：
- en: '![](img/B21088_10_04.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_04.png)'
- en: 'Figure 10.4: The coupon change list page on the Django administration site'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4：Django管理站点上的优惠券更改列表页面
- en: Next, we will implement the functionality to apply coupons to the shopping cart.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将实现将优惠券应用到购物车的功能。
- en: Applying a coupon to the shopping cart
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将优惠券应用到购物车
- en: 'You can store new coupons and make queries to retrieve existing coupons. Now
    you need a way for customers to apply coupons to their purchases. The functionality
    to apply a coupon would be as follows:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以存储新的优惠券并对现有优惠券进行查询。现在您需要一种让客户能够将优惠券应用到他们的购买中的方法。应用优惠券的功能如下：
- en: The user adds products to the shopping cart.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户将产品添加到购物车。
- en: The user can enter a coupon code in a form displayed on the shopping cart details
    page.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户可以在购物车详情页面上显示的表单中输入优惠券代码。
- en: When the user enters a coupon code and submits the form, you look for an existing
    coupon with the given code that is currently valid. You have to check that the
    coupon code matches the one entered by the user, that the `active` attribute is
    `True`, and that the current datetime is between the `valid_from` and `valid_to`
    values.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户输入优惠券代码并提交表单时，您将寻找具有给定代码且当前有效的现有优惠券。您必须检查优惠券代码是否与用户输入的一致，`active` 属性是否为 `True`，以及当前日期时间是否在
    `valid_from` 和 `valid_to` 值之间。
- en: If a coupon is found, you save it in the user’s session and display the cart,
    including the discount applied to it and the updated total amount.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果找到优惠券，您将其保存到用户的会话中，并显示包含折扣的购物车以及更新的总金额。
- en: When the user places an order, you save the coupon to the given order.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户下单时，您将优惠券保存到指定的订单中。
- en: 'Create a new file inside the `coupons` application directory and name it `forms.py`.
    Add the following code to it:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `coupons` 应用程序目录内创建一个新文件，命名为 `forms.py`。向其中添加以下代码：
- en: '[PRE9]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'This is the form that you are going to use for the user to enter a coupon code.
    Edit the `views.py` file inside the `coupons` application and add the following
    code to it:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 这是用户输入优惠券代码将使用的表单。编辑 `coupons` 应用程序内的 `views.py` 文件，并向其中添加以下代码：
- en: '[PRE10]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The `coupon_apply` view validates the coupon and stores it in the user’s session.
    You apply the `require_POST` decorator to this view to restrict it to `POST` requests.
    In the view, you perform the following tasks:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`coupon_apply` 视图验证优惠券并将其存储在用户的会话中。您将 `require_POST` 装饰器应用到这个视图中以限制它只接受 `POST`
    请求。在视图中，您执行以下任务：'
- en: You instantiate the `CouponApplyForm` form using the posted data and check that
    the form is valid.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用提交的数据实例化 `CouponApplyForm` 表单，并检查表单是否有效。
- en: If the form is valid, you get the `code` entered by the user from the form’s
    `cleaned_data` dictionary. You try to retrieve the `Coupon` object with the given
    code. You use the `iexact` field lookup to perform a case-insensitive exact match.
    The coupon has to be currently active (`active=True`) and valid for the current
    datetime. You use Django’s `timezone.now()` function to get the current timezone-aware
    datetime, and you compare it with the `valid_from` and `valid_to` fields by performing
    the `lte` (less than or equal to) and `gte` (greater than or equal to) field lookups,
    respectively.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果表单有效，您从表单的 `cleaned_data` 字典中获取用户输入的 `code`。您尝试检索具有给定代码的 `Coupon` 对象。您使用 `iexact`
    字段查找来执行不区分大小写的精确匹配。优惠券必须当前处于活动状态（`active=True`）且对当前日期时间有效。您使用 Django 的 `timezone.now()`
    函数来获取当前时区的日期时间，并通过执行 `lte`（小于等于）和 `gte`（大于等于）字段查找来分别与 `valid_from` 和 `valid_to`
    字段进行比较。
- en: You store the coupon ID in the user’s session.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将优惠券 ID 存储在用户的会话中。
- en: You redirect the user to the `cart_detail` URL to display the cart with the
    coupon applied.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将用户重定向到 `cart_detail` URL 以显示应用了优惠券的购物车。
- en: 'You need a URL pattern for the `coupon_apply` view. Create a new file inside
    the `coupons` application directory and name it `urls.py`. Add the following code
    to it:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要一个 `coupon_apply` 视图的 URL 模式。在 `coupons` 应用程序目录内创建一个新文件，命名为 `urls.py`。向其中添加以下代码：
- en: '[PRE11]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Then, edit the main `urls.py` of the `myshop` project and include the `coupons`
    URL patterns with the following line highlighted in bold:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，编辑 `myshop` 项目的主体 `urls.py` 并包含以下加粗的 `coupons` URL 模式：
- en: '[PRE12]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Remember to place this pattern before the `shop.urls` pattern.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 记得在 `shop.urls` 模式之前放置此模式。
- en: 'Now, edit the `cart.py` file of the `cart` application. Include the following
    import:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，编辑 `cart` 应用程序的 `cart.py` 文件。包含以下导入：
- en: '[PRE13]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Add the following code highlighted in bold to the end of the `__init__()` method
    of the `Cart` class to initialize the coupon from the current session:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 将以下加粗代码添加到 `Cart` 类的 `__init__()` 方法末尾以从当前会话初始化优惠券：
- en: '[PRE14]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'In this code, you try to get the `coupon_id` session key from the current session
    and store its value in the `Cart` object. Add the following methods highlighted
    in bold to the `Cart` object:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码中，您尝试从当前会话中获取 `coupon_id` 会话键并将其值存储在 `Cart` 对象中。向 `Cart` 对象添加以下加粗的方法：
- en: '[PRE15]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'These methods are as follows:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这些方法如下：
- en: '`coupon()`: You define this method as a `property`. If the cart contains a
    `coupon_id` attribute, the `Coupon` object with the given ID is returned.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`coupon()`: 您将此方法定义为 `property`。如果购物车包含 `coupon_id` 属性，则返回具有给定 ID 的 `Coupon`
    对象。'
- en: '`get_discount()`: If the cart contains a coupon, you retrieve its discount
    rate and return the amount to be deducted from the total amount of the cart.'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_discount()`: 如果购物车包含优惠券，您将检索其折扣率并返回从购物车总金额中扣除的金额。'
- en: '`get_total_price_after_discount()`: You return the total amount of the cart
    after deducting the amount returned by the `get_discount()` method.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_total_price_after_discount()`: 您返回扣除`get_discount()`方法返回的金额后的购物车总金额。'
- en: The `Cart` class is now prepared to handle a coupon applied to the current session
    and apply the corresponding discount.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`Cart`类现在已准备好处理当前会话中应用的优惠券并应用相应的折扣。'
- en: 'Let’s include the coupon system in the cart’s detail view. Edit the `views.py`
    file of the `cart` application and add the following import to the top of the
    file:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将优惠券系统包含到购物车详情视图中。编辑`cart`应用的`views.py`文件，并在文件顶部添加以下导入：
- en: '[PRE16]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Further down, edit the `cart_detail` view and add the new form to it, as follows:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面，编辑`cart_detail`视图并按照以下方式添加新表单：
- en: '[PRE17]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Edit the `cart/detail.html` template of the `cart` application and locate the
    following lines:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`cart`应用的`cart/detail.html`模板，并定位到以下行：
- en: '[PRE18]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Replace them with the following code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下代码替换它们：
- en: '[PRE19]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: This is the code for displaying an optional coupon and its discount rate. If
    the cart contains a coupon, you display the first row, including the total amount
    of the cart as the subtotal. Then, you use a second row to display the current
    coupon applied to the cart. Finally, you display the total price, including any
    discount, by calling the `get_total_price_after_discount()` method of the `cart`
    object.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这是显示可选优惠券及其折扣率的代码。如果购物车包含优惠券，您将显示第一行，包括购物车的总金额作为小计。然后，您使用第二行来显示当前应用于购物车的优惠券。最后，通过调用`cart`对象的`get_total_price_after_discount()`方法来显示包括任何折扣在内的总价。
- en: 'In the same file, include the following code after the `</table>` HTML tag:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在同一文件中，在`</table>` HTML标签之后包含以下代码：
- en: '[PRE20]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: This will display the form to enter a coupon code and apply it to the current
    cart.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 这将显示输入优惠券代码并将其应用于当前购物车的表单。
- en: 'Open `http://127.0.0.1:8000/` in your browser and add a product to the cart.
    You will see that the shopping cart page now includes a form to apply a coupon:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开`http://127.0.0.1:8000/`并添加一个产品到购物车。您会看到购物车页面现在包括一个应用优惠券的表单：
- en: '![](img/B21088_10_05.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_05.png)'
- en: 'Figure 10.5: The cart detail page, including a form to apply a coupon'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5：包含应用优惠券表单的购物车详情页面
- en: 'Image of *Tea powder*: Photo by Phuong Nguyen on Unsplash'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*茶叶粉末*的图片：由Phuong Nguyen在Unsplash上拍摄'
- en: 'In the **Code** field, enter the coupon code you created using the administration
    site:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 在**代码**字段中，输入您使用管理网站创建的优惠券代码：
- en: '![](img/B21088_10_06.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_06.png)'
- en: 'Figure 10.6: The cart detail page, including a coupon code on the form'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.6：包含优惠券代码的表单的购物车详情页面
- en: 'Click the **Apply** button. The coupon will be applied, and the cart will display
    the coupon discount as follows:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**应用**按钮。优惠券将被应用，购物车将显示如下优惠券折扣：
- en: '![](img/B21088_10_07.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_07.png)'
- en: 'Figure 10.7: The cart detail page, including the coupon applied'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.7：包含已应用优惠券的购物车详情页面
- en: 'Let’s add the coupon to the next step of the purchase process. Edit the `orders/order/create.html`
    template of the `orders` application and locate the following lines:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将优惠券添加到购买过程的下一步。编辑`orders`应用的`orders/order/create.html`模板，并定位到以下行：
- en: '[PRE21]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Replace them with the following code:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下代码替换它们：
- en: '[PRE22]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'The order summary should now include the coupon applied, if there is one. Now
    find the following line:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 订单摘要现在应包括已应用的优惠券（如果有的话）。现在找到以下行：
- en: '[PRE23]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Replace it with the following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 用以下代码替换：
- en: '[PRE24]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: By doing this, the total price will also be calculated by applying the discount
    of the coupon.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，总价也将通过应用优惠券的折扣来计算。
- en: 'Open `http://127.0.0.1:8000/orders/create/` in your browser. You should see
    that the order summary includes the applied coupon, as follows:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开`http://127.0.0.1:8000/orders/create/`。您应该看到订单摘要包括已应用的优惠券，如下所示：
- en: '![](img/B21088_10_08.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_08.png)'
- en: 'Figure 10.8: The order summary, including the coupon applied to the cart'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.8：包含应用至购物车的优惠券的订单摘要
- en: Users can now apply coupons to their shopping carts. However, you still need
    to store coupon information in the order that it is created when users check out
    the cart.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 用户现在可以将优惠券应用于他们的购物车。然而，您仍然需要在用户结账时创建优惠券信息的订单中存储优惠券信息。
- en: Applying coupons to orders
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用优惠券到订单
- en: You are going to store the coupon that was applied to each order. First, you
    need to modify the `Order` model to store the related `Coupon` object, if there
    is one.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 您将存储应用于每个订单的优惠券。首先，您需要修改 `Order` 模型以存储相关的 `Coupon` 对象（如果有的话）。
- en: 'Edit the `models.py` file of the `orders` application and add the following
    imports to it:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `orders` 应用的 `models.py` 文件，并向其中添加以下导入：
- en: '[PRE25]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Then, add the following fields to the `Order` model:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将以下字段添加到 `Order` 模型中：
- en: '[PRE26]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: These fields allow you to store an optional coupon for the order and the discount
    percentage applied with the coupon. The discount is stored in the related `Coupon`
    object, but you can include it in the `Order` model to preserve it if the coupon
    has been modified or deleted. You set `on_delete` to `models.SET_NULL` so that
    if the coupon gets deleted, the `coupon` field is set to `Null`, but the discount
    is preserved.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这些字段允许您存储订单的可选优惠券及其应用的折扣百分比。折扣存储在相关的 `Coupon` 对象中，但您可以将它包含在 `Order` 模型中以保留它，以防优惠券被修改或删除。您将
    `on_delete` 设置为 `models.SET_NULL`，这样如果优惠券被删除，`coupon` 字段将被设置为 `Null`，但折扣将被保留。
- en: 'You need to create a migration to include the new fields of the `Order` model.
    Run the following command from the command line:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要创建一个迁移以包含 `Order` 模型的新的字段。从命令行运行以下命令：
- en: '[PRE27]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You should see an output like the following:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下输出：
- en: '[PRE28]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Apply the new migration with the following command:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令应用新的迁移：
- en: '[PRE29]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'You should see the following confirmation indicating that the new migration
    has been applied:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该看到以下确认信息，表明新迁移已被应用：
- en: '[PRE30]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: The `Order` model field changes are now synced with the database.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`Order` 模型字段更改现在已与数据库同步。'
- en: 'Edit the `models.py` file, and add two new methods, `get_total_cost_before_discount()`
    and `get_discount()`, to the `Order` model like this. The new code is highlighted
    in bold:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `models.py` 文件，并为 `Order` 模型添加两个新方法，`get_total_cost_before_discount()` 和
    `get_discount()`，如下所示。新代码加粗显示：
- en: '[PRE31]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'Then, edit the `get_total_cost()` method of the `Order` model as follows. The
    new code is highlighted in bold:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按照以下方式编辑 `Order` 模型的 `get_total_cost()` 方法。新代码加粗显示：
- en: '[PRE32]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: The `get_total_cost()` method of the `Order` model will now take into account
    the discount applied, if there is one.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '`Order` 模型的 `get_total_cost()` 方法现在将考虑应用的折扣，如果有的话。'
- en: 'Edit the `views.py` file of the `orders` application and modify the `order_create`
    view to save the related coupon and its discount when creating a new order. Add
    the following code highlighted in bold to the `order_create` view:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `orders` 应用的 `views.py` 文件，并修改 `order_create` 视图以在创建新订单时保存相关的优惠券及其折扣。将以下加粗代码添加到
    `order_create` 视图中：
- en: '[PRE33]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: In the new code, you create an `Order` object using the `save()` method of the
    `OrderCreateForm` form. You avoid saving it to the database yet by using `commit=False`.
    If the cart contains a coupon, you store the related coupon and the discount that
    was applied. Then, you save the `order` object to the database.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在新代码中，您使用 `OrderCreateForm` 表单的 `save()` 方法创建一个 `Order` 对象。您通过使用 `commit=False`
    来避免将其保存到数据库中。如果购物车包含优惠券，您将存储相关的优惠券及其应用的折扣。然后，您将 `order` 对象保存到数据库中。
- en: 'Edit the `payment/process.html` template of the `payment` application and locate
    the following lines:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑 `payment/process.html` 模板，并定位以下行：
- en: '[PRE34]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'Replace them with the following code. New lines are highlighted in bold:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 将它们替换为以下代码。新行加粗显示：
- en: '[PRE35]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: We have updated the order summary before payment.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在付款前已更新订单摘要。
- en: 'Make sure that the development server is running with the following command:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 确保使用以下命令开发服务器正在运行：
- en: '[PRE36]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Make sure Docker is running, and execute the following command in another shell
    to start the RabbitMQ server with Docker:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 确保Docker正在运行，并在另一个shell中执行以下命令以使用Docker启动RabbitMQ服务器：
- en: '[PRE37]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'Open another shell and start the Celery worker from your project directory
    with the following command:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在另一个shell中，使用以下命令从您的项目目录启动Celery工作进程：
- en: '[PRE38]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'Open an additional shell and execute the following command to forward Stripe
    events to your local webhook URL:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 打开另一个shell并执行以下命令以将Stripe事件转发到您的本地webhook URL：
- en: '[PRE39]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'Open `http://127.0.0.1:8000/` in your browser and create an order using the
    coupon you created. After validating the items in the shopping cart, on the **Order
    summary** page, you will see the coupon applied to the order:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开 `http://127.0.0.1:8000/` 并使用您创建的优惠券创建一个订单。在验证购物车中的项目后，在 **订单摘要** 页面上，您将看到应用于订单的优惠券：
- en: '![](img/B21088_10_09.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_09.png)'
- en: 'Figure 10.9: The Order summary page, including the coupon applied to the order'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.9：订单摘要页面，包括应用于订单的折扣券
- en: 'If you click on **Pay now**, you will see that Stripe is not aware of the discount
    applied, as displayed in *Figure 10.10*:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您点击 **立即支付**，您将看到 Stripe 并未意识到应用的折扣，如图 *图 10.10* 所示：
- en: '![](img/B21088_10_10.png)'
  id: totrans-167
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_10.png)'
- en: 'Figure 10.10: The item details of the Stripe Checkout page, including no discount
    coupon'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.10：Stripe Checkout 页面的商品详情，包括无折扣券
- en: Stripe shows the full amount to be paid without any deduction. This is because
    we are not passing on the discount to Stripe. Remember that in the `payment_process`
    view, we pass the order items as `line_items` to Stripe, including the cost and
    quantity of each order item.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: Stripe 显示需要支付的全额，没有任何扣除。这是因为我们没有将折扣传递给 Stripe。请记住，在 `payment_process` 视图中，我们将订单项作为
    `line_items` 传递给 Stripe，包括每个订单项的成本和数量。
- en: Creating coupons for Stripe Checkout
  id: totrans-170
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为 Stripe Checkout 创建折扣券
- en: Stripe allows you to define discount coupons and link them to one-time payments.
    You can find more information about creating discounts for Stripe Checkout at
    [https://stripe.com/docs/payments/checkout/discounts](https://stripe.com/docs/payments/checkout/discounts).
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: Stripe 允许您定义折扣券并将它们链接到一次性付款。您可以在 [https://stripe.com/docs/payments/checkout/discounts](https://stripe.com/docs/payments/checkout/discounts)
    找到有关为 Stripe Checkout 创建折扣的更多信息。
- en: 'Let’s edit the `payment_process` view to create a coupon for Stripe Checkout.
    Edit the `views.py` file of the `payment` application and add the following code
    highlighted in bold to the `payment_process` view:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编辑 `payment_process` 视图以创建 Stripe Checkout 的折扣券。编辑 `payment` 应用程序的 `views.py`
    文件，并将以下加粗代码添加到 `payment_process` 视图中：
- en: '[PRE40]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'In the new code, you check if the order has a related coupon. In that case,
    you use the Stripe SDK to create a Stripe coupon using `stripe.Coupon.create()`.
    You use the following attributes for the coupon:'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 在新代码中，您检查订单是否有相关的折扣券。如果是这样，您使用 Stripe SDK 通过 `stripe.Coupon.create()` 创建 Stripe
    折扣券。您使用以下属性为折扣券：
- en: '`name`: The `code` of the coupon related to the `order` object is used.'
  id: totrans-175
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`: 使用与 `order` 对象相关的折扣券的 `code`。'
- en: '`percent_off`: The `discount` of the `order` object is issued.'
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percent_off`: 发行的 `order` 对象的 `discount`。'
- en: '`duration`: The value `once` is used. This indicates to Stripe that this is
    a coupon for a one-time payment.'
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`duration`: 使用值 `once`。这表示向 Stripe 指明这是一个一次性付款的折扣券。'
- en: After creating the coupon, its `id` is added to the `session_data` dictionary
    used to create the Stripe Checkout session. This links the coupon to the checkout
    session.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 创建折扣券后，其 `id` 被添加到用于创建 Stripe Checkout 会话的 `session_data` 字典中。这使折扣券与结账会话相关联。
- en: 'Open `http://127.0.0.1:8000/` in your browser and complete a purchase using
    the coupon you created. When redirected to the Stripe Checkout page, you will
    see the coupon applied:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的浏览器中打开 `http://127.0.0.1:8000/` 并使用您创建的折扣券完成购买。当重定向到 Stripe Checkout 页面时，您将看到应用的折扣券：
- en: '![](img/B21088_10_11.png)'
  id: totrans-180
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_11.png)'
- en: 'Figure 10.11: The item details of the Stripe Checkout page, including a discount
    coupon named SUMMER'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.11：Stripe Checkout 页面的商品详情，包括名为 SUMMER 的折扣券
- en: The Stripe Checkout page now includes the order coupon, and the total amount
    to pay now includes the amount deducted using the coupon.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: Stripe Checkout 页面现在包括订单折扣，应付总额现在包括使用折扣扣除的金额。
- en: 'Complete the purchase and then open `http://127.0.0.1:8000/admin/orders/order/`
    in your browser. Click on the `order` object for which the coupon was used. The
    edit form will display the discount applied, as shown in *Figure 10.12*:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 完成购买后，在您的浏览器中打开 `http://127.0.0.1:8000/admin/orders/order/`。点击使用折扣券的 `order`
    对象。编辑表单将显示应用的折扣，如图 *图 10.12* 所示：
- en: '![](img/B21088_10_12.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_12.png)'
- en: 'Figure 10.12: The order edit form, including the coupon and discount applied'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.12：订单编辑表单，包括应用的折扣券和折扣
- en: You have successfully stored coupons for orders and processed payments with
    discounts. Next, you will add coupons to the order detail view of the administration
    site and to PDF invoices for orders.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功存储订单折扣并处理了带折扣的支付。接下来，您将向管理站点的订单详情视图和订单的 PDF 发票添加折扣券。
- en: Adding coupons to orders on the administration site and to PDF invoices
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将折扣券添加到管理站点上的订单和 PDF 发票
- en: 'Let’s add the coupon to the order detail page on the administration site. Edit
    the `admin/orders/order/detail.html` template of the `orders` application and
    add the following code highlighted in bold:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在管理站点的订单详情页面上添加折扣券。编辑 `orders` 应用的 `admin/orders/order/detail.html` 模板，并添加以下加粗代码：
- en: '[PRE41]'
  id: totrans-189
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: 'Access `http://127.0.0.1:8000/admin/orders/order/` with your browser, and click
    on the **View** link of the latest order. The **Items bought** table will now
    include the coupon used, as shown in *Figure 10.13*:'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 使用浏览器访问`http://127.0.0.1:8000/admin/orders/order/`，并点击最新订单的**查看**链接。现在，**购买的商品**表将包括使用的优惠券，如图*图10.13*所示：
- en: '![](img/B21088_10_13.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_13.png)'
- en: 'Figure 10.13: The product detail page on the administration site, including
    the coupon used'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.13：管理网站上包含使用的优惠券的产品详情页
- en: 'Now, let’s modify the order invoice template to include the coupon used for
    the order. Edit the `orders/order/pdf.html` template of the `orders` application
    and add the following code highlighted in bold:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们修改订单发票模板以包含用于订单的优惠券。编辑`orders/order/pdf.html`模板的`orders`应用程序，并添加以下加粗显示的代码：
- en: '[PRE42]'
  id: totrans-194
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'Access `http://127.0.0.1:8000/admin/orders/order/` with your browser, and click
    on the **PDF** link of the latest order. The **Items bought** table will now include
    the coupon used, as shown in *Figure 10.14*:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 使用浏览器访问`http://127.0.0.1:8000/admin/orders/order/`，并点击最新订单的**PDF**链接。现在，**购买的商品**表将包括使用的优惠券，如图*图10.14*所示：
- en: '![](img/B21088_10_14.png)'
  id: totrans-196
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_14.png)'
- en: 'Figure 10.14: The PDF order invoice, including the coupon used'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.14：包含使用的优惠券的PDF订单发票
- en: You successfully added a coupon system to your shop. Next, you are going to
    build a product recommendation engine.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 您已成功将优惠券系统添加到您的商店。接下来，您将构建一个产品推荐引擎。
- en: Building a recommendation engine
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建推荐引擎
- en: A recommendation engine is a system that predicts the preference or rating that
    a user would give to an item. The system selects relevant items for a user based
    on their behavior and the knowledge it has about them. Nowadays, recommendation
    systems are used in many online services. They help users by selecting the stuff
    they might be interested in from the vast amount of available data that is irrelevant
    to them. Offering good recommendations enhances user engagement. E-commerce sites
    also benefit from offering relevant product recommendations by increasing their
    average revenue per user.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐引擎是一个预测用户会对某项物品给予的偏好或评分的系统。系统根据用户的行为和对其的了解选择与用户相关的物品。如今，推荐系统被广泛应用于许多在线服务中。它们通过从大量对用户无关的数据中筛选出他们可能感兴趣的内容来帮助用户。提供良好的推荐可以增强用户参与度。电子商务网站通过提高每用户的平均收入来从提供相关产品推荐中受益。
- en: 'You are going to create a simple yet powerful recommendation engine that suggests
    products that are usually bought together. You will suggest products based on
    historical sales, thus identifying products that are usually bought together.
    You are going to suggest complementary products in two different scenarios:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 您将创建一个简单而强大的推荐引擎，建议通常一起购买的产品。您将根据历史销售数据来建议产品，从而识别通常一起购买的产品。您将在两种不同的场景中建议互补产品：
- en: '**Product detail page**: You will display a list of products that are usually
    bought with the given product. This will be displayed as *users who bought this
    also bought X, Y, and Z*. You need a data structure that allows you to store the
    number of times each product has been bought together with the product being displayed.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品详情页**：您将显示通常与给定产品一起购买的产品列表。这将以*购买此产品的用户还购买了X、Y和Z*的形式显示。您需要一个数据结构，以便存储每个产品与显示的产品一起购买次数。'
- en: '**Cart detail page**: Based on the products that users add to the cart, you
    are going to suggest products that are usually bought together with these ones.
    In this case, the score you calculate to obtain related products has to be aggregated.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**购物车详情页**：基于用户添加到购物车的产品，您将建议通常与这些产品一起购买的产品。在这种情况下，您计算以获得相关产品的分数需要汇总。'
- en: You are going to use Redis to store products that are usually purchased together.
    Remember that you already used Redis in *Chapter 7*, *Tracking User Actions*.
    If you haven’t installed Redis yet, you can find installation instructions in
    that chapter.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 您将使用Redis来存储通常一起购买的产品。请记住，您已经在*第7章*，*跟踪用户行为*中使用了Redis。如果您还没有安装Redis，可以在该章节中找到安装说明。
- en: Recommending products based on previous purchases
  id: totrans-205
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于以往购买推荐产品
- en: We will recommend products to users based on items that are frequently bought
    together. For that, we are going to use Redis sorted sets. Remember that you used
    sorted sets in *Chapter 7*, *Tracking User Actions*, to create a ranking of the
    most viewed images on your site.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将根据经常一起购买的项目向用户推荐产品。为此，我们将使用 Redis 排序集。记住，你在 *第 7 章*，*跟踪用户行为* 中使用了排序集来创建网站上最常查看的图像的排名。
- en: '*Figure 10.15* shows a representation of a sorted set, where set members are
    strings associated with a score:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.15* 展示了一个排序集的表示，其中集合成员是与分数关联的字符串：'
- en: '![](img/B21088_10_15.png)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_15.png)'
- en: 'Figure 10.15: Redis sorted set representation'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.15：Redis 排序集表示
- en: We are going to store a key in Redis for each product bought on the site. The
    product key will contain a Redis sorted set with scores. Every time a new purchase
    is completed, we will increment the score by 1 for each product bought together.
    The sorted set will allow you to give scores to products that are bought together.
    We will use the number of times the product is bought with another product as
    the score for that item.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将存储一个键在 Redis 中，用于该网站上购买的每个产品。产品键将包含一个带有分数的 Redis 排序集。每次完成新的购买后，我们将为一起购买的产品增加分数
    1。排序集将允许你为一起购买的产品分配分数。我们将使用产品与另一个产品一起购买次数作为该项目的分数。
- en: 'Remember to install `redis-py` in your environment using the following command:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，使用以下命令在你的环境中安装 `redis-py`：
- en: '[PRE43]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: 'Edit the `settings.py` file of your project and add the following settings
    to it:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑你的项目中的 `settings.py` 文件，并向其中添加以下设置：
- en: '[PRE44]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: 'These are the settings required to establish a connection with the Redis server.
    Create a new file inside the `shop` application directory and name it `recommender.py`.
    Add the following code to it:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是建立与 Redis 服务器连接所需的设置。在 `shop` 应用程序目录内创建一个新文件，并将其命名为 `recommender.py`。向其中添加以下代码：
- en: '[PRE45]'
  id: totrans-216
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: This is the `Recommender` class, which will allow you to store product purchases
    and retrieve product suggestions for a given product or products.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 这是 `Recommender` 类，它将允许你存储产品购买并检索给定产品或产品的产品建议。
- en: The `get_product_key()` method receives the ID of a `Product` object and builds
    the Redis key for the sorted set where related products are stored, which looks
    like `product:[id]:purchased_with`.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_product_key()` 方法接收一个 `Product` 对象的 ID，并构建存储相关产品的 Redis 排序集的键，其格式如下：`product:[id]:purchased_with`。'
- en: The `products_bought()` method receives a list of `Product` objects that have
    been bought together (that is, belong to the same order).
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`products_bought()` 方法接收一个列表，其中包含一起购买（即属于同一订单）的 `Product` 对象。'
- en: 'In this method, you perform the following tasks:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方法中，你执行以下任务：
- en: You get the product IDs for the given `Product` objects.
  id: totrans-221
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你获取给定 `Product` 对象的产品 ID。
- en: You iterate over the product IDs. For each ID, you iterate again over the product
    IDs and skip the same product so that you get the products that are bought together
    with each product.
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你遍历产品 ID。对于每个 ID，你再次遍历产品 ID 并跳过相同的 ID，以便你得到与每个产品一起购买的产品。
- en: You get the Redis product key for each product bought using the `get_product_id()`
    method. For a product with an ID of `33`, this method returns the key `product:33:purchased_with`.
    This is the key for the sorted set that contains the product IDs of products that
    were bought together with this one.
  id: totrans-223
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `get_product_id()` 方法获取每个购买产品的 Redis 产品键。对于 ID 为 `33` 的产品，此方法返回键 `product:33:purchased_with`。这是包含与该产品一起购买的产品
    ID 的排序集的键。
- en: You increment the score of each product ID contained in the sorted set by 1
    using the Redis `ZINCRBY` operation. The score represents the number of times
    another product has been bought together with the given product.
  id: totrans-224
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Redis 的 `ZINCRBY` 操作，通过增量增加排序集中每个产品 ID 的分数 1。分数表示另一个产品与给定产品一起购买了多少次。
- en: '*Figure 10.16* shows an example of five different products with IDs 1 to 5
    and five purchase orders of different combinations of products:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 10.16* 展示了五个不同产品（ID 从 1 到 5）和五种不同产品组合的购买订单的示例：'
- en: '![](img/B21088_10_16.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_16.png)'
- en: 'Figure 10.16: Five products with respective IDs and purchase order combinations'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.16：具有相应 ID 和购买订单组合的五个产品
- en: In the figure, you can see a sorted set created in Redis for each product, with
    the key `product:<id>:purchased_with`, where `<id>` is the product’s unique identifier.
    The sorted set members are the IDs of the products that have been purchased alongside
    the principal product. The score for each member reflects the cumulative count
    of joint purchases. The figure shows the `ZINCRBY` Redis operation to increment
    by 1 the score of products purchased together in one order.
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在图中，您可以看到为每个产品在 Redis 中创建的有序集合，键为 `product:<id>:purchased_with`，其中 `<id>` 是产品的唯一标识符。有序集合的成员是与主要产品一起购买的产品
    ID。每个成员的分数反映了联合购买的总数。图显示了 `ZINCRBY` Redis 操作，用于将一起购买的产品分数增加 1。
- en: 'You now have a method to store and score the products that were bought together.
    Next, you need a method to retrieve the products that were bought together for
    a list of given products. Add the following `suggest_products_for()` method to
    the `Recommender` class:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您有一个存储和评分一起购买的产品的方法。接下来，您需要一个方法来检索给定产品列表中一起购买的产品。将以下 `suggest_products_for()`
    方法添加到 `Recommender` 类中：
- en: '[PRE46]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: 'The `suggest_products_for()` method receives the following parameters:'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`suggest_products_for()` 方法接收以下参数：'
- en: '`products`: This is a list of `Product` objects to get recommendations for.
    It can contain one or more products.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`products`：这是一个要获取推荐的 `Product` 对象列表。它可以包含一个或多个产品。'
- en: '`max_results`: This is an integer that represents the maximum number of recommendations
    to return.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_results`：这是一个表示要返回的最大推荐数量的整数。'
- en: 'In this method, you perform the following actions:'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 在此方法中，您执行以下操作：
- en: You get the product IDs for the given `Product` objects.
  id: totrans-235
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以获取给定 `Product` 对象的产品 ID。
- en: If only one product is given, you retrieve the ID of the products that were
    bought together with the given product, ordered by the total number of times that
    they were bought together. To do so, you use Redis’ `ZRANGE` command. You limit
    the number of results to the number specified in the `max_results` attribute (`6`
    by default). You can read more about the `ZRANGE` command at [https://redis.io/commands/zrange/](https://redis.io/commands/zrange/).
  id: totrans-236
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果只提供了一个产品，您将检索与给定产品一起购买的产品 ID，按它们一起购买的总次数排序。为此，您使用 Redis 的 `ZRANGE` 命令。您将结果数量限制在
    `max_results` 属性指定的数量（默认为 `6`）。您可以在 [https://redis.io/commands/zrange/](https://redis.io/commands/zrange/)
    了解更多关于 `ZRANGE` 命令的信息。
- en: If more than one product is given, you generate a temporary Redis key built
    with the IDs of the products.
  id: totrans-237
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果提供了多个产品，您将使用产品的 ID 生成一个临时 Redis 键。
- en: Combine and sum all scores for the items contained in the sorted set of each
    of the given products. This is done using the Redis `ZUNIONSTORE` command. The
    `ZUNIONSTORE` command performs a union of the sorted sets with the given keys
    and stores the aggregated sum of scores of the elements in a new Redis key. You
    can read more about this command at [https://redis.io/commands/zunionstore/](https://redis.io/commands/zunionstore/).
    You save the aggregated scores in the temporary key.
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 Redis `ZUNIONSTORE` 命令合并给定产品中每个有序集合包含的项目分数，并求和。`ZUNIONSTORE` 命令对给定键的有序集合执行并集操作，并将元素分数的聚合总和存储在一个新的
    Redis 键中。您可以在 [https://redis.io/commands/zunionstore/](https://redis.io/commands/zunionstore/)
    了解更多关于此命令的信息。您将聚合分数保存到临时键中。
- en: Since you are aggregating scores, you might obtain the same products you are
    getting recommendations for. You remove them from the generated sorted set using
    the `ZREM` command. You can read more about the `ZREM` command at [https://redis.io/commands/zrem/](https://redis.io/commands/zrem/).
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于您正在聚合分数，您可能会获得您正在获取推荐的产品。您可以使用 `ZREM` 命令从生成的有序集合中删除它们。您可以在 [https://redis.io/commands/zrem/](https://redis.io/commands/zrem/)
    了解更多关于 `ZREM` 命令的信息。
- en: You retrieve the IDs of the products from the temporary key, ordered by their
    scores using the `ZRANGE` command. You limit the number of results to the number
    specified in the `max_results` attribute.
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您使用 `ZRANGE` 命令从临时键中检索产品 ID，并按它们的分数排序。您将结果数量限制在 `max_results` 属性指定的数量。
- en: Then, you remove the temporary key using the `redis-py delete()` method that
    executes the Redis `DEL` command. You can read more about the `DEL` command at
    [https://redis.io/commands/del/](https://redis.io/commands/del/).
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，您使用执行 Redis `DEL` 命令的 `redis-py delete()` 方法删除临时键。您可以在 [https://redis.io/commands/del/](https://redis.io/commands/del/)
    了解更多关于 `DEL` 命令的信息。
- en: Finally, you get the `Product` objects with the given IDs, and you order the
    products in the same order as the sorted set members.
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你获取具有给定ID的 `Product` 对象，并按排序集合成员的顺序排列产品。
- en: '*Figure 10.17* shows an example of a session where two products have been added
    to the shopping cart and the Redis operations performed to obtain related product
    recommendations:'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10.17* 展示了一个示例会话，其中已将两个产品添加到购物车，并执行了Redis操作以获取相关产品推荐：'
- en: '![](img/B21088_10_17.png)'
  id: totrans-244
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21088_10_17.png)'
- en: 'Figure 10.17: Product recommendation system'
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.17：产品推荐系统
- en: 'In the figure, you can see the four steps to generate product recommendations
    for the items in the cart:'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在图中，你可以看到生成购物车中项目产品推荐的四个步骤：
- en: The `ZUNIONSTORE` Redis command is used to aggregate the scores of products
    purchased frequently with the products in the shopping cart. The resulting sorted
    set of this operation is stored in a new Redis key named after the IDs of the
    products in the shopping cart, `tmp_34` for IDs `3` and `4`.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`ZUNIONSTORE` Redis命令用于聚合经常与购物车中的产品一起购买的产品评分。此操作的排序集合存储在以购物车产品ID命名的新Redis键中，对于ID
    `3` 和 `4`，键名为 `tmp_34`。'
- en: The `ZREM` command is used to remove the products being purchased from the sorted
    set, to avoid recommending products that are already in the shopping cart.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ZREM` 命令从排序集中删除正在购买的产品，以避免推荐已经在购物车中的产品。
- en: The `ZRANGE` command is used to return the `tmp_34` sorted set members ordered
    by score.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用 `ZRANGE` 命令按分数返回 `tmp_34` 排序集合成员。
- en: Finally, the `DEL` command is used to delete the Redis key `tmp_34`.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，使用 `DEL` 命令删除Redis键 `tmp_34`。
- en: 'For practical purposes, let’s also add a method to clear the recommendations.
    Add the following method to the `Recommender` class:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实际应用，我们还要添加一个清除推荐的方法。将以下方法添加到 `Recommender` 类中：
- en: '[PRE47]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Let’s try the recommendation engine. Make sure you include several `Product`
    objects in the database and initialize the Redis Docker container using the following
    command:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试推荐引擎。确保你在数据库中包含几个 `Product` 对象，并使用以下命令初始化Redis Docker容器：
- en: '[PRE48]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Open another shell and run the following command to open the Python shell:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 打开另一个shell并运行以下命令以打开Python shell：
- en: '[PRE49]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Make sure that you have at least four different products in your database.
    Retrieve four different products by their names:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你的数据库中至少有四种不同的产品。通过名称检索四种不同的产品：
- en: '[PRE50]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Then, add some test purchases to the recommendation engine:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，向推荐引擎添加一些测试购买：
- en: '[PRE51]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'You have stored the following scores:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 你已存储以下评分：
- en: '[PRE52]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: This is a representation of products that have been bought together with each
    of the products, including how many times they have been bought together.
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: 这表示与每个产品一起购买的产品，包括它们一起购买了多少次。
- en: 'Let’s retrieve product recommendations for a single product:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们检索单个产品的产品推荐：
- en: '[PRE53]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: 'You can see that the order for recommended products is based on their score.
    Let’s get recommendations for multiple products with aggregated scores:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到推荐产品的顺序是基于它们的评分。让我们获取具有聚合评分的多个产品的推荐：
- en: '[PRE54]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: You can see that the order of the suggested products matches the aggregated
    scores. For example, products suggested for `black_tea` and `red_tea` are `tea_powder`
    (`2+1`) and `green_tea` (`1+1`).
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到建议产品的顺序与聚合评分相匹配。例如，为 `black_tea` 和 `red_tea` 建议的产品是 `tea_powder` (`2+1`)
    和 `green_tea` (`1+1`)。
- en: You have verified that your recommendation algorithm works as expected.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 你已验证你的推荐算法按预期工作。
- en: 'Let’s store the products that are bought together every time a payment is confirmed.
    Edit the `webhooks.py` file of the `payment` application and add the following
    code highlighted in bold:'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们存储每次支付确认时一起购买的产品。编辑 `payment` 应用程序的 `webhooks.py` 文件，并添加以下加粗代码：
- en: '[PRE55]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: In the new code, when a new order payment is confirmed, you retrieve the `Product`
    objects associated with the order items. Then, you create an instance of the `Recommender`
    class and call the `products_bought()` method to store the products bought together
    in Redis.
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 在新代码中，当确认新的订单支付时，你检索与订单项目关联的 `Product` 对象。然后，你创建 `Recommender` 类的实例并调用 `products_bought()`
    方法将一起购买的产品存储在Redis中。
- en: You are now storing the related products that are bought together when orders
    are paid. Let’s now display recommendations for products on your site.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在存储了在订单支付时一起购买的相关产品。现在让我们在你的网站上显示产品推荐。
- en: 'Edit the `views.py` file of the `shop` application. Add the functionality to
    retrieve a maximum of four recommended products into the `product_detail` view,
    as follows:'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`shop`应用的`views.py`文件，添加功能以在`product_detail`视图中检索最多四个推荐产品，如下所示：
- en: '[PRE56]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'Edit the `shop/product/detail.html` template of the `shop` application and
    add the following code after `{{ product.description|linebreaks }}`:'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`shop`应用的`shop/product/detail.html`模板，并在`{{ product.description|linebreaks
    }}`之后添加以下代码：
- en: '[PRE57]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: 'Run the development server, and open `http://127.0.0.1:8000/` in your browser.
    Click on any product to view its details. You should see that recommended products
    are displayed below the product, as shown in *Figure 10.18*:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 运行开发服务器，并在浏览器中打开`http://127.0.0.1:8000/`。点击任何产品查看其详细信息。你应该看到推荐产品显示在产品下方，如图*图10.18*所示：
- en: '![](img/B21088_10_18.png)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_18.png)'
- en: 'Figure 10.18: The product detail page, including recommended products'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.18：产品详情页面，包括推荐产品
- en: 'Images in this chapter:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的图片：
- en: '*Green tea*: Photo by Jia Ye on Unsplash'
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*绿茶*：由Jia Ye在Unsplash上的照片'
- en: '*Red tea*: Photo by Manki Kim on Unsplash'
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*红茶*：由Manki Kim在Unsplash上的照片'
- en: '*Tea powder*: Photo by Phuong Nguyen on Unsplash'
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*茶粉*：由Phuong Nguyen在Unsplash上的照片'
- en: You are also going to include product recommendations in the cart. The recommendations
    will be based on the products that the user has added to the cart.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 你还将包括购物车中的产品推荐。这些推荐将基于用户添加到购物车中的产品。
- en: 'Edit `views.py` inside the `cart` application, import the `Recommender` class,
    and edit the `cart_detail` view to make it look like the following:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`cart`应用内的`views.py`，导入`Recommender`类，并编辑`cart_detail`视图，使其看起来如下：
- en: '[PRE58]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'Edit the `cart/detail.html` template of the `cart` application and add the
    following code just after the `</table>` HTML tag:'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑`cart`应用的`cart/detail.html`模板，并在`</table>`HTML标签之后添加以下代码：
- en: '[PRE59]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: 'Open `http://127.0.0.1:8000/en/` in your browser and add a couple of products
    to your cart. When you navigate to `http://127.0.0.1:8000/en/cart/`, you should
    see the aggregated product recommendations for the items in the cart, as follows:'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在浏览器中打开`http://127.0.0.1:8000/en/`，并添加几个产品到购物车。当你导航到`http://127.0.0.1:8000/en/cart/`时，你应该看到购物车中商品的聚合推荐，如下所示：
- en: '![](img/B21088_10_19.png)'
  id: totrans-291
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B21088_10_19.png)'
- en: 'Figure 10.19: The shopping cart details page, including recommended products'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.19：购物车详情页面，包括推荐产品
- en: Congratulations! You have built a complete recommendation engine using Django
    and Redis.
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！你已经使用Django和Redis构建了一个完整的推荐引擎。
- en: Summary
  id: totrans-294
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you created a coupon system using Django sessions and integrated
    it with Stripe. You also built a recommendation engine using Redis to recommend
    products that are usually purchased together.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你使用Django会话创建了一个优惠券系统，并将其与Stripe集成。你还使用Redis构建了一个推荐引擎，以推荐通常一起购买的产品。
- en: The next chapter will give you an insight into the internationalization and
    localization of Django projects. You will learn how to translate code and manage
    translations with Rosetta. You will implement URLs for translations and build
    a language selector. You will also implement model translations using `django-parler`
    and you will validate localized form fields using `django-localflavor`.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将为你揭示Django项目的国际化本地化。你将学习如何翻译代码以及如何使用Rosetta管理翻译。你将实现翻译的URL并构建语言选择器。你还将使用`django-parler`实现模型翻译，并使用`django-localflavor`验证本地化表单字段。
- en: Additional resources
  id: totrans-297
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他资源
- en: 'The following resources provide additional information related to the topics
    covered in this chapter:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 以下资源提供了与本章涵盖主题相关的额外信息：
- en: 'Source code for this chapter: [https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10](https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10)'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 本章的源代码：[https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10](https://github.com/PacktPublishing/Django-5-by-example/tree/main/Chapter10)
- en: 'Discounts for Stripe Checkout: [https://stripe.com/docs/payments/checkout/discounts](https://stripe.com/docs/payments/checkout/discounts)'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Stripe Checkout的折扣：[https://stripe.com/docs/payments/checkout/discounts](https://stripe.com/docs/payments/checkout/discounts)
- en: 'The Redis `ZRANGE` command: [https://redis.io/commands/zrange/](https://redis.io/commands/zrange/)'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis的`ZRANGE`命令：[https://redis.io/commands/zrange/](https://redis.io/commands/zrange/)
- en: 'The Redis `ZUNIONSTORE` command: [https://redis.io/commands/zunionstore/](https://redis.io/commands/zunionstore/)'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis的`ZUNIONSTORE`命令：[https://redis.io/commands/zunionstore/](https://redis.io/commands/zunionstore/)
- en: 'The Redis `ZREM` command: [https://redis.io/commands/zrem/](https://redis.io/commands/zrem/)'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis 的 `ZREM` 命令：[https://redis.io/commands/zrem/](https://redis.io/commands/zrem/)
- en: 'The Redis `DEL` command: [https://redis.io/commands/del/](https://redis.io/commands/del/)'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Redis 的 `DEL` 命令：[https://redis.io/commands/del/](https://redis.io/commands/del/)
