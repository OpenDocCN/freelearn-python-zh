- en: Chapter 16. Al Sweigart
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第16章。阿尔·斯威加特
- en: '![Al Sweigart](img/B08180_13_01.jpg)'
  id: totrans-1
  prefs: []
  type: TYPE_IMG
  zh: '![阿尔·斯威加特](img/B08180_13_01.jpg)'
- en: 'Al Sweigart is an American software developer and the creator of two cross-platform
    Python modules: Pyperclip, for copying and pasting text, and PyAutoGUI, for controlling
    the mouse and keyboard. He is a successful author who has published four books
    on Python programming and a book on Scratch, a programming language for children.
    Al''s books teach beginners how to code and he is passionate about helping young
    people and adults to develop programming skills. Al focuses on making programming
    knowledge more accessible and regularly speaks at Python conferences.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 阿尔·斯威加特是一位美国软件开发者，也是两个跨平台Python模块的创建者：Pyperclip，用于复制和粘贴文本，以及PyAutoGUI，用于控制鼠标和键盘。他是一位成功的作家，已经出版了四本关于Python编程的书和一本关于Scratch的书，这是一门面向儿童的编程语言。阿尔的书教初学者如何编码，他热衷于帮助年轻人和成年人发展编程技能。阿尔专注于使编程知识更加易于获取，并经常在Python会议上发表演讲。
- en: '**Discussion themes: Python books, Python packages, v2.7/v3.x.**'
  id: totrans-3
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**讨论主题：Python书籍、Python包、v2.7/v3.x。**'
- en: ''
  id: totrans-4
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Al Sweigart here: @AlSweigart**'
  id: totrans-5
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**关注阿尔·斯威加特：@AlSweigart**'
- en: '**Mike Driscoll**: So how did you become a programmer?'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**迈克·德里科尔**: 你是怎么成为程序员的？'
- en: '**Al Sweigart**: I was a kid who loved the 8-bit Nintendo. Then a friend of
    mine found a book in the elementary school library about programming games in
    BASIC. I was hooked.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特**: 我是一个喜欢8位任天堂游戏的男孩。然后我的一位朋友在小学图书馆里找到了一本关于用BASIC编程游戏的书。我被迷住了。'
- en: I sort of hate telling people how I got into programming, because I was one
    of those people who started when they were a young kid. I worry that telling my
    story makes people think, "Oh no, I haven't been programming since I was three
    weeks old, so it's too late for me. I'll never catch up!"
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我有点讨厌告诉人们我是如何开始编程的，因为我就是那些从小就开始编程的人之一。我担心我的故事会让人们想，“哦不，我三周大就开始编程了，所以我太晚了。我永远赶不上了！”
- en: '**Al Sweigart: ''If anything, programming has become so much easier than it
    was 20 years ago.''**'
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：''如果有什么变化的话，编程比20年前容易多了。''**'
- en: If anything, programming has become so much easier than it was 20 years ago.
    We didn't have Wikipedia and Stack Overflow back then. I think everything that
    I learned about programming between the third grade and graduating high school,
    anybody could now learn in about a dozen weekends.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有什么变化的话，编程比20年前容易多了。那时候我们没有维基百科和Stack Overflow。我认为我在三年级到高中毕业期间学到的所有编程知识，现在任何人都可以在十二个周末内学会。
- en: Most of my programming knowledge was drawn from that one book. I tried to make
    sense of the reference manual that came with my family's Compaq 386 computer.
    I couldn't understand that manual at all. I ended up never making anything as
    impressive as the Nintendo games I played.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我的大部分编程知识都来自那本书。我试图理解我家的Compaq 386电脑附带的那本参考手册。我完全看不懂那本手册。结果我最终没有制作出像我所玩的任天堂游戏那样令人印象深刻的东西。
- en: '**Driscoll**: So how did you end up moving into Python itself?'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**: 那你是怎么最终转向Python的呢？'
- en: '**Sweigart**: I first picked up Python around 2004\. I was looking at making
    some web apps, and I was mostly programming in PHP and Perl, when a friend pointed
    out Python to me.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**: 我第一次接触Python是在2004年左右。我当时想制作一些网络应用，主要使用PHP和Perl进行编程，后来一个朋友向我介绍了Python。'
- en: At that time, I wanted to learn as many different programming languages as I
    could, and Python was really nice. I loved the readability of the language. Everything
    that I used to do in Perl, I started doing in Python. I never found a programming
    language that I liked better after that, so I just stuck to Python and now it's
    been over a decade.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当时，我想尽可能多地学习不同的编程语言，Python真的很好。我喜欢这种语言的易读性。我以前在Perl中做的所有事情，现在都在Python中做。在那之后，我没有找到比Python更好的编程语言，所以我一直坚持使用Python，现在已经有十多年了。
- en: I sometimes feel that I need to actually force myself to learn different programming
    languages, just to stay on top of things. But Python has become my go-to language.
    Whenever I have to write a quick script or automate some really short task, it's
    easy to use Python.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我有时觉得自己需要强迫自己学习不同的编程语言，只是为了跟上潮流。但Python已经成为我的首选语言。每当我需要编写一个快速脚本或自动化一些非常短的任务时，Python都很容易使用。
- en: Then again, it's really hard to predict the future and I've stopped trying.
    For instance, I really thought that something would come along to replace JavaScript,
    but if anything, it's just getting more popular! That, and I originally thought
    that including cameras in cell phones was a silly idea. So I've learned not to
    try to predict the future.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 再说，预测未来真的很困难，我已经停止尝试了。例如，我确实认为会有某种东西来取代JavaScript，但事实上，它只是变得越来越受欢迎！还有，我最初认为在手机中包含摄像头是个愚蠢的想法。所以，我已经学会了不要试图预测未来。
- en: '**Al Sweigart: ''It''s really hard to predict the future and I''ve stopped
    trying.''**'
  id: totrans-17
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特**：“预测未来真的很困难，我已经停止尝试了。”'
- en: '**Driscoll**: Python is playing a major role in the AI and machine learning
    boom. Can you explain that?'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：Python在AI和机器学习的繁荣中扮演着重要角色。你能解释一下这一点吗？'
- en: '**Sweigart**: Well, not to fawn over Python too much, but what makes Python
    great for AI are the things that make it great as a language in general.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：嗯，不过不要过分吹捧Python，但使Python在AI方面变得出色的，正是使它成为通用语言的原因。'
- en: '**Al Sweigart: ''What makes Python great for AI are the things that make it
    great as a language in general.''**'
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特**：“使Python适合AI的，正是使它成为通用语言的原因。”'
- en: Python is easy to learn and easy to use. It turns out that for most applications
    this is what's important. "Powerful" is a meaningless term when it comes to programming
    languages, because every language describes itself as "powerful".
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Python易于学习和使用。结果证明，对于大多数应用来说，这才是最重要的。“强大”这个词在编程语言中是没有意义的，因为每种语言都把自己描述为“强大”。
- en: Theoretically, there's no calculation that one language can do that another
    language can't. In practice though, you need a human programmer to take the time
    to sit down and write the actual code. A language that makes that easy to do is
    the one that will see more adoption, a larger community, and more libraries. So
    it doesn't surprise me that Python takes the lead in something like machine learning,
    where so many of the tools were developed recently.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 从理论上讲，没有一种语言能做另一种语言做不到的计算。然而，在实践中，你需要一个程序员花时间坐下来编写实际的代码。一种让这变得容易的语言将会得到更广泛的采用，拥有更大的社区和更多的库。所以，Python在像机器学习这样的领域领先，其中许多工具都是最近开发的，这并不让我感到惊讶。
- en: '**Driscoll**: What made you decide to start actually writing books about the
    Python language?'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**：是什么让你决定开始真正写关于Python语言的书籍？'
- en: '**Sweigart**: In 2008, my girlfriend was a nanny for a 10-year-old kid. He
    wanted to learn how to program, but he didn''t really know where to start. I tried
    to find something on the web for him, but so much of the content back then was
    aimed at professional software developers.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：2008年，我的女朋友为一个10岁的孩子当保姆。他想学习如何编程，但他不知道从哪里开始。我试图在网上为他找到一些东西，但当时网上大部分内容都是针对专业软件开发者的。'
- en: So I started writing a tutorial, which eventually became *Invent Your Own Computer
    Games with Python*. I didn't want to bury the reader with programming concepts
    and technical jargon. I just wanted to list the source code to a game and then
    explain how its code worked. I kept adding more games and eventually it ballooned
    into book length. I self-published it, but also put it on the web for free under
    a Creative Commons license. People seemed to like it, so I went on to write *Making
    Games with Python and Pygame*.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我开始编写教程，最终变成了《用Python自己动手做电脑游戏》。我不想让读者被编程概念和技术术语淹没。我只是想列出游戏源代码，然后解释其代码是如何工作的。我不断添加更多游戏，最终它膨胀成了一本书的长度。我自费出版了它，但也将其免费放在网上，并置于Creative
    Commons许可之下。人们似乎很喜欢它，所以我继续写了《用Python和Pygame制作游戏》。
- en: There's a little cipher program in *Invent Your Own Computer Games with Python*.
    I thought putting a bunch of these classic ciphers together would make a good
    book. I'd explain not only how to write code to perform the encryption, but also
    how to break the encryption. These ciphers are from ancient Roman times, up to
    the 16th century, so the average laptop today has more than enough computing power
    to break them. That book became *Cracking Codes with Python*.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 《用Python自己动手做电脑游戏》中有一个小加密程序。我认为把这么多经典加密算法放在一起会是一本好书。我会解释如何编写代码来执行加密，以及如何破解加密。这些加密算法从古罗马时代到16世纪，所以今天的普通笔记本电脑都有足够的计算能力来破解它们。那本书变成了《用Python破解密码》。
- en: After I wrote that third book, writing turned into what I did with all of my
    spare time. There came a point where I could take a chance, leave the software
    developer job that I had, and write full-time. That worked out pretty well.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在我写了第三本书之后，写作变成了我所有业余时间做的事情。到了一个我可以冒险的时候，离开我当时的软件开发工作，全职写作。这结果相当不错。
- en: '**Al Sweigart: ''I came up with the right idea for a book, at the right time,
    and also for the right language.''**'
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：**“我想出了合适的书名，在合适的时间，并且选择了合适的语言。”**'
- en: I thought that I'd go back to another developer job after a year or so of writing,
    but *Automate the Boring Stuff with Python* completely blew me away with its success.
    It was mostly luck. I came up with the right idea for a book, at the right time,
    and also for the right language. So a lot of things just fell together.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我以为写了一年左右的书之后，我会回到另一份开发者工作，但《用Python自动化无聊的事情》的成功完全让我震惊。这主要是因为运气。我在合适的时间想出了合适的书名，并且选择了合适的语言。所以很多事情都自然而然地凑到了一起。
- en: '**Driscoll**: Why did you decide to self-publish?'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**你为什么决定自出版？'
- en: '**Sweigart**: No Starch Press had approached me about publishing *Invent Your
    Own Computer Games with Python*, but that plan had fallen through.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特：**No Starch Press曾向我提出出版《用Python自己制作电脑游戏》，但那个计划已经失败了。'
- en: I had this half-edited manuscript, so I finished editing it and turned it into
    a PDF to put on Amazon. All the promotion I did was online. I'd tell people about
    it on forums. People didn't see it as spamming because the PDF was also completely
    free to download.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一份半编辑的手稿，所以我完成了编辑工作，并将其转换为PDF格式，放在亚马逊上。我所有的推广都是在线进行的。我会在论坛上告诉人们。人们并不认为这是垃圾邮件，因为PDF也是完全免费的。
- en: '**Driscoll**: Do you think that the success of *Invent Your Own Computer Games
    with Python* was due to having the book as a PDF, or as a web page?'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**你认为《用Python自己制作电脑游戏》的成功是因为它是PDF格式，还是网页格式？'
- en: '**Sweigart**: I still think putting the book online for free, with a Creative
    Commons license, led to more people buying the book. People could see the book
    and generate word of mouth. There were other benefits too. With the book online,
    I could take a look at the traffic and see which chapters were getting the most
    attention.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特：**我认为将书籍免费放在网上，并使用Creative Commons许可证，导致更多的人购买这本书。人们可以看到这本书，并产生口碑。还有其他好处。因为书籍在网上，我可以查看流量，并看到哪些章节最受关注。'
- en: '**Al Sweigart: ''The most popular chapters...were on GUI automation, web scraping
    and regular expressions. So when PyCon had calls for talk proposals, those were
    the topics that I chose.''**'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：**“最受欢迎的章节是关于GUI自动化、网络爬虫和正则表达式。所以当PyCon征集演讲提案时，我选择了这些主题。”**'
- en: The most popular chapters on the *Automate the Boring Stuff with Python* site
    were on GUI automation, web scraping, and regular expressions. So when PyCon had
    calls for talk proposals, those were the topics that I chose. That's how I started
    speaking at the regional PyCons and then at US PyCon in 2017.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在《用Python自动化无聊的事情》网站上最受欢迎的章节是关于GUI自动化、网络爬虫和正则表达式。所以当PyCon征集演讲提案时，我选择了这些主题。这就是我为什么开始在全国PyCon上发言，然后在2017年的US
    PyCon上发言。
- en: I've noticed that the most popular topics in my books are not always the stuff
    that I think is the most interesting. I remember that when I was writing *Automate
    the Boring Stuff with Python*, I thought that the chapter on image manipulation
    would be popular. But it turns out that most people don't need to generate their
    own image files from Python scripts as much as I do.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我注意到，我书中最受欢迎的主题并不总是我认为最有趣的东西。我记得当我写《用Python自动化无聊的事情》时，我以为图像处理章节会很受欢迎。但结果却是，大多数人并不像我自己那样需要从Python脚本中生成自己的图像文件。
- en: '**Al Sweigart: ''I''ve noticed that the most popular topics in my books are
    not always the stuff that I think is the most interesting.''**'
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：**“我注意到，我书中最受欢迎的主题并不总是我认为最有趣的东西。”**'
- en: '**Driscoll**: What have you learned as an author?'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔：**作为作者，你学到了什么？'
- en: '**Sweigart**: It''s going to be more work than you think! A lot of people email
    me and say, "Oh hey, I''m interested in writing a book on programming. Do you
    have any advice for me?"'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特：**这比你想象的要辛苦得多！很多人给我发邮件说：“哦，嗨，我对写编程书感兴趣。你有什么建议吗？”'
- en: I don't know what to tell them. I'm a software developer by training. I know
    what I did and that my approach worked for me. But that's like a lottery winner
    advising you on which numbers to pick. *Automate the Boring Stuff with Python*
    did far better than my other books. I'm not really sure how well I could reproduce
    those results for someone else.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道该告诉他们什么。我是一名软件开发者。我知道我做了什么，以及我的方法对我自己有效。但那就像彩票赢家在告诉你该选择哪些号码一样。“用Python自动化无聊的事情”比我的其他书卖得要好得多。我并不确定我能否为其他人复制那些结果。
- en: My most recent book was *Scratch Programming Playground*, which uses the Scratch
    programming tool, from the MIT Media Lab, to teach programming concepts to kids.
    That book is doing modestly well, but unfortunately the audience for Scratch isn't
    as large as the audience for Python.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我最近的书是《Scratch编程乐园》，它使用来自麻省理工学院媒体实验室的Scratch编程工具，向孩子们教授编程概念。这本书表现尚可，但不幸的是，Scratch的受众并没有Python的受众那么大。
- en: I did learn that writing is something you have to do to get better at it. Actual
    practice is better than any advice I could give. Also, I learned that good editors
    are worth their weight in gold.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实学到了写作是你必须做的事情，以提升写作技能。实际练习比我能给出的任何建议都要好。此外，我还学到了好编辑的价值连城。
- en: '**Driscoll**: So what would you do differently if you could start over with
    one of your other books that didn''t do so well?'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：那么，如果你能重新开始，你会对你其他表现不佳的书做些什么不同的事情？'
- en: '**Sweigart**: I mean, if we''re talking about the first book, then my biggest
    mistake was not writing it for Python 3\. Originally, I was just using Python
    2, because that''s what I knew.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sweigart**：我的意思是，如果我们谈论第一本书，那么我最大的错误就是没有为Python 3编写它。最初，我只是使用Python 2，因为这是我所知道的。'
- en: I didn't start questioning that decision until someone said, "Hey, why don't
    you use Python 3?" There really wasn't a particular reason not to, so I made the
    switch to Python 3 for *Invent Your Own Computer Games with Python*. That turned
    out to be a really smart thing.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我直到有人对我说，“嘿，你为什么不使用Python 3？”才开始质疑那个决定。实际上并没有特别的原因不使用Python 3，所以我将《用Python发明自己的电脑游戏》这本书切换到了Python
    3。结果证明这是一个非常明智的决定。
- en: '**Al Sweigart: ''I made the switch to Python 3 for Invent Your Own Computer
    Games with Python. That turned out to be a really smart thing.''**'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Al Sweigart**：“我为《用Python发明自己的电脑游戏》这本书切换到了Python 3。结果证明这是一个非常明智的决定。”'
- en: Another big mistake when writing *Invent Your Own Computer Games with Python*
    was that I originally had the entire text just as HTML, because I was making it
    as a web tutorial in a text file. I was writing unit tests and using linting tools
    just to make sure that everything was formatted well. That turned out to be a
    large headache.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写《用Python发明自己的电脑游戏》时犯下的另一个大错误是，我最初把整个文本都写成HTML，因为我在一个文本文件中制作它作为一个网络教程。我编写单元测试和使用代码检查工具只是为了确保一切格式正确。结果证明这是一个大麻烦。
- en: What I should have done is use Microsoft Word. A lot of people are really surprised
    when I tell them that, but Word and Excel are the two best things to come out
    of Microsoft. If I could send a message 10 years back in time, I'd tell myself
    to use real desktop publishing software.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我本应该使用微软Word的。当告诉他们这一点时，很多人都很惊讶，但Word和Excel是微软推出的两大神器。如果我能回到10年前，我会告诉自己使用真正的桌面出版软件。
- en: '**Driscoll**: Why did you choose Scratch, rather than one of the other children''s
    beginner languages?'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你为什么选择Scratch，而不是其他儿童入门语言之一？'
- en: '**Sweigart**: Scratch is the best programming tool for kids that I''ve encountered.
    A lot of programming tools for kids are dumbed down to the point that I don''t
    feel like they''re actually teaching programming.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sweigart**：Scratch是我遇到的最佳儿童编程工具。很多儿童编程工具都简化到了我不认为它们真正在教授编程的程度。'
- en: Scratch made a lot of smart design decisions and teaches real programming, while
    hiding the messy details. Everyone interested in teaching kids to code should
    read the Scratch white paper by Mitch Resnick and also watch his TED talk.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: Scratch做出了很多明智的设计决策，并教授真正的编程，同时隐藏了杂乱的细节。所有对教授孩子编程感兴趣的人都应该阅读Mitch Resnick撰写的Scratch白皮书，并观看他的TED演讲。
- en: '**Driscoll**: So I want to change topic here slightly. Why did you create the
    Python packages Pyperclip and PyAutoGUI?'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：所以我想要稍微改变一下话题。你为什么创建了Python包Pyperclip和PyAutoGUI？'
- en: '**Sweigart**: Pyperclip and PyAutoGUI both came out of needs that came up while
    I was writing programming books.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sweigart**：Pyperclip和PyAutoGUI都是在我编写编程书籍时出现的需要中诞生的。'
- en: '**Al Sweigart: ''Pyperclip and PyAutoGUI both came out of needs that came up
    while I was writing programming books.''**'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：''Pyperclip和PyAutoGUI都是在我写编程书籍时出现的需要。''**'
- en: In *Cracking Codes with Python*, you're dealing with encrypting and decrypting
    text. Often, you're working with a lot of random nonsense text that you need to
    reproduce exactly, and having a copy-and-paste mechanism makes that much easier.
    It lets the user put the output into an email, or save it in a document. So I
    thought, "Well, how do you copy-and-paste text in Python?" There were some modules
    on PyPI that did copy-and-paste, but they would only work on one operating system,
    or they only worked for Python 2.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在《用Python破解密码》这本书中，你处理的是加密和解密文本。通常，你处理的是大量的随机无意义文本，你需要精确地重新生成它们，而有一个复制粘贴机制会使这个过程容易得多。它允许用户将输出放入电子邮件中，或者保存到文档中。所以我想到，“嗯，如何在Python中进行复制粘贴文本？”PyPI上有些模块可以进行复制粘贴，但它们只适用于一个操作系统，或者只适用于Python
    2。
- en: I wanted to have one module that worked on all operating systems, and also worked
    for Python 2 and Python 3\. All I needed was a copy function and a paste function.
    I didn't think it would turn out to be much work, but of course it was. Fortunately,
    the user doesn't have to see all the messy details that went into making Pyperclip
    work on so many platforms. They only see a module with two functions.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我想要一个在所有操作系统上都能工作的模块，并且对Python 2和Python 3都适用。我需要的只是一个复制函数和一个粘贴函数。我本以为这不会花太多时间，但当然，这确实花了不少时间。幸运的是，用户不需要看到所有让Pyperclip在这么多平台上工作的混乱细节。他们只看到一个有两个函数的模块。
- en: '**Driscoll**: So how did you get started on this idea of one module?'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：那么你是如何开始这个一个模块的想法的？'
- en: '**Sweigart**: I didn''t want readers to have to deal with picking different
    modules depending on what their computer setup was.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：我不想让读者不得不根据他们的电脑配置来挑选不同的模块。'
- en: I combined all of that code into one module, to become Pyperclip, because I
    noticed that there was nothing on PyPI that did that. PyAutoGUI was created for
    similar reasons. I wanted to have a chapter on GUI automation for *Automate the
    Boring Stuff with Python*, but all the existing modules on PyPI were for different
    operating systems and worked differently.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我将所有这些代码合并到一个模块中，变成了Pyperclip，因为我注意到PyPI上没有这样的东西。PyAutoGUI也是出于类似的原因被创建的。我原本想在《用Python自动化无聊的事情》这本书中添加一个关于GUI自动化的章节，但PyPI上现有的所有模块都是针对不同的操作系统，并且工作方式不同。
- en: '**Al Sweigart: ''The way that PyAutoGUI came about was because of this need
    to have one module that just worked.''**'
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：''PyAutoGUI的产生是因为这种需要有一个只需工作即可的模块。''**'
- en: The way that PyAutoGUI came about was because of this need to have one module
    that just worked. I think that's the main reason that PyAutoGUI is the most popular
    open source project that I've ever started. It's useful to a wide range of people.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: PyAutoGUI的产生是因为这种需要有一个只需工作即可的模块。我认为这是PyAutoGUI成为我最受欢迎的开源项目的主要原因之一。它对广泛的人群都有用。
- en: '**Driscoll**: What do you think should be the goal for anyone creating Python
    packages?'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：你认为创建Python包的人应该有什么目标？'
- en: '**Sweigart**: If you want to create a Python package, or any software, the
    most important thing is that it''s easy to use.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：如果你想创建一个Python包，或者任何软件，最重要的是它易于使用。'
- en: '**Al Sweigart: ''If you want to create a Python package, or any software, the
    most important thing is that it''s easy to use.''**'
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：''如果你想创建一个Python包，或者任何软件，最重要的是它易于使用。''**'
- en: Before I even start writing any code, I just type out what the API would be
    like and how I would use it myself. I think a lot of programmers just like writing
    code and solving technical problems, but they don't realize that all of that is
    worthless if it's too complicated for people to actually use.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在我开始编写任何代码之前，我只是把API的样子和我会如何使用它写出来。我认为很多程序员都喜欢编写代码和解决技术问题，但他们没有意识到，如果这些太复杂以至于人们无法实际使用，那么所有这些都没有价值。
- en: '**Al Sweigart: ''When starting out, the algorithms you write don''t have to
    be elegant. You don''t even need the code to be perfectly clean.''**'
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特：''当你刚开始时，你写的算法不需要很优雅。你甚至不需要代码非常干净。''**'
- en: When starting out, the algorithms you write don't have to be elegant. You don't
    even need the code to be perfectly clean. As long as using the module is simple,
    then that's what gets people paying attention. Once you know you've made something
    that works, and that people want, then you can clean up the code for future development.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始时，你写的算法不必很优雅。你甚至不需要代码完全干净。只要使用模块简单，就能吸引人们的注意。一旦你知道你做出了人们想要的东西，你就可以在未来的开发中清理代码。
- en: '**Al Sweigart: ''I''m always thrilled that many people use Pyperclip and it
    isn''t just a toy that I created for myself.''**'
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Al Sweigart**：''我总是很高兴看到很多人使用Pyperclip，它不仅仅是我为自己创建的一个玩具。'''
- en: I'm always thrilled that many people use Pyperclip and it isn't just a toy that
    I created for myself. I've learned a lot about making software that fits other
    people's needs. For example, with PyAutoGUI, I received bug reports from people
    with non-English keyboards or non-English language settings. These were issues
    that I would have never thought of if I was the only one using my creation.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我总是很高兴看到很多人使用Pyperclip，它不仅仅是我为自己创建的一个玩具。我从制作满足他人需求的软件中学到了很多。例如，使用PyAutoGUI，我收到了来自使用非英语键盘或非英语语言设置的用户的错误报告。这些是我如果只有我一个人使用我的创作时从未想过的问题。
- en: It's given me an appreciation for just how much effort goes into making code
    that is robust enough for a wide and diverse set of users. I've made a few other
    open source projects, but Pyperclip and PyAutoGUI are the ones that taught me
    the most about writing software for other people.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这让我更加欣赏到，为了使代码足够健壮，能够满足广泛多样的用户，需要投入多少努力。我制作了一些其他开源项目，但Pyperclip和PyAutoGUI是那些教会我最多关于为他人编写软件的项目。
- en: '**Driscoll**: Are there any other major insights that you''ve learned from
    operating these popular open source projects?'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你在运营这些流行的开源项目中学到了哪些其他重要的见解？'
- en: '**Sweigart**: I''ve learned that, for the most part, people are really nice.
    I''ve heard some stories from open source maintainers about rude people demanding
    that you fix the bug they''re encountering right then and there. But the people
    I''ve communicated with are really welcoming and even-handed about their criticisms.
    I really appreciate that.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sweigart**：我了解到，大多数情况下，人们真的很友好。我听到了一些来自开源维护者的故事，关于粗鲁的人要求你立即修复他们遇到的错误。但与我交流的人都非常欢迎，并且对他们的批评非常公正。我真的很感激。'
- en: '**Driscoll**: What advice would you give to anyone who is reluctant to share
    their code online?'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**Driscoll**：你会给那些不愿意在网上分享代码的人什么建议？'
- en: '**Sweigart**: The sooner you put your code online and get people looking at
    it, the better.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**Sweigart**：你越早把代码放到网上并让人们查看它，就越好。'
- en: You have to get over that fear of criticism, because I know code reviews have
    made me a better software developer more than anything else. You're missing out
    on so many opportunities to improve if you don't put yourself out there, and you
    can always post under an alias anyway.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 你必须克服那种害怕批评的心理，因为我知道代码审查比我做任何事情都让我成为一个更好的软件开发者。如果你不把自己放在那里，你会错过很多改进的机会，而且你总是可以匿名发布。
- en: '**Al Sweigart: ''The sooner you put your code online and get people looking
    at it, the better.''**'
  id: totrans-77
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Al Sweigart**：''你越早把代码放到网上并让人们查看它，就越好。'''
- en: It's a lot like going to the gym. Sometimes people go to the gym and they're
    worried that everybody else is watching and judging them. But the other people
    at the gym are too busy thinking about themselves to notice them. I think the
    same thing applies to code. Most people don't actually read your code. I'm pretty
    sure that most technical recruiters who contacted me, never actually took the
    time to go through the hundreds of lines of code that I had out there already.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 这很像去健身房。有时候人们去健身房，他们担心别人在看着他们并评判他们。但健身房里的其他人太忙于思考自己，以至于没有注意到他们。我认为这同样适用于代码。大多数人实际上并不阅读你的代码。我相当确信，与我联系的大多数技术招聘人员，从未真正花时间去阅读我已经发布的数百行代码。
- en: I tend to hate any code that I wrote more than two weeks ago. I look back on
    it and see so many mistakes and rough edges. A lot of programmers are like that.
    If you're worried that your code is too unpolished to post online, then at least
    you're in good company.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我通常讨厌两周前写的任何代码。我回顾它时，看到很多错误和粗糙的边缘。很多程序员都是这样。如果你担心你的代码太不完美而无法发布到网上，那么至少你并不孤单。
- en: '**Driscoll**: So do you have any specific advice for someone who wants to create
    the next big open source package in Python?'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：那么，你对那些想要在Python中创建下一个大型开源包的人有什么具体的建议吗？'
- en: '**Sweigart**: There''s something called the Nobel Prize effect, which is when
    scientists win a Nobel Prize and then think, "What could I do to win a second
    Nobel Prize? I need to work on an even greater problem."'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：有一种被称为诺贝尔奖效应的东西，就是当科学家获得诺贝尔奖后，他们会想，“我能做什么来赢得第二个诺贝尔奖？我需要解决一个更大的问题。”'
- en: Then they set their sights way too high and never accomplish anything again.
    I sometimes feel that way about Pyperclip and PyAutoGUI because I didn't imagine
    they would become as popular as they did.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然后他们把目标定得太高，从此再也没有完成任何事情。我有时对Pyperclip和PyAutoGUI也有这种感觉，因为我没有想过它们会像现在这样受欢迎。
- en: My GitHub profile has a ton of other repos that nobody has paid much attention
    to. So my advice would be to keep working on different ideas that you have. It's
    really hard to predict what's going to become popular. This was the case with
    the open source projects that I've created, but also with the books that I've
    written. I really had no idea that the successful things that I've worked on would
    be successful. Most of the things that I've worked on have not been successful
    at all.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我的GitHub个人资料上有许多其他仓库，没有人过多关注。所以我的建议是继续工作，实现你的不同想法。预测什么会变得流行真的很困难。这对我来说是开源项目的情况，也是我写的书的情况。我真的不知道我所做成功的事情会成功。我大部分的工作都没有取得成功。
- en: Start small and keep growing. Learn from your mistakes and realize that you
    will make a lot of them. Put your code out there for criticism and learn to work
    with others, because all the big open source projects are made by teams, not by
    individuals. I think that's probably the best recipe for success.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 从小做起，不断成长。从你的错误中学习，并意识到你会犯很多错误。把你的代码拿出来接受批评，学会与他人合作，因为所有的大型开源项目都是由团队而不是个人完成的。我认为这可能是最成功的秘诀。
- en: '**Al Sweigart: ''All the big open source projects are made by teams, not by
    individuals.''**'
  id: totrans-85
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**斯威加特**：“所有的大型开源项目都是由团队而不是个人完成的。”'
- en: '**Driscoll**: What are you most excited about in Python today?'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：你对现在的Python最兴奋的是什么？'
- en: '**Sweigart**: It seems like we''re finally turning a corner when it comes to
    Python 3 adoption and for good reason.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：看来我们终于迎来了Python 3采用的转折点，这是有充分理由的。'
- en: There have been efficiency improvements to several places in the language and
    most notably to dictionaries in 3.6 (which are at the foundation of much of Python
    itself). The asyncio module seems like it could become a killer feature. But mostly
    I'm just excited that Python is being used by more people outside of software
    engineering like hobbyists, academics, and data scientists.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 语言中的几个地方进行了效率改进，最值得注意的是3.6中的字典（它们是Python本身的基础）。asyncio模块看起来可能成为杀手级特性。但主要我还是很高兴看到Python被更多的非软件工程领域的人使用，比如爱好者、学者和数据科学家。
- en: '**Driscoll**: What do you think about the long life of Python 2.7? Should everyone
    move to Python 3 now?'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里科尔**：你对Python 2.7的长寿有何看法？每个人都应该现在就转到Python 3吗？'
- en: '**Sweigart**: Yes, absolutely people should move to Python 3\. In 2018, the
    excuse that modules don''t support Python 3 yet isn''t true and hasn''t been true
    for years.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**：是的，绝对应该迁移到Python 3。到了2018年，模块还不支持Python 3的借口已经不再成立，而且已经好几年了。'
- en: The only reason to continue to use Python 2 is if you have a large existing
    codebase of Python 2 code, which, since Python had so much popularity early on,
    is unfortunately the case for a lot of codebases. But I feel at this point that
    there's been too many improvements to Python 3 to ignore.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 继续使用Python 2的唯一原因是你有一个庞大的现有Python 2代码库，由于Python早期就非常受欢迎，这很不幸地成为了许多代码库的情况。但我觉得现在Python
    3已经有了太多的改进，不能忽视。
- en: '**Al Sweigart: ''I feel at this point that there''s been too many improvements
    to Python 3 to ignore.''**'
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**斯威加特**：“我觉得现在Python 3的改进太多了，不能忽视。”'
- en: The better handling of Unicode strings was the selling point for me personally.
    I've seen a lot of code that just falls over the instant that someone uses non-ASCII
    characters in a string somewhere. I always thought it was odd that the versions
    before Python 3 were so awkward when it came to Unicode characters, until a friend
    pointed out that Python mostly predates Unicode. It's easy to forget how long
    Python has been around.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我个人来说，更好的 Unicode 字符串处理是我所看重的卖点。我见过很多代码，一旦有人在字符串中使用了非 ASCII 字符，就会立即崩溃。我总是觉得
    Python 3 之前的版本在处理 Unicode 字符时如此尴尬，直到一个朋友指出 Python 主要是在 Unicode 之前出现的。很容易忘记 Python
    已经存在了多久。
- en: '**Driscoll**: So where do you see Python going as a language? What features
    do you see coming in, or which fields do you see Python opening up in?'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**: 那么，您如何看待 Python 作为一门语言的发展？您认为哪些特性将会出现，或者您认为 Python 将会在哪些领域打开？'
- en: '**Sweigart**: Python looks out at the programming landscape and weeps because
    there are no more worlds to conquer.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**斯威加特**: Python 看着编程领域，哭泣着因为它已经没有更多的世界可以去征服。'
- en: '**Al Sweigart: ''Python looks out at the programming landscape and weeps because
    there are no more worlds to conquer.''**'
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特: ''Python 看着编程领域，哭泣着因为它已经没有更多的世界可以去征服。''**'
- en: That's an exaggeration, of course. But it's amazing how many different areas
    Python is used in. It's a great general scripting language, but it's also used
    in massively scaled systems. It's used for web apps, but also machine learning.
    It's used by the largest tech companies, but also in high school computer science
    classes.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，这是一个夸张的说法。但令人惊讶的是 Python 被用在多少不同的领域。它是一个伟大的通用脚本语言，但也用于大规模系统。它被用于网络应用，也被用于机器学习。它被最大的科技公司使用，也被用于高中的计算机科学课程。
- en: I'm trying to think about areas where Python hasn't been so successful. Embedded
    devices is one area, but MicroPython is addressing that as well. Python is a hard
    sell for triple-A gaming and VR, but it's great for hobbyist game makers and even
    a few indie game developers. Python is used for web app backends, but JavaScript
    is still the king of the frontend. I would love to see Python in the browser.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 我正在尝试思考 Python 在哪些领域还没有取得成功。嵌入式设备是一个领域，但 MicroPython 也在解决这个问题。Python 在 AAA 游戏和
    VR 领域很难销售，但对于业余游戏制作者甚至一些独立游戏开发者来说却很棒。Python 被用于网络应用的后端，但 JavaScript 仍然是前端之王。我希望看到
    Python 在浏览器中的应用。
- en: I've been a big fan of the changes in Python 3, if anything just because Python
    3 got strings to finally work sensibly. A lot of programmers in the English-speaking
    world forget that ASCII is not a universal code. In fact, ASCII is not even universal
    in English-speaking countries. The original ASCII character set has a dollar sign,
    but not a British pound symbol. Writing code that won't break when somebody submits
    a string with accented letters is a huge win.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直很欣赏 Python 3 的变化，如果有什么的话，那只是因为 Python 3 终于让字符串能够合理地工作了。在英语国家，很多程序员忘记了 ASCII
    并不是一个通用的代码。实际上，ASCII 在英语国家也不是通用的。原始的 ASCII 字符集有一个美元符号，但没有英镑符号。编写不会因为有人提交带有重音字母的字符串而崩溃的代码是一个巨大的胜利。
- en: '**Al Sweigart: ''The Python community itself is the best community in tech
    that I''ve ever found.''**'
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**阿尔·斯威加特: ''Python 社区本身是我所遇到过的最好的技术社区。''**'
- en: What makes me optimistic about Python isn't the language itself, so much as
    the people behind it. The Python community itself is the best community in tech
    that I've ever found. They care about being open and inclusive, and that attracts
    a lot of new blood and fresh eyes. So I still think that Python has a lot of steam,
    even though it's been around for close to 30 years now. I think that Python is
    going to be relevant and sticking around for quite some time yet.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我对 Python 保持乐观的并不是语言本身，更多的是背后的人。Python 社区本身是我所遇到过的最好的技术社区。他们关心开放和包容，这吸引了大量新鲜血液和新的视角。所以我认为，尽管
    Python 现在已经接近 30 年了，它仍然有很大的潜力。我认为 Python 将会保持相关性和存在感一段时间。
- en: '**Driscoll**: Thank you, Al Sweigart.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**德里斯科尔**: 谢谢你，阿尔·斯威加特。'
