- en: Reading Sensor Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取传感器数据
- en: This chapter will introduce you to methods that you can use to read sensor data
    from a number of sensors that come onboard with Adafruit Circuit Playground Express.
    We will cover the temperature and light sensors, as well as the motion sensor,
    and you will also learn how to make the board react to sensor events, such as
    the board being shaken or the light levels changing. Having access to this rich
    sensor data can make all sorts of projects possible. For example, you could make
    a project that makes an alarm beep if the detected temperature has exceeded a
    certain level. By learning how to read and process this sensor data, you can make
    a wide array of embedded projects a reality.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍您可以使用的方法，从Adafruit Circuit Playground Express上的多个传感器读取传感器数据。我们将涵盖温度和光传感器，以及运动传感器，您还将学习如何使板对传感器事件做出反应，例如板被摇动或光照水平发生变化。访问这些丰富的传感器数据可以使各种各样的项目成为可能。例如，您可以制作一个项目，如果检测到的温度超过了某个水平，就会发出警报声。通过学习如何读取和处理这些传感器数据，您可以使各种嵌入式项目成为现实。
- en: 'In this chapter, we will be covering the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Circuit Playground Express sensors
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Circuit Playground Express传感器
- en: Reading temperature readings
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 读取温度读数
- en: Reading brightness levels from the light sensor
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从光传感器中读取亮度级别
- en: Creating a light meter
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建光度计
- en: Reading data from the motion sensor
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从运动传感器读取数据
- en: Detecting a single or double tap
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测单击或双击
- en: Detecting a shake
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测摇晃
- en: Beeping on a shake
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摇晃时发出哔哔声
- en: Circuit Playground Express sensors
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Circuit Playground Express传感器
- en: 'Three different hardware sensors will be used in this chapter to get sensor
    readings from the environment. The following photograph is of a thermistor, showing
    the location of the temperature sensor:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将使用三种不同的硬件传感器来从环境中获取传感器读数。以下照片是一个热敏电阻的照片，显示了温度传感器的位置：
- en: '![](assets/d8b00dc3-8ddc-4693-b358-5fdd6aaffb50.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/d8b00dc3-8ddc-4693-b358-5fdd6aaffb50.png)'
- en: Courtesy of adafruit.com
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 由adafruit.com提供
- en: 'The following photograph shows the light sensor that is available on the device:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下照片显示了设备上可用的光传感器：
- en: '![](assets/67cbbbc0-96ae-4b86-b361-6a9c5aec0e37.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/67cbbbc0-96ae-4b86-b361-6a9c5aec0e37.png)'
- en: Courtesy of adafruit.com
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由adafruit.com提供
- en: 'The following photograph shows the accelerometer, which can be used to detect
    motion, as well as tap and double tap strikes on the board:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以下照片显示了加速度计，它可以用于检测运动，以及在板上敲击和双击：
- en: '![](assets/6c2e0897-dcd6-4176-b9e7-f4a79f0ee32c.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/6c2e0897-dcd6-4176-b9e7-f4a79f0ee32c.png)'
- en: Courtesy of adafruit.com
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 由adafruit.com提供
- en: Let's check our first recipe now.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来检查我们的第一个教程。
- en: Reading temperature readings
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取温度读数
- en: In this recipe, we will learn how to create a loop that repeatedly reads the
    current temperature from the temperature sensor and prints it out. This will let
    us experiment with the sensor and see how it reacts to changes in temperature.
    The methods in this recipe can be used whenever you need to incorporate temperature
    readings into your project.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何创建一个循环，重复地从温度传感器中读取当前温度并将其打印出来。这将让我们对传感器进行实验，并查看它对温度变化的反应。本教程中的方法可以在您需要将温度读数纳入项目中时使用。
- en: Getting ready
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要访问Circuit Playground Express上的REPL来运行本教程中提供的代码。
- en: How to do it...
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to read temperature readings:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何读取温度读数：
- en: 'Run the following lines of code in the REPL. The output shows that the room
    temperature is around 25°C:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中运行以下代码。输出显示室温约为25°C：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, use your body temperature to increase the temperature sensor readings
    by pressing your finger on the temperature sensor while you take the next reading:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，通过按压温度传感器来增加温度传感器读数，使用您的体温，同时在进行下一次读数时：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The temperature should have increased by a number of degrees. If you run the
    following code, a floating-point number should be returned:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 温度应该已经升高了几度。如果运行以下代码，应返回一个浮点数：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Wait for a few seconds before executing the following line of code. It will
    calculate the number of seconds since you assigned the value to the start variable:'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在执行以下代码行之前等待几秒钟。它将计算自您将值分配给start变量以来的秒数：
- en: '[PRE3]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'If you run the following code, a list of all the local variables and their
    values should be displayed as a dictionary:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果运行以下代码，应该会显示所有本地变量及其值的列表作为字典：
- en: '[PRE4]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    will repeatedly print the current elapsed time and current temperature reading:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应放入`main.py`文件中，当执行时，将重复打印当前经过的时间和当前温度读数：
- en: '[PRE5]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: How it works...
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. The `cpx` object exposes a property called `temperature`—this property
    returns the current temperature reading from the thermistor as a floating-point
    number whenever the value is accessed.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的前几行导入了Circuit Playground Express库和`time`模块。`cpx`对象公开了一个名为`temperature`的属性-每当访问该值时，该属性将以浮点数的形式返回热敏电阻的当前温度读数。
- en: This value is expressed on the Celsius temperature scale. The start time is
    recorded so that the elapsed time can be calculated for each temperature reading.
    The script then goes into an infinite loop, calculating the elapsed time and getting
    a temperature reading for each loop iteration.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这个值是以摄氏温度标度表示的。记录开始时间，以便为每个温度读数计算经过的时间。然后脚本进入一个无限循环，计算经过的时间并获取每个循环迭代的温度读数。
- en: The elapsed time and temperature are printed with a tab delimiter. A 0.1-second
    delay is applied before the next iteration of the loop is started.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 经过的时间和温度以制表符分隔打印。在开始下一个循环迭代之前，会应用0.1秒的延迟。
- en: There's more...
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: The temperature sensor on this device is a **negative temperature coefficient**
    (**NTC**) thermistor. This component is a resistor that changes resistance with
    a change in temperature. By measuring its resistance, we can get a reading for
    the temperature. In the case of NTC thermistors, the resistance will decrease
    as the temperature increases.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 该设备上的温度传感器是**负温度系数**（NTC）热敏电阻。该元件是一个随温度变化而改变电阻的电阻器。通过测量其电阻，我们可以得到温度读数。在NTC热敏电阻的情况下，电阻会随着温度的升高而减小。
- en: 'In this recipe, the time and temperature data was output in a tab-delimited
    format. This format makes it easy to move the data into other applications for
    analysis. The following graph was generated using data that was output from the
    main script in this recipe:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，时间和温度数据以制表符分隔的格式输出。这种格式使得将数据移入其他应用程序进行分析变得很容易。以下图表是使用从本示例的主脚本输出的数据生成的：
- en: '![](assets/8b264f44-a891-418e-9198-1b86fc7ff2a8.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](assets/8b264f44-a891-418e-9198-1b86fc7ff2a8.png)'
- en: After the script was run for 60 seconds, the output from the REPL was taken
    and copy-pasted into our spreadsheet program, LibreOffice Calc. The tab delimiter
    separates the time and temperature data into their own columns by default. Then,
    using this table of data, the *x*-*y* scatter graph was generated.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 脚本运行了60秒后，从REPL中获取输出，并将其复制粘贴到我们的电子表格程序LibreOffice Calc中。制表符默认将时间和温度数据分隔到各自的列中。然后，使用这个数据表，生成了*x*-*y*散点图。
- en: Graphing sensor data like this makes it very easy to visualize what is happening
    to the temperature readings over time. In this specific dataset (at the start
    of script execution), the temperature sensor was reading the ambient room temperature
    as being around 26°C. Around 10 seconds into the script execution, the sensor
    was touched to heat it up to almost 30°C.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 像这样绘制传感器数据，可以很容易地可视化温度读数随时间的变化。在这个特定的数据集中（在脚本执行开始时），温度传感器读取环境室温约为26°C。在脚本执行约10秒后，传感器被触摸加热到接近30°C。
- en: This can be seen in the sharp increase in temperature in the preceding diagram,
    which occurs at the 10-second mark. After letting go of the sensor, it starts
    the slow process of cooling down, until the sensor cools down past the 27°C mark
    over a 40-second period.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图表中可以看到温度的急剧上升，发生在10秒的标记处。放开传感器后，它开始缓慢冷却，直到在40秒的时间内冷却到27°C以下。
- en: See also
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于本示例的一些参考资料：
- en: Documentation on the temperature property can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.temperature](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.temperature).
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 温度属性的文档可以在[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.temperature](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.temperature)找到。
- en: Documentation on the CircuitPython `time` module can be found at [https://circuitpython.readthedocs.io/en/3.x/shared-bindings/time/__init__.html](https://circuitpython.readthedocs.io/en/3.x/shared-bindings/time/__init__.html).
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CircuitPython `time`模块的文档可以在[https://circuitpython.readthedocs.io/en/3.x/shared-bindings/time/__init__.html](https://circuitpython.readthedocs.io/en/3.x/shared-bindings/time/__init__.html)找到。
- en: Documentation on the built-in `locals` function can be found at [https://docs.python.org/3/library/functions.html#locals](https://docs.python.org/3/library/functions.html#locals).
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置`locals`函数的文档可以在[https://docs.python.org/3/library/functions.html#locals](https://docs.python.org/3/library/functions.html#locals)找到。
- en: Details on how thermistors work can be found at [https://www.omega.com/prodinfo/thermistor.html](https://www.omega.com/prodinfo/thermistor.html).
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于热敏电阻工作原理的详细信息可以在[https://www.omega.com/prodinfo/thermistor.html](https://www.omega.com/prodinfo/thermistor.html)找到。
- en: The project page and the application download for the LibreOffice Calc application
    can be found at [https://www.libreoffice.org/](https://www.libreoffice.org/).
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: LibreOffice Calc应用程序的项目页面和应用程序下载可以在[https://www.libreoffice.org/](https://www.libreoffice.org/)找到。
- en: Reading brightness levels from the light sensor
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从光传感器读取亮度级别
- en: In this recipe, we will learn how to create a loop that will repeatedly read
    the current light brightness from the light sensor. Getting live readings from
    the sensor can be a fun way to experiment with the sensor to see how sensitive
    it is to different light sources.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们将学习如何创建一个循环，以重复从光传感器读取当前的光亮度。从传感器获取实时读数可以是一种有趣的方式，可以用不同的光源来测试传感器的灵敏度。
- en: Ultimately, the techniques in this recipe can help you build projects that interact
    with their environment, depending on the presence or absence of light.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，本示例中的技术可以帮助您构建与环境交互的项目，取决于光的存在或缺失。
- en: Getting ready
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问Circuit Playground Express上的REPL来运行本示例中提供的代码。
- en: How to do it...
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作步骤...
- en: 'Follow these steps to learn how to read brightness levels from the light sensor:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从光传感器读取亮度级别：
- en: 'Execute the following block of code in the REPL:'
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中执行以下代码块：
- en: '[PRE6]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The number that's output is the light level of the room. Under normal lighting
    conditions, this should be a low number.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出的数字是房间的光照水平。在正常光照条件下，这个数字应该很低。
- en: 'Now, shine a flashlight on the light sensor while you run the following block
    of code:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在运行以下代码块时，用手电筒照射光传感器：
- en: '[PRE7]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You should see the value shoot up to a much higher value. The following code
    should be put into the `main.py` file and, when executed, will repeatedly print
    the current light levels that are being read from the light sensor:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到值飙升到一个更高的值。以下代码应该放入`main.py`文件中，并且在执行时，将重复打印从光传感器读取的当前光照水平：
- en: '[PRE8]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: How it works...
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. The `cpx` object exposes a property called `light`. This property
    will return the current light level reading from the light sensor. This value
    is expressed using lux units, which is a unit for measuring illuminance.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 首先的代码行导入了Circuit Playground Express库和`time`模块。`cpx`对象公开了一个名为`light`的属性。这个属性将返回来自光传感器的当前光亮度读数。这个值使用勒克斯单位表示，这是一个用于测量照度的单位。
- en: In this script, an infinite loop is run, which prints the current lights levels
    and then sleeps for 0.1 seconds before the next iteration starts.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个脚本中，运行一个无限循环，打印当前的光亮度，然后在下一次迭代开始之前休眠0.1秒。
- en: There's more...
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: A convenient way to experiment with the light sensor is to use the flashlight
    found on most smartphones. This flashlight is bright enough to create dramatic
    differences in the light readings on Circuit Playground Express. While running
    the main script in this recipe, watch how the values change as you bring the flashlight
    closer and farther away from the sensor.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一个方便的方法来尝试光传感器是使用大多数智能手机上的手电筒。这个手电筒足够明亮，可以在Circuit Playground Express上创建光读数的显著差异。在运行本教程中的主要脚本时，观察当您将手电筒靠近或远离传感器时数值的变化。
- en: The light sensor on this device is a phototransistor. This type of device is
    a transistor that, when exposed to different light levels, will cause a difference
    in the flow of current to its circuits. These electrical changes can be read to
    then calculate the light level.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 该设备上的光传感器是光电晶体。这种设备是一种晶体管，当暴露在不同的光亮度下时，会导致电流流向其电路的差异。这些电气变化可以被读取，然后计算光亮度。
- en: See also
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a couple of references regarding this recipe:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是关于这个教程的一些参考资料：
- en: Documentation on the `light` property can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.light](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.light).
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`light`属性的文档可以在[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.light](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.light)找到。
- en: More details on how phototransistors work can be found at [https://www.elprocus.com/phototransistor-basics-circuit-diagram-advantages-applications/](https://www.elprocus.com/phototransistor-basics-circuit-diagram-advantages-applications/).
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关光电晶体工作原理的更多细节可以在[https://www.elprocus.com/phototransistor-basics-circuit-diagram-advantages-applications/](https://www.elprocus.com/phototransistor-basics-circuit-diagram-advantages-applications/)找到。
- en: Creating a light meter
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个光度计
- en: In this recipe, we will use 10 NeoPixels to create a ring that will show the
    current light level. The ring will get smaller and bigger as the light level increases
    and decreases. This recipe will show you one way you can make your projects interact
    with light. It will also show a generic technique for turning the ring of pixels
    into a 10-level gauge that you can use in all sorts of projects.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将使用10个NeoPixels创建一个环，显示当前的光亮度。当光亮度增加和减少时，环会变得越来越小和越来越大。这个教程将向您展示一种可以使您的项目与光互动的方法。它还将展示将像素环转换为10级刻度的通用技术，您可以在各种项目中使用。
- en: Getting ready
  id: totrans-84
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要访问Circuit Playground Express上的REPL来运行本教程中提供的代码。
- en: How to do it...
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to create a light meter:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何创建光度计：
- en: 'Use the REPL to run the following lines of code:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用REPL来运行以下代码行：
- en: '[PRE9]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'At this point, you should see the first two pixels turn blue. Run the following
    line of code to see the first five pixels turn blue:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此时，您应该看到前两个像素变成蓝色。运行以下代码行，看到前五个像素变成蓝色：
- en: '[PRE10]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    it will create a light meter that gets bigger and smaller as the light levels
    get brighter and darker:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应该放入`main.py`文件中，当执行时，它将创建一个光度计，随着光线变亮和变暗，它会变得越来越大和越来越小。
- en: '[PRE11]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: How it works...
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. The color codes are defined for the colors blue and black. The
    brightness is then set to a comfortable level. The `gauge` function is then defined.
    This function receives a single integer argument, which should range its value
    from 0 to 10\. This value will be used to determine how many pixels will be turned
    blue in the ring of pixels. This function creates a visual display similar to
    a classic gauge, which shows a smaller or larger ring depending on the level of
    the value.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 首先的代码行导入了Circuit Playground Express库和`time`模块。为蓝色和黑色定义了颜色代码。然后将亮度设置为舒适的水平。然后定义了`gauge`函数。这个函数接收一个整数参数，其值应在0到10之间。这个值将用于确定在像素环中有多少像素会变成蓝色。这个函数创建了一个类似于经典刻度表的可视显示，根据数值的级别显示一个较小或较大的环。
- en: Then, the `last` variable is initialized. This variable is used to keep track
    of whether the gauge level has changed since the last loop. This extra step is
    needed to prevent the pixels from flickering because of unnecessarily turning
    them off and on in each loop. The gauge level is calculated by taking the current
    light level and dividing it by its maximum possible value, which happens to be
    330 on this board.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，初始化了`last`变量。这个变量用于跟踪刻度级别自上次循环以来是否发生了变化。这个额外的步骤是为了防止像素因不必要地在每个循环中关闭和打开而闪烁。刻度级别是通过获取当前光亮度并将其除以其最大可能值来计算的，这在这块板上恰好是330。
- en: This value is then multiplied by 10, which is the number of levels in the gauge.
    If the gauge level has changed, all the pixels are turned off and then the correct
    gauge level is displayed. This process is done during each iteration of the infinite
    loop with a delay of 50 milliseconds between each loop to create a responsive
    feeling when interacting with the light sensor.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 然后将该值乘以10，这是仪表中的级数。如果仪表级别发生了变化，所有像素将被关闭，然后显示正确的仪表级别。在每次无限循环的迭代过程中执行此过程，每个循环之间延迟50毫秒，以在与光传感器交互时产生响应的感觉。
- en: There's more...
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: In this recipe, the functionality to display the gauge was intentionally kept
    in its own function to encourage reusability. It can be used in other projects
    or kept in its own module, which can be imported and used whenever you have the
    need to display information as a gauge using the pixels that come with the board.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，显示仪表的功能被故意保留在自己的函数中，以鼓励可重用性。它可以在其他项目中使用，或者保留在自己的模块中，可以在需要使用板上的像素显示信息作为仪表时导入并使用。
- en: Another aspect of this recipe is the extra work that had to be done to address
    the light flickering issue that occurs when you unnecessarily turn pixels on and
    off repeatedly. When you change the state of many pixels all at once, flickering
    issues can occur if you don't do your implementation carefully. This is not a
    major issue in terms of the functionality of the light meter; it is more about
    creating a more pleasant visual experience when people use the light meter.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 此教程的另一个方面是为了解决当您不必要地重复打开和关闭像素时出现的光闪烁问题而必须进行的额外工作。当您一次改变许多像素的状态时，如果您的实现不小心，可能会出现闪烁问题。这在功能上并不是一个主要问题；更多的是在人们使用光度计时创造更愉悦的视觉体验。
- en: See also
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a couple of references regarding this recipe:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关此教程的一些参考资料：
- en: A project that uses Circuit Playground Express pixels to create a sound meter
    can be found at [https://learn.adafruit.com/adafruit-circuit-playground-express/playground-sound-meter](https://learn.adafruit.com/adafruit-circuit-playground-express/playground-sound-meter).
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在[https://learn.adafruit.com/adafruit-circuit-playground-express/playground-sound-meter](https://learn.adafruit.com/adafruit-circuit-playground-express/playground-sound-meter)找到使用Circuit
    Playground Express像素创建声音计的项目。
- en: More details on what a light meter is and their uses can be found at [https://shuttermuse.com/glossary/light-meter/](https://shuttermuse.com/glossary/light-meter/).
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关光度计及其用途的更多详细信息，请访问[https://shuttermuse.com/glossary/light-meter/](https://shuttermuse.com/glossary/light-meter/)。
- en: Reading data from the motion sensor
  id: totrans-105
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从运动传感器读取数据
- en: In this recipe, we will create a loop that continually reads from the accelerometer
    and prints the *x*, *y*, and *z* axes' data. Printing output will help us experiment
    with how the sensor will react to shaking the board or tilting it in different
    directions. Once you get a sense of how the sensor works, you can start incorporating
    it into projects to have your board react to tilt or acceleration.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个教程中，我们将创建一个循环，不断从加速度计中读取数据，并打印*x*、*y*和*z*轴的数据。打印输出将帮助我们实验传感器对摇动板或以不同方向倾斜的反应。一旦您了解了传感器的工作原理，就可以开始将其纳入项目中，使板对倾斜或加速做出反应。
- en: Getting ready
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问Circuit Playground Express上的REPL来运行此教程中提供的代码。
- en: How to do it...
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to read data from the motion sensor:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何从运动传感器中读取数据：
- en: 'Run the following lines of code in the REPL while the board is placed on a
    level surface with its buttons facing upward:'
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将板放在水平表面并使按钮朝上的情况下，在REPL中运行以下代码行：
- en: '[PRE12]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Run the following block of code while the board is placed with its buttons
    facing downward:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在将板放置并使按钮朝下的情况下运行以下代码块：
- en: '[PRE13]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    will continually print the current *x*, *y*, and *z* axes'' data from the accelerometer:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应放入`main.py`文件中，并在执行时将不断打印加速度计的当前*x*、*y*和*z*轴数据：
- en: '[PRE14]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: How it works...
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. An infinite loop is started, which will get readings from the accelerometer
    during each loop. The readings are unpacked into the *x*, *y*, and *z* variables.
    Then, the value of each axis is printed before the script goes to sleep for 0.1
    seconds and starts the next iteration.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行代码导入了Circuit Playground Express库和`time`模块。启动了一个无限循环，每次循环都会从加速度计中获取读数。读数被解压缩为*x*、*y*和*z*变量。然后，在脚本进入休眠0.1秒之前，打印出每个轴的值，并开始下一次迭代。
- en: There's more...
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: While this script is running, experiment with tilting the board in different
    directions. This sensor is quite sensitive and can give you a pretty accurate
    reading that's related to the tilt of the board. Beyond detecting the orientation
    of the board, it can also be used to detect acceleration on any of the three axes.
    As the script is running, also shake the board in different directions—you should
    see the readings related to acceleration shoot up. Depending on the direction
    you shake the board, different axes should react accordingly.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在运行此脚本时，尝试以不同方向倾斜板。该传感器非常敏感，可以为您提供与板倾斜相关的相当准确的读数。除了检测板的方向外，它还可以用于检测三个轴上的加速度。在运行脚本的同时，还可以以不同方向摇动板，您应该看到与加速度相关的读数上升。根据您摇动板的方向，不同的轴应该相应地做出反应。
- en: See also
  id: totrans-121
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a couple of references regarding this recipe:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关此教程的一些参考资料：
- en: Documentation on the `acceleration` property can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.acceleration](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.acceleration).
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`acceleration`属性的文档，请访问[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.acceleration](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.acceleration)。
- en: More details on the accelerometer that comes with Circuit Playground Express
    can be found at [https://learn.adafruit.com/circuit-playground-lesson-number-0/accelerometer](https://learn.adafruit.com/circuit-playground-lesson-number-0/accelerometer).
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关Circuit Playground Express附带的加速度计的更多详细信息，请访问[https://learn.adafruit.com/circuit-playground-lesson-number-0/accelerometer](https://learn.adafruit.com/circuit-playground-lesson-number-0/accelerometer)。
- en: Detecting a single or double tap
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测单次或双次轻敲
- en: In this recipe, we will learn how to configure the board to detect single or
    double taps. Sensor data from the accelerometer will be used to detect these tap
    events. This recipe shows you how to create applications that can react to people
    tapping the board.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何配置板以检测单次或双次轻敲。将使用来自加速度计的传感器数据来检测这些轻敲事件。本教程向您展示如何创建可以对人们敲击板做出反应的应用程序。
- en: Getting ready
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要访问Circuit Playground Express上的REPL，以运行本教程中提供的代码。
- en: How to do it...
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Follow these steps to learn how to detect a single or double tap:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何检测单次或双次轻敲：
- en: 'Execute the following block of code in the REPL:'
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中执行以下代码块：
- en: '[PRE15]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Tap the board once and then run the following block of code. You should get
    a `True` value for the first value, indicating that a tap was detected, and then
    a `False` value on the next check, which indicates that no new taps have been
    detected since the last check:'
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轻敲板一次，然后运行以下代码块。您应该会得到第一个值为`True`，表示检测到了轻敲，然后在下一次检查时得到一个`False`值，这表示自上次检查以来没有检测到新的轻敲：
- en: '[PRE16]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    will continually print whether or not a tap has been detected since the last check:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应放入`main.py`文件中，当执行时，将不断打印自上次检查以来是否检测到了轻敲：
- en: '[PRE17]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: How it works...
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理…
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. The tap detection algorithm is configured to detect single taps
    by setting `detect_taps` to `1`.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入Circuit Playground Express库和`time`模块。将敲击检测算法配置为通过将`detect_taps`设置为`1`来检测单次轻敲。
- en: An infinite loop is started, which will retrieve the value of the `tapped` property
    on each loop. This property will return `True` only if a single tap has been detected
    by the accelerometer since the last time taps were checked. The `sleep` function
    is then called to cause a 0.1-second delay before starting the next iteration.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 开始一个无限循环，每次循环将检索`tapped`属性的值。此属性仅在自上次检查以来加速度计检测到单次轻敲时才返回`True`。然后调用`sleep`函数，使其在开始下一次迭代之前延迟0.1秒。
- en: There's more...
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有…
- en: Modify the script by setting `detect_taps` to `2`. When you run it again, try
    and perform some single taps on the board. It shouldn't register anything.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将`detect_taps`设置为`2`来修改脚本。再次运行它，尝试在板上执行一些单次轻敲。它不应该注册任何内容。
- en: Now try performing some double taps. You should see them being detected. Try
    varying the amount of force you use to tap the board to see what level of force
    is required before a tap can be detected.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在尝试执行一些双次轻敲。您应该会看到它们被检测到。尝试改变您用于轻敲板的力量的大小，看看在检测到轻敲之前需要什么级别的力量。
- en: See also
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a few references regarding this recipe:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是有关本教程的一些参考资料：
- en: Documentation on the `detect_taps` property can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.detect_taps](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.detect_taps).
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`detect_taps`属性的文档，请访问[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.detect_taps](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.detect_taps)。
- en: Documentation on the `tapped` property can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.tapped](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.tapped).
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`tapped`属性的文档，请访问[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.tapped](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.tapped)。
- en: More details on the board's tap detection abilities can be found at [https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/tap](https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/tap).
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关板的轻敲检测功能的更多详细信息，请访问[https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/tap](https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/tap)。
- en: Detecting a shake
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检测摇晃
- en: In this recipe, we will learn how to poll the `shake` method and print it whenever
    the board has been shaken. Creating projects that can respond to the device being
    shaken can be really fun. The board can also be configured so that you can specify
    whether a light or heavy shake is required before it registers as a shake. This
    can open up new and creative ways to make people interact with your devices.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将学习如何轮询`shake`方法并在板被摇晃时打印它。创建可以响应设备被摇晃的项目可能非常有趣。还可以配置板，以便您可以指定在注册为摇晃之前需要轻或重摇晃。这可以开辟新的创造性方式，使人们与您的设备互动。
- en: Getting ready
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 您将需要访问Circuit Playground Express上的REPL，以运行本教程中提供的代码。
- en: How to do it...
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做…
- en: 'Follow these steps to learn how to detect a shake:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何检测摇晃：
- en: 'Use the REPL to run the following lines of code:'
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用REPL运行以下代码行：
- en: '[PRE18]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Shake the board repeatedly while you run the following block of code:'
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在运行以下代码块时，反复摇晃板子：
- en: '[PRE19]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    will continually print whether or not the board is currently being shaken:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应放入`main.py`文件中，执行时，将不断打印板子当前是否在摇晃：
- en: '[PRE20]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How it works...
  id: totrans-160
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. An infinite loop is started, which will print the result of the
    `shake` method on each loop. This method will return `True` or `False`, depending
    on whether or not the board is currently being shaken. The `sleep` function is
    then called to cause a 0.1-second delay before starting the next iteration.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入Circuit Playground Express库和`time`模块。启动一个无限循环，每次循环都会打印`shake`方法的结果。该方法将根据板子当前是否在摇晃而返回`True`或`False`。然后调用`sleep`函数，使下一次迭代之前延迟0.1秒。
- en: There's more...
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: Modify the script and give the `shake` function the value `20` as the first
    argument. Now, run the script and try and shake it. You should find that less
    force is needed for the board to register a shake event. The default value for
    the first argument, `shake_threshold`, is `30`, and the lower the value, the more
    sensitive the board will be to detecting shakes. Do not set the value to `10`
    or lower, otherwise it will be too sensitive and will continuously think that
    it has detected shakes.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 修改脚本，并将`shake`函数的值作为第一个参数设置为`20`。现在，运行脚本并尝试摇晃它。您会发现需要更少的力量才能使板子注册摇晃事件。第一个参数`shake_threshold`的默认值为`30`，数值越低，板子对检测摇晃的敏感度就越高。不要将值设置为`10`或更低，否则它会变得过于敏感，并不断地认为它已经检测到了摇晃。
- en: See also
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a couple of references regarding this recipe:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此方案的参考资料，请参阅：
- en: Documentation on the `shake` method can be found at [https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.shake](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.shake).
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关`shake`方法的文档可以在[https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.shake](https://circuitpython.readthedocs.io/projects/circuitplayground/en/latest/api.html#adafruit_circuitplayground.express.Express.shake)找到。
- en: Examples of using the `shake` method can be found at [https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/shake](https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/shake).
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关使用`shake`方法的示例，请参阅[https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/shake](https://learn.adafruit.com/circuitpython-made-easy-on-circuit-playground-express/shake)。
- en: Beeping on a shake
  id: totrans-168
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摇晃时发出哔哔声
- en: In this recipe, we will learn how to make the board beep every time you give
    it a shake. This is an interesting way to make the board respond to motion. The
    same approach can be used to make pixels respond to shakes instead of just beeps.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个方案中，我们将学习如何使板子在每次摇晃时发出哔哔声。这是一种有趣的方式，让板子对运动做出响应。相同的方法也可以用来使像素对摇晃做出响应，而不仅仅是发出哔哔声。
- en: Getting ready
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need access to the REPL on Circuit Playground Express to run the code
    presented in this recipe.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要访问Circuit Playground Express上的REPL，以运行本方案中提供的代码。
- en: How to do it...
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做...
- en: 'Follow these steps to learn how to make the board beep every time you shake
    it:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤学习如何使板子在每次摇晃时发出哔哔声：
- en: 'Run the following lines of code in the REPL; you should hear a beep:'
  id: totrans-174
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在REPL中运行以下代码行；您应该听到一声哔哔声：
- en: '[PRE21]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'The following code should be put into the `main.py` file and, when executed,
    will beep every time the board is shaken:'
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以下代码应放入`main.py`文件中，执行时，每次摇晃板子都会发出哔哔声：
- en: '[PRE22]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: How it works...
  id: totrans-178
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作原理...
- en: The first lines of code import the Circuit Playground Express library and the
    `time` module. An infinite loop is started, which will check to see whether the
    board is currently being shaken. If a shake event is detected, a short beep is
    played for 0.2 seconds. After this, check that the board then sleeps for 0.1 seconds
    before starting the process again.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 首先导入Circuit Playground Express库和`time`模块。启动一个无限循环，检查板子当前是否在摇晃。如果检测到摇晃事件，则会播放一个持续0.2秒的短暂哔哔声。之后，检查板子是否休眠0.1秒，然后再次开始该过程。
- en: There's more...
  id: totrans-180
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: You could incorporate the slide switch into this recipe so that people can choose
    a high or low shake threshold, depending on what position the slide switch is
    in. In this way, the slide switch can be used to make it easy or difficult for
    a shake to be detected. You could create a game where each shake increments a
    counter and plays a beep.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将滑动开关纳入此方案中，以便人们可以根据滑动开关的位置选择高或低的摇晃阈值。这样，滑动开关可以用来使检测摇晃变得容易或困难。您可以创建一个游戏，其中每次摇晃都会增加一个计数器并播放一声哔哔声。
- en: When the counter reaches 10, you could play a victory melody. Then, whoever
    achieves 10 shakes first wins. Interacting with devices using shakes instead of
    push-button presses can be a fun way to vary how people interact with your projects.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 当计数器达到10时，您可以播放一段胜利的旋律。然后，谁先达到10次摇晃就赢了。使用摇晃而不是按按钮来与设备交互，可以是一种有趣的方式来改变人们与您的项目互动的方式。
- en: See also
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另请参阅
- en: 'Here are a couple of references regarding this recipe:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 有关此方案的参考资料，请参阅：
- en: A guide to how accelerometers work can be found at [https://www.dimensionengineering.com/info/accelerometers](https://www.dimensionengineering.com/info/accelerometers).
  id: totrans-185
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关加速计工作原理的指南可以在[https://www.dimensionengineering.com/info/accelerometers](https://www.dimensionengineering.com/info/accelerometers)找到。
- en: Documentation on the Python library being used to interact with the onboard
    accelerometer can be found at [https://circuitpython.readthedocs.io/projects/lis3dh/en/latest/api.html](https://circuitpython.readthedocs.io/projects/lis3dh/en/latest/api.html).
  id: totrans-186
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有关用于与板载加速计交互的Python库的文档可以在[https://circuitpython.readthedocs.io/projects/lis3dh/en/latest/api.html](https://circuitpython.readthedocs.io/projects/lis3dh/en/latest/api.html)找到。
