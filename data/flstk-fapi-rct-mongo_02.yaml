- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Setting Up the Database with MongoDB
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用MongoDB设置数据库
- en: In this chapter, you will explore some of the main features of MongoDB through
    several simple yet illustrative examples. You will learn about the basic commands
    of the MongoDB Query API to start interacting with your data stored in a MongoDB
    database. You will learn the essential commands and methods that will enable you
    to insert, manage, query, and update your data.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将通过几个简单而具有说明性的示例来探索MongoDB的一些主要功能。您将了解MongoDB查询API的基本命令，以开始与存储在MongoDB数据库中的数据进行交互。您将学习到必要的命令和方法，使您能够插入、管理、查询和更新您的数据。
- en: The aim of this chapter is to help you understand how easy it is to set up a
    MongoDB database on your local machine or in the cloud and perform the operations
    that might be needed in a fast-paced web development process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目的是帮助您了解在本地机器或云上设置MongoDB数据库是多么容易，以及如何在快速发展的Web开发过程中执行可能需要的操作。
- en: Querying, through MongoDB methods and aggregation, is best learned by experimenting
    with data. This chapter utilizes real-world sample datasets provided by MongoDB
    Atlas that are loaded into your cloud database. You will learn to execute CRUD
    and aggregation queries against them.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 通过MongoDB方法和聚合进行查询，最佳的学习方式是通过实验数据。本章利用MongoDB Atlas提供的真实世界样本数据集，这些数据集已加载到您的云数据库中。您将学习如何对这些数据集执行CRUD和聚合查询。
- en: 'This chapter will cover the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: The structure of a MongoDB database
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB数据库的结构
- en: Installing MongoDB Community Server and tools
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装MongoDB社区服务器和工具
- en: Creating an Atlas cluster
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建Atlas集群
- en: MongoDB querying and CRUD operations
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB查询和CRUD操作
- en: Aggregation framework
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合框架
- en: Technical requirements
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: For this chapter, you will require MongoDB version 7.0.7 and Windows 11 (and
    Ubuntu 22.04 LTS).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章，您需要MongoDB版本7.0.7和Windows 11（以及Ubuntu 22.04 LTS）。
- en: 'MongoDB version 7.0 is compatible with the following:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB版本7.0与以下兼容：
- en: Windows 11, Windows Server 2019, or Windows Server 2022 (64-bit versions)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows 11、Windows Server 2019或Windows Server 2022（64位版本）
- en: Ubuntu 20.04 LTS (Focal) and Ubuntu 22.04 LTS (Jammy) for Linux (64-bit releases)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ubuntu 20.04 LTS（Focal）和Ubuntu 22.04 LTS（Jammy）Linux（64位版本）
- en: 'The following are recommended system configurations:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些推荐的系统配置：
- en: A desktop or laptop with at least 8 GB of RAM.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少配备8 GB RAM的台式机或笔记本电脑。
- en: There are no CPU requirements specified as such but make sure it’s modern (a
    multi-core processor) to ensure efficient performance.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 没有指定CPU要求，但请确保它是现代的（多核处理器），以确保高效性能。
- en: The structure of a MongoDB database
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB数据库的结构
- en: MongoDB is widely regarded as the leading NoSQL database in terms of popularity
    and usage—its power, ease of use, and versatility make it an excellent choice
    for large- and small-scale projects. Its scalability and performance enable the
    data layer of your app to have a very solid foundation.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB在流行度和使用方面被广泛认为是领先的NoSQL数据库——其强大的功能、易用性和多功能性使其成为大型和小型项目的绝佳选择。其可扩展性和性能使得您的应用程序的数据层拥有非常坚实的基础。
- en: 'In the following sections, you will take a deeper look into the basic concepts
    and building blocks of MongoDB: the document, the collection, and the database.
    Since this book takes a bottom-up approach, you will start from the very bottom
    and see an overview of the simplest data structures available in MongoDB and then
    take it up from there into documents, collections, and so on.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下章节中，您将更深入地了解MongoDB的基本概念和构建块：文档、集合和数据库。由于本书采用自下而上的方法，您将从最底层开始，了解MongoDB中可用的最简单数据结构的概述，然后从这里开始，进入文档、集合等。
- en: Documents
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文档
- en: MongoDB is a document-oriented database. But what does that actually mean?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB是一个面向文档的数据库。但这实际上意味着什么呢？
- en: In MongoDB, documents serve a similar purpose to rows in a traditional relational
    database. Each document in MongoDB is a data structure that consists of key-value
    pairs, representing a single record. Data stored in MongoDB offers great flexibility
    to application developers to model their data as per their needs and allows them
    to easily evolve the schema as their application requirements change in the future.
    MongoDB has a flexible schema model, which essentially means that you can have
    different fields in different documents within a collection. You can also have
    different data types for fields across documents based on your needs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在MongoDB中，文档类似于传统关系数据库中的行。MongoDB中的每个文档都是一个由键值对组成的数据结构，代表一条记录。存储在MongoDB中的数据为应用程序开发者提供了极大的灵活性，使他们能够根据需要建模数据，并允许他们随着应用程序需求的变化在未来轻松地演进模式。MongoDB具有灵活的模式模型，这基本上意味着你可以在集合中的不同文档中拥有不同的字段。根据需要，你还可以为文档中的字段使用不同的数据类型。
- en: However, if your application requires a more consistent structure of the data
    throughout the documents in a collection, you can use schema validation rules
    in MongoDB to enforce consistency. MongoDB empowers you to store data in a way
    that makes the most sense for your application needs.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，如果你的应用程序需要在集合中的文档中保持数据的一致结构，你可以使用MongoDB中的模式验证规则来强制一致性。MongoDB使你能够以对应用程序需求最有意义的方式存储数据。
- en: Documents in MongoDB are just an ordered set of key-value pairs. In this book,
    the terms **key** and **field** are used interchangeably as they represent the
    same thing. This structure, as you will explore later, corresponds with data structures
    in every programming language; in Python, you will see that this structure is
    a dictionary and lends itself perfectly to the flow of data of a web app or a
    desktop application.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB中的文档只是一个有序的键值对集合。在这本书中，术语**键**和**字段**可以互换使用，因为它们代表同一事物。这种结构，正如你稍后将要探索的，与每种编程语言中的数据结构相对应；在Python中，你会发现这种结构是一个字典，非常适合Web应用程序或桌面应用程序的数据流。
- en: 'The rules for creating documents are pretty simple: the key/field name must
    be a string, with a few exception that you can read more about in the docs, and
    a document cannot contain duplicate key names. Remember that MongoDB is case sensitive.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 创建文档的规则相当简单：键/字段名称必须是字符串，有一些例外，你可以在文档中了解更多信息，并且一个文档不能包含重复的键名。请记住，MongoDB是区分大小写的。
- en: 'In this chapter, you will load a sample dataset into your MongoDB Atlas cluster
    called `sample_mflix`. The dataset has many collections, but one that is of interest
    to us in this chapter is the `movies` collection, which contains documents that
    describe movies. The following document could be in this collection:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将把一个名为`sample_mflix`的示例数据集加载到你的MongoDB Atlas集群中。该数据集包含许多集合，但本章中对我们感兴趣的是`movies`集合，它包含描述电影的文档。以下文档可能存在于这个集合中：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: When it comes to nesting documents within documents, MongoDB supports 100 levels
    of nesting, which is a limit you probably won’t reach in most applications.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到文档中的文档嵌套时，MongoDB支持100层嵌套，这在大多数应用程序中你可能不会达到这个限制。
- en: Supported data types in MongoDB
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MongoDB支持的数据类型
- en: MongoDB allows you to store any of the BSON data types as field values. BSON
    is very closely related to JSON and it stands for “Binary JSON.” BSON’s binary
    structure makes it faster and adds native support for more data types than JSON.
    One of the first important decisions when designing any type of application is
    the choice of data types. As a developer, you would never want to use the wrong
    tools for the job at hand.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB允许你将任何BSON数据类型作为字段值存储。BSON与JSON非常相似，它代表“二进制JSON”。BSON的二元结构使其更快，并且比JSON支持更多的数据类型。在设计任何类型的应用程序时，最重要的决定之一是数据类型的选择。作为一个开发者，你永远不会想为当前的工作使用错误工具。
- en: Note
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'The full list of supported data types in MongoDB can be found in the official
    documentation: [https://www.mongodb.com/docs/mongodb-shell/reference/data-types/](https://www.mongodb.com/docs/mongodb-shell/reference/data-types/).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB支持的所有数据类型的完整列表可以在官方文档中找到：[https://www.mongodb.com/docs/mongodb-shell/reference/data-types/](https://www.mongodb.com/docs/mongodb-shell/reference/data-types/)。
- en: 'Some of the most important data types supported by MongoDB are:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB支持的一些最重要的数据类型包括：
- en: '**Strings**: These are probably the most basic and universal data type in MongoDB,
    and they are used to represent all text fields in a document.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**字符串**：这些可能是MongoDB中最基本和最通用的数据类型，它们用于表示文档中的所有文本字段。'
- en: '**Numbers**: MongoDB supports different types of numbers, including:'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字**：MongoDB支持不同类型的数字，包括：'
- en: '**int**: 32-bit integer'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**int**：32位整数'
- en: '**long**: 64-bit integer'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**long**：64位整数'
- en: '**double**: 64-bit floating point'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**double**：64位浮点数'
- en: '**decimal**: 128-bit decimal-based floating point'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**decimal**：基于128位的十进制浮点数'
- en: '`true` or `false` value; they are written without quotes since you do not want
    them to be interpreted as strings.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`true`或`false`值；它们不使用引号书写，因为你不希望它们被解释为字符串。'
- en: '**Objects or embedded documents**: In MongoDB, fields within a document can
    contain embedded documents, allowing for complex data structuring within a single
    document. This capability supports the deep nesting of JSON-like structures, facilitating
    flexible and hierarchical data modeling.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对象或内嵌文档**：在MongoDB中，文档内的字段可以包含内嵌文档，允许在单个文档中进行复杂的数据结构化。这种能力支持类似JSON的结构深层嵌套，便于灵活和分层的数据建模。'
- en: '**Arrays**: Arrays can contain zero or more values in a list-like structure.
    The elements of the array can be any MongoDB data type, including other documents
    and arrays. They are zero-based and particularly suited for making **embedded
    relationships**. For instance, you could store all of the post comments inside
    the blog post document itself, along with a timestamp and the user that made the
    comment. Arrays can benefit from the standard JavaScript array methods for fast
    editing, pushing, and other methods.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数组**：数组可以包含零个或多个值，具有类似列表的结构。数组的元素可以是任何MongoDB数据类型，包括其他文档和数组。它们是从零开始的，特别适合创建**内嵌关系**。例如，你可以在博客文章文档本身中存储所有评论，包括时间戳和发表评论的用户。数组可以利用标准的JavaScript数组方法进行快速编辑、推送和其他操作。'
- en: '`_id` that acts as the primary key. If an inserted document omits the `_id`
    field, MongoDB automatically generates an ObjectId for the `_id` field that is
    used to uniquely identify a document in the collection. ObjectId values are 12
    bytes in length. They are small, likely unique, fast to generate, and ordered.
    These ObjectIds are extensively used as keys for traditional relationships – ObjectIds
    are automatically indexed.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_id`作为主键。如果插入的文档省略了`_id`字段，MongoDB会自动为`_id`字段生成一个ObjectId，用于在集合中唯一标识文档。ObjectId的长度为12字节。它们体积小、可能唯一、生成速度快、有序。这些ObjectId广泛用作传统关系的键——ObjectId会自动索引。'
- en: '**Dates**: Though JSON does not support date types and stores them as plain
    strings, MongoDB’s BSON format supports date types explicitly. They represent
    the 64-bit number of milliseconds since the Unix epoch (January 1, 1970). All
    dates are stored in UTC and have no time zone associated. A BSON date type is
    signed. Negative values represent dates before 1970.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**日期**：尽管JSON不支持日期类型并将它们存储为普通字符串，但MongoDB的BSON格式明确支持日期类型。它们表示自Unix纪元（1970年1月1日）以来的64位毫秒数。所有日期都存储为UTC，没有时区关联。BSON日期类型是有符号的。负值表示1970年之前的日期。'
- en: '**Binary data**: Binary data fields can store arbitrary binary data and are
    the only way to save non-UTF-8 strings to a database. These fields can be used
    in conjunction with MongoDB’s GridFS filesystem to store images, for example.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**二进制数据**：二进制数据字段可以存储任意二进制数据，是保存非UTF-8字符串到数据库的唯一方式。这些字段可以与MongoDB的GridFS文件系统结合使用，例如存储图像。'
- en: '**Null**: This can represent a null value or a nonexistent field, and we can
    even store JavaScript functions as a different data type.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Null**：这可以表示null值或不存在的字段，我们甚至可以将JavaScript函数作为不同的数据类型存储。'
- en: Now that you have an idea of what types of fields are available in MongoDB and
    how you can map your business logic to a (flexible) schema, it is time to get
    introduced to collections—groups of documents and a counterpart to a table in
    the relational database world.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了MongoDB中可用的字段类型以及如何将你的业务逻辑映射到（灵活的）模式中，是时候介绍集合了——文档的组，在关系数据库世界中与表相对应。
- en: Collections and databases
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集合和数据库
- en: 'Even though you can store multiple schemas in the same collection, there are
    many reasons to store your data in multiple databases and multiple collections:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管你可以在同一个集合中存储多个模式，但有许多理由将你的数据存储在多个数据库和多个集合中：
- en: '**Data separation**: Collections allow you to logically separate different
    types of data. For example, you can have a collection for user data, another collection
    for product data, and yet another collection for order data. This separation makes
    it easier to manage and query specific types of data.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据分离**：集合允许你逻辑上分离不同类型的数据。例如，你可以有一个用于用户数据的集合，另一个用于产品数据的集合，还有一个用于订单数据的集合。这种分离使得管理和查询特定类型的数据变得更加容易。'
- en: '**Performance optimization**: By separating data into different collections,
    you can optimize performance by indexing and querying specific collections more
    efficiently. This can improve query performance and reduce the amount of data
    that needs to be scanned.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能优化**：通过将数据分离到不同的集合中，你可以通过更有效地索引和查询特定集合来优化性能。这可以提高查询性能并减少需要扫描的数据量。'
- en: '**Data locality**: Grouping documents of the same type in a collection will
    require less disk seek time, and considering that indexing is defined by collection,
    the querying is much more efficient.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据局部性**：在集合中将相同类型的文档分组将需要更少的磁盘查找时间，考虑到索引是由集合定义的，查询效率会更高。'
- en: Although a single instance of MongoDB can host several databases at once, it
    is considered good practice to keep all the document collections used in an application
    inside a single database.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然单个 MongoDB 实例可以同时托管多个数据库，但将应用程序中使用的所有文档集合都保存在单个数据库中是一种良好的做法。
- en: Note
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'When you install MongoDB, there will be three databases created and their names
    cannot be used for your application database: `admin`, `local`, and `config`.
    They are built-in databases that shouldn’t be replaced, so avoid accidentally
    naming your database the same way or making any changes to these databases.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当你安装 MongoDB 时，将创建三个数据库，它们的名称不能用于你的应用程序数据库：`admin`、`local` 和 `config`。它们是内置数据库，不应被替换，因此请避免意外地将你的数据库命名为相同的方式或对这些数据库进行任何更改。
- en: Options to install the MongoDB database
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 MongoDB 数据库的选项
- en: After reviewing the basic terms, concepts, and structure of the MongoDB database,
    it is time to learn how to set up a MongoDB database server locally and in the
    cloud.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在回顾了 MongoDB 数据库的基本术语、概念和结构之后，现在是时候学习如何在本地和云端设置 MongoDB 数据库服务器了。
- en: The local database setup is convenient for quick prototyping that doesn’t even
    require an internet connection. However, we recommend that you use a cloud-hosted
    database in MongoDB Atlas when you’re setting up a database to use as the backend
    in future chapters.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 本地数据库设置方便快速原型设计，甚至不需要互联网连接。然而，我们建议你在设置数据库作为未来章节中用作后端时，使用 MongoDB Atlas 提供的云托管数据库。
- en: MongoDB Atlas offers many benefits over the local installation. First, it is
    easy to set up, and, as you will see, you can get it up and running literally
    in minutes with a generous free-tier database ready for work. MongoDB handles
    all the operational aspects of the database, such as provisioning, scaling, backup,
    and monitoring.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas 相比本地安装提供了许多优势。首先，它易于设置，正如你将看到的，你可以在几分钟内将其设置好并运行起来，一个慷慨的免费层数据库已经准备好工作。MongoDB
    处理数据库的所有操作方面，如配置、扩展、备份和监控。
- en: Atlas takes away much of the manual setup and guarantees availability. Other
    benefits include the involvement of the MongoDB team (which tries to implement
    best practices), high security by default with access control, firewalls and granular
    access control, automated backups (depending on the tier), and the possibility
    to be productive right away.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas 取代了大部分手动设置并保证了可用性。其他好处包括 MongoDB 团队的参与（他们试图实施最佳实践），默认情况下具有访问控制、防火墙和细粒度访问控制、自动备份（取决于层级），以及立即开始生产力的可能性。
- en: Installing MongoDB and related tools
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MongoDB 和相关工具
- en: 'MongoDB is not just a database service provider, but a full-fledged developer
    data platform that has a set of technologies built around the core database to
    meet all your data needs and improve your productivity as a developer. Let’s examine
    the following components that you will be installing or using in the following
    sections:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 不仅仅是一个数据库服务提供商，而是一个完整的开发者数据平台，它围绕核心数据库构建了一系列技术，以满足你所有的数据需求并提高你的开发效率。让我们检查以下组件，你将在接下来的章节中安装或使用它们：
- en: '**MongoDB Community Edition**: A free version of MongoDB that runs on all major
    operating systems. It is what you are going to use to play around with data locally.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB 社区版**：MongoDB 的免费版本，可在所有主要操作系统上运行。这是你将在本地玩转数据时使用的版本。'
- en: '**MongoDB Compass**: A **graphical user interface** (**GUI**) for managing,
    querying, aggregating, and analyzing MongoDB data in a visual environment. Compass
    is a mature and useful tool that you’ll be using throughout your initial querying
    and aggregation explorations.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB Compass**：一个用于在可视化环境中管理、查询、聚合和分析MongoDB数据的**图形用户界面（GUI**）。Compass是一个成熟且实用的工具，您将在初始查询和聚合探索过程中使用它。'
- en: '**MongoDB Atlas**: The database-as-a-service solution from MongoDB. This offering
    is one of the main reasons MongoDB is a central part of the FARM stack. It is
    relatively easy to set up and it relieves you from manually administering the
    database.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB Atlas**：MongoDB的数据库即服务解决方案。这一服务是MongoDB成为FARM堆栈核心部分的主要原因之一。它相对容易设置，并且可以减轻您手动管理数据库的负担。'
- en: '`mongosh`): A command-line shell that not only performs simple **create**,
    **read**, **update**, and **delete** (**CRUD**) operations on your database but
    also enables administrative tasks such as creating and deleting databases, starting
    and stopping services, and similar jobs.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: (`mongosh`)：一个命令行外壳，不仅可以在您的数据库上执行简单的**创建**、**读取**、**更新**和**删除**（**CRUD**）操作，还允许执行管理任务，如创建和删除数据库、启动和停止服务以及类似的工作。
- en: '**MongoDB Database Tools**: Several command-line utilities that allow administrators
    and developers to export or import data to and from a database, provide diagnostics,
    or enable manipulation of large files stored in MongoDB’s GridFS system.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MongoDB数据库工具**：几个命令行实用程序，允许管理员和开发者将数据从数据库导出或导入，提供诊断功能，或允许操作存储在MongoDB的GridFS系统中的大文件。'
- en: This chapter will focus on the procedure to have a fully functional installation.
    Check the installation instructions that correspond to your operating system.
    This chapter includes instructions for Windows, Linux, and macOS.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将重点介绍实现完全功能安装的流程。请检查与您的操作系统对应的安装说明。本章包括Windows、Linux和macOS的安装说明。
- en: Installing MongoDB and Compass on Windows
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上安装MongoDB和Compass
- en: In this section, you will learn how to install the latest version of MongoDB
    Community Edition, which at the time of writing is 7.0\. MongoDB Community is
    only supported on 64-bit versions of Windows on x86_64 architecture. Windows versions
    supported are Windows 11, Windows Server 2019, and Windows Server 2022\. To install
    MongoDB and Compass, you can refer to the following steps.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何安装MongoDB社区版最新版本，撰写本文时为7.0。MongoDB社区版仅支持x86_64架构的64位Windows版本。支持的Windows版本包括Windows
    11、Windows Server 2019和Windows Server 2022。要安装MongoDB和Compass，您可以参考以下步骤。
- en: Note
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: We strongly advise you to check the instructions on the MongoDB website ([https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-windows/](https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-windows/))
    to ensure you have access to the latest information, as they might slightly change.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们强烈建议您检查MongoDB网站上的说明（[https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-windows/](https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-windows/)），以确保您能够获取最新信息，因为它们可能会有所变化。
- en: 'To download the installer, head over to the MongoDB Download Center at [https://www.mongodb.com/try/download/community](https://www.mongodb.com/try/download/community),
    select the Windows version, and click on **Download** as follows:'
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要下载安装程序，请访问MongoDB下载中心[https://www.mongodb.com/try/download/community](https://www.mongodb.com/try/download/community)，选择Windows版本，然后点击**下载**，如下所示：
- en: '![](img/B22406_02_01.jpg)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_01.jpg)'
- en: 'Figure 2.1: MongoDB download page'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.1：MongoDB下载页面
- en: Next, execute it. If a security prompt displays **Open Executable File**, select
    **Yes** and proceed to the MongoDB setup wizard.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，执行它。如果出现安全提示“打开可执行文件”，请选择**是**，然后继续进入MongoDB设置向导。
- en: Read the license agreement, select the checkbox, and then click on **Next**.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读许可协议，勾选复选框，然后点击**下一步**。
- en: 'This is an important screen. When asked which type of setup to choose, select
    **Complete**, as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这是一个重要的屏幕。当被问及选择哪种设置类型时，请选择**完整**，如下所示：
- en: '![](img/B22406_02_02.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_02.jpg)'
- en: 'Figure 2.2: Complete installation'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.2：完整安装
- en: The next wizard will ask you whether you want MongoDB to run as a Windows network
    service (that’s what you should prefer) or as a local and domain service. Leave
    the default values selected and proceed to the next step without making any changes.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一个向导将询问您是否希望MongoDB作为Windows网络服务（您应该选择这种方式）或本地和域服务运行。保留默认值，不要做任何更改，直接进入下一步。
- en: 'Another wizard will appear prompting whether you want to install Compass, MongoDB’s
    GUI tool for database management. Select the checkbox and proceed to install it:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 另一个向导将出现，提示你是否想安装 Compass，MongoDB 的数据库管理 GUI 工具。选择复选框并继续安装：
- en: '![](img/B22406_02_03.jpg)'
  id: totrans-86
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_IMG
  zh: '![img/B22406_02_03.jpg](img/B22406_02_03.jpg)'
- en: 'Figure 2.3: Install Compass'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.3：安装 Compass
- en: Finally, the **User Account Control** (**UAC**) Windows warning screen will
    pop up, and you should select **Yes**.
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，Windows 的 **用户账户控制**（**UAC**）警告屏幕将弹出，你应该选择 **是**。
- en: Now that you have installed MongoDB Community Server on your local machine,
    the next section will show you how to install other necessary tools that you will
    be using throughout this book.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经在本地机器上安装了 MongoDB Community Server，下一节将展示如何安装你将在本书中使用的其他必要工具。
- en: Installing the MongoDB Shell (mongosh)
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装 MongoDB Shell (mongosh)
- en: After installing MongoDB Community Server and Compass on your computer, you
    will next install `mongosh`, the MongoDB Shell.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在您的计算机上安装 MongoDB Community Server 和 Compass 后，接下来将安装 `mongosh`，MongoDB Shell。
- en: Note
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: 'For instructions on other operating systems, please visit the MongoDB documentation:
    [https://www.mongodb.com/docs/mongodb-shell/install/](https://www.mongodb.com/docs/mongodb-shell/install/).'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 关于其他操作系统的说明，请访问 MongoDB 文档：[https://www.mongodb.com/docs/mongodb-shell/install/](https://www.mongodb.com/docs/mongodb-shell/install/).
- en: 'Here’s how you can do it for Windows:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是如何在 Windows 上操作的：
- en: Navigate to the MongoDB Download Center ([https://www.mongodb.com/try/download/shell](https://www.mongodb.com/try/download/shell))
    and, in the **Tools** section, select **MongoDB Shell**.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到 MongoDB 下载中心 ([https://www.mongodb.com/try/download/shell](https://www.mongodb.com/try/download/shell))，在
    **工具** 部分选择 **MongoDB Shell**。
- en: From the dropdowns, select the Windows version and the **msi** package and click
    on **Download**.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择 Windows 版本和 **msi** 包，然后点击 **下载**。
- en: '![](img/B22406_02_04.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![img/B22406_02_04.jpg](img/B22406_02_04.jpg)'
- en: 'Figure 2.4: Download the MongoDB Shell'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.4：下载 MongoDB Shell
- en: 'Next, locate the **msi** package on your computer and execute it. If a security
    prompt asks **Open Executable File**, select **Yes** and proceed to the MongoDB
    setup wizard. The wizard will open the following page. Click on **Next**:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在您的计算机上找到 **msi** 包并执行它。如果安全提示要求 **打开可执行文件**，选择 **是** 并继续到 MongoDB 设置向导。向导将打开以下页面。点击
    **下一步**：
- en: '![](img/B22406_02_05.jpg)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![img/B22406_02_05.jpg](img/B22406_02_05.jpg)'
- en: 'Figure 2.5: The MongoDB Shell Setup Wizard'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.5：MongoDB Shell 设置向导
- en: In the prompt, select the destination folder for installing `mongosh`, or leave
    the default option as it is if it looks good to you, and then finish the installation.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在提示中，选择安装 `mongosh` 的目标文件夹，或者如果你觉得默认选项看起来不错，就保持默认，然后完成安装。
- en: 'At this point, you should be able to test whether MongoDB is running (as a
    service). Enter the following command in the command prompt of your choice (preferably,
    use **cmder**, available at [https://cmder.app](https://cmder.app)):'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 到目前为止，你应该能够测试 MongoDB 是否正在运行（作为服务）。在你的选择命令提示符中输入以下命令（最好是使用 **cmder**，可在 [https://cmder.app](https://cmder.app)
    获取）：
- en: '[PRE1]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'You should see various notifications and a tiny prompt denoted with `>`. Try
    typing the following:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你应该会看到各种通知和一个标记为 `>` 的小提示。尝试输入以下内容：
- en: '[PRE2]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If you see the automatically generated `admin`, `config`, and `locals` databases,
    you should be good to go.
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你看到自动生成的 `admin`、`config` 和 `local` 数据库，你应该可以继续了。
- en: Now, check the installation of Compass. On Windows, you should be able to find
    it in your start menu under **MongoDBCompass** (no spacing).
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，检查 Compass 的安装情况。在 Windows 上，你应该能在开始菜单下的 **MongoDBCompass**（无空格）中找到它。
- en: 'If you just click the `27017` and you should be able to see all of the databases
    that you saw when you used the command line with MongoDB: `admin`, `config`, and
    `local`.'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你只是点击 `27017`，你应该能看到当你使用 MongoDB 命令行时看到的全部数据库：`admin`、`config` 和 `local`。
- en: MongoDB Database Tools
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB 数据库工具
- en: 'The MongoDB Database Tools are a collection of command-line utilities for working
    with a MongoDB deployment. Some of the common database tools are as follows:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 数据库工具是一组用于与 MongoDB 部署一起使用的命令行实用程序。以下是一些常见的数据库工具：
- en: '`mongoimport`: Imports content from an extended JSON, CSV, or TSV export file'
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mongoimport`：从扩展的 JSON、CSV 或 TSV 导出文件导入内容'
- en: '`mongoexport`: Produces a JSON or CSV export of data stored in a `mongod` instance'
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mongoexport`：从 `mongod` 实例中生成 JSON 或 CSV 导出'
- en: '`mongodump`: Creates a binary export of the contents of a `mongod` database'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mongodump`：创建 `mongod` 数据库内容的二进制导出'
- en: There are some other tools, such as `mongorestore`, `bsondump`, `mongostat`,
    `mongotop`, and `mongofiles`. The MongoDB Database Tools can be installed with
    an MSI installer (or downloaded as a ZIP archive).
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 有一些其他工具，例如 `mongorestore`、`bsondump`、`mongostat`、`mongotop` 和 `mongofiles`。MongoDB
    数据库工具可以使用 MSI 安装程序安装（或作为 ZIP 存档下载）。
- en: Note
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `msi` package can be downloaded from the MongoDB Download Center ([https://www.mongodb.com/try/download/database-tools](https://www.mongodb.com/try/download/database-tools)).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`msi` 软件包可以从 MongoDB 下载中心下载（[https://www.mongodb.com/try/download/database-tools](https://www.mongodb.com/try/download/database-tools)）。'
- en: After downloading, you can follow the installation instructions provided in
    the MongoDB documentation ([https://www.mongodb.com/docs/database-tools/installation/installation-windows/](https://www.mongodb.com/docs/database-tools/installation/installation-windows/)).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 下载后，您可以按照 MongoDB 文档中提供的安装说明进行操作（[https://www.mongodb.com/docs/database-tools/installation/installation-windows/](https://www.mongodb.com/docs/database-tools/installation/installation-windows/)）。
- en: The next section provides a walk-through of the process of installing MongoDB
    on a standard Linux distribution.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍在标准 Linux 发行版上安装 MongoDB 的过程。
- en: 'Installing MongoDB and Compass on Linux: Ubuntu'
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Linux 上安装 MongoDB 和 Compass：Ubuntu
- en: Linux offers numerous benefits for the development and management of local servers,
    but most importantly, should you decide that the database-as-a-service of MongoDB
    isn’t what you want to use anymore, you will probably want to work on a Linux-based
    server.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Linux 为本地服务器的开发和管理工作提供了许多好处，但最重要的是，如果您决定不再使用 MongoDB 的数据库即服务，您可能希望在一个基于 Linux
    的服务器上工作。
- en: In this book, we will go over the installation process on Ubuntu version 22.04
    LTS (Jammy), while the MongoDB version also supports Ubuntu 20.04 LTS (Focal)
    on x86_64 architecture. The necessary steps to install MongoDB Ubuntu will be
    listed here, but you should always check the MongoDB Ubuntu installation page
    ([https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/](https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/))
    for recent changes. The process, however, shouldn’t change.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将介绍在 Ubuntu 22.04 LTS（Jammy）版本上的安装过程，同时 MongoDB 版本也支持 x86_64 架构的 Ubuntu
    20.04 LTS（Focal）。安装 MongoDB Ubuntu 所需的步骤将在此列出，但您应始终检查 MongoDB Ubuntu 安装页面（[https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/](https://www.mongodb.com/docs/manual/tutorial/install-mongodb-on-ubuntu/)）以了解最近的变化。然而，过程本身不应发生变化。
- en: The following actions are to be performed in a Bash shell. Download the public
    key that will allow you to install MongoDB, then you will create a list file and
    reload the package manager. Similar steps are required for other Linux distributions,
    so be sure to check the documentation on the website of your chosen distribution.
    Finally, you will perform the actual installation of MongoDB through the package
    manager and start the service.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 以下操作需要在 Bash shell 中执行。下载允许您安装 MongoDB 的公钥，然后您将创建一个列表文件并重新加载包管理器。对于其他 Linux
    发行版，也需要执行类似的步骤，因此请确保检查您选择发行版的网站上的文档。最后，您将通过包管理器执行 MongoDB 的实际安装并启动服务。
- en: 'It is always preferable to skip the packages provided by the Linux distribution
    as they are often not updated to the latest version. Perform the following steps
    to install MongoDB on Ubuntu:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 总是最好跳过 Linux 发行版提供的软件包，因为它们通常没有更新到最新版本。按照以下步骤在 Ubuntu 上安装 MongoDB：
- en: Import the public key used by the package management system as follows.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照以下方式导入软件包管理系统中使用的公钥。
- en: 'You need to have `gnupg` and `curl` installed on your system. If you don’t
    already have them, you can install them by running the following command:'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您的系统上需要安装 `gnupg` 和 `curl`。如果您还没有安装它们，可以通过运行以下命令进行安装：
- en: '[PRE3]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'To import the MongoDB public GPG key, run the following command:'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要导入 MongoDB 公共 GPG 密钥，请运行以下命令：
- en: '[PRE4]'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Create the `/etc/apt/sources.list.d/mongodb-org-7.0.list` file for Ubuntu 22.04
    (Jammy) by running the following command:'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 通过运行以下命令为 Ubuntu 22.04（Jammy）创建 `/etc/apt/sources.list.d/mongodb-org-7.0.list`
    文件：
- en: '[PRE5]'
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Reload the local package database with:'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下命令重新加载本地包数据库：
- en: '[PRE6]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Install the MongoDB package. To install the latest stable version, issue the
    following command:'
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装 MongoDB 软件包。要安装最新稳定版本，请执行以下命令：
- en: '[PRE7]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Run MongoDB Community Edition. If you follow these instructions and install
    MongoDB through the package manager, the `/var/lib/mongodb` data directory and
    the `/var/log/mongodb` log directory will be created during the installation.
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行MongoDB社区版。如果您遵循这些说明并通过包管理器安装MongoDB，则在安装过程中将创建`/var/lib/mongodb`数据目录和`/var/log/mongodb`日志目录。
- en: 'You can start the `mongod` process with:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下命令启动`mongod`进程：
- en: '[PRE8]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Run the following command first:'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 首先运行以下命令：
- en: '[PRE9]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then run the `start` command (shown in *step* *5*) again.
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后再次运行`start`命令（如*步骤* *5*所示）。
- en: 'You should be able to start using the MongoDB Shell (`mongosh`) by simply typing:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您只需简单地输入以下命令即可开始使用MongoDB Shell (`mongosh`)：
- en: '[PRE10]'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: MongoDB isn’t particularly different than any other Linux software when it comes
    to installation and process management. However, if you have any issues with the
    installation, the first recommendation would be to visit the MongoDB Linux installation
    page.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 当涉及到安装和进程管理时，MongoDB与其他Linux软件并没有特别不同。然而，如果您在安装过程中遇到任何问题，第一个建议是访问MongoDB Linux安装页面。
- en: Setting up Atlas
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Atlas
- en: MongoDB Atlas—a cloud database service provided by MongoDB—is one of the strongest
    selling points of MongoDB.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas——由MongoDB提供的云数据库服务——是MongoDB最强大的卖点之一。
- en: MongoDB Atlas is a fully managed database service, which means that MongoDB
    handles the infrastructure management, database setup, configuration, and maintenance
    tasks for you. This allows you to focus on developing your applications instead
    of managing the underlying infrastructure.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB Atlas是一项完全托管的数据服务，这意味着MongoDB为您处理基础设施管理、数据库设置、配置和维护任务。这使您能够专注于开发应用程序，而不是管理底层基础设施。
- en: Note
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The processes of signing up and setting up a MongoDB Atlas instance are well
    documented at [https://www.mongodb.com/docs/atlas/getting-started/](https://www.mongodb.com/docs/atlas/getting-started/).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://www.mongodb.com/docs/atlas/getting-started/](https://www.mongodb.com/docs/atlas/getting-started/)上详细记录了注册和设置MongoDB
    Atlas实例的过程。
- en: 'There are two ways in which you can set up your Atlas account:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过两种方式设置您的Atlas账户：
- en: Atlas UI (website)
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atlas UI（网站）
- en: Atlas CLI (command line)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Atlas CLI（命令行）
- en: The Atlas CLI provides a dedicated CLI for MongoDB Atlas, allowing you to manage
    your Atlas database deployments and Atlas Search directly from your terminal.
    In this book, you will see how to do it from the UI.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Atlas CLI为MongoDB Atlas提供了一个专门的命令行界面，允许您从终端直接管理您的Atlas数据库部署和Atlas Search。在本书中，您将看到如何从UI进行操作。
- en: Head over to [https://www.mongodb.com/cloud/atlas/register](https://www.mongodb.com/cloud/atlas/register)
    to create an Atlas account if you don’t already have it. You can use either your
    Google account, GitHub account, or email account to sign up for this service.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有Atlas账户，请前往[https://www.mongodb.com/cloud/atlas/register](https://www.mongodb.com/cloud/atlas/register)创建一个Atlas账户。您可以使用Google账户、GitHub账户或电子邮件账户注册此服务。
- en: Note
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The Atlas UI and cluster creation steps may change as more features are introduced.
    It is highly recommended that you refer to the documentation while setting up
    the cluster for the latest instructions ([https://www.mongodb.com/docs/atlas/getting-started/](https://www.mongodb.com/docs/atlas/getting-started/)).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 随着更多功能的引入，Atlas UI和集群创建步骤可能会发生变化。强烈建议您在设置集群时参考最新说明（[https://www.mongodb.com/docs/atlas/getting-started/](https://www.mongodb.com/docs/atlas/getting-started/)）。
- en: After setting up the account (here, a Gmail address is used, so you can log
    in with a Google account for faster access), you will be prompted to create a
    cluster. You will create an `M0` cluster, which is free, and you should select
    a **Cloud Provider & Region** option that is as close to your physical location
    as possible to minimize latency.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置账户（这里使用的是Gmail地址，因此您可以使用Google账户登录以实现更快的访问）之后，系统会提示您创建一个集群。您将创建一个免费的`M0`集群，并且应该选择一个尽可能接近您物理位置的**云提供商和区域**选项，以最小化延迟。
- en: Creating an Atlas cluster
  id: totrans-158
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建Atlas集群
- en: 'To set up an Atlas cluster, perform the following steps:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置一个Atlas集群，请执行以下步骤：
- en: On your Atlas dashboard, you will see the **Create a deployment** option. Click
    on **Create** to start the process of creating your first Atlas cluster.
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的Atlas仪表板上，您将看到**创建部署**选项。点击**创建**以开始创建您的第一个Atlas集群的过程。
- en: '![](img/B22406_02_06.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_06.jpg)'
- en: 'Figure 2.6: The Atlas dashboard'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6：Atlas仪表板
- en: 'In this step, you need to do multiple things:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，您需要做几件事情：
- en: Select a free **M0** **sandbox** option.
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择免费的**M0** **沙盒**选项。
- en: Give your cluster a meaningful name, such as `farm-stack`. You can choose any
    other name of your choice.
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 给您的集群起一个有意义的名字，例如`farm-stack`。您可以选择任何其他名字。
- en: Make sure that both the **Automate security setup** and **Add sample dataset**
    options are checked. This will come in very handy later.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保已勾选**自动安全设置**和**添加示例数据集**选项。这将在以后非常有用。
- en: Select the cloud service provider of your choice (by default, it’s AWS)
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您偏好的云服务提供商（默认为AWS）
- en: Choose the region that is nearest to your location to minimize latency, and
    click on **Create Deployment**.
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择离您位置最近的区域以最小化延迟，然后点击**创建部署**。
- en: Note
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Creating an Atlas user and setting up IP is an important step that you must
    complete before you start using the Atlas cluster.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 创建Atlas用户和设置IP是一个重要的步骤，您必须在开始使用Atlas集群之前完成。
- en: On the next screen, you will be asked to create a database user that will have
    a username and password. Both the fields are auto-populated for you to simplify
    the process. Feel free to change the username and password according to your preference.
    **Make sure that you save the password somewhere as you will require it later
    when you connect to** **your cluster.**
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一屏，您将被要求创建一个数据库用户，该用户将有一个用户名和密码。这两个字段都是自动填充的，以简化流程。您可以根据自己的偏好更改用户名和密码。**请确保将密码保存在某个地方，因为您稍后连接到**
    **您的集群时需要它****。
- en: By default, your current IP address is added to enable local connectivity. MongoDB
    Atlas provides many layers of security and restricted IP address access is one
    of them. If you are going to use your cluster from any other IP address, you can
    add that later, or you also have the option to enable access from anywhere (`0.0.0.0/0`),
    which will allow you to connect from anywhere, but this is not the recommended
    option for security reasons.
  id: totrans-172
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，您的当前IP地址被添加以启用本地连接。MongoDB Atlas提供了许多安全层，受限IP地址访问是其中之一。如果您打算从任何其他IP地址使用您的集群，您可以稍后添加该IP，或者您也有选择启用从任何地方访问（`0.0.0.0/0`），这将允许您从任何地方连接，但出于安全原因，这不是推荐选项。
- en: After you complete these steps, you have successfully created your first Atlas
    cluster!
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 完成这些步骤后，您已成功创建了第一个Atlas集群！
- en: Getting the connection string of your Atlas Cluster
  id: totrans-174
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取Atlas集群的连接字符串
- en: 'Next, you’ll look at the sample dataset that is automatically loaded for you.
    In this section, you will connect the dataset to your Atlas cluster from Compass
    and explore the same dataset using it:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您将查看为您自动加载的示例数据集。在本节中，您将使用Compass将数据集连接到您的Atlas集群，并使用它来探索相同的数据集：
- en: On the Atlas dashboard, click on the **Browse collections** button, as shown
    in *Figure 2**.7*.
  id: totrans-176
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Atlas仪表板上，点击如图*图2.7*所示的**浏览集合**按钮。
- en: '![](img/B22406_02_07.jpg)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_07.jpg)'
- en: 'Figure 2.7: The Atlas dashboard'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7：Atlas仪表板
- en: 'You can see that the `sample_mflix` dataset has already been loaded in your
    cluster. You’ll have a database named `sample_mflix` and six collections created
    under it: `comments`, `embedded_movies`, `movies`, `sessions`, `theatres`, and
    `users`.'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以看到`sample_mflix`数据集已经加载到您的集群中。您将拥有一个名为`sample_mflix`的数据库，并在其下创建六个集合：`comments`、`embedded_movies`、`movies`、`sessions`、`theatres`和`users`。
- en: Now, go to your Atlas dashboard and get the connection string to connect to
    your Atlas cluster from Compass.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，前往您的Atlas仪表板，获取从Compass连接到Atlas集群的连接字符串。
- en: On the Atlas dashboard, click on the green **Connect** button.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Atlas仪表板上，点击绿色的**连接**按钮。
- en: '![](img/B22406_02_08.jpg)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_08.jpg)'
- en: 'Figure 2.8: Connect to your cluster'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8：连接到您的集群
- en: 'Then, select **Compass**:'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，选择**Compass**：
- en: '![](img/B22406_02_09.jpg)'
  id: totrans-185
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_09.jpg)'
- en: 'Figure 2.9: Connect to your cluster'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.9：连接到您的集群
- en: 'In the next wizard, copy the connection string shown in the box:'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个向导中，复制框中显示的连接字符串：
- en: '![](img/B22406_02_10.jpg)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_10.jpg)'
- en: 'Figure 2.10: Get the connection string'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.10：获取连接字符串
- en: Great! Now, you have the connection string for your Atlas cluster. You can go
    to Compass and use this connection string to connect to your Atlas cluster from
    Compass. Don’t forget to replace `<password>` with your Atlas user password before
    connecting to your cluster.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 太好了！现在，您已经有了Atlas集群的连接字符串。您可以去Compass并使用此连接字符串从Compass连接到您的Atlas集群。连接到集群之前，别忘了将`<password>`替换为您的Atlas用户密码。
- en: Connecting to the Atlas cluster from Compass
  id: totrans-191
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Compass连接到Atlas集群
- en: 'Perform the following steps to connect to your Atlas Cluster from Compass:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下步骤以从Compass连接到您的Atlas集群：
- en: 'Launch Compass if it’s not already running on your computer. In the **URI**
    box, paste the connection string you copied from the previous step and add your
    password to it. Next, click on **Connect**:'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果Compass尚未在您的计算机上运行，请启动它。在**URI**框中，粘贴您从上一步复制的连接字符串，并添加您的密码。接下来，单击**连接**：
- en: '![](img/B22406_02_11.jpg)'
  id: totrans-194
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_11.jpg)'
- en: 'Figure 2.11: MongoDB Compass'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11：MongoDB Compass
- en: 'After successfully connecting to your Atlas cluster, you will see something
    similar to *Figure 2**.12*:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功连接到您的Atlas集群后，您将看到类似于*图2.12*的内容：
- en: '![](img/B22406_02_12.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_12.jpg)'
- en: 'Figure 2.12: The My Queries tab in MongoDB Compass'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12：MongoDB Compass中的“我的查询”选项卡
- en: 'You can see the list of databases in your cluster in the left panel. Click
    on **sample_mflix** to expand the dropdown and expose the list of collections.
    Then, click on **movies** to see the documents stored in that collection:'
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在左侧面板中看到您集群中的数据库列表。单击**sample_mflix**以展开下拉菜单并显示集合列表。然后，单击**movies**以查看该集合中存储的文档：
- en: '![](img/B22406_02_13.jpg)'
  id: totrans-200
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_13.jpg)'
- en: 'Figure 2.13: List of documents in collections'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13：集合中的文档列表
- en: '*Figure 2**.13* shows that you have 21.4k documents in your `sample_mflix.movies`
    collection.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2.13* 显示，你的`sample_mflix.movies`集合中有21.4k个文档。'
- en: Now you should have a fully functional instance of the world’s most popular
    NoSQL database on your machine. You have also created an online account and managed
    to create your very own cluster, ready to take on most data challenges and power
    your web app.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该在您的机器上拥有一个功能齐全的全球最受欢迎的NoSQL数据库实例。您还创建了一个在线账户，并成功创建了您自己的集群，准备好应对大多数数据挑战并为您的Web应用提供动力。
- en: MongoDB querying and CRUD operations
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB查询和CRUD操作
- en: Let’s see MongoDB in action and experience firsthand the power of the most popular
    NoSQL database. This section will show you the most essential MongoDB commands,
    through simple examples. These methods will enable you, as a developer, to take
    control of your data, create new documents, query documents by using different
    criteria and conditions, perform simple and more complex aggregations, and output
    data in various forms.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看MongoDB的实际应用，亲身体验全球最受欢迎的NoSQL数据库的力量。本节将通过简单的示例向您展示最关键的MongoDB命令。这些方法将使您作为开发者能够控制您的数据，创建新的文档，使用不同的标准和条件查询文档，执行简单和更复杂的聚合，并以各种形式输出数据。
- en: Although you will be talking to MongoDB through the Python drivers (Motor and
    PyMongo), it is helpful to learn how to write queries directly at first. You’ll
    begin by querying the `sample_mflix.movies` dataset that was imported into your
    cluster at the time of cluster creation, then you’ll go through the process of
    creating new data—inserting, updating, and so on.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然您将通过Python驱动程序（Motor和PyMongo）与MongoDB进行通信，但首先学习如何直接编写查询是有帮助的。您将从查询在集群创建时导入的`sample_mflix.movies`数据集开始，然后您将经历创建新数据的过程——插入、更新等。
- en: 'Let’s first define the two options for executing MongoDB commands, as follows:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先定义执行MongoDB命令的两种选项，如下所示：
- en: Compass GUI
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compass图形用户界面
- en: MongoDB Shell (`mongosh`)
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MongoDB Shell (`mongosh`)
- en: 'Connect to your MongoDB Atlas cluster from `mongosh` and perform CRUD operations
    on your data:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 从`mongosh`连接到您的MongoDB Atlas集群并执行数据上的CRUD操作：
- en: To connect to your Atlas cluster from `mongosh` (MongoDB Shell), navigate to
    your Atlas cluster dashboard and fetch the connection string for `mongosh`. The
    steps will be the same as for Compass, except for the connecting tool. For this,
    you’ll need the MongoDB Shell and not Compass.
  id: totrans-211
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要从`mongosh`（MongoDB Shell）连接到您的Atlas集群，请导航到您的Atlas集群仪表板并获取`mongosh`的连接字符串。步骤将与Compass相同，只是连接工具不同。为此，您需要MongoDB
    Shell而不是Compass。
- en: '*Figure 2**.14* shows the connection string for `mongosh`:'
  id: totrans-212
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图2.14* 显示了`mongosh`的连接字符串：'
- en: '![](img/B22406_02_14.jpg)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B22406_02_14.jpg)'
- en: 'Figure 2.14: Connect to mongosh (MongoDB Shell)'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.14：连接到mongosh（MongoDB Shell）
- en: Copy the connection string and navigate to the CLI on your computer.
  id: totrans-215
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制连接字符串并导航到您计算机上的CLI。
- en: 'Now, to set up the options for working with and executing commands in our cloud
    database in Atlas, perform the following steps:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了在Atlas中的云数据库上设置与执行命令的选项，请执行以下步骤：
- en: In a shell session (Command Prompt on Windows or Bash on Linux), paste the connection
    string in the prompt, and hit *Enter*. Then, provide the password and hit *Enter*.
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在shell会话（Windows上的命令提示符或Linux上的Bash）中，将连接字符串粘贴到提示符中，然后按*Enter*键。然后，输入密码并按*Enter*键。
- en: You can also explicitly pass the password in the connection string by using
    the `--password` option followed by your password. To avoid any typos/errors in
    typing the password, you can use this option.
  id: totrans-218
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以通过使用`--password`选项后跟您的密码来显式地在连接字符串中传递密码。为了避免在输入密码时出现任何拼写错误或错误，您可以使用此选项。
- en: 'On successfully connecting to your Atlas cluster, you should see something
    like this:'
  id: totrans-219
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 成功连接到您的Atlas集群后，您应该看到如下内容：
- en: '![](img/B22406_02_15.jpg)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_15.jpg)'
- en: 'Figure 2.15: Connecting to a MongoDB database successfully'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.15：成功连接到MongoDB数据库
- en: 'Next, use the `show dbs` command to list all the databases present in your
    cluster:'
  id: totrans-222
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用`show dbs`命令列出集群中所有存在的数据库：
- en: '[PRE11]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'This command should lists all of the available databases: `admin`, `local`,
    and `sample_mflix` (your database).'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 此命令应列出所有可用的数据库：`admin`、`local`和`sample_mflix`（您的数据库）。
- en: 'In order to use your database, type the following code:'
  id: totrans-225
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使用您的数据库，请输入以下代码：
- en: '[PRE12]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The console will respond with `switched to db sample_mflix`, which means that
    now you can query and work on your database.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台将响应`switched to db sample_mflix`，这意味着现在您可以查询并操作您的数据库。
- en: 'To see the available collections inside `sample_mflix`, try the following code:'
  id: totrans-228
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要查看`sample_mflix`中的可用集合，请尝试以下代码：
- en: '[PRE13]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: You should be able to view all six collections that we saw in the Atlas UI and
    Compass, that is, `comments`, `embedded_movies`, `movies`, `sessions`, `theatres`,
    and `users`. Now that you have your database and collection available, you can
    proceed and use some querying options.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够查看在Atlas UI和Compass中看到的六个集合，即`comments`、`embedded_movies`、`movies`、`sessions`、`theatres`和`users`。现在您已经有了可用的数据库和集合，您可以继续使用一些查询选项。
- en: Querying in MongoDB
  id: totrans-231
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MongoDB中的查询
- en: This section will show the use of the `sample_mflix.movies` collection as an
    example for demonstration. Working with real data with some expected query results
    helps reinforce the acquired notions and makes understanding the underlying processes
    easier and more thorough.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 本节将通过使用`sample_mflix.movies`集合作为示例来展示`find()`的使用。使用具有预期查询结果的真实数据有助于巩固所学知识，并使理解底层过程更加容易和全面。
- en: 'The most frequent MongoDB query language commands—and the ones that this chapter
    will be covering—are as follows:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖的最常见的MongoDB查询语言命令如下：
- en: '`find()`: Finds and selects documents matching simple or complex criteria'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`find()`: 根据简单或复杂的标准查找和选择文档'
- en: '`insertOne()`: Inserts a new document into the collection'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`insertOne()`: 将新文档插入到集合中'
- en: '`insertMany()`: Inserts an array of documents into the collection'
  id: totrans-236
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`insertMany()`: 将一个文档数组插入到集合中'
- en: '`updateOne()` and `updateMany()`: Update one or more documents according to
    some criteria'
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`updateOne()`和`updateMany()`: 根据某些标准更新一个或多个文档'
- en: '`deleteOne()` and `deleteMany()`: Delete one or more documents from the collection'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`deleteOne()`和`deleteMany()`: 从集合中删除一个或多个文档'
- en: 'There are 21,349 documents in the `sample_mflix.movies` collection. To query
    for all the documents, type the following command in the MongoDB Shell:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`sample_mflix.movies`集合中有21,349个文档。要查询所有文档，请在MongoDB Shell中输入以下命令：'
- en: '[PRE14]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The preceding command will print several documents, as follows:'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将打印出几个文档，如下所示：
- en: '![](img/B22406_02_16.jpg)'
  id: totrans-242
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_16.jpg)'
- en: 'Figure 2.16: find() query output'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.16：`find()`查询输出
- en: The console will print the message `Type "it" for more`, as the console prints
    out only 20 documents at a time. This statement could be interpreted as a classic
    `SELECT * FROM TABLE` in the SQL world.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 控制台将打印出消息“输入“it”以获取更多信息”，因为控制台一次只打印出20个文档。这个语句在SQL世界中可以理解为经典的`SELECT * FROM
    TABLE`。
- en: Note
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: The `find()` method returns a cursor and not the actual results. The cursor
    enables performing some standard database operations on the returned documents,
    such as limiting the number of results, ordering by one or more keys (ascending
    or descending), and skipping records.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: '`find()`方法返回一个游标而不是实际的结果。游标允许对返回的文档执行一些标准数据库操作，例如限制结果数量、按一个或多个键（升序或降序）排序以及跳过记录。'
- en: You can also apply some filters and only return those documents that satisfy
    the specified criteria. The `movies` collection has the `years` field, which represents
    the year in which the movie was released. For instance, you can write a query
    to only return movies that were released in `1969`.
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以应用一些过滤器，只返回满足指定条件的文档。`movies`集合有一个`years`字段，它表示电影发布的年份。例如，您可以编写一个查询来只返回在`1969`年发布的电影。
- en: 'In the command prompt, enter the following command:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 在命令提示符中，输入以下命令：
- en: '[PRE15]'
  id: totrans-249
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: Here, you used the `limit()` method on the cursor to specify the maximum number
    of documents the cursor should return, in this case `5`.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你使用了游标上的 `limit()` 方法来指定游标应返回的最大文档数，在这种情况下为 `5`。
- en: 'The preceding command will return the search results:'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将返回搜索结果：
- en: '![](img/B22406_02_17.jpg)'
  id: totrans-252
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B22406_02_17.jpg)'
- en: 'Figure 2.17: find() operation with a filter criteria'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.17：带有过滤条件的 find() 操作
- en: 'The results should now contain only documents that satisfy the condition that
    the `year` key is equal to `1969`. Looking at the results, it seems like there
    are many documents. You can also do a count operation on a query by using the
    `db.collection.countDocuments()` method. For example:'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 结果现在应仅包含满足 `year` 键等于 `1969` 的条件的文档。查看结果，似乎有很多文档。你还可以通过使用 `db.collection.countDocuments()`
    方法在查询上执行计数操作。例如：
- en: '[PRE16]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: The preceding command returns `107`, which means you have 107 documents in your
    collection that matched your search criteria; that is, 107 movies were released
    in the year `1969`.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令返回 `107`，这意味着你的集合中有 `107` 个文档符合你的搜索条件；也就是说，有 `107` 部电影是在 `1969` 年发布的。
- en: The JSON syntax that you used in the previous query is a **filter**, and it
    can have numerous key-value pairs with which you define your query method. MongoDB
    has many operators that enable you to query fields with more complex conditions
    than plain equality, and their updated documentation is available on the MongoDB
    site at [https://docs.mongodb.com/manual/reference/operator/query/](https://docs.mongodb.com/manual/reference/operator/query/).
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 你在之前的查询中使用的 JSON 语法是一个 **过滤器**，它可以有多个键值对，用于定义你的查询方法。MongoDB 有许多操作符，允许你查询具有比简单相等更复杂条件的字段，并且它们的最新文档可在
    MongoDB 网站上找到，网址为 [https://docs.mongodb.com/manual/reference/operator/query/](https://docs.mongodb.com/manual/reference/operator/query/)。
- en: You can visit the page and look around some of the operators as they can give
    you an idea of how you might be able to structure your queries.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以访问该页面并查看一些操作符，因为它们可以给你一个关于如何构建你的查询的想法。
- en: 'For instance, suppose you want to find all the `Comedy` (genre) movies that
    were released in `USA` after the year `1945`. The following query will do the
    job:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设你想找到所有在 `USA` 发布且年份在 `1945` 之后的 `Comedy` (类型) 电影。以下查询将完成这项工作：
- en: '[PRE17]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: After running the query, you should see a bunch of documents returned by the
    cursor.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 执行查询后，你应该会看到游标返回的一堆文档。
- en: 'You can also use the `countDocuments` method to find out the exact number of
    documents that match the filter criteria:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以使用 `countDocuments` 方法来找出匹配过滤条件的文档的确切数量：
- en: '[PRE18]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: You will find that there are `3521` documents in the collection that match your
    search criteria.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 你会发现集合中有 `3521` 个文档符合你的搜索条件。
- en: The `$gt` operator is used to specify that the year should be greater than `1945`,
    ensuring the movies selected were released after this year. The conditions on
    country and genre are straightforward, requiring the `countries` array to include
    `USA` and the `genres` array to contain `Comedy`.
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`$gt` 操作符用于指定年份应大于 `1945`，确保所选电影是在此年之后发布的。国家和类型的条件很简单，需要 `countries` 数组包含 `USA`，而
    `genres` 数组包含 `Comedy`。'
- en: Remember that the `find()` method implies an **AND** operation, so only documents
    satisfying all three conditions will be returned.
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，`find()` 方法意味着一个 **AND** 操作，因此只有满足所有三个条件的文档才会被返回。
- en: 'Some of the most widely used query operators are as follows:'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 一些最广泛使用的查询操作符如下：
- en: '`$gt`: Greater than'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$gt`：大于'
- en: '`$lt`: Less than'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$lt`：小于'
- en: '`$in`: Providing a list of values'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$in`：提供值列表'
- en: However, you can see on the MongoDB documentation ([https://www.mongodb.com/docs/manual/reference/operator/query/](https://www.mongodb.com/docs/manual/reference/operator/query/))
    that there are many more—logical *and*, *or*, and *nor*; *geospatial* operators
    for finding the nearest points on a map; and so on. It is time to explore other
    methods that allow you to perform queries and operations.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，你可以在 MongoDB 文档中看到更多——逻辑上的 *与*、*或* 和 *非*；用于在地图上查找最近点的 *地理空间* 操作符等等。现在是时候探索其他允许你执行查询和操作的方法了。
- en: '`findOne()` is similar to `find()`; it also takes an optional filter parameter
    but returns only the first document that satisfies the criteria.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`findOne()` 与 `find()` 类似；它也接受一个可选的过滤参数，但只返回满足条件的第一个文档。'
- en: Before you dive into the process of creating, deleting, and updating existing
    documents, it’s important to mention a very useful feature called **projection**.
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: 在你深入研究创建、删除和更新现有文档的过程之前，重要的是要提到一个非常有用的功能，称为**投影**。
- en: Projection
  id: totrans-274
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 投影
- en: Projection allows you to specify which fields should be included or excluded
    in the documents returned from query results. This is achieved by providing an
    additional argument to the `find()` and `findOne()` methods. This argument is
    an object that specifies which fields to include or exclude, effectively tailoring
    the query results to only contain the information that is needed.
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 投影允许你指定在查询结果中应包含或排除哪些字段。这是通过向`find()`和`findOne()`方法提供额外的参数来实现的。此参数是一个对象，它指定了要包含或排除的字段，从而有效地定制查询结果，只包含所需的信息。
- en: Building projections is easy; a projection query is just a JSON object in which
    the keys are the names of the fields, while the values are `0` if you want to
    exclude a field from the output or `1` if we want to include it. The `ObjectId`
    type is included by default, so if you want to remove it from the output, you
    have to set it to `0` explicitly. Also, if you have not included the name of any
    field in the projection, it is assumed to have a `0` value and is not projected.
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: 构建投影很简单；一个投影查询只是一个JSON对象，其中键是字段的名称，而值是`0`（如果你想从输出中排除一个字段）或`1`（如果你想包含它）。`ObjectId`类型默认包含，所以如果你想从输出中移除它，你必须明确将其设置为`0`。此外，如果你没有在投影中包含任何字段的名称，它假定具有`0`值，并且不会被投影。
- en: 'Suppose in your previous query you only want to project the movie title, country
    released, and year. To do that, execute the following command:'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 假设在你之前的查询中，你只想投影电影标题、上映国家和年份。为此，执行以下命令：
- en: '[PRE19]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The sort and limit operations first sort the returned documents by the `year`
    field in ascending order and then restrict the result to five documents, as specified
    by the `limit` parameter. In the projection part, the `_id` field is suppressed
    by setting it to `0`, and the `title`, `countries`, and `year` fields are included
    by setting them to `1`. Since the `genres` field and all other fields in the projection
    are omitted, they are automatically excluded from the returned documents.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 排序和限制操作首先按`year`字段升序排序返回的文档，然后根据`limit`参数限制结果为五份文档。在投影部分，通过将其设置为`0`来抑制`_id`字段，并通过将其设置为`1`来包含`title`、`countries`和`year`字段。由于在投影中省略了`genres`字段和所有其他字段，它们自动被排除在返回的文档之外。
- en: Creating new documents
  id: totrans-280
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建新文档
- en: 'The method used to create new documents in MongoDB is `insertOne()`. You can
    try inserting the following fictitious movie into your database:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 在MongoDB中创建新文档的方法是`insertOne()`。你可以尝试将以下虚构电影插入到你的数据库中：
- en: '[PRE20]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The preceding command will print the following message:'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令将打印以下消息：
- en: '[PRE21]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: The first part means that MongoDB acknowledged the insertion operation, whereas
    the second property prints out the `ObjectId` key, which is the primary key that
    MongoDB uses and assigns automatically to the newly inserted documents if not
    provided manually.
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分表示MongoDB已确认插入操作，而第二部分则打印出`ObjectId`键，这是MongoDB使用的并自动分配给新插入文档的主键，除非手动提供。
- en: 'MongoDB, naturally, also supports inserting many documents at once with the
    `insertMany()` method. Instead of providing a single document, the method accepts
    an array of documents. You could, for example, insert another couple of sample
    movies as follows:'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 自然地，MongoDB也支持使用`insertMany()`方法一次性插入多个文档。该方法接受一个文档数组，而不是单个文档。例如，你可以按如下方式插入另外几部样本电影：
- en: '[PRE22]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Here, you inserted three fictitious movies and the third one has a new property,
    rating (which is set to `G`), which does not exist in any other movies, just to
    highlight MongoDB’s schema flexibility. The shell acknowledges this and prints
    out the `ObjectId` key of the newly inserted documents.
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你插入了三部虚构的电影，第三部有一个新的属性，评分（设置为`G`），这在任何其他电影中都不存在，只是为了突出MongoDB的架构灵活性。Shell也确认了这一点，并打印出新插入文档的`ObjectId`键。
- en: Updating documents
  id: totrans-289
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更新文档
- en: Updating documents in MongoDB is possible through several different methods
    that are suited for different scenarios that might arise in your business logic.
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: 在MongoDB中更新文档可以通过几种不同的方法来实现，这些方法适合于可能出现在你的业务逻辑中的不同场景。
- en: 'The `updateOne()` method updates the first encountered document with the data
    provided in the fields. For example, let’s update the first movie whose `genres`
    field has `Test` in it and set it to `PlaceHolder` `genre`, as follows:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`updateOne()` 方法使用在字段中提供的数据更新遇到的第一个文档。例如，让我们更新第一个 `genres` 字段包含 `Test` 的电影，并将其设置为
    `PlaceHolder` 类型，如下所示：'
- en: '[PRE23]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'You can also update existing properties of the document as long as you use
    the `$set` operator. Let’s say that you want to make similar updates to all documents
    in your collection (i.e., set the `genres` field value to the `placeHolder` genre)
    that match the passed filter criteria and also increase the year value by `1`
    in all matched documents. You could try it with the following command:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 只要使用 `$set` 操作符，你也可以更新文档的现有属性。假设你想要更新你收藏中所有匹配过滤条件且 `genres` 字段值设置为 `placeHolder`
    类型的文档，并将年份值增加 `1`。你可以尝试以下命令：
- en: '[PRE24]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: The preceding command updates many documents, namely all movies that satisfy
    the simple requirement of having `Test` in the `genres` field.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: 上述命令更新了许多文档，即所有 `genres` 字段包含 `Test` 的电影。
- en: Updating documents is an atomic operation—if two or more updates are issued
    at the same time, the one that reaches the server first will be applied.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 更新文档是一个原子操作——如果同时发出两个或多个更新，则首先到达服务器的更新将被应用。
- en: '`mongosh` also provides a `replaceOne()` method that takes a filter, like your
    earlier methods, but also expects an entire document that will take the place
    of the preceding one. You can get more information on the collection methods in
    the following documentation: [https://www.mongodb.com/docs/manual/reference/method/db.collection.updateOne/](https://www.mongodb.com/docs/manual/reference/method/db.collection.updateOne/).'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`mongosh` 还提供了一个 `replaceOne()` 方法，它接受一个过滤器，就像你之前的方法一样，但还期望一个完整的文档来替换前面的文档。你可以在以下文档中获取有关集合方法的更多信息：[https://www.mongodb.com/docs/manual/reference/method/db.collection.updateOne/](https://www.mongodb.com/docs/manual/reference/method/db.collection.updateOne/)。'
- en: Deleting documents
  id: totrans-298
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 删除文档
- en: Deleting documents works in a similar way to the `find` methods—you can provide
    a filter specifying the documents to be deleted and use the `deleteOne` or `deleteMany`
    method to execute the operation.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 删除文档的方式与 `find` 方法类似——你可以提供一个过滤器来指定要删除的文档，并使用 `deleteOne` 或 `deleteMany` 方法来执行操作。
- en: 'Let’s delete all the fake movies that you inserted in your collection by using
    the following command:'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令删除你收藏中插入的所有假电影：
- en: '[PRE25]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The shell will acknowledge this operation with a `deletedCount` variable equal
    to `4`—the number of deleted documents. The `deleteOne` method operates in a very
    similar way by deleting the first document that matches the filter criteria.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 壳会通过一个 `deletedCount` 变量来确认此操作，其值等于 `4`——被删除的文档数量。`deleteOne` 方法以非常相似的方式通过删除第一个匹配过滤条件的文档来操作。
- en: To drop an entire collection in MongoDB, you can use the `db.collection.drop()`
    command. However, it is not recommended to drop an entire collection without careful
    consideration as it will delete all the data and related indexes. It is advised
    that you don’t run this command for the movies dataset as we need it for the rest
    of this chapter.
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: 要在 MongoDB 中删除整个集合，你可以使用 `db.collection.drop()` 命令。然而，不建议在不加考虑的情况下删除整个集合，因为它将删除所有数据和相关的索引。建议不要为电影数据集运行此命令，因为我们还需要它来完成本章的其余部分。
- en: Note
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure to import the data again in Atlas (you should see an option on the
    Atlas dashboard) if you deleted all the documents.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你删除了所有文档，请确保在 Atlas 中再次导入数据（你应在 Atlas 仪表板上看到一个选项）。
- en: Aggregation framework
  id: totrans-306
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 聚合框架
- en: The MongoDB aggregation framework is an extremely useful tool that enables offloading
    some (or most) of the computing burden of making calculations and aggregations
    of varying complexity to the MongoDB server and sparing your client side, as well
    as the (Python-based) backend, of some workload.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: MongoDB 聚合框架是一个极其有用的工具，它可以将一些（或大多数）计算和不同复杂度的聚合负担卸载到 MongoDB 服务器，从而减轻你的客户端以及（基于
    Python 的）后端的工作量。
- en: Centered around the concept of a `find` method that you already used extensively
    but with the additional benefit of data processing in different stages or steps.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 围绕一个 `find` 方法展开，你已经广泛使用了这个方法，但额外的好处是在不同的阶段或步骤中进行数据处理。
- en: The MongoDB documentation site ([https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/](https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/))
    is the best place to start if you want to get acquainted with all the possibilities.
    However, we’ll start with a couple of simple examples.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要熟悉所有可能性，MongoDB 文档网站（[https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/](https://www.mongodb.com/docs/manual/reference/method/db.collection.aggregate/））是最佳起点。然而，我们将从几个简单的示例开始。
- en: The syntax for the aggregation is similar to other methods that you used earlier,
    such as `find()` and `findOne()`. We use the `aggregate()` method, which takes
    a list of stages as a parameter.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 聚合的语法与其他你之前使用的方法类似，例如 `find()` 和 `findOne()`。我们使用 `aggregate()` 方法，它接受一个阶段列表作为参数。
- en: Probably the best aggregation, to begin with, would be to mimic the `find` method.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 可能最好的聚合开始方式是模仿 `find` 方法。
- en: 'Write an aggregation query to select all movies where the `genres` field includes
    `Comedy`:'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: 编写一个聚合查询以选择所有 `genres` 字段包含 `Comedy` 的电影：
- en: '[PRE26]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: This is probably the simplest possible aggregation, and it consists of just
    one stage, the `$match` stage, which tells MongoDB that you only want comedy movies,
    so the output of the first stage is exactly that.
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能是最简单的聚合，它只包含一个阶段，即 `$match` 阶段，它告诉 MongoDB 你只想获取喜剧电影，因此第一个阶段的输出正好是这些。
- en: 'In your collection, you have both `series` and `movies` data. Let’s write an
    aggregation pipeline to filter out films that are of the movie type and have `Comedy`
    as the genre. Then, group them together to find out the average runtime of comedy
    movies:'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的集合中，你既有 `series` 数据也有 `movies` 数据。让我们编写一个聚合管道来过滤出类型为电影且类型为 `Comedy` 的电影。然后，将它们分组在一起以找出喜剧电影的平均时长：
- en: '[PRE27]'
  id: totrans-316
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The preceding code will return the following output:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码将返回以下输出：
- en: '[PRE28]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Here is a more detailed explanation of the preceding aggregation query:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是对前面聚合查询的更详细解释：
- en: '`$match` define the criteria for filtering documents. In this case, `{type:
    "movie", genres: "Comedy"}` specifies that documents must have the type equal
    to `movie` and must include `Comedy` in their `genres` array to pass through.'
  id: totrans-320
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$match` 定义了过滤文档的标准。在这种情况下，`{type: "movie", genres: "Comedy"}` 指定文档必须具有类型等于
    `movie`，并且它们的 `genres` 数组中必须包含 `Comedy` 才能通过。'
- en: '`$group` stage takes parameters that define how to group the documents and
    what calculations to perform on the grouped data.'
  id: totrans-321
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$group` 阶段接受定义如何分组文档以及要对分组数据执行哪些计算的参数。'
- en: '`$group` stage, `_id` specifies the grouping criteria. Setting `_id` to null
    means all documents passed from the previous stage will be aggregated into a single
    group, rather than being divided into multiple groups based on distinct field
    values.'
  id: totrans-322
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$group` 阶段，`_id` 指定分组标准。将 `_id` 设置为 null 意味着所有从前一个阶段传递过来的文档将被聚合到一个单独的组中，而不是根据不同的字段值分成多个组。'
- en: '`$avg` is an accumulator operator used here to compute the average. `$runtime`
    specifies that the runtime field from each document should be used in the calculation.'
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$avg` 是一个累加器运算符，在这里用于计算平均值。`$runtime` 指定每个文档的运行时字段应用于计算。'
- en: Once the data is grouped and aggregated the way you want it, you can apply other
    simpler operations, such as sorting, ordering, and limiting.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据按照你的要求分组和聚合，你就可以应用其他更简单的操作，例如排序、排序和限制。
- en: Summary
  id: totrans-325
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: This chapter detailed the basic building blocks that define MongoDB and its
    structure. You have seen how to set up a database in the cloud using MongoDB Atlas
    and explored the basics of creating, updating, and deleting documents. Further,
    this chapter detailed the aggregation pipeline framework—a strong analytic tool.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 本章详细介绍了定义 MongoDB 及其结构的基石。你已经看到了如何使用 MongoDB Atlas 在云端设置数据库，以及探索了创建、更新和删除文档的基础。此外，本章详细介绍了聚合管道框架——一个强大的分析工具。
- en: The next chapter will show how to create APIs with FastAPI—an exciting and new
    Python framework. We will provide a minimal yet complete guide of the main concepts
    and features, which should hopefully convince you that building APIs can be fast,
    efficient, and fun.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将展示如何使用 FastAPI 创建 API——这是一个令人兴奋且全新的 Python 框架。我们将提供一个最小化但完整的指南，介绍主要的概念和功能，希望这能让你相信构建
    API 可以快速、高效且有趣。
