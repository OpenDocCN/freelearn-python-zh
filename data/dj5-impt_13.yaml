- en: <st c="0">13</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">13</st>
- en: <st c="3">Deploying the Application to the Cloud</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3">将应用程序部署到云端</st>
- en: <st c="42">Our project is currently running on our local machine.</st> <st c="98">To
    make this project accessible to others, we need to deploy it on a server on the
    internet.</st> <st c="191">A popular way to do this is by deploying our Django
    project on PythonAnywhere, as it is free to use for small websites.</st> <st c="311">Let’s
    see how to deploy our application to</st> <st c="354">the cloud.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="42">我们的项目目前运行在本地的计算机上。</st> <st c="98">为了使此项目可供他人访问，我们需要将其部署到互联网上的服务器上。</st>
    <st c="191">一种常见的方法是将我们的Django项目部署到PythonAnywhere，因为它对小型网站免费。</st> <st c="311">让我们看看如何将我们的应用程序部署到</st>
    <st c="354">云端。</st>
- en: <st c="364">In this chapter, we will be covering the</st> <st c="406">following
    topics:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="364">在本章中，我们将涵盖以下主题：</st>
- en: <st c="423">Managing GitHub</st> <st c="440">and Git</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="423">管理GitHub</st> <st c="440">和Git</st>
- en: <st c="447">Cloning your code</st> <st c="466">onto PythonAnywhere</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="447">将代码克隆到PythonAnywhere</st>
- en: <st c="485">Configuring</st> <st c="498">virtual environments</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="485">配置</st> <st c="498">虚拟环境</st>
- en: <st c="518">Setting up your</st> <st c="535">web app</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="518">设置您的</st> <st c="535">Web应用</st>
- en: <st c="542">Configuring</st> <st c="555">static files</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="542">配置</st> <st c="555">静态文件</st>
- en: <st c="567">By the end of the chapter, you will have the knowledge and ability
    to deploy small Python applications on</st> <st c="674">the cloud.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="567">在本章结束时，您将具备将小型Python应用程序部署到云的知识和能力。</st>
- en: <st c="684">Technical requirements</st>
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="684">技术要求</st>
- en: <st c="707">In this chapter, we will be using Python 3.10+.</st> <st c="756">We
    will be using Git to upload our code to the cloud, which you can download from</st>
    [<st c="838">https://git-scm.com/downloads</st>](https://git-scm.com/downloads)<st
    c="867">. Finally, we will be using the</st> **<st c="899">VS Code</st>** <st
    c="906">editor in this book, which you can download</st> <st c="951">from</st>
    <st c="956">https://code.visualstudio.com/</st><st c="986">.</st>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="707">在本章中，我们将使用Python 3.10+。</st> <st c="756">我们将使用Git将代码上传到云端，您可以从</st>
    [<st c="838">https://git-scm.com/downloads</st>](https://git-scm.com/downloads)<st
    c="867">下载。</st> 最后，我们将使用本书中的**<st c="899">VS Code</st>** <st c="906">编辑器，您可以从</st>
    <st c="951">以下位置下载</st> <st c="956">https://code.visualstudio.com/</st><st c="986">。</st>
- en: <st c="987">The CiA video for this chapter can be found</st> <st c="1032">at</st>
    [<st c="1035">https://packt.link/QXahe</st>](https://packt.link/QXahe)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="987">本章的CiA视频可以在</st> <st c="1032">以下位置找到</st> [<st c="1035">https://packt.link/QXahe</st>](https://packt.link/QXahe)
- en: <st c="1059">Managing GitHub and Git</st>
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1059">管理GitHub和Git</st>
- en: <st c="1083">To get our code onto</st> <st c="1104">sites such as PythonAnywhere,
    first, we need our code to be on a code-sharing platform such as GitHub or GitLab.</st>
    <st c="1218">In this chapter, we will use GitHub.</st> <st c="1255">If you are
    already familiar with uploading your code to GitHub, please skip the following</st>
    <st c="1345">section and proceed to upload the Movies Store code to a new GitHub
    repository.</st> <st c="1425">Otherwise, you can</st> <st c="1444">follow along.</st>
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1083">要将我们的代码上传到</st> <st c="1104">PythonAnywhere等网站，首先，我们需要将代码放在GitHub或GitLab等代码共享平台上。</st>
    <st c="1218">在本章中，我们将使用GitHub。</st> <st c="1255">如果您已经熟悉将代码上传到GitHub，请跳过以下</st>
    <st c="1345">部分，并将Movies Store代码上传到新的GitHub仓库。</st> <st c="1425">否则，您可以</st> <st
    c="1444">跟随操作。</st>
- en: <st c="1457">To upload our code to GitHub, we will follow the</st> <st c="1507">next
    steps:</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1457">要将我们的代码上传到GitHub，我们将遵循以下</st> <st c="1507">步骤：</st>
- en: <st c="1518">Understanding Git</st> <st c="1537">and GitHub.</st>
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1518">理解Git</st> <st c="1537">和GitHub。</st>
- en: <st c="1548">Creating a</st> <st c="1560">GitHub repository.</st>
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1548">创建一个</st> <st c="1560">GitHub仓库。</st>
- en: <st c="1578">Uploading our code</st> <st c="1598">to GitHub.</st>
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1578">将我们的代码</st> <st c="1598">上传到GitHub。</st>
- en: <st c="1608">Understanding Git and GitHub</st>
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="1608">理解Git和GitHub</st>
- en: '**<st c="1637">Git</st>** <st c="1641">is a</st> <st c="1647">distributed version
    control system designed to handle everything from small to very large projects
    with</st> <st c="1751">speed and efficiency.</st> <st c="1773">It allows multiple
    developers to collaborate on projects by tracking changes to</st> <st c="1853">files
    (</st>[<st c="1860">https://git-scm.com/</st>](https://git-scm.com/)<st c="1881">).</st>'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="1637">Git</st>** <st c="1641">是一个</st> <st c="1647">分布式版本控制系统，旨在以速度和效率处理从小型到非常大的项目。</st>
    <st c="1751">它允许多个开发者通过跟踪文件（</st>[<st c="1860">https://git-scm.com/</st>](https://git-scm.com/)<st
    c="1881">）的更改来协作。</st>'
- en: '**<st c="1884">GitHub</st>** <st c="1891">is a web-based platform</st> <st
    c="1916">built on top of the Git version control system.</st> <st c="1964">It
    provides hosting for software development projects that use Git for version</st>
    <st c="2043">control (</st>[<st c="2052">https://github.com/</st>](https://github.com/)<st
    c="2072">).</st>'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="1884">GitHub</st>** <st c="1891">是一个基于 Git 版本控制系统的 Web 平台。</st> <st
    c="1916">它为使用 Git 进行版本控制的软件开发项目提供托管服务（</st>[<st c="2052">https://github.com/</st>](https://github.com/)<st
    c="2072">）。</st>'
- en: <st c="2075">We’ll enhance our Movies Store project to function as a version
    control system by utilizing Git.</st> <st c="2173">Then, we’ll host the Movies
    Store project code on the Cloud</st> <st c="2233">using GitHub.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2075">我们将通过利用 Git 来增强我们的电影商店项目，使其成为一个版本控制系统。</st> <st c="2173">然后，我们将使用
    GitHub 在云端托管电影商店项目的代码。</st> <st c="2233">使用 GitHub。</st>
- en: <st c="2246">Creating a GitHub repository</st>
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="2246">创建 GitHub 仓库</st>
- en: <st c="2275">A GitHub repository is a central</st> <st c="2308">location where
    files and folders associated with a project are stored and managed.</st> <st c="2392">It
    serves as a version-controlled hub for a project, allowing multiple collaborators
    to contribute to the</st> <st c="2498">development process.</st>
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2275">GitHub 仓库是一个中央</st> <st c="2308">位置，用于存储和管理与项目相关的文件和文件夹。</st> <st
    c="2392">它作为项目的版本控制中心，允许多个协作者参与到</st> <st c="2498">开发过程中。</st>
- en: <st c="2518">Let’s follow the next steps to create a</st> <st c="2559">GitHub
    repository:</st>
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2518">让我们按照以下步骤创建一个</st> <st c="2559">GitHub 仓库：</st>
- en: <st c="2577">Go to</st> [<st c="2584">https://github.com/</st>](https://github.com/)
    <st c="2603">and sign up for an account if you don’t have one.</st> <st c="2654">Then,
    create a new repository by</st> <st c="2686">clicking on</st> **<st c="2699">+</st>**
    <st c="2700">at the top-right, and select</st> **<st c="2730">New repository</st>**
    <st c="2745">(</st>*<st c="2746">Figure 13</st>**<st c="2755">.1</st>*<st c="2757">):</st>
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="2577">前往</st> [<st c="2584">https://github.com/</st>](https://github.com/)
    <st c="2603">，如果你还没有账户，请注册一个。</st> <st c="2654">然后，通过点击右上角的</st> **<st c="2699">+</st>**
    <st c="2700">创建一个新的仓库，并选择</st> **<st c="2730">新建仓库</st>** <st c="2745">(</st>*<st
    c="2746">图 13</st>**<st c="2755">.1</st>*<st c="2757">)：</st>
- en: '![Figure 13.1 – GitHub – create a new repository option](img/B22457_13_01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.1 – GitHub – 创建新仓库选项](img/B22457_13_01.jpg)'
- en: <st c="2815">Figure 13.1 – GitHub – create a new repository option</st>
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2815">图 13.1 – GitHub – 创建新仓库选项</st>
- en: <st c="2868">Give your repository a name such as</st> `<st c="2905">moviesstore</st>`<st
    c="2916">. Select the</st> **<st c="2929">Public</st>** <st c="2935">radio box
    and hit</st> **<st c="2954">Create repository</st>** <st c="2971">(</st>*<st c="2973">Figure
    13</st>**<st c="2982">.2</st>*<st c="2984">):</st>
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="2868">给你的仓库起一个名字，例如</st> `<st c="2905">moviesstore</st>`<st c="2916">。选择</st>
    **<st c="2929">公共</st>** <st c="2935">单选按钮，然后点击</st> **<st c="2954">创建仓库</st>**
    <st c="2971">(</st>*<st c="2973">图 13</st>**<st c="2982">.2</st>*<st c="2984">)：</st>
- en: '![Figure 13.2 – GitHub – creating a new repository](img/B22457_13_02.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – GitHub – 创建新仓库](img/B22457_13_02.jpg)'
- en: <st c="3529">Figure 13.2 – GitHub – creating a new repository</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3529">图 13.2 – GitHub – 创建新仓库</st>
- en: <st c="3577">We have successfully created a GitHub repository.</st> <st c="3628">We
    will use it to store the Movies Store project code.</st> <st c="3683">Keep your
    GitHub repository open; we will use that page in the</st> <st c="3746">next section.</st>
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3577">我们已经成功创建了一个 GitHub 仓库。</st> <st c="3628">我们将用它来存储电影商店项目的代码。</st>
    <st c="3683">保持你的 GitHub 仓库开启；我们将在下一节中使用那个页面。</st>
- en: <st c="3759">Uploading our code to GitHub</st>
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="3759">将我们的代码上传到 GitHub</st>
- en: <st c="3788">We will begin to move our</st> <st c="3815">code onto GitHub.</st>
    <st c="3833">In your local machine’s Terminal, ensure you have Git installed by
    running</st> <st c="3908">the following:</st>
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3788">我们将开始将我们的</st> <st c="3815">代码移动到 GitHub。</st> <st c="3833">在你的本地机器的终端中，确保你已经安装了
    Git，通过运行以下命令来检查：</st> <st c="3908">以下命令：</st>
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="3926">If you run the</st> `<st c="3942">git</st>` <st c="3945">command
    in the terminal and see Git usage and commands listed, it indicates that you have
    Git installed (</st>*<st c="4051">Figure 13</st>**<st c="4061">.3</st>*<st c="4063">):</st>
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="3926">如果你在终端中运行</st> `<st c="3942">git</st>` <st c="3945">命令并看到 Git 使用和命令列表，这表明你已经安装了
    Git（</st>*<st c="4051">图 13</st>**<st c="4061">.3</st>*<st c="4063">）：</st>
- en: '![Figure 13.3 – Executing the git command in the terminal](img/B22457_13_03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – 在终端中执行 git 命令](img/B22457_13_03.jpg)'
- en: <st c="4404">Figure 13.3 – Executing the git command in the terminal</st>
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4404">图 13.3 – 在终端中执行 git 命令</st>
- en: <st c="4459">If you don’t see them, you will need to install Git.</st> <st c="4513">Visit
    the Git site (</st>[<st c="4533">https://git-scm.com/downloads</st>](https://git-scm.com/downloads)<st
    c="4563">) and follow the instructions to install Git.</st> <st c="4610">When
    Git is installed, you might need to close and reopen the Terminal and type “git”
    in it to ensure that it</st> <st c="4720">is installed.</st>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4459">如果你看不到它们，你需要安装 Git。</st> <st c="4513">访问 Git 网站（</st>[<st c="4533">https://git-scm.com/downloads</st>](https://git-scm.com/downloads)<st
    c="4563">）并按照说明安装 Git。</st> <st c="4610">安装 Git 后，你可能需要关闭并重新打开终端，并在其中输入“git”以确保它</st>
    <st c="4720">已安装。</st>
- en: <st c="4733">Now that we’ve installed Git, let’s proceed with the next steps
    to upload our Movies Store project code to our</st> <st c="4845">GitHub repository:</st>
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="4733">现在我们已经安装了 Git，让我们继续下一步，将我们的 Movies Store 项目代码上传到我们的</st> <st c="4845">GitHub
    仓库：</st>
- en: <st c="4863">Open your terminal in the top</st> `<st c="4894">moviesstore</st>`
    <st c="4905">folder (the one that contains the</st> `<st c="4940">manage.py</st>`
    <st c="4949">file).</st> <st c="4957">Then, run the</st> <st c="4971">following
    command:</st>
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="4863">在顶部</st> `<st c="4894">moviesstore</st>` <st c="4905">文件夹（包含</st>
    `<st c="4940">manage.py</st>` <st c="4949">文件的文件夹）中打开你的终端。</st> <st c="4957">然后，运行以下命令：</st>
    <st c="4971">以下命令：</st>
- en: '[PRE1]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="4998">The previous command marks your folder as a Git project, allowing
    you to start tracking changes.</st> <st c="5096">A hidden folder named .git is
    added to the project directory.</st> <st c="5158">This folder stores all the metadata,
    configuration files, and elements that Git needs to track changes and manage</st>
    <st c="5272">the project.</st>
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="4998">之前的命令将你的文件夹标记为 Git 项目，允许你开始跟踪更改。</st> <st c="5096">在项目目录中添加了一个名为
    .git 的隐藏文件夹。</st> <st c="5158">此文件夹存储了 Git 需要跟踪更改和管理项目的所有元数据、配置文件和元素。</st>
- en: <st c="5284">Next, run the</st> <st c="5299">following command:</st>
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="5284">接下来，运行以下命令：</st> <st c="5299">以下命令：</st>
- en: '[PRE2]'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="5327">The previous command adds everything (folders, subfolders, and
    files) in our project to the staging area, preparing them to be included in the</st>
    <st c="5471">next commit.</st>
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="5327">之前的命令将我们项目中的所有内容（文件夹、子文件夹和文件）添加到暂存区，为下一次提交做准备。</st>
- en: <st c="5483">Then, go ahead and commit the</st> <st c="5514">previous changes:</st>
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="5483">然后，继续提交之前的更改：</st> <st c="5514">以下更改：</st>
- en: '[PRE3]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="5561">The previous command is used to record the changes and inclusions
    we made to the staging area.</st> <st c="5657">When</st> <st c="5661">you run
    git commit, you’re essentially creating a snapshot of the current state of your
    project.</st> <st c="5759">You can identify different commits by the descriptive
    messages</st> <st c="5822">you provide.</st>
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="5561">之前的命令用于记录我们对暂存区所做的更改和包含内容。</st> <st c="5657">当你运行 git commit 时，你实际上是在创建项目当前状态的快照。</st>
    <st c="5759">你可以通过你提供的描述性消息来识别不同的提交。</st>
- en: <st c="5834">Next, run the</st> <st c="5849">following command:</st>
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="5834">接下来，运行以下命令：</st> <st c="5849">以下命令：</st>
- en: '[PRE4]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 13.4 – Locating your GitHub repository path](img/B22457_13_04.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 定位你的 GitHub 仓库路径](img/B22457_13_04.jpg)'
- en: <st c="6475">Figure 13.4 – Locating your GitHub repository path</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6475">图 13.4 – 定位你的 GitHub 仓库路径</st>
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: <st c="6566">The previous command is essentially telling Git to create a new
    remote repository with the name origin and associate it with the URL or path you
    provide.</st> <st c="6721">This will allow</st> <st c="6736">you to push your
    local changes to the remote</st> <st c="6782">repository later.</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6566">之前的命令实际上是在告诉 Git 创建一个名为 origin 的新远程仓库，并将其与提供的 URL 或路径关联。</st> <st
    c="6721">这将允许</st> <st c="6736">你稍后推送你的本地更改到远程</st> <st c="6782">仓库。</st>
- en: <st c="6799">To move the code from your local computer to GitHub, run</st> <st
    c="6857">the following:</st>
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="6799">要将代码从你的本地计算机移动到 GitHub，运行以下命令：</st> <st c="6857">以下命令：</st>
- en: '[PRE6]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: <st c="6895">If the upload is successful, you should see a message like this
    (</st><st c="6961">Figure 13</st><st c="6971">.5):</st>
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="6895">如果上传成功，你应该会看到类似这样的消息（</st><st c="6961">图 13</st><st c="6971">.5）：</st>
- en: '![Figure 13.5 – A successful git push to the GitHub repository](img/B22457_13_05.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.5 – 成功将 git 推送到 GitHub 仓库](img/B22457_13_05.jpg)'
- en: <st c="7495">Figure 13.5 – A successful git push to the GitHub repository</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7495">图 13.5 – 成功将 git 推送到 GitHub 仓库</st>
- en: <st c="7555">Note</st>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7555">注意</st>
- en: <st c="7560">If this is your first time uploading code to GitHub, you will probably
    see a prompt asking you to log in to GitHub.</st> <st c="7677">Please complete</st>
    <st c="7693">that process.</st>
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7560">如果您是第一次将代码上传到GitHub，您可能会看到一个提示，要求您登录GitHub。</st> <st c="7677">请完成</st>
    <st c="7693">此过程。</st>
- en: <st c="7706">Now, when you reload the GitHub repository page, you should see
    the Movies Store project structure and files properly uploaded (as shown in</st>
    *<st c="7847">Figure 13</st>**<st c="7856">.6</st>*<st c="7858">):</st>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7706">现在，当您重新加载GitHub仓库页面时，应该会看到正确上传的Movies Store项目结构和文件（如图</st> *<st
    c="7847">图13.6</st>**<st c="7856">.6</st>*<st c="7858">）：</st>
- en: '![Figure 13.6 – GitHub repository containing the Movies Store project code](img/B22457_13_06.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – 包含Movies Store项目代码的GitHub仓库](img/B22457_13_06.jpg)'
- en: <st c="8696">Figure 13.6 – GitHub repository containing the Movies Store project
    code</st>
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8696">图13.6 – 包含Movies Store项目代码的GitHub仓库</st>
- en: <st c="8768">Note</st>
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8768">注意</st>
- en: <st c="8773">Do note that there is much more to Git and GitHub.</st> <st c="8825">We
    have just covered the necessary steps to upload our code</st> <st c="8885">to
    GitHub.</st>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8773">请注意，Git和GitHub还有很多内容。</st> <st c="8825">我们刚刚介绍了上传我们的代码到GitHub的必要步骤。</st>
- en: <st c="8895">With this, we have now placed</st> <st c="8925">our code on GitHub.</st>
    <st c="8946">Next, we will clone it</st> <st c="8969">on PythonAnywhere.</st>
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8895">有了这个，我们现在已经将</st> <st c="8925">我们的代码放置在GitHub上。</st> <st c="8946">接下来，我们将在PythonAnywhere上克隆它。</st>
- en: <st c="8987">Cloning your code onto PythonAnywhere</st>
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="8987">在PythonAnywhere上克隆您的代码</st>
- en: '**<st c="9025">PythonAnywhere</st>** <st c="9040">(</st>[<st c="9042">https://www.pythonanywhere.com/</st>](https://www.pythonanywhere.com/)<st
    c="9073">) is a cloud-based platform that provides a web hosting</st> <st c="9129">environment
    for Python applications.</st> <st c="9167">It allows</st> <st c="9177">users to
    write, edit, and run Python code directly in their web browser without needing
    to install any</st> <st c="9280">software locally.</st>'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="9025">PythonAnywhere</st>** <st c="9040">(</st>[<st c="9042">https://www.pythonanywhere.com/</st>](https://www.pythonanywhere.com/)<st
    c="9073">)是一个基于云的平台，为Python应用程序提供Web托管</st> <st c="9129">环境。</st> <st c="9167">它允许</st>
    <st c="9177">用户直接在他们的网络浏览器中编写、编辑和运行Python代码，而无需在本地安装任何</st> <st c="9280">软件。</st>'
- en: <st c="9297">The steps to deploy an existing Django project on PythonAnywhere
    can be found at</st> [<st c="9379">https://help.pythonanywhere.com/pages/DeployExistingDjangoProject</st>](https://help.pythonanywhere.com/pages/DeployExistingDjangoProject)<st
    c="9444">, but we’ll guide you through</st> <st c="9474">them here.</st>
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9297">在PythonAnywhere上部署现有Django项目的步骤可以在</st> [<st c="9379">https://help.pythonanywhere.com/pages/DeployExistingDjangoProject</st>](https://help.pythonanywhere.com/pages/DeployExistingDjangoProject)<st
    c="9444">找到，但我们将在这里为您指导。</st>
- en: <st c="9484">Now that our code is on GitHub, let’s proceed with the next steps
    to create a PythonAnywhere account and</st> <st c="9589">move our code from GitHub</st>
    <st c="9616">to PythonAnywhere:</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9484">现在，我们的代码已经上传到GitHub，接下来我们将进行下一步，创建PythonAnywhere账户并将代码从GitHub</st>
    <st c="9589">迁移到PythonAnywhere：</st>
- en: <st c="9634">Go to</st> [<st c="9641">https://www.pythonanywhere.com/registration/register/beginner/</st>](https://www.pythonanywhere.com/registration/register/beginner/)
    <st c="9703">and sign up for a beginner free account if you don’t</st> <st c="9757">have
    one.</st>
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="9634">前往</st> [<st c="9641">https://www.pythonanywhere.com/registration/register/beginner/</st>](https://www.pythonanywhere.com/registration/register/beginner/)
    <st c="9703">并注册一个免费的初学者账户，如果您还没有的话。</st>
- en: <st c="9766">Then, click on</st> **<st c="9782">Dashboard</st>** <st c="9791">|</st>
    **<st c="9794">New console</st>** <st c="9805">|</st> **<st c="9808">$ Bash</st>**
    <st c="9814">(</st>*<st c="9816">Figure 13</st>**<st c="9825">.7</st>*<st c="9827">):</st>
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="9766">然后，点击</st> **<st c="9782">仪表板</st>** <st c="9791">|</st> **<st
    c="9794">新建控制台</st>** <st c="9805">|</st> **<st c="9808">$ Bash</st>** <st c="9814">(</st>*<st
    c="9816">图13.7</st>**<st c="9825">.7</st>*<st c="9827">)：</st>
- en: '![Figure 13.7 – Creating a new console](img/B22457_13_07.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![图13.7 – 创建新控制台](img/B22457_13_07.jpg)'
- en: <st c="10279">Figure 13.7 – Creating a new console</st>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10279">图13.7 – 创建新控制台</st>
- en: <st c="10315">The previous step will open a Bash console.</st> <st c="10360">Back
    in your GitHub repository, click on</st> **<st c="10401">Code</st>** <st c="10405">and
    copy the URL to clone (</st>*<st c="10433">Figure 13</st>**<st c="10443">.8</st>*<st
    c="10445">):</st>
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="10315">上一步将打开一个Bash控制台。</st> <st c="10360">回到您的GitHub仓库，点击</st> **<st
    c="10401">代码</st>** <st c="10405">并复制克隆的URL（</st>*<st c="10433">图13</st>**<st
    c="10443">.8</st>*<st c="10445">）：</st>
- en: '![Figure 13.8 – Copying repository URL](img/B22457_13_08.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图13.8 – 复制仓库URL](img/B22457_13_08.jpg)'
- en: <st c="11021">Figure 13.8 – Copying repository URL</st>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11021">图13.8 – 复制仓库URL</st>
- en: <st c="11057">To clone the previous</st> <st c="11079">repository, go back to
    the PythonAnywhere Bash console and run the following command (replace the</st>
    `<st c="11178"><repo-url></st>` <st c="11188">part with yours, for example,</st>
    `<st c="11219">git</st>` `<st c="11223">clone</st>` [<st c="11229">https://github.com/danielgara/moviesstore.git</st>](https://github.com/danielgara/moviesstore.git)<st
    c="11274">):</st>
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="11057">要克隆之前的</st> <st c="11079">仓库，请返回PythonAnywhere Bash控制台并运行以下命令（将</st>
    `<st c="11178"><repo-url></st>` <st c="11188">部分替换为您的，例如，</st> `<st c="11219">git</st>`
    `<st c="11223">clone</st>` [<st c="11229">https://github.com/danielgara/moviesstore.git</st>](https://github.com/danielgara/moviesstore.git)<st
    c="11274">）：</st>
- en: '[PRE7]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![Figure 13.9 – Checking with the ls command that the repository was successfully
    cloned](img/B22457_13_09.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![图13.9 – 使用ls命令检查仓库是否成功克隆](img/B22457_13_09.jpg)'
- en: <st c="12064">Figure 13.9 – Checking with the ls command that the repository
    was successfully cloned</st>
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12064">图13.9 – 使用ls命令检查仓库是否成功克隆</st>
- en: <st c="12150">We’ve successfully cloned our repository code into PythonAnywhere.</st>
    <st c="12218">Now, let’s configure a virtual</st> <st c="12249">environment to
    be able to run</st> <st c="12279">our project.</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12150">我们已经成功将我们的仓库代码克隆到PythonAnywhere中。</st> <st c="12218">现在，让我们配置一个虚拟</st>
    <st c="12249">环境，以便能够运行我们的项目。</st>
- en: <st c="12291">Configuring virtual environments</st>
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="12291">配置虚拟环境</st>
- en: <st c="12324">A</st> **<st c="12327">virtual environment</st>** <st c="12346">in
    Python is a</st> <st c="12362">self-contained directory that contains a specific
    Python interpreter version, along with a set of libraries and packages.</st> <st
    c="12484">It allows you to create an isolated environment for each of your Python
    projects, ensuring that dependencies are kept separate and do not interfere with</st>
    <st c="12637">each other.</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12324">在Python中，一个</st> **<st c="12327">虚拟环境</st>** <st c="12346">是一个包含特定Python解释器版本、一系列库和包的自包含目录。</st>
    <st c="12362">它允许您为每个Python项目创建一个隔离的环境，确保依赖项保持独立，不会相互干扰。</st> <st c="12484">It
    allows you to create an isolated environment for each of your Python projects,
    ensuring that dependencies are kept separate and do not interfere with</st> <st
    c="12637">each other.</st>
- en: <st c="12648">Next, we will create a virtual environment in our PythonAnywhere
    Bash console to isolate our project code and dependencies.</st> <st c="12773">Let’s
    proceed with the</st> <st c="12796">following steps:</st>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12648">接下来，我们将在PythonAnywhere Bash控制台中创建一个虚拟环境，以隔离我们的项目代码和依赖项。</st> <st
    c="12773">让我们按照以下步骤进行：</st> <st c="12796">以下步骤：</st>
- en: <st c="12812">To create a virtual environment in the PythonAnywhere Bash console
    we have to execute something like this command:</st> `<st c="12928">mkvirtualenv
    -p python3.10 <environment-name></st>`<st c="12973">. For now, we will replace</st>
    `<st c="13000"><environment-name></st>` <st c="13018">with</st> `<st c="13024">moviesstoreenv</st>`
    <st c="13038">and run</st> <st c="13047">the following:</st>
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="12812">在PythonAnywhere Bash控制台中创建虚拟环境，我们需要执行类似以下命令：</st> `<st c="12928">mkvirtualenv
    -p python3.10 <environment-name></st>`<st c="12973">。目前，我们将用</st> `<st c="13000"><environment-name></st>`
    <st c="13018">替换为</st> `<st c="13024">moviesstoreenv</st>` <st c="13038">并运行以下命令：</st>
- en: '[PRE8]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: <st c="13103">We will see the name of virtualenv in Bash, for example, (moviesstoreenv).</st>
    <st c="13179">This means we are in the virtual environment (</st><st c="13225">Figure
    13</st><st c="13235">.10):</st>
  id: totrans-90
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="13103">我们将在Bash中看到虚拟env的名称，例如，（moviesstoreenv）。</st> <st c="13179">这意味着我们处于虚拟环境中（</st><st
    c="13225">图13</st><st c="13235">.10）：</st>
- en: '![Figure 13.10 – Bash located in virtualenv](img/B22457_13_10.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图13.10 – Bash位于虚拟环境内](img/B22457_13_10.jpg)'
- en: <st c="14185">Figure 13.10 – Bash located in virtualenv</st>
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14185">图13.10 – Bash位于虚拟环境内</st>
- en: <st c="14226">Back in our virtualenv, we need to install</st> `<st c="14270">django</st>`
    <st c="14276">and</st> `<st c="14281">pillow</st>` <st c="14287">(as we did in
    development).</st> <st c="14316">So, run</st> <st c="14324">the following:</st>
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="14226">回到我们的虚拟env中，我们需要安装</st> `<st c="14270">django</st>` <st c="14276">和</st>
    `<st c="14281">pillow</st>` <st c="14287">（就像我们在开发中做的那样）。</st> <st c="14316">因此，运行以下命令：</st>
    <st c="14324">以下命令：</st>
- en: '[PRE9]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: <st c="14369">The previous execution may take from a couple of minutes to ten
    minutes.</st> <st c="14443">PythonAnywhere has very fast internet, but the filesystem
    access can be slow, and Django creates a lot of</st> <st c="14549">small files
    during its installation.</st> <st c="14586">Thankfully, you only have to do it
    once.</st> <st c="14627">Once it’s completed, you should see a message like the
    one shown in</st> <st c="14695">Figure 13</st><st c="14704">.11:</st>
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="14369">之前的执行可能需要几分钟到十分钟。</st> <st c="14443">PythonAnywhere拥有非常快的互联网，但文件系统访问可能较慢，Django在安装过程中会创建大量的</st>
    <st c="14549">小文件</st>。 <st c="14586">幸运的是，您只需做一次。</st> <st c="14627">一旦完成，您应该会看到一个类似于图13</st><st
    c="14695">.11</st><st c="14704">中所示的消息：</st>
- en: '![Figure 13.11 – Django and pillow installed](img/B22457_13_11.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图13.11 – Django和Pillow已安装](img/B22457_13_11.jpg)'
- en: <st c="15489">Figure 13.11 – Django and pillow installed</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15489">图13.11 – Django和Pillow已安装</st>
- en: <st c="15531">We have already configured our virtual environment.</st> <st c="15584">For
    now, you can leave that Bash console open or close it.</st> <st c="15643">Now,
    let’s create a web app that utilizes this</st> <st c="15690">virtual environment.</st>
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15531">我们已经配置好了我们的虚拟环境。</st> <st c="15584">目前，您可以保持Bash控制台开启或关闭它。</st>
    <st c="15643">现在，让我们创建一个利用这个</st> <st c="15690">虚拟环境</st>的Web应用。
- en: <st c="15710">Setting up your web app</st>
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="15710">设置您的Web应用</st>
- en: <st c="15734">At this point, we need to be armed with</st> <st c="15774">three
    pieces</st> <st c="15788">of information:</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15734">在这个时候，我们需要准备</st> <st c="15774">三份信息：</st>
- en: <st c="15803">The path to your Django project’s top folder (the folder that
    contains the</st> `<st c="15879">manage.py</st>` <st c="15888">file).</st> <st
    c="15896">For this project, it is commonly a combination of</st> `<st c="15946">/home</st>`
    <st c="15951">and</st> `<st c="15956">/<pythonanywhere-user></st>` <st c="15978">and</st>
    `<st c="15983">/<github-repo-name></st>`<st c="16002">. In our case, it</st> <st
    c="16020">was</st> `<st c="16024">/home/danielgara/moviesstore</st>`<st c="16052">.</st>
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="15803">您的Django项目顶级文件夹的路径（包含</st> `<st c="15879">manage.py</st>` <st
    c="15888">文件的文件夹）。</st> <st c="15896">对于这个项目，它通常是</st> `<st c="15946">/home</st>`
    <st c="15951">和</st> `<st c="15956">/<pythonanywhere-user></st>` <st c="15978">以及</st>
    `<st c="15983">/<github-repo-name></st>`<st c="16002">的组合。在我们的例子中，它</st> <st c="16020">是</st>
    `<st c="16024">/home/danielgara/moviesstore</st>`<st c="16052">。</st>
- en: <st c="16053">The name of your main project folder (that’s the name of the folder
    that contains your</st> `<st c="16141">settings.py</st>` <st c="16152">file).</st>
    <st c="16160">In our case, it</st> <st c="16176">is</st> `<st c="16179">moviesstore</st>`<st
    c="16190">.</st>
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="16053">您主项目文件夹的名称（即包含您的</st> `<st c="16141">settings.py</st>` <st c="16152">文件的文件夹名称）。</st>
    <st c="16160">在我们的例子中，它</st> <st c="16176">是</st> `<st c="16179">moviesstore</st>`<st
    c="16190">。</st>
- en: <st c="16191">The name of your virtualenv.</st> <st c="16221">In our case it</st>
    <st c="16236">is</st> `<st c="16239">moviesstoreenv</st>`<st c="16253">.</st>
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="16191">您的虚拟环境名称。</st> <st c="16221">在我们的例子中，它</st> <st c="16236">是</st>
    `<st c="16239">moviesstoreenv</st>`<st c="16253">。</st>
- en: <st c="16254">Now, follow the next steps to setting up your</st> <st c="16301">web
    app:</st>
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16254">现在，按照以下步骤设置您的</st> <st c="16301">Web应用：</st>
- en: <st c="16309">In your browser, open a new tab and go to the PythonAnywhere dashboard.</st>
    <st c="16382">Then, click on the</st> **<st c="16401">Web</st>** <st c="16404">tab
    and click</st> **<st c="16419">Add a new web app</st>** <st c="16436">(</st>*<st
    c="16438">Figure 13</st>**<st c="16447">.12</st>*<st c="16450">):</st>
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="16309">在您的浏览器中，打开一个新标签页并转到PythonAnywhere仪表板。</st> <st c="16382">然后，点击</st>
    **<st c="16401">Web</st>** <st c="16404">标签页并点击</st> **<st c="16419">添加新的Web应用</st>**
    <st c="16436">(</st>*<st c="16438">图13</st>**<st c="16447">.12</st>*<st c="16450">):</st>
- en: '![Figure 13.12 – PythonAnywhere Web tab](img/B22457_13_12.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图13.12 – PythonAnywhere Web标签](img/B22457_13_12.jpg)'
- en: <st c="16686">Figure 13.12 – PythonAnywhere Web tab</st>
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16686">图13.12 – PythonAnywhere Web标签</st>
- en: <st c="16723">PythonAnywhere will ask</st> <st c="16748">you for</st> **<st
    c="16756">Your web app’s domain name</st>**<st c="16782">. Just click</st> **<st
    c="16795">Next</st>** <st c="16799">(</st>*<st c="16801">Figure 13</st>**<st c="16810">.13</st>*<st
    c="16813">):</st>
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="16723">PythonAnywhere将要求您提供</st> <st c="16748">您的Web应用的域名</st>**<st c="16782">。只需点击</st>
    **<st c="16795">下一步</st>** <st c="16799">(</st>*<st c="16801">图13</st>**<st c="16810">.13</st>*<st
    c="16813">):</st>
- en: '![Figure 13.13 – PythonAnywhere domain name](img/B22457_13_13.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图13.13 – PythonAnywhere域名](img/B22457_13_13.jpg)'
- en: <st c="17052">Figure 13.13 – PythonAnywhere domain name</st>
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17052">图13.13 – PythonAnywhere域名</st>
- en: <st c="17093">In the</st> **<st c="17101">Select a Python Web framework</st>**
    <st c="17130">section, choose</st> **<st c="17147">Manual configuration</st>**
    <st c="17167">(</st>*<st c="17169">Figure 13</st>**<st c="17178">.14</st>*<st
    c="17181">):</st>
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="17093">在</st> **<st c="17101">选择Python Web框架</st>** <st c="17130">部分，选择</st>
    **<st c="17147">手动配置</st>** <st c="17167">(</st>*<st c="17169">图 13</st>**<st
    c="17178">.14</st>*<st c="17181">)：</st>
- en: '![Figure 13.14 – Selecting Manual configuration](img/B22457_13_14.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.14 – 选择手动配置](img/B22457_13_14.jpg)'
- en: <st c="17469">Figure 13.14 – Selecting Manual configuration</st>
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17469">图 13.14 – 选择手动配置</st>
- en: <st c="17514">Note</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17514">注意</st>
- en: <st c="17519">Make sure you choose</st> **<st c="17541">Manual configuration</st>**<st
    c="17561">, not the</st> **<st c="17571">Django</st>** <st c="17577">option; that’s
    for new</st> <st c="17601">projects only.</st>
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你选择**<st c="17541">手动配置</st>**<st c="17561">，而不是</st> **<st c="17571">Django</st>**
    <st c="17577">选项；这仅适用于新</st> <st c="17601">项目。</st>
- en: <st c="17615">Select the proper</st> <st c="17633">version of Python (the same
    one you used to create your virtual environment).</st> <st c="17712">In our case,
    it was</st> `<st c="17732">Python 3.10</st>` <st c="17743">(</st>*<st c="17745">Figure
    13</st>**<st c="17754">.15</st>*<st c="17757">).</st> <st c="17761">Finally, when
    asked for</st> **<st c="17785">Manual configuration</st>**<st c="17805">, click</st>
    **<st c="17813">Next</st>** <st c="17817">(</st>*<st c="17819">Figure 13</st>**<st
    c="17828">.16</st>*<st c="17831">).</st>
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="17615">选择正确的</st> <st c="17633">Python版本（与您创建虚拟环境时使用的版本相同）。</st> <st
    c="17712">在我们的例子中，它是</st> `<st c="17732">Python 3.10</st>` <st c="17743">(</st>*<st
    c="17745">图 13</st>**<st c="17754">.15</st>*<st c="17757">）。</st> <st c="17761">最后，当被要求选择</st>
    **<st c="17785">手动配置</st>**<st c="17805">时，点击</st> **<st c="17813">下一步</st>**
    <st c="17817">(</st>*<st c="17819">图 13</st>**<st c="17828">.16</st>*<st c="17831">)。</st>
- en: '![Figure 13.15 – Selecting the right Python version](img/B22457_13_15.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.15 – 选择正确的Python版本](img/B22457_13_15.jpg)'
- en: <st c="17938">Figure 13.15 – Selecting the right Python version</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="17938">图 13.15 – 选择正确的Python版本</st>
- en: '![Figure 13.16 – Finalizing the web app](img/B22457_13_16.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.16 – 完成Web应用](img/B22457_13_16.jpg)'
- en: <st c="18431">Figure 13.16 – Finalizing the web app</st>
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="18431">图 13.16 – 完成Web应用</st>
- en: <st c="18468">Once the web app is created, you need to</st> <st c="18509">enter
    the name of your virtualenv in the</st> `<st c="18621">moviesstoreenv</st>`<st
    c="18635">, and it will automatically complete its full path</st> <st c="18686">in</st>
    `<st c="18689">/home/username/.virtualenvs/moviesstoreenv</st>`<st c="18731">:</st>
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="18468">一旦创建Web应用，你需要在</st> `<st c="18621">moviesstoreenv</st>`<st c="18635">中输入你的虚拟环境名称，它将自动完成其完整路径</st>
    <st c="18686">在</st> `<st c="18689">/home/username/.virtualenvs/moviesstoreenv</st>`<st
    c="18731">：</st>
- en: '![Figure 13.17 – Entering the virtualenv name](img/B22457_13_17.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.17 – 输入虚拟环境名称](img/B22457_13_17.jpg)'
- en: <st c="19007">Figure 13.17 – Entering the virtualenv name</st>
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19007">图 13.17 – 输入虚拟环境名称</st>
- en: <st c="19050">Next, enter the path to your username folder (</st>`<st c="19097">/home/<your-username>/</st>`<st
    c="19120">) in the</st> **<st c="19130">Code section</st>**<st c="19142">, both
    for</st> **<st c="19153">Source code</st>** <st c="19164">and</st> **<st c="19169">Working
    directory</st>** <st c="19186">(</st>*<st c="19188">Figure 13</st>**<st c="19197">.18</st>*<st
    c="19200">):</st>
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="19050">接下来，在</st> **<st c="19130">代码部分</st>**<st c="19142">中输入你的用户文件夹路径（</st>`<st
    c="19097">/home/<your-username>/</st>`<st c="19120">），用于</st> **<st c="19153">源代码</st>**
    <st c="19164">和</st> **<st c="19169">工作目录</st>** <st c="19186">(</st>*<st c="19188">图
    13</st>**<st c="19197">.18</st>*<st c="19200">)：</st>
- en: '![Figure 13.18 – Entering the path to your code](img/B22457_13_18.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.18 – 输入你的代码路径](img/B22457_13_18.jpg)'
- en: <st c="19339">Figure 13.18 – Entering the path to your code</st>
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19339">图 13.18 – 输入你的代码路径</st>
- en: <st c="19384">Click the</st> `<st c="19395">wsgi.py</st>` <st c="19402">file
    inside the</st> **<st c="19419">Code section</st>**<st c="19431">, not the one
    in your local Django project folder (</st>*<st c="19482">Figure 13</st>**<st c="19492">.19</st>*<st
    c="19495">):</st>
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="19384">点击</st> `<st c="19395">wsgi.py</st>` <st c="19402">文件，位于</st>
    **<st c="19419">代码部分</st>**<st c="19431">内，而不是你本地Django项目文件夹中的那个（</st>*<st c="19482">图
    13</st>**<st c="19492">.19</st>*<st c="19495">）：</st>
- en: '![Figure 13.19 – Accessing the wsgi.py file](img/B22457_13_19.jpg)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.19 – 访问wsgi.py文件](img/B22457_13_19.jpg)'
- en: <st c="19673">Figure 13.19 – Accessing the wsgi.py file</st>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19673">图 13.19 – 访问wsgi.py文件</st>
- en: <st c="19714">This will take you to an editor where you can</st> <st c="19761">make
    changes.</st>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="19714">这将带您到一个编辑器，您可以在其中</st> <st c="19761">进行更改。</st>
- en: <st c="19774">Delete everything</st> <st c="19793">except the Django section
    and uncomment that section.</st> <st c="19847">Your WSGI file will look something
    like</st> <st c="19887">the following:</st>
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="19774">删除除Django部分之外的所有内容，并取消注释该部分。</st> <st c="19793">您的WSGI文件将类似于以下内容：</st>
    <st c="19847">以下：</st>
- en: '[PRE10]'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![Figure 13.20 – Accessing the settings.py file](img/B22457_13_20.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![图13.20 – 访问settings.py文件](img/B22457_13_20.jpg)'
- en: <st c="21409">Figure 13.20 – Accessing the settings.py file</st>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21409">图13.20 – 访问settings.py文件</st>
- en: <st c="21454">Click the</st> `<st c="21465">settings.py</st>` <st c="21476">file.</st>
    <st c="21483">In</st> `<st c="21486">settings.py</st>`<st c="21497">, modify the</st>
    `<st c="21510">ALLOWED_HOSTS</st>` <st c="21523">variable:</st>
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="21454">点击</st> `<st c="21465">settings.py</st>` <st c="21476">文件。</st>
    <st c="21483">在</st> `<st c="21486">settings.py</st>`<st c="21497">中，修改</st> `<st
    c="21510">ALLOWED_HOSTS</st>` <st c="21523">变量：</st>
- en: '[PRE12]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: <st c="21639">Save</st> <st c="21645">the file.</st>
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="21639">保存</st> <st c="21645">文件。</st>
- en: <st c="21654">Then, go to the</st> **<st c="21671">Web</st>** <st c="21674">tab
    and</st> <st c="21682">hit the</st> **<st c="21691">Reload</st>** <st c="21697">button
    for your domain (</st>*<st c="21722">Figure 13</st>**<st c="21732">.21</st>*<st
    c="21735">):</st>
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="21654">然后，转到</st> **<st c="21671">Web</st>** <st c="21674">选项卡，并</st>
    <st c="21682">点击</st> **<st c="21691">Reload</st>** <st c="21697">按钮以刷新您的域名（</st>*<st
    c="21722">图13</st>**<st c="21732">.21</st>*<st c="21735">）：</st>
- en: '![Figure 13.21 – Reloading the web app](img/B22457_13_21.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图13.21 – 重新加载web应用](img/B22457_13_21.jpg)'
- en: <st c="21885">Figure 13.21 – Reloading the web app</st>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21885">图13.21 – 重新加载web应用</st>
- en: <st c="21921">The</st> `<st c="21926">ALLOWED_HOSTS</st>` <st c="21939">settings
    represent which host/domain names our Django site can serve.</st> <st c="22010">This
    is a security measure to prevent HTTP Host header attacks.</st> <st c="22074">We
    used the asterisk (</st>`<st c="22096">*</st>`<st c="22098">) wildcard to indicate
    that all domains are acceptable.</st> <st c="22154">In your production projects,
    you can explicitly list which domains</st> <st c="22221">are allowed.</st>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="21921">以下</st> `<st c="21926">ALLOWED_HOSTS</st>` <st c="21939">设置表示我们的Django站点可以服务哪些主机/域名。</st>
    <st c="22010">这是一项安全措施，以防止HTTP Host头攻击。</st> <st c="22074">我们使用了星号（</st>`<st c="22096">*</st>`<st
    c="22098">）通配符来表示所有域名都是可接受的。</st> <st c="22154">在您的生产项目中，您可以明确列出允许的域名。</st>
- en: <st c="22233">Go to your project’s URL (it is the blue link in the previous
    screenshot, for example,</st> `<st c="22321">danielgara.pythonanywhere.com</st>`<st
    c="22350">), and the home page should now appear (</st>*<st c="22391">Figure 13</st>**<st
    c="22401">.22</st>*<st c="22404">):</st>
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22233">转到您的项目URL（例如，在之前的屏幕截图中的蓝色链接，例如，</st>`<st c="22321">danielgara.pythonanywhere.com</st>`<st
    c="22350">），主页现在应该出现（</st>*<st c="22391">图13</st>**<st c="22401">.22</st>*<st
    c="22404">）：</st>
- en: <st c="22407">Note</st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22407">注意</st>
- en: <st c="22412">The home page will look strange because we need to configure our
    application to serve static files (such as images and styles).</st> <st c="22541">We
    will fix</st> <st c="22553">it later.</st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22412">主页看起来会很奇怪，因为我们需要配置我们的应用程序以服务静态文件（如图片和样式）。</st> <st c="22541">我们稍后会修复它。</st>
- en: '![Figure 13.22 – The PythonAnywhere web app link](img/B22457_13_22.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![图13.22 – PythonAnywhere web应用链接](img/B22457_13_22.jpg)'
- en: <st c="22647">Figure 13.22 – The PythonAnywhere web app link</st>
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22647">图13.22 – PythonAnywhere web应用链接</st>
- en: <st c="22693">We are almost there!</st> <st c="22715">Let’s fix</st> <st c="22724">the
    static images in the</st> <st c="22750">next section.</st>
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22693">我们几乎完成了！</st> <st c="22715">让我们在下一节中修复静态图片。</st>
- en: <st c="22763">Configuring static files</st>
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="22763">配置静态文件</st>
- en: <st c="22788">Let’s fix the problem of our</st> <st c="22818">static and media
    images</st> <st c="22842">not appearing:</st>
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="22788">让我们解决我们的</st> <st c="22818">静态和媒体图片</st> <st c="22842">不显示的问题：</st>
- en: <st c="22856">In PythonAnywhere, go back to the</st> `<st c="22921">settings.py</st>`
    <st c="22932">file.</st> <st c="22939">We need to add the following</st> <st c="22968">in</st>
    **<st c="22971">bold</st>**<st c="22975">:</st>
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="22856">在PythonAnywhere中，返回到</st> `<st c="22921">settings.py</st>` <st
    c="22932">文件。</st> <st c="22939">我们需要在**<st c="22971">粗体</st>**<st c="22975">中添加以下内容：</st>
- en: '[PRE13]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: <st c="23276">The</st> `<st c="23281">STATIC_ROOT</st>` <st c="23292">variable
    defines a central location into which we collect all</st> <st c="23355">static
    files.</st>
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="23276">以下</st> `<st c="23281">STATIC_ROOT</st>` <st c="23292">变量定义了一个中央位置，我们将所有</st>
    <st c="23355">静态文件</st>收集到该位置。
- en: <st c="23368">In PythonAnywhere, go</st> <st c="23390">to the</st> **<st c="23398">Consoles</st>**
    <st c="23406">tab, and click your</st> **<st c="23427">Bash console</st>**<st
    c="23439">. Then, connect to your virtual environment by executing the</st> <st
    c="23500">following command:</st>
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="23368">在 PythonAnywhere 中，转到</st> <st c="23390">的</st> **<st c="23398">控制台</st>**
    <st c="23406">选项卡，并点击您的</st> **<st c="23427">Bash 控制台</st>**<st c="23439">。然后，通过执行以下命令连接到您的虚拟环境：</st>
- en: '[PRE14]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '![Figure 13.23 – Executing the python manage.py collectstatic command](img/B22457_13_23.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.23 – 执行 python manage.py collectstatic 命令](img/B22457_13_23.jpg)'
- en: <st c="24234">Figure 13.23 – Executing the python manage.py collectstatic command</st>
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24234">图 13.23 – 执行 python manage.py collectstatic 命令</st>
- en: <st c="24301">You need to rerun this</st> <st c="24324">command whenever you
    want to publish new versions of your</st> <st c="24383">static files.</st>
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="24301">您需要每次想要发布您静态文件的新版本时都重新运行此</st> <st c="24324">命令。</st>
- en: <st c="24396">Next, set up a static file mapping to get our web servers to serve
    out your static files for you.</st> <st c="24495">In the</st> `<st c="24597">/static/</st>`<st
    c="24605">. In</st> `<st c="24650">static/</st>`<st c="24657">, for example,</st>
    `<st c="24672">/home/danielgara/moviesstore/static/</st>` <st c="24708">(</st>*<st
    c="24710">Figure 13</st>**<st c="24719">.24</st>*<st c="24722">):</st>
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="24396">接下来，设置静态文件映射，以便我们的 web 服务器为您提供服务。</st> <st c="24495">在</st> `<st
    c="24597">/static/</st>`<st c="24605">. 在</st> `<st c="24650">static/</st>`<st
    c="24657">, 例如，</st> `<st c="24672">/home/danielgara/moviesstore/static/</st>`
    <st c="24708">(</st>*<st c="24710">图 13</st>**<st c="24719">.24</st>*<st c="24722">):</st>
- en: '![Figure 13.24 – Defining the static files](img/B22457_13_24.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.24 – 定义静态文件](img/B22457_13_24.jpg)'
- en: <st c="25067">Figure 13.24 – Defining the static files</st>
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25067">图 13.24 – 定义静态文件</st>
- en: <st c="25107">Then, in the</st> **<st c="25121">Web</st>** <st c="25124">tab,
    hit</st> **<st c="25134">Reload</st>**<st c="25140">, open your website, and your
    static images should appear now (</st>*<st c="25203">Figure 13</st>**<st c="25213">.25</st>*<st
    c="25216">):</st>
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="25107">然后，在</st> **<st c="25121">Web</st>** <st c="25124">选项卡中，点击</st>
    **<st c="25134">重新加载</st>**<st c="25140">，打开您的网站，现在您的静态图像应该会出现（</st>*<st c="25203">图
    13</st>**<st c="25213">.25</st>*<st c="25216">）：</st>
- en: '![Figure 13.25 – The Movies Store – home page](img/B22457_13_25.jpg)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.25 – 电影商店 – 首页](img/B22457_13_25.jpg)'
- en: <st c="25349">Figure 13.25 – The Movies Store – home page</st>
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25349">图 13.25 – 电影商店 – 首页</st>
- en: <st c="25392">We did it!</st> <st c="25404">Our Movies Store</st> <st c="25420">project
    has been deployed to the cloud.</st> <st c="25461">Now you can navigate between
    the different sections of the website or share your website link with colleagues</st>
    <st c="25571">and friends.</st>
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25392">我们做到了！</st> <st c="25404">我们的电影商店</st> <st c="25420">项目已部署到云端。</st>
    <st c="25461">现在您可以在网站的不同部分之间导航或与同事</st> <st c="25571">和朋友们分享您的网站链接。</st>
- en: <st c="25583">Summary</st>
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="25583">总结</st>
- en: '<st c="25591">We have gone through quite a lot of content to equip you with
    the skills required to create a full-stack Django app.</st> <st c="25709">We have
    covered the major features of Django: templates, views, URLs, user authentication,
    authorization, models, sessions, forms, and deployment.</st> <st c="25856">You
    now have the knowledge to go and build your own websites with Django.</st> <st
    c="25930">The CRUD functionality in our Reviews app is common in many web applications
    – for example, you already have all the tools to create a blog, to-do list, or
    shopping cart</st> <st c="26100">web applications.</st>'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="25591">我们已经介绍了大量内容，为您提供创建全栈 Django 应用所需的所有技能。</st> <st c="25709">我们涵盖了
    Django 的主要功能：模板、视图、URL、用户认证、授权、模型、会话、表单和部署。</st> <st c="25856">您现在有了构建自己的 Django
    网站所需的知识。</st> <st c="25930">在我们的 Reviews 应用程序中，CRUD 功能在许多网络应用程序中都很常见 – 例如，您已经有了创建博客、待办事项列表或购物车</st>
    <st c="26100">网络应用程序的所有工具。</st>
- en: <st c="26117">Hopefully, you have enjoyed this book and would like to learn
    more</st> <st c="26185">from us.</st>
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="26117">希望您喜欢这本书，并希望从我们这里学到更多</st> <st c="26185">。</st>
