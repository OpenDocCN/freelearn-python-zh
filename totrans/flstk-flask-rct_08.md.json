["```py\n$     psql -d postgres -U postgres\n```", "```py\nCREATE ROLE admin WITH LOGIN PASSWORD 'admin123';\n```", "```py\nALTER ROLE admin CREATEDB;\n```", "```py\n$    psql -d postgres -U admin\n```", "```py\n$    CREATE DATABASE bizza;\n```", "```py\n$    \\connect bizza\n```", "```py\npip install SQLAlchemy\n```", "```py\npip install flask-sqlalchemy\n```", "```py\n    pip install flaskpip install flask-sqlalchemy\n    ```", "```py\n    from flask import Flask, render_templatefrom flask_sqlalchemy import SQLAlchemyapp = Flask(__name__, template_folder='templates')app.config[\"SQLALCHEMY_DATABASE_URI\"] =    \"sqlite:///bizza.db\"db = SQLAlchemy(app)@app.route('/users')def get_users():    users = User.query.all()    return render_template('users.html', users=users)class User(db.Model):__tablename__= \"users\"    id = db.Column(db.Integer, primary_key=True)    username = db.Column(db.String(55), unique=True)    name = db.Column(db.String(55), unique=False)    email = db.Column(db.String(100), unique=True)    def __repr__(self):        return '<User {}>'.format(self.username)\n    ```", "```py\n    users table with sample data with python sample_data.py. The sample_data.py is located inside the project root directory in GitHub.\n    ```", "```py\nfrom sqlalchemy import create_engine# create the engine with the database URL\nengine = create_engine\n    (\"postgresql://admin:admin123@localhost:5432/bizza\")\n# create a connection to the database\nconn = engine.connect()\n# execute a SQL query\nresult = conn.execute('SELECT * FROM speakers')\n# loop through the result set and print the values\nfor row in result:\n    print(row)\n# close the result set and connection\nresult.close()\nconn.close()\n```", "```py\n    from sqlalchemy import create_engine\n    ```", "```py\n    engine = create_engine(    'postgresql://admin:admin123@localhost:5432/bizza'    )Database name-bizzaUsername-adminPasswordadmin123\n    ```", "```py\n    connection = engine.connect()\n    ```", "```py\n    result= connection.execute('SELECT * FROM speakers')\n    ```", "```py\nengine = create_engine('postgresql://user:admin123@localhost/bizza', pool_size=20, max_overflow=0)\n```", "```py\nclass Speaker(Base):__tablename__ = 'speakers'\nspeaker_ id=Column(Integer, primary_key=True)\nfirst_name=Column(String)\nlast_name=Column(String)\nemail=Column(String)\ncreated_at = Column(DateTime(timezone=True),\n    server_default=datetime.now)\nupdated_at = ColumnDateTime(timezone=True),\n    default=datetime.now, onupdate=datetime.now)\n```", "```py\npython –m venv venv\n```", "```py\n    Venv\\Scripts\\activate\n    ```", "```py\n    source venv/bin/activate\n    ```", "```py\npip install flask-sqlalchemy\n```", "```py\n# Import flaskfrom flask import Flask\n# Import datetime\nfrom datetime import datetime\n# Import SQLAlchemy\nfrom flask_sqlalchemy import SQLAlchemy\n# Create a Flask instance\napp = Flask(__name__)\n# Add the PostgreSQL database\napp.config['SQLALCHEMY_DATABASE_URI'] =\n    'postgresql://<db_username>:<db_password>@localhost:\n    5432/<database_name>'\n# Initialize the database\ndb = SQLAlchemy(app)\n# User model definition\nclass User(db.Model):\n    __tablename__ = 'users'\n    user_id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(100), unique=True,\n        nullable=False)\n    email = db.Column(db.String(120), unique=True,\n        nullable=False)\n    password = db.Column(db.String(128), nullable=False)\n    first_name = db.Column(db.String(100), nullable=False)\n    last_name = db.Column(db.String(100), nullable=False)\n    roles = db.Column(db.String(100))\n    is_active = db.Column(db.Boolean, default=True)\n    is_superuser = db.Column(db.Boolean, default=False)\n    created_at = db.Column(db.DateTime,\n        default=datetime.utcnow())\n    updated_at = db.Column(db.DateTime,\n        default=datetime.utcnow,\n        onupdate=datetime.utcnow())\n    def __repr__(self):\n        return '<User %r>' % self.username\n```", "```py\n    user1=User(username='john',first_name='John',last_name='Stewart',email='admin@admin.com',password='password')\n    ```", "```py\npip install Flask-Migrate\n```", "```py\nfrom flask import Flaskfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_migrate import Migrate\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] =\n    'sqlite:///bizza.db'\ndb = SQLAlchemy(app)\nmigrate = Migrate(app, db)\nclass Speaker(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.String(50), nullable=False)\n    bio = db.Column(db.Text, nullable=False)\n    photo = db.Column(db.String(100))\n    contact_info = db.Column(db.String(100))\n    user_id = db.Column(db.Integer,\n        db.ForeignKey('users.user_id'), nullable=False)\n    user = db.relationship('User',\n        backref=db.backref('speaker', uselist=False))\n    def __repr__(self):\n        return f\"Speaker('{self.name}', '{self.bio}',\n            '{self.photo}', '{self.contact_info}')\"\nif __name__ == \"__main__\":\n    app.run(debug=True, host=\"0.0.0.0\", port=5000)\n```", "```py\n    migrations in your Flask application directory.\n    ```", "```py\n    flask db initflask db migrate -m \"first migration speaker model\"\n    ```", "```py\n    flask db upgrade\n    ```"]