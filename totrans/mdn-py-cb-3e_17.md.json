["```py\n![release](https://img.shields.io/pypi/v/<project>.png)\n```", "```py\n[![release](https://img.shields.io/pypi/v/<name>.png)]  (https://pypi.org/project/<name>)\n```", "```py\n(cookbook3) % python -m pip install sphinx\n```", "```py\n    (cookbook3) recipe_02 % cd docs \n\n    (cookbook3) docs % sphinx-quickstart \n\n    Welcome to the Sphinx 7.2.6 quickstart utility. \n\n    Please enter values for the following settings (just press Enter to \n\n    accept a default value, if one is given in brackets).\n    ```", "```py\nThe recipe_02 project \n\n===================== \n\nThe **recipe_02** project is an example of Sphinx documentation. \n\n..  toctree:: \n\n    :maxdepth: 2 \n\n    :caption: Contents: \n\n    installation \n\n    usage \n\n    maintenance \n\n    design \n\n    api\n```", "```py\nextensions = [ \n\n    ’sphinx.ext.autodoc’, \n\n    ’sphinx.ext.todo’, \n\n]\n```", "```py\ntodo_include_todos = True\n```", "```py\nhtml_theme = ’sphinxdoc’\n```", "```py\nclass StatsList(list[float]): \n\n    def sum(self) -> float: \n\n        return sum(v for v in self) \n\n    def size(self) -> float: \n\n        return sum(1 for v in self) \n\n    def mean(self) -> float: \n\n        return self.sum() / self.size() \n\n    # etc...\n```", "```py\nclass StatsList(list[float]): \n\n    \"\"\" \n\n    A list of float (or int) values that computes some essential statistics. \n\n    >>> x = StatsList([1, 2, 3, 4]) \n\n    >>> x.mean() \n\n    2.5 \n\n    \"\"\" \n\n    def sum(self) -> float: \n\n        \"\"\" \n\n        Sum of items in the list. \n\n        \"\"\" \n\n        return sum(v for v in self)\n```", "```py\n:name: body\n```", "```py\n            def sum(self) -> float: \n\n                \"\"\" \n\n                Computes the sum of items in the list. \n\n                :returns: sum of the items. \n\n                \"\"\" \n\n                return sum(v for v in self)\n    ```", "```py\n    extensions = [ \n\n        ’sphinx.ext.autodoc’ \n\n    ]\n    ```", "```py\n    import sys \n\n    sys.path.append(’../src’)\n    ```", "```py\n    ..  automodule:: stats \n\n        :undoc-members:\n    ```", "```py\n    r\"\"\" \n\n    A docstring with :math:‘\\alpha \\times \\beta‘ \n\n    \"\"\"\n    ```", "```py\n    \"\"\" \n\n    A docstring with :math:‘\\\\alpha \\\\times \\\\beta‘ \n\n    \"\"\"\n    ```", "```py\nUses the :py:class:‘~stats.StatsList‘ class in the :py:mod:‘stats‘ module.\n```", "```py\n[project] \n\n    # details omitted \n\ndependencies = [ \n\n    \"pydantic\", \n\n    \"beautifulsoup4\", \n\n    \"types-beautifulsoup4\", \n\n    \"jupyterlab\", \n\n    \"matplotlib\" \n\n]\n```", "```py\n% poetry add pydantic@^2.6.0\n```", "```py\n    [project.optional-dependencies] \n\n    test = [ \n\n        \"tox\", \n\n        \"pytest\", \n\n        \"mypy\" \n\n    ]\n    ```", "```py\n    % poetry add tox@^4.0 --group test\n    ```", "```py\n    [project.optional-dependencies] \n\n    dev = [ \n\n        \"ruff\", \n\n        \"pip-tools\", \n\n        \"memray\" \n\n    ]\n    ```", "```py\n# requirements.in \n\nthis_package \n\nsphinx\n```", "```py\n# requirements_dev_x.in \n\n# Anticipation of new release. See ... for details. \n\n-c requirements.txt \n\nsome_package>2.6.1\n```", "```py\n(cookbook3) % python -m pip install tox\n```", "```py\n    [tox] \n\n    description = \"Your project name goes here.\" \n\n    min_version = 4.0\n    ```", "```py\n    skip_sdist = true \n\n    no_package = true\n    ```", "```py\n    [testenv]\n    ```", "```py\n    deps = \n\n        pytest>=7 \n\n        pip-tools \n\n        ruff>=0.1.4 \n\n        mypy>=1.7\n    ```", "```py\n    commands_pre = pip-sync requirements.txt\n    ```", "```py\n    setenv = \n\n        PYTHONPATH=src/ch03\n    ```", "```py\n    commands = \n\n        pytest --doctest-glob=’*.txt’ src \n\n        ruff format src \n\n        ruff check src \n\n        mypy --strict src\n    ```", "```py\n    (cookbook3) % tox\n    ```", "```py\n(cookbook3) % tox \n\n... details omitted \n\n  congratulations :) (4.09 seconds)\n```", "```py\n[testenv:py311] \n\n    base_python = py311\n```"]