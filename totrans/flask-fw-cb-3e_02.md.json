["```py\nfrom flask import Flask\napp = Flask(__name__)\n@app.route('/')\n@app.route('/hello')\n@app.route('/hello/<user>')\ndef hello_world(user=None):\n    user = user or 'Shalabh'\n    return '''\n<html>\n    <head>\n        <title>Flask Framework Cookbook</title>\n    </head>\n    <body>\n        <h1>Hello %s!</h1>\n        <p>Welcome to the world of Flask!</p>\n    </body>\n</html>''' % user\nif __name__ == '__main__':\n    app.run()\n```", "```py\nflask_app/\n    run.py\n    my_app/\n        __init__.py\n        hello/\n            __init__.py\n            views.py\n        templates\n```", "```py\nfrom flask import render_template, request\n@hello.route('/')\n@hello.route('/hello')\ndef hello_world():\n    user = request.args.get('user', 'Shalabh')\n    return render_template('index.html', user=user)\n```", "```py\n<html>\n  <head>\n    <title>Flask Framework Cookbook</title>\n  </head>\n  <body>\n    <h1>Hello {{ user }}!</h1>\n    <p>Welcome to the world of Flask!</p>\n  </body>\n</html>\n```", "```py\nflask_app/\n    - run.py\n    - my_app/\n        - __init__.py\n        - product/\n            - __init__.py\n            - views.py\n            - models.py\n        - templates/\n            - base.html\n            - home.html\n            - product.html\n        - static/\n            - js/\n                - bootstrap.bundle.min.js\n                - jquery.min.js\n            - css/\n                - bootstrap.min.css\n                - main.css\n```", "```py\nPRODUCTS = {\n    'iphone': {\n        'name': 'iPhone 5S',\n        'category': 'Phones',\n        'price': 699,\n    },\n    'galaxy': {\n        'name': 'Samsung Galaxy 5',\n        'category': 'Phones',\n        'price': 649,\n    },\n    'ipad-air': {\n        'name': 'iPad Air',\n        'category': 'Tablets',\n        'price': 649,\n    },\n    'ipad-mini': {\n        'name': 'iPad Mini',\n        'category': 'Tablets',\n        'price': 549\n    }\n}\n```", "```py\nfrom werkzeug.exceptions import abort\nfrom flask import render_template\nfrom flask import Blueprint\nfrom my_app.product.models import PRODUCTS\nproduct_blueprint = Blueprint('product', __name__)\n@product_blueprint.route('/')\n@product_blueprint.route('/home')\ndef home():\n    return render_template('home.html', products=PRODUCTS)\n@product_blueprint.route('/product/<key>')\ndef product(key):\n    product = PRODUCTS.get(key)\n    if not product:\n        abort(404)\n    return render_template('product.html', product=product)\n```", "```py\nfrom flask import Flask\nfrom my_app.product.views import product_blueprint\napp = Flask(__name__)\napp.register_blueprint(product_blueprint)\n```", "```py\nbody {\n  padding-top: 50px;\n}\n.top-pad {\n  padding: 10px 15px;\n  text-align: center;\n}\n```", "```py\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width,\n      initial-scale=1\">\n    <title>Flask Framework Cookbook</title>\n    <link href=\"{{ url_for('static',\n      filename='css/bootstrap.min.css') }}\"\n      rel=\"stylesheet\">\n    <link href=\"{{ url_for('static',\n      filename='css/main.css') }}\" rel=\"stylesheet\">\n    <script src=\"{{ url_for('static',\n      filename='js/moment.min.js') }}\"></script>\n  </head>\n  <body>\n    <nav class=\"navbar navbar-dark bg-dark fixed-top\"\n      role=\"navigation\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <a class=\"navbar-brand\" href=\"{{\n            url_for('product.home') }}\">Flask Cookbook</a>\n        </div>\n      </nav>\n    </div>\n    <div class=\"container\">\n    {% block container %}{% endblock %}\n    </div>\n    <script src=\"{{ url_for('static',\n      filename='js/jquery.min.js') }}\"></script>\n    <script src=\"{{ url_for('static',\n      filename='js/bootstrap.bundle.min.js') }}\"></script>\n  </body>\n</html>\n```", "```py\n{% extends 'base.html' %}\n{% block container %}\n  <div class=\"top-pad\">\n    {% for id, product in products.items() %}\n    <div class=\"top-pad offset-1 col-sm-10\">\n      <div class=\"card text-center\">\n        <div class=\"card-body\">\n          <h2>\n            <a href=\"{{ url_for('product.product', key=id)\n              }}\">{{ product['name'] }}</a>\n            <small>$ {{ product['price'] }}</small>\n          </h2>\n        </div>\n      </div>\n    </div>\n    {% endfor %}\n  </div>\n{% endblock %}\n```", "```py\n{% extends 'home.html' %}\n{% block container %}\n  <div class=\"top-pad\">\n    <h1>{{ product['name'] }}</h1>\n    <h3><small>{{ product['category'] }}</small></h3>\n    <h5>$ {{ product['price'] }}</h5>\n  </div>\n{% endblock %}\n```", "```py\n@product_blueprint.context_processor\ndef some_processor():\n    def full_name(product):\n        return '{0} / {1}'.format(product['category'],\n          product['name'])\n    return {'full_name': full_name}\n```", "```py\n{{ full_name(product) }}\n```", "```py\n{% extends 'home.html' %}\n{% block container %}\n  <div class=\"top-pad\">\n    <h4>{{ full_name(product) }}</h4>\n    <h1>{{ product['name'] }}</h1>\n    <h3><small>{{ product['category'] }}</small></h3>\n    <h5>$ {{ product['price'] }}</h5>\n  </div>\n{% endblock %}\n```", "```py\n@product_blueprint.app_template_filter('full_name')\ndef full_name_filter(product):\n    return '{0} / {1}'.format(product['category'],\n      product['name'])\n```", "```py\n{{ product|full_name }}\n```", "```py\nimport ccy\nfrom flask import request\n@app.template_filter('format_currency')\ndef format_currency_filter(amount):\n    currency_code =\n     ccy.countryccy(request.accept_languages.best[-2:])\n    return '{0} {1}'.format(currency_code, amount)\n```", "```py\n$ pip install ccy\n```", "```py\n<h3>{{ product['price']|format_currency }}</h3>\n```", "```py\n{% macro render_field(name, class='', value='',\n  type='text') -%}\n<input type=\"{{ type }}\" name=\"{{ name }}\" class=\"{{ class\n  }}\" value=\"{{ value }}\"/>\n{%- endmacro %}\n```", "```py\n{% from '_helpers.html' import render_field %}\n```", "```py\n<fieldset>\n{{ render_field('username', 'icon-user') }}\n{{ render_field('password', 'icon-key', type='password') }}\n</fieldset>\n```", "```py\n<script src=\"{{ url_for('static',\n  filename='js/moment.min.js') }}\"></script>\n```", "```py\n>>> moment().calendar(); \"Today at 11:09 AM\"\n>>> moment().endOf('day').fromNow(); \"in 13 hours\"\n>>> moment().format('LLLL'); \"Sunday, July 24, 2022 11:10\n  AM\"\n```", "```py\nfrom markupsafe import Markup\nclass momentjs(object):\n    def __init__(self, timestamp):\n        self.timestamp = timestamp\n    # Wrapper to call moment.js method\n    def render(self, format):\n        return Markup(\n            \"<script>\\ndocument\n              .write(moment(\\\"%s\\\").%s);\\n</script>\" % (\n              self.timestamp.strftime(\"%Y-%m-%dT%H:%M:%S\"),\n              format\n            )\n        )\n    # Format time\n    def format(self, fmt):\n        return self.render(\"format(\\\"%s\\\")\" % fmt)\n    def calendar(self):\n        return self.render(\"calendar()\")\n    def fromNow(self):\n        return self.render(\"fromNow()\")\n```", "```py\n# Set jinja template global\napp.jinja_env.globals['momentjs'] = momentjs\n```", "```py\n<p>Current time: {{ momentjs(timestamp).calendar() }}</p>\n<br/>\n<p>Time: {{momentjs(timestamp).format('YYYY-MM-DD\n  HH:mm:ss')}}</p>\n<br/>\n<p>From now: {{momentjs(timestamp).fromNow()}}</p>\n```"]