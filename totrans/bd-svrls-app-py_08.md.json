["```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nResources:\n    < Name of function >:\n        Type: AWS::Serverless::Function\n        Properties:\n            Handler: < index.handler >\n            Runtime: < runtime >\n            CodeUri: < URI of the bucket >\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nResources:\n    PutFunction:\n        Type: AWS::Serverless::Function\n        Properties:\n            Handler: index.handler\n            Runtime: < runtime >\n            Policies: < AWSLambdaDynamoDBExecutionRole >\n            CodeUri: < URI of the zipped function package >\n            Environment:\n                Variables:\n                     TABLE_NAME: !Ref Table\nDeleteFunction:\n    Type: AWS::Serverless::Function\n     Properties:\n         Handler: index.handler\n         Runtime: nodejs6.10\n         Policies: AWSLambdaDynamoDBExecutionRole\n          CodeUri: s3://bucketName/codepackage.zip\n          Environment:\n              Variables:\n                  TABLE_NAME: !Ref Table\n          Events:\n              Stream:\n                  Type: DynamoDB\n                  Properties:\n                      Stream: !GetAtt DynamoDBTable.StreamArn\n                      BatchSize: 100\n                      StartingPosition: TRIM_HORIZON\nDynamoDBTable:\n    Type: AWS::DynamoDB::Table\n    Properties:\n        AttributeDefinitions:\n            - AttributeName: id\n                AttributeType: S\n        KeySchema:\n             - AttributeName: id\n                 KeyType: HASH\n        ProvisionedThroughput:\n              ReadCapacityUnits: 5\n              WriteCapacityUnits: 5\n        StreamSpecification:\n              StreamViewType: streamview type\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31 \n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nResources:\n    < TableName >:\n        Type: AWS::Serverless::SimpleTable\n         Properties:\n             PrimaryKey:\n                 Name: id\n                 Type: String\n             ProvisionedThroughput:\n                 ReadCapacityUnits: 5\n                  WriteCapacityUnits: 5\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: AWS::Serverless-2016-10-31\nResources:\n    < Name of the function >:\n        Type: AWS::Serverless::Function\n        Properties:\n            Handler: index.handler\n            Runtime: < runtime >\n            Events:\n                Stream:\n                    Type: DynamoDB\n                    Properties:\n                        Stream: !GetAtt DynamoDBTable.StreamArn\n                        BatchSize: 100\n                        StartingPosition: TRIM_HORIZON\n< Name of the table >:\n    Type: AWS::DynamoDB::Table\n    Properties:\n         AttributeDefinitions:\n            - AttributeName: id\n                AttributeType: S\n        KeySchema:\n            - AttributeName: id\n                KeyType: HASH\n        ProvisionedThroughput:\n             ReadCapacityUnits: 5\n             WriteCapacityUnits: 5\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: 'AWS::Serverless-2016-10-31'\nDescription: 'Performs a periodic check of the given site, erroring out on test failure.'\nResources:\nlambdacanary:\n    Type: 'AWS::Serverless::Function'\n    Properties:\n        Handler: lambda_function.lambda_handler\n        Runtime: python2.7\n        CodeUri: .\n        Description: >-\n            Performs a periodic check of the given site, \nerroring out on test failure.\n    MemorySize: 128\n    Timeout: 10\n    Events:\n        Schedule1:\n        Type: Schedule\n        Properties:\n            Schedule: rate(1 minute)\n    Environment:\n        Variables:\n            site: 'https://www.google.com/'\n            expected: Search site.\n```", "```py\nimport json\nprint('Loading function')\ndef lambda_handler(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n    print(\"value1 = \" + event['key1'])\n    print(\"value2 = \" + event['key2'])\n    print(\"value3 = \" + event['key3'])\n    return event['key1'] # Echo back the first key value\n    #raise Exception('Something went wrong')\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: 'AWS::Serverless-2016-10-31'\nDescription: A starter AWS Lambda function.\nResources:\n    helloworldpython3:\n        Type: 'AWS::Serverless::Function'\n        Properties:\n            Handler: lambda_function.lambda_handler\n            Runtime: python3.6\n            CodeUri: .\n            Description: A starter AWS Lambda function.\n            MemorySize: 128\n            Timeout: 3\n```", "```py\naws cloudformation package --template-file template.yaml --output-template-file output.yaml --s3-bucket receiver-bucket\n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nDescription: A starter AWS Lambda function.\nResources:\n    helloworldpython3:\n        Properties:\n            CodeUri: s3://receiver-bucket/22067de83ab3b7a12a153fbd0517d6cf\n            Description: A starter AWS Lambda function.\n            Handler: lambda_function.lambda_handler\n            MemorySize: 128\n            Runtime: python3.6\n            Timeout: 3\n        Type: AWS::Serverless::Function\nTransform: AWS::Serverless-2016-10-31\n```", "```py\naws cloudformation deploy --template-file /Users/<path>/SAM/output.yaml --stack-name 'TestSAM' --capabilities CAPABILITY_IAM \n```", "```py\nAWSTemplateFormatVersion: '2010-09-09'\nTransform: 'AWS::Serverless-2016-10-31'\nDescription: A starter AWS Lambda function.\nResources:\n    helloworldpython3:\n        Type: 'AWS::Serverless::Function'\n        Properties:\n            Handler: lambda_function.lambda_handler\n            Runtime: python3.6\n            CodeUri: .\n            Description: A starter AWS Lambda function.\n            MemorySize: 128\n            Timeout: 3\n            VpcConfig:\n                SecurityGroupIds:\n                    - sg-9a19c5ec\n                SubnetIds:\n                    - subnet-949564de\n```"]