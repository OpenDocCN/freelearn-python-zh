["```py\n$ python3 -m venv ./venv\n\n$ source ./venv/bin/activate\n\n(venv) $ pip install -r requirements.txt \n```", "```py\nfrom rest_framework.generics import ListCreateAPIView\n\nfrom rest_framework.generics import RetrieveUpdateDestroyAPIView\n\nfrom .models import Micropost, Usr\n\nfrom .serializers import MicropostSerializer\n\nimport logging\n\nlogger = logging.getLogger(__name__)\n\nclass MicropostsListView(ListCreateAPIView):\n\n    serializer_class = MicropostSerializer\n\n    def get_queryset(self):\n\n        logger.info('Getting queryset')\n\n        result = Micropost.objects.filter(user__username=self.kwargs['username'])\n\n        logger.info(f'Querysert ready {result}')\n\n        return result\n\n    def perform_create(self, serializer):\n\n        user = Usr.objects.get(username=self.kwargs['username'])\n\n        serializer.save(user=user)\n\nclass MicropostView(RetrieveUpdateDestroyAPIView):\n\n    serializer_class = MicropostSerializer\n\n    def get_queryset(self):\n\n        logger.info('Getting queryset for single element')\n\n        result = Micropost.objects.filter(user__username=self.kwargs['username'])\n\n        logger.info(f'Queryset ready {result}')\n\n        return result \n```", "```py\nLOG_REQUEST_ID_HEADER = \"HTTP_X_REQUEST_ID\"\n\nGENERATE_REQUEST_ID_IF_NOT_IN_HEADER = True\n\nLOGGING = {\n\n    'version': 1,\n\n    'disable_existing_loggers': False,\n\n    'filters': {\n\n        'request_id': {\n\n            '()': 'log_request_id.filters.RequestIDFilter'\n\n        }\n\n    },\n\n    'formatters': {\n\n        'standard': {\n\n            'format': '%(levelname)-8s [%(asctime)s] [%(request_id)s] %(name)s: %(message)s'\n\n        },\n\n    },\n\n    'handlers': {\n\n        'console': {\n\n            'level': 'INFO',\n\n            'class': 'logging.StreamHandler',\n\n            'filters': ['request_id'],\n\n            'formatter': 'standard',\n\n        },\n\n    },\n\n    'root': {\n\n        'handlers': ['console'],\n\n        'level': 'INFO',\n\n    },\n\n} \n```", "```py\nLOG_REQUEST_ID_HEADER = \"HTTP_X_REQUEST_ID\"\n\nGENERATE_REQUEST_ID_IF_NOT_IN_HEADER = True \n```", "```py\n(venv) $ python3 manage.py runserver\n\nWatching for file changes with StatReloader\n\n2021-10-23 16:11:16,694 INFO     [none] django.utils.autoreload: Watching for file changes with StatReloader\n\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nOctober 23, 2021 - 16:11:16\n\nDjango version 3.2.8, using settings 'microposts.settings'\n\nStarting development server at http://127.0.0.1:8000/\n\nQuit the server with CONTROL-C \n```", "```py\n(venv) $ curl http://localhost:8000/api/users/jaime/collection/5\n\n{\"href\":\"http://localhost:8000/api/users/jaime/collection/5\",\"id\":5,\"text\":\"A referenced micropost\",\"referenced\":\"dana\",\"timestamp\":\"2021-06-10T21:15:27.511837Z\",\"user\":\"jaime\"} \n```", "```py\n2021-10-23 16:12:47,969 INFO     [66e9f8f1b43140338ddc3ef569b8e845] api.views: Getting queryset for single element\n\n2021-10-23 16:12:47,971 INFO     [66e9f8f1b43140338ddc3ef569b8e845] api.views: Queryset ready <QuerySet [<Micropost: Micropost object (1)>, <Micropost: Micropost object (2)>, <Micropost: Micropost object (5)>]>\n\n[23/Oct/2021 16:12:47] \"GET /api/users/jaime/collection/5 HTTP/1.1\" 200 177 \n```", "```py\n$ curl -H \"X-Request-ID:1A2B3C\" http://localhost:8000/api/users/jaime/collection/5\n\n{\"href\":\"http://localhost:8000/api/users/jaime/collection/5\",\"id\":5,\"text\":\"A referenced micropost\",\"referenced\":\"dana\",\"timestamp\":\"2021-06-10T21:15:27.511837Z\",\"user\":\"jaime\"} \n```", "```py\n2021-10-23 16:14:41,122 INFO     [1A2B3C] api.views: Getting queryset for single element\n\n2021-10-23 16:14:41,124 INFO     [1A2B3C] api.views: Queryset ready <QuerySet [<Micropost: Micropost object (1)>, <Micropost: Micropost object (2)>, <Micropost: Micropost object (5)>]>\n\n[23/Oct/2021 16:14:41] \"GET /api/users/jaime/collection/5 HTTP/1.1\" 200 177 \n```", "```py\nfrom log_request_id.session import Session\n\nsession = Session()\n\nsession.get('http://nextservice/url') \n```", "```py\n>>> password = 'secret password ![](img/Emoji.png)'\n\n>>> bad_characters = [c for c in password if not c.isascii()]\n\n>>> bad_characters\n\n['![](img/Emoji.png)'] \n```", "```py\n>>> my_object = {'example': True}\n\n>>> type(my_object)\n\n<class 'dict'>\n\n>>> another_object = {'example'}\n\n>>> type(another_object)\n\n<class 'set'> \n```", "```py\n>>> object = None\n\n>>> object is None\n\nTrue \n```", "```py\n>>> object = False\n\n>>> if not object:\n\n...     print('Check valid')\n\n...\n\nCheck valid\n\n>>> object = None\n\n>>> if not object:\n\n...     print('Check valid')\n\n...\n\nCheck valid \n```", "```py\n>>> object = False\n\n>>> if object is None:\n\n...     print('object is None')\n\n...\n\n>>> object = None\n\n>>> if object is None:\n\n...     print('object is None')\n\n...\n\nobject is None \n```", "```py\n>>> bool('Testing') is True\n\nTrue \n```", "```py\n>>> class A:\n\n...     pass\n\n...\n\n>>> a = A()\n\n>>> isinstance(a, A)\n\nTrue \n```", "```py\n>>> class A:\n\n...     pass\n\n...\n\n>>> class B(A):\n\n...     pass\n\n...\n\n>>> b = B()\n\n>>> isinstance(b, B)\n\nTrue\n\n>>> isinstance(b, A)\n\nTrue\n\n>>> type(b)\n\n<class '__main__.B'> \n```", "```py\n>>> d = {}\n\n>>> dir(d)\n\n['__class__', '__class_getitem__', '__contains__', '__delattr__', '__delitem__', '__dir__', '__doc__', '__eq__', '__format__', '__ge__', '__getattribute__', '__getitem__', '__gt__', '__hash__', '__init__', '__init_subclass__', '__ior__', '__iter__', '__le__', '__len__', '__lt__', '__ne__', '__new__', '__or__', '__reduce__', '__reduce_ex__', '__repr__', '__reversed__', '__ror__', '__setattr__', '__setitem__', '__sizeof__', '__str__', '__subclasshook__', 'clear', 'copy', 'fromkeys', 'get', 'items', 'keys', 'pop', 'popitem', 'setdefault', 'update', 'values'] \n```", "```py\n>>> [attr for attr in dir(d) if not attr.startswith('__')]\n\n['clear', 'copy', 'fromkeys', 'get', 'items', 'keys', 'pop', 'popitem', 'setdefault', 'update', 'values'] \n```", "```py\n>>> help(d.pop)\n\nHelp on built-in function pop:\n\npop(...) method of builtins.dict instance\n\n    D.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n\n    If key is not found, default is returned if given, otherwise KeyError is raised \n```", "```py\n>>> class C:\n\n...     '''\n\n...     This is an example docstring\n\n...     '''\n\n...     pass\n\n...\n\n>>> c = C()\n\n>>> help(c)\n\nHelp on C in module __main__ object:\n\nclass C(builtins.object)\n\n |  This is an example docstring\n\n |\n\n |  Data descriptors defined here:\n\n |\n\n |  __dict__\n\n |      dictionary for instance variables (if defined)\n\n |\n\n |  __weakref__\n\n |      list of weak references to the object (if defined) \n```", "```py\ndef valid(candidate):\n\n    if candidate <= 1:\n\n        return False\n\n    lower = candidate - 1\n\n    while lower > 1:\n\n        if candidate / lower == candidate // lower:\n\n            return False\n\n    return True\n\nassert not valid(1)\n\nassert valid(3)\n\nassert not valid(15)\n\nassert not valid(18)\n\nassert not valid(50)\n\nassert valid(53) \n```", "```py\n$ python3 debug.py \n```", "```py\n while lower > 1:\n\n        breakpoint()\n\n        if candidate / lower == candidate // lower:\n\n            return False \n```", "```py\n$ python3 debug.py\n\n> ./debug.py(10)valid()\n\n-> if candidate / lower == candidate // lower:\n\n(Pdb) \n```", "```py\n(Pdb) candidate\n\n3\n\n(Pdb) candidate / lower\n\n1.5\n\n(Pdb) candidate // lower\n\n1 \n```", "```py\n(Pdb) n\n\n> ./debug.py(13)valid()\n\n-> lower -= 1\n\n(Pdb) n\n\n> ./debug.py(8)valid()\n\n-> while lower > 1:\n\n(Pdb) n\n\n> ./debug.py(15)valid()\n\n-> return True\n\n(Pdb) n\n\n--Return--\n\n> ./debug.py(15)valid()->True\n\n-> return True \n```", "```py\n(Pdb) c\n\n> ./debug.py(10)valid()\n\n-> if candidate / lower == candidate // lower:\n\n(Pdb) candidate\n\n15 \n```", "```py\n(Pdb) l\n\n  5\n\n  6  \t    lower = candidate - 1\n\n  7\n\n  8  \t    while lower > 1:\n\n  9  \t        breakpoint()\n\n 10  ->\t        if candidate / lower == candidate // lower:\n\n 11  \t            return False\n\n 12\n\n 13  \t        lower -= 1\n\n 14\n\n 15  \t    return True \n```", "```py\n(Pdb) q\n\nbdb.BdbQuit \n```", "```py\n$ pip3 install ipdb\n\nâ€¦\n\n$ PYTHONBREAKPOINT=IPython.core.debugger.set_trace python3 debug.py\n\n> ./debug.py(10)valid()\n\n      8     while lower > 1:\n\n      9         breakpoint()\n\n---> 10         if candidate / lower == candidate // lower:\n\n     11             return False\n\n     12\n\nipdb> \n```"]