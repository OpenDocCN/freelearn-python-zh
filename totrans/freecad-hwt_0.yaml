- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FreeCAD is a general purpose modeling tool aimed at the engineering world. Unlike
    other modeling tools such as Blender or Maya, which are designed for animators
    and artists, FreeCAD puts heavy emphasis on parametric, feature-based design.
  prefs: []
  type: TYPE_NORMAL
- en: Originally designed for Mechanical Engineering and Product Design, FreeCAD is
    now being developed to add functionality for a wide cross-section of engineering
    disciplines.
  prefs: []
  type: TYPE_NORMAL
- en: A great deal of foresight and planning has gone into the underlying technology
    of FreeCAD. The result is a tool that is powerful, easy to use, and easy to extend.
  prefs: []
  type: TYPE_NORMAL
- en: The pervasive use of the powerful scripting language Python is partly responsible
    for FreeCAD's flexibility and rapid development. End users have access to this
    power as well, in several different ways. From recording macros that automate
    simple tasks to directly creating and manipulating geometry, almost anything is
    possible.
  prefs: []
  type: TYPE_NORMAL
- en: Virtually every aspect of the FreeCAD application is accessible through the
    built-in Python interpreter. Even the user interface can be accessed and extended
    with Python code, permitting the user to create new dialog screens and entire
    modules that extend the core functionality. An example of how far this concept
    can be pushed is the Arch module. This workbench is being developed by Yorik van
    Havre to provide architectural design capabilities. It is written entirely in
    Python.
  prefs: []
  type: TYPE_NORMAL
- en: '![Preface](img/8864_intro_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Its open architecture, extensible design, rapid development pace, and enthusiastic
    community make up for many of its limitations. It runs equally well on all three
    major platforms and has been translated into numerous languages. That, along with
    its free price tag, means anyone can experiment with FreeCAD now.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Getting and installing FreeCAD (Must know)*, will walk through the basics
    of getting FreeCAD working on your computer. Latest and greatest, or stable and
    easy? Mac, Windows, or Linux? We''ll show you your options and talk about the
    trade-offs.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Understanding the FreeCAD interface (Must know)*, provides a broad look at
    FreeCAD''s organization. This recipe will walk you through the user interface
    and get you comfortable customizing it for your own use.'
  prefs: []
  type: TYPE_NORMAL
- en: '*CSG modeling in the Part workbench (Must know)*, shows you how to start with
    simple shapes and combine them to build complex objects. CSG modeling is one of
    several important techniques that FreeCAD makes possible, and an indispensable
    part of your modeling tool kit.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Recording and editing a macro (Should know)*, makes life easier by recording
    and playing back a sequence of frequently used commands. Create your own custom
    commands or automate a routine task.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Modeling a simple part with the Draft workbench (Must know)*, introduces another
    modeling technique available in FreeCAD. Many designs, even complex 3D objects,
    start out as 2D drawings. The Draft workbench provides tools for working with
    circles, arcs, lines, and other 2D elements.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Rotating and extruding to create parts (Should know)*, will show how 2D drawings
    can be turned into 3D models. Rotation and extrusion are two more tools that every
    FreeCAD user should know.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Creating 3D solids with Python (Become an expert)*, shows how to use Python
    to create custom 3D objects. Python is another powerful tool in your FreeCAD toolbox.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Creating a custom dialog to automate a task (Become an expert)*, will show
    you how to make your Python scripts easier to use by making a custom user interface.
    You can create a nice looking dialog box.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Modeling with constraints (Must know)*, covers one of the most powerful techniques
    available to the FreeCAD user. Need to change one aspect of your model without
    breaking the rest? Designing with constraints means building flexibility into
    the design. Now your designs can be easily adjusted with predictable results.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Using external constraints (Should know)*, will go beyond simple sketches
    by using some of the advanced sketching tools in FreeCAD. You can model additional
    features on the faces of existing objects and attach sketches to existing objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Adding or modifying constraints with Python (Become an expert)*, brings the
    power of Python to bear on constraint based modeling. You can dig deeper into
    the inner workings of sketch constraints with the Python scripting.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Creating a drawing of a part (Should know)*, teaches you to present your 3D
    design to the 2D world by creating a drawing that''s ready for printing.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Exporting DXF files for other applications (Should know)*, will show you how
    to export your design to other applications using industry standard DXF files.
    The time will come when you need to do something with your project outside of
    FreeCAD and exporting is invaluable.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Importing data (Should know)*, will give you information on how to interact
    with designs made in other applications.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: FreeCAD is a standalone design tool. Once installed, nothing additional is needed
    to begin designing complex models. If you want to compile the latest version of
    FreeCAD, open source tools are available on the Internet, including the Git version
    control system necessary for downloading the source code.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Written specifically for new users of CAD software with little or no experience,
    this book will also help users of other CAD applications get familiar with FreeCAD's
    unique concepts quickly.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text are shown as follows: "Notice how it gives you a helpful
    tip on the `makeBox` class."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Select the wire and click on the **Upgrade** button to convert it to a face."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a book that you need and would like to see us publish, please send
    us a note in the **SUGGEST A TITLE** form on [www.packtpub.com](http://www.packtpub.com)
    or e-mail `<[suggest@packtpub.com](mailto:suggest@packtpub.com)>`.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books â€” maybe a mistake in the
    text or the code â€” we would be grateful if you would report this to us. By doing
    so, you can save other readers from frustration and help us improve subsequent
    versions of this book. If you find any errata, please report them by visiting
    [http://www.packtpub.com/support](http://www.packtpub.com/support), selecting
    your book, clicking on the **errata submission form** link, and entering the details
    of your errata. Once your errata are verified, your submission will be accepted
    and the errata will be uploaded on our website, or added to any list of existing
    errata, under the Errata section of that title. Any existing errata can be viewed
    by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
