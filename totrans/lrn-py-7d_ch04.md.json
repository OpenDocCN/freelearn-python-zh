["```py\n<Variable name > = []\nList1 = []\n\n```", "```py\nAvengers = ['hulk', 'iron-man', 'Captain', 'Thor']\n\n```", "```py\n>>> a,b = [1,2]\n\n>>> a\n\n1\n\n>>> b\n\n2\n\n>>> \n\n```", "```py\n>>> a,b = [1,2,3]\nTraceback (most recent call last):\n\n  File \"<pyshell#7>\", line 1, in <module>\n\n    a,b = [1,2,3]\n\nValueError: too many values to unpack\n\n```", "```py\n>>> a,b,c = [1,2]\nTraceback (most recent call last):\n\n  File \"<pyshell#8>\", line 1, in <module>\n\n    a,b,c = [1,2]\n\nValueError: need more than 2 values to unpack\n\n```", "```py\n>>> Avengers = ['hulk', 'iron-man', 'Captain', 'Thor']\n\n>>> Avengers[0]\n\n'hulk'\n\n>>> Avengers[3]\n\n'Thor'\n\n>>> Avengers[-1]\n\n'Thor'\n\n>>> Avengers[4]\n\nTraceback (most recent call last):\n\n  File \"<pyshell#5>\", line 1, in <module>\n\n    Avengers[4]\n\nIndexError: list index out of range\n\n```", "```py\n<list-name>[start : stop : step]\n\n```", "```py\n>>> Avengers[1:3]\n\n['iron-man', 'Captain']\n\n>>> Avengers[:4]\n\n['hulk', 'iron-man', 'Captain', 'Thor']\n\n>>> Avengers[:]\n\n['hulk', 'iron-man', 'Captain', 'Thor']\n\n>>> Avengers[2:]\n\n['Captain', 'Thor']\n\n>>> list1 = [1,2,3,4,5,6,7,8,9,10,11,12,13]\n\n>>> list1[1:13:3]\n\n[2, 5, 8, 11]\n\n>>> \n\n```", "```py\nAvengers = ['hulk', 'iron-man', 'Captain', 'Thor']\n\n```", "```py\n>>> Avengers = ['hulk', 'iron-man', 'Captain', 'Thor']\n\n>>> Avengers[2]\n\n'Captain'\n\n>>> Avengers[2] = \"Captain-America\"\n\n>>> Avengers\n\n['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> \n\n```", "```py\n >>> C_W_team = ['hulk', 'iron-man', 'Captain-America', 'Thor',\"Vision\"]\n\n>>> del C_W_team[0]\n\n>>> C_W_team\n\n['iron-man', 'Captain-America', 'Thor', 'Vision']\n\n>>>\n\n>>> del C_W_team[2:4]\n\n>>> C_W_team\n\n['iron-man', 'Captain-America']\n\n>>>\n\n```", "```py\n>>> Avengers1 = ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> Avengers2 = [\"Vision\",\"sam\"]\n\n>>>\n\n```", "```py\n>>> Avengers1+Avengers2\n\n['hulk', 'iron-man', 'Captain-America', 'Thor', 'Vision', 'sam']\n\n>>>\n\n>>> Avengers2+Avengers1\n\n['Vision', 'sam', 'hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>>\n\n>>> Avengers1\n\n['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>>\n\n>>> Avengers2\n\n['Vision', 'sam']\n\n>>> \n\n```", "```py\n>>> Av = ['Vision', 'sam']\n\n>>> new_Av = Av*2\n\n>>> new_Av\n\n['Vision', 'sam', 'Vision', 'sam']\n\nLet us see the memory address of the  new list.\n\n>>> id(new_Av[0])\n\n47729312\n\n>>> id(new_Av[2])\n\n47729312\n\n>>> \n\n```", "```py\n>>> Avengers= ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> if \"iron-man\" in Avengers:\n\n                        print \"yes \"\n\nyes\n\n>>> \n\n>>> if \"vision\" in Avengers:\n\n                        print \"yes \"\n\n>>> \n\n```", "```py\nlen(list)\n\n```", "```py\n>>> avengers = ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> len(avengers)\n\n4\n\n>>> \n\n```", "```py\nmax (list)\n\n```", "```py\n>>> list1 = [1, 2, 3, 4,510]\n\n>>> max (list1)\n\n510\n\n>>> list1 = [1, 2, 3, 4,510,510.0]\n\n>>> max (list1)\n\n510\n\n>>> list1 = [1, 2, 3, 4,510.0, 510]\n\n>>> max (list1)\n\n510.0\n\n>>> list2 = [800, \"1\"]\n\n>>> max (list2)\n\n'1'\n\n>>> \n\n```", "```py\nlist(tuple)\n\n```", "```py\n>>> tup1 = (\"a\",\"b\",\"c\")\n\n>>> list (tup1)\n\n['a', 'b', 'c']\n\n>>> name = \"mohit raj\"\n\n>>> list1(name)\n\n>>> list(name)\n\n['m', 'o', 'h', 'i', 't', ' ', 'r', 'a', 'j']\n\n>>> \n\n```", "```py\nsorted (iterable, cmp, key, reverse)\n\n```", "```py\n>>> list1 = [2, 3, 0, 3, 1, 4, 7, 1]\n\n>>> sorted (list1)\n\n[0, 1, 1, 2, 3, 3, 4, 7]\n\n>>> list1\n\n[2, 3, 0, 3, 1, 4, 7, 1]\n\n>>> \n\n```", "```py\n>>> tup1 = (2, 3, 0, 3, 1, 4, 7, 1)\n\n>>> sorted (tup1)\n\n[0, 1, 1, 2, 3, 3, 4, 7]\n\n>>> tup1\n\n[2, 3, 0, 3, 1, 4, 7, 1]\n\n>>> \n\n```", "```py\nAvengers = []\n\n```", "```py\nlist.append () \n\n```", "```py\n>>> Avengers = []\n\n>>> Avengers.append(\"Captain-America\")\n\n>>> Avengers.append(\"Iron-man\")\n\n>>> Avengers\n\n['Captain-America', 'Iron-man']\n\n>>> \n\n```", "```py\nAvengers1 = ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\nAvengers2 = [\"Vision\",\"sam\"]\n\n```", "```py\nlist1.extend (seq)\n\n```", "```py\n>>> Avengers1 = ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> Avengers2 = [\"Vision\",\"sam\"]\n\n>>> Avengers1.extend(Avengers2)\n\n>>> Avengers1\n\n['hulk', 'iron-man', 'Captain-America', 'Thor', 'Vision', 'sam']\n\n>>>\n\n>>> Avengers2\n\n['Vision', 'sam']\n\n```", "```py\n>>> list1 = [\"mohit\", \"Bhaskar\"]\n\n>>> name = \"leapx\"\n\n>>> list1.extend(name)\n\n>>> list1\n\n['mohit', 'Bhaskar', 'l', 'e', 'a', 'p', 'x']\n\n>>> \n\n```", "```py\n>>> Avengers1 = ['hulk', 'iron-man', 'Captain-America', 'Thor']\n\n>>> team2 = (\"vision”, “Clint\")\n\n>>> Avengers1.extend(team2)\n\n>>> Avengers1\n\n['hulk', 'iron-man', 'Captain-America', 'Thor', 'vision', 'Clint']\n\n>>> \n\n```", "```py\n>>> Linux  = [\"kali\", \"Ubuntu\", \"debian\"]\n\n>>> Linux2 = [\"RHEL\", \"Centos\"]\n\n>>> Linux.extend(Linux2)\n\n>>> Linux\n\n['kali', 'Ubuntu', 'debian', 'RHEL', 'Centos']\n\n>>>\n\n>>>\n\n>>> Linux  = [\"kali\", \"Ubuntu\", \"debian\"]\n\n>>> Linux2 = [\"RHEL\", \"Centos\"]\n\n>>> Linux.append(Linux2)\n\n>>> Linux\n\n['kali', 'Ubuntu', 'debian', ['RHEL', 'Centos']]\n\n>>> \n\n```", "```py\nlist1.count (item) \n\n```", "```py\n>>> list1 = [\"a\",\"c\",\"b\",\"c\",\"a\",\"h\",\"l\", 1, 2, 3, 4]\n\n>>> list1.count (\"a\")\n\n2\n\n>>> list1.count (\"c\")\n\n2\n\n>>> \n\n>>> list1.count (\"k\")\n\n0\n\n```", "```py\nlist.index(item)\n\n```", "```py\n>>> OS = ['kali', 'Ubuntu', 'debian', 'RHEL', 'Centos']\n\n>>> OS.index(\"debian\")\n\n2\n\n>>> OS.index(\"mint\")\n\nTraceback (most recent call last):\n\n  File \"<pyshell#55>\", line 1, in <module>\n\n    OS.index(\"mint\")\n\nValueError: 'mint' is not in list\n\n>>> \n\n```", "```py\n>>> OS = ['kali', 'Ubuntu', 'debian', 'RHEL', 'Centos','RHEL']\n\n>>> OS.index(\"RHEL\")\n\n3\n\n>>> \n\n```", "```py\nlist1.insert (index1, item) \n\n```", "```py\n>>> A = [‘iron-man', 'hulk', 'Thor']\n\n>>> A.insert (0,\"Captain-America\")\n\n>>> A\n\n['Captain-America', 'iron-man', 'hulk', 'Thor']\n\n>>> \n\n```", "```py\nlist.remove(item)\n\n```", "```py\n>>> Avengers1 = [\"Iron-man\",\"Thor\",\"Loki\",\"hulk\"]\n\n>>> Avengers1.remove (\"Loki\")\n\n>>> Avengers1\n\n['Iron-man', 'Thor', 'hulk']\n\n>>>\n\n>>> \n\n```", "```py\n>>> num = [1,2,3,4,5,6,4,1,7]\n\n>>> num.remove(1)\n\n>>> num\n\n[2, 3, 4, 5, 6, 4, 1, 7]\n\n>>> \n\n```", "```py\nlist.pop()\n\n```", "```py\n>>> GoT = [\"Tyrion\",\"Sansa\", \"Arya\",\"Joffrey\",\"Ned-Stark\"]\n\n>>> GoT.pop()\n\n'Ned-Stark'\n\n>>> GoT.pop()\n\n'Joffrey'\n\n>>> GoT\n\n['Tyrion', 'Sansa', 'Arya']\n\n>>> \n\n```", "```py\n>>> GoT = [\"Tyrion\",\"Sansa\", \"Arya\",\"Catelyn\",\"Joffrey\",\"Ned-Stark\"]\n\n>>> GoT = [\"Tyrion\",\"Sansa\", \"Arya\",\"Catelyn\",\"Joffrey\",\"Ned-Stark\"]\n\n>>> GoT.pop(3)\n\n'Catelyn'\n\n>>> GoT\n\n['Tyrion', 'Sansa', 'Arya', 'Joffrey', 'Ned-Stark']\n\n>>> \n\n```", "```py\nlist.sort(cmp=None, key=None, reverse=False)\n\n```", "```py\n>>> list1 = [5, 6, 7, 1, 4, 2, 0, 4, 2, 8]\n\n>>> list1.sort()\n\n>>> list1\n\n[0, 1, 2, 2, 4, 4, 5, 6, 7, 8]\n\n>>> \n\n```", "```py\n>>> list1 = [5, 6, 7, 1, 4, 2, 0, 4, 2, 8]\n\n>>> list1.sort (reverse=True)\n\n>>> list1\n\n[8, 7, 6, 5, 4, 4, 2, 2, 1, 0]\n\n>>>\n\n```", "```py\n>>> list2 = [8, 7,4,2,1, \"1\", \"a\",\"@#\", \"nm\"]\n\n>>> list2.sort ()\n\n>>> list2\n\n[1, 2, 4, 7, 8, '1', '@#', 'a', 'nm']\n\n```", "```py\n>>>\n\n>>> list2 = [8, 7,4,2,1, \"1\", \"a\",\"@#\", \"nm\"]\n\n>>> list2.sort (reverse=True)\n\n>>> list2\n\n['nm', 'a', '@#', '1', 8, 7, 4, 2, 1]\n\n>>> \n\n```", "```py\n[(\"a\",4),(\"b\",1),(\"v\",5),(\"f\",2)]\n\n```", "```py\ndef fun1(x):\n\n            return x[1]\n\nlist_tup = [(\"a\",4),(\"b\",1),(\"v\",5),(\"f\",2)]\n\nlist_tup.sort(key= fun1)\n\nprint list_tup\n\n```", "```py\nlist1 = [10,9,3,7,2,1,23,1,561,1,1,96,1] \n\n```", "```py\nlist1 = [10,9,3,7,2,1,23,1,561,1,1,96,1]\n\ndef cmp1(x,y):\n\n            return\n\nlist1.sort(cmp = cmp1) \n\n```", "```py\nlist1 = [10,9,3,7,2,1,23,1,561,1,1,96,1]\n\ndef cmp1(x,y):\n\n           if x == 1 or y==1:\n\n                        c = y-x\n\n            else:\n\n                        c = x-y\n\n            return c\n\nlist1.sort(cmp = cmp1)\n\nprint list1\n\n```", "```py\nList1.reverse()\n\n```", "```py\n>>> av = ['hulk', 'iron-man', 'Captain-America', 'Thor', 'vision', 'Clint']\n\n>>> av.reverse()\n\n>>> av\n\n['Clint', 'vision', 'Thor', 'Captain-America', 'iron-man', 'hulk']\n\n>>> \n\n```", "```py\nlist1 = [2,3,4,5,6]\n\n```", "```py\nlist1 = [2,3,4,5,6]\n\nlist2 = []\n\nfor each in list1:\n\n            list2.append(each*each)\n\nprint list2\n\n```", "```py\n>>> list1 = [2, 3, 4, 5, 6]\n\n>>> [each*each for each in list1]\n\n[4, 9, 16, 25, 36]\n\n>>> \n\n```", "```py\nlist1 = [2,3,4,5,6]\n\nlist2 = []\n\nfor each in list1:\n\n            if each%2== 0:\n\n                        list2.append(each*each)\n\nprint list2\n\n```", "```py\n>>> list1 = [2,3,4,5,6]\n\n>>> [each*each for each in list1 if each%2 == 0]\n\n[4, 16, 36]\n\n>>> \n\n```", "```py\nlist1 = [\"abc\",[2,3,(\"mohit\",\"the avengers\")],1,2,3]\n\n```", "```py\n[(1,5),(9,0),(12,3),(5,4),(13,6),(1,1)]\n\n```"]