["```py\nfrom django import forms\nclass PersonForm(forms.Form):\n    name = forms.CharField(max_length=100)\n    birth_date = forms.DateField(required=False)\n```", "```py\nclass A:\n    pass\nif __name__ == '__main__':\n    a = A()\n    b = A()    \n    print(id(a) == id(b))\n    print(a, b)\n```", "```py\nFalse\n<__main__.A object at 0x7f5771de8f60> <__main__.A object at \n0x7f5771df2208>\n```", "```py\n[\n {\"title\":\"After Dark in Central Park\",\n  \"year\":1900, \n  \"director\":null, \"cast\":null, \"genre\":null},\n {\"title\":\"Boarding School Girls' Pajama Parade\",\n  \"year\":1900, \n  \"director\":null, \"cast\":null, \"genre\":null},\n {\"title\":\"Buffalo Bill's Wild West Parad\",\n  \"year\":1900, \n  \"director\":null, \"cast\":null, \"genre\":null},\n {\"title\":\"Caught\",\n  \"year\":1900, \n  \"director\":null, \"cast\":null, \"genre\":null},\n {\"title\":\"Clowns Spinning Hats\",\n  \"year\":1900, \n  \"director\":null, \"cast\":null, \"genre\":null},\n ...\n  ]\n```", "```py\n    <persons> \n    ```", "```py\n    <person> \n      <firstName>John</firstName> \n      <lastName>Smith</lastName> \n      <age>25</age> \n      <address> \n        <streetAddress>21 2nd Street</streetAddress> \n        <city>New York</city> \n        <state>NY</state> \n        <postalCode>10021</postalCode> \n      </address> \n      <phoneNumbers> \n        <phoneNumber type=\"home\">\n          212 555-1234</phoneNumber> \n        <phoneNumber type=\"fax\">646 555-4567</phoneNumber> \n      </phoneNumbers> \n      <gender> \n        <type>male</type> \n      </gender> \n    </person> \n    ```", "```py\n    <person> \n      <firstName>Jimy</firstName> \n      <lastName>Liar</lastName> \n      <age>19</age> \n      <address> \n        <streetAddress>18 2nd Street</streetAddress> \n        <city>New York</city> \n        <state>NY</state> \n        <postalCode>10021</postalCode> \n      </address> \n      <phoneNumbers> \n      <phoneNumber type=\"home\">212 555-1234</phoneNumber> \n      </phoneNumbers> \n      <gender> \n        <type>male</type> \n      </gender> \n    </person> \n    ```", "```py\n    <person> \n      <firstName>Patty</firstName> \n      <lastName>Liar</lastName> \n      <age>20</age> \n      <address> \n        <streetAddress>18 2nd Street</streetAddress> \n        <city>New York</city> \n        <state>NY</state> \n        <postalCode>10021</postalCode> \n      </address> \n      <phoneNumbers> \n        <phoneNumber type=\"home\">\n          212 555-1234</phoneNumber> \n        <phoneNumber type=\"mobile\">\n          001 452-8819</phoneNumber> \n      </phoneNumbers> \n      <gender> \n        <type>female</type> \n      </gender> \n    </person> \n    ```", "```py\n    </persons>\n    ```", "```py\n    import json\n    import xml.etree.ElementTree as etree\n    ```", "```py\n    class JSONDataExtractor:\n      def __init__(self, filepath):\n        self.data = dict()\n        with open(filepath, mode='r', encoding='utf-8') as \n        f:self.data = json.load(f)\n        @property\n        def parsed_data(self):\n            return self.data\n    ```", "```py\n    class XMLDataExtractor:\n      def __init__(self, filepath):\n        self.tree =  etree.parse(filepath)\n      @property\n      def parsed_data(self):\n      return self.tree\n    ```", "```py\n    def dataextraction_factory(filepath):\n        if filepath.endswith('json'):\n            extractor = JSONDataExtractor\n        elif filepath.endswith('xml'):\n            extractor = XMLDataExtractor\n        else:\n            raise ValueError('Cannot extract data from \n              {}'.format(filepath))\n        return extractor(filepath)\n    ```", "```py\n    def extract_data_from(filepath):\n        factory_obj = None\n        try:\n            factory_obj = dataextraction_factory(filepath)\n        except ValueError as e:\n            print(e)\n        return factory_obj\n    ```", "```py\n    def main():\n        sqlite_factory = \n          extract_data_from('data/person.sq3')\n        print()\n    ```", "```py\n    json_factory = extract_data_from('data/movies.json')\n    json_data = json_factory.parsed_data\n    print(f'Found: {len(json_data)} movies')\n    for movie in json_data:\n      print(f\"Title: {movie['title']}\")\n      year = movie['year']\n      if year:\n      print(f\"Year: {year}\")\n      director = movie['director']\n      if director:\n      print(f\"Director: {director}\")\n      genre = movie['genre']\n      if genre:\n      print(f\"Genre: {genre}\")\n      print()\n    ```", "```py\n    xml_factory = extract_data_from('data/person.xml')\n    xml_data = xml_factory.parsed_data\n    liars = \n      xml_data.findall(f\".//person[lastName='Liar']\")\n    print(f'found: {len(liars)} persons')\n    for liar in liars:\n        firstname = liar.find('firstName').text\n        print(f'first name: {firstname}')\n        lastname = liar.find('lastName').text\n        print(f'last name: {lastname}')\n        [print(f\"phone number ({p.attrib['type']}):\", \n          p.text) \n        for p in liar.find('phoneNumbers')]\n        print()\n    ```", "```py\nCannot extract data from data/person.sq3\n```", "```py\nFound: 9 movies\nTitle: After Dark in Central Park\nYear: 1900\nTitle: Boarding School Girls' Pajama Parade\nYear: 1900\nTitle: Buffalo Bill's Wild West Parad\nYear: 1900\nTitle: Caught\nYear: 1900\nTitle: Clowns Spinning Hats\nYear: 1900\nTitle: Capture of Boer Battery by British\nYear: 1900\nDirector: James H. White\nGenre: Short documentary\nTitle: The Enchanted Drawing\nYear: 1900\nDirector: J. Stuart Blackton\nTitle: Family Troubles\nYear: 1900\nTitle: Feeding Sea Lions\nYear: 1900\n```", "```py\nfound: 2 persons\nfirst name: Jimy\nlast name: Liar\nphone number (home): 212 555-1234\nfirst name: Patty\nlast name: Liar\nphone number (home): 212 555-1234\nphone number (mobile): 001 452-8819\n```", "```py\nclass Frog:\n    def __init__(self, name):\n        self.name = name\n    def __str__(self):\n        return self.name\n    def interact_with(self, obstacle):\n        act = obstacle.action()\n        msg = f'{self} the Frog encounters {obstacle} \n          and {act}!'\n        print(msg)\n```", "```py\nclass Bug:\n    def __str__(self):\n        return 'a bug'\n    def action(self):\n        return 'eats it'\n```", "```py\nclass FrogWorld:\n    def __init__(self, name):\n        print(self)\n        self.player_name = name\n    def __str__(self):\n        return '\\n\\n\\t------ Frog World -------'\n    def make_character(self):\n        return Frog(self.player_name)\n    def make_obstacle(self):\n        return Bug()\n```", "```py\nclass Wizard:\n    def __init__(self, name):\n        self.name = name\n    def __str__(self):\n        return self.name\n    def interact_with(self, obstacle):\n        act = obstacle.action()\n        msg = f'{self} the Wizard battles against \n          {obstacle} and {act}!'\n        print(msg)\n```", "```py\nclass Ork: \n    def __str__(self): \n        return 'an evil ork' \n\n    def action(self): \n        return 'kills it'\n```", "```py\nclass WizardWorld: \n    def __init__(self, name): \n        print(self) \n        self.player_name = name \n\n    def __str__(self): \n        return '\\n\\n\\t------ Wizard World -------' \n\n    def make_character(self): \n        return Wizard(self.player_name) \n\n    def make_obstacle(self): \n        return Ork()\n```", "```py\nclass GameEnvironment:\n    def __init__(self, factory):\n        self.hero = factory.make_character()\n        self.obstacle = factory.make_obstacle()\n    def play(self):\n        self.hero.interact_with(self.obstacle)\n```", "```py\ndef validate_age(name):\n    try:\n        age = input(f'Welcome {name}. How old are you? ')\n        age = int(age)\n    except ValueError as err:\n        print(f\"Age {age} is invalid, please try again...\")\n        return (False, age)\n    return (True, age)\n```", "```py\ndef main():\n    name = input(\"Hello. What's your name? \")\n    valid_input = False\n    while not valid_input:\n        valid_input, age = validate_age(name)\n    game = FrogWorld if age < 18 else WizardWorld\n    environment = GameEnvironment(game(name))\n    environment.play()\n```", "```py\nHello. What's your name? Billy\nWelcome Billy. How old are you? 12\n     ------ Frog World -------\nBilly the Frog encounters a bug and eats it!\n```", "```py\nHello. What's your name? Charles\nWelcome Charles. How old are you? 25\n     ------ Wizard World -------\nCharles the Wizard battles against an evil ork and kills \nit!\n```"]