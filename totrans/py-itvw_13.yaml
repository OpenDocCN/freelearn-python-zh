- en: Chapter 13. Wesley Chun
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![Wesley Chun](img/B08180_16_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Wesley Chun is an American software engineer who has worked at Google for the
    past eight years. In his role as a senior developer advocate, Wesley encourages
    developers to adopt Google tools and APIs. He previously worked for Yahoo! and
    was one of the original Yahoo! Mail engineers. Wesley is a fellow of the Python
    Software Foundation (PSF) and runs CyberWeb Consulting, which specializes in Python
    training and technical courses. He is the bestselling author of the *Core Python
    Programming* book series and co-authored *Python Web Development with Django*.
    Wesley has also contributed to Linux Journal, CNET, and InformIT.
  prefs: []
  type: TYPE_NORMAL
- en: '**Discussion themes: Yahoo! Mail, Python books, v2.7/v3.x.**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Wesley Chun here: @wescpy**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Mike Driscoll**: So why did you become a programmer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun**: I''ve been fascinated by the ability to write code to solve
    problems for a long time now. My interest probably started during the latter years
    of high school.'
  prefs: []
  type: TYPE_NORMAL
- en: My programming teacher showed us how to write code implementing Gauss-Jordan
    elimination and have a computer solve systems of equations automatically. This
    demonstrated how code could be used to automate tedious work that previously required
    inefficient human power to compute.
  prefs: []
  type: TYPE_NORMAL
- en: While we were only using Commodore BASIC, being able to implement that algorithm
    and watch it work successfully, was one of the factors that motivated me to become
    a professional developer. Wanting to make people and processes more efficient
    has led to my multi-decade career as a software engineer.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''Wanting to make people and processes more efficient has led
    to my multi-decade career as a software engineer.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Driscoll**: So how did you come across the Python programming language?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Finding Python was not by choice. I had experience with C/C++ programming,
    as well as popular shell languages such as Tcl and Perl. Then I began working
    at a start-up company where Python became the primary development language. I
    learned Python and helped to build what was eventually to become Yahoo! Mail in
    the late 1990s.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: How was Yahoo! Mail created?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: In 1997, I was working at a start-up called Four11\. True to its
    name, the first product released by the company was one of the first online versions
    of the telephone white pages directories.'
  prefs: []
  type: TYPE_NORMAL
- en: The Four11 service, while being a web app, was written entirely in C++, a monolithic
    binary that was burdensome to build and cumbersome to maintain. The CTO and co-founder
    began to look for a way to develop more nimbly.
  prefs: []
  type: TYPE_NORMAL
- en: After researching a variety of scripting languages, the CTO discovered that
    if you left all of the hardcore work as C++, Python was a language that you could
    drop in as the front-end, as well as replace the middleware with.
  prefs: []
  type: TYPE_NORMAL
- en: Our next product, RocketMail, was developed with this modified stack. We created
    our own web framework before that term even existed. Using this framework, our
    core team was able to launch a successful mail service, which caused Yahoo! to
    acquire our company. RocketMail became Yahoo! Mail and the rest is history.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: So how did you end up becoming an author?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Becoming an author was also accidental. During one of my summer internships
    at college, I was given the task of writing a user manual for customers.'
  prefs: []
  type: TYPE_NORMAL
- en: I learned how to write using Ventura Publisher and with that experience under
    my belt, my coding and writing have been paired together ever since.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''When I was exposed to Python in the workforce, there were
    only two Python books on the market.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: When I was exposed to Python in the workforce, there were only two Python books
    on the market. One was a large case study book, while the other was the first
    Python book, which was already somewhat outdated. The need for a book about Python,
    for developers coming from languages like C and shell scripts, drove me to craft
    the first *Core Python Programming* book.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: What have you learned from writing Python books?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: If I wasn''t already a developer, then I could probably say that
    I learned Python from writing books. Any time that you write a book, you need
    to do some research into the subject matter.'
  prefs: []
  type: TYPE_NORMAL
- en: You should learn more information about your subject than is really necessary.
    In order to take a thorough look at a programming language, you must become familiar
    with both commonly-used features and corner cases.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: How have your readers impacted your writing?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Having readers come up to me and let me know that I was one of their
    primary sources for learning Python, always brings a smile to my face.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''Readers come up to me and let me know that I was one of their
    primary sources for learning Python.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Whenever possible, I ask for direct feedback from my readers so that I can make
    my books even better. Readers love the exercises after a chapter, which help to
    reinforce what they learned. They also appreciate the wide variety of topics covered.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Could you explain the idea behind CyberWeb Consulting?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Yes, my home business is meant to consolidate all of the freelance
    work that I perform for the Python community. CyberWeb Consulting incorporates
    magazine articles, the technical Python training courses that I teach and other
    Python-related consulting opportunities that come my way.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: What projects are you working on now?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: To this day, I still help people to discover how mundane and laborious
    tasks, which were once performed by humans, can now be automated. This frees people
    up to have higher pursuits.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''I still help people to discover how mundane and laborious
    tasks, which were once performed by humans, can now be automated.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'I''m currently a developer advocate at Google. I show developers how to integrate
    Google technologies into their apps, web or mobile. I started by advocating Google
    Cloud Platform products, but have since moved to the familiar G Suite productivity
    applications: Gmail, Google Drive, Calendar, Sheets, etc.'
  prefs: []
  type: TYPE_NORMAL
- en: While people are familiar with these well-known apps, I focus on teaching programmers
    about the developer platforms and APIs behind each of those tools. You'll often
    find me on the G Suite Developers blog or hosting the G Suite Developer Show ([http://goo.gl/JpBQ40](http://goo.gl/JpBQ40)).
  prefs: []
  type: TYPE_NORMAL
- en: On the Python side of the house, I'm working on the third edition of *Core Python
    Programming*, which was my first book. Readers familiar with *Core Python Programming*
    will know that the book is being broken up into two volumes. The third part of
    the second half, *Core Python Applications Programming*, was published back in
    2012\. Now I'm writing the third edition of the first half. This latest book will
    be called *Core Python Language Fundamentals*, to better reflect its content.
  prefs: []
  type: TYPE_NORMAL
- en: I also have a Python blog, which I've honestly been neglecting. Fortunately
    for me, work has provided content for the blog because any of my work on Google
    developer products features a good deal of Python code.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: What most excites you about Python at the moment?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Believe it or not, I''m most excited that people even know what Python
    is today. Back in the old days, nobody had ever heard of Python before. Python
    was such a great tool, so we hoped that the world would one day find out about
    it. I think we''re there now.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''Python was such a great tool, so we hoped that the world would
    one day find out about it. I think we''re there now.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I'm also excited that we are near the end of the crossroads of having both Python
    2 and 3\. Python 3 adoption has taken off and most packages are now available.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: What do you think about the long life of Python 2?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Soon Python 2 will be in the rear-view mirror. Those who are skeptical
    of Python 3.x may remain that way, but that group is slowly disappearing. Python
    moving from 2 to 3 is not the same as moving from Perl 5 to 6.'
  prefs: []
  type: TYPE_NORMAL
- en: The long life of Python 2 was necessary because of the backwards incompatibility
    of Python 3\. However, Python 2.6 and 2.7 are great migration tools. They are
    the only 2.x versions that have 3.x features backported to them, to help with
    the overall migration.
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''I proclaimed that it would take a decade for the world to
    move to Python 3, due to its lack of compatibility with Python 2.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I have been writing and speaking about the longevity of Python 2 for some time.
    Back in 2008, when 3.0 launched, I proclaimed that it would take a decade for
    the world to move to Python 3, due to its lack of compatibility with Python 2.
  prefs: []
  type: TYPE_NORMAL
- en: Based on the momentum that I'm seeing today, I think that I'm going to be more
    accurate in my prediction than I thought was possible. My original statement was
    mostly a flippant and abstract one, which has gradually become more concrete and
    realistic over the past few years. But Python 3.6 is a great version to move over
    to!
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''I think that I''m going to be more accurate in my prediction
    than I thought was possible.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Driscoll**: Python is being increasingly used today for AI and machine learning.
    Why do you think this is?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: Python makes a great language, regardless of the field that it is
    applied to. Python does not require its users to be computer scientists in order
    to be able to solve problems. The language syntax does not get in the way for
    those who want a tool to build solutions with. Python is also great at encouraging
    group collaboration because of its understandable syntax.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: So how do you think that Python could be made a better language
    for AI and machine learning?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: The continued development of existing Python libraries and the creation
    of new libraries would make working in the AI field even easier. That would help
    everyone.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''The continued development of existing Python libraries and
    the creation of new libraries would make working in the AI field even easier.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Driscoll**: What changes would you like to see in future Python releases?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chun**: I''d love to see fewer Python releases and fewer new features. I
    think what the language has today (Python 3.6) is great.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Wesley Chun: ''I''d love to see fewer Python releases and fewer new features.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Sure, we need to have bug and security fixes. Additional performance improvements
    would also be welcome, along with the solving of the Global Interpreter Lock issue.
    However, I'd like to see the release schedules stretched out.
  prefs: []
  type: TYPE_NORMAL
- en: Eventually, I'd like to see development mostly stop with Python, so that it
    could be recognized as a standard like C or C++. If further improvements need
    to be made, then they can come as revisions to the standard. Being recognized
    as a standard will bring about Python's legitimacy and its greater adoption, especially
    in larger corporations.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Thank you, Wesley Chun.'
  prefs: []
  type: TYPE_NORMAL
