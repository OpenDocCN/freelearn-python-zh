["```py\nif __name__ == \"__main__\":\n    # open text file to read\n    file = open('read_line.txt', 'r')\n    # read from file and store it to data\n    data = file.read()\n    print(data)\n    file.close()\n\n```", "```py\n       file = open('read_line.txt', 'r')\n\n```", "```py\n       data = file.read() \n       print(data)\n\n```", "```py\n    I am learning Python Programming using the Raspberry Pi Zero\n\n```", "```py\n       if __name__ == \"__main__\": \n          # open text file to read\n          file = open('read_line.txt', 'r') \n\n          # read a line from the file\n          data = file.readline() \n          print(data) \n\n          # read another line from the file \n          data = file.readline() \n          print(data) \n\n          file.close()\n\n```", "```py\n I am learning Python Programming using the Raspberry Pi Zero. \n\n This is the second line.\n\n```", "```py\n       if __name__ == \"__main__\": \n           # open text file to read\n           file = open('read_lines.txt', 'r') \n\n           # read a line from the file\n           data = file.readlines() \n           for line in data: \n               print(line) \n\n           file.close()\n\n```", "```py\n       data = file.readlines() \n           for line in data: \n               print(line)\n\n```", "```py\n      file = open('write_file.txt', 'w')\n\n```", "```py\n      file.write('I am excited to learn Python using\n      Raspberry Pi Zero')\n\n```", "```py\n       if __name__ == \"__main__\": \n          # open text file to write\n          file = open('write_file.txt', 'w') \n          # write a line from the file\n          file.write('I am excited to learn Python using\n          Raspberry Pi Zero \\n') \n          file.close() \n\n          file = open('write_file.txt', 'r') \n          data = file.read() \n          print(data) \n          file.close()\n\n```", "```py\n       I am excited to learn Python using Raspberry Pi Zero\n\n```", "```py\nif __name__ == \"__main__\": \n   # open text file to append\n   file = open('write_file.txt', 'a') \n   # append a line from the file\n   file.write('This is a line appended to the file\\n') \n   file.close() \n\n   file = open('write_file.txt', 'r') \n   data = file.read() \n   print(data) \n   file.close()\n\n```", "```py\n    I am excited to learn Python using Raspberry Pi Zero\n This is a line appended to the file\n\n```", "```py\n    I am excited to learn Python using Raspberry Pi Zero\n This is a line appended to the file\n\n```", "```py\nif __name__ == \"__main__\": \n   # open text file to read\n\n   file = open('write_file.txt', 'r') \n\n   # read the second line from the file\n   file.seek(53) \n\n   data = file.read() \n   print(data) \n   file.close()\n\n```", "```py\n    This is a line appended to the file\n\n```", "```py\nif __name__ == \"__main__\": \n   # open text file to read and write \n   file = open('write_file.txt', 'r') \n\n   # set the pointer to the desired position \n   file.seek(5) \n   data = file.read(1) \n   print(data) \n\n   # rewind the pointer\n   file.seek(5) \n   data = file.read(7) \n   print(data) \n   file.close()\n\n```", "```py\n       file.seek(5) \n       data = file.read(1) \n       print(data)\n\n```", "```py\n       file.seek(5) \n       data = file.read(7) \n       print(data)\n\n```", "```py\n    I am excited to learn Python using Raspberry Pi Zero\n This is a line appended to the file\n\n```", "```py\nif __name__ == \"__main__\": \n   # open text file to read and write \n   file = open('write_file.txt', 'r+') \n\n   # set the pointer to the desired position \n   file.seek(68) \n   file.write('that was modified \\n') \n\n   # rewind the pointer to the beginning of the file\n   file.seek(0) \n   data = file.read() \n   print(data) \n   file.close()\n\n```", "```py\n       I am excited to learn Python using Raspberry Pi Zero\n This is a line that was modified\n\n```", "```py\nif __name__ == \"__main__\": \n   with open('write_file.txt', 'r+') as file: \n         # read the contents of the file and print to the screen \n         print(file.read()) \n         file.write(\"This is a line appended to the file\") \n\n         #rewind the file and read its contents \n         file.seek(0) \n         print(file.read()) \n   # the file is automatically closed at this point \n   print(\"Exited the with keyword code block\")\n\n```", "```py\nimport configparser \n\nif __name__ == \"__main__\": \n   # initialize ConfigParser \n   config_parser = configparser.ConfigParser() \n\n   # Let's create a config file \n   with open('raspi.cfg', 'w') as config_file: \n         #Let's add a section called ApplicationInfo \n         config_parser.add_section('AppInfo') \n\n         #let's add config information under this section \n         config_parser.set('AppInfo', 'id', '123') \n         config_parser.set('AppInfo', 'gpio', '2') \n         config_parser.set('AppInfo', 'debug_switch', 'True') \n         config_parser.set('AppInfo', 'sensor_address', '0x62') \n\n         #Let's add another section for credentials \n         config_parser.add_section('Credentials') \n         config_parser.set('Credentials', 'token', 'abcxyz123') \n         config_parser.write(config_file) \n   print(\"Config File Creation Complete\")\n\n```", "```py\n       config_parser = configparser.ConfigParser()\n\n```", "```py\n       config_parser.add_section('AppInfo') \n       config_parser.add_section('Credentials')\n\n```", "```py\n       config_parser.set('AppInfo', 'id', '123')\n\n```", "```py\n       config_parser.write(config_file)\n\n```", "```py\n[AppInfo] \nid = 123 \ngpio = 2 \ndebug_switch = True \nsensor_address = 0x62 \n\n[Credentials] \ntoken = abcxyz123\n\n```", "```py\nimport configparser \n\nif __name__ == \"__main__\": \n   # initialize ConfigParser \n   config_parser = configparser.ConfigParser() \n\n   # Let's read the config file \n   config_parser.read('raspi.cfg') \n\n   # Read config variables \n   device_id = config_parser.get('AppInfo', 'id') \n   debug_switch = config_parser.get('AppInfo', 'debug_switch') \n   sensor_address = config_parser.get('AppInfo', 'sensor_address') \n\n   # execute the code if the debug switch is true \n   if debug_switch == \"True\":\n         print(\"The device id is \" + device_id) \n         print(\"The sensor_address is \" + sensor_address)\n\n```", "```py\n      device_id = config_parser.get('AppInfo', 'id')\n\n```", "```py\n       if debug_switch == \"True\":\n           print(\"The device id is \" + device_id) \n           print(\"The sensor_address is \" + sensor_address)\n\n```", "```py\nimport configparser \n\nif __name__ == \"__main__\": \n   # initialize ConfigParser \n   config_parser = configparser.ConfigParser() \n\n   # Let's read the config file \n   config_parser.read('raspi.cfg') \n\n   # Set firmware version \n   config_parser.set('AppInfo', 'fw_version', 'A3') \n\n   # write the updated config to the config file \n   with open('raspi.cfg', 'w') as config_file: \n       config_parser.write(config_file)\n\n```", "```py\n       # initialize ConfigParser \n       config_parser = configparser.ConfigParser() \n\n       # Let's read the config file \n       config_parser.read('raspi.cfg')\n\n```", "```py\n       # Set firmware version \n       config_parser.set('AppInfo', 'fw_version', 'A3')\n\n```", "```py\n       with open('raspi.cfg', 'w') as config_file: \n          config_parser.write(config_file)\n\n```", "```py\n       with open(\"csv_example.csv\", 'w') as csv_file:\n\n```", "```py\n       csv_writer = csv.writer(csv_file)\n\n```", "```py\n       csv_writer.writerow([123, 456, 789])\n\n```", "```py\n       import csv \n       if __name__ == \"__main__\": \n          # initialize csv writer \n          with open(\"csv_example.csv\", 'w') as csv_file: \n                csv_writer = csv.writer(csv_file) \n                csv_writer.writerow([123, 456, 789]) \n                csv_writer.writerow([\"Red\", \"Green\", \"Blue\"])\n\n```", "```py\n 123,456,789\n Red,Green,Blue\n\n```", "```py\n       with open(\"csv_example.csv\", 'r') as csv_file:\n\n```", "```py\n       csv_reader = csv.reader(csv_file)\n\n```", "```py\n       for row in csv_reader: \n           print(row)\n\n```", "```py\n       import csv \n\n       if __name__ == \"__main__\": \n          # initialize csv writer \n          with open(\"csv_example.csv\", 'r') as csv_file: \n                csv_reader = csv.reader(csv_file) \n\n                for row in csv_reader: \n                      print(row)\n\n```", "```py\n       ['123', '456', '789']\n ['Red', 'Green', 'Blue']\n\n```", "```py\nimport os\nif __name__ == \"__main__\":\n    # Check if file exists\n    if os.path.isfile('/home/pi/Desktop/code_samples/write_file.txt'):\n        print('The file exists!')\n    else:\n        print('The file does not exist!')\n\n```", "```py\nif os.path.isfile('/home/pi/Desktop/code_samples/write_file.txt'): \n    print('The file exists!') \nelse: \n    print('The file does not exist!')\n\n```", "```py\n# Confirm code_samples' existence \nif os.path.isdir('/home/pi/Desktop/code_samples'): \n    print('The directory exists!') \nelse: \n    print('The directory does not exist!')\n\n```", "```py\nos.remove('/home/pi/Desktop/code_samples/read_file.txt')\n\n```", "```py\n ps aux\n\n```", "```py\nimport os\nimport signal\nif __name__ == \"__main__\":\n    #kill the application\n    try:\n        os.kill(1815, signal.SIGKILL)\n    except OSError as error:\n        print(\"OS Error \" + str(error))\n\n```", "```py\n# List all files\nfor file in glob.glob('*.py'):\n    print(file)\n\n```", "```py\nread_from_file.py\nconfig_parser_read.py\nappend_to_file.py\nread_line_from_file.py\nconfig_parser_modify.py\npython_utils.py\nconfig_parser_write.py\ncsv_write.py\n\n```", "```py\n# List all files of the format 1xx.txt\nfor file in glob.glob('txt_files/file1[0-9][0-9].txt'):\n    print(file)\n\n```", "```py\ntxt_files/file126.txt\ntxt_files/file125.txt\ntxt_files/file124.txt\ntxt_files/file123.txt\ntxt_files/file127.txt\n\n```", "```py\nimport glob\nimport shutil\nimport os\nif __name__ == \"__main__\":\n    # move files to the current directory\n    for file in glob.glob('txt_files/file1[0-9][0-9].txt'):\n        shutil.move(file, '.')\n    # make a copy of files in the folder 'txt_files' and delete them\n    for file in glob.glob('file1[0-9][0-9].txt'):\n        shutil.copy(file, 'txt_files')\n        os.remove(file)\n\n```", "```py\nimport subprocess\nif __name__ == \"__main__\":\n    subprocess.Popen(['aplay', 'tone.wav'])\n\n```", "```py\nimport sys\nif __name__ == \"__main__\":\n    with open(sys.argv[1], 'r') as read_file:\n        print(read_file.read())\n\n```", "```py\npython3 sys_example.py read_lines.txt\n\n```", "```py\nI am learning Python Programming using the Raspberry Pi Zero.\nThis is the second line.\nLine 3.\nLine 4.\nLine 5.\nLine 6.\nLine 7.\n\n```"]