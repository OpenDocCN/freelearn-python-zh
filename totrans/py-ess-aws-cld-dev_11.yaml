- en: '11'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using Python with Glue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we are going to learn how to create a data integration pipeline
    with AWS Glue. **AWS Glue** is a data integration service that is used for the
    **Extract, Transform, and Load** (**ETL**) process. Glue is a serverless data
    integration service; therefore, you don’t need to create and manage a server,
    as the infrastructure is managed by AWS. With Glue, you can collect data from
    different data sources, such as S3, databases, or filesystems, to process and
    transform the data. The result is stored in S3 or the database, or you can call
    an API.
  prefs: []
  type: TYPE_NORMAL
- en: 'The chapter covers the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: What is the AWS Glue service?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AWS Glue service creation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating a simple Python application with AWS Glue
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What is the AWS Glue service?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'AWS has more than 100 services. When you integrate data between AWS and other
    sources, you might need to load data from the source, manipulate it with some
    transformations, and store it in a service. AWS Glue meets these requirements
    and provides a service that allows the preparation of data. In the following figure,
    you can see a very high-level overview of Glue. As you can see, Glue extracts
    the data from different sources, carries out some transformation, and loads the
    data in another source:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.1_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.1 – AWS Glue
  prefs: []
  type: TYPE_NORMAL
- en: For example, let us assume you have data in S3 that is loaded by a batch process.
    To make it searchable, you have a requirement to store it in DynamoDB. Between
    these processes, one requirement is to filter, clean, and manipulate the data
    with some transformations. For that requirement, AWS Glue is a good option for
    data integration with some data manipulation.
  prefs: []
  type: TYPE_NORMAL
- en: Features of AWS Glue
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'AWS Glue has the following features:'
  prefs: []
  type: TYPE_NORMAL
- en: It automatically scales based on the transformation workload.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It has wider integration with other services to load data, such as S3, RDS,
    and DynamoDB. Hence, you can easily read data with these services.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can schedule the pipeline; hence, the ETL process can be performed regularly
    based on the scheduled time.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It has a data catalog feature that allows you to store metadata information
    for the data structure.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It is able to generate code for the ETL pipeline. For example, you need to read
    CSV data from S3 to load another S3 location in JSON format. Glue automatically
    generates the code.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is Git integration, so you can easily pull code from Git to run the ETL
    pipeline.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It provides a visual interface with a drag-and-drop code implementation feature.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we looked at AWS Glue's features. To understand them better,
    we are going to convert a CSV file to JSON using the AWS Glue service.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an S3 sample file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to create a simple S3 bucket that stores a CSV
    file. Let’s follow the instructions step by step:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the AWS S3 service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the **Create** **bucket** button:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.2_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.2 – Create bucket
  prefs: []
  type: TYPE_NORMAL
- en: 'Give a unique **bucket name** and click **Create bucket** at the end of the
    panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.3_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.3 – Input bucket
  prefs: []
  type: TYPE_NORMAL
- en: 'The bucket is created:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.4_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.4 – Bucket list
  prefs: []
  type: TYPE_NORMAL
- en: 'Create an `addresses.csv` file on your computer with the following content
    and upload it to the S3 bucket. Please save the file in the `UTF-8` format; otherwise,
    there might be an issue in some Glue versions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Click the **Upload** button within the bucket to upload the content:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.5_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.5 – Uploading the CSV
  prefs: []
  type: TYPE_NORMAL
- en: 'After the upload, the bucket will include the CSV file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.6_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.6 – S3 content
  prefs: []
  type: TYPE_NORMAL
- en: We have successfully uploaded the file. In the next step, we will create the
    required permissions in order to create a Glue job.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the permissions for a Glue job
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to define the required permissions for a Glue
    job:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the AWS IAM service.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click **Roles** on the left-hand side:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.7_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.7 – List of IAM services
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Create role**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.8_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.8 – Create role
  prefs: []
  type: TYPE_NORMAL
- en: 'Under **Use case**, select **Glue**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.9_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.9 – Selecting Glue
  prefs: []
  type: TYPE_NORMAL
- en: 'On the next page, select **AmazonS3FullAccess** and **CloudWatchFullAccess**
    under **Policy name**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.10_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: (a)
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.11_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: (b)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.10 – S3 and CloudWatch access
  prefs: []
  type: TYPE_NORMAL
- en: 'Give a name for the role that we are creating, then you can click **Create
    role** to finish the role creation:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.12_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: (a)
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.13_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: (b)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 11.11 – Role name and creation
  prefs: []
  type: TYPE_NORMAL
- en: We have created the required role for an AWS Glue job. In the next step, we
    will create a simple AWS Glue job by using roles and the S3 bucket.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an AWS Glue service
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this section, we are going to create an AWS Glue service. Let’s follow the
    instructions step by step:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Type `AWS Glue` in the AWS Management Console search bar and click the **AWS
    Glue** result that appears:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.14_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.12 – Console search
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Jobs** on the left-hand side:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.15_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.13 – Glue job
  prefs: []
  type: TYPE_NORMAL
- en: 'In the **Create job** section, select **Visual with a source and target**.
    This will create a visual interface and predefined script in order to convert
    from a CSV to a JSON file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.16_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.14 – Create job
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking **Create** on the right side of the panel, you will see the
    visual editor:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.17_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.15 – Visual editor
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **S3 bucket** under **Data source - S3 bucket** and you will see the
    data source details on the right side. It consists of some details on how to parse
    the source data. As you can see in the following figure, we set **S3 location**
    as a data path, **Data format** is **CSV**, and **Delimiter** is comma-separated:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.18_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.16 – Data source
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **Transform** tab from the panel and you will see the following
    data mapping. This mapping is generated by Glue:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.19_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.17 – Mapping
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **Data target properties - S3** tab from the panel and fill out
    the panel with target details. Since we are converting to JSON, the format will
    be **JSON**. The target location could also be another S3 bucket; in this example,
    I will give the same S3 location for input and output:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.20_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.18 – Data target
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the **Job details** tab in order to fill out other information such
    as the job name and script. You can see these details in *steps 9* and *10*:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.21_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.19 – Job details
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in the job’s **Name** and **IAM Role** fields to run the Glue job:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.22_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.20 – Name and role
  prefs: []
  type: TYPE_NORMAL
- en: 'There is one more configuration left. Scroll down and fill in the **Script
    filename** and **Script path** details that Glue will create:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.23_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.21 – Script filename and path
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Save**. As you can see, Glue has created a Python Spark script that
    is going to convert CSV to JSON. **PySpark** is a data processing library that
    can also be used in the AWS Glue job:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.24_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.22 – Code generation
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Run** on the right side of the panel:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/Figure_11.25_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.23 – Button panel for Run
  prefs: []
  type: TYPE_NORMAL
- en: 'After some time, you can check the job status from the **Runs** tab:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/Figure_11.26_B19195.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11.24 – Runs tab
  prefs: []
  type: TYPE_NORMAL
- en: 'When you check the S3 folder, the file is converted to JSON. Here is some sample
    output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Congrats! You are able to convert a CSV file to a JSON file. As you can see,
    AWS Glue created a predefined script to make some ETL jobs.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned about the AWS Glue service and how to create an
    ETL pipeline with AWS Glue. Glue is very efficient when you need to create data
    pipelines. One cool feature of Glue is the visual flow generator, which allows
    you to create a flow with drag and drop. It makes it easy to create and generate
    the flow, which saves lots of time. In addition to that, for people who don’t
    have that much code experience, Glue’s visual flow facilitates their tasks. Hence,
    if you work with data, Glue is one of the best services within AWS. In the next
    chapter, we will create a sample project within AWS using the Python programming
    language.
  prefs: []
  type: TYPE_NORMAL
