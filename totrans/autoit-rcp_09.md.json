["```py\n    chetans-MacBookPro:~ Chetan$ cd book/ch10/\n    chetans-MacBookPro:ch10 Chetan$ virtualenv ch10\n    New python executable in ch10/bin/python2.7\n    Also creating executable in ch10/bin/python\n    Installing setuptools, pip, wheel...done.\n    chetans-MacBookPro:ch10 Chetan$ source ch10/bin/activate\n    (ch10)chetans-MacBookPro:ch10 Chetan$\n\n    ```", "```py\n    (ch10)chetans-MacBookPro:ch10 Chetan$ pip install pillow\n    You are using pip version 7.1.0, however version 8.1.2 is\n            available.\n    You should consider upgrading via the 'pip install --upgrade\n            pip' command.\n    Collecting pillow\n     Downloading Pillow-3.4.2.tar.gz (10.8MB)\n     100% |████████████████████████████████| 10.8MB 39kB/s \n    Building wheels for collected packages: pillow\n     Running setup.py bdist_wheel for pillow\n    Installing collected packages: pillow\n    Successfully installed pillow-3.4.2\n\n    ```", "```py\n    from PIL import Image\n    img = Image.open('beach_sunset.png')\n    img.save('beach-sunset-conv.jpg','jpeg')\n\n    ```", "```py\n            from PIL import Image \n            img = Image.open('beach_sunset.png').convert('L') \n            img.show() \n            img.save('beach-sunset-gray.png','png') \n\n    ```", "```py\n            from PIL import Image \n            img = Image.open('sunset.jpg') \n            img.rotate(180).save('sunset180deg.jpg') \n\n    ```", "```py\n            from PIL import Image \n            img = Image.open('sunset.jpg') \n            img.transpose(Image.FLIP_LEFT_RIGHT).save(\n                          'sunset_horizontal_flip.png')\n            img.transpose(Image.FLIP_TOP_BOTTOM).save(\n                             'sunset_vertical_flip.png') \n\n    ```", "```py\n            from PIL import Image \n            img = Image.open('sunset.jpg') \n            resized = img.resize((256,256)) \n            resized.save('sunset-resize.jpg', 'jpeg') \n\n    ```", "```py\n            import os, sys \n            from PIL import Image \n\n            size = 128, 128 \n            infile = \"sunset.jpg\" \n            outfile = os.path.splitext(infile)[0] + \".thumbnail.jpg\" \n            if infile != outfile: \n                try: \n                    im = Image.open(infile) \n                    im.thumbnail(size, Image.BICUBIC) \n                    im.save(outfile, \"JPEG\") \n                except IOError: \n                    print \"cannot create thumbnail for '%s'\" % infile \n\n    ```", "```py\n            from PIL import Image \n            img = Image.open('sunset.jpg') \n            cropImg = img.crop((965, 700, 1265, 960)) \n            cropImg.save('sunset-crop.jpg') \n\n    ```", "```py\n(ch10)chetans-MacBookPro:ch10 Chetan$ pip install wand\nYou are using pip version 7.1.0, however version 8.1.2 is\n        available.\nYou should consider upgrading via the 'pip install --upgrade\n        pip' command.\nCollecting wand\n Downloading Wand-0.4.3.tar.gz (65kB)\n 100% |████████████████████████████████| 65kB 101kB/s \nBuilding wheels for collected packages: wand\n Running setup.py bdist_wheel for wand\n Stored in directory:\n\n             /Users/chetan/Library/Caches/pip/wheels/77/\n             c2/a3/6cfc4bb3e21c3103df1ce72d7d301b1965657ee6f81cd3738c\nSuccessfully built wand\nInstalling collected packages: wand\nSuccessfully installed wand-0.4.3\n\n```", "```py\n            from PIL import Image \n            img = Image.open('sunset-crop.jpg') \n            pasteImg = Image.open('sunset.jpg') \n            pasteImg.paste(img, (0,0)) \n            pasteImg.save('pasted.jpg') \n\n    ```", "```py\n            from wand.image import Image \n\n            with Image(filename='sunset.jpg') as background: \n            with Image(filename='watermark.jpg') as watermark: \n              background.watermark(image=watermark, transparency=0.25,\n              left=560, top=300) \n            background.save(filename='result.jpg') \n\n    ```", "```py\n     (ch10)chetans-MacBookPro:ch10 Chetan$ brew install gcc \n            Warning: Building gcc from source: \n            The bottle needs the Xcode CLT to be installed. \n            ==> Using the sandbox \n            ==> Downloading https://ftpmirror.gnu.org/gcc/gcc-6.2.0/gcc-\n            6.2.0.tar.bz2 \n            Already downloaded: /Users/chetan/Library/Caches/Homebrew/gcc-\n            6.2.0.tar.bz2 \n            ==> Downloading\n            https://raw.githubusercontent.com/Homebrew/formula-\n            patches/e9e0ee09389a54cc4c8fe1c24ebca3cd765ed0ba/gcc/6.1.0-\n            jit.patch \n            Already downloaded: /Users/chetan/Library/Caches/Homebrew/gcc--\n            patch-     863957f90a934ee8f89707980473769cff47\n            ca0663c3906992da6afb242fb220.patch \n            ==> Patching \n            ==> Applying 6.1.0-jit.patch \n            patching file gcc/jit/Make-lang.in \n            ==> ../configure --build=x86_64-apple-darwin15.5.0 --\n                prefix=/usr/local/Cellar/gcc/6.2.0 --\n                libdir=/usr/local/Cellar/gcc/6.2.0/lib/gcc/6 --enable-\n                languages=c,c++,objc,obj-c++,fortran\n                ==> make bootstrap \n\n            ==> make install \n            ==> Caveats \n            GCC has been built with multilib support. Notably, \n                OpenMP may not\n            work: \n                https://gcc.gnu.org/bugzilla/show_bug.cgi?id=60670 \n            If you need OpenMP support you may want to\n            brew reinstall gcc --without-multilib \n            ==> Summary \n              /usr/local/Cellar/gcc/6.2.0: 1,436 files, 282.6M, built in 70\n              minutes 47 seconds \n              (ch10)chetans-MacBookPro:ch10 Chetan$ \n\n    ```", "```py\n     (ch10)chetans-MacBookPro:ch10 Chetan$ pip install scipy \n            You are using pip version 7.1.0, however version 8.1.2 is\n            available. \n            You should consider upgrading via the 'pip install --upgrade\n            pip' \n            command. \n            Collecting scipy \n              Using cached scipy-0.18.1.tar.gz \n            Building wheels for collected packages: scipy \n              Running setup.py bdist_wheel for scipy \n\n              Stored in directory: \n                 /Users/chetan/Library/Caches/pip/wheels/33/\n                 c4/f5/e00fe242696eba9e5f63cd0f30eaf5780b8c98067eb164707c \n            Successfully built scipy \n            Installing collected packages: scipy \n            Successfully installed scipy-0.18.1 \n\n    ```", "```py\n            from PIL import Image, ImageChops \n\n            def differnce_images(path_one, path_two, diff_save_location): \n                image_one = Image.open(path_one) \n                image_two = Image.open(path_two) \n\n                diff = ImageChops.difference(image_one, image_two) \n\n                if diff.getbbox() is None: \n                    print \"No difference in the images\" \n                    return \n                else: \n                    print diff.getbbox()\n                    diff.save(diff_save_location) \n\n            differnce_images('sunset.jpg','pasted.jpg', \n                             'diff.jpg') \n\n    ```", "```py\n            from scipy.misc import imread \n            from scipy.linalg import norm \n\n            def compare_images(img1, img2): \n                diff = img1 - img2 \n                z_norm = norm(diff.ravel(), 0) \n                return z_norm \n\n            img1 = imread(\"sunset.jpg\").astype(float) \n            img2 = imread(\"pasted.jpg\").astype(float) \n            z_norm = compare_images(img1, img2) \n            print \"Pixel Difference:\", z_norm \n\n    ```", "```py\n    Pixel Difference: 246660.0\n\n    ```", "```py\n            (ch10)chetans-MacBookPro:ch10 Chetan$ brew install \n            homebrew/science/opencv \n            ==> Tapping homebrew/science \n            Cloning into '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-\n            science'... \n            ... \n            ... \n            ==> Summary \n              /usr/local/Cellar/opencv/2.4.13.1: 277 files, 35.5M \n\n    ```", "```py\n            cd ch10/lib/python2.7/site-packages/  \n            ln -s /usr/local/Cellar/opencv/2.4.13.1/lib/python2.7/site-\n            packages/cv.py \n            ln -s /usr/local/Cellar/opencv/2.4.13.1/lib/python2.7/site- \n            packages/cv2.so \n\n    ```", "```py\n            import cv2 \n\n            face_cascade = cv2.CascadeClassifier('haarcascade.xml') \n            original_image_path = 'Chetan.jpeg' \n\n            image = cv2.imread(original_image_path) \n\n            faces = face_cascade.detectMultiScale( \n                image, scaleFactor=1.1, minNeighbors=3, \n                minSize=(30, 30), flags=cv2.cv.CV_HAAR_SCALE_IMAGE) \n\n            for (x, y, w, h) in faces: \n                cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2) \n\n            cv2.imwrite('chetan_face.jpg', image) \n\n    ```", "```py\n    (ch10)chetans-MacBookPro:ch10 Chetan$ pip install scikit-image\n    You are using pip version 7.1.0, however version 8.1.2 is\n            available.\n    You should consider upgrading via the 'pip install --upgrade\n            pip' command.\n    Collecting scikit-image\n     Downloading scikit-image-0.12.3.tar.gz (20.7MB)\n     100% |████████████████████████████████| 20.7MB 19kB/s \n    Requirement already satisfied (use --upgrade to upgrade):\n            six>=1.7.3 in ./lib/python2.7/site-packages (from scikit-image)\n    Collecting networkx>=1.8 (from scikit-image)\n     Downloading networkx-1.11-py2.py3-none-any.whl (1.3MB)\n     100% |████████████████████████████████| 1.3MB 325kB/s \n    Requirement already satisfied (use --upgrade to upgrade): \n            pillow>=2.1.0 in ./lib/python2.7/site-packages (from scikit-\n            image)\n    Collecting dask[array]>=0.5.0 (from scikit-image)\n     Downloading dask-0.11.1-py2.py3-none-any.whl (375kB)\n     100% |████████████████████████████████| 376kB 946kB/s \n    Collecting decorator>=3.4.0 (from networkx>=1.8->scikit-image)\n     Using cached decorator-4.0.10-py2.py3-none-any.whl\n    Collecting toolz>=0.7.2 (from dask[array]>=0.5.0->scikit-image)\n     Using cached toolz-0.8.0.tar.gz\n    Requirement already satisfied (use --upgrade to upgrade):\n            numpy in \n            ./lib/python2.7/site-packages (from dask[array]>=0.5.0->scikit-\n            image)\n    Building wheels for collected packages: scikit-image, toolz\n     Running setup.py bdist_wheel for scikit-image\n     Stored in directory:\n    /Users/chetan/Library/Caches/pip/wheels/d5/e8/77/925fe026d562a74a0bccf1c7dd47d00f5f6ab2d395f247e674\n     Running setup.py bdist_wheel for toolz\n     Stored in directory: /Users/chetan/Library/Caches/pip/wheels/b0/84/bf/7089262387e8ea60bdefb1fdb84d2ee99427f6d09c9c7ba37d\n    Successfully built scikit-image toolz\n    Installing collected packages: decorator, networkx, toolz,\n            dask,\n            scikit-image\n    Successfully installed dask-0.11.1 decorator-4.0.10 networkx-\n            1.11 \n            scikit-image-0.12.3 toolz-0.8.0\n\n    ```", "```py\n    (ch10)chetans-MacBookPro:ch10 Chetan$ brew install tesseract\n    ==> **Auto-updated Homebrew!** \n    Updated 4 taps (homebrew/core, homebrew/dupes, homebrew/python,\n            homebrew/science).\n    ..\n    ..\n    ..\n    ==> **Installing dependencies for tesseract: leptonica** \n    ==> **Installing tesseract dependency: leptonica** \n    ==> **Downloading https://homebrew.bintray.com/bottles/leptonica-\n            1.73.el_capitan.bottle.tar.gz** \n    #######################################################\n              ################    # 100.0%\n    ==> **Pouring leptonica-1.73.el_capitan.bottle.tar.gz** \n     /usr/local/Cellar/leptonica/1.73: 50 files, 5.4M\n    ==> **Installing tesseract** \n    ==> **Downloading https://homebrew.bintray.com/bottles/tesseract-\n            3.04.01_2.el_capitan.bottle.tar.gz** \n    ########################################################\n              ###############    # 100.0%\n    ==> **Pouring tesseract-3.04.01_2.el_capitan.bottle.tar.gz** \n     /usr/local/Cellar/tesseract/3.04.01_2: 76 files, 39M\n    (ch10)chetans-MacBookPro:ch10 Chetan$ pip install pytesseract\n    Collecting pytesseract\n     Downloading pytesseract-0.1.6.tar.gz (149kB)\n     100% |████████████████████████████████| 151kB 201kB/s \n    Building wheels for collected packages: pytesseract\n     Running setup.py bdist_wheel for pytesseract\n     Stored in directory: \n              /Users/chetan/Library/Caches/pip/wheels/f2/27/64/\n              a8fa99a36b38980aaf8d1d2c87f5dd6b5a0a274b8706e3df36\n    Successfully built pytesseract\n    Installing collected packages: pytesseract\n    Successfully installed pytesseract-0.1.6\n\n    ```", "```py\n     **from** pyimagesearch.transform **import** four_point_transform \n     **from** pyimagesearch **import** imutils \n     **from** skimage.filters i**mport** threshold_adaptive \n            import cv2 \n\n            image = cv2.imread(\"images/murray.jpg\") \n            ratio = image.shape[0] / 500.0 \n            orig = image.copy() \n            image = imutils.resize(image, height = 500) \n            gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY) \n            gray = cv2.GaussianBlur(gray, (5, 5), 0) \n            edged = cv2.Canny(gray, 75, 200) \n            cv2.imwrite('scan_edge.jpg', edged) \n\n            (cnts, _) = cv2.findContours(edged.copy(), cv2.RETR_LIST,\n            cv2.CHAIN_APPROX_SIMPLE) \n            cnts = sorted(cnts, key = cv2.contourArea, reverse = True)[:5]\n            for c in cnts: \n               peri = cv2.arcLength(c, True) \n               approx = cv2.approxPolyDP(c, 0.02 * peri, True) \n               if len(approx) == 4: \n                  screenCnt = approx \n                  break \n            cv2.drawContours(image,  \n                    [screenCnt], -1, (0, 255, 0), 2) \n            cv2.imwrite('scan_contours.jpg', image) \n\n            warped = four_point_transform(orig, screenCnt.reshape(4, 2) *\n            ratio) \n            warped = cv2.cvtColor(warped, cv2.COLOR_BGR2GRAY) \n            warped = threshold_adaptive(warped, 251, offset = 10) \n            warped = warped.astype(\"uint8\") * 255 \n            cv2.imwrite('scanned.jpg', warped) \n\n            print \"Printing the contents of the image:\" \n            from PIL import Image \n            img = Image.open(\"scanned.jpg\") \n            import pytesseract \n     **print**(pytesseract.image_to_string(img))\n\n    ```", "```py\n    Printing the contents of the image:\n    Vienna: Andy Murray's pm\"\n    suitof the world No. Iranking\n    was severely tested by Slovak\n    leﬁ-hander Martin Klizan in\n    his Vienna openeron Wednwo\n    day before the British star\n    clinched a 6-3, 64 (57), 6-0 win.\n    The 29-year-old Wimble-\n    don and Olympic champion,\n    who is closing in on Novak\n    , Djokovic's top ranking, took\n    his season record to 66 wins\n    and just ninelosses. ﬂ\n\n    ```"]