- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A knowledge of data structures and the algorithms that bring them to life is
    the key to building successful data applications. With this knowledge, we have
    a powerful way to unlock the secrets buried in large amounts of data. This skill
    is becoming more important in a data-saturated world, where the amount of data
    being produced dwarfs our ability to analyze it.  In this book, you will learn
    the essential Python data structures and the most common algorithms. This book
    will provide basic knowledge of Python and an insight into the exciting world
    of data algorithms. We will look at algorithms that provide solutions to the most
    common problems in data analysis, including sorting and searching data, as well
    as being able to extract important statistics from data. With this easy-to-read
    book, you will learn how to create complex data structures such as linked lists,
    stacks, and queues, as well as sorting algorithms such as bubble sort and insertion
    sort. You will learn the common techniques and structures used in tasks such as
    preprocessing, modeling, and transforming data. We will also discuss how to organize
    your code in a manageable, consistent, and extendable way. You will learn how
    to build components that are easy to understand, debug, and use in different applications.
  prefs: []
  type: TYPE_NORMAL
- en: A good understanding of data structures and algorithms cannot be overemphasized.
    It is an important arsenal to have in being able to understand new problems and
    find elegant solutions to them. By gaining a deeper understanding of algorithms
    and data structures, you may find uses for them in many more ways than originally
    intended. You will develop a consideration for the code you write and how it affects
    the amount of memory and CPU cycles to say the least. Code will not be written
    for the sake of it, but rather with a mindset to do more using minimal resources.
    When programs that have been thoroughly analyzed and scrutinized are used in a
    real-life setting, the performance is a delight to experience. Sloppy code is
    always a recipe for poor performance. Whether you like algorithms purely from
    the standpoint of them being an intellectual exercise or them serving as a source
    of inspiration in solving a problem, it is an engagement worthy of pursuit.
  prefs: []
  type: TYPE_NORMAL
- en: The Python language has further opened the door for many professionals and students
    to come to appreciate programming. The language is fun to work with and concise
    in its description of problems. We leverage the language's mass appeal to examine
    a number of widely studied and standardized data structures and algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: The book begins with a concise tour of the Python programming language. As such,
    it is not required that you know Python before picking up this book.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](bed519dd-40d8-4bfd-a721-184d8ea37555.xhtml), *Python Objects, Types,
    and Expressions*, introduces you to the basic types and objects of Python. We
    will give an overview of the language features, execution environment, and programming
    styles. We will also review the common programming techniques and language functionality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ee04d80f-97b1-4a1b-b61f-8a830c0b78c5.xhtml), *Python Data Types
    and Structures*, explains each of the five numeric and five sequence data types,
    as well as one mapping and two set data types, and examine the operations and
    expressions applicable to each type. We will also give examples of typical use
    cases.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](a98d7333-0a20-49b1-8bf1-3e007ddb9793.xhtml), *Principles of Algorithm
    Design*, covers how we can build additional structures with specific capabilities
    using the existing Python data structures. In general, the data structures we
    create need to conform to a number of principles. These principles include robustness,
    adaptability, reusability, and separating the structure from a function. We look
    at the role iteration plays and introduce recursive data structures.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](fb02c65a-fcf9-44cb-b3a7-9ed2d4705a86.xhtml), *Lists and Pointer
    Structures*, covers linked lists, which are one of the most common data structures
    and are often used to implement other structures, such as stacks and queues. In
    this chapter, we describe their operation and implementation. We compare their
    behavior to arrays and discuss the relative advantages and disadvantages of each.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](601d803b-cd0a-4272-8925-9dee92270d35.xhtml), *Stacks and Queues*,
    discusses the behavior and demonstrates some implementations of these linear data
    structures. We give examples of typical applications.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](2c876fb9-4e3c-4879-8a5b-630c3f39b049.xhtml), *Trees*, will look
    at how to implement a binary tree. Trees form the basis of many of the most important
    advanced data structures. We will examine how to traverse trees and retrieve and
    insert values. We will also look at how to create structures such as heaps.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](7108e8e9-ea2c-44a9-b4f6-3b11346d7f8d.xhtml), *Hashing and Symbol
    Tables*, describes symbol tables, gives some typical implementations, and discusses
    various applications. We will look at the process of hashing, give an implementation
    of a hash table, and discuss the various design considerations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](3119407a-e9f1-4aab-8a06-8eea85b17c33.xhtml), *Graphs and Other
    Algorithms*, looks at some of the more specialized structures, including graphs
    and spatial structures. Representing data as a set of nodes and vertices is convenient
    in a number of applications, and from this, we can create structures such as directed
    and undirected graphs. We will also introduce some other structures and concepts
    such as priority queues, heaps, and selection algorithms.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](f7a51df1-a8ad-4fd0-afb5-46b9db7af5af.xhtml), *Searching*, discusses
    the most common searching algorithms and gives examples of their use for various
    data structures. Searching a data structure is a fundamental task and there are
    a number of approaches.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](0728804d-a35d-4cad-a773-68062f359f9b.xhtml), *Sorting*, looks
    at the most common approaches to sorting. This will include bubble sort, insertion
    sort, and selection sort.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](8523afdb-a3e7-4ab8-b8a7-be7278a1c735.xhtml), *Selection Algorithms*,
    covers algorithms that involve finding statistics, such as the minimum, maximum,
    or median elements in a list. There are a number of approaches and one of the
    most common approaches is to first apply a sort operation. Other approaches include
    partition and linear selection.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](f1986aa3-0229-4480-8496-d25a2a9dae46.xhtml), *Design Techniques
    and Strategies*, relates to how we look for solutions for similar problems when
    we are trying to solve a new problem. Understanding how we can classify algorithms
    and the types of problem that they most naturally solve is a key aspect of algorithm
    design. There are many ways in which we can classify algorithms, but the most
    useful classifications tend to revolve around either the implementation method
    or the design method.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](48e9b010-a4c9-4cc3-9ae0-de772639da37.xhtml), *Implementations,
    Applications, and Tools*, discusses a variety of real-world applications. These
    include data analysis, machine learning, prediction, and visualization. In addition,
    there are libraries and tools that make our work with algorithms more productive
    and enjoyable.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The code in this book will require you to run Python 2.7.x or higher. Python's
    default interactive environment can also be used to run the snippets of code.
    In order to use other third-party libraries, pip should be installed on your system.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book would appeal to Python developers. Basic knowledge of Python is preferred
    but is not a requirement. No previous knowledge of computer concepts is assumed.
    Most of the concepts are explained with everyday scenarios to make it very easy
    to understand.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "This
    repetitive construct could be a simple `while` loop or any other kind of loop."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the Next button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `feedback@packtpub.com`, and mention
    the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Python-Data-Structures-and-Algorithma](https://github.com/PacktPublishing/Python-Data-Structures-and-Algorithma).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `copyright@packtpub.com` with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
