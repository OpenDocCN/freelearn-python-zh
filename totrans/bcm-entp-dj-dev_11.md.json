["```py\n(virtual_env) PS > python manage.py loaddata chapter_3\n```", "```py\n# /becoming_a_django_entdev/urls.py\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    path(\n```", "```py\n        ‘’, \n```", "```py\n        include(\n```", "```py\n            ‘becoming_a_django_entdev.chapter_8.urls’\n```", "```py\n        )\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> virtual_env/Scripts/activate\n    (virtual_env) PS > pip install djangorestframework\n    (virtual_env) PS > pip install markdown\n    (virtual_env) PS > pip install django-filter\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    INSTALLED_APPS = [\n        ...\n        ‘rest_framework’,\n    ]\n    REST_FRAMEWORK = {\n        ‘DEFAULT_PERMISSION_CLASSES’: [\n            ‘rest_framework.permissions.\n                DjangoModelPermissionsOrAnonReadOnly’\n        ],\n    }\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/urls.py\n    from django.contrib import admin\n    from django.urls import include, path\n    from django.views.generic import TemplateView\n    urlpatterns = [\n        path(‘admin/’, admin.site.urls),\n        path(\n            ‘’, \n            TemplateView.as_view(\n                template_name = ‘chapter_8/index.html’\n            )\n        ),\n        path(‘api-auth/’, include(‘rest_framework.urls’))\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/serializers.py\n    from rest_framework.serializers import ModelSerializer\n    from ..chapter_3.models import (\n        Seller, \n        Vehicle, \n        Engine, \n        VehicleModel\n    )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/serializers.py\n    ...\n    class EngineSerializer(ModelSerializer):\n        class Meta:\n            model = Engine\n            fields = ‘__all__’\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/serializers.py\n    ...\n    class VehicleModelSerializer(ModelSerializer):\n        class Meta:\n            model = VehicleModel\n            fields = ‘__all__’\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/serializers.py\n    ...\n    class VehicleSerializer(ModelSerializer):\n        class Meta:\n            model = Vehicle\n            fields = ‘__all__’\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/serializers.py\n    ...\n    class SellerSerializer(ModelSerializer):\n        class Meta:\n            model = Seller\n            fields = ‘__all__’\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    from rest_framework.permissions import IsAuthenticated\n    from rest_framework.viewsets import ModelViewSet\n    from .serializers import (\n        EngineSerializer,\n        SellerSerializer,\n        VehicleSerializer,\n        VehicleModelSerializer\n    )\n    from ..chapter_3.models import (\n        Engine, \n        Seller, \n        Vehicle, \n        VehicleModel\n    )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class EngineViewSet(ModelViewSet):\n        queryset = Engine.objects.all().order_by(‘name’)\n        serializer_class = EngineSerializer\n        permission_classes = [IsAuthenticated]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class VehicleModelViewSet(ModelViewSet):\n        queryset = VehicleModel.objects.all().order_by(\n            ‘name’\n        )\n        serializer_class = VehicleModelSerializer\n        permission_classes = [IsAuthenticated]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class VehicleViewSet(ModelViewSet):\n        queryset = Vehicle.objects.all().order_by(‘price’)\n        serializer_class = VehicleSerializer\n        permission_classes = [IsAuthenticated]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class SellerViewSet(ModelViewSet):\n        queryset = Seller.objects.all()\n        serializer_class = SellerSerializer\n        permission_classes = [IsAuthenticated]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/urls.py\n    ...\n    from rest_framework import routers\n    from .views import (\n        EngineViewSet,\n        SellerViewSet,\n        VehicleViewSet,\n        VehicleModelViewSet\n    )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/urls.py\n    ...\n    router = routers.DefaultRouter()\n    router.register(r’engines’, EngineViewSet)\n    router.register(r’sellers’, SellerViewSet)\n    router.register(r’vehicles’, VehicleViewSet)\n    router.register(\n        r’vehicle-models’,\n        VehicleModelViewSet\n    )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/urls.py\n    ...\n    urlpatterns = [\n        ...\n        path(‘chapter-8/’, include(router.urls)),\n        path(‘api-auth/’, include(‘rest_framework.urls’)),\n    ]\n    ```", "```py\n# /becoming_a_django_entdev/chapter_8/serializers.py\n```", "```py\n...\n```", "```py\nfrom rest_framework.serializers import (\n```", "```py\n    HyperlinkedModelSerializer,\n```", "```py\n    ModelSerializer\n```", "```py\n)\n```", "```py\nclass SellerSerializer(HyperlinkedModelSerializer):\n```", "```py\n    class Meta:\n```", "```py\n        model = Seller\n```", "```py\n        #fields = ‘__all__’\n```", "```py\n        exclude = [‘groups’, ‘user_permissions’]\n```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    from django.template.response import TemplateResponse\n    from django.views.generic import View\n    ...\n    class GetSellerView(View):\n        template_name =   \n            ‘chapter_8/spa_pages/get_seller.html’\n        def get(self, request, *args, **kwargs):\n            context = {}\n            return TemplateResponse(\n                request, \n                self.template_name, \n                context\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/templates/chapter_\n        8/spa_pages/get_seller.html\n    {% extends ‘chapter_8/base/base_template_1.html’ %}\n    {% load static %}\n    ...\n    {% block body_content %}\n        <form>\n            <div class=”field-box input-box”>\n                <label for=”seller-id”>Seller ID:</label>\n                <div class=”form-group”>\n                    <input id=”seller-id” type=”text” />\n                    <span class=”help-text”>Please enter \n                        the ID of the seller you want to \n                            lookup</span>\n                </div>\n            </div>\n            <button type=”button” id=”get-sellers” onclick\n                =”$gotoSPA_Page()”>\n                    Get Seller Details</button>\n        </form>\n        <div id=”details”>\n            <p>!!! No Details to Display !!!</p>\n        </div>\n    {% endblock %}\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/static/chapter_8/js/site-js.js\n    function $gotoSPA_Page() {\n        const input = document.getElementById(\n            ‘seller-id’\n        );\n        const container = document.getElementById(\n            ‘details’\n        );\n        const id = input.value;\n        var url = `/chapter-8/sellers/${id}/`;\n    }\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/static/chapter_8/js/site-js.js\n    function $gotoSPA_Page() {\n        ...\n        fetch(url, {\n            method: ‘GET’,\n            headers: {\n                ‘Content-Type’: ‘application/json’,\n        }}).then(response => {\n            return response.json();\n        }).then(data => {\n            container.innerHTML = JSON.stringify(data);\n        });\n    }\n    ```", "```py\n# /becoming_a_django_entdev/chapter_8/static/chapter_8/js/site-js.js\n```", "```py\nfunction $gotoSPA_Page() {\n```", "```py\n    ...\n```", "```py\n    fetch(url, {\n```", "```py\n        method: ‘GET’,\n```", "```py\n        headers: {\n```", "```py\n            ‘Content-Type’: ‘application/json’,\n```", "```py\n        }\n```", "```py\n    }).then(async(response) => {\n```", "```py\n        return await response.json();\n```", "```py\n    }).then(async(data) => {\n```", "```py\n        const thisData = await data;\n```", "```py\n        container.innerHTML = JSON.stringify(\n```", "```py\n            thisData\n```", "```py\n        );\n```", "```py\n    });\n```", "```py\n}\n```", "```py\n# /becoming_a_django_entdev/chapter_8/urls.py\n```", "```py\nfrom .views import ..., GetSellerView\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    ...\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/get-seller/’,\n```", "```py\n        GetSellerView.as_view(),\n```", "```py\n        name = ‘get-seller’\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    from django.shortcuts import render\n    from ..chapter_3.models import ..., Seller\n    from rest_framework.permissions import IsAuthenticated\n    from rest_framework.views import APIView\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class GetSellerHTMLView(APIView):\n        permission_classes = [IsAuthenticated]\n        template_name = ‘chapter_8/details/seller.html’\n        def get(self, request, format=None, id=0, *args, \n            **kwargs):\n            if request.user.is_authenticated and \n                request.user.has_perm\n                    (‘chapter_3.view_seller’):\n                try:\n                    seller = Seller.objects.get(id=id)\n                except Seller.DoesNotExist:\n                    seller = None\n            else:\n                seller = None\n            context = {‘seller’: seller,}\n            return render(\n                request, \n                self.template_name, \n                context = context\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/templates/chapter_8/details/seller.html\n    {% load static %}\n    <h1>Seller Details</h1>\n    {% if seller %}\n        <h2>{{ seller.first_name|safe }} {{ \n            seller.last_name|safe }}</h2>\n        <h3>{{ seller.name|safe }}</h3>\n        {% if seller.vehicles %}\n            <ul>\n                {% for vehicle in seller.vehicles.all %}\n                    <li>{{ vehicle.fullname }}</li>\n                {% endfor %}\n            </ul>\n        {% endif %}\n    {% else %}\n        <p>\n            <b>No Seller to Display</b><br />\n            <em>or you <b>DO NOT</b> have permission</em>\n        </p>\n    {% endif %}\n    ```", "```py\n# /becoming_a_django_entdev/chapter_8/static/chapter_8/js/site-js.js\n```", "```py\nfunction $gotoSPA_Page() {\n```", "```py\n    ...\n```", "```py\n    var url = `/chapter-8/seller/${id}/`;\n```", "```py\n    fetch(url, {\n```", "```py\n        method: ‘GET’,\n```", "```py\n        headers: {\n```", "```py\n            ‘Content-Type’: ‘application/json’,\n```", "```py\n    }}).then(async(response) => {\n```", "```py\n        return await response.text();\n```", "```py\n    }).then(async(data) => {\n```", "```py\n        container.innerHTML = await data;\n```", "```py\n    });\n```", "```py\n}\n```", "```py\n# /becoming_a_django_entdev/chapter_8/urls.py\n```", "```py\nfrom .views import (\n```", "```py\n    ..., \n```", "```py\n    GetSellerView,\n```", "```py\n    GetSellerHTMLView\n```", "```py\n)\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    ...\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/get-seller/’, \n```", "```py\n        GetSellerView.as_view(), \n```", "```py\n        name = ‘get-seller’\n```", "```py\n    ),\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/seller/<int:id>/’, \n```", "```py\n        GetSellerHTMLView.as_view(), \n```", "```py\n        name = ‘seller-detail’\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    INSTALLED_APPS = [\n        ...\n        ‘rest_framework’,\n        ‘rest_framework.authtoken’,\n    ]\n    REST_FRAMEWORK = {\n        ‘DEFAULT_AUTHENTICATION_CLASSES’: (\n            ‘rest_framework.authentication.TokenAuthentication’,\n            ‘rest_framework.authentication.SessionAuthentication’,\n        ),\n        ‘DEFAULT_PERMISSION_CLASSES’: [\n            ‘rest_framework.permissions.\n                DjangoModelPermissionsOrAnonReadOnly’\n        ],\n    }\n    ```", "```py\n    (virtual_env) PS > python3 manage.py migrate\n    ```", "```py\n    (virtual_env) PS > python manage.py drf_create_token test\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    from django.http import JsonResponse\n    from rest_framework.permissions import IsAuthenticated\n    from rest_framework.views import APIView\n    from .serializers import SellerSerializer\n    from ..chapter_3.models import ..., Seller\n    ...\n    class GetSellerWithTokenView(APIView):\n        permission_classes = [IsAuthenticated]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_8/views.py\n    ...\n    class GetSellerWithTokenView(APIView):\n        ...\n        def get(self, request, format=None, id=0, *args,       \n            **kwargs):\n            seller = None\n            req_user = request._user\n            if req_user.has_perm(‘chapter_3.view_seller’):\n                perm_granted = True\n                try:\n                    seller = Seller.objects.get(id=id)\n                except Seller.DoesNotExist:\n                    pass\n            else:\n                perm_granted = False\n    ```", "```py\n    JsonResponse() object to return data as formatted JSON in your endpoint in this way, your endpoint will not be readily available in the Browsable API tool. If you wish for it to be accessible via that tool, use Response() instead. Keep in mind that it may alter the way developers work with the returned data.\n    ```", "```py\n# /becoming_a_django_entdev/chapter_8/static/chapter_8/js/site-js.js\n```", "```py\nfunction $gotoSPA_Page() {\n```", "```py\n    ...\n```", "```py\n    var url = `/chapter-8/sellertoken/${id}/`;\n```", "```py\n    fetch(url, {\n```", "```py\n        method: ‘GET’,\n```", "```py\n        headers: {\n```", "```py\n            ‘Content-Type’: ‘application/json’,\n```", "```py\n            ‘Authorization’: ‘Token your_token’,\n```", "```py\n            ‘User’: ‘test’\n```", "```py\n    }}).then(async(response) => {\n```", "```py\n        return await response.text();\n```", "```py\n    }).then(async(data) => {\n```", "```py\n        container.innerHTML = await data;\n```", "```py\n    });\n```", "```py\n}\n```", "```py\n# /becoming_a_django_entdev/chapter_8/urls.py\n```", "```py\nfrom .views import ..., GetSellerView, GetSellerHTMLView, \n```", "```py\n    GetSellerWithTokenView\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    ...\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/get-seller/’, \n```", "```py\n        GetSellerView.as_view(), \n```", "```py\n        name = ‘get-seller’\n```", "```py\n    ),\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/seller/<int:id>/’, \n```", "```py\n        GetSellerHTMLView.as_view(), \n```", "```py\n        name = ‘seller-detail’\n```", "```py\n    ),\n```", "```py\n    path(\n```", "```py\n        ‘chapter-8/sellertoken/<int:id>/’, \n```", "```py\n        GetSellerWithTokenView.as_view(),\n```", "```py\n        name = ‘seller-token-detail’\n```", "```py\n    ),\n```", "```py\n]\n```"]