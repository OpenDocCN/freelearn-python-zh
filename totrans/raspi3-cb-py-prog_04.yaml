- en: Predicting Sentiments in Words
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter presents the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Building a Naive Bayes classifier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logistic regression classifier
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Splitting the dataset for training and testing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluating the accuracy using cross-validation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analyzing the sentiment of a sentence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Identifying patterns in text using topic modeling
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Application of sentiment analyses
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Building a Naive Bayes classifier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A Naive Bayes classifier employs Bayes' theorem to construct a supervised model.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Import the following packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Use the following data file, which includes comma-separated arithmetical data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Construct a Naive Bayes classifier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Calculate the accuracy of Naive Bayes:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot the classifier result:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Specify the boundaries of the figure:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The accuracy obtained after executing a Naive Bayes classifier is shown in
    the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b8202659-17dd-4313-b6a6-afe44e72f943.png)'
  prefs: []
  type: TYPE_IMG
- en: See also
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Please refer to the following articles:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To get to know how the classifier works with an example refer to the following
    link:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Naive_Bayes_classifier](https://en.wikipedia.org/wiki/Naive_Bayes_classifier)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about text classification with the proposed classifier, refer
    to the following link:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://sebastianraschka.com/Articles/2014_naive_bayes_1.html](http://sebastianraschka.com/Articles/2014_naive_bayes_1.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'To learn more about the Naive Bayes Classification Algorithm, refer to the
    following link:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://software.ucv.ro/~cmihaescu/ro/teaching/AIR/docs/Lab4-NaiveBayes.pdf](http://software.ucv.ro/~cmihaescu/ro/teaching/AIR/docs/Lab4-NaiveBayes.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Logistic regression classifier
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This approach can be chosen where the output can take only two values, 0 or
    1, pass/fail, win/lose, alive/dead, or healthy/sick, and so on. In cases where
    the dependent variable has more than two outcome categories, it may be analyzed
    using multinomial logistic regression.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'After installing the essential packages, let''s construct some training labels:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Initiate the classifier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Sketch datapoints and margins:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'The command to execute logistic regression is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/3fb38bc6-ec53-4e9a-b132-b2a9359e8284.png)'
  prefs: []
  type: TYPE_IMG
- en: Splitting the dataset for training and testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Splitting helps to partition the dataset into training and testing sequences.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Add the following code fragment into the same Python file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Allocate 75% of data for training and 25% of data for testing:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'Evaluate the classifier performance on test data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute the accuracy of the classifier system:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Plot the datapoints and the boundaries for test data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'The accuracy obtained while splitting the dataset is shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/b51cfabd-087e-4e04-b172-47370b19c295.png)'
  prefs: []
  type: TYPE_IMG
- en: Evaluating the accuracy using cross-validation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cross-validation is essential in machine learning. Initially, we split the datasets
    into a train set and a test set. Next, in order to construct a robust classifier,
    we repeat this procedure, but we need to avoid overfitting the model. Overfitting
    indicates that we get excellent prediction results for the train set, but very
    poor results for the test set. Overfitting causes poor generalization of the model.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Import the packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'Compute the accuracy of the classifier:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'The result obtained after executing cross-validation is shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/f4e29007-8020-462b-9e3c-9e20de11f795.png)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to know how it works on a given sentence dataset, refer to the following:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Introduction to logistic regression:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://machinelearningmastery.com/logistic-regression-for-machine-learning/](https://machinelearningmastery.com/logistic-regression-for-machine-learning/)'
  prefs: []
  type: TYPE_NORMAL
- en: Analyzing the sentiment of a sentence
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sentiment analysis refers to procedures of finding whether a specified part
    of text is positive, negative, or neutral. This technique is frequently considered
    to find out how people think about a particular situation. It evaluates the sentiments
    of consumers in different forms, such as advertising campaigns, social media,
    and e-commerce customers.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Create a new file and import the chosen packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'Describe a function to extract features:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: 'Adopt movie reviews in NLTK as training data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: 'Divide the data into positive and negative reviews:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: 'Segregate the data into training and testing datasets:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: 'Extract the features:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: 'Consider the Naive Bayes classifier and train it with an assigned objective:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: 'The result obtained for sentiment analysis is shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/fcd24c1b-a62b-4009-9d67-f11bffbc3b22.png)'
  prefs: []
  type: TYPE_IMG
- en: Identifying patterns in text using topic modeling
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The theme modeling refers to the procedure of recognizing hidden patterns in
    manuscript information. The objective is to expose some hidden thematic configuration
    in a collection of documents.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Import the following packages:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs: []
  type: TYPE_PRE
- en: 'Load the input data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs: []
  type: TYPE_PRE
- en: 'Class to pre-process text:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: 'Obtain a list of stop words to terminate the program execution:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE26]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a Snowball stemmer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE27]'
  prefs: []
  type: TYPE_PRE
- en: 'Define a function to perform tokenizing, stop word removal, and stemming:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE28]'
  prefs: []
  type: TYPE_PRE
- en: 'Eliminate stop words from the text:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE29]'
  prefs: []
  type: TYPE_PRE
- en: 'Implement stemming on the tokens:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE30]'
  prefs: []
  type: TYPE_PRE
- en: 'Return the processed tokens:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE31]'
  prefs: []
  type: TYPE_PRE
- en: 'Load the input data from the `main` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE32]'
  prefs: []
  type: TYPE_PRE
- en: 'Create an object:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE33]'
  prefs: []
  type: TYPE_PRE
- en: 'Process the file and extract the tokens:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE34]'
  prefs: []
  type: TYPE_PRE
- en: 'Create a dictionary based on the tokenized documents:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE35]'
  prefs: []
  type: TYPE_PRE
- en: 'Develop an LDA model, define required parameters, and initialize the LDA objective:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE36]'
  prefs: []
  type: TYPE_PRE
- en: 'The result obtained when `topic_modelling.py` is executed is shown in the following
    screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/453ec4ce-69e2-4397-b09f-db674eaeb13b.png)'
  prefs: []
  type: TYPE_IMG
- en: Applications of sentiment analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sentiment analysis is used in social media such as Facebook and Twitter, to
    find the sentiments (positive/negative) of the general public over an issue. They
    are also used to establish the sentiments of people regarding advertisements and
    how people feel about your product, brand, or service.
  prefs: []
  type: TYPE_NORMAL
