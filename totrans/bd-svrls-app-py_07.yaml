- en: Security in AWS Lambda
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: AWS Lambda中的安全性
- en: We have learned how to build and configure serverless functions in AWS Lambda.
    We have learned how to scale them up using third-party tools. We have also had
    a close look at how microservices work and how to ensure security in them, while
    ensuring resilience and speed.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经学习了如何在AWS Lambda中构建和配置无服务器函数。我们已经学习了如何使用第三方工具进行扩展。我们还仔细研究了微服务的工作原理以及如何确保它们的安全性，同时确保弹性和速度。
- en: In this chapter, we will understand security in the AWS environment, keeping
    in mind our Lambda functions. We will understand how services, such as AWS VPCs,
    security groups, and subnets work, with respect to Lambda functions.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将了解AWS环境中的安全性，考虑到我们的Lambda函数。我们将了解AWS VPC、安全组和子网等服务的运作方式，以及它们与Lambda函数的关系。
- en: 'This chapter covers the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖了以下主题：
- en: Understanding AWS VPCs
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解AWS VPC
- en: Understanding subnets in VPCs
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解VPC中的子网
- en: Securing Lambda inside private subnets
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在私有子网中保护Lambda
- en: Controlling access to Lambda functions
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 控制对Lambda函数的访问
- en: Using STS inside Lambda for secure session-based execution
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Lambda内部使用STS进行基于会话的安全执行
- en: Understanding AWS Virtual Private Clouds (VPCs)
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解AWS虚拟专用云（VPC）
- en: 'In this section, we will understand AWS VPCs. **VPCs** are a very common component
    in the security layers of the AWS environment; they are isolated parts of the
    cloud where users can host their services and build their infrastructures. VPCs
    are the first layer of security. We will try to understand VPCs in the context
    of Lambda functions, in the form of bullet points, given here:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将理解AWS VPC。**VPC**是AWS环境中安全层的一个非常常见的组件；它们是云中的隔离部分，用户可以在其中托管他们的服务并构建他们的基础设施。VPC是安全的第一层。我们将尝试在Lambda函数的上下文中理解VPC，以下是以项目符号形式给出的：
- en: 'VPCs can be created and modified in the AWS''s VPC service dashboard, which
    looks like this:'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: VPC可以在AWS的VPC服务仪表板中创建和修改，看起来如下：
- en: '![](img/00232.jpeg)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00232.jpeg)'
- en: 'Now, let''s quickly learn how to create a VPC of our own. For that, click on
    Create VPC. You will see a pop-up box which asks you to enter more meta information
    for your new VPC:'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们快速学习如何创建我们自己的VPC。为此，请点击“创建VPC”。您将看到一个弹出框，要求您为新的VPC输入更多元信息：
- en: '![](img/00233.jpeg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00233.jpeg)'
- en: 'The Name tag box needs to have the name of the VPC. The IPv4 CIDR block is
    where you enter your IP range for classless inter-domain routing. Then, you can
    choose whether you want an IPv6 CIDR block or not. You can also select the Tenancy
    settings; this defines how your EC2 instances run within your VPC, and the resource
    sharing accordingly:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 名称标签框需要填写VPC的名称。IPv4 CIDR块是您输入无类别域间路由的IP范围的地方。然后，您可以选择是否需要IPv6 CIDR块。您还可以选择租户设置；这定义了您的EC2实例如何在VPC中运行以及相应的资源共享：
- en: '![](img/00234.jpeg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00234.jpeg)'
- en: 'We have successfully created our VPC with the necessary settings and with the `Test-VPC`
    name. We can see this in our dashboard with all the corresponding meta settings:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已成功创建带有必要设置和`Test-VPC`名称的VPC。我们可以在仪表板中看到所有相应的元设置：
- en: '![](img/00235.jpeg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00235.jpeg)'
- en: 'You can also see a summary of the VPC which includes the IPv4 settings, the
    **Network Access Control List** (**ACL**) settings, the **Dynamic Host Configuration
    Protocol** (**DHCP**) options, and also the DNS settings, all of which can also
    be configured later according to our needs. You can also see IPv4 CIDR blocks
    under the next CIDR Blocks tab:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以看到VPC的摘要，包括IPv4设置、**网络访问控制列表**（**ACL**）设置、**动态主机配置协议**（**DHCP**）选项，以及DNS设置，所有这些都可以根据我们的需求稍后进行配置。您还可以在下一个标签页“下一个CIDR块”下看到IPv4
    CIDR块：
- en: '![](img/00236.jpeg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00236.jpeg)'
- en: 'We can also create VPC flow logs, which log traffic and data movements in and
    out of the VPC. This will promote better log management, ensuring security, and
    better monitoring. Currently, flow logs have not been set up:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们还可以创建VPC流日志，这些日志记录VPC内外的流量和数据移动。这将促进更好的日志管理，确保安全，并更好地监控。目前，流日志尚未设置：
- en: '![](img/00237.jpeg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00237.jpeg)'
- en: 'To create VPC flow logs, you can just click on the Create Flow Log button at
    the bottom. This will open up a flow log creation wizard where you can enter the
    details for the various settings, accordingly. The creation wizard looks like
    this:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建VPC流日志，您只需在底部点击“创建流日志”按钮。这将打开一个流日志创建向导，您可以在其中输入各种设置的详细信息，相应地进行设置。创建向导看起来如下：
- en: '![](img/00238.jpeg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00238.jpeg)'
- en: 'Once all the details have been entered, you can go ahead and click on the Create
    Flow Log option at the bottom, which will create the VPC flow log with the desired
    settings:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦输入了所有详细信息，您就可以点击底部的“创建流日志”选项，这将创建具有所需设置的VPC流日志：
- en: '![](img/00239.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00239.jpeg)'
- en: 'Once created, you can see the newly created VPC flow log under the Flow Logs tab,
    as shown here:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建完成后，您可以在“流日志”选项卡下看到新创建的VPC流日志，如图所示：
- en: '![](img/00240.jpeg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00240.jpeg)'
- en: 'Now, let''s understand VPCs from AWS Lambda''s point of view. Just like any
    other AWS resource, Lambda functions can also be hosted inside VPCs. You can see
    that setting under the Network section of your AWS Lambda function. It looks like
    this:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们从AWS Lambda的角度来理解VPC。就像任何其他AWS资源一样，Lambda函数也可以托管在VPC内部。您可以在AWS Lambda函数的“网络”部分下看到这个设置。它看起来是这样的：
- en: '![](img/00241.jpeg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00241.jpeg)'
- en: 'From the drop-down list, you can select a VPC in which you want to host your
    Lambda function:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉列表中，您可以选择一个您想要托管Lambda函数的VPC：
- en: '![](img/00242.jpeg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00242.jpeg)'
- en: 'Once you select a VPC, it will further ask you for details regarding subnets,
    security groups, and so on, as shown in the following screenshot. We will learn
    about them in the sections following this, so, we will configure the VPC for our
    Lambda function later:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦选择了一个VPC，它将进一步要求您提供有关子网、安全组等的详细信息，如下面的截图所示。我们将在接下来的章节中了解它们，因此，我们将稍后为Lambda函数配置VPC。
- en: '![](img/00243.jpeg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00243.jpeg)'
- en: Understanding subnets in VPCs
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解VPC中的子网
- en: In this section, we will learn about and understand AWS subnets, which are subparts
    of AWS VPCs. VPCs can be further divided into multiple subnets. These subnets
    can either be public or private, depending on the security needs of your architecture.
    We will look at the concept of subnets from the point of view of AWS Lambda functions.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解并理解AWS子网，它们是AWS VPC的子部分。VPC可以进一步划分为多个子网。这些子网可以是公共的或私有的，具体取决于您架构的安全需求。我们将从AWS
    Lambda函数的角度来看待子网的概念。
- en: 'We will perform the following steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将执行以下步骤：
- en: 'You can go to the Subnets menu via the VPC page itself. You need to click on
    the Subnets option under the Your VPCs option on the left:'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以通过VPC页面本身进入子网菜单。您需要在左侧的“您的VPC”选项下点击“子网”选项：
- en: '![](img/00244.jpeg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00244.jpeg)'
- en: 'This will take you to the subnets console, where you will see some already
    existing subnets. These are the default subnets for each availability zone in
    your region:'
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将带您进入子网控制台，在那里您将看到一些已经存在的子网。这些是您所在区域每个可用区的默认子网：
- en: '![](img/00245.jpeg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00245.jpeg)'
- en: 'Now, to create a new subnet, you need to click on the blue Create Subnet button
    on the top-left side of the console. In the creation wizard, you will be asked
    to enter the following details—the name of the subnet, the VPC you want to place
    it in, availability zones, and also preferred IPv4 CIDR blocks. I have placed
    this subnet inside the VPC we created in the previous section:'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，要创建一个新的子网，您需要点击控制台左上角的蓝色“创建子网”按钮。在创建向导中，您将被要求输入以下详细信息——子网名称、您想要放置它的VPC、可用区以及首选的IPv4
    CIDR块。我已经将此子网放置在上一节中创建的VPC内：
- en: '![](img/00246.jpeg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00246.jpeg)'
- en: 'When you click on the Yes, Create button on the bottom-right side of the creation
    wizard, the new subnet is created. You can see it listed in the list of your subnets
    on your console:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当您点击创建向导右下角的“是，创建”按钮时，新的子网被创建。您可以在控制台上的子网列表中看到它：
- en: '![](img/00247.jpeg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00247.jpeg)'
- en: 'Now, we will fill in the security settings for our Lambda function with our
    VPC and subnets, which we have just created. Currently, this is what the Network
    setting for AWS Lambda looks like:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将使用我们刚刚创建的VPC和子网来填写Lambda函数的安全设置。目前，AWS Lambda的网络设置如下所示：
- en: '![](img/00248.jpeg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00248.jpeg)'
- en: 'After adding in the required settings, which are the details of the VPC, subnet
    and security groups, the Network settings of our Lambda function will look like
    this:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在添加所需的设置后，包括VPC、子网和安全组的详细信息，我们的Lambda函数的网络设置将如下所示：
- en: '![](img/00249.jpeg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00249.jpeg)'
- en: '...![](img/00250.jpeg)'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '...![](img/00250.jpeg)'
- en: After setting up your network settings for your Lambda function, click on the
    orange Save button on the top-right of your Lambda console to save those settings
    to your Lambda function.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在设置Lambda函数的网络设置后，点击Lambda控制台右上角的橙色“保存”按钮，将这些设置保存到Lambda函数中。
- en: Securing Lambda inside private subnets
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在私有子网中保护Lambda
- en: '**Private subnets** are subnets that are not open to the internet. All of their
    traffic is routed via the public subnet in the same VPC using the concept of route
    tables. Let''s understand how to position our Lambda functions inside private
    subnets to add an extra layer of security:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**私有子网**是不向互联网开放的子网。它们的所有流量都通过同一 VPC 中的公共子网使用路由表的概念进行路由。让我们了解如何在私有子网中定位我们的
    Lambda 函数以添加额外的安全层：'
- en: 'Subnets created in the AWS console are not private by default. Let''s evaluate
    and confirm this by going through the details of the subnet that we just created:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 AWS 控制台中创建的子网默认情况下不是私有的。让我们通过查看我们刚刚创建的子网的详细信息来评估和确认这一点：
- en: '![](img/00251.jpeg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00251.jpeg)'
- en: 'Clicking on the Route Table tab will show us the routing settings of our subnet,
    which basically tells us what kind of traffic is allowed into it:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“路由表”标签将显示我们子网的路由设置，这基本上告诉我们允许什么类型的流量进入：
- en: '![](img/00252.jpeg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00252.jpeg)'
- en: 'In the Network ACL tab, you can see the network rules assigned for our subnet.
    Here, we can see that the subnet is open to all traffic (0.0.0.0/0). So, in order
    to make our subnet private, we need to fix this:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在“网络 ACL”标签下，您可以查看为我们的子网分配的网络规则。在这里，我们可以看到子网对所有流量（0.0.0.0/0）都是开放的。因此，为了使我们的子网私有，我们需要解决这个问题：
- en: '![](img/00253.jpeg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00253.jpeg)'
- en: 'Go to the Network ACLs console by clicking on the link to the left side of
    your console. You will arrive at the following page:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击控制台左侧的链接进入“网络 ACL”控制台。您将到达以下页面：
- en: '![](img/00254.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00254.jpeg)'
- en: 'Now, click on the blue Create Network ACL button to create a new ACL. Select
    our VPC and then enter a name for the ACL in the creation wizard:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击蓝色“创建网络 ACL”按钮创建一个新的 ACL。选择我们的 VPC，然后在创建向导中为 ACL 输入一个名称：
- en: '![](img/00255.jpeg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00255.jpeg)'
- en: 'Now, in the inbound rules of the new ACL, add in the following rule. In the
    Source section, add the IPv4 setting of any of your public subnets and click Save:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在新 ACL 的入站规则中添加以下规则。在“源”部分添加任何公共子网的 IPv4 设置，然后点击保存：
- en: '![](img/00256.jpeg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00256.jpeg)'
- en: 'Now, replace the ACL of our current subnet with the new one that will make
    our subnet a private subnet:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，用新的 ACL 替换我们当前子网的 ACL，使我们的子网成为私有子网：
- en: '![](img/00257.jpeg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00257.jpeg)'
- en: Now, we have our Lambda function in a private subnet, making it more secure.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们的 Lambda 函数位于私有子网中，使其更加安全。
- en: Controlling access to Lambda functions
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 控制对 Lambda 函数的访问
- en: 'We have gone through all the security settings needed to ensure that our Lambda
    functions and our serverless architectures are secure. So, an engineer working
    on serverless systems should keep the following points in mind while designing
    their infrastructure from a security point of view:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经通过了所有必要的安全设置，以确保我们的 Lambda 函数和我们的无服务器架构是安全的。因此，在从安全角度设计他们的基础设施时，从事无服务器系统工作的工程师应该牢记以下要点：
- en: The VPC and the subnet settings can be added under the Network section of the
    Lambda function.
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在 Lambda 函数的“网络”部分下添加 VPC 和子网设置。
- en: It is recommended that the Lambda function is placed across at least two subnets
    for fault tolerance purposes. However, this is not compulsory.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 建议将 Lambda 函数放置在至少两个子网中，以实现容错。然而，这并非强制性的。
- en: If you are placing your Lambda function inside a private subnet, you need to
    ensure that the private subnet is receiving the appropriate traffic from your
    public subnet(s) in that VPC. If not, then the Lambda function is essentially
    locked out.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果您将 Lambda 函数放置在私有子网中，您需要确保私有子网正在从该 VPC 中的公共子网接收适当的流量。如果不是，那么 Lambda 函数实际上是被锁定的。
- en: Using STS inside Lambda for secure session-based execution
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在 Lambda 中使用 STS 以实现基于会话的安全执行
- en: While accessing other AWS services and components from inside your Lambda functions,
    you can make use of **AWS's Simple Token Service** (**STS**) to ensure session-based
    access, which will essentially add an extra layer of security. As we have already
    discussed, and learned how to use, STS credentials in our code, we will skip over
    to the documentation links.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 当从您的 Lambda 函数内部访问其他 AWS 服务和组件时，您可以使用 **AWS 的简单令牌服务**（**STS**）来确保基于会话的访问，这将本质上添加一个额外的安全层。正如我们已经讨论过的，并且我们已经学会了如何在代码中使用
    STS 凭证，我们将跳过文档链接。
- en: The official documentation of AWS STS will help you understand how session-based
    access works: [https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: AWS STS的官方文档将帮助你理解基于会话的访问是如何工作的：[https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html)。
- en: And this is the *Boto3 Python Documentation* for using STS credentials inside
    Python code: [http://boto3.readthedocs.io/en/latest/reference/services/sts.html](http://boto3.readthedocs.io/en/latest/reference/services/sts.html).
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是使用Python代码中的STS凭证的*Boto3 Python文档*：[http://boto3.readthedocs.io/en/latest/reference/services/sts.html](http://boto3.readthedocs.io/en/latest/reference/services/sts.html)。
- en: Summary
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned how security works in Lambda functions in a
    deep-dive mode. We have understood how VPCs and subnets work in the AWS environment.
    We have learned to create a VPC and also created public and private subnets. This
    will give you a better understanding of how security works from the whole of the
    AWS perspective.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们深入学习了Lambda函数中的安全机制。我们理解了在AWS环境中VPC和子网是如何工作的。我们学习了如何创建VPC，也创建了公共和私有子网。这将使你更好地理解从整个AWS视角来看安全是如何工作的。
- en: We have also learned how to place your Lambda functions inside the VPCs and
    the subnets we have created throughout this chapter. We understood how to handle
    and route traffic inside our VPCs and subnets.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 我们也学习了如何在整章中放置你的Lambda函数到我们创建的VPC和子网中。我们理解了如何在我们的VPC和子网内部处理和路由流量。
- en: Finally, we also learned how to implement better security in our Python code
    using session-based access to other AWS components, thereby placing security in
    the control of the developer.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们还学习了如何通过基于会话访问其他AWS组件来在我们的Python代码中实现更好的安全机制，从而将安全控制权交给了开发者。
- en: In the next chapter, you will learn about the **Serverless Application Model**
    (**SAM**) and how to write SAM models and deploy your Lambda applications through
    them.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习关于**无服务器应用程序模型**（**SAM**）以及如何通过它们编写SAM模型并部署你的Lambda应用程序。
