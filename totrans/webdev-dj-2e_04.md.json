["```py\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    …\n]\n```", "```py\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    …\n]\n```", "```py\npython3 manage.py createsuperuser\n```", "```py\n    python manage.py createsuperuser\n    ```", "```py\n    Username (leave blank to use 'django'): bookradmin to the superuser. Note that you won't see any output immediately.\n    ```", "```py\n    Password:\n    Password (again): \n    ```", "```py\n    Superuser created successfully.\n    ```", "```py\nfrom django.contrib import admin\n# Register your models here.\n```", "```py\nfrom django.contrib import admin\nfrom reviews.models import Publisher, Contributor, \\\nBook, BookContributor, Review\n# Register your models here.\nadmin.site.register(Publisher)\nadmin.site.register(Contributor)\nadmin.site.register(Book)\nadmin.site.register(BookContributor)\nadmin.site.register(Review)\n```", "```py\nclass Publisher(models.Model):\n    \"\"\"A company that publishes books.\"\"\"\n    name = models.CharField\\\n           (help_text=\"The name of the Publisher.\",\\\n            max_length=50)\n    website = models.URLField\\\n              (help_text=\"The Publisher's website.\")\n    email = models.EmailField\\\n            (help_text=\"The Publisher's email address.\")\n```", "```py\n<fieldset class=\"module aligned \">\n    <div class=\"form-row errors field-name\">\n        <ul class=\"errorlist\"><li>This field is required.</li></ul>\n            <div>\n                    <label class=\"required\" for=\"id_name\">Name:</label>\n                        <input type=\"text\" name=\"name\" class=\"vTextField\"\n                         maxlength=\"50\" required id=\"id_name\">\n                    <div class=\"help\">The name of the Publisher.</div>\n            </div>\n    </div>\n    <div class=\"form-row errors field-website\">\n        <ul class=\"errorlist\"><li>Enter a valid URL.</li></ul>\n            <div>\n                    <label class=\"required\" for=\"id_website\">Website:</label>\n                        <input type=\"url\" name=\"website\" value=\"packtcom\"\n                         class=\"vURLField\" maxlength=\"200\" required\n                         id=\"id_website\">\n                    <div class=\"help\">The Publisher's website.</div>\n            </div>\n    </div>\n    <div class=\"form-row errors field-email\">\n        <ul class=\"errorlist\"><li>Enter a valid email address.</li></ul>\n            <div>\n                    <label class=\"required\" for=\"id_email\">Email:</label>\n                        <input type=\"email\" name=\"email\" value=\"infoatpackt.com\"\n                         class=\"vTextField\" maxlength=\"254\" required\n                         id=\"id_email\">\n                    <div class=\"help\">The Publisher's email address.</div>\n            </div>\n  </div>\n</fieldset>\n```", "```py\nclass Publisher(models.Model):\n    \"\"\"A company that publishes books.\"\"\"\n    name = models.CharField\\\n           (max_length=50,\n            help_text=\"The name of the Publisher.\")\n    website = models.URLField\\\n              (help_text=\"The Publisher's website.\")\n    email = models.EmailField\\\n            (help_text=\"The Publisher's email address.\")\n```", "```py\n<input type=\"text\" name=\"name\" value=\"Packt Publishing\"\n                   class=\"vTextField\" maxlength=\"50\" required=\"\" id=\"id_name\">\n```", "```py\n    name = models.CharField\\\n           (help_text=\"The name of the Publisher.\",\\\n            max_length=50)\n```", "```py\n<input type=\"url\" name=\"website\" value=\"https://www.packtpub.com/\"\n                     class=\"vURLField\" maxlength=\"200\" required=\"\"\n                     id=\"id_website\">            \n<input type=\"email\" name=\"email\" value=\"info@packtpub.com\"\n                    class=\"vTextField\" maxlength=\"254\" required=\"\"\n                    id=\"id_email\">\n```", "```py\ncontributor = models.ForeignKey(Contributor, on_delete=models.CASCADE)\n```", "```py\n    contributor = models.ForeignKey(Contributor, \\\n                                    on_delete=models.PROTECT)\n    ```", "```py\n    contributor = models.ForeignKey(Contributor, \\\n                                    on_delete=models.CASCADE)\n    ```", "```py\npython3 manage.py runserver\n```", "```py\npython3 manage.py shell\n>>>from django.contrib import admin\n```", "```py\n>>> admin.site.site_title\n'Django site admin'\n>>> admin.site.site_header\n'Django administration'\n>>> admin.site.index_title\n'Site administration'\n```", "```py\nfrom django.contrib.admin import AdminSite\nfrom reviews.models import (Publisher, Contributor, Book,\\\n     BookContributor, Review)\nclass BookrAdminSite(AdminSite):\n    title_header = 'Bookr Admin'\n    site_header = 'Bookr administration'\n    index_title = 'Bookr site admin'\nadmin_site = BookrAdminSite(name='bookr')\n# Register your models here.\nadmin_site.register(Publisher)\nadmin_site.register(Contributor)\nadmin_site.register(Book)\nadmin_site.register(BookContributor)\nadmin_site.register(Review)\n```", "```py\nfrom reviews.admin import admin_site\nfrom django.urls import include, path\nimport reviews.views\nurlpatterns = [path('admin/', admin_site.urls),\\\n               path('', reviews.views.index),\\\n               path('book-search/', reviews.views.book_search, \\\n                    name='book_search'),\\\n               path('', include('reviews.urls'))]\n```", "```py\nfrom django.contrib import admin\nfrom reviews.admin import admin_site\nfrom django.urls import path\nurlpatterns = [path('admin/', admin.site.urls),\\\n               path('bookradmin/', admin_site.urls),]\n```", "```py\nfrom django.contrib import admin\nclass BookrAdminSite(admin.AdminSite):\n    title_header = 'Bookr Admin'\n    site_header = 'Bookr administration'\n    index_title = 'Bookr site admin'\n```", "```py\nfrom django.contrib.admin.apps import AdminConfig\nclass ReviewsAdminConfig(AdminConfig):\n    default_site = 'admin.BookrAdminSite'\n```", "```py\nINSTALLED_APPS = ['reviews.apps.ReviewsAdminConfig',\\\n                  'django.contrib.auth',\\\n                  'django.contrib.contenttypes',\\\n                  'django.contrib.sessions',\\\n                  'django.contrib.messages',\\\n                  'django.contrib.staticfiles',\\\n                  'reviews']\n```", "```py\nfrom django.contrib import admin\nfrom reviews.models import (Publisher, Contributor, Book,\\\n     BookContributor, Review)\n# Register your models here.\nadmin.site.register(Publisher)\nadmin.site.register(Contributor)\nadmin.site.register(Book, BookAdmin)\nadmin.site.register(BookContributor)\nadmin.site.register(Review)\n```", "```py\nclass Book(models.Model):\n    …\n    def __str__(self):\n        return \"{} ({})\".format(self.title, self.isbn)\n```", "```py\nclass Book(models.Model):\n    …\n    def __str__(self):\n        return \"{} ({})\".format(self.title, self.isbn)\n```", "```py\npython manage.py shell\n>>> from django.contrib.admin import ModelAdmin\n>>> ModelAdmin.list_display\n('__str__',)\n```", "```py\nclass BookAdmin(admin.ModelAdmin):\n    list_display = ('title', 'isbn')\n```", "```py\nadmin.site.register(Book, BookAdmin)\n```", "```py\n    def initialled_name(obj):\n        \"\"\" obj.first_names='Jerome David', obj.last_names='Salinger'\n            => 'Salinger, JD' \"\"\"\n        initials = ''.join([name[0] for name in \\\n                            obj.first_names.split(' ')])\n        return \"{}, {}\".format(obj.last_names, initials)\n    class ContributorAdmin(admin.ModelAdmin):\n        list_display = (initialled_name,)\n    ```", "```py\n    class BookAdmin(admin.ModelAdmin):\n        list_display = ('title', 'isbn13')\n        def isbn13(self, obj):\n            \"\"\" '9780316769174' => '978-0-31-676917-4' \"\"\"\n            return \"{}-{}-{}-{}-{}\".format\\\n                                    (obj.isbn[0:3], obj.isbn[3:4],\\\n                                     obj.isbn[4:6], obj.isbn[6:12],\\\n                                     obj.isbn[12:13])\n    ```", "```py\n    class Book(models.Model):\n        def isbn13(self):\n            \"\"\" '9780316769174' => '978-0-31-676917-4' \"\"\"\n            return \"{}-{}-{}-{}-{}\".format\\\n                                    (self.isbn[0:3], self.isbn[3:4],\\\n                                     self.isbn[4:6], self.isbn[6:12],\\\n                                     self.isbn[12:13])\n    ```", "```py\npublisher = models.ForeignKey(Publisher, \\\n                              on_delete=models.CASCADE)\n```", "```py\n    list_filter = ('publisher',)\n```", "```py\n    class BookAdmin(admin.ModelAdmin):\n        list_display = ('title', 'isbn')\n        list_filter = ('publisher', 'publication_date')\n    ```", "```py\n    class BookAdmin(admin.ModelAdmin):\n        date_hierarchy = 'publication_date'\n        list_display = ('title', 'isbn')\n        list_filter = ('publisher', 'publication_date')\n    ```", "```py\n    search_fields = ('title', 'isbn')\n```", "```py\n    search_fields = ('title', 'isbn', 'publisher__name')\n```", "```py\nexclude = ('date_edited')\n```", "```py\nfields = ('content', 'rating', 'creator', 'book')\n```", "```py\n    fieldsets = (('Linkage', {'fields': ('creator', 'book')}),\\\n                 ('Review content', \\\n                   {'fields': ('content', 'rating')}))\n```", "```py\n    fieldsets = ((None, {'fields': ('creator', 'book')}),\\\n                 ('Review content', \\\n                   {'fields': ('content', 'rating')}))\n```"]