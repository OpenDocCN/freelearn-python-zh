["```py\n$ docker version\nClient:\n Cloud integration: 1.0.14\n Version:       \t20.10.6\n API version:   \t1.41\n Go version:    \tgo1.16.3\n Git commit:    \t370c289\n Built:         \tFri Apr  9 22:46:57 2021\n OS/Arch:       \tdarwin/amd64\n Context:       \tdefault\n Experimental:  \ttrue\nServer: Docker Engine - Community\n Engine:\n  Version:      \t20.10.6\n  API version:  \t1.41 (minimum version 1.12)\n  Go version:   \tgo1.13.15\n  Git commit:   \t8728dd2\n  Built:        \tFri Apr  9 22:44:56 2021\n  OS/Arch:      \tlinux/amd64\n  Experimental: \tfalse\n containerd:\n  Version:      \t1.4.4\n  GitCommit:    \t05f951a3781f4f2c1911b05e61c160e9c30eaa8e\n runc:\n  Version:      \t1.0.0-rc93\n  GitCommit:    \t12644e614e25b05da6fd08a38ffa0cfe1903fdec\n docker-init:\n  Version:      \t0.19.0\n  GitCommit:    \tde40ad0 \n```", "```py\ndocker run --interactive --tty ubuntu:20.04 bash \n```", "```py\n$ docker images\nREPOSITORY        \tTAG      \tIMAGE ID   \tCREATED    \tSIZE\npython            \t3.9      \ta6a0779c5fb2   2 days ago \t886MB\nubuntu            \t20.04    \t7e0aa2d69a15   3 weeks ago\t72.7MB\nalpine            \tlatest   \t6dbb9cc54074   4 weeks ago\t5.61MB\n$ docker rmi ubuntu:20.04\nUntagged: ubuntu:20.04\nUntagged: ubuntu@sha256:cf31af331f38d1d7158470e095b132acd126a7180a54f263d386da88eb681d93\nDeleted: sha256:7e0aa2d69a153215c790488ed1fcec162015e973e49962d438e18249d16fa9bd\nDeleted: sha256:3dd8c8d4fd5b59d543c8f75a67cdfaab30aef5a6d99aea3fe74d8cc69d4e7bf2\nDeleted: sha256:8d8dceacec7085abcab1f93ac1128765bc6cf0caac334c821e01546bd96eb741\nDeleted: sha256:ccdbb80308cc5ef43b605ac28fac29c6a597f89f5a169bbedbb8dec29c987439 \n```", "```py\nFROM ubuntu:20.04\nRUN apt-get update && apt-get install -y python3\nCMD [\"bash\"] \n```", "```py\n$ docker build -t ubuntu-with-python .\n[+] Building 7.9s (6/6) FINISHED\n => [internal] load build definition from Dockerfile              \t0.0s\n => => transferring dockerfile: 125B                              \t0.0s\n => [internal] load .dockerignore                                 \t0.0s\n => => transferring context: 2B                                   \t0.0s\n => [internal] load metadata for docker.io/library/ubuntu:20.04   \t0.0s\n => [1/2] FROM docker.io/library/ubuntu:20.04                     \t0.0s\n => [2/2] RUN apt-get update && apt-get install -y python3        \t7.3s\n => exporting to image                                            \t0.4s\n => => exporting layers                                           \t0.4s\n => => writing image sha256:02602f606721f36e95fbda83af09baaa9f8256e83030197e5df69fd444e5c604                                             \t0.0s\n => => naming to docker.io/library/ubuntu-with-python             \t0.0s\nUse 'docker scan' to run Snyk tests against images to find vulnerabilities and learn how to fix them \n```", "```py\n$ docker run -it ubuntu-with-python bash\nroot@42b83b0933f4:/# python3\nPython 3.8.5 (default, Jan 27 2021, 15:41:15)\n[GCC 9.3.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> \n```", "```py\n$ cat Dockerfile\nFROM ubuntu:20.04\nRUN apt-get update && \\\n\tapt-get install -y python3 && \\\n\tapt-get clean && \\\n\trm -fr /var/lib/apt/lists\nCMD [\"bash\"]\n$ docker build -t cleaned-ubuntu-python .\n$ docker images\nREPOSITORY          \tTAG     IMAGE ID   \t  CREATED          SIZE\ncleaned-ubuntu-python \tlatest  6bbca8ae76fe   3 seconds ago    112MB\nubuntu-with-python  \tlatest  dd51cfc39b5a   34 minutes ago   140MB \n```", "```py\nFROM python:3.9-alpine\nCMD [\"python3.9\"] \n```", "```py\nFROM python:3.9\nCOPY . /app/\nRUN pip install -r /app/requirements.txt\nRUN pip install /app/\nCMD [\"hypercorn\", \"—bind\", \"0.0.0.0:5000\", \"myservice:app\"] \n```", "```py\n$ docker run -p 5000:5000 quart_basic\n[2021-05-15 15:34:56 +0000] [1] [INFO] Running on http://0.0.0.0:5000 (CTRL + C to quit)\n# In another terminal:\n$ curl localhost:5000\n{} \n```", "```py\n$ docker ps\nCONTAINER ID   IMAGE      \tCOMMAND             \tCREATED     \tSTATUS                    \tPORTS                                   \tNAMES\n040f7f01d90b   quart_basic   \"hypercorn —bind 0.…\"   2 seconds ago   Up Less than a second   0.0.0.0:5000->5000/tcp, :::5000->5000/tcp    stoic_bhabha\n$ docker stop 040f7f01d90b\n040f7f01d90b \n```", "```py\nhttps://github.com/PacktPublishing/Python-Microservices-Development-2nd-Edition:\n```", "```py\nresource \"aws_instance\" \"swarm_cluster\" {\n  count     \t= 3\n  ami       \t= data.aws_ami.ubuntu_focal.id\n  instance_type = \"t3.micro\" # Small for this demo.\n  vpc_security_group_ids = [aws_security_group.swarm_security_group.id]\n  key_name           \t= \"your ssh key name here\"\n  root_block_device {\n\tvolume_type = \"gp2\"\n\tvolume_size = \"40\" # GiB\n\tencrypted   = true\n  }\n} \n```", "```py\nhttps://github.com/PacktPublishing/Python-Microservices-Development-2nd-Edition/tree/main/CodeSamples.\n```", "```py\n$ terraform plan\n...\n  # module.docker-swarm.aws_instance.managers[2] will be created\n  + resource \"aws_instance\" \"managers\" {\n  \t+ ami                              \t= \"ami-0440ba4c79a163c0e\"\n  \t+ arn                              \t= (known after apply)\n  \t+ associate_public_ip_address      \t= (known after apply)\n  \t+ availability_zone                \t= (known after apply)\n…\n$ terraform apply\n[terraform plan output]\nDo you want to perform these actions?\n  Terraform will perform the actions described above.\n  Only 'yes' will be accepted to approve.\n  Enter a value: yes\naws_vpc.main: Creating...\nmodule.docker-swarm.aws_iam_policy.swarm-access-role-policy: Creating...\nmodule.docker-swarm.aws_sns_topic.alarms: Creating...\nmodule.docker-swarm.aws_iam_role.ec2: Creating...\nmodule.docker-swarm.aws_s3_bucket.terraform[0]: Creating...\nmodule.docker-swarm.aws_sns_topic.alarms: Creation complete after 0s [id=arn:aws:sns:eu-central-1:944409847308:swarm-vpc-alarms]\nmodule.docker-swarm.aws_iam_policy.swarm-access-role-policy: Creation complete after 1s [id=arn:aws:iam::944409847308:policy/swarm-vpc-swarm-ec2-policy]\n... \n```", "```py\n# etcd_basic.py\nfrom quart import Quart, current_app\nimport etcd3\n# Can read this map from a traditional config file\nsettings_map = {\n    \"dataservice_url\": \"/services/dataservice/url\",\n}\nsettings_reverse_map = {v: k for k, v in settings_map.items()}\netcd_client = etcd3.client()\ndef load_settings():\n    config = dict()\n    for setting, etcd_key in settings_map.items():\n        config[setting] = etcd_client.get(etcd_key)[0].decode(\"utf-8\")\n    return config\ndef create_app(name=__name__):\n    app = Quart(name)\n    app.config.update(load_settings())\n    return app\napp = create_app()\ndef watch_callback(event):\n    global app\n    for update in event.events:\n    # Determine which setting to update, and convert from bytes to str\n        config_option = settings_reverse_map[update.key.decode(\"utf-8\")]\n        app.config[config_option] = update.value.decode(\"utf-8\")\n# Start to watch for dataservice url changes\n# You can also watch entire areas with add_watch_prefix_callback\nwatch_id = etcd_client.add_watch_callback(\"/services/dataservice/url\", watch_callback)\n@app.route(\"/api\")\ndef what_is_url():\n    return {\"url\": app.config[\"dataservice_url\"]}\napp.run() \n```", "```py\n$ curl http://127.0.0.1:5000/api\n{\"url\":\"https://firsturl.example.com/api\"}\n$ etcdctl put \"/services/dataservice/url\" \"https://secondurl.example.com/api\"\nOK\n$ curl http://127.0.0.1:5000/api\n{\"url\":\"https://secondurl.example.com/api\"} \n```", "```py\nversion: '3'\nnetworks:\n  jeeves:\nservices:\n  dataservice:\n    networks:\n     - jeeves\n    build:\n        context: dataservice/\n    ports:\n     - \"8080:8080\"\n  tokendealer:\n    networks:\n     - jeeves\n    build:\n        context: tokendealer/\n    ports:\n     - \"8090:8090\"\n  rabbitmq:\n    image: \"rabbitmq:latest\"\n    networks:\n     - jeeves \n```", "```py\n$ docker compose up\n[+] Building 9.2s (9/9) FINISHED\n ...\n[+] Running 3/0\n ![](img/Icon_3.png) Container pythonmicroservices_tokendealer_1  Created           \t0.1s\n ![](img/Icon_3.png) Container pythonmicroservices_dataservice_1  Created           \t0.1s\n ![](img/Icon_3.png) Container pythonmicroservices_rabbitmq_1  Created         \t0.1s\nAttaching to dataservice_1, rabbitmq_1, tokendealer_1 \n```", "```py\n$ sudo docker swarm init —advertise-addr <Public IP Address>\nSwarm initialized: current node (l6u7ljqhiaosbeecn4jjlm6vt) is now a manager. \n```", "```py\ndocker swarm join —token <some long token> 52.212.189.167:2377 \n```", "```py\n$ sudo docker node ls\nID                        \tHOSTNAME       \tSTATUS\tAVAILABILITY   MANAGER STATUS \tENGINE VERSION\n6u81yvbwbvb0fspe06yzlsi13 \tip-172-31-17-183 \tReady \tActive   \t20.10.6\nl6u7ljqhiaosbeecn4jjlm6vt *  \tip-172-31-26-31\tReady \tActive     \tLeader       \t20.10.6\n873cp1742grhkzoo5xd2aiqls \tip-172-31-28-17\tReady \tActive     \t20.10.6 \n```", "```py\n$ sudo docker service create —replicas 1 —name dataservice jeeves/dataservice\nsikcno6s3582tdr91dj1fvsse\noverall progress: 1 out of 1 tasks\n1/1: running   [==================================================>]\nverify: Service converged\n$ sudo docker service ls\nID         \t    NAME          MODE         REPLICAS   IMAGE       \tPORTS\nsikcno6s3582   dataservice   replicated   1/1    \tjeeves/dataservice:latest \n```", "```py\n$ sudo docker service scale dataservice=5 \n```", "```py\n$ eksctl create cluster —name=jeeves-cluster-1 —nodes=4 —region=eu-west-1\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  eksctl version 0.51.0\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  using region eu-west-1\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  setting availability zones to [eu-west-1a eu-west-1c eu-west-1b]\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  subnets for eu-west-1a - public:192.168.0.0/19 private:192.168.96.0/19\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  subnets for eu-west-1c - public:192.168.32.0/19 private:192.168.128.0/19\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  subnets for eu-west-1b - public:192.168.64.0/19 private:192.168.160.0/19\n2021-05-27 20:13:44 [![](img/Icon_1.png)]  nodegroup \"ng-4e138761\" will use \"ami-0736921a175c8cebf\" [AmazonLinux2/1.19]\n2021-05-27 20:13:45 [![](img/Icon_1.png)]  using Kubernetes version 1.19\n... \n```", "```py\n$ kubectl get nodes\nNAME                                       \tSTATUS   ROLES\tAGE \tVERSION\nip-192-168-2-113.eu-west-1.compute.internal\tReady\t<none>   8m56s   v1.19.6-eks-49a6c0\nip-192-168-37-156.eu-west-1.compute.internal   Ready\t<none>   9m1s\tv1.19.6-eks-49a6c0\nip-192-168-89-123.eu-west-1.compute.internal   Ready\t<none>   9m1s\tv1.19.6-eks-49a6c0\nip-192-168-90-188.eu-west-1.compute.internal   Ready\t<none>   8m59s   v1.19.6-eks-49a6c0 \n```", "```py\n$ kubectl get pods\nNo resources found in default namespace…\n$ kubectl get pods —namespace kube-system\nNAME                   \tREADY   STATUS\tRESTARTS      AGE\naws-node-6xnrt         \t1/1     Running      0      \t29m\naws-node-rhgmd         \t1/1     Running      0      \t28m\naws-node-v497d         \t1/1     Running      0      \t29m\naws-node-wcbh7         \t1/1 \tRunning   0      \t29m\ncoredns-7f85bf9964-n8jmj\t1/1 \tRunning   0      \t36m\ncoredns-7f85bf9964-pk7sq\t1/1 \tRunning   0      \t36m\nkube-proxy-4r7fw       \t1/1 \tRunning   0      \t29m\nkube-proxy-dw9sv       \t1/1 \tRunning   0      \t29m\nkube-proxy-p7qqv       \t1/1 \tRunning   0      \t28m\nkube-proxy-t7spn       \t1/1 \tRunning   0      \t29m \n```", "```py\n# nginx.yml\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:1.21.0\n          ports:\n          - containerPort: 80 \n```", "```py\n$ kubectl apply -f nginx.yml\ndeployment.apps/nginx-deployment created\n$ kubectl get pods\nNAME                                READY     STATUS\t   RESTARTS   AGE\nnginx-deployment-6c4ccd94bc-8qftq   1/1 \tRunning   0      \t21s\nnginx-deployment-6c4ccd94bc-hqt8c   1/1 \tRunning   0      \t21s\nnginx-deployment-6c4ccd94bc-v7zpl   1/1 \tRunning   0      \t21s \n```", "```py\n$ kubectl describe deployment nginx-deployment\nName:               \tnginx-deployment\nNamespace:          \tdefault\nCreationTimestamp:  \tThu, 27 May 2021 21:06:47 +0100\nLabels:             \tapp=nginx\nAnnotations:        \tdeployment.kubernetes.io/revision: 1\nSelector:           \tapp=nginx\nReplicas:           \t3 desired | 3 updated | 3 total | 3 available | 0 unavailable\nStrategyType:       \tRollingUpdate\nMinReadySeconds:    \t0\nRollingUpdateStrategy:  25% max unavailable, 25% max surge\nPod Template:\n  Labels:  app=nginx\n  Containers:\n   nginx:\n\tImage:    \tnginx:1.21.0\n\tPort:     \t80/TCP\n\tHost Port:\t0/TCP\n\tEnvironment:  <none>\n\tMounts:   \t<none>\n  Volumes:    \t<none>\nConditions:\n  Type       \tStatus  Reason\n  ——       \t———  ———\n  Available  \tTrue\tMinimumReplicasAvailable\n  Progressing\tTrue\tNewReplicaSetAvailable\nOldReplicaSets:  <none>\nNewReplicaSet:   nginx-deployment-6c4ccd94bc (3/3 replicas created)\nEvents:\n  Type\tReason         \tAge   From               \tMessage\n  ——\t———         \t——  ——               \t———-\n  Normal  ScalingReplicaSet  14m   deployment-controller  Scaled up replica set nginx-deployment-6c4ccd94bc to 3 \n```", "```py\n$  kubectl get pods -l app=nginx\nNAME                                READY   STATUS             RESTARTS   AGE\nnginx-deployment-6c4ccd94bc-7g74n   0/1     ContainerCreating   0      \t2s\nnginx-deployment-6c4ccd94bc-8qftq   1/1     Running             0      \t17m\nnginx-deployment-6c4ccd94bc-crw2t   1/1     Running             0      \t2s\nnginx-deployment-6c4ccd94bc-fb7cf   0/1     ContainerCreating   0      \t2s\nnginx-deployment-6c4ccd94bc-hqt8c   1/1     Running             0      \t17m\nnginx-deployment-6c4ccd94bc-v7zpl   1/1     Running             0      \t17m\nnginx-deployment-6c4ccd94bc-zpd4v   1/1     Running             0      \t2s\nnginx-deployment-6c4ccd94bc-zwtcv   1/1     Running             0      \t2s \n```", "```py\n$ kubectl delete -f nginx.yml\ndeployment.apps \"nginx-deployment\" deleted \n```", "```py\n$ eksctl delete cluster —name=jeeves-cluster-1 —region=eu-west-1\n2021-05-27 21:33:22 [![](img/Icon_1.png)]  eksctl version 0.51.0\n2021-05-27 21:33:22 [![](img/Icon_1.png)]  using region eu-west-1\n2021-05-27 21:33:22 [![](img/Icon_1.png)]  deleting EKS cluster \"jeeves-cluster-1\"\n2021-05-27 21:33:23 [![](img/Icon_1.png)]  deleted 0 Fargate profile(s)\n2021-05-27 21:33:23 [![](img/Icon_2.png)]  kubeconfig has been updated\n2021-05-27 21:33:23 [![](img/Icon_1.png)]  cleaning up AWS load balancers created by Kubernetes objects of Kind Service or Ingress\n2021-05-27 21:33:25 [![](img/Icon_1.png)]  2 sequential tasks: { delete nodegroup \"ng-4e138761\", delete cluster control plane \"jeeves-cluster-1\" [async] }\n2021-05-27 21:33:26 [![](img/Icon_1.png)]  will delete stack \"eksctl-jeeves-cluster-1-nodegroup-ng-4e138761\"\n... \n```"]