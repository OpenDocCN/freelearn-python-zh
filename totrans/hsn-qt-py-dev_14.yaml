- en: Files, Printers, and Other Dialogs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件、打印机和其他对话框
- en: 'Any application with a GUI is created to produce operations. To do this in
    a user-friendly manner, it needs to have some basic functionality, such as the
    ability to open and save files, inform the user when something is processing,
    or if an error appears. To implement this in an application, we can use various
    dialog windows that open and save files, and inform the user that an event has
    occurred. Additionally, if a user''s tasks relate to working with text, they may
    want to print the text in paper form or to a file, such as a PDF. In this chapter,
    we will be covering the basic dialog windows provided by the Qt library, and we
    will demonstrate some simple print implementations in the app, including the following:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 任何具有GUI的应用程序都是为了产生操作而创建的。为了以用户友好的方式完成此操作，它需要具备一些基本功能，例如打开和保存文件的能力，在处理某些内容时通知用户，或者在出现错误时通知用户。为了在应用程序中实现这一点，我们可以使用各种打开和保存文件并通知用户事件已发生的对话框窗口。此外，如果用户的任务与文本处理相关，他们可能希望将文本打印成纸质形式或保存到文件中，例如PDF。在本章中，我们将介绍Qt库提供的基本对话框窗口，并在应用程序中演示一些简单的打印实现，包括以下内容：
- en: Dialog windows
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对话框窗口
- en: Message boxes
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 消息框
- en: Font and color dialog windows
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 字体和颜色对话框
- en: Files
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件
- en: Printers
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 打印机
- en: Dialog windows
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对话框窗口
- en: Dialog windows are most commonly used to realize communications between the
    user and application processes. These dialog windows can open and save files,
    show error messages, allow the user to change a printer's settings before printing,
    choose colors and fonts, and more. The Qt library provides the most popular dialog
    windows for an application. A dialog window is a kind of widget that can be modal
    or modeless. Modal dialog windows block input from other application windows when
    they are visualized. In comparison to this, modeless dialog windows provide their
    functionality independently from the windows of the application. Here, we will
    introduce the base class for dialog windows, that is, `QDialog`. Additionally,
    we'll examine additional classes, such as `QDialogButtonBox`, which constructs
    button boxes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 对话框窗口最常用于实现用户与应用程序进程之间的通信。这些对话框窗口可以打开和保存文件，显示错误消息，允许用户在打印前更改打印机的设置，选择颜色和字体，等等。Qt库为应用程序提供了最流行的对话框窗口。对话框窗口是一种可以是模态或非模态的小部件。模态对话框窗口在可视化时阻止其他应用程序窗口的输入。相比之下，非模态对话框窗口独立于应用程序窗口提供其功能。在此，我们将介绍对话框窗口的基类，即`QDialog`。此外，我们还将检查其他类，例如`QDialogButtonBox`，它构建按钮框。
- en: QDialog
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QDialog
- en: 'This class is the base class of the dialog window used with Qt. Almost all
    functional dialog windows inherit this class. The declaration syntax is as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 此类是Qt中使用的对话框窗口的基类。几乎所有功能对话框都继承了这个类。其声明语法如下：
- en: '[PRE0]'
  id: totrans-11
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The `QDialog` class enhances functionality with the functions described in the
    following sections.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '`QDialog`类通过以下各节中描述的函数增强了功能。'
- en: set
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: 'These functions set parameters or properties to the dialog window:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数将参数或属性设置到对话框窗口中：
- en: '`dialog.setModal(bool)`: If the parameter is `True`, it sets this dialog window
    as modal.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.setModal(bool)`: 如果参数为`True`，则设置此对话框窗口为模态。'
- en: '`dialog.setResult(int)`: This sets the dialog window''s result code to the
    code specified in the parameter.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.setResult(int)`: 此操作将对话框窗口的结果代码设置为参数中指定的代码。'
- en: '`dialog.setSizeGripEnabled(bool)`: If the parameter is `True`, it sets the
    resize handle of the `QSizeGrip` type for resizing top-level windows.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.setSizeGripEnabled(bool)`: 如果参数为`True`，则设置`QSizeGrip`类型的大小调整手柄以调整顶级窗口的大小。'
- en: '`dialog.setVisible(bool)`: If the parameter is `True`, it sets this dialog
    window as visible.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.setVisible(bool)`: 如果参数为`True`，则设置此对话框窗口为可见。'
- en: is
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是
- en: 'This function returns a Boolean value (`bool`) related to this dialog window''s
    state:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数返回与该对话框窗口状态相关的布尔值（`bool`）：
- en: '`dialog.isSizeGripEnabled()`: This returns `True` if the size grip is enabled
    for this dialog window.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.isSizeGripEnabled()`: 如果此对话框窗口启用了大小调整手柄，则返回`True`。'
- en: functional
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能性
- en: 'These functions return the current values of the dialog window, inform you
    about changes to functionality, and more:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回对话框窗口的当前值，通知您有关功能更改的信息，等等：
- en: '`dialog.accept()`: This accepts the dialog and sets the result code to `Accepted`
    with respect to hiding the modal dialog window.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.accept()`: 此操作接受对话框，并将结果代码设置为`Accepted`，以隐藏模态对话框窗口。'
- en: '`dialog.done(int)`: This closes the dialog and sets the result code with respect
    to the code specified in the parameter.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.done(int)`: 这关闭对话框，并根据参数中指定的代码设置结果代码。'
- en: '`dialog.exec()`: This displays and executes the modal dialog and returns the
    dialog result code.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.exec()`: 这将显示并执行模态对话框，并返回对话框结果代码。'
- en: '`dialog.exec_()`: This displays and executes the modal dialog and returns the
    dialog result code.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.exec_()`: 这将显示并执行模态对话框，并返回对话框结果代码。'
- en: '`dialog.open()`: This opens and shows the modal dialog window.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.open()`: 这将打开并显示模态对话框窗口。'
- en: '`dialog.reject()`: This rejects the dialog and sets the result code to `Rejected`
    when the modal dialog is hidden.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.reject()`: 当模态对话框隐藏时，此操作拒绝对话框并将结果代码设置为`Rejected`。'
- en: '`dialog.result()`: This returns the result code of the modal dialog, such as
    `Accepted` or `Rejected`.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.result()`: 这返回模态对话框的结果代码，例如`Accepted`或`Rejected`。'
- en: events
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: events
- en: 'These functions are related to events, such as event handlers:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数与事件相关，例如事件处理程序：
- en: '`dialog.closeEvent(QtGui.QCloseEvent)`: This event handler is called with the
    event parameter when it receives a dialog window close request.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.closeEvent(QtGui.QCloseEvent)`: 当接收到对话框窗口关闭请求时，此事件处理程序会使用事件参数被调用。'
- en: '`dialog.contextMenuEvent(QtGui.QContextMenuEvent)`: This event handler receives
    dialog window context menu events.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.contextMenuEvent(QtGui.QContextMenuEvent)`: 此事件处理程序接收对话框窗口的上下文菜单事件。'
- en: '`dialog.eventFilter(QtCore.QObject, QtCore.QEvent)`: This event handler filters
    events if the dialog window is installed as an event filter for the object (the
    first parameter).'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.eventFilter(QtCore.QObject, QtCore.QEvent)`: 如果对话框窗口被安装为对象的（第一个参数）事件过滤器，则此事件处理程序将过滤事件。'
- en: '`dialog.keyPressEvent(QtGui.QKeyEvent)`: This event handler receives key press
    events for the dialog window with the event passed in the parameter.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.keyPressEvent(QtGui.QKeyEvent)`: 此事件处理程序接收带有参数传递的事件的对话框窗口按键事件。'
- en: '`dialog.resizeEvent(QtGui.QResizeEvent)`: This event handler receives resize
    events for the dialog window with the event passed in the parameter.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.resizeEvent(QtGui.QResizeEvent)`: 此事件处理程序接收带有参数传递的事件的对话框窗口大小调整事件。'
- en: '`dialog.showEvent(QtGui.QShowEvent)`: This event handler receives show events
    for the dialog window with the event passed in the parameter.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.showEvent(QtGui.QShowEvent)`: 此事件处理程序接收带有参数传递的事件的对话框窗口显示事件。'
- en: signals
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: signals
- en: 'These are the available signals of the `QDialog` class:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是`QDialog`类的可用信号：
- en: '`dialog.accepted()`: This signal is emitted when the dialog has been accepted
    by the user, or by calling the `accept()` and `done()` functions.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.accepted()`: 当对话框被用户接受，或者通过调用`accept()`和`done()`函数时，会发出此信号。'
- en: '`dialog.finished(int)`: This signal is emitted when the result code of the
    dialog has been set by the user, or by calling the `accept()`, `done()`, and `reject()`
    functions.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.finished(int)`: 当用户或通过调用`accept()`、`done()`和`reject()`函数设置对话框的结果代码时，会发出此信号。'
- en: '`dialog.rejected()`: This signal is emitted when the dialog has been rejected
    by the user, or by calling the `reject()` and `done()` functions.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`dialog.rejected()`: 当对话框被用户拒绝，或者通过调用`reject()`和`done()`函数时，会发出此信号。'
- en: Message boxes
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 消息框
- en: Message boxes are used to inform the user about events that occur in the application.
    These can be windows with messages, errors, and other events. These widgets are
    dialog windows and they provide functionality in relation to these events.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 消息框用于通知用户应用程序中发生的事件。这些可以是带有消息、错误和其他事件的窗口。这些小部件是对话框窗口，它们提供与这些事件相关的功能。
- en: QMessageBox
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QMessageBox
- en: 'This class implements the communication between the user and the application
    by asking questions and receiving answers relating to the process. The box is
    constructed with the modal dialog window representation. The declaration syntax
    of this class is as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 此类通过询问与过程相关的问题并接收答案来实现用户与应用程序之间的通信。该框使用模态对话框窗口表示形式构建。此类的声明语法如下：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `QMessageBox` class inherits the `QDialog` class and improves functionality
    with the functions described in the following sections.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '`QMessageBox`类继承自`QDialog`类，并通过以下各节中描述的函数增强了功能。'
- en: add
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: add
- en: 'These functions add elements to the message box:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数向消息框添加元素：
- en: '`message_box.addButton(QtWidgets.QMessageBox.StandardButton)`: This adds a
    standard button to the message box and returns a push button.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.addButton(QtWidgets.QMessageBox.StandardButton)`: 这将在消息框中添加一个标准按钮，并返回一个按钮。'
- en: '**`message_box.addButton(QtWidgets.QAbstractButton, QtWidgets.QMessageBox.ButtonRole)`**:
    This adds a button (the first parameter) to the message box with a role (the second
    parameter). The button roles are as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**`message_box.addButton(QtWidgets.QAbstractButton, QtWidgets.QMessageBox.ButtonRole)`**:
    这将在消息框中添加一个按钮（第一个参数）并带有角色（第二个参数）。按钮角色如下：'
- en: '`QtWidgets.QMessageBox.Ok`: The OK button with `AcceptRole`.'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Ok`: 带有 `AcceptRole` 的确定按钮。'
- en: '`QtWidgets.QMessageBox.Open`: The Open button with `AcceptRole`.'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Open`: 带有 `AcceptRole` 的打开按钮。'
- en: '`QtWidgets.QMessageBox.Save`: The Save button with `AcceptRole`.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Save`: 带有 `AcceptRole` 的保存按钮。'
- en: '`QtWidgets.QMessageBox.Cancel`: The Cancel button with `RejectRole`.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Cancel`: 带有 `RejectRole` 的取消按钮。'
- en: '`QtWidgets.QMessageBox.Close`: The Close button with `RejectRole`.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Close`: 带有 `RejectRole` 的关闭按钮。'
- en: '`QtWidgets.QMessageBox.Discard`: The Discard or Don''t Save (platform-dependent)
    button with `DestructiveRole`.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Discard`: 带有 `DestructiveRole` 的丢弃或不要保存（平台相关）按钮。'
- en: '`QtWidgets.QMessageBox.Apply`: The Apply button with `ApplyRole`.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Apply`: 带有 `ApplyRole` 的应用按钮。'
- en: '`QtWidgets.QMessageBox.Reset`: The Reset button with `ResetRole`.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Reset`: 带有 `ResetRole` 的重置按钮。'
- en: '`QtWidgets.QMessageBox.RestoreDefaults`: The Restore Defaults button with `ResetRole`.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.RestoreDefaults`: 带有 `ResetRole` 的恢复默认按钮。'
- en: '`QtWidgets.QMessageBox.Help`: The Help button with `HelpRole`.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Help`: 带有 `HelpRole` 的帮助按钮。'
- en: '`QtWidgets.QMessageBox.SaveAll`: The Save All button with `AcceptRole`.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.SaveAll`: 带有 `AcceptRole` 的全部保存按钮。'
- en: '`QtWidgets.QMessageBox.Yes`: The Yes button with `YesRole`.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Yes`: 带有 `YesRole` 的是按钮。'
- en: '`QtWidgets.QMessageBox.YesToAll`: The Yes To All button with `YesRole`.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.YesToAll`: 带有 `YesRole` 的全部是按钮。'
- en: '`QtWidgets.QMessageBox.No`: The No button with `NoRole`.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.No`: 带有 `NoRole` 的否按钮。'
- en: '`QtWidgets.QMessageBox.NoToAll`: The No To All button with `NoRole`.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.NoToAll`: 带有 `NoRole` 的全部否按钮。'
- en: '`QtWidgets.QMessageBox.Abort`: The Abort button with `RejectRole`.'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Abort`: 带有 `RejectRole` 的中止按钮。'
- en: '`QtWidgets.QMessageBox.Retry`: The Retry button with `AcceptRole`.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Retry`: 带有 `AcceptRole` 的重试按钮。'
- en: '`QtWidgets.QMessageBox.Ignore`: The Ignore button with `AcceptRole`.'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Ignore`: 带有 `AcceptRole` 的忽略按钮。'
- en: '`QtWidgets.QMessageBox.NoButton`: This is an invalid button.'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.NoButton`: 这是一个无效的按钮。'
- en: '`message_box.addButton(str, QtWidgets.QMessageBox.ButtonRole)`: This adds a
    button with text (the first parameter) to the message box with a role (the second
    parameter), and returns a push button.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.addButton(str, QtWidgets.QMessageBox.ButtonRole)`: 这将在消息框中添加一个带有文本（第一个参数）和角色（第二个参数）的按钮，并返回一个推按钮。'
- en: set
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: set
- en: 'These functions set the parameters or properties to the message box:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数设置消息框的参数或属性：
- en: '`message_box.setCheckBox(QtWidgets.QCheckBox)`: This sets the checkbox specified
    in the parameter in the message box dialog.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setCheckBox(QtWidgets.QCheckBox)`: 这将在消息框对话框中设置参数中指定的复选框。'
- en: '`message_box.setDefaultButton(QtWidgets.QPushButton)`: This sets the default
    button specified in the parameter for the message box.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setDefaultButton(QtWidgets.QPushButton)`: 这将为消息框设置参数中指定的默认按钮。'
- en: '`message_box.setDefaultButton(QtWidgets.QMessageBox.StandardButton)`: This
    sets the default button specified in the parameter for the message box.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setDefaultButton(QtWidgets.QMessageBox.StandardButton)`: 这将为消息框设置参数中指定的默认按钮。'
- en: '`message_box.setDetailedText(str)`: This sets the detailed text specified in
    the parameter for the message box. The detailed text is plain text, which will
    be displayed in the details area.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setDetailedText(str)`: 这将设置消息框中指定的参数详细文本。详细文本是纯文本，将在详细信息区域显示。'
- en: '`message_box.setEscapeButton(QtWidgets.QAbstractButton)`: This sets the button
    specified in the parameter, which will be activated when the *Esc* key is pressed.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setEscapeButton(QtWidgets.QAbstractButton)`: 这将设置参数中指定的按钮，当按下
    *Esc* 键时将被激活。'
- en: '`message_box.setEscapeButton(QtWidgets.QMessageBox.StandardButton)`: This sets
    the button specified in the parameter, which will be activated when the *Esc*
    key is pressed.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setEscapeButton(QtWidgets.QMessageBox.StandardButton)`: 这将设置参数中指定的按钮，当按下
    *Esc* 键时将被激活。'
- en: '`message_box.setIcon(QtWidgets.QMessageBox.Icon)`: This sets the icon that
    will be used with the message box. The available icons are as follows:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setIcon(QtWidgets.QMessageBox.Icon)`: 这将设置与消息框一起使用的图标。可用的图标如下：'
- en: '`QtWidgets.QMessageBox.NoIcon`—`0`: No Icon is displayed for the message box.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.NoIcon`—`0`: 消息框不显示图标。'
- en: '`QtWidgets.QMessageBox.Information `—`1`: Icon displaying information sign.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Information`—`1`: 显示信息标志的图标。'
- en: '`QtWidgets.QMessageBox.Warning `—`2`: Icon displaying a warning sign.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Warning`—`2`: 显示警告标志的图标。'
- en: '`QtWidgets.QMessageBox.Critical`—`3`: Icon displaying critical problem sign.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Critical`—`3`: 显示临界问题标志的图标。'
- en: '`QtWidgets.QMessageBox.Question`—`4`: Icon displaying question sign.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QMessageBox.Question`—`4`: 显示问题标志的图标。'
- en: '`message_box.setIconPixmap(QtGui.QPixmap)`: This sets the pixmap specified
    in the parameter for the icon of the message box.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setIconPixmap(QtGui.QPixmap)`: 这为消息框的图标设置参数中指定的位图。'
- en: '`message_box.setInformativeText(str)`: This sets the informative text specified
    in the parameter, which will be a full description of the message in the message
    box.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setInformativeText(str)`: 这设置参数中指定的信息文本，它将是消息框中消息的完整描述。'
- en: '`message_box.setStandardButtons(QtWidgets.QMessageBox.StandardButtons)`: This
    sets standard buttons specified in the parameter, which will be used in the message
    box.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setStandardButtons(QtWidgets.QMessageBox.StandardButtons)`: 这将设置参数中指定的标准按钮，这些按钮将在消息框中使用。'
- en: '`message_box.setText("Message Box Text")`: This sets the text specified in
    the parameter, which will be displayed in the message box.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setText("Message Box Text")`: 这设置参数中指定的文本，该文本将在消息框中显示。'
- en: '`message_box.setTextFormat(QtCore.Qt.TextFormat)`: This sets the text format
    specified in the parameter for the text that will be displayed in the message
    box.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setTextFormat(QtCore.Qt.TextFormat)`: 这为消息框中将显示的文本设置参数中指定的文本格式。'
- en: '`message_box.setTextInteractionFlags(QtCore.Qt.TextInteractionFlags)`: This
    sets the text interaction flags specified in the parameter, which will describe
    the label interaction with user input.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setTextInteractionFlags(QtCore.Qt.TextInteractionFlags)`: 这设置参数中指定的文本交互标志，它将描述标签与用户输入的交互。'
- en: '`message_box.setWindowModality(QtCore.Qt.WindowModality)`: This sets the modality
    specified in the parameter for the message box.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setWindowModality(QtCore.Qt.WindowModality)`: 这为消息框设置参数中指定的模式。'
- en: '`message_box.setWindowTitle(str)`: This sets the title specified in the parameter
    for this dialog window message box.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.setWindowTitle(str)`: 这为这个对话框窗口消息框设置参数中指定的标题。'
- en: functional
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能性
- en: 'These functions return the current values of the message box, inform you about
    changes to functionality, and more:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回消息框的当前值，通知您关于功能的变化，等等：
- en: '`message_box.about(QtWidgets.QWidget, str, str)`: This displays a simple box
    with a title (the second parameter) and text (the third parameter) about the first
    parameter.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.about(QtWidgets.QWidget, str, str)`: 这显示一个带有标题（第二个参数）和文本（第三个参数）关于第一个参数的简单框。'
- en: '`message_box.aboutQt(QWidget, str)`: This displays a simple box with a title
    (the second parameter) about Qt.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.aboutQt(QWidget, str)`: 这显示一个带有标题（第二个参数）关于Qt的简单框。'
- en: '`message_box.button(QtWidgets.StandardButton)`: This returns the button of
    the `QtWidgets.QAbstractButton` type corresponding to the button specified in
    the parameter.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.button(QtWidgets.StandardButton)`: 这返回与参数中指定的按钮对应的`QtWidgets.QAbstractButton`类型的按钮。'
- en: '`message_box.buttonRole(QtWidgets.QAbstractButton)`: This returns the button
    role of the `QtWidgets.QMessageBox.ButtonRole` type for the button specified in
    the parameter.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.buttonRole(QtWidgets.QAbstractButton)`: 这返回参数中指定的按钮的`QtWidgets.QMessageBox.ButtonRole`类型的按钮角色。'
- en: '`message_box.buttons()`: This returns all the buttons added to the message
    box as a list.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.buttons()`: 这返回添加到消息框中的所有按钮的列表。'
- en: '`message_box.checkBox()`: This returns the checkbox of the `QtWidgets.QCheckBox`
    type, which is available on the message box; otherwise, it returns `0`.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.checkBox()`: 这返回消息框上可用的`QtWidgets.QCheckBox`类型的复选框；否则返回`0`。'
- en: '`message_box.clickedButton()`: This returns the button of the `QtWidgets.QAbstractButton`
    type that was clicked on.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.clickedButton()`: 这返回被点击的`QtWidgets.QAbstractButton`类型的按钮。'
- en: '`message_box.critical(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: This opens a critical message box with
    a title (the second parameter), some text (the third parameter) in front of the
    widget specified (the first parameter), and the buttons specified in the fourth
    and fifth parameters.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.critical(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: 这将打开一个带有标题（第二个参数）、一些文本（第三个参数）的临界消息框，文本位于指定的小部件（第一个参数）之前，并且包含第四个和第五个参数指定的按钮。'
- en: '`message_box.defaultButton()`: This returns the default button of the `QtWidgets.QPushButton`
    type for the message box.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.defaultButton()`: 这返回消息框的 `QtWidgets.QPushButton` 类型的默认按钮。'
- en: '`message_box.detailedText()`: This returns the plain text displayed in the
    details area.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.detailedText()`: 这返回在详细信息区域显示的纯文本。'
- en: '`message_box.escapeButton()`: This returns the button that will be activated
    when the user presses the *Esc* key.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.escapeButton()`: 这返回当用户按下 *Esc* 键时将被激活的按钮。'
- en: '`message_box.icon()`: This returns the icon of the `QtWidgets.QMessageBox.Icon`
    type used with the message box.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.icon()`: 这返回与消息框一起使用的 `QtWidgets.QMessageBox.Icon` 类型的图标。'
- en: '`message_box.iconPixmap()`: This returns the current icon pixmap of the `QtGui.QPixmap`
    type.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.iconPixmap()`: 这返回当前 `QtGui.QPixmap` 类型的图标位图。'
- en: '`message_box.information(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: This opens an information message box
    with a title (the second parameter), some text (the third parameter) in front
    of the widget specified (the first parameter), and the buttons specified in the
    fourth and fifth parameters.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.information(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: 这将在指定的窗口（第一个参数）前打开一个带有标题（第二个参数）、一些文本（第三个参数）的信息消息框，并使用第四个和第五个参数指定的按钮。'
- en: '`message_box.informativeText()`: This returns informative text, such as a full
    description of the message in the message box.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.informativeText()`: 这返回信息文本，例如消息框中消息的完整描述。'
- en: '`message_box.open(QtCore.QObject, str)`: This connects a signal to a slot with
    a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.open(QtCore.QObject, str)`: 这将一个信号连接到一个槽，接收器（第一个参数）和成员（第二个参数）。'
- en: '`message_box.question(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: This opens a question message box with
    a title (the second parameter), some text (the third parameter) in front of the
    widget specified (the first parameter), and the buttons specified in the fourth
    and fifth parameters.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.question(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: 这将在指定的窗口（第一个参数）前打开一个带有标题（第二个参数）、一些文本（第三个参数）的问题消息框，并使用第四个和第五个参数指定的按钮。'
- en: '`message_box.removeButton(QtWidgets.QAbstractButton)`: This removes the button
    specified in the parameter from the message box.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.removeButton(QtWidgets.QAbstractButton)`: 这将从消息框中移除指定的参数中的按钮。'
- en: '`message_box.standardButton(QtWidgets.QAbstractButton)`: This returns the button
    of the `QtWidgets.QMessageBox.StandardButton` type corresponding to the button
    specified in the parameter.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.standardButton(QtWidgets.QAbstractButton)`: 这返回与参数指定的按钮相对应的 `QtWidgets.QMessageBox.StandardButton`
    类型的按钮。'
- en: '`message_box.standardButtons()`: This returns the standard buttons of the `QtWidgets.QMessageBox.StandardButtons`
    type that are used with the message box.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.standardButtons()`: 这返回与消息框一起使用的 `QtWidgets.QMessageBox.StandardButtons`
    类型的标准按钮。'
- en: '`message_box.standardIcon(QtWidgets.QMessageBox.Icon)`: This returns the pixmap
    of the `QtGui.QPixmap` type, which is used for the standard icon of the message
    box.'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.standardIcon(QtWidgets.QMessageBox.Icon)`: 这返回用于消息框标准图标的 `QtGui.QPixmap`
    类型的位图。'
- en: '`message_box.text()`: This returns the text that is displayed in the message
    box.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.text()`: 这返回在消息框中显示的文本。'
- en: '`message_box.textFormat()`: This returns the format of the `QtCore.Qt.TextFormat`
    type, which is used for the text in the message box.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.textFormat()`: 这返回用于消息框中文本的 `QtCore.Qt.TextFormat` 类型的格式。'
- en: '`message_box.textInteractionFlags()`: This returns the flags of the `QtCore.Qt.TextInteractionFlags`
    type, which are used for the text interaction of the message box.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.textInteractionFlags()`: 这返回用于消息框文本交互的 `QtCore.Qt.TextInteractionFlags`
    类型的标志。'
- en: '`message_box.warning(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: This opens a warning message box with
    a title (the second parameter), some text (the third parameter) in front of the
    widget specified (the first parameter), and the buttons specified in the fourth
    and fifth parameters.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.warning(QtWidgets.QWidget, str, str, QtWidgets.QMessageBox.StandardButton,
    QtWidgets.QMessageBox.StandardButton)`: 这将在指定的窗口（第二个参数）前打开一个带有标题（第二个参数）、一些文本（第三个参数）的警告消息框，并使用第四个和第五个参数指定的按钮。'
- en: events
  id: totrans-123
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件
- en: 'These functions are related to events, such as event handlers:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数与事件相关，例如事件处理器：
- en: '`message_box.changeEvent(QtCore.QEvent)`: This handles the state changes of
    the message box.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.changeEvent(QtCore.QEvent)`: 这处理消息框的状态变化。'
- en: '`message_box.closeEvent(QtGui.QCloseEvent)`: This event handler is called with
    the event parameter when it receives a close request for a message box from the
    window system.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.closeEvent(QtGui.QCloseEvent)`: 当窗口系统收到消息框的关闭请求时，会调用带有事件参数的事件处理器。'
- en: '`message_box.event(QtCore.QEvent)`: This receives events sent to the object
    and should return `True` if the events are recognized and processed.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.event(QtCore.QEvent)`: 这接收发送给对象的的事件，如果事件被识别并处理，则应返回`True`。'
- en: '`message_box.keyPressEvent(QtGui.QKeyEvent)`: This event handler receives keypress
    events for the message box with the event passed in the parameter.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.keyPressEvent(QtGui.QKeyEvent)`: 此事件处理器接收传递给参数的消息框的按键事件。'
- en: '`message_box.resizeEvent(QtGui.QResizeEvent)`: This event handler receives
    resize events for the message box with the event passed in the parameter.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.resizeEvent(QtGui.QResizeEvent)`: 此事件处理器接收传递给参数的消息框的尺寸变化事件。'
- en: '`message_box.showEvent(QtGui.QShowEvent)`: This event handler receives show
    events for the message box with the event passed in the parameter.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.showEvent(QtGui.QShowEvent)`: 此事件处理器接收传递给参数的消息框的显示事件。'
- en: signals
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: signals
- en: 'The following signal is available with the `QMessageBox` class:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`QMessageBox`类有以下可用信号：'
- en: '`message_box.buttonClicked(QtWidgets.QAbstractButton)`: This signal is emitted
    when the button is clicked on inside the message box.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '`message_box.buttonClicked(QtWidgets.QAbstractButton)`: 当在消息框内部点击按钮时，会发出此信号。'
- en: QErrorMessage
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QErrorMessage
- en: 'This class displays the error message dialog window. Errors can occur in an
    application, and this window informs the user about these events. The declaration
    syntax of this class is as follows:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此类显示错误消息对话框窗口。应用程序中可能会发生错误，此窗口会通知用户这些事件。此类的声明语法如下：
- en: '[PRE2]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '`QErrorMessage` inherits the `QDialog` class and enhances its functionality
    with the functions described in the following sections.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '`QErrorMessage`继承自`QDialog`类，并通过以下章节中描述的函数增强了其功能。'
- en: functional
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: functional
- en: 'These functions return the current values of the error message dialog, inform
    you about changes to functionality, and more:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回错误消息对话框的当前值，通知您有关功能的变化，等等：
- en: '`error_message.qtHandler()`: This returns an object of the `QtWidgets.QErrorMessage`
    type, which outputs the default Qt messages.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '`error_message.qtHandler()`: 这会返回一个`QtWidgets.QErrorMessage`类型的对象，该对象输出默认的Qt消息。'
- en: '`error_message.showMessage(str)`: This shows the message specified in the parameter.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '`error_message.showMessage(str)`: 这会显示参数中指定的消息。'
- en: '`error_message.showMessage(str, str)`: This shows a message (the first parameter)
    with the requested message type (the second parameter).'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '`error_message.showMessage(str, str)`: 这会显示一个消息（第一个参数），并带有请求的消息类型（第二个参数）。'
- en: events
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: events
- en: 'These functions are related to events, such as event handlers:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数与事件相关，例如事件处理器：
- en: '`error_message.changeEvent(QtCore.QEvent)`: This handles the state changes
    of the error message dialog.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`error_message.changeEvent(QtCore.QEvent)`: 这处理错误消息对话框的状态变化。'
- en: Font and color dialogs
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 字体和颜色对话框
- en: The Qt framework provides standard dialog windows for selecting fonts and colors
    in an application. They can be used to change the font of some text or the color
    of an element.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: Qt框架为应用程序提供了标准对话框，用于选择字体和颜色。它们可以用来更改某些文本的字体或元素的色彩。
- en: QFontDialog
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QFontDialog
- en: 'This class realizes the dialog window for the font selection. The selected
    font can be used for text in text fields, labels, and for other application elements.
    The declaration syntax of this class is as follows:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 此类实现了字体选择对话框。所选字体可用于文本字段、标签以及其他应用程序元素。此类的声明语法如下：
- en: '[PRE3]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '`QFontDialog` inherits the `QDialog` class and enhances its functionality with
    functions described in the following sections:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '`QFontDialog`继承自`QDialog`类，并通过以下章节中描述的函数增强了其功能：'
- en: set
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: set
- en: 'These functions set the parameters or properties of the font dialog:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数设置字体对话框的参数或属性：
- en: '`font_dialog.setCurrentFont(QtGui.QFont)`: This sets the font specified in
    the parameter to be highlighted in the font dialog.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.setCurrentFont(QtGui.QFont)`: 这会将参数中指定的字体设置为字体对话框中的高亮字体。'
- en: '`font_dialog.setOption(QtWidgets.QFontDialog.FontDialogOption, bool)`: If the
    second parameter is `True`, then the font dialog option is set. The available
    options are as follows:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.setOption(QtWidgets.QFontDialog.FontDialogOption, bool)`: 如果第二个参数为`True`，则设置字体对话框选项。可用的选项如下：'
- en: '`QtWidgets.QFontDialog.NoButtons`: Font dialog without buttons'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFontDialog.NoButtons`: 无按钮的字体对话框'
- en: '`QtWidgets.QFontDialog.DontUseNativeDialog`: Font dialog as Qt standard'
  id: totrans-157
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFontDialog.DontUseNativeDialog`: 作为Qt标准实现的字体对话框'
- en: '`QtWidgets.QFontDialog.ScalableFonts`: Font dialog with scalable fonts'
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFontDialog.ScalableFonts`: 带有可缩放字体的字体对话框'
- en: '**`QtWidgets.QFontDialog.NonScalableFonts`**: Font dialog with non-scalable
    fonts'
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`QtWidgets.QFontDialog.NonScalableFonts`**: 带有不可缩放字体的字体对话框'
- en: '**`QtWidgets.QFontDialog.MonospacedFonts`**: Font dialog with monospaced fonts'
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`QtWidgets.QFontDialog.MonospacedFonts`**: 带有等宽字体的字体对话框'
- en: '**`QtWidgets.QFontDialog.ProportionalFonts`**: Font dialog with proportional
    fonts'
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**`QtWidgets.QFontDialog.ProportionalFonts`**: 带有比例字体的字体对话框'
- en: '`font_dialog.setOptions(QtWidgets.QFontDialog.FontDialogOptions)`: This sets
    the options that will be used with the font dialog.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.setOptions(QtWidgets.QFontDialog.FontDialogOptions)`: 这将设置将用于字体对话框的选项。'
- en: functional
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能
- en: 'These functions return the current values of the font dialog, inform you about
    changes to functionality, and more:'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回字体对话框的当前值，通知您有关功能更改等更多信息：
- en: '`font_dialog.currentFont()`: This returns the current font of the `QtGui.QFont`
    type.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.currentFont()`: 此函数返回`QtGui.QFont`类型的当前字体。'
- en: '`font_dialog.getFont(QtWidgets.QWidget)`: This returns the font and executes
    a modal font dialog, with the parent of the dialog specified.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.getFont(QtWidgets.QWidget)`: 此函数返回字体并执行模态字体对话框，指定对话框的父窗口。'
- en: '`font_dialog.getFont(QtGui.QFont, QtWidgets.QWidget, str, QtWidgets.QFontDialog.FontDialogOptions)`:
    This returns the font and executes a modal font dialog. If the user clicks on
    the OK button, it returns the selected font. If the user clicks on Cancel, then the
    initial font (the first parameter) will be returned. It''s constructed with the
    parent widget (the second parameter), the title (the third parameter) of the dialog
    window, and options (the fourth parameter).'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.getFont(QtGui.QFont, QtWidgets.QWidget, str, QtWidgets.QFontDialog.FontDialogOptions)`:
    此函数返回字体并执行模态字体对话框。如果用户点击OK按钮，则返回所选字体。如果用户点击取消，则返回初始字体（第一个参数）。它由父窗口小部件（第二个参数）、对话框窗口的标题（第三个参数）和选项（第四个参数）构成。'
- en: '`font_dialog.open(QtCore.QObject, str)`: This connects a signal to a slot with
    a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.open(QtCore.QObject, str)`: 这将信号连接到槽，其中接收器（第一个参数）和成员（第二个参数）。'
- en: '`font_dialog.options()`: This returns the options of the `QtWidgets.QFontDialog.FontDialogOptions`
    type that is used for the font dialog.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.options()`: 此函数返回用于字体对话框的`QtWidgets.QFontDialog.FontDialogOptions`类型的选项。'
- en: '`font_dialog.selectedFont()`: This returns the selected font of the `QtGui.QFont`
    type by clicking on the OK button, or by accepting in another manner.'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.selectedFont()`: 通过点击OK按钮或以其他方式接受时，此函数返回`QtGui.QFont`类型的所选字体。'
- en: '`font_dialog.testOption(QtWidgets.QFontDialog.FontDialogOption)`: This returns
    `True` if the font dialog option specified in the parameter is enabled; otherwise,
    it returns `False`.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.testOption(QtWidgets.QFontDialog.FontDialogOption)`: 如果参数中指定的字体对话框选项被启用，则此函数返回`True`；否则，它返回`False`。'
- en: events
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件
- en: 'This function is related to events:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数与事件相关：
- en: '`font_dialog.changeEvent(QtCore.QEvent)`: This handles the state changes of
    the font dialog.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.changeEvent(QtCore.QEvent)`: 这处理字体对话框的状态变化。'
- en: signals
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信号
- en: 'The available signals of the `QFontDialog` class are as follows:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`QFontDialog`类的可用信号如下：'
- en: '`font_dialog.currentFontChanged(QtGui.QFont)`: This signal is emitted when
    the current font for the font dialog changes, and the new font is passed in the
    parameter.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.currentFontChanged(QtGui.QFont)`: 当字体对话框的当前字体更改时，会发出此信号，并通过参数传递新字体。'
- en: '`font_dialog.fontSelected(QtGui.QFont)`: This signal is emitted when the font
    is selected in the font dialog, with the selected font passed in the parameter.'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`font_dialog.fontSelected(QtGui.QFont)`: 当在字体对话框中选择字体时，会发出此信号，并通过参数传递所选字体。'
- en: QColorDialog
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QColorDialog
- en: 'This class creates a dialog window for selecting colors. The selected color
    can be used to color the text, the application''s window, or other elements. The
    declaration syntax of this class is as follows:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此类创建一个用于选择颜色的对话框窗口。所选颜色可用于着色文本、应用程序窗口或其他元素。此类的声明语法如下：
- en: '[PRE4]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '`QColorDialog` inherits the `QDialog` class and enhances its functionality
    with the functions described in the following sections.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: '`QColorDialog`类继承自`QDialog`类，并通过以下各节中描述的函数增强了其功能。'
- en: set
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: 'These functions set the parameters and properties of the color dialog:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数设置颜色对话框的参数和属性：
- en: '`color_dialog.setCurrentColor(QtGui.QColor)`: This sets the color (specified
    in the parameter) that will be highlighted in the color dialog.'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.setCurrentColor(QtGui.QColor)`: 这设置将在颜色对话框中高亮显示的颜色（在参数中指定）。'
- en: '`color_dialog.setCustomColor(int, QtGui.QColor)`: This sets the custom color
    (the second parameter) at the index (the first parameter).'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.setCustomColor(int, QtGui.QColor)`: 这设置在索引（第一个参数）处的自定义颜色（第二个参数）。'
- en: '`color_dialog.setOption(QtWidgets.QColorDialog.ColorDialogOption, bool)`: If
    the second parameter is `True`, it sets the color dialog option. The available
    options are as follows:'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.setOption(QtWidgets.QColorDialog.ColorDialogOption, bool)`: 如果第二个参数为
    `True`，则设置颜色对话框选项。可用的选项如下：'
- en: '`QtWidgets.QColorDialog.NoButtons`: Color dialog without buttons.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QColorDialog.NoButtons`: 无按钮的颜色对话框。'
- en: '`QtWidgets.QColorDialog.DontUseNativeDialog`: Color dialog as Qt standard.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QColorDialog.DontUseNativeDialog`: 作为 Qt 标准的颜色对话框。'
- en: '`QtWidgets.QColorDialog.ShowAlphaChannel`: The alpha component of a color can
    be selected.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QColorDialog.ShowAlphaChannel`: 可以选择颜色的 alpha 成分。'
- en: '`color_dialog.setOptions(QtWidgets.QFontDialog.FontDialogOptions)`: This sets
    the options that will be used with the color dialog.'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.setOptions(QtWidgets.QFontDialog.FontDialogOptions)`: 这设置将用于颜色对话框的选项。'
- en: '`color_dialog.setStandardColor(int, QtGui.QColor)`: This sets the standard
    color (the second parameter) at the index (the first parameter).'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.setStandardColor(int, QtGui.QColor)`: 这在索引（第一个参数）处设置标准颜色（第二个参数）。'
- en: functional
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能
- en: 'These functions return the current values of the color dialog, inform you about
    changes to functionality, and more:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回颜色对话框的当前值，通知您有关功能性的更改，等等：
- en: '`color_dialog.currentColor()`: This returns the current color of the `QtGui.QColor`
    type.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.currentColor()`: 这返回 `QtGui.QColor` 类型的当前颜色。'
- en: '`color_dialog.customColor(int)`: This returns the custom color of the `QtGui.QColor`
    type at the index specified in the parameter.'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.customColor(int)`: 这返回在参数中指定的索引处的 `QtGui.QColor` 类型的自定义颜色。'
- en: '`color_dialog.customCount()`: This returns the number of custom colors that
    are supported by the color dialog.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.customCount()`: 这返回颜色对话框支持的自定义颜色的数量。'
- en: '`color_dialog.getFont(QtGui.QColor, QtWidgets.QWidget, str, QtWidgets.QColorDialog.ColorDialogOptions)`:
    This returns the color and executes a modal color dialog. When the user clicks
    on the `Ok` button, it returns the selected color. If the user clicks on `Cancel`,
    then the initial color (the first parameter) will be returned. It is constructed
    with the parent widget (the second parameter), the title (the third parameter)
    of the dialog window, and options (the fourth parameter).'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.getFont(QtGui.QColor, QtWidgets.QWidget, str, QtWidgets.QColorDialog.ColorDialogOptions)`:
    这返回颜色并执行模态颜色对话框。当用户点击“确定”按钮时，它返回所选颜色。如果用户点击“取消”，则返回初始颜色（第一个参数）。它是通过父小部件（第二个参数）、对话框窗口的标题（第三个参数）和选项（第四个参数）构建的。'
- en: '`color_dialog.open(QtCore.QObject, str)`: This connects a signal to a slot
    with a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.open(QtCore.QObject, str)`: 这将信号连接到具有接收器（第一个参数）和成员（第二个参数）的槽。'
- en: '`color_dialog.options()`: This returns the options of the `QtWidgets.QColorDialog.ColorDialogOptions`
    type used for this color dialog.'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.options()`: 这返回用于此颜色对话框的 `QtWidgets.QColorDialog.ColorDialogOptions`
    类型的选项。'
- en: '`color_dialog.selectedColor()`: This returns the selected color of the `QtGui.QColor`
    type by clicking or the `Ok` button or by accepting in another manner.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.selectedColor()`: 通过点击或按下“确定”按钮或以其他方式接受，返回 `QtGui.QColor` 类型的所选颜色。'
- en: '`color_dialog.standardColor(int)`: This returns the standard color of the `QtGui.QColor`
    type at the index specified in the parameter.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.standardColor(int)`: 这返回在参数中指定的索引处的 `QtGui.QColor` 类型的标准颜色。'
- en: '`color_dialog.testOption(QtWidgets.QColorDialog.ColorDialogOption)`: This returns
    `True` if the color dialog option specified in the parameter is enabled; otherwise,
    it returns `False`.'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.testOption(QtWidgets.QColorDialog.ColorDialogOption)`: 如果参数中指定的颜色对话框选项被启用，则返回
    `True`；否则，返回 `False`。'
- en: events
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件
- en: 'These functions relate to the event:'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数与以下事件相关：
- en: '`color_dialog.changeEvent(QtCore.QEvent)`: This handles the state changes of
    the color dialog.'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '`color_dialog.changeEvent(QtCore.QEvent)`: 这处理颜色对话框的状态变化。'
- en: signals
  id: totrans-207
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信号
- en: 'The available signals of the `QColorDialog` class are as follows:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: '`QColorDialog` 类可用的信号如下：'
- en: '`color_dialog.currentColorChanged(QtGui.QColor)`: This signal is emitted when
    the current color of the color dialog changes, with the new color passed in the
    parameter.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color_dialog.currentColorChanged(QtGui.QColor)`: 当颜色对话框的当前颜色发生变化时，会发出此信号，新颜色通过参数传递。'
- en: '`color_dialog.colorSelected(QtGui.QColor)`: This signal is emitted when a color
    is selected in the color dialog, with the selected color passed in the parameter.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color_dialog.colorSelected(QtGui.QColor)`: 当在颜色对话框中选择颜色时，会发出此信号，所选颜色通过参数传递。'
- en: Files
  id: totrans-211
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件
- en: In this section, we will describe the dialog windows that provide the functionality
    to open or save files in the application. Additionally, we will cover reading
    and writing to files. Almost all GUI applications operate or have the ability
    to manipulate various files. In the Qt library, this file dialog window can realize
    the `QFileDialog` class.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将描述提供在应用程序中打开或保存文件功能的对话框窗口。此外，我们还将涵盖文件的读取和写入。几乎所有的GUI应用程序都可以操作或具有操作各种文件的能力。在Qt库中，此文件对话框窗口可以通过`QFileDialog`类实现。
- en: QFileDialog
  id: totrans-213
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QFileDialog
- en: 'This class creates a dialog window for basic file manipulation in the application,
    such as opening a file, saving a file with a specified name, or opening a directory
    containing files. The declaration syntax of this class in the application is as
    follows:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 此类创建一个对话框窗口，用于在应用程序中进行基本的文件操作，例如打开文件、以指定名称保存文件或打开包含文件的目录。此类在应用程序中的声明语法如下：
- en: '[PRE5]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`QFileDialog` inherits the `QDialog` class and enhances its functionality with
    the functions described in the following sections.'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`QFileDialog`类继承自`QDialog`类，并通过以下各节中描述的函数增强了其功能。'
- en: set
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置
- en: 'These functions set the parameters or properties for the file dialog:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数用于设置文件对话框的参数或属性：
- en: '`file_dialog.setAcceptMode(QtWidgets.QFileDialog.AcceptMode)`: This sets the
    accept mode of the dialog as specified in the parameter, which explains that the
    file dialog is for opening or saving files. The available modes are as follows:'
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setAcceptMode(QtWidgets.QFileDialog.AcceptMode)`: 这将对话框的接受模式设置为参数中指定的模式，这解释了文件对话框用于打开或保存文件。可用的模式如下：'
- en: '`QtWidgets.QFileDialog.AcceptOpen`—`0`: Dialog for opening files.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.AcceptOpen`—`0`: 打开文件的对话框。'
- en: '`QtWidgets.QFileDialog.AcceptSave`—`1`: Dialog for saving files.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.AcceptSave`—`1`: 保存文件的对话框。'
- en: '`file_dialog.setDefaultSuffix(str)`: This sets the default suffix, specified
    in the parameter, that will be added to the file; for example, the **`.txt`**
    or **`.py`** extensions.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setDefaultSuffix(str)`: 这将为文件设置默认后缀，该后缀由参数指定，例如**`.txt`**或**`.py`**扩展名。'
- en: '`file_dialog.setDirectory(str)`: This sets the current directory, specified
    in the parameter, for the file dialog.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setDirectory(str)`: 这将文件对话框的当前目录设置为参数中指定的目录。'
- en: '`file_dialog.setDirectory(QtCore.QDir)`: This sets the current directory, specified
    in the parameter, for the file dialog.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setDirectory(QtCore.QDir)`: 这将文件对话框的当前目录设置为参数中指定的目录。'
- en: '`file_dialog.setDirectoryUrl(QtCore.QUrl)`: This sets the URL of the current
    directory, specified in the parameter, for the file dialog.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setDirectoryUrl(QtCore.QUrl)`: 这将文件对话框的当前目录URL设置为参数中指定的URL。'
- en: '`file_dialog.setFileMode(QtWidgets.QFileDialog.FileMode)`: This sets the file
    mode, specified in the parameter, for the file dialog. It describes the number
    and types of files that can be selected. The available modes are as follows:'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setFileMode(QtWidgets.QFileDialog.FileMode)`: 这将文件对话框的文件模式设置为参数中指定的模式。它描述了可以选择的文件的数量和类型。可用的模式如下：'
- en: '`QtWidgets.QFileDialog.AnyFile`—`0`: Any filename.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.AnyFile`—`0`: 任何文件名。'
- en: '`QtWidgets.QFileDialog.ExistingFile`—`1`: A single filename if it exists.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.ExistingFile`—`1`: 如果存在，则单个文件名。'
- en: '`QtWidgets.QFileDialog.Directory`—`2`: A directory name.'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.Directory`—`2`: 目录名。'
- en: '`QtWidgets.QFileDialog.ExistingFiles`—`3`: One or more filenames if they exist.'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.ExistingFiles`—`3`: 如果存在，则一个或多个文件名。'
- en: '`file_dialog.setFilter(QtCore.QDir.Filters)`: This sets the filter, specified
    in the parameter, that will be used to define which kind of files are to be shown.'
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setFilter(QtCore.QDir.Filters)`: 这将用于定义要显示的文件类型的过滤器设置为参数中指定的过滤器。'
- en: '`file_dialog.setHistory([str])`: This sets the browsing history of the file
    dialog as a list of paths specified in the parameter.'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setHistory([str])`: 这将文件对话框的浏览历史设置为参数中指定的路径列表。'
- en: '`file_dialog.setIconProvider(QtWidgets.QFileIconProvider)`: This sets the icon
    provider, specified in the parameter, that will be used with the file dialog.'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setIconProvider(QtWidgets.QFileIconProvider)`: 这设置与文件对话框一起使用的图标提供者，该提供者由参数指定。'
- en: '`file_dialog.setItemDelegate(QtWidgets.QAbstractItemDelegate)`: This sets the
    item delegate, specified in the parameter, that will be used to render the items
    in the views of the file dialog.'
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setItemDelegate(QtWidgets.QAbstractItemDelegate)`: 这设置用于在文件对话框视图中的项目渲染的项代理，该代理由参数指定。'
- en: '`file_dialog.setLabelText(QtWidgets.QFileDialog.DialogLabel, str)`: This sets
    the text (the second parameter) that will be shown in the label (the first parameter)
    in the file dialog.'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setLabelText(QtWidgets.QFileDialog.DialogLabel, str)`: 这设置将显示在标签（第一个参数）中的文本（第二个参数）。'
- en: '`file_dialog.setMimeTypeFilters([str])`: This sets the filters, specified in
    the parameter, as a list of **Multipurpose Internet Mail Extensions** (**MIME**) types
    that will be used in the file dialog.'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setMimeTypeFilters([str])`: 这设置参数中指定的过滤器，作为文件对话框中将使用的**多用途互联网邮件扩展**（**MIME**）类型的列表。'
- en: '`file_dialog.setNameFilter(str)`: This sets the filter, specified in the parameter,
    as a file type that will be used in the file dialog.'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setNameFilter(str)`: 这设置参数中指定的过滤器，作为文件对话框中将使用的文件类型。'
- en: '`file_dialog.setNameFilters([str])`: This sets the filters, specified in the
    parameter, as a list of the file types that will be used in the file dialog.'
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setNameFilters([str])`: 这设置参数中指定的过滤器，作为文件对话框中将使用的文件类型的列表。'
- en: '`file_dialog.setOption(QtWidgets.QFileDialog.Option, bool)`: If the second
    parameter is `True`, then it sets the option (the first parameter) that will be
    used with the file dialog.'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setOption(QtWidgets.QFileDialog.Option, bool)`: 如果第二个参数是`True`，则设置将用于文件对话框的选项（第一个参数）。'
- en: '`file_dialog.setOptions(QtWidgets.QFileDialog.Options)`: This sets the options
    that will be used with the file dialog.'
  id: totrans-240
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setOptions(QtWidgets.QFileDialog.Options)`: 这设置将用于文件对话框的选项。'
- en: '`file_dialog.setProxyModel(QtCore.QAbstractProxyModel)`: This sets the model
    for the views to the proxy model specified in the parameter.'
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setProxyModel(QtCore.QAbstractProxyModel)`: 这设置视图的模型为参数中指定的代理模型。'
- en: '`file_dialog.setSidebarUrls([QtCore.QUrl])`: This sets the URLs, specified
    in the parameter, for the sidebar of the file dialog.'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setSidebarUrls([QtCore.QUrl])`: 这设置文件对话框侧边栏的URL，该URL由参数指定。'
- en: '`file_dialog.setSupportedSchemes([str])`: This sets the URL schemes that the
    file dialog will allow the user to navigate.'
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setSupportedSchemes([str])`: 这设置文件对话框允许用户导航的URL方案。'
- en: '`file_dialog.setViewMode(QtWidgets.QFileDialog.ViewMode)`: This sets the view
    mode, specified in the parameter, that will be used for displaying directories
    and files in the file dialog. The available modes are as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.setViewMode(QtWidgets.QFileDialog.ViewMode)`: 这设置用于在文件对话框中显示目录和文件的视图模式，该模式由参数指定。可用的模式如下：'
- en: '`QtWidgets.QFileDialog.Detail`—`0`: The icon, name, and details for each item
    in the directory.'
  id: totrans-245
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.Detail`—`0`: 目录中每个项目的图标、名称和详细信息。'
- en: '`QtWidgets.QFileDialog.List`—`1`: Only the icon and name for each item in the
    directory.'
  id: totrans-246
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.List`—`1`: 目录中每个项目的图标和名称。'
- en: functional
  id: totrans-247
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: functional
- en: 'These functions return the current values of the file dialog, inform you about
    changes to functionality, and more:'
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回文件对话框的当前值，通知您有关功能更改等：
- en: '`file_dialog.acceptMode()`: This returns the accept mode of the `QtWidgets.QFileDialog.AcceptMode`
    type for the file dialog.'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.acceptMode()`: 这返回文件对话框的`QtWidgets.QFileDialog.AcceptMode`类型的接受模式。'
- en: '`file_dialog.defaultSuffix()`: This returns the default suffix added as a filename
    extension, if no other suffix is specified.'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.defaultSuffix()`: 如果未指定其他后缀，则返回添加为文件名扩展名的默认后缀。'
- en: '`file_dialog.directory()`: This returns the directory of the `QtCore.QDir`
    type that is displayed with the file dialog.'
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.directory()`: 这返回与文件对话框一起显示的`QtCore.QDir`类型的目录。'
- en: '`file_dialog.directoryUrl()`: This returns the URL of the `QtCore.QUrl` type
    for the directory that is displayed with the file dialog.'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.directoryUrl()`: 这返回与文件对话框一起显示的目录的`QtCore.QUrl`类型的URL。'
- en: '`file_dialog.fileMode()`: This returns the file mode of the `QtWidgets.QFileDialog.FileMode`
    type that is used with the dialog.'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.fileMode()`: 这返回与对话框一起使用的`QtWidgets.QFileDialog.FileMode`类型的文件模式。'
- en: '**`file_dialog.filter()`**: This returns the filter of the `QtCore.QDir.Filters`
    type that is used when displaying the files in this dialog.'
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: '**`file_dialog.filter()`**: 这返回用于在此对话框中显示文件时使用的`QtCore.QDir.Filters`类型的过滤器。'
- en: '`file_dialog.getExistingDirectory(QtWidgets.QWidget, str, str, QtWidgets.QFileDialog.Options)`:
    This creates a modal file dialog with the parent (the first parameter), a caption
    (the second parameter), the working directory (the third parameter), and options
    (the fourth parameter). It returns the directory that was selected. The available
    options are as follows:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getExistingDirectory(QtWidgets.QWidget, str, str, QtWidgets.QFileDialog.Options)`:
    这将创建一个模态文件对话框，包含父窗口（第一个参数）、标题（第二个参数）、工作目录（第三个参数）和选项（第四个参数）。它返回所选的目录。可用的选项如下：'
- en: '`QtWidgets.QFileDialog.ShowDirsOnly`: File dialog shows only directories.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.ShowDirsOnly`: 文件对话框只显示目录。'
- en: '`QtWidgets.QFileDialog.DontUseNativeDialog`: File dialog as Qt standard.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.DontUseNativeDialog`: 文件对话框使用Qt标准对话框。'
- en: '`QtWidgets.QFileDialog.DontResolveSymlinks`: File dialog doesn''t resolve symlinks.'
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.DontResolveSymlinks`: 文件对话框不会解析符号链接。'
- en: '`QtWidgets.QFileDialog.DontConfirmOverwrite`: File dialog doesn''t ask for
    confirmation of an overwrite if an existing file is selected.'
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.DontConfirmOverwrite`: 如果选中了现有文件，文件对话框不会要求确认覆盖。'
- en: '`QtWidgets.QFileDialog.ReadOnly`: Modal is read-only'
  id: totrans-260
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.ReadOnly`: 模态对话框为只读。'
- en: '`QtWidgets.QFileDialog.HideNameFilterDetails`: File dialog hides the filename
    filter details.'
  id: totrans-261
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.HideNameFilterDetails`: 文件对话框隐藏文件名过滤器详情。'
- en: '`QtWidgets.QFileDialog.DontUseCustomDirectoryIcons`: File dialog uses the default
    directory icon.'
  id: totrans-262
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QtWidgets.QFileDialog.DontUseCustomDirectoryIcons`: 文件对话框使用默认目录图标。'
- en: '`file_dialog.getExistingDirectoryUrl(QtWidgets.QWidget, str, QtCore.QUrl, QtWidgets.QFileDialog.Options,
    [str])`: This creates a modal file dialog with the parent (the first parameter),
    a caption (the second parameter), the working local/remote directory (the third
    parameter), options (the fourth parameter), and the supported scheme (the fifth
    parameter) for the restriction of the URLs. It returns the directory of the `QtCore.QUrl`
    type that was selected.'
  id: totrans-263
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getExistingDirectoryUrl(QtWidgets.QWidget, str, QtCore.QUrl, QtWidgets.QFileDialog.Options,
    [str])`: 这将创建一个模态文件对话框，包含父窗口（第一个参数）、标题（第二个参数）、工作本地/远程目录（第三个参数）、选项（第四个参数）以及限制URL的受支持方案（第五个参数）。它返回所选的`QtCore.QUrl`类型的目录。'
- en: '`file_dialog.getOpenFileName(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    This creates a modal file dialog with the parent (the first parameter), a caption
    (the second parameter), the working directory (the third parameter), a filter
    (the fourth parameter) for these files, the selected filter (the fifth parameter)
    for these files, and options (the sixth parameter). It returns the file that was
    selected.'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getOpenFileName(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    这将创建一个模态文件对话框，包含父窗口（第一个参数）、标题（第二个参数）、工作目录（第三个参数）、文件过滤器（第四个参数）以及这些文件的选定过滤器（第五个参数）和选项（第六个参数）。它返回所选的文件。'
- en: '`file_dialog.getOpenFileNames(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    This creates a modal file dialog with the parent (the first parameter), a caption
    (the second parameter), the working directory (the third parameter), a filter
    (the fourth parameter) for these files, the selected filter (the fifth parameter)
    for these files, and options (the sixth parameter). It returns one or more files
    that were selected.'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getOpenFileNames(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    这将创建一个模态文件对话框，包含父窗口（第一个参数）、标题（第二个参数）、工作目录（第三个参数）、文件过滤器（第四个参数）以及这些文件的选定过滤器（第五个参数）和选项（第六个参数）。它返回一个或多个选定的文件。'
- en: '`file_dialog.getOpenFileUrl(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: This creates a modal file dialog with
    the parent (the first parameter), a caption (the second parameter), the working
    local/remote directory (the third parameter), a filter (the fourth parameter)
    for these files, the selected filter (the fifth parameter) for these files, options
    (the sixth parameter), and the supported scheme (the seventh parameter) for the
    restriction of the URLs. It returns the file that was selected.'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getOpenFileUrl(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: 这将创建一个模态文件对话框，包含父窗口（第一个参数）、标题（第二个参数）、工作本地/远程目录（第三个参数）、文件过滤器（第四个参数）以及这些文件的选定过滤器（第五个参数）、选项（第六个参数）以及限制URL的受支持方案（第七个参数）。它返回所选的文件。'
- en: '`file_dialog.getOpenFileUrls(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: This creates a modal file dialog with
    the parent (the first parameter), a caption (the second parameter), the working
    local/remote directory (the third parameter), a filter (the fourth parameter)
    for these files, the selected filter (the fifth parameter) for these files, options
    (the sixth parameter), and the supported scheme (the seventh parameter) for the
    restriction of the URLs. It returns one or more files that were selected.'
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getOpenFileUrls(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: 这创建一个模态文件对话框，具有父对象（第一个参数）、标题（第二个参数）、工作本地/远程目录（第三个参数）、用于这些文件的过滤器（第四个参数）、用于这些文件的选定过滤器（第五个参数）、选项（第六个参数）以及用于限制
    URL 的支持方案（第七个参数）。它返回一个或多个选定的文件。'
- en: '`file_dialog.getSaveFileName(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    This creates a modal file dialog with the parent (the first parameter), a caption
    (the second parameter), the working directory (the third parameter), a filter
    (the fourth parameter) for these files, the selected filter (the fifth parameter)
    for these files, and options (the sixth parameter). It returns a filename, and
    this filename should not already exist.'
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getSaveFileName(QtWidgets.QWidget, str, str, str, str, QtWidgets.QFileDialog.Options)`:
    这创建一个模态文件对话框，具有父对象（第一个参数）、标题（第二个参数）、工作目录（第三个参数）、用于这些文件的过滤器（第四个参数）、用于这些文件的选定过滤器（第五个参数）和选项（第六个参数）。它返回一个文件名，并且这个文件名不应已经存在。'
- en: '`file_dialog.getSaveFileUrl(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: This creates a modal file dialog with
    the parent (the first parameter), a caption (the second parameter), the working
    local/remote directory (the third parameter), a filter (the fourth parameter)
    for these files, the selected filter (the fifth parameter) for these files, options
    (the sixth parameter), and the supported scheme (the seventh parameter) for the
    restriction of the URLs. It returns a filename.'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.getSaveFileUrl(QtWidgets.QWidget, str, QtCore.QUrl, str, str,
    QtWidgets.QFileDialog.Options, [str])`: 这创建一个模态文件对话框，具有父对象（第一个参数）、标题（第二个参数）、工作本地/远程目录（第三个参数）、用于这些文件的过滤器（第四个参数）、用于这些文件的选定过滤器（第五个参数）、选项（第六个参数）以及用于限制
    URL 的支持方案（第七个参数）。它返回一个文件名。'
- en: '`file_dialog.history()`: This returns the browsing history of the file dialog
    as a list of paths.'
  id: totrans-270
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.history()`: 这返回文件对话框的浏览历史记录，作为一个路径列表。'
- en: '`file_dialog.iconProvider()`: This returns the icon provider of the `QtWidgets.QFileIconProvider`
    type for the file dialog.'
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.iconProvider()`: 这返回文件对话框的 `QtWidgets.QFileIconProvider` 类型的图标提供者。'
- en: '`file_dialog.itemDelegate()`: This returns the item delegate of the `QtWidgets.QAbstractItemDelegate`
    type that renders the items in the views of the file dialog.'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.itemDelegate()`: 这返回用于在文件对话框的视图中渲染项的 `QtWidgets.QAbstractItemDelegate`
    类型的项代理。'
- en: '`file_dialog.labelText(QtWidgets.QFileDialog.DialogLabel)`: This returns the
    text shown in the label, specified in the parameter, of the file dialog.'
  id: totrans-273
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.labelText(QtWidgets.QFileDialog.DialogLabel)`: 这返回文件对话框中指定参数的标签显示的文本。'
- en: '`file_dialog.mimeTypeFilters()`: This returns the MIME type filters of the
    file dialog.'
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.mimeTypeFilters()`: 这返回文件对话框的 MIME 类型过滤器。'
- en: '`file_dialog.nameFilters()`: This returns the file type filters of the file
    dialog.'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.nameFilters()`: 这返回文件对话框的文件类型过滤器。'
- en: '`file_dialog.open(QtCore.QObject, str)`: This connects a signal to a slot with
    a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-276
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.open(QtCore.QObject, str)`: 这将一个信号连接到一个槽，其中接收器（第一个参数）是一个成员（第二个参数）。'
- en: '`file_dialog.options()`: This returns the options of the `QtWidgets.QFileDialog.Options`
    type that are used for the file dialog.'
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.options()`: 这返回用于文件对话框的 `QtWidgets.QFileDialog.Options` 类型的选项。'
- en: '`file_dialog.proxyModel()`: This returns the proxy model of the `QtCore.QAbstractProxyModel`
    type that is used with the file dialog.'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.proxyModel()`: 这返回与文件对话框一起使用的 `QtCore.QAbstractProxyModel` 类型的代理模型。'
- en: '`file_dialog.restoreState(QtCore.QByteArray)`: This restores the layout, history,
    and current directory of the file dialog to the state specified in the parameter.'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.restoreState(QtCore.QByteArray)`: 这将文件对话框的布局、历史记录和当前目录恢复到参数中指定的状态。'
- en: '`file_dialog.saveState()`: This saves the layout, history, and current directory
    of the file dialog.'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.saveState()`: 这保存文件对话框的布局、历史记录和当前目录。'
- en: '`file_dialog.selectFile(str)`: This selects the filename specified in the parameter
    of the file dialog.'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectFile(str)`: 这将选择文件对话框参数中指定的文件名。'
- en: '`file_dialog.selectMimeTypeFilter(str)`: This selects the MIME-type filter
    specified in the parameter of the file dialog.'
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectMimeTypeFilter(str)`: 这将选择文件对话框参数中指定的MIME类型过滤器。'
- en: '`file_dialog.selectNameFilter(str)`: This selects the file type filter specified
    in the parameter of the file dialog.'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectNameFilter(str)`: 这将选择文件对话框参数中指定的文件类型过滤器。'
- en: '`file_dialog.selectUrl(QtCore.QUrl)`: This selects the URL specified in the
    parameter of the file dialog.'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectUrl(QtCore.QUrl)`: 这将选择文件对话框参数中指定的URL。'
- en: '`file_dialog.selectedFiles()`: This returns the selected files in the file
    dialog as a list of strings with absolute paths.'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectedFiles()`: 这将返回文件对话框中选定的文件，作为包含绝对路径的字符串列表。'
- en: '`file_dialog.selectedMimeTypeFilter()`: This returns the MIME type of the selected
    file in the file dialog.'
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectedMimeTypeFilter()`: 这将返回文件对话框中选定的文件的MIME类型。'
- en: '`file_dialog.selectedNameFilter()`: This returns the selected filter in the
    file dialog.'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectedNameFilter()`: 这将返回文件对话框中选定的过滤器。'
- en: '`file_dialog.selectedUrls()`: This returns the URLs of the selected files in
    the file dialog as a list of URLs.'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.selectedUrls()`: 这将返回文件对话框中选定的文件URL列表。'
- en: '`file_dialog.sidebarUrls()`: This returns a list of the current sidebar URLs.'
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.sidebarUrls()`: 这将返回当前侧边栏的URL列表。'
- en: '`file_dialog.supportedSchemes()`: This returns a list of the supported URL
    schemes.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.supportedSchemes()`: 这将返回支持的URL方案列表。'
- en: '`file_dialog.testOption(QtWidgets.QFileDialog.Option)`: This returns `True`
    if the option specified in the parameter is enabled for the file dialog; otherwise,
    it returns `False`.'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.testOption(QtWidgets.QFileDialog.Option)`: 如果参数中指定的选项已启用文件对话框，则返回`True`；否则，返回`False`。'
- en: '`file_dialog.viewMode()`: This returns a view mode of the **`QtWidgets.QFileDialog.ViewMode`**
    type that is used with the file dialog.'
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.viewMode()`: 这将返回与文件对话框一起使用的**`QtWidgets.QFileDialog.ViewMode`**类型的视图模式。'
- en: events
  id: totrans-293
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 事件
- en: 'This function is related to events:'
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数与事件相关：
- en: '`file_dialog.changeEvent(QtCore.QEvent)`: This handles the state changes of
    the file dialog.'
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.changeEvent(QtCore.QEvent)`: 这处理文件对话框的状态变化。'
- en: signals
  id: totrans-296
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信号
- en: 'The available signals of the `QFileDialog` class are as follows:'
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: '`QFileDialog`类的可用信号如下：'
- en: '`file_dialog.currentChanged(str)`: This signal is emitted when the current
    file changes for local operations in the file dialog. The new path of the file
    is passed in the parameter.'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.currentChanged(str)`: 当文件对话框中的当前文件在本地操作中更改时，会发出此信号。新文件路径作为参数传递。'
- en: '`file_dialog.currentUrlChanged(QtCore.QUrl)`: This signal is emitted when the
    current file changes in the file dialog. The new URL of the file is passed in
    the parameter.'
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.currentUrlChanged(QtCore.QUrl)`: 当文件对话框中的当前文件更改时，会发出此信号。新文件的URL作为参数传递。'
- en: '`file_dialog.directoryEntered(str)`: This signal is emitted when the user enters
    a directory for local operations in the file dialog, with the directory passed
    in the parameter.'
  id: totrans-300
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.directoryEntered(str)`: 当用户在文件对话框中进入目录进行本地操作时，会发出此信号，目录作为参数传递。'
- en: '`file_dialog.directoryUrlEntered(QtCore.QUrl)`: This signal is emitted when
    the user enters a directory in the file dialog, with the URL of the directory
    passed in the parameter.'
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.directoryUrlEntered(QtCore.QUrl)`: 当用户在文件对话框中进入目录时，会发出此信号，目录的URL作为参数传递。'
- en: '`file_dialog.fileSelected(str)`: This signal is emitted when the selection
    changes for local operations in the file dialog, and the dialog is accepted with
    the selected file passed in the parameter.'
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.fileSelected(str)`: 当文件对话框中的选择更改并且对话框被接受时，会发出此信号，选定的文件作为参数传递。'
- en: '`file_dialog.filesSelected([str])`: This signal is emitted when the selection
    changes for local operations in the file dialog and the dialog is accepted, with
    a list of the selected files passed in the parameter.'
  id: totrans-303
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.filesSelected([str])`: 当文件对话框中的选择更改并且对话框被接受时，会发出此信号，选定的文件列表作为参数传递。'
- en: '`file_dialog.filterSelected(str)`: This signal is emitted when the filter is
    selected in the file dialog. The selected filter is passed in the parameter.'
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.filterSelected(str)`: 当在文件对话框中选择过滤器时，会发出此信号。选定的过滤器作为参数传递。'
- en: '`file_dialog.urlSelected(QtCore.QUrl)`: This signal is emitted when the selection
    changes in the file dialog and the dialog is accepted, with the selected URL passed
    in the parameter.'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.urlSelected(QtCore.QUrl)`: 当文件对话框中的选择发生变化并且对话框被接受时，会发出此信号，所选URL作为参数传递。'
- en: '`file_dialog.urlsSelected(QtCore.QUrl)`: This signal is emitted when the selection
    changes in the file dialog and the dialog is accepted, with a list of the selected
    URLs passed in the parameter.'
  id: totrans-306
  prefs: []
  type: TYPE_NORMAL
  zh: '`file_dialog.urlsSelected(QtCore.QUrl)`: 当文件对话框中的选择发生变化并且对话框被接受时，会发出此信号，所选URL列表作为参数传递。'
- en: A file dialog example
  id: totrans-307
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文件对话框示例
- en: 'To implement a file dialog box in our application, we will use the Python standard
    library tools to open and read the selected files. Additionally, the text from
    the text field of the application will be saved to the file specified with the
    file dialog. To do this, we need to add the `files()` function to the `u_app.py`
    file using the following lines:'
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在我们的应用程序中实现文件对话框，我们将使用Python标准库工具打开和读取选定的文件。此外，应用程序文本字段的文本将被保存到文件对话框指定的文件中。为此，我们需要在`u_app.py`文件中使用以下行添加`files()`函数：
- en: 'Add a function called `files()` to the bottom of the `UApp` class:'
  id: totrans-309
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`UApp`类底部添加一个名为`files()`的函数：
- en: '[PRE6]'
  id: totrans-310
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: This function will use the **`getOpenFileNames()`** static method of the `QFileDialog`
    class to realize the file dialog window for opening available files.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数将使用`QFileDialog`类的`getOpenFileNames()`静态方法来实现打开可用文件的文件对话框。
- en: 'Now add the signal that will call the `files()` function to the bottom of the
    `__init__()` function of the `UApp` class:'
  id: totrans-312
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将调用`files()`函数的信号添加到`UApp`类的`__init__()`函数底部：
- en: '[PRE7]'
  id: totrans-313
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The top panel menu uses the **`triggered()`** signal to call the function that
    will operate with files. We can run the `u_app.py` file by selecting Open in the
    File option at the top of the application. The file dialog window will look similar
    to the following screenshot:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部面板菜单使用`triggered()`信号调用与文件操作相关的函数。我们可以通过在应用程序顶部的文件选项中选择“打开”来运行`u_app.py`文件。文件对话框窗口将类似于以下截图：
- en: '![](img/0d5a1680-c594-4f7e-96e5-4fa068016a24.png)'
  id: totrans-315
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0d5a1680-c594-4f7e-96e5-4fa068016a24.png)'
- en: Now we need to add Python's standard library instruments to open and read files
    that were returned with this file dialog.
  id: totrans-316
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们需要添加Python标准库工具来打开和读取此文件对话框返回的文件。
- en: 'To do this, add the following lines to the `files()` function:'
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现这一点，请将以下行添加到`files()`函数中：
- en: '[PRE8]'
  id: totrans-318
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The file dialog, when the Open button is clicked on, will return the selected
    file or files with their paths. The Python standard library has a built-in function
    called `open()`, which opens files for reading and writing. This `open()` function
    will open the file in the list of selected files for each loop, read this file,
    and append content to the text field of the application. The result will be as
    follows:'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击“打开”按钮时，文件对话框将返回带有路径的所选文件或文件。Python标准库有一个名为`open()`的内置函数，该函数用于打开文件进行读写。此`open()`函数将为所选文件列表中的每个循环打开文件，读取该文件，并将内容追加到应用程序的文本字段中。结果如下：
- en: '![](img/f58078e4-bf63-4ab8-a501-cfec2d75e615.png)'
  id: totrans-320
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f58078e4-bf63-4ab8-a501-cfec2d75e615.png)'
- en: 'Now add the following lines to the `files` function to implement the functionality
    to save a file with the file dialog:'
  id: totrans-321
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将以下行添加到`files`函数中，以实现使用文件对话框保存文件的功能：
- en: '[PRE9]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: When the Save option is selected, a similar file dialog will be displayed. We
    can choose the directory and filename and the content of the text field will be
    saved to this file. We can create folders called `saved_files/` inside `App/App_PySide2/`
    and `App/App_PyQt5/` to save files into.
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择“保存”选项时，将显示类似的文件对话框。我们可以选择目录和文件名，并将文本字段的文本保存到该文件中。我们可以在`App/App_PySide2/`和`App/App_PyQt5/`中的`saved_files/`文件夹内创建文件夹以保存文件。
- en: 'Add the `info_message()` function to the bottom of the `UApp` class to inform
    users that the file has been saved:'
  id: totrans-324
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`info_message()`函数添加到`UApp`类底部，以通知用户文件已保存：
- en: '[PRE10]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'This function creates the message box that will inform the user when the file
    is saved with a path to this file. The result of saving a file is as follows:'
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 此函数创建了一个消息框，当文件以路径保存时，将通知用户。保存文件的结果如下：
- en: '![](img/7f22b2d3-fdd3-4e0c-b709-48b229531b6a.png)'
  id: totrans-327
  prefs: []
  type: TYPE_IMG
  zh: '![](img/7f22b2d3-fdd3-4e0c-b709-48b229531b6a.png)'
- en: This message box inherits the style of the application with the possibility
    of customization.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 此消息框继承了应用程序的样式，并具有自定义的可能性。
- en: QPrinter
  id: totrans-329
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QPrinter
- en: Many applications allow users to print documents or content that has been created.
    The Qt library has a basic dialog window to print created content. The `QPrinter`
    class is also available, which provides customization and operations with the
    default system printer device, as well as other features, such as printer settings.
    To understand the features of this class, it is recommended that you look at the
    official Qt documentation. Here, we will describe and implement the `QPrintDialog`
    and `QPrintPreviewDialog` classes. Both of these classes are included in the `QtPrintSupport`
    module. To use these classes in the application, we need to add the following
    to the `u_app.py` files.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 许多应用程序允许用户打印创建的文档或内容。Qt库提供了一个基本的对话框来打印创建的内容。`QPrinter`类也可用，它提供了与默认系统打印机设备的自定义和操作，以及其他功能，如打印机设置。要了解此类的功能，建议您查看官方Qt文档。在此，我们将描述和实现`QPrintDialog`和`QPrintPreviewDialog`类。这两个类都包含在`QtPrintSupport`模块中。要在应用程序中使用这些类，我们需要将以下内容添加到`u_app.py`文件中。
- en: 'Add this `import` statement in the `u_app.py` file of `PyQt5`:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在`PyQt5`的`u_app.py`文件中添加此`import`语句：
- en: '[PRE11]'
  id: totrans-332
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Additionally, add this `import` statement to the `u_app.py` file of `PySide2`:'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，将以下`import`语句添加到`PySide2`的`u_app.py`文件中：
- en: '[PRE12]'
  id: totrans-334
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: QPrintDialog
  id: totrans-335
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QPrintDialog
- en: 'This class provides a dialog window for selecting and configuring options and
    printing content. We can change the printing document settings, such as the number
    of copies. The declaration syntax of this class in the application is as follows:'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 此类提供了一个用于选择和配置选项以及打印内容的对话框。我们可以更改打印文档的设置，例如副本数量。此类在应用程序中的声明语法如下：
- en: '[PRE13]'
  id: totrans-337
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The `QPrintDialog` class enhances the functionality with the functions described
    in the following sections.
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
  zh: 如下节所述，`QPrintDialog`类通过以下功能增强了功能。
- en: set
  id: totrans-339
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: set
- en: 'These functions set the parameters and properties of the print dialog:'
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数设置打印对话框的参数和属性：
- en: '`print_dialog.setOption(QtPrintSupport.QAbstractPrintDialog.PrintDialogOption,
    bool)`: If the second parameter is `True`, it sets the option (the first parameter)
    that will be enabled with this print dialog.'
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.setOption(QtPrintSupport.QAbstractPrintDialog.PrintDialogOption,
    bool)`: 如果第二个参数为`True`，则使用此打印对话框启用（第一个参数指定的）选项。'
- en: '`print_dialog.setOptions(QtPrintSupport.QAbstractPrintDialog.PrintDialogOptions)`:
    This sets the options, specified in the parameter, that will be enabled with this
    print dialog.'
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.setOptions(QtPrintSupport.QAbstractPrintDialog.PrintDialogOptions)`:
    此函数设置参数中指定的选项，这些选项将与此打印对话框一起启用。'
- en: functional
  id: totrans-343
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: functional
- en: 'These functions return the current values of the print dialog, inform you about
    changes to functionality, and more:'
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回打印对话框的当前值，通知您有关功能更改的信息，等等：
- en: '`print_dialog.open(QtCore.QObject, str)`: This connects a signal to a slot
    with a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-345
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.open(QtCore.QObject, str)`: 此函数将信号连接到槽，其中接收器（第一个参数）和成员（第二个参数）。'
- en: '`print_dialog.options()`: This returns the options of the `QtPrintSupport.QAbstractPrintDialog.PrintDialogOptions`
    type that is used for this print dialog.'
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.options()`: 此函数返回用于此打印对话框的`QtPrintSupport.QAbstractPrintDialog.PrintDialogOptions`类型的选项。'
- en: '`print_dialog.testOption(QtPrintSupport.QAbstractPrintDialog.PrintDialogOption)`:
    This returns `True` if the option specified in the parameter is enabled for this
    print dialog; otherwise it returns `False`.'
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.testOption(QtPrintSupport.QAbstractPrintDialog.PrintDialogOption)`:
    如果参数指定的选项为此打印对话框启用，则返回`True`；否则返回`False`。'
- en: signals
  id: totrans-348
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: signals
- en: 'The following signals are available with the `QPrintDialog` class:'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是与`QPrintDialog`类相关的信号：
- en: '`print_dialog.accepted(QtPrintSupport.QPrinter)`: This signal is emitted when
    the values set in the print dialog are accepted by the printer passed in the parameter.'
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_dialog.accepted(QtPrintSupport.QPrinter)`: 当传入参数的打印机接受打印对话框中设置的值时，会发出此信号。'
- en: QPrintPreviewDialog
  id: totrans-351
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: QPrintPreviewDialog
- en: 'This class creates a dialog window for previewing the content before printing.
    We can change the document settings, such as the number of copies. The declaration
    syntax of this class is as follows:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 此类创建了一个用于在打印前预览内容的对话框。我们可以更改文档设置，例如副本数量。此类的声明语法如下：
- en: '[PRE14]'
  id: totrans-353
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `QPrintPreviewDialog` class enhances functionality with the functions described
    in the following sections.
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 如下节所述，`QPrintPreviewDialog`类通过以下功能增强了功能。
- en: functional
  id: totrans-355
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: functional
- en: 'These functions return the current values of the print preview, inform you
    about changes to functionality, and more:'
  id: totrans-356
  prefs: []
  type: TYPE_NORMAL
  zh: 这些函数返回打印预览的当前值，通知您有关功能更改的信息，等等：
- en: '`print_preview.open(QtCore.QObject, str)`: This connects a signal to a slot
    with a receiver (the first parameter) and a member (the second parameter).'
  id: totrans-357
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_preview.open(QtCore.QObject, str)`: 这将一个信号连接到一个槽，其中接收器（第一个参数）和成员（第二个参数）。'
- en: '`print_preview.printer()`: This returns the current printer of the `QtPrintSupport.QPrinter`
    type that is used with this print preview dialog.'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_preview.printer()`: 这返回与打印预览对话框一起使用的当前 `QtPrintSupport.QPrinter` 类型的打印机。'
- en: signals
  id: totrans-359
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 信号
- en: 'This signal is available with the `QPrintPreviewDialog` class:'
  id: totrans-360
  prefs: []
  type: TYPE_NORMAL
  zh: 这个信号与 `QPrintPreviewDialog` 类一起可用：
- en: '`print_preview.paintRequested(QtPrintSupport.QPrinter)`: This signal is emitted
    when the preview dialog generates a set of preview pages, with the printer instance
    passed in the parameter.'
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: '`print_preview.paintRequested(QtPrintSupport.QPrinter)`: 当预览对话框生成一组预览页面时，会发出此信号，打印机实例通过参数传入。'
- en: A QPrinter example
  id: totrans-362
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一个 QPrinter 示例
- en: 'Let''s implement printer support in this application. First, add the selection
    options in the top panel of the application, such as `Print` and `Print Preview`.
    For this, we need to add new options to the `UWindow` class of the `u_window.py` file:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们在应用程序中实现打印机支持。首先，在应用程序顶部面板中添加选择选项，例如 `打印` 和 `打印预览`。为此，我们需要向 `u_window.py`
    文件的 `UWindow` 类添加新选项：
- en: 'Add the following options to the menu of the Files section in the top panel:'
  id: totrans-364
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下选项添加到顶部面板文件部分的菜单中：
- en: '[PRE15]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: These options of the `File` menu section will print the text or open the preview
    of the printing document. To use these printer dialog windows, we need to declare
    the printer with the `QPrinter` class. This will be used to print the documents
    with the system's printer, or in another way, such as printing to PDF files.
  id: totrans-366
  prefs: []
  type: TYPE_NORMAL
  zh: 文件菜单部分的这些选项将打印文本或打开打印文档的预览。要使用这些打印机对话框，我们需要使用 `QPrinter` 类声明打印机。这将用于使用系统打印机打印文档，或者以另一种方式，例如打印到
    PDF 文件。
- en: We need to add the following lines to the `u_app.py` file.
  id: totrans-367
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要向 `u_app.py` 文件中添加以下行。
- en: 'Add the `QPrinter` class to the bottom of the `__init__` function of the `UApp`
    class:'
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 将 `QPrinter` 类添加到 `UApp` 类的 `__init__` 函数底部：
- en: '[PRE16]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: This creates the instance of the `QPrinter` class in the application.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 这在应用程序中创建了 `QPrinter` 类的实例。
- en: 'Now add the print and print preview dialogs to the **`files`** function of
    the `UApp` class:'
  id: totrans-371
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将打印和打印预览对话框添加到 `UApp` 类的 `files` 函数中：
- en: '[PRE17]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'When the option of the File section is selected, the `triggered()` signal calls
    the `files()` function with the `action` parameter, which will be the text of
    the selected option. We can run the `u_app.py` file, and we should see the following
    result:'
  id: totrans-373
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择文件部分选项时，`triggered()` 信号会调用带有 `action` 参数的 `files()` 函数，该参数将是所选选项的文本。我们可以运行
    `u_app.py` 文件，并应该看到以下结果：
- en: '![](img/b1234c6d-181c-4919-af2e-19d6eff82ff1.png)'
  id: totrans-374
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b1234c6d-181c-4919-af2e-19d6eff82ff1.png)'
- en: Choosing the `Print Preview`and `Print` options will display the dialog windows
    for printing and previewing the text to print.
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
  zh: 选择 `打印预览` 和 `打印` 选项将显示打印和预览要打印文本的对话框。
- en: Summary
  id: totrans-376
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we explored the basic principles of implementing dialog windows
    in GUI applications. Not all the dialogs in Qt have been covered here. Dialog
    windows such as `QInputDialog`, `QProgressDialog` (a dialog with a progress bar),
    and `QWizard`, which creates a framework for wizards in the app, can all be used.
    For printing, there is `QPageSetupDialog`, which is used to configure page-related
    options. Additionally, printing features can be extended with classes that do
    not represent the dialog windows, but they are very useful, such as `QPrinterInfo`
    and `QPrintPreviewWidget`.
  id: totrans-377
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了在 GUI 应用程序中实现对话框的基本原则。这里并未涵盖 Qt 中所有的对话框。例如 `QInputDialog`、`QProgressDialog`（带有进度条的对话框）和
    `QWizard`（在应用程序中创建向导框架的对话框），都可以使用。对于打印，有 `QPageSetupDialog`，用于配置与页面相关的选项。此外，可以通过不表示对话框窗口的类扩展打印功能，这些类非常有用，例如
    `QPrinterInfo` 和 `QPrintPreviewWidget`。
- en: In the next chapter, we will cover layouts, that is, the mechanism for arranging
    the items in the application.
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将介绍布局，即安排应用程序中项目的方式。
