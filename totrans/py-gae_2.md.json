["```py\nimport webapp2\n\nfrom google.appengine.api import users\n\nclass MainHandler(webapp2.RequestHandler):\n    def get(self):\n        user = users.get_current_user()\n        if user is not None:\n            self.response.write('Hello Notes!')\n        else:\n        login_url = users.create_login_url(self.request.uri)\n        self.redirect(login_url)\napp = webapp2.WSGIApplication([\n    ('/', MainHandler)\n], debug=True)\n```", "```py\nlibraries:\n- name: webapp2\n  version: \"2.5.2\"\n- name: jinja2\n  version: latest\n```", "```py\n<!DOCTYPE html>\n<html>\n<head lang=\"en\">\n  <meta charset=\"UTF-8\">\n  <title>Notes</title>\n</head>\n<body>\n  <div class=\"container\">\n\n    <h1>Welcome to Notes!</h1>\n\n    <p>\n      Hello, <b>{{user}}</b> - <a href=\"{{logout_url}}\">Logout</a>\n    </p>\n\n  </div>\n</body>\n</html>\n```", "```py\nimport os\nimport jinja2\n\njinja_env = jinja2.Environment(\n    loader=jinja2.FileSystemLoader(os.path.dirname(__file__)))\n```", "```py\nclass MainHandler(webapp2.RequestHandler):\n    def get(self):\n        user = users.get_current_user()\n        if user is not None:\n            logout_url = users.create_logout_url(self.request.uri)\n            template_context = {\n                'user': user.nickname(),\n                'logout_url': logout_url,\n            }\n            template = jinja_env.get_template('main.html')\n               self.response.out.write(\n                template.render(template_context))\n        else:\n            login_url = users.create_login_url(self.request.uri)\n            self.redirect(login_url)\n```", "```py\n{% if note_title %}\n<p>Title: {{note_title}}</p>\n<p>Content: {{note_content}}</p>\n{% endif %}\n\n<h4>Add a new note</h4>\n<form action=\"\" method=\"post\">\n  <div class=\"form-group\">\n    <label for=\"title\">Title:</label>\n    <input type=\"text\" id=\"title\" name=\"title\" />\n  </div>\n  <div class=\"form-group\">\n      <label for=\"content\">Content:</label>\n      <textarea id=\"content\" name=\"content\"></textarea>\n  </div>\n  <div class=\"form-group\">\n      <button type=\"submit\">Save note</button>\n  </div>\n</form>\n```", "```py\nclass MainHandler(webapp2.RequestHandler):\n    def get(self):\n        user = users.get_current_user()\n        if user is not None:\n            logout_url = users.create_logout_url(self.request.uri)\n            template_context = {\n                'user': user.nickname(),\n                'logout_url': logout_url,\n            }\n            template = jinja_env.get_template('main.html')\n            self.response.out.write(\n                template.render(template_context))\n        else:\n            login_url = users.create_login_url(self.request.uri)\n            self.redirect(login_url)\n\n    def post(self):\n        user = users.get_current_user()\n        if user is None:\n            self.error(401)\n\n        logout_url = users.create_logout_url(self.request.uri)\n        template_context = {\n            'user': user.nickname(),\n            'logout_url': logout_url,\n            'note_title': self.request.get('title'),\n            'note_content': self.request.get('content'),\n        }\n        template = jinja_env.get_template('main.html')\n        self.response.out.write(\n            template.render(template_context))\n```", "```py\ndef _render_template(self, template_name, context=None):\n    if context is None:\n        context = {}\n    template = jinja_env.get_template(template_name)\n    return template.render(context)\n```", "```py\nself.response.out.write(\n    self._render_template('main.html', template_context))\n```", "```py\nfrom google.appengine.ext import ndb\n\nclass Note(ndb.Model):\n    title = ndb.StringProperty()\n    content = ndb.TextProperty(required=True)\n    date_created = ndb.DateTimeProperty(auto_now_add=True)\n```", "```py\nfrom models import Note\n```", "```py\ndef post(self):\n    user = users.get_current_user()\n    if user is None:\n        self.error(401)\n\n    note = Note(title=self.request.get('title'),\n                content=self.request.get('content'))\n    note.put()\n\n    logout_url = users.create_logout_url(self.request.uri)\n    template_context = {\n        'user': user.nickname(),\n        'logout_url': logout_url,\n    }\n    self.response.out.write(\n        self._render_template('main.html', template_context))\n```", "```py\nnote = Note(parent=ndb.Key(\"User\", user.nickname()),\n            title=self.request.get('title'),\n            content=self.request.get('content'))\nnote.put()\n```", "```py\nclass Note(ndb.Model):\n    title = ndb.StringProperty()\n    content = ndb.TextProperty(required=True)\n    date_created = ndb.DateTimeProperty(auto_now_add=True)\n\n    @classmethod\n    def owner_query(cls, parent_key):\n        return cls.query(ancestor=parent_key).order(\n            -cls.date_created)\n```", "```py\nuser = users.get_current_user()\nancestor_key = ndb.Key(\"User\", user.nickname())\nqry = Note.owner_query(ancestor_key)\nnotes = qry.fetch()\n```", "```py\ndef _render_template(self, template_name, context=None):\n    if context is None:\n        context = {}\n\n    user = users.get_current_user()\n    ancestor_key = ndb.Key(\"User\", user.nickname())\n    qry = Note.owner_query(ancestor_key)\n    context['notes'] = qry.fetch()\n\n    template = jinja_env.get_template(template_name)\n    return template.render(context)\n```", "```py\n{% for note in notes %}\n<div class=\"note\">\n  <h4>{{ note.title }}</h4>\n  <p class=\"note-content\">{{ note.content }}</p>\n</div>\n{% endfor %}\n```", "```py\nclass CheckListItem(ndb.Model):\n    title = ndb.StringProperty()\n    checked = ndb.BooleanProperty(default=False)\n```", "```py\nclass Note(ndb.Model):\n    title = ndb.StringProperty()\n    content = ndb.TextProperty(required=True)\n    date_created = ndb.DateTimeProperty(auto_now_add=True)\n    checklist_items = ndb.KeyProperty(\"CheckListItem\",\n                                      repeated=True)\n\n    @classmethod\n    def owner_query(cls, parent_key):\n        return cls.query(ancestor=parent_key).order(\n            -cls.date_created)\n```", "```py\n  <form action=\"\" method=\"post\">\n    <div class=\"form-group\">\n      <label for=\"title\">Title:</label>\n      <input type=\"text\" id=\"title\" name=\"title\"/>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"content\">Content:</label>\n        <textarea id=\"content\" name=\"content\"></textarea>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"checklist_items\">Checklist items:</label>\n        <input type=\"text\" id=\"checklist_items\" name=\"checklist_items\" placeholder=\"comma,separated,values\"/>\n    </div>\n    <div class=\"form-group\">\n        <button type=\"submit\">Save note</button>\n    </div>\n  </form>\n```", "```py\nnote = Note(parent=ndb.Key(\"User\", user.nickname()),\n            title=self.request.get('title'),\n            content=self.request.get('content'))\nnote.put()\n\nitem_titles = self.request.get('checklist_items').split(',')\nfor item_title in item_titles:\n    item = CheckListItem(parent=note.key, title=item_title)\n    item.put()\n    note.checklist_items.append(item.key)\n\nnote.put()\n```", "```py\n@ndb.transactional\ndef _create_note(self, user):\n    note = Note(parent=ndb.Key(\"User\", user.nickname()),\n                title=self.request.get('title'),\n                content=self.request.get('content'))\n    note.put()\n\n    item_titles = self.request.get('checklist_items').split(',')\n    for item_title in item_titles:\n        item = CheckListItem(parent=note.key, title=item_title)\n        item.put()\n        note.checklist_items.append(item.key)\n\n    note.put()\n```", "```py\ndef post(self):\n    user = users.get_current_user()\n    if user is None:\n        self.error(401)\n\n    self._create_note(user)\n\n    logout_url = users.create_logout_url(self.request.uri)\n    template_context = {\n        'user': user.nickname(),\n        'logout_url': logout_url,\n    }\n    self.response.out.write(\n        self._render_template('main.html', template_context))\n```", "```py\n{% for note in notes %}\n<div class=\"note\">\n  <h4>{{ note.title }}</h4>\n  <p class=\"note-content\">{{ note.content }}</p>\n  {% if note.checklist_items %}\n  <ul>\n    {% for item in note.checklist_items %}\n    <li class=\"{%if item.get().checked%}checked{%endif%}\">{{item.get().title}}</li>\n    {% endfor %}\n  </ul>\n  {% endif %}\n</div>\n{% endfor %}\n```", "```py\nhandlers:\n- url: /static\n  static_dir: static\n\n- url: .*\n  script: main.app\n```", "```py\nmkdir -p static/css\n\n```", "```py\nbody {\n    font-family: \"helvetica\", sans-serif;\n    background: #e8e8e8;\n    color: rgba(39,65,90,.9);\n    text-align: center;\n}\n\ndiv.container {\n    width: 600px;\n    display: inline-block;\n}\n```", "```py\nform {\n    background: white;\n    padding-bottom: 0.5em;\n    margin-bottom: 30px;\n}\nh4,legend {\n    margin-bottom: 10px;\n    font-size: 21px;\n    font-weight: 400;\n}\n```", "```py\n   div.form-group {\n    margin-bottom: 1em;\n}\n\nlabel {\n    display: inline-block;\n    width: 120px;\n    text-align: right;\n    padding-right: 15px;\n}\n\ninput, textarea {\n    width: 250px;\n    height: 35px;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n    border: 1px solid #999;\n    font-size: 14px;\n    border-radius: 4px;\n    padding: 6px;\n}\n\ntextarea {\n    vertical-align: top;\n    height: 5em;\n    resize: vertical;\n}\n```", "```py\ndiv.note {\n    background: white;\n    vertical-align: baseline;\n    display: block;\n    margin: 0 auto 30px auto;\n}\n\nlegend, div.note > h4 {\n    padding: 18px 0 15px;\n    margin: 0 0 10px;\n    background: #00a1ff;\n    color: white;\n}\n```", "```py\ndiv.note > ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    border-top: 2px solid #e7f2f0;\n}\n\ndiv.note > ul > li {\n    font-size: 21px;\n    padding: 18px 0 18px 18px;\n    border-bottom: 2px solid #e7f2f0;\n    text-align: left;\n}\ndiv.note-content {\n    text-align: left;\n    padding: 0.5em;\n}\n\n.checked {\n    text-decoration: line-through;\n}\n```", "```py\n<link rel=\"stylesheet\" type=\"text/css\" href=\"static/css/notes.css\">\n```"]