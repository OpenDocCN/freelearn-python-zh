["```py\n     chetans-MacBookPro:ch07 Chetan$ pip install virtualenv \n\n            chetans-MacBookPro:ch07 Chetan$ virtualenv user \n            New python executable in user/bin/python2.7 \n            Also creating executable in user/bin/python \n            Installing setuptools, pip, wheel...done. \n\n    ```", "```py\n     chetans-MacBookPro:ch07 Chetan$ source user/bin/activate \n             (user)chetans-MacBookPro:ch07 Chetan$ \n\n    ```", "```py\n     (user)chetans-MacBookPro:ch07 Chetan$ pip install flask \n            Collecting flask \n              Using cached Flask-0.11.1-py2.py3-none-any.whl \n            Collecting click>=2.0 (from flask) \n              Using cached click-6.6.tar.gz \n            Collecting its dangerous>=0.21 (from flask) \n            Collecting Werkzeug>=0.7 (from flask) \n              Using cached Werkzeug-0.11.10-py2.py3-none-any.whl \n            Collecting Jinja2>=2.4 (from flask) \n              Using cached Jinja2-2.8-py2.py3-none-any.whl \n            Collecting MarkupSafe (from Jinja2>=2.4->flask) \n            Building wheels for collected packages: click \n              Running setup.py bdist_wheel for click \n              Stored in directory: /Users/chetan/Library/ \n              Caches/pip/wheels/b0/6d/8c/ \n              cf5ca1146e48bc7914748bfb1dbf3a40a440b8b4f4f0d952dd \n            Successfully built click \n            Installing collected packages: click, itsdangerous,  \n              Werkzeug, MarkupSafe, Jinja2, flask \n            Successfully installed Jinja2-2.8 MarkupSafe-0.23  \n              Werkzeug-0.11.10 click-6.6 flask-0.11.1  \n              itsdangerous-0.24 \n\n    ```", "```py\n            from flask import Flask \n            app = Flask(__name__) \n\n            @app.route('/') \n\n            def index(): \n                return \"Hello, Python!\" \n\n            if __name__ == '__main__': \n                app.run(debug=True) \n\n    ```", "```py\n            (user)chetans-MacBookPro:ch07 Chetan$ python app.py  \n             * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit) \n             * Restarting with stat \n             * Debugger is active! \n             * Debugger pin code: 272-029-183 \n\n    ```", "```py\n            from flask import Flask, jsonify \n            app = Flask(__name__) \n\n            users = [ \n                { \n                    'id': 1, \n                    'username': u'cjgiridhar', \n                    'email': u'abc@xyz.com', \n                    'active': True \n                }, \n                { \n                    'id': 2, \n                    'username': u'python', \n                    'email': u'py@py.org', \n                    'active': False \n                } \n            ] \n\n            @app.route('/v1/users/', methods=['GET']) \n            def get_users(): \n                return jsonify({'users': users}) \n\n            if __name__ == '__main__': \n                app.run(debug=True) \n\n    ```", "```py\n            @app.errorhandler(404) \n            def not_found(error): \n                return make_response(jsonify({'error': 'Not found'}), 404) \n\n            @app.route('/v1/users/<int:id>/', methods=['GET']) \n            def get_user(id): \n                for user in users: \n                    if user.get(\"id\") == id: \n                        return jsonify({'users': user}) \n                abort(404) \n\n    ```", "```py\n            @app.route('/v1/users/', methods=['POST']) \n            def create_user(): \n                if not request.json or not 'email' in request.json: \n                    abort(404) \n                user_id = users[-1].get(\"id\") + 1 \n                username = request.json.get('username') \n                email = request.json.get('email') \n                status = False \n                user = {\"id\": user_id, \"email\": email, \n                        \"username\": username, \"active\": status} \n                users.append(user) \n                return jsonify({'user':user}), 201 \n\n    ```", "```py\n            @app.route('/v1/users/<int:id>/', methods=['PUT']) \n            def update_user(id): \n                user = [user for user in users if user['id'] == id] \n                user[0]['username'] = request.json.get( \n                        'username', user[0]['username']) \n                user[0]['email'] = request.json.get( \n            'email', user[0]['email']) \n                user[0]['active'] = request.json.get( \n            'active', user[0]['active']) \n                return jsonify({'users': user[0]}) \n\n    ```", "```py\n            @app.route('/v1/users/<int:id>/', methods=['DELETE']) \n            def delete_user(id): \n                user = [user for user in users if user['id'] == id] \n                users.remove(user[0]) \n                return jsonify({}), 204 \n\n    ```", "```py\n     (user)chetans-MacBookPro:ch07 Chetan$ pip install twython \n            Collecting twython \n              Downloading twython-3.4.0.tar.gz \n            Collecting requests>=2.1.0 (from twython) \n              Downloading requests-2.11.1-py2.py3-none-any.whl (514kB) \n                100% |████████████████████████████████| 516kB 495kB/s  \n            Collecting requests-oauthlib>=0.4.0 (from twython) \n              Downloading requests_oauthlib-0.6.2-py2.py3-none-any.whl \n            Collecting oauthlib>=0.6.2 (from requests-oauthlib>=0.4.0-\n            >twython) \n              Downloading oauthlib-1.1.2.tar.gz (111kB) \n                100% |████████████████████████████████| 114kB 80kB/s  \n            Building wheels for collected packages: twython, oauthlib \n              Running setup.py bdist_wheel for twython \n              Stored in directory: /Users/chetan/Library/Caches/pip/ \n              wheels/48/e9/f5/a4c968725948c73f71df51a3c6 \n              759425358c1eda2dcf2031f4 \n              Running setup.py bdist_wheel for oauthlib \n              Stored in directory: /Users/chetan/Library/Caches/pip/ \n              wheels/e6/be/43/e4a2ca8cb9c78fbd9b5b14b9 \n              6cb7a5cc43f36bc11af5dfac5b \n            Successfully built twython oauthlib \n            Installing collected packages: requests, oauthlib,  \n                                   requests-oauthlib, twython \n            Successfully installed oauthlib-1.1.2  \n              requests-2.11.1 requests-oauthlib-0.6.2 twython-3.4.0 \n             (user)chetans-MacBookPro:ch07 Chetan$ \n\n    ```", "```py\n            from twython import Twython \n\n            APP_KEY = '' \n            APP_SECRET = '' \n            OAUTH_TOKEN ='' \n            OAUTH_TOKEN_SECRET = '' \n            twitter = Twython(APP_KEY, APP_SECRET, \n                              OAUTH_TOKEN, OAUTH_TOKEN_SECRET) \n\n            tweet = twitter.get_home_timeline()[1] \n            print \"Tweet text: \", tweet[\"text\"] \n            print \"Tweet created at: \", tweet[\"created_at\"] \n            print \"Tweeted by: \",  \n            tweet[\"entities\"][\"user_mentions\"][0][\"name\"] \n            print \"Re Tweeted?: \", tweet[\"retweet_count\"] \n\n    ```", "```py\n            from twython import Twython \n\n            APP_KEY = '' \n            APP_SECRET = '' \n            OAUTH_TOKEN ='' \n            OAUTH_TOKEN_SECRET = '' \n            twitter = Twython(APP_KEY, APP_SECRET, \n                              OAUTH_TOKEN, OAUTH_TOKEN_SECRET) \n            twitter.update_status(status='Python import antigravity\n            https://xkcd.com/353/') \n\n    ```", "```py\n     (user)chetans-MacBookPro:ch07 Chetan$ pip install pytz \n            Collecting pytz \n              Using cached pytz-2016.6.1-py2.py3-none-any.whl \n            Installing collected packages: pytz \n            Successfully installed pytz-2016.6.1 \n\n    ```", "```py\n            scheduled_tweets.py \n\n            from twython import Twython \n\n            APP_KEY = '' \n            APP_SECRET = '' \n            OAUTH_TOKEN ='' \n            OAUTH_TOKEN_SECRET = '' \n            twitter = Twython(APP_KEY, APP_SECRET, \n                      OAUTH_TOKEN, OAUTH_TOKEN_SECRET) \n\n            from datetime import datetime \n            import pytz, time \n            from pytz import timezone \n            import tweet_config as config \n\n            while True: \n\n                for msg in config.scheduled_messages: \n                    print msg[\"timezone\"] \n                    tz = timezone(msg[\"timezone\"]) \n                    utc = pytz.utc \n                    utc_dt = datetime.utcnow().replace(tzinfo=utc) \n                    au_dt = utc_dt.astimezone(tz) \n                    sday = au_dt.strftime('%Y-%m-%d') \n                    stime = au_dt.strftime('%H:%M') \n                    print \"Current Day:Time\", sday, stime \n\n                    if sday == msg[\"day\"]: \n                        if stime == msg[\"time\"]: \n                            print \"Time\", stime \n                            print \"Content\", msg[\"content\"] \n                            twitter.update_status(status='%s' %\n                            msg[\"content\"] ) \n\n                print \"Running.. Will try in another min\" \n                time.sleep(60) \n                tweet_config.py\n            offers_sydney = { \n                \"content\":\"Weekend Offers, avail 30% discount today!\", \n                \"day\":\"2016-08-27\", \n                \"time\":\"13:25\", \n                \"timezone\":\"Australia/Sydney\" \n            } \n\n            post_newyork = { \n                \"content\":\"Introducing sun glasses at your favorite stores \n                in NY!\", \n                \"day\":\"2016-08-27\", \n                \"time\":\"12:41\", \n                \"timezone\":\"America/New_York\" \n            } \n\n            scheduled_messages = [offers_sydney, post_newyork] \n\n    ```", "```py\n (user)chetans-MacBookPro:ch07 Chetan$ pip install Django==1.10 \n        Collecting Django==1.10 \n          Downloading Django-1.10-py2.py3-none-any.whl (6.8MB) \n            100% |████████████████████████████████| 6.8MB 71kB/s  \n        Installing collected packages: Django \n        Successfully installed Django-1.10 \n\n         (user)chetans-MacBookPro:ch07 Chetan$ pip install django-rest-hooks \n        Collecting django-rest-hooks \n          Downloading django-rest-hooks-1.3.1.tar.gz \n        Requirement already satisfied (use --upgrade to upgrade): Django>=1.4 in ./user/lib/python2.7/site-packages (from django-rest-hooks) \n        Requirement already satisfied (use --upgrade to upgrade): requests in ./user/lib/python2.7/site-packages (from django-rest-hooks) \n        Building wheels for collected packages: django-rest-hooks \n          Running setup.py bdist_wheel for django-rest-hooks \n          Stored in directory: /Users/chetan/Library/Caches/pip/wheels/96/93/12/3ec10693ee2b394a7d8594e8939f7506d7231fab69c8e69550 \n        Successfully built django-rest-hooks \n        Installing collected packages: django-rest-hooks \n        Successfully installed django-rest-hooks-1.3.1 \n\n```", "```py\n     python manage.py startproject bookstore \n               cd bookstore \n               python manage.py startapp book \n\n    ```", "```py\n     (user)chetans-MacBookPro:bookstore Chetan$ python manage.py\n            migrate \n            Operations to perform: \n              Apply all migrations: admin, contenttypes, rest_hooks, auth,\n              sessions \n            Running migrations: \n              Rendering model states... DONE \n              Applying contenttypes.0001_initial... OK \n              Applying auth.0001_initial... OK \n              Applying admin.0001_initial... OK \n              Applying admin.0002_logentry_remove_auto_add... OK \n              Applying contenttypes.0002_remove_content_type_name... OK \n              Applying auth.0002_alter_permission_name_max_length... OK \n              Applying auth.0003_alter_user_email_max_length... OK \n              Applying auth.0004_alter_user_username_opts... OK \n              Applying auth.0005_alter_user_last_login_null... OK \n              Applying auth.0006_require_contenttypes_0002... OK \n              Applying auth.0007_alter_validators_add_error_messages... OK \n              Applying rest_hooks.0001_initial... OK \n              Applying sessions.0001_initial... OK \n\n    ```", "```py\n     >>> from django.contrib.auth.models import User \n            >>> from rest_hooks.models import Hook \n            >>> usr=User.objects.create(username='chetan') \n            >>> hook = Hook(user=usr, event='user.signup',\n            target='http://localhost:8000/hook/') \n            >>> hook.save() \n            >>> hook \n            <Hook: user.signup => http://localhost:8000/hook/> \n\n    ```", "```py\n            from django.conf.urls import url \n            from . import views \n            urlpatterns = [ \n                url(r'event/$', views.event), \n                url(r'hook/$', views.webhook),] \n\n    ```", "```py\n            from django.shortcuts import render\n            from django.views.decorators.csrf import csrf_exempt \n            from rest_hooks.signals import raw_hook_event \n            from django.contrib.auth.models import User \n            import datetime \n            from django.http.response import HttpResponse \n            # Create your views here. \n\n            @csrf_exempt \n            def webhook(request): \n                print request.body \n                return HttpResponse() \n\n            def event(request): \n                user = User.objects.get(username='chetan') \n                raw_hook_event.send( \n                    sender=None, \n                    event_name='user.signup', \n                    payload={ \n                        'username': user.username, \n                        'email': user.email, \n                        'when': datetime.datetime.now().isoformat() \n                    }, \n                    user=user # required: used to filter Hooks \n                ) \n                return HttpResponse() \n\n    ```", "```py\n            from django.conf.urls import url, include \n            from django.contrib import admin \n\n            urlpatterns = [ \n                url(r'^admin/', admin.site.urls), \n                url(r'^', include('book.urls')) \n            ] \n\n    ```", "```py\n     (user)chetans-MacBookPro:bookstore Chetan$ python manage.py \n            runserver \n            Performing system checks... \n\n            System check identified no issues (0 silenced). \n            August 27, 2016 - 11:14:52 \n            Django version 1.9, using settings 'bookstore.settings' \n            Starting development server at http://127.0.0.1:8000/ \n            Quit the server with CONTROL-C. \n\n    ```", "```py\n            [27/Aug/2016 10:53:29] \"GET /event/ HTTP/1.1\" 200 0 \n\n            {\"hook\": {\"target\": \"http://localhost:8000/hook/\", \"id\": 1,\n            \"event\": \"user.signup\"}, \"data\": {\"username\": \"chetan\", \"when\": \n            \"2016-08-27T10:53:29.301317\", \"email\": \"\"}} \n\n             [27/Aug/2016 10:53:29] \"POST /hook/ HTTP/1.1\" 200 0 \n\n    ```", "```py\n     >>> from django.contrib.auth.models import User \n            >>> from rest_hooks.models import Hook \n            >>> usr = User.objects.get(username='chetan') \n            >>> usr.email='chetan@email.io' \n            >>> usr.save() \n\n    ```", "```py\n     >>> hook = Hook(user=usr, event='user.signup', \n            target=\n            'https://hooks.zapier.com/hooks/catch/<Id>/<Webhook_Id>/') \n            >>> hook.save() \n            >>> hook \n            <Hook: user.signup => \n            https://hooks.zapier.com/hooks/catch/<Id>/<Webhook_Id>/> \n\n    ```"]