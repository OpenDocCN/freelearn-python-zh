- en: 'Chapter 7: Creating a Real-Time Blog Using Only Django'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章：仅使用Django创建实时博客
- en: In [*Chapter 6*](B18321_06_ePub.xhtml#_idTextAnchor139), *Creating SPAs on the
    Backends*, we learned essential features for setting up an SPA using HTML over
    WebSockets, such as changing pages, components, and sessions. We even went a step
    further by creating a server-side rendering system for each page so that search
    engines can index all content – a feature that didn’t require much effort as we
    are inside Django.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第6章*](B18321_06_ePub.xhtml#_idTextAnchor139)，“在后端创建SPAs”中，我们学习了使用HTML通过WebSockets设置SPA的基本特性，例如更改页面、组件和会话。我们甚至更进一步，为每个页面创建了一个服务器端渲染系统，以便搜索引擎可以索引所有内容——这个特性在我们使用Django时不需要太多努力。
- en: 'We now have the skills and maturity to make applications with all the features
    that SPA development entails. Now is the time! We will unify all the knowledge
    acquired in the creation of a perfectly prepared blog. Undoubtedly, this is an
    excellent exercise regardless of the language or framework that we want to assimilate;
    it encompasses all the basic tasks of any web development: querying, filtering,
    and adding to a database (search engine and comments), generating HTML from results
    (a list of articles and an individual page), use of views (SSR), routing (static
    pages), processing and validating forms (incorporating a new comment), and finally,
    pagination.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了制作包含SPA开发所需所有特性的应用程序的技能和成熟度。现在是时候了！我们将统一在创建一个完美准备的博客中获得的全部知识。毫无疑问，无论我们想要吸收的语言或框架如何，这都是一个极好的练习；它涵盖了任何网络开发的基本任务：查询、过滤和添加到数据库（搜索引擎和评论）、从结果生成HTML（文章列表和单个页面）、使用视图（SSR）、路由（静态页面）、处理和验证表单（添加新评论），最后，分页。
- en: This is an exam to prove to the world, and to yourself, that you have the basic
    knowledge in the subject you are learning. It can even be a good technical test.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个证明给世界和你自己看，你对该学科有基本知识的考试。甚至可以是一个好的技术测试。
- en: 'During the creation of the blog, we will be doing the following:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建博客的过程中，我们将执行以下操作：
- en: Creating models for the database
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为数据库创建模型
- en: Generating fake articles and comments
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成假文章和评论
- en: Listing of articles
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文章列表
- en: Navigating between articles with pagination
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用分页在文章之间导航
- en: Adding an article search engine
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加文章搜索引擎
- en: Creating a static page
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建静态页面
- en: Moving between pages and generating a browser
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在页面之间移动并生成浏览器
- en: Implementing an individual page per article
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为每篇文章实现一个单独的页面
- en: Adding a list of comments
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加评论列表
- en: Adding new comments
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加新评论
- en: Offering an **Really Simple Syndication** (**RSS**) feed
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供一个**非常简单的聚合**（**RSS**）源
- en: During the chapter, we will work in small milestones, following an order that
    allows us to incorporate each element organically, without jumping from one feature
    to another until it is finished. You can find the code for each of the features
    (in the preceding list) that we will be implementing separately.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将以小里程碑的形式进行工作，遵循一个允许我们有机地融入每个元素的顺序，避免从一个特性跳到另一个特性直到完成。你可以找到我们将要单独实现的每个特性的代码（在先前的列表中）。
- en: In order not to extend the example too much, we will start with a code base
    that we have used in previous chapters.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 为了不使示例过于复杂，我们将从一个我们在前几章中使用的代码库开始。
- en: Technical requirements
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'All the code of the different sections can be found at the following link:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 所有不同部分的代码都可以在以下链接中找到：
- en: '[https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-7](https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-7)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-7](https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-7)'
- en: 'As in other examples, I will start from the template that we built in [*Chapter
    4*](B18321_04_ePub.xhtml#_idTextAnchor090), *Working with the Database*:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 就像其他示例一样，我将从我们在[*第4章*](B18321_04_ePub.xhtml#_idTextAnchor090)，“使用数据库工作”中构建的模板开始：
- en: '[https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-4/initial-template](https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-4/initial-template)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-4/initial-template](https://github.com/PacktPublishing/Building-SPAs-with-Django-and-HTML-Over-the-Wire/tree/main/chapter-4/initial-template)'
- en: If you find some small differences, it is because I have made some minor adjustments.
    For example, I have named the project `blog`, the app `website`, and changed the
    path to `http://blog.localhost`, although, as always, you are free to name each
    element freely.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现一些小的差异，那是因为我进行了一些小的调整。例如，我已将项目命名为`blog`，应用命名为`website`，并将路径更改为`http://blog.localhost`，尽管如此，你仍然可以自由地为每个元素命名。
- en: Creating models for the database
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为数据库创建模型
- en: 'We will start by building two tables in the database: `Post`, which will contain
    the articles, and `Comment`, so that readers can leave their opinions next to
    the articles.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在数据库中建立两个表：`Post`，它将包含文章，以及`Comment`，以便读者可以在文章旁边留下他们的意见。
- en: 'In `app/website/models.py`, add the following database structure:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app/website/models.py`中添加以下数据库结构：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '[PRE13]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '[PRE19]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '[PRE24]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '[PRE28]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '[PRE32]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let’s look at the properties of `Post`:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看`Post`的属性：
- en: '`slug`: We will use the title of the article to differentiate the routes. For
    example, if it is titled `Penguins have just conquered the world`, its final path
    will be `http://blog.localhost/penguins-have-just-conquered-the-world`. With this
    property, we get the title ready to be used for different purposes, such as feeding
    other properties or searching for the ID of an article.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`slug`：我们将使用文章的标题来区分路由。例如，如果标题为`Penguins have just conquered the world`，其最终路径将是`http://blog.localhost/penguins-have-just-conquered-the-world`。利用这个属性，我们准备好标题用于不同的目的，例如填充其他属性或搜索文章的ID。'
- en: Slug
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Slug
- en: Slug is a format used in URLs to make them more readable, where spaces are replaced
    by single dashes and text is converted to lowercase. In areas such as SEO, it
    is used to explain the content of the page.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Slug是一种用于URL的格式，用于使URL更易读，其中空格被单个破折号替换，文本被转换为小写。在SEO等区域，它用于解释页面内容。
- en: '`summary`: When we list the articles, we will show a small portion of the original
    article. With this property, we limit the portion of the article shown to 100
    characters, plus we add some nice dots at the end of the sentence. It’s not perfect,
    as it counts spaces and doesn’t check the initial length, but it’s certainly sufficient
    for the purpose.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`summary`：当我们列出文章时，我们将显示原始文章的一小部分。利用这个属性，我们限制显示文章的部分为100个字符，并在句尾添加一些漂亮的点。它并不完美，因为它计算空格，并且不检查初始长度，但肯定足以满足目的。'
- en: '`get_absolute_url`: Through the paths defined in `urls.py`, we will build the
    hyperlinks for each article. Why? We will move dynamically. They are for the RSS
    feed, for example, or a future site map.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_absolute_url`：通过在`urls.py`中定义的路径，我们将为每篇文章构建超链接。为什么？我们将动态移动。例如，它们用于RSS源，或未来的网站地图。'
- en: 'The next step, as we have done in each activity, is to enter the Django container
    terminal and execute the following:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步，就像我们在每个活动中所做的那样，是进入Django容器终端并执行以下操作：
- en: '[PRE34]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: The database is ready. However, without data, it is not practical. As on other
    occasions, we will create fake content that simulates the final appearance of
    the blog.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库已就绪。然而，没有数据，它并不实用。像其他时候一样，我们将创建模拟博客最终外观的假内容。
- en: Generating fake articles and comments
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 生成假文章和评论
- en: After defining the database from the models, we are going to generate random
    data that we will use to work more comfortably.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在从模型定义数据库之后，我们将生成随机数据，以便我们能够更舒适地工作。
- en: 'We create `make_fake_data.py` with the following content:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建`make_fake_data.py`，内容如下：
- en: '[PRE35]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '[PRE36]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '[PRE40]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '[PRE42]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '[PRE46]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: '[PRE50]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: '[PRE52]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '[PRE53]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: '[PRE57]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE57]'
- en: '[PRE58]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE58]'
- en: 'The code we are going to run will generate random information. The steps we
    follow are as follows:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要运行的代码将生成随机信息。我们遵循的步骤如下：
- en: We delete all the articles, or `Post`. The first time we run it, there will
    be nothing to delete, but thereafter, it will delete everything it finds.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们删除所有文章，或`Post`。第一次运行时，将没有东西可以删除，但之后，它将删除它找到的每一项。
- en: We generate 30 new articles.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们生成30篇新文章。
- en: We generate 150 comments, or `Comment`, and assign them to articles randomly.
    This way, they will be distributed irregularly, with cases where there are articles
    with no comments and others with a large number.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们生成150条评论，或`Comment`，并将它们随机分配给文章。这样，它们将不规则地分布，有些文章没有评论，而有些文章有大量评论。
- en: 'Finally, in the Django container terminal, we execute the script we have just
    built:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在Django容器终端中，我们执行我们刚刚构建的脚本：
- en: '[PRE59]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE59]'
- en: Our database is populated with information. Now, we are going to focus on the
    logic of the blog – for example, listing all the articles in HTML.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的数据库已填充信息。现在，我们将专注于博客的逻辑——例如，以HTML格式列出所有文章。
- en: Listing of articles
  id: totrans-104
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文章列表
- en: We have prepared the database through the models and by including fake information
    with the necessary elements, enabling us to focus on how the customer is going
    to visualize the content.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过模型和包含必要的元素来准备数据库，并添加虚假信息，使我们能够专注于客户如何可视化内容。
- en: 'Before building the different pages, we will need a base for all templates.
    In `app/website/templates/base.html`, we include the main layout:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建不同的页面之前，我们需要一个所有模板的基础。在`app/website/templates/base.html`中，我们包含了主布局：
- en: '[PRE60]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE60]'
- en: '[PRE61]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE61]'
- en: '[PRE62]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE62]'
- en: '[PRE63]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE63]'
- en: '[PRE64]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE64]'
- en: '[PRE65]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE65]'
- en: '[PRE66]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE66]'
- en: '[PRE67]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE67]'
- en: '[PRE68]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE68]'
- en: '[PRE69]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE69]'
- en: '[PRE70]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE70]'
- en: '[PRE71]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE71]'
- en: '[PRE72]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE72]'
- en: '[PRE73]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE73]'
- en: '[PRE74]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE74]'
- en: '[PRE75]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE75]'
- en: '[PRE76]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE76]'
- en: '[PRE77]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE77]'
- en: '[PRE78]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE78]'
- en: '[PRE79]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE79]'
- en: '[PRE80]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE80]'
- en: '[PRE81]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE81]'
- en: '[PRE82]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE82]'
- en: '[PRE83]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE83]'
- en: '[PRE84]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE84]'
- en: '[PRE85]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE85]'
- en: '[PRE86]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE86]'
- en: '[PRE87]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE87]'
- en: We have included areas to redraw elements such as the browser, with `#nav`,
    and the main content of future pages, with `#main`.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经包含了用于重绘元素的区域，例如浏览器中的`#nav`和未来页面的主要内容`#main`。
- en: Now, we are going to create the welcome page of the blog where we will list
    the articles.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将创建博客的欢迎页面，我们将列出文章。
- en: 'The first step will be creating an HTML template to generate the list of the
    different blog articles, which will be fed by a future database query. In `app/website/templates/pages/all_posts.html`,
    we add the following code:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步将是创建一个HTML模板来生成不同博客文章的列表，它将由未来的数据库查询提供数据。在`app/website/templates/pages/all_posts.html`中，我们添加以下代码：
- en: '[PRE88]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE88]'
- en: '[PRE89]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE89]'
- en: '[PRE90]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE90]'
- en: '[PRE91]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE91]'
- en: '[PRE92]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE92]'
- en: '[PRE93]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE93]'
- en: '[PRE94]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE94]'
- en: '[PRE95]'
  id: totrans-145
  prefs: []
  type: TYPE_PRE
  zh: '[PRE95]'
- en: '[PRE96]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE96]'
- en: We have separated the list of articles in a component hosted in `app/website/templates/components/all_posts/list.html`
    because it will be useful when we do the pagination.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将文章列表分离到一个托管在`app/website/templates/components/all_posts/list.html`的组件中，因为当进行分页时这将很有用。
- en: 'With the following code, let’s show the list of all the articles that will
    be displayed inside `#all-posts` by means of `include`:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下代码，我们将通过`include`展示`#all-posts`内部将显示的所有文章列表：
- en: '[PRE97]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE97]'
- en: '[PRE98]'
  id: totrans-150
  prefs: []
  type: TYPE_PRE
  zh: '[PRE98]'
- en: '[PRE99]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE99]'
- en: '[PRE100]'
  id: totrans-152
  prefs: []
  type: TYPE_PRE
  zh: '[PRE100]'
- en: '[PRE101]'
  id: totrans-153
  prefs: []
  type: TYPE_PRE
  zh: '[PRE101]'
- en: '[PRE102]'
  id: totrans-154
  prefs: []
  type: TYPE_PRE
  zh: '[PRE102]'
- en: '[PRE103]'
  id: totrans-155
  prefs: []
  type: TYPE_PRE
  zh: '[PRE103]'
- en: '[PRE104]'
  id: totrans-156
  prefs: []
  type: TYPE_PRE
  zh: '[PRE104]'
- en: '[PRE105]'
  id: totrans-157
  prefs: []
  type: TYPE_PRE
  zh: '[PRE105]'
- en: '[PRE106]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE106]'
- en: '[PRE107]'
  id: totrans-159
  prefs: []
  type: TYPE_PRE
  zh: '[PRE107]'
- en: '[PRE108]'
  id: totrans-160
  prefs: []
  type: TYPE_PRE
  zh: '[PRE108]'
- en: '[PRE109]'
  id: totrans-161
  prefs: []
  type: TYPE_PRE
  zh: '[PRE109]'
- en: '[PRE110]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE110]'
- en: '[PRE111]'
  id: totrans-163
  prefs: []
  type: TYPE_PRE
  zh: '[PRE111]'
- en: '[PRE112]'
  id: totrans-164
  prefs: []
  type: TYPE_PRE
  zh: '[PRE112]'
- en: 'At the moment, the hyperlink to go to the individual page of the article does
    not work. When we have the right template, we will come back to give it the logic
    with JavaScript. However, we have already prepared the dataset for the dynamic
    page change: the name of the page to load (`data-target`) and its ID (`data-id`).'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，指向文章单独页面的超链接无法工作。当我们有了正确的模板，我们将回来用JavaScript给它添加逻辑。然而，我们已经为动态页面更改准备了数据集：要加载的页面名称（`data-target`）及其ID（`data-id`）。
- en: 'In `app/website/views.py`, we create the following view:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app/website/views.py`中，我们创建了以下视图：
- en: '[PRE113]'
  id: totrans-167
  prefs: []
  type: TYPE_PRE
  zh: '[PRE113]'
- en: '[PRE114]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE114]'
- en: '[PRE115]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE115]'
- en: '[PRE116]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE116]'
- en: '[PRE117]'
  id: totrans-171
  prefs: []
  type: TYPE_PRE
  zh: '[PRE117]'
- en: '[PRE118]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE118]'
- en: '[PRE119]'
  id: totrans-173
  prefs: []
  type: TYPE_PRE
  zh: '[PRE119]'
- en: '[PRE120]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE120]'
- en: '[PRE121]'
  id: totrans-175
  prefs: []
  type: TYPE_PRE
  zh: '[PRE121]'
- en: '[PRE122]'
  id: totrans-176
  prefs: []
  type: TYPE_PRE
  zh: '[PRE122]'
- en: '[PRE123]'
  id: totrans-177
  prefs: []
  type: TYPE_PRE
  zh: '[PRE123]'
- en: '[PRE124]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE124]'
- en: '[PRE125]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE125]'
- en: We will only list the first five items; this is the number of items we will
    display per page.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将只列出前五项；这是我们每页将显示的项目数量。
- en: 'In `blog/urls.py`, we assign the root of the site:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在`blog/urls.py`中，我们分配网站的根路径：
- en: '[PRE126]'
  id: totrans-182
  prefs: []
  type: TYPE_PRE
  zh: '[PRE126]'
- en: '[PRE127]'
  id: totrans-183
  prefs: []
  type: TYPE_PRE
  zh: '[PRE127]'
- en: '[PRE128]'
  id: totrans-184
  prefs: []
  type: TYPE_PRE
  zh: '[PRE128]'
- en: '[PRE129]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE129]'
- en: '[PRE130]'
  id: totrans-186
  prefs: []
  type: TYPE_PRE
  zh: '[PRE130]'
- en: '[PRE131]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE131]'
- en: '[PRE132]'
  id: totrans-188
  prefs: []
  type: TYPE_PRE
  zh: '[PRE132]'
- en: 'When you pull up Docker, via `docker-compose.yaml`, and go to `http://blog.localhost`,
    you will find the articles:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 当你通过`docker-compose.yaml`启动Docker，并访问`http://blog.localhost`时，你将找到文章：
- en: '![Figure 7.1 – Displays the first five articles at the root of the blog'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.1 – 显示博客根目录下的前五篇文章'
- en: '](img/Figure_7.01_B18321.jpg)'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_7.01_B18321.jpg]'
- en: Figure 7.1 – Displays the first five articles at the root of the blog
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.1 – 显示博客根目录下的前五篇文章
- en: What if I want to see more articles? We can’t, although we will resolve this
    in the next section. The next challenge will be to solve the problem by pagination,
    or rendering the next five posts continuously.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我想看到更多文章怎么办？我们目前还不能，尽管我们将在下一节中解决这个问题。下一个挑战将是通过分页或连续渲染下一篇文章来解决此问题。
- en: Navigating between articles with pagination
  id: totrans-194
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用分页在文章之间导航
- en: We are able to show visitors the latest articles, but they are unable to view
    previous posts. We are going to include a button that allows us to render other
    articles on the welcome page, and we will incorporate them in blocks of five.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 我们能够向访客展示最新的文章，但他们无法查看之前的帖子。我们将包含一个按钮，允许我们在欢迎页面上渲染其他文章，并将它们以五个一组的形式包含在内。
- en: 'We add a component with the button. In `app/website/templates/components/all_posts/_button_paginator.html`,
    add the following HTML:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们添加了一个带有按钮的组件。在`app/website/templates/components/all_posts/_button_paginator.html`中添加以下HTML：
- en: '[PRE133]'
  id: totrans-197
  prefs: []
  type: TYPE_PRE
  zh: '[PRE133]'
- en: '[PRE134]'
  id: totrans-198
  prefs: []
  type: TYPE_PRE
  zh: '[PRE134]'
- en: '[PRE135]'
  id: totrans-199
  prefs: []
  type: TYPE_PRE
  zh: '[PRE135]'
- en: '[PRE136]'
  id: totrans-200
  prefs: []
  type: TYPE_PRE
  zh: '[PRE136]'
- en: We will only show the button if we are not on the last page, which we will manage
    with the `is_last_page` variable. In addition, we will include a dataset with
    the `next_page` variable to tell the backend the next page we want to render.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只有在不是最后一页时才会显示按钮，我们将使用`is_last_page`变量来管理这一点。此外，我们将包含一个带有`next_page`变量的数据集，以告诉后端我们想要渲染的下一页。
- en: 'The component is embedded in `app/website/templates/components/all_posts/list.html`:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 组件嵌入在`app/website/templates/components/all_posts/list.html`中：
- en: '[PRE137]'
  id: totrans-203
  prefs: []
  type: TYPE_PRE
  zh: '[PRE137]'
- en: '[PRE138]'
  id: totrans-204
  prefs: []
  type: TYPE_PRE
  zh: '[PRE138]'
- en: '[PRE139]'
  id: totrans-205
  prefs: []
  type: TYPE_PRE
  zh: '[PRE139]'
- en: '[PRE140]'
  id: totrans-206
  prefs: []
  type: TYPE_PRE
  zh: '[PRE140]'
- en: '[PRE141]'
  id: totrans-207
  prefs: []
  type: TYPE_PRE
  zh: '[PRE141]'
- en: '[PRE142]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE142]'
- en: '[PRE143]'
  id: totrans-209
  prefs: []
  type: TYPE_PRE
  zh: '[PRE143]'
- en: '[PRE144]'
  id: totrans-210
  prefs: []
  type: TYPE_PRE
  zh: '[PRE144]'
- en: '[PRE145]'
  id: totrans-211
  prefs: []
  type: TYPE_PRE
  zh: '[PRE145]'
- en: '[PRE146]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE146]'
- en: '[PRE147]'
  id: totrans-213
  prefs: []
  type: TYPE_PRE
  zh: '[PRE147]'
- en: '[PRE148]'
  id: totrans-214
  prefs: []
  type: TYPE_PRE
  zh: '[PRE148]'
- en: '[PRE149]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE149]'
- en: After designing the visual part, we will focus on the usual flow to give the
    logic.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 在设计视觉部分之后，我们将关注常规流程以提供逻辑。
- en: We go to `static/js/index.js` to capture the click event and send to the Consumer
    the `"Add next posts"` action with the number of the page we want to render.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: 'I have omitted the lines that are already present in the template to simplify
    the example:'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE150]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE150]'
- en: '[PRE151]'
  id: totrans-220
  prefs: []
  type: TYPE_PRE
  zh: '[PRE151]'
- en: '[PRE152]'
  id: totrans-221
  prefs: []
  type: TYPE_PRE
  zh: '[PRE152]'
- en: '[PRE153]'
  id: totrans-222
  prefs: []
  type: TYPE_PRE
  zh: '[PRE153]'
- en: '[PRE154]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE154]'
- en: '[PRE155]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE155]'
- en: '[PRE156]'
  id: totrans-225
  prefs: []
  type: TYPE_PRE
  zh: '[PRE156]'
- en: '[PRE157]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE157]'
- en: '[PRE158]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE158]'
- en: '[PRE159]'
  id: totrans-228
  prefs: []
  type: TYPE_PRE
  zh: '[PRE159]'
- en: '[PRE160]'
  id: totrans-229
  prefs: []
  type: TYPE_PRE
  zh: '[PRE160]'
- en: '[PRE161]'
  id: totrans-230
  prefs: []
  type: TYPE_PRE
  zh: '[PRE161]'
- en: '[PRE162]'
  id: totrans-231
  prefs: []
  type: TYPE_PRE
  zh: '[PRE162]'
- en: '[PRE163]'
  id: totrans-232
  prefs: []
  type: TYPE_PRE
  zh: '[PRE163]'
- en: '[PRE164]'
  id: totrans-233
  prefs: []
  type: TYPE_PRE
  zh: '[PRE164]'
- en: '[PRE165]'
  id: totrans-234
  prefs: []
  type: TYPE_PRE
  zh: '[PRE165]'
- en: '[PRE166]'
  id: totrans-235
  prefs: []
  type: TYPE_PRE
  zh: '[PRE166]'
- en: '[PRE167]'
  id: totrans-236
  prefs: []
  type: TYPE_PRE
  zh: '[PRE167]'
- en: '[PRE168]'
  id: totrans-237
  prefs: []
  type: TYPE_PRE
  zh: '[PRE168]'
- en: '[PRE169]'
  id: totrans-238
  prefs: []
  type: TYPE_PRE
  zh: '[PRE169]'
- en: '[PRE170]'
  id: totrans-239
  prefs: []
  type: TYPE_PRE
  zh: '[PRE170]'
- en: '[PRE171]'
  id: totrans-240
  prefs: []
  type: TYPE_PRE
  zh: '[PRE171]'
- en: '[PRE172]'
  id: totrans-241
  prefs: []
  type: TYPE_PRE
  zh: '[PRE172]'
- en: '[PRE173]'
  id: totrans-242
  prefs: []
  type: TYPE_PRE
  zh: '[PRE173]'
- en: '[PRE174]'
  id: totrans-243
  prefs: []
  type: TYPE_PRE
  zh: '[PRE174]'
- en: '[PRE175]'
  id: totrans-244
  prefs: []
  type: TYPE_PRE
  zh: '[PRE175]'
- en: '[PRE176]'
  id: totrans-245
  prefs: []
  type: TYPE_PRE
  zh: '[PRE176]'
- en: '[PRE177]'
  id: totrans-246
  prefs: []
  type: TYPE_PRE
  zh: '[PRE177]'
- en: '[PRE178]'
  id: totrans-247
  prefs: []
  type: TYPE_PRE
  zh: '[PRE178]'
- en: We add to the Consumer, hosted in `app/website/consumers.py`, the appropriate
    call to action if we receive `"Add next posts"`.
  id: totrans-248
  prefs: []
  type: TYPE_NORMAL
- en: 'As we have done on several occasions, we will create a link in the Consumer
    class between the action required by the frontend and the function hosted in `actions.py`:'
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE179]'
  id: totrans-250
  prefs: []
  type: TYPE_PRE
  zh: '[PRE179]'
- en: '[PRE180]'
  id: totrans-251
  prefs: []
  type: TYPE_PRE
  zh: '[PRE180]'
- en: '[PRE181]'
  id: totrans-252
  prefs: []
  type: TYPE_PRE
  zh: '[PRE181]'
- en: '[PRE182]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE182]'
- en: '[PRE183]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE183]'
- en: '[PRE184]'
  id: totrans-255
  prefs: []
  type: TYPE_PRE
  zh: '[PRE184]'
- en: '[PRE185]'
  id: totrans-256
  prefs: []
  type: TYPE_PRE
  zh: '[PRE185]'
- en: '[PRE186]'
  id: totrans-257
  prefs: []
  type: TYPE_PRE
  zh: '[PRE186]'
- en: '[PRE187]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE187]'
- en: '[PRE188]'
  id: totrans-259
  prefs: []
  type: TYPE_PRE
  zh: '[PRE188]'
- en: '[PRE189]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE189]'
- en: '[PRE190]'
  id: totrans-261
  prefs: []
  type: TYPE_PRE
  zh: '[PRE190]'
- en: '[PRE191]'
  id: totrans-262
  prefs: []
  type: TYPE_PRE
  zh: '[PRE191]'
- en: '[PRE192]'
  id: totrans-263
  prefs: []
  type: TYPE_PRE
  zh: '[PRE192]'
- en: '[PRE193]'
  id: totrans-264
  prefs: []
  type: TYPE_PRE
  zh: '[PRE193]'
- en: '[PRE194]'
  id: totrans-265
  prefs: []
  type: TYPE_PRE
  zh: '[PRE194]'
- en: '[PRE195]'
  id: totrans-266
  prefs: []
  type: TYPE_PRE
  zh: '[PRE195]'
- en: '[PRE196]'
  id: totrans-267
  prefs: []
  type: TYPE_PRE
  zh: '[PRE196]'
- en: '[PRE197]'
  id: totrans-268
  prefs: []
  type: TYPE_PRE
  zh: '[PRE197]'
- en: '[PRE198]'
  id: totrans-269
  prefs: []
  type: TYPE_PRE
  zh: '[PRE198]'
- en: '[PRE199]'
  id: totrans-270
  prefs: []
  type: TYPE_PRE
  zh: '[PRE199]'
- en: '[PRE200]'
  id: totrans-271
  prefs: []
  type: TYPE_PRE
  zh: '[PRE200]'
- en: '[PRE201]'
  id: totrans-272
  prefs: []
  type: TYPE_PRE
  zh: '[PRE201]'
- en: '[PRE202]'
  id: totrans-273
  prefs: []
  type: TYPE_PRE
  zh: '[PRE202]'
- en: '[PRE203]'
  id: totrans-274
  prefs: []
  type: TYPE_PRE
  zh: '[PRE203]'
- en: '[PRE204]'
  id: totrans-275
  prefs: []
  type: TYPE_PRE
  zh: '[PRE204]'
- en: '[PRE205]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE205]'
- en: '[PRE206]'
  id: totrans-277
  prefs: []
  type: TYPE_PRE
  zh: '[PRE206]'
- en: '[PRE207]'
  id: totrans-278
  prefs: []
  type: TYPE_PRE
  zh: '[PRE207]'
- en: 'In `app/website/actions.py`, we declare the `add_next_posts` function:'
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE208]'
  id: totrans-280
  prefs: []
  type: TYPE_PRE
  zh: '[PRE208]'
- en: '[PRE209]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE209]'
- en: '[PRE210]'
  id: totrans-282
  prefs: []
  type: TYPE_PRE
  zh: '[PRE210]'
- en: '[PRE211]'
  id: totrans-283
  prefs: []
  type: TYPE_PRE
  zh: '[PRE211]'
- en: '[PRE212]'
  id: totrans-284
  prefs: []
  type: TYPE_PRE
  zh: '[PRE212]'
- en: '[PRE213]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE213]'
- en: '[PRE214]'
  id: totrans-286
  prefs: []
  type: TYPE_PRE
  zh: '[PRE214]'
- en: '[PRE215]'
  id: totrans-287
  prefs: []
  type: TYPE_PRE
  zh: '[PRE215]'
- en: '[PRE216]'
  id: totrans-288
  prefs: []
  type: TYPE_PRE
  zh: '[PRE216]'
- en: '[PRE217]'
  id: totrans-289
  prefs: []
  type: TYPE_PRE
  zh: '[PRE217]'
- en: '[PRE218]'
  id: totrans-290
  prefs: []
  type: TYPE_PRE
  zh: '[PRE218]'
- en: '[PRE219]'
  id: totrans-291
  prefs: []
  type: TYPE_PRE
  zh: '[PRE219]'
- en: '[PRE220]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE220]'
- en: '[PRE221]'
  id: totrans-293
  prefs: []
  type: TYPE_PRE
  zh: '[PRE221]'
- en: '[PRE222]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE222]'
- en: '[PRE223]'
  id: totrans-295
  prefs: []
  type: TYPE_PRE
  zh: '[PRE223]'
- en: '[PRE224]'
  id: totrans-296
  prefs: []
  type: TYPE_PRE
  zh: '[PRE224]'
- en: '[PRE225]'
  id: totrans-297
  prefs: []
  type: TYPE_PRE
  zh: '[PRE225]'
- en: '[PRE226]'
  id: totrans-298
  prefs: []
  type: TYPE_PRE
  zh: '[PRE226]'
- en: '[PRE227]'
  id: totrans-299
  prefs: []
  type: TYPE_PRE
  zh: '[PRE227]'
- en: '[PRE228]'
  id: totrans-300
  prefs: []
  type: TYPE_PRE
  zh: '[PRE228]'
- en: '[PRE229]'
  id: totrans-301
  prefs: []
  type: TYPE_PRE
  zh: '[PRE229]'
- en: '[PRE230]'
  id: totrans-302
  prefs: []
  type: TYPE_PRE
  zh: '[PRE230]'
- en: '[PRE231]'
  id: totrans-303
  prefs: []
  type: TYPE_PRE
  zh: '[PRE231]'
- en: '[PRE232]'
  id: totrans-304
  prefs: []
  type: TYPE_PRE
  zh: '[PRE232]'
- en: '[PRE233]'
  id: totrans-305
  prefs: []
  type: TYPE_PRE
  zh: '[PRE233]'
- en: '[PRE234]'
  id: totrans-306
  prefs: []
  type: TYPE_PRE
  zh: '[PRE234]'
- en: '[PRE235]'
  id: totrans-307
  prefs: []
  type: TYPE_PRE
  zh: '[PRE235]'
- en: '[PRE236]'
  id: totrans-308
  prefs: []
  type: TYPE_PRE
  zh: '[PRE236]'
- en: '[PRE237]'
  id: totrans-309
  prefs: []
  type: TYPE_PRE
  zh: '[PRE237]'
- en: 'We are undertaking a number of important actions:'
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
- en: We’re saving the page to display. If it is not provided, we assume it is the
    first one.
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re calculating the initial and final cut-off of the results.
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re carrying out the query.
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re calculating what the next page will be – the current page plus one.
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re checking whether we are on the last page. It will be important to know
    whether we should print the paging button or not.
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re rendering new articles and adding them to `#all-posts`.
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We’re redrawing the paging button, as it needs to store what the next page is
    and hide it if there are no more articles.
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There is only one detail left. Give the initial parameters to the view (`app/website/views.py`):'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE238]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE238]'
- en: '[PRE239]'
  id: totrans-320
  prefs: []
  type: TYPE_PRE
  zh: '[PRE239]'
- en: '[PRE240]'
  id: totrans-321
  prefs: []
  type: TYPE_PRE
  zh: '[PRE240]'
- en: '[PRE241]'
  id: totrans-322
  prefs: []
  type: TYPE_PRE
  zh: '[PRE241]'
- en: '[PRE242]'
  id: totrans-323
  prefs: []
  type: TYPE_PRE
  zh: '[PRE242]'
- en: '[PRE243]'
  id: totrans-324
  prefs: []
  type: TYPE_PRE
  zh: '[PRE243]'
- en: '[PRE244]'
  id: totrans-325
  prefs: []
  type: TYPE_PRE
  zh: '[PRE244]'
- en: '[PRE245]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE245]'
- en: '[PRE246]'
  id: totrans-327
  prefs: []
  type: TYPE_PRE
  zh: '[PRE246]'
- en: '[PRE247]'
  id: totrans-328
  prefs: []
  type: TYPE_PRE
  zh: '[PRE247]'
- en: '[PRE248]'
  id: totrans-329
  prefs: []
  type: TYPE_PRE
  zh: '[PRE248]'
- en: '[PRE249]'
  id: totrans-330
  prefs: []
  type: TYPE_PRE
  zh: '[PRE249]'
- en: 'We can now start rendering new results:'
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.2 – The pagination of articles'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.02_B18321.jpg)'
  id: totrans-333
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.2 – The pagination of articles
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
- en: The experience would be more pleasant with a nice animation or delay; it is
    so fast loading that a visitor may not notice the new elements. We can leave an
    issue to the future web designer. Our task is not finished yet – what if the visitor
    is looking for a specific article? The pagination becomes cumbersome; everything
    would be easier with a simple search engine.
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
- en: Adding an article search engine
  id: totrans-336
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Offering visitors pagination is a good idea to optimize resources and offer
    controlled navigation. In addition, including a search engine for articles will
    provide complete exploration. That is why we are going to integrate a text field
    to find articles by title.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
- en: 'In `app/website/forms.py`, we incorporate the following form, which will only
    have one field:'
  id: totrans-338
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE250]'
  id: totrans-339
  prefs: []
  type: TYPE_PRE
  zh: '[PRE250]'
- en: '[PRE251]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE251]'
- en: '[PRE252]'
  id: totrans-341
  prefs: []
  type: TYPE_PRE
  zh: '[PRE252]'
- en: '[PRE253]'
  id: totrans-342
  prefs: []
  type: TYPE_PRE
  zh: '[PRE253]'
- en: '[PRE254]'
  id: totrans-343
  prefs: []
  type: TYPE_PRE
  zh: '[PRE254]'
- en: '[PRE255]'
  id: totrans-344
  prefs: []
  type: TYPE_PRE
  zh: '[PRE255]'
- en: '[PRE256]'
  id: totrans-345
  prefs: []
  type: TYPE_PRE
  zh: '[PRE256]'
- en: '[PRE257]'
  id: totrans-346
  prefs: []
  type: TYPE_PRE
  zh: '[PRE257]'
- en: '[PRE258]'
  id: totrans-347
  prefs: []
  type: TYPE_PRE
  zh: '[PRE258]'
- en: '[PRE259]'
  id: totrans-348
  prefs: []
  type: TYPE_PRE
  zh: '[PRE259]'
- en: '[PRE260]'
  id: totrans-349
  prefs: []
  type: TYPE_PRE
  zh: '[PRE260]'
- en: '[PRE261]'
  id: totrans-350
  prefs: []
  type: TYPE_PRE
  zh: '[PRE261]'
- en: '[PRE262]'
  id: totrans-351
  prefs: []
  type: TYPE_PRE
  zh: '[PRE262]'
- en: '[PRE263]'
  id: totrans-352
  prefs: []
  type: TYPE_PRE
  zh: '[PRE263]'
- en: 'We will need a component to render the form we just defined. We create the
    `app/website/templates/components/all_posts/form_search.html` file and add the
    `search` field inside a form:'
  id: totrans-353
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE264]'
  id: totrans-354
  prefs: []
  type: TYPE_PRE
  zh: '[PRE264]'
- en: '[PRE265]'
  id: totrans-355
  prefs: []
  type: TYPE_PRE
  zh: '[PRE265]'
- en: '[PRE266]'
  id: totrans-356
  prefs: []
  type: TYPE_PRE
  zh: '[PRE266]'
- en: '[PRE267]'
  id: totrans-357
  prefs: []
  type: TYPE_PRE
  zh: '[PRE267]'
- en: 'In the article listing page, `app/website/templates/pages/all_posts.html`,
    we include the `search` component:'
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE268]'
  id: totrans-359
  prefs: []
  type: TYPE_PRE
  zh: '[PRE268]'
- en: '[PRE269]'
  id: totrans-360
  prefs: []
  type: TYPE_PRE
  zh: '[PRE269]'
- en: '[PRE270]'
  id: totrans-361
  prefs: []
  type: TYPE_PRE
  zh: '[PRE270]'
- en: '[PRE271]'
  id: totrans-362
  prefs: []
  type: TYPE_PRE
  zh: '[PRE271]'
- en: '[PRE272]'
  id: totrans-363
  prefs: []
  type: TYPE_PRE
  zh: '[PRE272]'
- en: '[PRE273]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE273]'
- en: '[PRE274]'
  id: totrans-365
  prefs: []
  type: TYPE_PRE
  zh: '[PRE274]'
- en: '[PRE275]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE275]'
- en: '[PRE276]'
  id: totrans-367
  prefs: []
  type: TYPE_PRE
  zh: '[PRE276]'
- en: '[PRE277]'
  id: totrans-368
  prefs: []
  type: TYPE_PRE
  zh: '[PRE277]'
- en: '[PRE278]'
  id: totrans-369
  prefs: []
  type: TYPE_PRE
  zh: '[PRE278]'
- en: '[PRE279]'
  id: totrans-370
  prefs: []
  type: TYPE_PRE
  zh: '[PRE279]'
- en: '[PRE280]'
  id: totrans-371
  prefs: []
  type: TYPE_PRE
  zh: '[PRE280]'
- en: '[PRE281]'
  id: totrans-372
  prefs: []
  type: TYPE_PRE
  zh: '[PRE281]'
- en: '[PRE282]'
  id: totrans-373
  prefs: []
  type: TYPE_PRE
  zh: '[PRE282]'
- en: '[PRE283]'
  id: totrans-374
  prefs: []
  type: TYPE_PRE
  zh: '[PRE283]'
- en: 'Don’t forget to include it in the view (`app/website/views.py`):'
  id: totrans-375
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE284]'
  id: totrans-376
  prefs: []
  type: TYPE_PRE
  zh: '[PRE284]'
- en: '[PRE285]'
  id: totrans-377
  prefs: []
  type: TYPE_PRE
  zh: '[PRE285]'
- en: '[PRE286]'
  id: totrans-378
  prefs: []
  type: TYPE_PRE
  zh: '[PRE286]'
- en: '[PRE287]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE287]'
- en: '[PRE288]'
  id: totrans-380
  prefs: []
  type: TYPE_PRE
  zh: '[PRE288]'
- en: '[PRE289]'
  id: totrans-381
  prefs: []
  type: TYPE_PRE
  zh: '[PRE289]'
- en: '[PRE290]'
  id: totrans-382
  prefs: []
  type: TYPE_PRE
  zh: '[PRE290]'
- en: '[PRE291]'
  id: totrans-383
  prefs: []
  type: TYPE_PRE
  zh: '[PRE291]'
- en: '[PRE292]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE292]'
- en: '[PRE293]'
  id: totrans-385
  prefs: []
  type: TYPE_PRE
  zh: '[PRE293]'
- en: '[PRE294]'
  id: totrans-386
  prefs: []
  type: TYPE_PRE
  zh: '[PRE294]'
- en: '[PRE295]'
  id: totrans-387
  prefs: []
  type: TYPE_PRE
  zh: '[PRE295]'
- en: '[PRE296]'
  id: totrans-388
  prefs: []
  type: TYPE_PRE
  zh: '[PRE296]'
- en: 'We will see the form when the page loads, although for the moment it is decorative,
    as there is no logic behind it:'
  id: totrans-389
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 7.3 – Displaying the browser'
  id: totrans-390
  prefs: []
  type: TYPE_NORMAL
- en: '](img/Figure_7.03_B18321.jpg)'
  id: totrans-391
  prefs: []
  type: TYPE_NORMAL
- en: Figure 7.3 – Displaying the browser
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let’s go to `static/js/index.js` to make it work. We’ll capture the form’s
    submit event and send the Consumer the `"Search"` action with the text to search
    for:'
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE297]'
  id: totrans-394
  prefs: []
  type: TYPE_PRE
  zh: '[PRE297]'
- en: '[PRE298]'
  id: totrans-395
  prefs: []
  type: TYPE_PRE
  zh: '[PRE298]'
- en: '[PRE299]'
  id: totrans-396
  prefs: []
  type: TYPE_PRE
  zh: '[PRE299]'
- en: '[PRE300]'
  id: totrans-397
  prefs: []
  type: TYPE_PRE
  zh: '[PRE300]'
- en: '[PRE301]'
  id: totrans-398
  prefs: []
  type: TYPE_PRE
  zh: '[PRE301]'
- en: '[PRE302]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE302]'
- en: '[PRE303]'
  id: totrans-400
  prefs: []
  type: TYPE_PRE
  zh: '[PRE303]'
- en: '[PRE304]'
  id: totrans-401
  prefs: []
  type: TYPE_PRE
  zh: '[PRE304]'
- en: '[PRE305]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE305]'
- en: '[PRE306]'
  id: totrans-403
  prefs: []
  type: TYPE_PRE
  zh: '[PRE306]'
- en: '[PRE307]'
  id: totrans-404
  prefs: []
  type: TYPE_PRE
  zh: '[PRE307]'
- en: '[PRE308]'
  id: totrans-405
  prefs: []
  type: TYPE_PRE
  zh: '[PRE308]'
- en: '[PRE309]'
  id: totrans-406
  prefs: []
  type: TYPE_PRE
  zh: '[PRE309]'
- en: '[PRE310]'
  id: totrans-407
  prefs: []
  type: TYPE_PRE
  zh: '[PRE310]'
- en: '[PRE311]'
  id: totrans-408
  prefs: []
  type: TYPE_PRE
  zh: '[PRE311]'
- en: '[PRE312]'
  id: totrans-409
  prefs: []
  type: TYPE_PRE
  zh: '[PRE312]'
- en: '[PRE313]'
  id: totrans-410
  prefs: []
  type: TYPE_PRE
  zh: '[PRE313]'
- en: '[PRE314]'
  id: totrans-411
  prefs: []
  type: TYPE_PRE
  zh: '[PRE314]'
- en: '[PRE315]'
  id: totrans-412
  prefs: []
  type: TYPE_PRE
  zh: '[PRE315]'
- en: '[PRE316]'
  id: totrans-413
  prefs: []
  type: TYPE_PRE
  zh: '[PRE316]'
- en: '[PRE317]'
  id: totrans-414
  prefs: []
  type: TYPE_PRE
  zh: '[PRE317]'
- en: '[PRE318]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE318]'
- en: '[PRE319]'
  id: totrans-416
  prefs: []
  type: TYPE_PRE
  zh: '[PRE319]'
- en: '[PRE320]'
  id: totrans-417
  prefs: []
  type: TYPE_PRE
  zh: '[PRE320]'
- en: '[PRE321]'
  id: totrans-418
  prefs: []
  type: TYPE_PRE
  zh: '[PRE321]'
- en: '[PRE322]'
  id: totrans-419
  prefs: []
  type: TYPE_PRE
  zh: '[PRE322]'
- en: '[PRE323]'
  id: totrans-420
  prefs: []
  type: TYPE_PRE
  zh: '[PRE323]'
- en: '[PRE324]'
  id: totrans-421
  prefs: []
  type: TYPE_PRE
  zh: '[PRE324]'
- en: '[PRE325]'
  id: totrans-422
  prefs: []
  type: TYPE_PRE
  zh: '[PRE325]'
- en: '[PRE326]'
  id: totrans-423
  prefs: []
  type: TYPE_PRE
  zh: '[PRE326]'
- en: '[PRE327]'
  id: totrans-424
  prefs: []
  type: TYPE_PRE
  zh: '[PRE327]'
- en: 'The frontend has already sent us the request and the information we need. Now,
    the Consumer (`app/website/consumers.py`) should execute the appropriate action:'
  id: totrans-425
  prefs: []
  type: TYPE_NORMAL
  zh: 前端已经发送了我们需要请求和信息。现在，消费者（`app/website/consumers.py`）应该执行适当的操作：
- en: '[PRE328]'
  id: totrans-426
  prefs: []
  type: TYPE_PRE
  zh: '[PRE328]'
- en: '[PRE329]'
  id: totrans-427
  prefs: []
  type: TYPE_PRE
  zh: '[PRE329]'
- en: '[PRE330]'
  id: totrans-428
  prefs: []
  type: TYPE_PRE
  zh: '[PRE330]'
- en: '[PRE331]'
  id: totrans-429
  prefs: []
  type: TYPE_PRE
  zh: '[PRE331]'
- en: '[PRE332]'
  id: totrans-430
  prefs: []
  type: TYPE_PRE
  zh: '[PRE332]'
- en: 'Then, in the action (`app/website/actions.py`), we include the `search` function:'
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在操作（`app/website/actions.py`）中，我们包括`search`函数：
- en: '[PRE333]'
  id: totrans-432
  prefs: []
  type: TYPE_PRE
  zh: '[PRE333]'
- en: '[PRE334]'
  id: totrans-433
  prefs: []
  type: TYPE_PRE
  zh: '[PRE334]'
- en: '[PRE335]'
  id: totrans-434
  prefs: []
  type: TYPE_PRE
  zh: '[PRE335]'
- en: '[PRE336]'
  id: totrans-435
  prefs: []
  type: TYPE_PRE
  zh: '[PRE336]'
- en: '[PRE337]'
  id: totrans-436
  prefs: []
  type: TYPE_PRE
  zh: '[PRE337]'
- en: '[PRE338]'
  id: totrans-437
  prefs: []
  type: TYPE_PRE
  zh: '[PRE338]'
- en: '[PRE339]'
  id: totrans-438
  prefs: []
  type: TYPE_PRE
  zh: '[PRE339]'
- en: '[PRE340]'
  id: totrans-439
  prefs: []
  type: TYPE_PRE
  zh: '[PRE340]'
- en: '[PRE341]'
  id: totrans-440
  prefs: []
  type: TYPE_PRE
  zh: '[PRE341]'
- en: '[PRE342]'
  id: totrans-441
  prefs: []
  type: TYPE_PRE
  zh: '[PRE342]'
- en: '[PRE343]'
  id: totrans-442
  prefs: []
  type: TYPE_PRE
  zh: '[PRE343]'
- en: '[PRE344]'
  id: totrans-443
  prefs: []
  type: TYPE_PRE
  zh: '[PRE344]'
- en: '[PRE345]'
  id: totrans-444
  prefs: []
  type: TYPE_PRE
  zh: '[PRE345]'
- en: '[PRE346]'
  id: totrans-445
  prefs: []
  type: TYPE_PRE
  zh: '[PRE346]'
- en: '[PRE347]'
  id: totrans-446
  prefs: []
  type: TYPE_PRE
  zh: '[PRE347]'
- en: As you can see, the code is simple. All we do is filter the database by getting
    all articles containing `data["search"]`, ignoring uppercase or lowercase text
    (`icontains`). We also limit the results to five articles.
  id: totrans-447
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，代码很简单。我们只是通过获取包含`data["search"]`的所有文章来过滤数据库，忽略大小写文本（`icontains`）。我们还限制结果为五篇文章。
- en: 'That’s it. We can search and dynamically display the results:'
  id: totrans-448
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样。我们可以搜索并动态显示结果：
- en: '![Figure 7.4 – Shows the results of a search for the word "why"'
  id: totrans-449
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.4 – 显示对单词“为什么”的搜索结果'
- en: '](img/Figure_7.04_B18321.jpg)'
  id: totrans-450
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.04_B18321.jpg)'
- en: Figure 7.4 – Shows the results of a search for the word "why"
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.4 – 显示对单词“为什么”的搜索结果
- en: If you search by leaving the string empty, you will return to the previous state
    where the items are listed without filtering.
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您通过留空字符串进行搜索，您将返回到上一个状态，其中项目未经过滤地列出。
- en: The next point to discuss is the navigation between pages. For this, we will
    create a static page, where we can describe the blog or or display the **About
    us** page, and a navigator to move between the existing pages.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来要讨论的是页面之间的导航。为此，我们将创建一个静态页面，其中我们可以描述博客或显示**关于我们**页面，以及一个导航器来在现有页面之间移动。
- en: Creating a static page
  id: totrans-454
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建静态页面
- en: We are in a situation where we need to grow with new pages to split logic and
    HTML structures. The first step will be to create a static page.
  id: totrans-455
  prefs: []
  type: TYPE_NORMAL
  zh: 我们处于需要通过添加新页面来扩展逻辑和HTML结构的情况。第一步将是创建一个静态页面。
- en: 'We create `app/website/templates/pages/about_us.html` with simple text:'
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 我们创建`app/website/templates/pages/about_us.html`，其中包含简单的文本：
- en: '[PRE348]'
  id: totrans-457
  prefs: []
  type: TYPE_PRE
  zh: '[PRE348]'
- en: '[PRE349]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE349]'
- en: 'We edit the views (`app/website/views.py`), including `about`:'
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 我们编辑视图（`app/website/views.py`），包括`about`：
- en: '[PRE350]'
  id: totrans-460
  prefs: []
  type: TYPE_PRE
  zh: '[PRE350]'
- en: '[PRE351]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE351]'
- en: '[PRE352]'
  id: totrans-462
  prefs: []
  type: TYPE_PRE
  zh: '[PRE352]'
- en: '[PRE353]'
  id: totrans-463
  prefs: []
  type: TYPE_PRE
  zh: '[PRE353]'
- en: '[PRE354]'
  id: totrans-464
  prefs: []
  type: TYPE_PRE
  zh: '[PRE354]'
- en: '[PRE355]'
  id: totrans-465
  prefs: []
  type: TYPE_PRE
  zh: '[PRE355]'
- en: 'Then, we give it a path in `blog/urls.py`:'
  id: totrans-466
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们在`blog/urls.py`中为其提供一个路径：
- en: '[PRE356]'
  id: totrans-467
  prefs: []
  type: TYPE_PRE
  zh: '[PRE356]'
- en: '[PRE357]'
  id: totrans-468
  prefs: []
  type: TYPE_PRE
  zh: '[PRE357]'
- en: '[PRE358]'
  id: totrans-469
  prefs: []
  type: TYPE_PRE
  zh: '[PRE358]'
- en: '[PRE359]'
  id: totrans-470
  prefs: []
  type: TYPE_PRE
  zh: '[PRE359]'
- en: 'We can now go to `http://blog.localhost/about-us/` to view the page:'
  id: totrans-471
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以访问`http://blog.localhost/about-us/`来查看页面：
- en: '![Figure 7.5 – Rendering the About us page'
  id: totrans-472
  prefs: []
  type: TYPE_NORMAL
  zh: '![图7.5 – 渲染“关于我们”页面'
- en: '](img/Figure_7.05_B18321.jpg)'
  id: totrans-473
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.05_B18321.jpg)'
- en: Figure 7.5 – Rendering the About us page
  id: totrans-474
  prefs: []
  type: TYPE_NORMAL
  zh: 图7.5 – 渲染“关于我们”页面
- en: 'I totally agree with you; this section hasn’t been very... I plead guilty!
    Creating a static page is the most basic thing we can do in Django. Now, it’s
    time for the hard part: dynamically scrolling between pages and creating a browser.'
  id: totrans-475
  prefs: []
  type: TYPE_NORMAL
  zh: 我完全同意你的观点；这一部分并没有做得很好...我承认错误！在Django中，创建一个静态页面是我们能做的最基本的事情。现在，是时候处理困难的部分了：在页面之间动态滚动并创建一个浏览器。
- en: Moving between pages and generating a browser
  id: totrans-476
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在页面之间移动和生成浏览器
- en: Visitors need to navigate between different pages; a simple button structure
    and corresponding logic for loading the appropriate templates will need to be
    incorporated.
  id: totrans-477
  prefs: []
  type: TYPE_NORMAL
  zh: 访问者需要在不同的页面之间导航；需要整合一个简单的按钮结构和相应的逻辑来加载适当的模板。
- en: 'We are going to create a browser to dynamically jump between pages or, in other
    words, request the backend to render the page in the right place:'
  id: totrans-478
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个浏览器，以动态地在页面之间跳转，换句话说，请求后端在正确的位置渲染页面：
- en: 'The first step is to create a component with hyperlinks. We create a file in
    `app/website/templates/components/_nav.html` with the following structure:'
  id: totrans-479
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 第一步是创建一个带有超链接的组件。我们在`app/website/templates/components/_nav.html`中创建一个文件，具有以下结构：
- en: '[PRE360]'
  id: totrans-480
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE360]'
- en: '`The active_nav` variable is worth mentioning. We have defined it in each view
    for this particular component. It will add a CSS class that visually marks where
    the visitor is. We also include the `target` dataset to know where each hyperlink
    should point to.'
  id: totrans-481
  prefs: []
  type: TYPE_NORMAL
  zh: '`The active_nav`变量值得提一下。我们为这个特定的组件在每个视图中定义了它。它将添加一个CSS类，从视觉上标记访问者的位置。我们还包含了`target`数据集，以了解每个超链接应该指向哪里。'
- en: 'Next, we are going to capture the events of the hyperlinks in JavaScript whose
    objective is to change the page, both those present in the browser and the list
    of articles:'
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将捕获JavaScript中超链接的事件，其目的是更改页面，包括浏览器中现有的和文章列表中的：
- en: 'We add the following in `static/js/index.js`:'
  id: totrans-483
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在`static/js/index.js`中添加以下内容：
- en: '[PRE361]'
  id: totrans-484
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE361]'
- en: When the hyperlinks are clicked, a request will be made to the Consumer to change
    the page by sending the name of the template and, if it exists, the ID of the
    post.
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击超链接时，将向消费者发送请求，通过发送模板名称来更改页面，如果存在，则发送帖子的ID。
- en: 'We include in the Consumer (`app/website/consumers.py`) the `send_page` call
    when we receive `"Change page"`:'
  id: totrans-486
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在消费者模块 (`app/website/consumers.py`) 中包含了对 `"Change page"` 的 `send_page` 调用：
- en: '[PRE362]'
  id: totrans-487
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE362]'
- en: 'In action, we edit the `send_page` function, as we have done in previous projects,
    by adding the template context template:'
  id: totrans-488
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在实际操作中，我们通过添加模板上下文模板来编辑 `send_page` 函数，就像我们在以前的项目中所做的那样：
- en: '[PRE363]'
  id: totrans-489
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE363]'
- en: It is practically the same as the view in charge of displaying all items.
  id: totrans-490
  prefs: []
  type: TYPE_NORMAL
  zh: 这实际上与负责显示所有项目的视图相同。
- en: 'We can now move between pages and visualize where we are with the CSS styling:'
  id: totrans-491
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以通过 CSS 样式来在页面间移动并可视化我们的位置：
- en: '![Figure 7.6 – The browser shows that we are in All posts'
  id: totrans-492
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.6 – 浏览器显示我们处于“所有文章”页面'
- en: '](img/Figure_7.06_B18321.jpg)'
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.06_B18321.jpg](img/Figure_7.06_B18321.jpg)'
- en: Figure 7.6 – The browser shows that we are in All posts
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.6 – 浏览器显示我们处于“所有文章”页面
- en: We manage all cases. The visitor can navigate from any type of page, from a
    dynamic page to another where the content is static.
  id: totrans-495
  prefs: []
  type: TYPE_NORMAL
  zh: 我们管理所有情况。访客可以从任何类型的页面导航，从动态页面到内容静态的另一个页面。
- en: '![Figure 7.7 – The browser shows that we are in About us'
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.7 – 浏览器显示我们处于“关于我们”页面'
- en: '](img/Figure_7.07_B18321.jpg)'
  id: totrans-497
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.07_B18321.jpg](img/Figure_7.07_B18321.jpg)'
- en: Figure 7.7 – The browser shows that we are in About us
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.7 – 浏览器显示我们处于“关于我们”页面
- en: However, the dynamic page showing the full text of the article and comments
    is still missing. By having a system for navigation, it will be relatively easy
    to incorporate it.
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，显示文章全文和评论的动态页面仍然缺失。通过有一个导航系统，将其集成将相对容易。
- en: Implementing an individual page per article
  id: totrans-500
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现每个文章的独立页面
- en: We have the opportunity to create a page that renders an entire article, which
    will be the basis for the entire commenting system.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有机会创建一个渲染整篇文章的页面，这将作为整个评论系统的基石。
- en: 'We create the template in `app/website/templates/pages/single_post.html` with
    basic but sufficient HTML for the minimum `Post` fields:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 `app/website/templates/pages/single_post.html` 中创建模板，其中包含基本的但足以显示最小 `Post`
    字段的 HTML：
- en: '[PRE364]'
  id: totrans-503
  prefs: []
  type: TYPE_PRE
  zh: '[PRE364]'
- en: '[PRE365]'
  id: totrans-504
  prefs: []
  type: TYPE_PRE
  zh: '[PRE365]'
- en: '[PRE366]'
  id: totrans-505
  prefs: []
  type: TYPE_PRE
  zh: '[PRE366]'
- en: '[PRE367]'
  id: totrans-506
  prefs: []
  type: TYPE_PRE
  zh: '[PRE367]'
- en: '[PRE368]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE368]'
- en: '[PRE369]'
  id: totrans-508
  prefs: []
  type: TYPE_PRE
  zh: '[PRE369]'
- en: '[PRE370]'
  id: totrans-509
  prefs: []
  type: TYPE_PRE
  zh: '[PRE370]'
- en: '[PRE371]'
  id: totrans-510
  prefs: []
  type: TYPE_PRE
  zh: '[PRE371]'
- en: '[PRE372]'
  id: totrans-511
  prefs: []
  type: TYPE_PRE
  zh: '[PRE372]'
- en: '[PRE373]'
  id: totrans-512
  prefs: []
  type: TYPE_PRE
  zh: '[PRE373]'
- en: '[PRE374]'
  id: totrans-513
  prefs: []
  type: TYPE_PRE
  zh: '[PRE374]'
- en: '[PRE375]'
  id: totrans-514
  prefs: []
  type: TYPE_PRE
  zh: '[PRE375]'
- en: '[PRE376]'
  id: totrans-515
  prefs: []
  type: TYPE_PRE
  zh: '[PRE376]'
- en: Now, we are going to focus on server-side rendering by creating the view and
    its path.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将专注于服务器端渲染，通过创建视图及其路径。
- en: 'In `app/website/views.py`, we include the following function:'
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `app/website/views.py` 中，我们包含了以下函数：
- en: '[PRE377]'
  id: totrans-518
  prefs: []
  type: TYPE_PRE
  zh: '[PRE377]'
- en: '[PRE378]'
  id: totrans-519
  prefs: []
  type: TYPE_PRE
  zh: '[PRE378]'
- en: '[PRE379]'
  id: totrans-520
  prefs: []
  type: TYPE_PRE
  zh: '[PRE379]'
- en: '[PRE380]'
  id: totrans-521
  prefs: []
  type: TYPE_PRE
  zh: '[PRE380]'
- en: '[PRE381]'
  id: totrans-522
  prefs: []
  type: TYPE_PRE
  zh: '[PRE381]'
- en: '[PRE382]'
  id: totrans-523
  prefs: []
  type: TYPE_PRE
  zh: '[PRE382]'
- en: '[PRE383]'
  id: totrans-524
  prefs: []
  type: TYPE_PRE
  zh: '[PRE383]'
- en: '[PRE384]'
  id: totrans-525
  prefs: []
  type: TYPE_PRE
  zh: '[PRE384]'
- en: '[PRE385]'
  id: totrans-526
  prefs: []
  type: TYPE_PRE
  zh: '[PRE385]'
- en: '[PRE386]'
  id: totrans-527
  prefs: []
  type: TYPE_PRE
  zh: '[PRE386]'
- en: Why use the `filter` function? As we have decided that the URL will be formed
    by a slug, when we receive the request to render the view, we will need to look
    for the post with the `slug` property. Django does not allow you to perform a
    query through a property. In other words, we will have to perform manual filtering.
  id: totrans-528
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么使用 `filter` 函数？因为我们已经决定 URL 将由一个 slug 组成，当我们收到渲染视图的请求时，我们需要查找具有 `slug` 属性的文章。Django
    不允许你通过属性进行查询。换句话说，我们不得不进行手动过滤。
- en: 'We incorporate the route in `blog/urls.py`:'
  id: totrans-529
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 `blog/urls.py` 中整合了路由：
- en: '[PRE387]'
  id: totrans-530
  prefs: []
  type: TYPE_PRE
  zh: '[PRE387]'
- en: '[PRE388]'
  id: totrans-531
  prefs: []
  type: TYPE_PRE
  zh: '[PRE388]'
- en: '[PRE389]'
  id: totrans-532
  prefs: []
  type: TYPE_PRE
  zh: '[PRE389]'
- en: '[PRE390]'
  id: totrans-533
  prefs: []
  type: TYPE_PRE
  zh: '[PRE390]'
- en: '[PRE391]'
  id: totrans-534
  prefs: []
  type: TYPE_PRE
  zh: '[PRE391]'
- en: 'Now, we need to incorporate a context, or a set of variables needed to render
    the new HTML, when the frontend request to switch pages. In `app/website/actions.py`,
    we add the following:'
  id: totrans-535
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要在前端请求切换页面时，整合一个上下文，或者一组用于渲染新 HTML 的变量。在 `app/website/actions.py` 中，我们添加了以下内容：
- en: '[PRE392]'
  id: totrans-536
  prefs: []
  type: TYPE_PRE
  zh: '[PRE392]'
- en: '[PRE393]'
  id: totrans-537
  prefs: []
  type: TYPE_PRE
  zh: '[PRE393]'
- en: '[PRE394]'
  id: totrans-538
  prefs: []
  type: TYPE_PRE
  zh: '[PRE394]'
- en: '[PRE395]'
  id: totrans-539
  prefs: []
  type: TYPE_PRE
  zh: '[PRE395]'
- en: '[PRE396]'
  id: totrans-540
  prefs: []
  type: TYPE_PRE
  zh: '[PRE396]'
- en: '[PRE397]'
  id: totrans-541
  prefs: []
  type: TYPE_PRE
  zh: '[PRE397]'
- en: '[PRE398]'
  id: totrans-542
  prefs: []
  type: TYPE_PRE
  zh: '[PRE398]'
- en: '[PRE399]'
  id: totrans-543
  prefs: []
  type: TYPE_PRE
  zh: '[PRE399]'
- en: '[PRE400]'
  id: totrans-544
  prefs: []
  type: TYPE_PRE
  zh: '[PRE400]'
- en: '[PRE401]'
  id: totrans-545
  prefs: []
  type: TYPE_PRE
  zh: '[PRE401]'
- en: '[PRE402]'
  id: totrans-546
  prefs: []
  type: TYPE_PRE
  zh: '[PRE402]'
- en: '[PRE403]'
  id: totrans-547
  prefs: []
  type: TYPE_PRE
  zh: '[PRE403]'
- en: '[PRE404]'
  id: totrans-548
  prefs: []
  type: TYPE_PRE
  zh: '[PRE404]'
- en: '[PRE405]'
  id: totrans-549
  prefs: []
  type: TYPE_PRE
  zh: '[PRE405]'
- en: '[PRE406]'
  id: totrans-550
  prefs: []
  type: TYPE_PRE
  zh: '[PRE406]'
- en: '[PRE407]'
  id: totrans-551
  prefs: []
  type: TYPE_PRE
  zh: '[PRE407]'
- en: '[PRE408]'
  id: totrans-552
  prefs: []
  type: TYPE_PRE
  zh: '[PRE408]'
- en: 'At this moment, from the list of articles, we will be able to load the single
    template. Also, the path will change with the URL structure of the slug:'
  id: totrans-553
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个时刻，从文章列表中，我们将能够加载单个模板。同时，路径也将随着 slug 的 URL 结构而改变：
- en: '![Figure 7.8 – The individual article page is rendered'
  id: totrans-554
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.8 – 单篇文章页面已渲染'
- en: '](img/Figure_7.08_B18321.jpg)'
  id: totrans-555
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.08_B18321.jpg](img/Figure_7.08_B18321.jpg)'
- en: Figure 7.8 – The individual article page is rendered
  id: totrans-556
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 7.8 – 单篇文章页面已渲染'
- en: However, the page is not finished; we still need to list the comments at the
    bottom of the template and include a form to add new ones.
  id: totrans-557
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，页面还没有完成；我们仍然需要在模板底部列出评论并包含一个表单来添加新的评论。
- en: Adding a list of comments
  id: totrans-558
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加评论列表
- en: 'The blog is functional: we can list articles, navigate between pages, paginate,
    and perform a search. But an essential element is still missing: comments. That’s
    why we are going to print all the comments that belong to an article.'
  id: totrans-559
  prefs: []
  type: TYPE_NORMAL
  zh: 博客功能齐全：我们可以列出文章、在页面间导航、分页和进行搜索。但还缺少一个基本元素：评论。这就是为什么我们将打印属于一篇文章的所有评论。
- en: 'We start by creating a template that lists all the comments. We add a new component
    in `app/website/templates/components/_list_of_comments.html` with the following
    content:'
  id: totrans-560
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先创建一个列出所有评论的模板。我们在 `app/website/templates/components/_list_of_comments.html`
    中添加了一个新的组件，内容如下：
- en: '[PRE409]'
  id: totrans-561
  prefs: []
  type: TYPE_PRE
  zh: '[PRE409]'
- en: '[PRE410]'
  id: totrans-562
  prefs: []
  type: TYPE_PRE
  zh: '[PRE410]'
- en: '[PRE411]'
  id: totrans-563
  prefs: []
  type: TYPE_PRE
  zh: '[PRE411]'
- en: '[PRE412]'
  id: totrans-564
  prefs: []
  type: TYPE_PRE
  zh: '[PRE412]'
- en: 'This, in turn, will need the `app/website/templates/components/_single_comment.html`
    component:'
  id: totrans-565
  prefs: []
  type: TYPE_NORMAL
  zh: 这反过来又需要 `app/website/templates/components/_single_comment.html` 组件：
- en: '[PRE413]'
  id: totrans-566
  prefs: []
  type: TYPE_PRE
  zh: '[PRE413]'
- en: '[PRE414]'
  id: totrans-567
  prefs: []
  type: TYPE_PRE
  zh: '[PRE414]'
- en: '[PRE415]'
  id: totrans-568
  prefs: []
  type: TYPE_PRE
  zh: '[PRE415]'
- en: '[PRE416]'
  id: totrans-569
  prefs: []
  type: TYPE_PRE
  zh: '[PRE416]'
- en: '[PRE417]'
  id: totrans-570
  prefs: []
  type: TYPE_PRE
  zh: '[PRE417]'
- en: 'In the views (`app/website/views.py`), we make a query with all the comments
    that belong to the post we are viewing and send it to the template:'
  id: totrans-571
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图 (`app/website/views.py`) 中，我们查询属于我们正在查看的帖子的所有评论，并将其发送到模板：
- en: '[PRE418]'
  id: totrans-572
  prefs: []
  type: TYPE_PRE
  zh: '[PRE418]'
- en: '[PRE419]'
  id: totrans-573
  prefs: []
  type: TYPE_PRE
  zh: '[PRE419]'
- en: '[PRE420]'
  id: totrans-574
  prefs: []
  type: TYPE_PRE
  zh: '[PRE420]'
- en: '[PRE421]'
  id: totrans-575
  prefs: []
  type: TYPE_PRE
  zh: '[PRE421]'
- en: '[PRE422]'
  id: totrans-576
  prefs: []
  type: TYPE_PRE
  zh: '[PRE422]'
- en: '[PRE423]'
  id: totrans-577
  prefs: []
  type: TYPE_PRE
  zh: '[PRE423]'
- en: '[PRE424]'
  id: totrans-578
  prefs: []
  type: TYPE_PRE
  zh: '[PRE424]'
- en: '[PRE425]'
  id: totrans-579
  prefs: []
  type: TYPE_PRE
  zh: '[PRE425]'
- en: '[PRE426]'
  id: totrans-580
  prefs: []
  type: TYPE_PRE
  zh: '[PRE426]'
- en: '[PRE427]'
  id: totrans-581
  prefs: []
  type: TYPE_PRE
  zh: '[PRE427]'
- en: We can now display a list of comments on the article.
  id: totrans-582
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在可以显示文章上的评论列表。
- en: '![Figure 7.9 – All comments are rendered on the article page'
  id: totrans-583
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.9 – 所有评论都渲染在文章页面上'
- en: '](img/Figure_7.09_B18321.jpg)'
  id: totrans-584
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.09_B18321.jpg)'
- en: Figure 7.9 – All comments are rendered on the article page
  id: totrans-585
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.9 – 所有评论都渲染在文章页面上
- en: 'However, to also display comments when we dynamically change pages, we must
    include the comment variable inside `send_page` in actions:'
  id: totrans-586
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，为了在动态更改页面时也显示评论，我们必须在操作中的 `send_page` 内包含评论变量：
- en: '[PRE428]'
  id: totrans-587
  prefs: []
  type: TYPE_PRE
  zh: '[PRE428]'
- en: '[PRE429]'
  id: totrans-588
  prefs: []
  type: TYPE_PRE
  zh: '[PRE429]'
- en: '[PRE430]'
  id: totrans-589
  prefs: []
  type: TYPE_PRE
  zh: '[PRE430]'
- en: '[PRE431]'
  id: totrans-590
  prefs: []
  type: TYPE_PRE
  zh: '[PRE431]'
- en: '[PRE432]'
  id: totrans-591
  prefs: []
  type: TYPE_PRE
  zh: '[PRE432]'
- en: '[PRE433]'
  id: totrans-592
  prefs: []
  type: TYPE_PRE
  zh: '[PRE433]'
- en: '[PRE434]'
  id: totrans-593
  prefs: []
  type: TYPE_PRE
  zh: '[PRE434]'
- en: '[PRE435]'
  id: totrans-594
  prefs: []
  type: TYPE_PRE
  zh: '[PRE435]'
- en: '[PRE436]'
  id: totrans-595
  prefs: []
  type: TYPE_PRE
  zh: '[PRE436]'
- en: '[PRE437]'
  id: totrans-596
  prefs: []
  type: TYPE_PRE
  zh: '[PRE437]'
- en: '[PRE438]'
  id: totrans-597
  prefs: []
  type: TYPE_PRE
  zh: '[PRE438]'
- en: 'We will now incorporate a form for visitors to add comments. But that’s not
    all: we have generated random information, article listings, a single page per
    article, a system for dynamically switching between pages, a browser, a search
    engine, and a server-side rendering system. At the moment, we have a very interesting
    blog. Next, we’ll see how to add new comments.'
  id: totrans-598
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将包含一个供访客添加评论的表单。但不仅如此：我们已经生成了随机信息、文章列表、每篇文章的单页、动态切换页面的系统、浏览器、搜索引擎和服务器端渲染系统。目前，我们有一个非常有趣的博客。接下来，我们将看到如何添加新的评论。
- en: Adding new comments
  id: totrans-599
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加新评论
- en: If all the comments were written by us, it would be a bit immoral. We’re going
    to incorporate a form so that anyone reading the article can leave a personal
    opinion. If you don’t like what they say, you can always "manage" it with Django’s
    admin panel. But for now, let’s not be tricky; let’s focus on the more technical
    side.
  id: totrans-600
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有评论都是我们写的，那就有点不道德了。我们将包含一个表单，以便任何阅读文章的人都可以留下个人意见。如果你不喜欢他们说的话，你总是可以用 Django
    的管理面板来“管理”它。但现在，让我们不要玩弄技巧；让我们专注于更技术的一面。
- en: 'First, we add the following form in `app/website/forms.py`:'
  id: totrans-601
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们在 `app/website/forms.py` 中添加以下表单：
- en: '[PRE439]'
  id: totrans-602
  prefs: []
  type: TYPE_PRE
  zh: '[PRE439]'
- en: '[PRE440]'
  id: totrans-603
  prefs: []
  type: TYPE_PRE
  zh: '[PRE440]'
- en: '[PRE441]'
  id: totrans-604
  prefs: []
  type: TYPE_PRE
  zh: '[PRE441]'
- en: '[PRE442]'
  id: totrans-605
  prefs: []
  type: TYPE_PRE
  zh: '[PRE442]'
- en: '[PRE443]'
  id: totrans-606
  prefs: []
  type: TYPE_PRE
  zh: '[PRE443]'
- en: '[PRE444]'
  id: totrans-607
  prefs: []
  type: TYPE_PRE
  zh: '[PRE444]'
- en: '[PRE445]'
  id: totrans-608
  prefs: []
  type: TYPE_PRE
  zh: '[PRE445]'
- en: '[PRE446]'
  id: totrans-609
  prefs: []
  type: TYPE_PRE
  zh: '[PRE446]'
- en: '[PRE447]'
  id: totrans-610
  prefs: []
  type: TYPE_PRE
  zh: '[PRE447]'
- en: '[PRE448]'
  id: totrans-611
  prefs: []
  type: TYPE_PRE
  zh: '[PRE448]'
- en: '[PRE449]'
  id: totrans-612
  prefs: []
  type: TYPE_PRE
  zh: '[PRE449]'
- en: '[PRE450]'
  id: totrans-613
  prefs: []
  type: TYPE_PRE
  zh: '[PRE450]'
- en: '[PRE451]'
  id: totrans-614
  prefs: []
  type: TYPE_PRE
  zh: '[PRE451]'
- en: '[PRE452]'
  id: totrans-615
  prefs: []
  type: TYPE_PRE
  zh: '[PRE452]'
- en: '[PRE453]'
  id: totrans-616
  prefs: []
  type: TYPE_PRE
  zh: '[PRE453]'
- en: '[PRE454]'
  id: totrans-617
  prefs: []
  type: TYPE_PRE
  zh: '[PRE454]'
- en: '[PRE455]'
  id: totrans-618
  prefs: []
  type: TYPE_PRE
  zh: '[PRE455]'
- en: '[PRE456]'
  id: totrans-619
  prefs: []
  type: TYPE_PRE
  zh: '[PRE456]'
- en: '[PRE457]'
  id: totrans-620
  prefs: []
  type: TYPE_PRE
  zh: '[PRE457]'
- en: '[PRE458]'
  id: totrans-621
  prefs: []
  type: TYPE_PRE
  zh: '[PRE458]'
- en: 'There is an important difference with respect to the search engine form: we
    use `ModelForm`. Now we can create a new comment from the form object itself.'
  id: totrans-622
  prefs: []
  type: TYPE_NORMAL
  zh: 与搜索引擎表单相比，有一个重要的区别：我们使用 `ModelForm`。现在我们可以从表单对象本身创建新的评论。
- en: 'In the views (`app/website/views.py`), we import and include the form object
    in the template:'
  id: totrans-623
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图 (`app/website/views.py`) 中，我们导入并包含表单对象到模板中：
- en: '[PRE459]'
  id: totrans-624
  prefs: []
  type: TYPE_PRE
  zh: '[PRE459]'
- en: '[PRE460]'
  id: totrans-625
  prefs: []
  type: TYPE_PRE
  zh: '[PRE460]'
- en: '[PRE461]'
  id: totrans-626
  prefs: []
  type: TYPE_PRE
  zh: '[PRE461]'
- en: '[PRE462]'
  id: totrans-627
  prefs: []
  type: TYPE_PRE
  zh: '[PRE462]'
- en: '[PRE463]'
  id: totrans-628
  prefs: []
  type: TYPE_PRE
  zh: '[PRE463]'
- en: '[PRE464]'
  id: totrans-629
  prefs: []
  type: TYPE_PRE
  zh: '[PRE464]'
- en: '[PRE465]'
  id: totrans-630
  prefs: []
  type: TYPE_PRE
  zh: '[PRE465]'
- en: '[PRE466]'
  id: totrans-631
  prefs: []
  type: TYPE_PRE
  zh: '[PRE466]'
- en: '[PRE467]'
  id: totrans-632
  prefs: []
  type: TYPE_PRE
  zh: '[PRE467]'
- en: '[PRE468]'
  id: totrans-633
  prefs: []
  type: TYPE_PRE
  zh: '[PRE468]'
- en: '[PRE469]'
  id: totrans-634
  prefs: []
  type: TYPE_PRE
  zh: '[PRE469]'
- en: 'Now, in `app/website/templates/pages/single_post.html`, we render the form:'
  id: totrans-635
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在 `app/website/templates/pages/single_post.html` 中，我们渲染表单：
- en: '[PRE470]'
  id: totrans-636
  prefs: []
  type: TYPE_PRE
  zh: '[PRE470]'
- en: '[PRE471]'
  id: totrans-637
  prefs: []
  type: TYPE_PRE
  zh: '[PRE471]'
- en: '[PRE472]'
  id: totrans-638
  prefs: []
  type: TYPE_PRE
  zh: '[PRE472]'
- en: '[PRE473]'
  id: totrans-639
  prefs: []
  type: TYPE_PRE
  zh: '[PRE473]'
- en: '[PRE474]'
  id: totrans-640
  prefs: []
  type: TYPE_PRE
  zh: '[PRE474]'
- en: '[PRE475]'
  id: totrans-641
  prefs: []
  type: TYPE_PRE
  zh: '[PRE475]'
- en: '[PRE476]'
  id: totrans-642
  prefs: []
  type: TYPE_PRE
  zh: '[PRE476]'
- en: '[PRE477]'
  id: totrans-643
  prefs: []
  type: TYPE_PRE
  zh: '[PRE477]'
- en: '[PRE478]'
  id: totrans-644
  prefs: []
  type: TYPE_PRE
  zh: '[PRE478]'
- en: '[PRE479]'
  id: totrans-645
  prefs: []
  type: TYPE_PRE
  zh: '[PRE479]'
- en: '[PRE480]'
  id: totrans-646
  prefs: []
  type: TYPE_PRE
  zh: '[PRE480]'
- en: '[PRE481]'
  id: totrans-647
  prefs: []
  type: TYPE_PRE
  zh: '[PRE481]'
- en: '[PRE482]'
  id: totrans-648
  prefs: []
  type: TYPE_PRE
  zh: '[PRE482]'
- en: '[PRE483]'
  id: totrans-649
  prefs: []
  type: TYPE_PRE
  zh: '[PRE483]'
- en: '[PRE484]'
  id: totrans-650
  prefs: []
  type: TYPE_PRE
  zh: '[PRE484]'
- en: '[PRE485]'
  id: totrans-651
  prefs: []
  type: TYPE_PRE
  zh: '[PRE485]'
- en: '[PRE486]'
  id: totrans-652
  prefs: []
  type: TYPE_PRE
  zh: '[PRE486]'
- en: 'By clicking on any item, you will be able to view the form:'
  id: totrans-653
  prefs: []
  type: TYPE_NORMAL
  zh: 点击任何项目，您将能够查看表单：
- en: '![Figure 7.10 – Render the form to add new comments'
  id: totrans-654
  prefs: []
  type: TYPE_NORMAL
  zh: '![图 7.10 – 渲染表单以添加新评论'
- en: '](img/Figure_7.10_B18321.jpg)'
  id: totrans-655
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_7.10_B18321.jpg)'
- en: Figure 7.10 – Render the form to add new comments
  id: totrans-656
  prefs: []
  type: TYPE_NORMAL
  zh: 图 7.10 – 渲染表单以添加新评论
- en: 'Now, we are going to process the form from the frontend. We capture the submit
    event and when it fires, we will get the three fields: author, content, and the
    article ID. We will send a request to execute the `"Add comment"` action.'
  id: totrans-657
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将处理前端表单。我们捕获提交事件，当它触发时，我们将获取三个字段：作者、内容和文章 ID。我们将发送一个请求来执行 `"Add comment"`
    操作。
- en: 'We add in `static/js/index.js` the following functions:'
  id: totrans-658
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 `static/js/index.js` 中添加了以下函数：
- en: '[PRE487]'
  id: totrans-659
  prefs: []
  type: TYPE_PRE
  zh: '[PRE487]'
- en: '[PRE488]'
  id: totrans-660
  prefs: []
  type: TYPE_PRE
  zh: '[PRE488]'
- en: '[PRE489]'
  id: totrans-661
  prefs: []
  type: TYPE_PRE
  zh: '[PRE489]'
- en: '[PRE490]'
  id: totrans-662
  prefs: []
  type: TYPE_PRE
  zh: '[PRE490]'
- en: '[PRE491]'
  id: totrans-663
  prefs: []
  type: TYPE_PRE
  zh: '[PRE491]'
- en: '[PRE492]'
  id: totrans-664
  prefs: []
  type: TYPE_PRE
  zh: '[PRE492]'
- en: '[PRE493]'
  id: totrans-665
  prefs: []
  type: TYPE_PRE
  zh: '[PRE493]'
- en: '[PRE494]'
  id: totrans-666
  prefs: []
  type: TYPE_PRE
  zh: '[PRE494]'
- en: '[PRE495]'
  id: totrans-667
  prefs: []
  type: TYPE_PRE
  zh: '[PRE495]'
- en: '[PRE496]'
  id: totrans-668
  prefs: []
  type: TYPE_PRE
  zh: '[PRE496]'
- en: '[PRE497]'
  id: totrans-669
  prefs: []
  type: TYPE_PRE
  zh: '[PRE497]'
- en: '[PRE498]'
  id: totrans-670
  prefs: []
  type: TYPE_PRE
  zh: '[PRE498]'
- en: '[PRE499]'
  id: totrans-671
  prefs: []
  type: TYPE_PRE
  zh: '[PRE499]'
- en: '[PRE500]'
  id: totrans-672
  prefs: []
  type: TYPE_PRE
  zh: '[PRE500]'
- en: '[PRE501]'
  id: totrans-673
  prefs: []
  type: TYPE_PRE
  zh: '[PRE501]'
- en: '[PRE502]'
  id: totrans-674
  prefs: []
  type: TYPE_PRE
  zh: '[PRE502]'
- en: '[PRE503]'
  id: totrans-675
  prefs: []
  type: TYPE_PRE
  zh: '[PRE503]'
- en: '[PRE504]'
  id: totrans-676
  prefs: []
  type: TYPE_PRE
  zh: '[PRE504]'
- en: '[PRE505]'
  id: totrans-677
  prefs: []
  type: TYPE_PRE
  zh: '[PRE505]'
- en: '[PRE506]'
  id: totrans-678
  prefs: []
  type: TYPE_PRE
  zh: '[PRE506]'
- en: '[PRE507]'
  id: totrans-679
  prefs: []
  type: TYPE_PRE
  zh: '[PRE507]'
- en: '[PRE508]'
  id: totrans-680
  prefs: []
  type: TYPE_PRE
  zh: '[PRE508]'
- en: '[PRE509]'
  id: totrans-681
  prefs: []
  type: TYPE_PRE
  zh: '[PRE509]'
- en: '[PRE510]'
  id: totrans-682
  prefs: []
  type: TYPE_PRE
  zh: '[PRE510]'
- en: 'In the Consumer, `app/website/consumers.py`, we call the `add_comment` function
    inside actions if we receive `"Add comment"`:'
  id: totrans-683
  prefs: []
  type: TYPE_NORMAL
  zh: 在消费者 `app/website/consumers.py` 中，如果我们收到 `"Add comment"`，我们将在操作中调用 `add_comment`
    函数：
- en: '[PRE511]'
  id: totrans-684
  prefs: []
  type: TYPE_PRE
  zh: '[PRE511]'
- en: '[PRE512]'
  id: totrans-685
  prefs: []
  type: TYPE_PRE
  zh: '[PRE512]'
- en: '[PRE513]'
  id: totrans-686
  prefs: []
  type: TYPE_PRE
  zh: '[PRE513]'
- en: '[PRE514]'
  id: totrans-687
  prefs: []
  type: TYPE_PRE
  zh: '[PRE514]'
- en: 'To finish the flow, in actions (`app/website/actions.py`), we create the function
    that invokes the Consumer – `add_comment`:'
  id: totrans-688
  prefs: []
  type: TYPE_NORMAL
  zh: 为了完成流程，在操作 (`app/website/actions.py`) 中，我们创建了一个调用消费者 – `add_comment` 的函数：
- en: '[PRE515]'
  id: totrans-689
  prefs: []
  type: TYPE_PRE
  zh: '[PRE515]'
- en: '[PRE516]'
  id: totrans-690
  prefs: []
  type: TYPE_PRE
  zh: '[PRE516]'
- en: '[PRE517]'
  id: totrans-691
  prefs: []
  type: TYPE_PRE
  zh: '[PRE517]'
- en: '[PRE518]'
  id: totrans-692
  prefs: []
  type: TYPE_PRE
  zh: '[PRE518]'
- en: '[PRE519]'
  id: totrans-693
  prefs: []
  type: TYPE_PRE
  zh: '[PRE519]'
- en: '[PRE520]'
  id: totrans-694
  prefs: []
  type: TYPE_PRE
  zh: '[PRE520]'
- en: '[PRE521]'
  id: totrans-695
  prefs: []
  type: TYPE_PRE
  zh: '[PRE521]'
- en: '[PRE522]'
  id: totrans-696
  prefs: []
  type: TYPE_PRE
  zh: '[PRE522]'
- en: '[PRE523]'
  id: totrans-697
  prefs: []
  type: TYPE_PRE
  zh: '[PRE523]'
- en: '[PRE524]'
  id: totrans-698
  prefs: []
  type: TYPE_PRE
  zh: '[PRE524]'
- en: '[PRE525]'
  id: totrans-699
  prefs: []
  type: TYPE_PRE
  zh: '[PRE525]'
- en: '[PRE526]'
  id: totrans-700
  prefs: []
  type: TYPE_PRE
  zh: '[PRE526]'
- en: '[PRE527]'
  id: totrans-701
  prefs: []
  type: TYPE_PRE
  zh: '[PRE527]'
- en: '[PRE528]'
  id: totrans-702
  prefs: []
  type: TYPE_PRE
  zh: '[PRE528]'
- en: '[PRE529]'
  id: totrans-703
  prefs: []
  type: TYPE_PRE
  zh: '[PRE529]'
- en: '[PRE530]'
  id: totrans-704
  prefs: []
  type: TYPE_PRE
  zh: '[PRE530]'
- en: '[PRE531]'
  id: totrans-705
  prefs: []
  type: TYPE_PRE
  zh: '[PRE531]'
- en: '[PRE532]'
  id: totrans-706
  prefs: []
  type: TYPE_PRE
  zh: '[PRE532]'
- en: '[PRE533]'
  id: totrans-707
  prefs: []
  type: TYPE_PRE
  zh: '[PRE533]'
- en: '[PRE534]'
  id: totrans-708
  prefs: []
  type: TYPE_PRE
  zh: '[PRE534]'
- en: '[PRE535]'
  id: totrans-709
  prefs: []
  type: TYPE_PRE
  zh: '[PRE535]'
- en: '[PRE536]'
  id: totrans-710
  prefs: []
  type: TYPE_PRE
  zh: '[PRE536]'
- en: '[PRE537]'
  id: totrans-711
  prefs: []
  type: TYPE_PRE
  zh: '[PRE537]'
- en: '[PRE538]'
  id: totrans-712
  prefs: []
  type: TYPE_PRE
  zh: '[PRE538]'
- en: '[PRE539]'
  id: totrans-713
  prefs: []
  type: TYPE_PRE
  zh: '[PRE539]'
- en: '[PRE540]'
  id: totrans-714
  prefs: []
  type: TYPE_PRE
  zh: '[PRE540]'
- en: '[PRE541]'
  id: totrans-715
  prefs: []
  type: TYPE_PRE
  zh: '[PRE541]'
- en: '[PRE542]'
  id: totrans-716
  prefs: []
  type: TYPE_PRE
  zh: '[PRE542]'
- en: '[PRE543]'
  id: totrans-717
  prefs: []
  type: TYPE_PRE
  zh: '[PRE543]'
- en: '[PRE544]'
  id: totrans-718
  prefs: []
  type: TYPE_PRE
  zh: '[PRE544]'
- en: 'We are carrying out a set of actions that must be in the following order:'
  id: totrans-719
  prefs: []
  type: TYPE_NORMAL
  zh: 我们执行一系列操作，这些操作必须按以下顺序进行：
- en: We obtain the post from the ID received.
  id: totrans-720
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们从接收到的 ID 中获取帖子。
- en: We include the post inside the dictionary with all the information. We need
    to add the object to perform the validation of the form.
  id: totrans-721
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们在字典中包含了所有信息，并将帖子包含在内。我们需要添加一个对象来执行表单的验证。
- en: With the dictionary, we initialize the form.
  id: totrans-722
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用字典，我们初始化表单。
- en: We validate that the fields are correct. If they are not, the rest of the code
    will simply be ignored.
  id: totrans-723
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们验证字段是否正确。如果不正确，则其余代码将被简单地忽略。
- en: If they are correct, we create the new comment in the database with `form.save()`.
    The form knows which model to create because, internally, it is `ModelForm`, and
    we tell it in `forms.py`.
  id: totrans-724
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果它们是正确的，我们将使用 `form.save()` 在数据库中创建新的评论。表单知道要创建哪个模型，因为它是内部 `ModelForm`，我们在
    `forms.py` 中告诉它。
- en: We send to all connected clients the HTML of the new comment.
  id: totrans-725
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将新评论的 HTML 发送到所有连接的客户端。
- en: Not only is the comment validated and saved, but it is also sent to all readers
    of the article in real time. However, you should be aware that we are not giving
    feedback in case the fields are not valid. Simply, until all fields are filled
    in, the information will not be processed.
  id: totrans-726
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不仅评论经过验证并保存，而且还会实时发送给所有文章的读者。然而，您应该意识到，如果字段无效，我们不会提供反馈。简单来说，直到所有字段都填写完毕，信息才不会被处理。
- en: 'We could stop here, but there is still one detail that I think is indispensable
    if we create a blog: an RSS feed so that our future visitors can be informed of
    the latest news.'
  id: totrans-727
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在这里停止，但如果我们要创建一个博客，还有一个细节我认为是必不可少的：一个RSS订阅源，这样我们的未来访客就可以了解到最新的消息。
- en: Offering an RSS feed
  id: totrans-728
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供RSS订阅源
- en: Tech blogs are often consumed by robots, in particular by feed readers. If we
    want to build a feed in Django, it’s really convenient. Django incorporates a
    framework called **Syndication** that automates tasks such as dynamic generation
    of XML, fields, and caching.
  id: totrans-729
  prefs: []
  type: TYPE_NORMAL
  zh: 技术博客通常被机器人消费，特别是被订阅源消费。如果我们想在Django中构建一个订阅源，那是非常方便的。Django集成了一个名为**Syndication**的框架，它可以自动化诸如动态生成XML、字段和缓存等任务。
- en: 'In `app/website/feed.py`, we add the following class that inherits from `Feed`:'
  id: totrans-730
  prefs: []
  type: TYPE_NORMAL
  zh: 在`app/website/feed.py`中，我们添加以下从`Feed`继承的类：
- en: '[PRE545]'
  id: totrans-731
  prefs: []
  type: TYPE_PRE
  zh: '[PRE545]'
- en: '[PRE546]'
  id: totrans-732
  prefs: []
  type: TYPE_PRE
  zh: '[PRE546]'
- en: '[PRE547]'
  id: totrans-733
  prefs: []
  type: TYPE_PRE
  zh: '[PRE547]'
- en: '[PRE548]'
  id: totrans-734
  prefs: []
  type: TYPE_PRE
  zh: '[PRE548]'
- en: '[PRE549]'
  id: totrans-735
  prefs: []
  type: TYPE_PRE
  zh: '[PRE549]'
- en: '[PRE550]'
  id: totrans-736
  prefs: []
  type: TYPE_PRE
  zh: '[PRE550]'
- en: '[PRE551]'
  id: totrans-737
  prefs: []
  type: TYPE_PRE
  zh: '[PRE551]'
- en: '[PRE552]'
  id: totrans-738
  prefs: []
  type: TYPE_PRE
  zh: '[PRE552]'
- en: '[PRE553]'
  id: totrans-739
  prefs: []
  type: TYPE_PRE
  zh: '[PRE553]'
- en: '[PRE554]'
  id: totrans-740
  prefs: []
  type: TYPE_PRE
  zh: '[PRE554]'
- en: '[PRE555]'
  id: totrans-741
  prefs: []
  type: TYPE_PRE
  zh: '[PRE555]'
- en: '[PRE556]'
  id: totrans-742
  prefs: []
  type: TYPE_PRE
  zh: '[PRE556]'
- en: '[PRE557]'
  id: totrans-743
  prefs: []
  type: TYPE_PRE
  zh: '[PRE557]'
- en: '[PRE558]'
  id: totrans-744
  prefs: []
  type: TYPE_PRE
  zh: '[PRE558]'
- en: '[PRE559]'
  id: totrans-745
  prefs: []
  type: TYPE_PRE
  zh: '[PRE559]'
- en: '[PRE560]'
  id: totrans-746
  prefs: []
  type: TYPE_PRE
  zh: '[PRE560]'
- en: 'Finally, we include its path in `blog/urls.py`:'
  id: totrans-747
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们在`blog/urls.py`中包含其路径：
- en: '[PRE561]'
  id: totrans-748
  prefs: []
  type: TYPE_PRE
  zh: '[PRE561]'
- en: '[PRE562]'
  id: totrans-749
  prefs: []
  type: TYPE_PRE
  zh: '[PRE562]'
- en: '[PRE563]'
  id: totrans-750
  prefs: []
  type: TYPE_PRE
  zh: '[PRE563]'
- en: '[PRE564]'
  id: totrans-751
  prefs: []
  type: TYPE_PRE
  zh: '[PRE564]'
- en: '[PRE565]'
  id: totrans-752
  prefs: []
  type: TYPE_PRE
  zh: '[PRE565]'
- en: '[PRE566]'
  id: totrans-753
  prefs: []
  type: TYPE_PRE
  zh: '[PRE566]'
- en: You can give your favorite feed reader client the `http://blog.localhost/feed/`
    path. If you enter it directly from the browser, an XML file will be downloaded.
  id: totrans-754
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将您喜欢的订阅源客户端的路径`http://blog.localhost/feed/`提供给它们。如果您直接从浏览器中输入，将会下载一个XML文件。
- en: Summary
  id: totrans-755
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We could consider this chapter as a consummation of all the skills acquired
    throughout the book. Not only are we able to incorporate a WebSockets server into
    Django, through channels; we now also have techniques to create a real-time, single-page
    application using Python. We now have a deep knowledge that matches the results
    we can achieve with other similar projects, such as LiveView in Phoenix (the most
    popular framework in the Elixir ecosystem), StimulusReflex, Turbo, Action Cable,
    or Hotwire in Ruby on Rails.
  id: totrans-756
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将这一章视为本书所学所有技能的总结。我们不仅能够通过channels将WebSocket服务器集成到Django中，现在我们还拥有了使用Python创建实时、单页应用的技术。我们现在拥有与使用其他类似项目（如Elixir生态系统中最受欢迎的框架Phoenix中的LiveView、StimulusReflex、Turbo、Action
    Cable或Ruby on Rails中的Hotwire）所能实现的结果相匹配的深入知识。
- en: If we are looking to abstract part of the process, there are some frameworks
    within Django that can be useful, such as Django Sockpuppet or Django Reactor.
    Unfortunately, neither of them is receiving updates, although it is a great idea
    to find out how they are constructed in order to further expand our knowledge.
  id: totrans-757
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想要抽象部分过程，Django中存在一些框架可能很有用，例如Django Sockpuppet或Django Reactor。不幸的是，它们都没有收到更新，尽管了解它们的构建方式以进一步扩展我们的知识是一个很好的想法。
- en: Although the backend is covered, it is still cumbersome to work with the frontend.
    Events have to be redeclared on every draw, and there are tasks that we repeat
    recurrently on every element we want to manage. We need to simplify the process.
  id: totrans-758
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然后端已经覆盖，但与前端工作仍然很繁琐。每次绘制时都必须重新声明事件，而且我们重复执行的任务很多，每次都要管理每个元素。我们需要简化这个过程。
- en: In the next chapter, [*Chapter 8*](B18321_08_ePub.xhtml#_idTextAnchor173), *Simplifying
    the Frontend*, we will use a JavaScript event library specially designed to rebuild
    the DOM without altering the way it works.
  id: totrans-759
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章（[*第8章*](B18321_08_ePub.xhtml#_idTextAnchor173)）*简化前端*中，我们将使用一个专门设计用来重建DOM而不改变其工作方式的JavaScript事件库。
