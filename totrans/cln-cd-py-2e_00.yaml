- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Who this book is for?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is suitable for all software engineering practitioners who are interested
    in software design or learning more about Python. It is assumed that the reader
    is already familiar with the principles of object-oriented software design and
    has experience writing code.
  prefs: []
  type: TYPE_NORMAL
- en: It will appeal to team leads, software architects and senior software engineers
    who want to learn good Python coding techniques to create projects from scratch
    or work on their legacy systems to save costs and improve efficiency.
  prefs: []
  type: TYPE_NORMAL
- en: The book is organized in such a way that the content is in increasing order
    of complexity. The first chapters cover the basics of Python, which is a good
    way to learn the main idioms, functions, and utilities available in the language.
    The idea is not just to solve some problems with Python, but to do so in an idiomatic
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Experienced programmers will also benefit from the topics in this book, as some
    sections cover advanced topics in Python, such as decorators, descriptors, and
    an introduction to asynchronous programming. It will help the reader discover
    more about Python because some of the cases are analyzed from the internals of
    the language itself.
  prefs: []
  type: TYPE_NORMAL
- en: Scientists using Python for data processing can also benefit from the content
    of this book, and to that end, several parts of the book are dedicated to setting
    up projects from the ground up, in terms of tools, configuration of environments,
    and good practices to release software.
  prefs: []
  type: TYPE_NORMAL
- en: It is worth emphasizing the word "practitioners" in the first sentence of this
    section. This is a book that takes a pragmatic approach. Examples are limited
    to what the case study requires but are also intended to resemble the context
    of a real software project. It is not an academic book, and as such the definitions
    made, the remarks made, and the recommendations are to be taken with caution.
    The reader is expected to examine these recommendations critically and pragmatically
    rather than dogmatically. After all, practicality beats purity.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Introduction, Code Formatting, and Tools*, is an introduction
    to the main tools the reader needs to set up a development environment in Python.
    We cover the basics a Python developer is recommended to know to start working
    with the language effectively. It also includes some guidelines for maintaining
    readable code in the project, such as tools for static analysis, documentation,
    type checking, and code formatting. Having a common understanding of coding standards
    is a good thing but relying on good intentions only doesn''t scale. That''s why
    the chapter concludes by discussing tools to work more effectively.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Pythonic Code*, looks at the first idioms in Python, which we
    will continue to use in the following chapters. We cover the particular features
    of Python, how they are meant to be used, and in this chapter, we start building
    knowledge around the idea that Pythonic code is in general of much better quality.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*,*General Traits of Good Code*, reviews general principles of software
    engineering making the focus on writing more maintainable code. With the knowledge
    gained from the previous chapter, we take a look at general clean design ideas,
    and how they can be implemented in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *The SOLID Principles*, covers a set of design principles for
    object-oriented software design. This acronym is part of the language or jargon
    of software engineering, and we see how each one of them can be applied to Python.
    In particular, the reader will learn how dependency injection makes the code more
    maintainable, a concept that will be very useful in the next chapters.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Using Decorators to Improve Our Code*,looks at one of the greatest
    features of Python. After understanding how to create decorators (for functions
    and classes), we put them in action for reusing code, separating responsibilities,
    and creating more granular functions. Another interesting learning point from
    this chapter is how to use decorators to our advantage to simplify complex and
    repetitive function signatures.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*,*Getting More Out of Our Objects with Descriptors*,explores descriptors
    in Python, which take object-oriented design to a new level. While this is a feature
    more related to frameworks and tools, we can see how to improve the readability
    of our code with descriptors, and also reuse code. The content revisited in this
    chapter will make the reader achieve a higher level of understanding of Python.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*,*Generators, Iterators, and Asynchronous Programming*, starts by
    showing how generators are a fantastic feature of Python. The fact that iteration
    is a core component of Python could make us think that it leads to a new programming
    model. By using generators and iterators in general, we can think differently
    about the way we write our programs. With the lessons learned from generators,
    we go further and learn about coroutines in Python and the basics of asynchronous
    programming. This chapter wraps up by explaining the new syntax (and new magic
    methods!) for asynchronous programming and asynchronous iteration.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Unit Testing and Refactoring*, discusses the importance of unit
    tests in any codebase that claims to be maintainable. We discuss refactoring as
    a pre-requisite to evolve and maintain a code base, and how unit tests are critical
    for this. All of this, with the support of the proper tools (mainly the `unittest`
    and `pytest` modules). Finally, we learn how the secret for good testing lies
    not so much on the tests themselves, but on having testable code.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*,*Common Design Patterns*, reviews how to implement the most common
    design patterns in Python, not from the point of view of solving a problem, but
    by examining how they solve problems by leveraging a better and more maintainable
    solution. The chapter mentions the peculiarities of Python that have made some
    of the design patterns invisible and takes a pragmatic approach to implement some
    of them. We discuss other (not so "conventional") patterns that are Python-specific.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Clean Architecture*, focuses on the idea that clean code is
    the base of good architecture. All those details we mentioned in the first chapter,
    and everything else revisited along the way, will play a critical role in the
    entire design when the system is deployed.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The reader is expected to have some degree of programming experience and be
    somehow familiarized with the basics of Python's syntax. Also, basic programming
    knowledge, like structured programming, and knowledge of object-oriented design
    is assumed.
  prefs: []
  type: TYPE_NORMAL
- en: To test the code, you need to have Python installed, which can be downloaded
    from [https://www.python.org/downloads/](https://www.python.org/downloads/). The
    code runs with Python 3.9+, and the creation of a virtual environment is highly
    recommended. Alternative, the code can be tested in a Docker image.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The code bundle for the book is hosted on GitHub at [https://github.com/PacktPublishing/Clean-Code-in-Python-Second-Edition](https://github.com/PacktPublishing/Clean-Code-in-Python-Second-Edition).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781800560215_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781800560215_ColorImages.pdf)'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    For example; "Then, just running the `pylint` command is enough to check it in
    the code."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    the screen, for example, in menus or dialog boxes, also appear in the text like
    this. For example: "We would like a design with a better **separation of concerns**."'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book''s
    title in the subject of your message. If you have questions about any aspect of
    this book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit, [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [http://authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packtpub.com](http://packtpub.com).
  prefs: []
  type: TYPE_NORMAL
