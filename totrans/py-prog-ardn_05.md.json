["```py\n>>> import Tkinter\n>>> Tkinter._test()\n```", "```py\nimport Tkinter\n\n# Initialize main windows with title and size\ntop = Tkinter.Tk()\ntop.title(\"Hello GUI\")\ntop.minsize(200,30)\n\n# Label widget\nhelloLabel = Tkinter.Label(top, text = \"Hello World!\")\nhelloLabel.pack()\n\n# Start and open the window\ntop.mainloop()\n```", "```py\nTop = Tkinter.Tk()\ntop.title(\"Hello GUI\")\n```", "```py\ntop.minsize(200,30)\n```", "```py\ntop.mainloop()\n```", "```py\nhelloLabel = Tkinter.Label(top, text = \"Hello World!\")\n```", "```py\nhelloLabel.pack()\n```", "```py\nimport Tkinter\nimport pyfirmata\nfrom time import sleep\nport = '/dev/cu.usbmodemfa1331'\nboard = pyfirmata.Arduino(port)\nsleep(5)\nledPin = board.get_pin('d:11:o')\n```", "```py\ntop = Tkinter.Tk()\ntop.title(\"Blink LED using button\")\ntop.minsize(300,30)\n```", "```py\nstartButton = Tkinter.Button(top,\n                             text=\"Start\",\n                             command=onStartButtonPress)\nstartButton.pack()\n```", "```py\ndef onStartButtonPress():\n  startButton.config(state=Tkinter.DISABLED)\n  ledPin.write(1)\n  # LED is on for fix amount of time specified below\n  sleep(5)\n  ledPin.write(0)\n  startButton.config(state=Tkinter.ACTIVE)\n```", "```py\ntop = Tkinter.Tk()\ntop.title(\"Specify time using Entry\")\n```", "```py\ntimePeriodEntry = Tkinter.Entry(top,\n                                bd=5,\n                                width=25)\ntimePeriodEntry.pack()\ntimePeriodEntry.focus_set()\nstartButton = Tkinter.Button(top,\n                             text=\"Start\",\n                             command=onStartButtonPress)\nstartButton.pack()\n```", "```py\ndef onStartButtonPress():\n  # Value for delay is obtained from the Entry widget input\n  timePeriod = timePeriodEntry.get()\n  timePeriod = float(timePeriod)\n  startButton.config(state=Tkinter.DISABLED)\n  ledPin.write(1)\n  sleep(timePeriod)\n  ledPin.write(0)\n  startButton.config(state=Tkinter.ACTIVE)\n```", "```py\ntimePeriodEntry = Tkinter.Entry(top,\n                                bd=5,\n                                width=25)\ntimePeriodEntry.pack()\ntimePeriodEntry.focus_set()\n```", "```py\nbrightnessScale = Tkinter.Scale(top,\n                                from_=0, to=100,\n                                orient=Tkinter.HORIZONTAL)\nbrightnessScale.pack()\n```", "```py\nstartButton = Tkinter.Button(top,\n                             text=\"Start\",\n                             command=onStartButtonPress)\nstartButton.pack()\n```", "```py\ndef onStartButtonPress():\n  timePeriod = timePeriodEntry.get()\n  timePeriod = float(timePeriod)\n  ledBrightness = brightnessScale.get()\n  ledBrightness = float(ledBrightness)\n  startButton.config(state=Tkinter.DISABLED)\n  ledPin.write(ledBrightness/100.0)\n  sleep(timePeriod)\n  ledPin.write(0)\n  startButton.config(state=Tkinter.ACTIVE)\n```", "```py\ntimePeriodEntry = Tkinter.Entry(top, bd=5)\ntimePeriodEntry.grid(column=1, row=1)\ntimePeriodEntry.focus_set()\nTkinter.Label(top, text=\"Time (seconds)\").grid(column=2, row=1)\n```", "```py\nbrightnessScale = Tkinter.Scale(top, from_=0, to=100, orient=Tkinter.HORIZONTAL)\nbrightnessScale.grid(column=1, row=2)\nTkinter.Label(top, text=\"Brightness (%)\").grid(column=2, row=2)\n\nstartButton = Tkinter.Button(top, text=\"Start\", command=onStartButtonPress)\nstartButton.grid(column=1, row=3)\n```", "```py\nexitButton = Tkinter.Button(top,\n                            text=\"Exit\",\n                            command=top.quit)\nexitButton.grid(column=2, row=3)\n```", "```py\ntop.quit()\n```", "```py\nport = '/dev/cu.usbmodemfa1331'\nboard = pyfirmata.Arduino(port)\nsleep(5)\nredPin = board.get_pin('d:10:o')\ngreenPin = board.get_pin('d:11:o')\n```", "```py\nredVar = Tkinter.IntVar()\nredCheckBox = Tkinter.Checkbutton(top,\n                                  text=\"Red LED\",\n                                  variable=redVar)\nredCheckBox.grid(column=1, row=1)\n```", "```py\ngreenVar = Tkinter.IntVar()\ngreenCheckBox = Tkinter.Checkbutton(top,\n                                    text=\"Green LED\",\n                                    variable=greenVar)\ngreenCheckBox.grid(column=2, row=1)\n```", "```py\ndef onStartButtonPress():\n  redPin.write(redVar.get())\n  greenPin.write(greenVar.get())\n```", "```py\nstopButton = Tkinter.Button(top,\n                            text=\"Stop\",\n                            command=onStopButtonPress)\nstopButton.grid(column=2, row=2)\n```", "```py\ndef onStopButtonPress():\n  redPin.write(0)\n  greenPin.write(0)\n```", "```py\n    flag = Tkinter.BooleanVar(top)\n    flag.set(True)\n    ```", "```py\n    AnalogReadLabel.update_idletasks()\n    ```", "```py\n    top.update()\n    ```", "```py\ndef onStartButtonPress():\n  while True:\n    if flag.get():\n      analogReadLabel.config(text=str(a0.read()))\n      analogReadLabel.update_idletasks()\n      top.update()\n    else:\n      break\n  board.exit()\n  top.destroy()\n```", "```py\ndef onExitButtonPress():\n  flag.set(False)\n```", "```py\npirPin = board.get_pin('d:8:i')\nredPin = board.get_pin('d:10:o')\ngreenPin = board.get_pin('d:11:o')\npirPin.read()\n```", "```py\ndef blinkLED(pin, message):\n  MotionLabel.config(text=message)\n  MotionLabel.update_idletasks()\n  top.update()\n  pin.write(1)\n  sleep(1)\n  pin.write(0)\n  sleep(1)\n```", "```py\ndef onStartButtonPress():\n  while True:\n    if flag.get():\n      if pirPin.read() is True:\n        blinkLED(redPin, \"Motion Detected\")\n      else:\n        blinkLED(greenPin, \"No motion Detected\")\n    else:\n      break\n  board.exit()\n  top.destroy()\n```"]