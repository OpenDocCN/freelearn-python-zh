["```py\nimport time\nimport RPi.GPIO as GPIO\nimport Adafruit_ADS1x15\nwater_valve_pin = 23\nmoisture_percentage = 20\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nGPIO.setup(water_valve_pin, GPIO.OUT)\nadc = Adafruit_ADS1x15.ADS1115()\nchannel = 0\nGAIN = 1\nwhile True:\n adc.start_adc(channel, gain=GAIN)\n moisture_value = adc.get_last_result()\n moisture_value= int(moisture_value/327)\n print moisture_value\n if moisture_value < moisture_percentage:\n GPIO.output(water_valve_pin, GPIO.HIGH)\n time.sleep(5)\n else:\n GPIO.output(water_valve_pin, GPIO.LOW)\n```", "```py\nmoisture_percentage = 20\n```", "```py\nmoisture_value = int(moisture_value/327)\n```", "```py\nfrom time import sleep\nfrom datetime import datetime\nimport RPi.GPIO as GPIO\nimport Adafruit_ADS1x15\nwater_valve_pin = 23\nmoisture_percentage = 20\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nGPIO.setup(water_valve_pin, GPIO.OUT)\nadc = Adafruit_ADS1x15.ADS1115()\nGAIN = 1\ndef check_moisture():\n adc.start_adc(0,gain= GAIN)\n moisture_value = adc.get_last_result()\n moisture_value = int(moisture_value/327)\n if moisture_value < moisture_level:\n GPIO.output(water_valve_pin, GPIO.HIGH)\n sleep(5)\n GPIO.output(water_valve_pin, GPIO.LOW)\n else:\n GPIO.output(water_valve_pin, GPIO.LOW)\nwhile True:\n H = datetime.now().strftime('%H')\n M = datetime.now().strftime('%M')\n if H == ‘07’ and M <= ‘10’:\n check_moisture()\n if H == ‘17’ and M <= ‘01’:\n check_moisture()\n```", "```py\nfrom datetime import datetime\n```", "```py\ndef check_moisture():\n```", "```py\n moisture_value = adc.get_last_result()\n```", "```py\nH = datetime.now().strftime('%H')\n```", "```py\nif H == ‘07’ and M <= ‘10’:\n```", "```py\ncheck_moisture()\n```", "```py\nsudo apt-get update\n```", "```py\nsudo apt-get install build-essential python-dev python-openssl\n```", "```py\nsudo python setup.py install\n```", "```py\nfrom time import sleep\nfrom datetime import datetime\nimport RPi.GPIO as GPIO\nimport Adafruit_DHT\nsensor = 11\npin = 4\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nwhile True:\n humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n print(\"Temperature: \" +temperature+ \"C\")\n print(\"Humidity: \" +humidity+ \"%\")\n time.sleep(2)\n```", "```py\nimport Adafruit_DHT\n```", "```py\nsensor = 11 \n```", "```py\npin = 4  \n```", "```py\nhumidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n```", "```py\nfrom time import sleep\nfrom datetime import datetime\nimport RPi.GPIO as GPIO\nimport Adafruit_ADS1x15\nimport Adafruit_DHT\nwater_valve_pin = 23\nsensor = 11\npin = 4\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nGPIO.setup(water_valve_pin, GPIO.OUT)\nChannel =0\nGAIN = 1\nadc = Adafruit_ADS1x15.ADS1115()\ndef check_moisture(m):\n adc.start_adc(channel, gain=GAIN)\n moisture_value = adc.get_last_result()\n moisture_value = int(moisture_value/327)\n print moisture_value\n if moisture_value < m:\n GPIO.output(water_valve_pin, GPIO.HIGH)\n sleep(5)\n GPIO.output(water_valve_pin, GPIO.LOW)\n else:\n GPIO.output(water_valve_pin, GPIO.LOW)\nwhile True:\n humidity, temperature = Adafruit_DHT.read_retry(sensor, pin)\n H = datetime.now().strftime(‘%H’)\n M = datetime.now().strftime(‘%M’)\n if H == ‘07’ and M <= ‘10’:\n if temperature < 15:\n check_moisture(20)\n elif temperature >= 15 and temperature < 28:\n check_moisture(30)\n elif temperature >= 28:\n check_moisture(40)\n if H == ‘17’ and M <= ‘10’:\n if temperature < 15:\n\n check_moisture(20)\n elif temperature >= 15 and temperature < 28:\n check_moisture(30)\n elif temperature >= 28:\n check_moisture(40)\n```", "```py\ndef check_moisture(m):\n  adc.start_adc(channel, gain = GAIN)\n\nmoisture_value = adc.get_last_result()\nmoisture_value = int(moisture_value / 327)\nprint moisture_value\n\nif moisture_value < m:\n  GPIO.output(water_valve_pin, GPIO.HIGH)\n  sleep(5)\n  GPIO.output(water_valve_pin, GPIO.LOW)\nelse :\n  GPIO.output(water_valve_pin, GPIO.LOW)\n```", "```py\n   if moisture_value < m:\n```", "```py\n            if temperature < 15:\n                check_moisture(20)\n```", "```py\n elif temperature >= 15 and temperature < 28:\n                check_moisture(30)\n```", "```py\n elif temperature >= 28:\n                check_moisture(40)\n```"]