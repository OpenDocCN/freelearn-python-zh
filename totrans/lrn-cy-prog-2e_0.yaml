- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Cython is a tool that makes writing native extensions to Python as easy as writing
    them in Python. For those who are unaware, you can implement Python modules as
    pure the C code, which will, for all intents and purposes, look and act like any
    Python code. This is required when implementing modules in Python, such as the
    built-in zip module which use native zlib under the hood. Doing this makes sense
    for the standard library modules part of Python, though for most users of Python,
    writing native modules should be the last course of action if possible.
  prefs: []
  type: TYPE_NORMAL
- en: Writing native modules is hard and requires prerequisite knowledge of how to
    use the garbage collector calls correctly in order to avoid memory leaks. It also
    requires an understanding of how the GIL is used, which changes if you are using
    CPython or PyPy. It also requires knowledge of the module structures and argument
    passing internally to the Python runtime. Therefore, it isn't a trivial process
    when the need arises. Cython lets us write and work with the native code without
    having to know anything about the Python runtime. We can write almost pure Python
    code that just so happens to let us manipulate C/C++ types and classes. We can
    call back and forth from the native code and into the Python code.
  prefs: []
  type: TYPE_NORMAL
- en: More importantly, Cython removes the complexity and intrinsicity and lets the
    programmer focus on solving problems.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Cython Won''t Bite"), *Cython Won''t Bite*,
    introduces core concepts and demonstrates Cython "Hello World". It discusses the
    typing and type conversion.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Understanding Cython"), *Understanding Cython*,
    acts as a reference throughout the book. We look at custom C types and function
    pointers. Using this, we will successfully use Python modules directly from C
    code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Extending Applications"), *Extending Applications*,
    uses everything from the previous chapters to write native Tmux commands using
    Python instead of C/C++.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Debugging Cython"), *Debugging Cython*, uses
    the cygdb wrapper over gdb to debug Cython code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Advanced Cython"), *Advanced Cython*, introduces
    how well Cython can work with C++ classes and templates. In general, it also covers
    caveats in Cython.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Further Reading"), *Further Reading*, briefly
    looks at the related projects and interesting sources of new learning.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For this book, I used my MacBook and an Ubuntu virtual machine (GDB is too
    old on Mac OS X for debugging). You will require the following on Mac OS X:'
  prefs: []
  type: TYPE_NORMAL
- en: Xcode
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cython
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: GCC/Clang
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Make
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python con g
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Python distutils
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'On Ubuntu/Debian you can install everything via the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: I will go over this in the introduction, but as long as you have a working C
    compiler and Python along with Python libraries and headers installed, you will
    have everything you need for Cython.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is intended for C/C++ developers who like using Python and Python
    users wanting to implement native C/C++ extensions to Python. As a reader, you
    can expect to be shown how you can develop applications with Cython with an emphasis
    on extending existing systems and with help on how you can approach it.
  prefs: []
  type: TYPE_NORMAL
- en: Extending legacy systems can be difficult, but the rewards can be great. Consider
    low-level thread-aware or I/O-sensitive operations in C and maintain the logic
    handled and provided by Python. This model of development can prove to be efficient
    and of great return to the development time, which can be particularly expensive
    when it comes to C applications.
  prefs: []
  type: TYPE_NORMAL
- en: It also allows for much more rapid development of the state or logic in a system.
    There is no need to worry about long data conversion algorithms in C to do small
    things and then needing to change them all again.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    preferred one would be to use `pip`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "Clicking the **Next** button moves you to the next screen."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Download.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
