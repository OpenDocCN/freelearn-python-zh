["```py\nPOST http://localhost:8000/toys/ \n```", "```py\nGET http://localhost:8000/toys/{id} \n```", "```py\nPUT http://localhost:8000/toys/{id}\n```", "```py\nDELETE http://localhost:8000/toys/{id} \n```", "```py\nfrom django.db import models \n\n# Create your models here. \n```", "```py\nfrom django.db import models \n\nclass Toy(models.Model): \n    created = models.DateTimeField(auto_now_add=True) \n    name = models.CharField(max_length=150, blank=False, default='') \n    description = models.CharField(max_length=250, blank=True, default='') \n    toy_category = models.CharField(max_length=200, blank=False, default='') \n    release_date = models.DateTimeField() \n    was_included_in_home = models.BooleanField(default=False) \n\n    class Meta: \n        ordering = ('name',)\n```", "```py\n    python manage.py makemigrations toys  \n```", "```py\n    Migrations for 'toys':\n      toys/migrations/0001_initial.py:\n        - Create model Toy\n```", "```py\n# -*- coding: utf-8 -*- \n# Generated by Django 1.11.5 on 2017-10-08 05:19 \nfrom __future__ import unicode_literals \n\nfrom django.db import migrations, models \n\nclass Migration(migrations.Migration): \n\n    initial = True \n\n    dependencies = [ \n    ] \n\n    operations = [ \n        migrations.CreateModel( \n            name='Toy', \n            fields=[ \n                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')), \n                ('created', models.DateTimeField(auto_now_add=True)), \n                ('name', models.CharField(default='', max_length=150)), \n                ('description', models.CharField(blank=True, default='', max_length=250)), \n                ('toy_category', models.CharField(default='', max_length=200)), \n                ('release_date', models.DateTimeField()), \n                ('was_included_in_home', models.BooleanField(default=False)), \n            ], \n            options={ \n                'ordering': ('name',), \n            }, \n        ), \n    ] \n```", "```py\n    python manage.py migrate\n```", "```py\n    Operations to perform:\n      Apply all migrations: admin, auth, contenttypes, sessions, toys\n    Running migrations:\n      Applying contenttypes.0001_initial... OK\n      Applying auth.0001_initial... OK\n      Applying admin.0001_initial... OK\n      Applying admin.0002_logentry_remove_auto_add... OK\n      Applying contenttypes.0002_remove_content_type_name... OK\n      Applying auth.0002_alter_permission_name_max_length... OK\n      Applying auth.0003_alter_user_email_max_length... OK\n      Applying auth.0004_alter_user_username_opts... OK\n      Applying auth.0005_alter_user_last_login_null... OK\n      Applying auth.0006_require_contenttypes_0002... OK\n      Applying auth.0007_alter_validators_add_error_messages... OK\n      Applying auth.0008_alter_user_username_max_length... OK\n      Applying sessions.0001_initial... OK\n      Applying toys.0001_initial... OK\n\n```", "```py\n    sqlite3 db.sqlite3 \".tables\" \n```", "```py\n    auth_group                  django_admin_log\n    auth_group_permissions      django_content_type\n    auth_permission             django_migrations\n    auth_user                   django_session\n    auth_user_groups            toys_toy\n    auth_user_user_permissions  \n```", "```py\n    sqlite3 db.sqlite3 \"SELECT * FROM toys_toy ORDER BY name;\" \n```", "```py\nDATABASES = { \n    'default': { \n        'ENGINE': 'django.db.backends.sqlite3', \n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), \n    } \n} \n```", "```py\n    sqlite3 db.sqlite3 \".schema toys_toy\"\n```", "```py\n    CREATE TABLE IF NOT EXISTS \"toys_toy\" \n    (\n        \"id\" integer NOT NULL PRIMARY KEY AUTOINCREMENT,\n    \"created\" datetime NOT NULL, \n    \"name\" varchar(150) NOT NULL, \n    \"description\" varchar(250) NOT NULL, \n    \"toy_category\" varchar(200) NOT NULL, \n    \"release_date\" datetime NOT NULL, \n        \"was_included_in_home\" bool NOT NULL\n    );\n\n```", "```py\nfrom rest_framework import serializers \nfrom toys.models import Toy \n\nclass ToySerializer(serializers.Serializer): \n    pk = serializers.IntegerField(read_only=True) \n    name = serializers.CharField(max_length=150) \n    description = serializers.CharField(max_length=250) \n    release_date = serializers.DateTimeField() \n    toy_category = serializers.CharField(max_length=200) \n    was_included_in_home = serializers.BooleanField(required=False) \n\n    def create(self, validated_data): \n        return Toy.objects.create(**validated_data) \n\n    def update(self, instance, validated_data): \n        instance.name = validated_data.get('name', instance.name)         \n        instance.description = validated_data.get('description', instance.description) \n        instance.release_date = validated_data.get('release_date', instance.release_date) \n        instance.toy_category = validated_data.get('toy_category', instance.toy_category) \n        instance.was_included_in_home = validated_data.get('was_included_in_home', instance.was_included_in_home) \n        instance.save() \n        return instance \n```", "```py\npython manage.py shell\n```", "```py\nfrom datetime import datetime \nfrom django.utils import timezone \nfrom django.utils.six import BytesIO \nfrom rest_framework.renderers import JSONRenderer \nfrom rest_framework.parsers import JSONParser \nfrom toys.models import Toy \nfrom toys.serializers import ToySerializer \n```", "```py\ntoy_release_date = timezone.make_aware(datetime.now(), timezone.get_current_timezone()) \ntoy1 = Toy(name='Snoopy talking action figure', description='Snoopy speaks five languages', release_date=toy_release_date, toy_category='Action figures', was_included_in_home=False) \ntoy1.save() \ntoy2 = Toy(name='Hawaiian Barbie', description='Barbie loves Hawaii', release_date=toy_release_date, toy_category='Dolls', was_included_in_home=True) \ntoy2.save() \n```", "```py\nprint(toy1.pk) \nprint(toy1.name) \nprint(toy1.created) \nprint(toy1.was_included_in_home) \nprint(toy2.pk) \nprint(toy2.name) \nprint(toy2.created) \nprint(toy2.was_included_in_home)\n```", "```py\nserializer_for_toy1 = ToySerializer(toy1) \nprint(serializer_for_toy1.data) \n```", "```py\n    {\n    'pk': 1, \n    'name': 'Snoopy talking action figure', \n    'description': 'Snoopy speaks five languages', \n    'release_date': '2017-10-09T12:11:37.090335Z', \n    'toy_category': 'Action figures', \n        'was_included_in_home': False\n    }\n```", "```py\nserializer_for_toy2 = ToySerializer(toy2) \nprint(serializer_for_toy2.data)\n```", "```py\n    {\n    'pk': 2, \n    'name': 'Hawaiian Barbie', \n    'description': 'Barbie loves Hawaii', \n    'release_date': '2017-10-09T12:11:37.090335Z', \n    'toy_category': 'Dolls', \n        'was_included_in_home': True\n    }  \n```", "```py\njson_renderer = JSONRenderer() \ntoy1_rendered_into_json = json_renderer.render(serializer_for_toy1.data) \ntoy2_rendered_into_json = json_renderer.render(serializer_for_toy2.data) \nprint(toy1_rendered_into_json) \nprint(toy2_rendered_into_json) \n```", "```py\n    b'{\"pk\":1,\"name\":\"Snoopy talking action figure\",\"description\":\"Snoopy speaks five languages\",\"release_date\":\"2017-10-09T12:11:37.090335Z\",\"toy_category\":\"Action figures\",\"was_included_in_home\":false}'\n    >>> print(toy2_rendered_into_json)\n    b'{\"pk\":2,\"name\":\"Hawaiian Barbie\",\"description\":\"Barbie loves Hawaii\",\"release_date\":\"2017-10-09T12:11:37.090335Z\",\"toy_category\":\"Dolls\",\"was_included_in_home\":true}'  \n```", "```py\njson_string_for_new_toy = '{\"name\":\"Clash Royale play set\",\"description\":\"6 figures from Clash Royale\", \"release_date\":\"2017-10-09T12:10:00.776594Z\",\"toy_category\":\"Playset\",\"was_included_in_home\":false}' \njson_bytes_for_new_toy = bytes(json_string_for_new_toy, encoding=\"UTF-8\") \nstream_for_new_toy = BytesIO(json_bytes_for_new_toy) \nparser = JSONParser() \nparsed_new_toy = parser.parse(stream_for_new_toy) \nprint(parsed_new_toy) \n```", "```py\n  **{** \n    **'name': 'Clash Royale play set',** \n    **'description': '6 figures from Clash Royale',** \n    **'release_date': '2017-10-09T12:10:00.776594Z',** \n    **'toy_category': 'Playset',** \n    **    'was_included_in_home': False** \n\n      **}** \n```", "```py\nnew_toy_serializer = ToySerializer(data=parsed_new_toy) \nif new_toy_serializer.is_valid(): \n    toy3 = new_toy_serializer.save() \n    print(toy3.name)\n```", "```py\nquit() \n```"]