["```py\npython -m pip install djangorestframework==3.15.1 \n```", "```py\nINSTALLED_APPS = [\n    # ...\n**'rest_framework'****,**\n] \n```", "```py\nREST_FRAMEWORK = {\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'\n    ]\n} \n```", "```py\napi/\n    __init__.py\n    serializers.py \n```", "```py\nfrom rest_framework import serializers\nfrom courses.models import Subject\nclass SubjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Subject\n        fields = ['id', 'title', 'slug'] \n```", "```py\npython manage.py shell \n```", "```py\n>>> from courses.models import Subject\n>>> from courses.api.serializers import SubjectSerializer\n>>> subject = Subject.objects.latest('id')\n>>> serializer = SubjectSerializer(subject)\n>>> serializer.data\n{'id': 4, 'title': 'Programming', 'slug': 'programming'} \n```", "```py\n>>> from io import BytesIO\n>>> from rest_framework.parsers import JSONParser\n>>> data = b'{\"id\":4,\"title\":\"Programming\",\"slug\":\"programming\"}'\n>>> JSONParser().parse(BytesIO(data))\n{'id': 4, 'title': 'Programming', 'slug': 'programming'} \n```", "```py\n>>> from rest_framework.renderers import JSONRenderer\n>>> JSONRenderer().render(serializer.data) \n```", "```py\nb'{\"id\":4,\"title\":\"Programming\",\"slug\":\"programming\"}' \n```", "```py\nfrom rest_framework import generics\nfrom courses.api.serializers import SubjectSerializer\nfrom courses.models import Subject\nclass SubjectListView(generics.ListAPIView):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer\nclass SubjectDetailView(generics.RetrieveAPIView):\n    queryset = Subject.objects.all()\n    serializer_class = SubjectSerializer \n```", "```py\nfrom django.urls import path\nfrom . import views\napp_name = 'courses'\nurlpatterns = [\n    path(\n        'subjects/',\n        views.SubjectListView.as_view(),\n        name='subject_list'\n    ),\n    path(\n        'subjects/<pk>/',\n        views.SubjectDetailView.as_view(),\n        name='subject_detail'\n    ),\n] \n```", "```py\nurlpatterns = [\n    # ...\n **path(****'api/'****, include(****'courses.api.urls'****, namespace=****'api'****)),**\n] \n```", "```py\npython manage.py runserver \n```", "```py\ncurl http://127.0.0.1:8000/api/subjects/ \n```", "```py\n[\n    {\n        \"id\":1,\n        \"title\":\"Mathematics\",\n        \"slug\":\"mathematics\"\n    },\n    {\n        \"id\":2,\n        \"title\":\"Music\",\n        \"slug\":\"music\"\n    },\n    {\n        \"id\":3,\n        \"title\":\"Physics\",\n        \"slug\":\"physics\"\n    },\n    {\n        \"id\":4,\n        \"title\":\"Programming\",\n        \"slug\":\"programming\"\n    }\n] \n```", "```py\ncurl http://127.0.0.1:8000/api/subjects/ | json_pp \n```", "```py\n**from** **django.db.models** **import** **Count**\n# ...\nclass SubjectListView(generics.ListAPIView):\n    queryset = Subject.objects.**annotate(total_courses=Count(****'courses'****))**\n    serializer_class = SubjectSerializer\nclass SubjectDetailView(generics.RetrieveAPIView):\n    queryset = Subject.objects.**annotate(total_courses=Count(****'courses'****))**\n    serializer_class = SubjectSerializer \n```", "```py\nfrom rest_framework import serializers\nfrom courses.models import Subject\nclass SubjectSerializer(serializers.ModelSerializer):\n **total_courses = seralizers.IntegerField()**\nclass Meta:\n        model = Subject\n        fields = ['id', 'title', 'slug'**,** **'total_courses'**] \n```", "```py\n**from** **django.db.models** **import** **Count**\nfrom rest_framework import serializers\nfrom courses.models import Subject\nclass SubjectSerializer(serializers.ModelSerializer):\n    total_courses = serializers.IntegerField()\n **popular_courses = seralizers.SerializerMethodField()**\n**def****get_popular_courses****(****self, obj****):**\n **courses = obj.courses.annotate(**\n **total_students=Count(****'students'****)**\n **).order_by(****'****total_students'****)[:****3****]**\n**return** **[**\n**f'****{c.title}** **(****{c.total_students}****)'****for** **c** **in** **courses**\n **]**\nclass Meta:\n        model = Subject\n        fields = [\n            'id',\n            'title',\n            'slug',\n            'total_courses'**,**\n**'popular_courses'**\n        ] \n```", "```py\nfrom rest_framework.pagination import PageNumberPagination\nclass StandardPagination(PageNumberPagination):\n    page_size = 10\n    page_size_query_param = 'page_size'\n    max_page_size = 50 \n```", "```py\nfrom django.db.models import Count\nfrom rest_framework import generics\nfrom courses.models import Subject\n**from** **courses.api.pagination** **import** **StandardPagination**\nfrom courses.api.serializers import SubjectSerializer\nclass SubjectListView(generics.ListAPIView):\n    queryset = Subject.objects.annotate(total_courses=Count('courses'))\n    serializer_class = SubjectSerializer\n **pagination_class = StandardPagination**\n# ... \n```", "```py\n{\n\"count\": 4,\n\"next\": null,\n\"previous\": null,\n\"results\": [\n{\n\"id\": 1,\n\"title\": \"Mathematics\",\n            ...\n        },\n        ...\n    ]\n} \n```", "```py\n# ...\nfrom courses.models import **Course,** Subject\n**class****CourseSerializer****(serializers.ModelSerializer):**\n**class****Meta****:**\n **model = Course**\n **fields = [**\n**'id'****,**\n**'subject'****,**\n**'****title'****,**\n**'slug'****,**\n**'overview'****,**\n**'created'****,**\n**'owner'****,**\n**'modules'**\n **]** \n```", "```py\npython manage.py shell \n```", "```py\n>>> from rest_framework.renderers import JSONRenderer\n>>> from courses.models import Course\n>>> from courses.api.serializers import CourseSerializer\n>>> course = Course.objects.latest('id')\n>>> serializer = CourseSerializer(course)\n>>> JSONRenderer().render(serializer.data) \n```", "```py\n\"modules\": [6, 7, 9, 10] \n```", "```py\n# ...\nclass CourseSerializer(serializers.ModelSerializer):\n **modules = serializers.StringRelatedField(many=****True****, read_only=****True****)**\nclass Meta:\n        # ... \n```", "```py\n\"modules\": [\"0\\. Installing Django\", \"1\\. Configuring Django\"] \n```", "```py\nfrom django.db.models import Count\nfrom rest_framework import serializers\nfrom courses.models import Course, **Module,** Subject\n**class****ModuleSerializer****(serializers.ModelSerializer):**\n**class****Meta****:**\n **model = Module**\n **fields = [****'order'****,** **'title'****,** **'description'****]**\nclass CourseSerializer(serializers.ModelSerializer):\n    modules = **ModuleSerializer**(many=True, read_only=True)\n    class Meta:\n        # ... \n```", "```py\n\"modules\": [\n{\n\"order\": 0,\n\"title\": \"Introduction to overview\",\n\"description\": \"A brief overview about the Web Framework.\"\n},\n{\n\"order\": 1,\n\"title\": \"Configuring Django\",\n\"description\": \"How to install Django.\"\n},\n    ...\n] \n```", "```py\nfrom django.db.models import Count\nfrom rest_framework import generics\n**from** **rest_framework** **import** **viewsets**\nfrom courses.api.pagination import StandardPagination\nfrom courses.api.serializers import **CourseSerializer,** SubjectSerializer\nfrom courses.models import **Course,** Subject\n**class****CourseViewSet****(viewsets.ReadOnlyModelViewSet):**\n **queryset = Course.objects.prefetch_related(****'modules'****)**\n **serializer_class = CourseSerializer**\n **pagination_class = StandardPagination** \n```", "```py\nfrom django.urls import **include,** path\n**from** **rest_framework** **import** **routers**\nfrom . import views\napp_name = 'courses'\n**router = routers.DefaultRouter()**\n**router.register(****'****courses'****, views.CourseViewSet)**\nurlpatterns = [\n    # ...\n**path(****''****, include(router.urls)),**\n] \n```", "```py\n# ...\n**class****SubjectViewSet****(viewsets.ReadOnlyModelViewSet):**\n **queryset = Subject.objects.annotate(total_courses=Count(****'courses'****))**\n **serializer_class = SubjectSerializer**\n **pagination_class = StandardPagination** \n```", "```py\n**#** path(\n**# **    subjects/',\n**# **    views.SubjectListView.as_view(),\n**# **    name=subject_list'\n**#** ),\n**#** path(\n**# **    subjects/<pk>/ ',\n**# **     views.SubjectDetailView.as_view(),\n**# **     name='subject_detail'\n**#**), \n```", "```py\nfrom django.urls import include, path\nfrom rest_framework import routers\nfrom . import views\napp_name = 'courses'\nrouter = routers.DefaultRouter()\nrouter.register('courses', views.CourseViewSet)\n**router.register(****'subjects'****, views.SubjectViewSet)**\nurlpatterns = [\n    path('', include(router.urls)),\n] \n```", "```py\nfrom django.db.models import Count\n**from** **django.shortcuts** **import** **get_object_or_404**\nfrom rest_framework import generics\nfrom rest_framework import viewsets\n**from** **rest_framework.response** **import** **Response**\n**from** **rest_framework.views** **import** **APIView**\nfrom courses.api.pagination import StandardPagination\nfrom courses.api.serializers import CourseSerializer, SubjectSerializer\nfrom courses.models import Course, Subject\n# ...\n**class****CourseEnrollView****(****APIView****):**\n**def****post****(****self, request, pk,** **format****=****None****):**\n **course = get_object_or_404(Course, pk=pk)**\n **course.students.add(request.user)**\n**return** **Response({****'enrolled'****:** **True****})** \n```", "```py\npath(\n    'courses/<pk>/enroll/',\n    views.CourseEnrollView.as_view(),\n    name='course_enroll'\n), \n```", "```py\n# ...\n**from** **rest_framework.authentication** **import** **BasicAuthentication**\nclass CourseEnrollView(APIView):\n **authentication_classes = [BasicAuthentication]**\n# ... \n```", "```py\n# ...\nfrom rest_framework.authentication import BasicAuthentication\n**from** **rest_framework.permissions** **import** **IsAuthenticated**\nclass CourseEnrollView(APIView):\n    authentication_classes = [BasicAuthentication]\n **permission_classes = [IsAuthenticated]**\n# ... \n```", "```py\ncurl -i -X POST http://127.0.0.1:8000/api/courses/1/enroll/ \n```", "```py\nHTTP/1.1 401 Unauthorized\n...\n{\"detail\": \"Authentication credentials were not provided.\"} \n```", "```py\ncurl -i -X POST -u student:password http://127.0.0.1:8000/api/courses/1/enroll/ \n```", "```py\nHTTP/1.1 200 OK\n...\n{\"enrolled\": true} \n```", "```py\n# ...\n**from** **rest_framework.decorators** **import** **action**\nclass CourseViewSet(viewsets.ReadOnlyModelViewSet):\n    queryset = Course.objects.prefetch_related('modules')\n    serializer_class = CourseSerializer\n **@action(**\n**detail=****True****,**\n**methods=[****'post'****],**\n**authentication_classes=[BasicAuthentication],**\n**permission_classes=[IsAuthenticated]**\n**)**\n**def****enroll****(****self, request, *args, **kwargs****):**\n **course = self.get_object()**\n **course.students.add(request.user)**\n**return** **Response({****'enrolled'****:** **True****})** \n```", "```py\npath(\n    'courses/<pk>/enroll/',\n    views.CourseEnrollView.as_view(),\n    name='course_enroll'\n), \n```", "```py\nfrom rest_framework.permissions import BasePermission\nclass IsEnrolled(BasePermission):\n    def has_object_permission(self, request, view, obj):\n        return obj.students.filter(id=request.user.id).exists() \n```", "```py\nfrom courses.models import **Content,** Course, Module, Subject\n**class****ItemRelatedField****(serializers.RelatedField):**\n**def****to_representation****(****self, value****):**\n**return** **value.render()**\n**class****ContentSerializer****(serializers.ModelSerializer):**\n**item = ItemRelatedField(read_only=****True****)**\n**class****Meta****:**\n**model = Content**\n**fields = [****'order'****,** **'item'****]** \n```", "```py\nclass ModuleWithContentsSerializer(serializers.ModelSerializer):\n    contents = ContentSerializer(many=True)\n    class Meta:\n        model = Module\n        fields = ['order', 'title', 'description', 'contents']\nclass CourseWithContentsSerializer(serializers.ModelSerializer):\n    modules = ModuleWithContentsSerializer(many=True)\n    class Meta:\n        model = Course\n        fields = [\n            'id',\n            'subject',\n            'title',\n            'slug',\n            'overview',\n            'created',\n            'owner',\n            'modules'\n        ] \n```", "```py\n# ...\n**from** **courses.api.permissions** **import** **IsEnrolled**\n**from** **courses.api.serializers** **import** **CourseWithContentsSerializer**\nclass CourseViewSet(viewsets.ReadOnlyModelViewSet):\n    # ...\n **@action(**\n**detail=****True****,**\n**methods=[****'get'****],**\n**serializer_class=CourseWithContentsSerializer,**\n**authentication_classes=[BasicAuthentication],**\n**permission_classes=[IsAuthenticated, IsEnrolled]**\n**)**\n**def****contents****(****self, request, *args, **kwargs****):**\n**return** **self.retrieve(request, *args, **kwargs)** \n```", "```py\n{\n\"order\": 0,\n\"title\": \"Introduction to Django\",\n\"description\": \"Brief introduction to the Django Web Framework.\",\n\"contents\": [\n{\n\"order\": 0,\n\"item\": \"<p>Meet Django. Django is a high-level\n            Python Web framework\n            ...</p>\"\n},\n{\n\"order\": 1,\n\"item\": \"\\n<iframe width=\\\"480\\\" height=\\\"360\\\"\n            src=\\\"http://www.youtube.com/embed/bgV39DlmZ2U?\n            wmode=opaque\\\"\n            frameborder=\\\"0\\\" allowfullscreen></iframe>\\n\"\n}\n]\n} \n```", "```py\npython -m pip install requests==2.31.0 \n```", "```py\napi_examples/\n    enroll_all.py\neduca/\n    ... \n```", "```py\nimport requests\nbase_url = 'http://127.0.0.1:8000/api/'\nurl = f'{base_url}courses/'\navailable_courses = []\nwhile url is not None:\n    print(f'Loading courses from {url}')\n    r = requests.get(url)\n    response = r.json()\n    url = response['next']\n    courses = response['results']\n    available_courses += [course['title'] for course in courses]\nprint(f'Available courses: {\", \".join(available_courses)}') \n```", "```py\npython manage.py runserver \n```", "```py\npython enroll_all.py \n```", "```py\nAvailable courses: Introduction to Django, Python for beginners, Algebra basics \n```", "```py\nimport requests\n**username =** **''**\n**password =** **''**\nbase_url = 'http://127.0.0.1:8000/api/'\nurl = f'{base_url}courses/'\navailable_courses = []\nwhile url is not None:\n    print(f'Loading courses from {url}')\n    r = requests.get(url)\n    response = r.json()\n    url = response['next']\n    courses = response['results']\n    available_courses += [course['title'] for course in courses]\nprint(f'Available courses: {\", \".join(available_courses)}')\n**for** **course** **in** **courses:**\n **course_id = course[****'id'****]**\n **course_title = course[****'title'****]**\n **r = requests.post(**\n**f'****{base_url}****courses/****{course_id}****/enroll/'****,**\n **auth=(username, password)**\n **)**\n**if** **r.status_code ==** **200****:**\n**# successful request**\n**print****(****f'Successfully enrolled in** **{course_title}****'****)** \n```", "```py\npython enroll_all.py \n```", "```py\nAvailable courses: Introduction to Django, Python for beginners, Algebra basics\nSuccessfully enrolled in Introduction to Django\nSuccessfully enrolled in Python for beginners\nSuccessfully enrolled in Algebra basics \n```"]