["```py\n'assets': {\n    'web.assets_backend': [\n        'my_hostel/static/src/xml/**/*',\n    ],\n    'web.assets_frontend: [\n        'my_hostel/static/lib/bootstrap/**/*',\n        'my_hostel/static/src/js/**',\n        'my_hostel/static/src/scss/**',\n    ],\n},\n```", "```py\n'web.assets_common': [\n    'my_hostel/static/src/js/**/*',\n],\n```", "```py\n'web.assets_common': [\n    ('prepend','my_hostel/static/src/css/bootstrap_overridden.scss'),\n],\n```", "```py\n'web.assets_common': [\n    ('before', 'web/static/src/css/bootstrap_overridden.scss',   'my_hostel/static/src/css/bootstrap_overridden.scss'),\n],\n```", "```py\n'web.assets_common': [\n    ('after', 'web/static/src/css/list_view.scss', 'my_hostel/static/src/css/list_view.scss'),\n],\n```", "```py\n'web.assets_common': [\n    ('include', 'web._primary_variables'),\n],\n```", "```py\n'web.assets_common': [\n    ('remove', 'web/static/src/js/boot.js'),\n],\n```", "```py\n'web.assets_common': [\n    ('replace', 'web/static/src/js/boot.js', 'my_addon/static/src/js/\nboot.js'),\n],\n```", "```py\n'web.assets_common': [\n    'my_addon/static/lib/jquery/jquery.js',\n    'my_addon/static/lib/jquery/**/*',\n],\n```", "```py\nawait loadAssets({\n    jsLibs: [\"/web/static/lib/stacktrace-js/stacktrace.js\"],\n});\n```", "```py\n    document.addEventListener(\"DOMContentLoaded\", function () {\n        var lazyImages = [].slice.call(document.querySelectorAll(\"img.lazy\"));\n        if (\"IntersectionObserver\" in window) {\n            let lazyImageObserver = new \\\n            IntersectionObserver(function (entries, \\\n            observer) {\n                entries.forEach(function (entry) {\n                    if (entry.isIntersecting) {\n                        let lazyImage = entry.target;\n                        lazyImage.src = \\\n                        lazyImage.dataset.src;\n                        lazyImage.classList.remove(\"lazy\");\n                        lazyImageObserver.unobserve(lazyImage);\n                    }\n                });\n            });\n            lazyImages.forEach(function (lazyImage) {\n                lazyImageObserver.observe(lazyImage);\n            });\n        }\n    });\n    ```", "```py\n'assets': {\n       'web.assets_frontend': [\n           'my_hostel/static/src/scss/hostel.scss',\n           'my_hostel/static/src/js/hostel.js',\n       ],\n   },\n```", "```py\n'depends': ['base', 'website'],\n```", "```py\n$my-bg-color: #1C2529;\n$my-text-color: #D3F4FF;\nnav.navbar {\n   background-color: $my-bg-color !important;\n   .navbar-nav .nav-link span{\n       color: darken($my-text-color, 15);\n       font-weight: 600;\n   }\n}\nfooter.o_footer {\n   background-color: $my-bg-color !important;\n   color: $my-text-color;\n}\n```", "```py\n/** @odoo-module **/\nimport { _t } from \"@web/core/l10n/translation\";\nimport publicWidget from \"@web/legacy/js/public/public_widget\";\npublicWidget.registry.MyHostel = publicWidget.Widget.extend({\n    selector: '#wrapwrap',\n    init() {\n        this._super(...arguments);\n        this.orm = this.bindService(\"orm\");\n        alert(_t('Hello world'));\n    },\n});\n```", "```py\n<!-- Example: custom_template.xml -->\n<template id=\"custom_template\" name=\"Custom Template\">\n    <t t-call=\"website.layout\">\n        <t t-set=\"page_title\">Custom Page</t>\n        <!-- Your content here -->\n        <div class=\"custom-content\">\n            <h1>Welcome to my custom page!</h1>\n            <p>This is a custom template created in Odoo.</p>\n        </div>\n    </t>\n</template>\n```", "```py\n{\n    # Other manifest information\n    'data': [\n        'views/custom_template.xml',\n        # Other XML or CSV files\n    ],\n    # Other manifest information\n}\n```", "```py\n<t t-foreach=\"[1, 2, 3, 4, 5]\" t-as=\"num\">\n    <p><t t-esc=\"num\"/></p>\n</t>\n```", "```py\n<p>1</p>\n<p>2</p>\n<p>3</p>\n<p>4</p>\n<p>5</p>\n```", "```py\n<p t-foreach=\"[1, 2, 3, 4, 5]\" t-as=\"num\">\n    <t t-esc=\"num\"/>\n</p>\n```", "```py\n<div t-att-total=\"10 + 5 + 5\"/>\n```", "```py\n<div total=\"20\"></div>\n```", "```py\n<t t-foreach=\"['info', 'danger', 'warning']\" t-as=\"color\">\n    <div t-attf-class=\"alert alert-#{color}\">\n        Simple bootstrap alert\n    </div>\n</t>\n```", "```py\n<div class=\"alert alert-info\">\n    Simple bootstrap alert\n</div>\n<div class=\"alert alert-danger\">\n    Simple bootstrap alert\n</div>\n<div class=\"alert alert-warning\">\n    Simple bootstrap alert\n</div>\n```", "```py\n<div t-att=\"{'id': 'my_el_id', 'class': 'alert alert-danger'}\"/>\n```", "```py\n<div id=\"my_el_id\" class=\"alert alert-danger\"/>\n```", "```py\n<span t-field=\"author.image_small\" t-options=\"{'widget': 'image'}\"/>\n```", "```py\n<div t-if=\"state == 'new'\">\n    Text will be added if the state is new.\n</div>\n<div t-elif=\"state == 'progress'\">\n    Text will be added if the state is progress.\n</div>\n<div t-else=\"\">\n    Text will be added for all other stages.\n</div>\n```", "```py\n<t t-set=\"my_var\" t-value=\"5 + 1\"/>\n<t t-esc=\"my_var\"/>\n```", "```py\n<template id=\"first_template\">\n    <div> Test Template </div>\n</template>\n<template id=\"second_template\">\n    <t t-call=\"first_template\"/>\n</template>\n```", "```py\nfrom odoo import fields, models\nclass Hostel(models.Model):\n   _name = 'hostel.hostel'\n   _description = \"Information about hostel\"\n   _order = \"id desc, name\"\n   _rec_name = 'hostel_code'\n   name = fields.Char(string=\"hostel Name\", required=True)\n   hostel_code = fields.Char(string=\"Code\", required=True)\n   street = fields.Char('Street')\n   street2 = fields.Char('Street2')\n   zip = fields.Char('Zip', change_default=True)\n   city = fields.Char('City')\n   state_id = fields.Many2one(\"res.country.state\", string='State')\n   country_id = fields.Many2one('res.country', string='Country')\n   phone = fields.Char('Phone',required=True)\n   mobile = fields.Char('Mobile',required=True)\n   email = fields.Char('Email')\n   hostel_floors = fields.Integer(string=\"Total Floors\")\n   image = fields.Binary('Hostel Image')\n   active = fields.Boolean(\"Active\", default=True,\n       help=\"Activate/Deactivate hostel record\")\n   type = fields.Selection([(\"male\", \"Boys\"), (\"female\", \"Girls\"),\n       (\"common\", \"Common\")], \"Type\", help=\"Type of Hostel\",\n       required=True, default=\"common\")\n   other_info = fields.Text(\"Other Information\",\n       help=\"Enter more information\")\n   description = fields.Html('Description')\n   hostel_rating = fields.Float('Hostel Average Rating', digits=(14, 4))\n```", "```py\n    @http.route('/hostel/<model(\"hostel.hostel\"):hostel>', type='http', auth=\"user\", website=True)\n    def hostel_room_detail(self, hostel):\n        return request.render(\n            'my_hostel.hostel_detail', {\n                'hostel': hostel,\n            })\n    ```", "```py\n    <template id=\"hostel_detail\" name=\"Hostel Detail\">\n       <t t-call=\"website.layout\">\n           <div class=\"container\">\n               <div class=\"row mt16\">\n                   <div class=\"col-5\">\n                       <span t-field=\"hostel.image\" t-options=\"{\n                           'widget': 'image',\n                           'class': 'mx-auto d-block img-thumbnail'}\"/>\n                   </div>\n                   <div class=\"offset-1 col-6\">\n                       <h1 t-field=\"hostel.name\"/>\n                       <p t-esc=\"hostel.hostel_rating\"></p>\n                       <t t-if=\"hostel.hostel_code\">\n                           <div t-field=\n                           \"hostel.hostel_code\"\n                           class=\"text-muted\"/>\n                       </t>\n                       <b class=\"mt8\"> State: </b>\n                       <ul>\n                           <li t-foreach=\"hostel.state_id\" t-as=\"state\">\n                               <span t-esc=\"state.name\" />\n                           </li>\n                       </ul>\n                   </div>\n               </div>\n           </div>\n           <div t-field=\"hostel.description\"/>\n       </t>\n    </template>\n    ```", "```py\n    ...\n    <div t-attf-class=\"card mt24 #{'bg-light' if hostel_rating else ''}\">\n        <div class=\"card-body\">\n            <h3 t-field=\"hostel.name\"/>\n            <t t-if=\"hostel.hostel_rating\">\n                <div t-field=\"hostel.hostel_rating\"\n                class=\"text-muted\"/>\n            </t>\n            <b class=\"mt8\"> Authors </b>\n            <ul>\n                <li t-foreach=\"hostel.state_id\"\n                t-as=\"state\">\n                    <span t-esc=\"state.name\" />\n                </li>\n            </ul>\n            <a t-attf-href=\"/hostel/#{hostel.id}\"\n            class=\"btn btn-primary btn-sm\">\n                <i class=\"fa fa-building\"/> Hostel Detail\n            </a>\n        </div>\n    </div>\n    ...\n    ```", "```py\n    <template id=\"snippet_hostel_card\" name=\"Hostel Card\">\n           <section class=\"pt-3 pb-3\">\n               <div class=\"container\">\n                   <div class=\"row align-items-center\">\n                       <div class=\"col-lg-6 pt16 pb16\">\n                           <h1>This is Hostel Card Block</h1>\n                           <p>\n                               Learn snippet development\n                               quickly with examples\n                            </p>\n                           <a class=\"btn btn-primary\"\n                           href=\"#\" >Hostel Details</a>\n                       </div>\n                       <div class=\"col-lg-6 pt16 pb16\">\n                           <img\n                             src=\"img/cover.jpeg\"\n                             class=\"mx-auto img-thumbnail w-50 img img-fluid shadow\"/>\n                       </div>\n                   </div>\n              </div>\n        </section>\n    </template>\n    ```", "```py\n    <template id=\"hostel_snippets_options\" inherit_id=\"website.snippets\">\n        <xpath    expr=\"//div[@id='snippet_structure']/div[hasclass('o_panel_body')]\" position=\"inside\">\n            <t t-snippet=\"my_hostel.snippet_hostel_card\"\n             t-thumbnail=\"/my_hostel/static/src/img/s_hostel_thumb.png\"/>\n        </xpath>\n    </template>\n    ```", "```py\n/addons/website/views/snippets/snippets.xml file to see all the snippet options. In the next recipe, we will see how to add our own options.\n```", "```py\n    <template id=\"snippet_hostel_dynamic\" name=\"Hostel Dynamic\">\n        <section class=\"hostel_list\">\n            <div class=\"container\">\n                <h2>Hostel</h2>\n                <table class=\"table hostel_snippet table-striped\"\n                       data-number-of-hostel=\"5\">\n                    <tr>\n                        <th>Name</th>\n                        <th>Available date</th>\n                    </tr>\n                </table>\n            </div>\n        </section>\n    </template>\n    ```", "```py\n    <template id=\"hostel_snippets_options\"\n               inherit_id=\"website.snippets\">\n        <!-- register snippet -->\n        <xpath expr=\"//div[@id='snippet_structure']/\n                     div[hasclass('o_panel_body')]\"\n               position=\"inside\">\n            <t t-snippet=\"my_hostel.snippet_hostel_dynamic\"\n               t-thumbnail=\"/my_hostel/static/src/img/s_list.png\"/>\n        </xpath>\n        <xpath expr=\"//div[@id='snippet_options']\" position=\"inside\">\n      <!--Add step 3 here -->\n        </xpath>\n    </template>\n    ```", "```py\n    <div data-selector=\".hostel_snippet\">\n        <we-select string=\"Table Style\">\n            <we-button data-select-class=\"table-striped\">\n                    Striped\n            </we-button>\n            <we-button data-select-class=\"table-dark\">\n                    Dark\n            </we-button>\n            <we-button data-select-class=\"table-bordered\">\n                    Bordered\n            </we-button>\n        </we-select>\n        <we-button-group string=\"No of Rooms\"\n            data-attribute-name=\"numberOfRooms\">\n            <we-button data-select-data-attribute=\"5\">\n                    5\n            </we-button>\n            <we-button data-select-data-attribute=\"10\">\n                    10\n            </we-button>\n            <we-button data-select-data-attribute=\"15\">\n                    15\n            </we-button>\n        </we-button-group>\n    </div>\n    ```", "```py\n    /** @odoo-module **/\n    import { _t } from \"@web/core/l10n/translation\";\n    import publicWidget from \"@web/legacy/js/public/public_widget\";\n    publicWidget.registry.HostelSnippet = publicWidget.Widget.extend({\n       selector: '.hostel_snippet',\n       disabledInEditableMode: false,\n       start: function () {\n           var self = this;\n           var rows = this.$el[0].dataset.numberOfRooms || '5';\n           this.$el.find('td').parents('tr').remove();\n           this._rpc({\n               model: 'hostel.hostel',\n               method: 'search_read',\n               domain: [],\n               fields: ['name', 'hostel_code'],\n               orderBy: [{ name: 'hostel_code', asc: false }],\n               limit: parseInt(rows)\n           }).then(function (data) {\n               _.each(data, function (hostel) {\n                   self.$el.append(\n                       $('<tr />').append(\n                           $('<td />').text(hostel.name),\n                           $('<td />').text(hostel.hostel_code)\n                       ));\n               });\n           });\n       },\n    });\n    ```", "```py\n    'assets': {\n           'web.assets_frontend': [\n               'my_hostel/static/src/js/snippets.js',\n           ],\n    },\n    ```", "```py\nfrom odoo import fields, models\nclass Inquiries(models.Model):\n    _name = 'hostel.inquiries'\n    _description = \"Inquiries about hostel\"\n    _order = \"id desc,\"\n    name = fields.Char(string=\"Student Name\", required=True)\n    phone = fields.Char(string=\"Phone\", required=True)\n    email = fields.Char(string=\"Email\")\n    book_fy = fields.Char(string=\"Book for Year\")\n    queries = fields.Html(string=\"Your Question\", required=True)\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<odoo>\n    <data>\n        <record id=\"view_hostel_inquiry_tree\" model=\"ir.ui.view\">\n            <field name=\"name\">hostel.inquiry.tree</field>\n            <field name=\"model\">hostel.inquiries</field>\n            <field name=\"arch\" type=\"xml\">\n                <tree string=\"Inquiries\">\n                    <field name=\"name\"/>\n                    <field name=\"phone\"/>\n                    <field name=\"email\"/>\n                    <field name=\"book_fy\"/>\n                </tree>\n            </field>\n        </record>\n        <record id=\"view_hostel_inquiry_form\" model=\"ir.ui.view\">\n            <field name=\"name\">hostel.inquiry.form</field>\n            <field name=\"model\">hostel.inquiries</field>\n            <field name=\"arch\" type=\"xml\">\n                <form string=\"Inquiries\">\n                    <sheet>\n                        <div class=\"oe_title\">\n                            <h3>\n                                <table>\n                                    <tr>\n                                        <td style=\"padding-right:10px;\"><field name=\"name\" required=\"1\"\n                                        placeholder=\"Name\" /></td>\n                                    </tr>\n                                </table>\n                            </h3>\n                        </div>\n                        <group>\n                            <group>\n                                <field name=\"phone\"/>\n                                <field name=\"email\"/>\n                                <field name=\"book_fy\"/>\n                            </group>\n                        </group>\n                        <group>\n                            <field name=\"queries\"/>\n                        </group>\n                    </sheet>\n                </form>\n            </field>\n        </record>\n        <record model=\"ir.actions.act_window\"\n        id=\"action_inquiry\">\n            <field name=\"name\">Inquiries</field>\n            <field name=\"type\">\n            ir.actions.act_window</field>\n            <field name=\"res_model\">\n            hostel.inquiries</field>\n            <field name=\"view_mode\">tree,form</field>\n            <field name=\"help\" type=\"html\">\n                <p class=\"oe_view_nocontent_create\">\n                    Create Inquiries.\n                </p>\n            </field>\n        </record>\n        <menuitem id=\"hostel_inquiry_main_menu\" name=\"Inquiries\"\n        parent=\"hostel_main_menu\" sequence=\"2\" />\n        <menuitem id=\"hostel_inquiry_menu\" name=\"Inquiries\"\n        parent=\"hostel_inquiry_main_menu\"\n            action=\"my_hostel.action_inquiry\"\n            groups=\"my_hostel.group_hostel_manager\"\n            sequence=\"1\"/>\n    </data>\n</odoo>\n```", "```py\n# -*- coding: utf-8 -*-\nfrom odoo import http, tools, _\nfrom odoo.http import request\nclass InquiryForm(http.Controller):\n    @http.route('/inquiry/form', type='http', auth=\"public\", website=True)\n    def inquiry_form_template(self, **kw):\n        return request.render(\"my_hostel.hostel_inquiry_form\")\n    @http.route('/inquiry/submit', type='http', auth=\"public\", website=True)\n    def inquiry_form(self, **kwargs):\n        inquiry_obj = request.env['hostel.inquiries']\n        form_vals = {\n            'name': kwargs.get('name') or '',\n            'email': kwargs.get('email') or '',\n            'phone': kwargs.get('phone') or '',\n            'book_fy': kwargs.get('book_fy') or '',\n            'queries': kwargs.get('queries') or '',\n            }\n        submit_success = inquiry_obj.sudo().create(form_vals)\n        return request.redirect('/contactus-thank-you')\n```", "```py\n<odoo>\n  <template id=\"hostel_inquiry_form\"\n    name=\"Hostel Inquiry Form\">\n    <t t-call=\"website.layout\">\n      <section class=\"s_website_form\" data-snippet=\"s_website_form\">\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col-md-12 mb64\">\n              <div class=\"aboutus-section pl-5 pr-5 p-t-100 p-b-50\">\n                <div class=\"wrapper wrapper--w900\">\n                  <div class=\"card\">\n                    <div class=\"card-body mt8\">\n                      <form action=\"/inquiry/submit\" method=\"POST\" class=\"o_mark_required\" id=\"inquiry_form\" enctype=\"multipart/form-data\">\n                        <input type=\"hidden\" name=\"csrf_token\" t-att-value=\"request.csrf_token()\"/>\n                          <div class=\"row\">\n                            <div class=\"form-group col-md-12\">\n                              <label for=\"name\"> Your Name </label>\n                                <input type=\"text\"\n                                class=\"form-control\" name=\"name\"\n                                id=\"name\" required=\"True\" />\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"form-group col-md-12\">\n                              <label for=\"phone\"> Phone </label>\n                                <input type=\"text\" class=\"form-control\"\n                                name=\"phone\" id=\"phone\" required=\"True\" />\n                            </div>\n                          </div>\n                          <div class=\"row\">\n                            <div class=\"form-group col-md-12\">\n                              <label for=\"email\"> Email ID </label>\n                                  <input type=\"text\" class=\"form-control\"\n                                  name=\"email\" id=\"email\"/>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"form-group col-md-12\">\n                                <label for=\"book_fy\"> Booking for the Year </label>\n                                  <input type=\"text\" class=\"form-control\"\n                                  name=\"book_fy\" id=\"book_fy\"/>\n                              </div>\n                            </div>\n                            <div class=\"row\">\n                              <div class=\"form-group col-md-12\">\n                                <label for=\"queries\"> Your Question </label>\n                                  <input type=\"text\" class=\"form-control\"\n                                  name=\"queries\" id=\"queries\"/>\n                              </div>\n                            </div>\n                            <div class=\"form-group row\">\n                              <div class=\"col-sm-12\">\n                                <button type=\"submit\"\n                                class=\"btn btn-primary btn-lg a-submit\">\n                                  <span>Submit</span>\n                                </button>\n                              </div>\n                            </div>\n                          </form>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n      </t>\n  </template>\n</odoo>\n```", "```py\n         class Hostel(models.Model):\n         _name = 'hostel.hostel'\n         _description = \"Information about hostel\"\n         _inherit = ['website.seo.metadata']\n         _order = \"id desc, name\"\n         _rec_name = 'hostel_code'\n    ```", "```py\n    @http.route('/hostels/<model(\"hostel.hostel\"):hostel>', type='http', auth='public', website = True)\n    def hostel_detail(self, hostel):\n             return request.render(\n             'my_hostel.hostel_detail', {\n                 'hostel': hostel,\n                 'main_object': hostel\n             }\n    ...\n    ```", "```py\n     def _default_website_meta(self):\n         res = super(Hostel, self)._default_website_meta()\n         res['default_opengraph']['og:image'] = self.env['website'].image_url(self, 'image')\n         res['default_twitter']['twitter:image'] = self.env['website'].image_url(self, 'image')\n         return res\n```", "```py\n    from odoo.addons.http_routing.models.ir_http import slug\n    from odoo.addons.website.models.ir_http import sitemap_qs2dom\n    ```", "```py\n         def sitemap_hostels(env, rule, qs):\n             Hostels = env['hostel.hostel']\n             dom = sitemap_qs2dom(qs, '/hostels', Hostels._rec_name)\n         #Ex. to filter urls\n             #dom += [('name', 'ilike', 'abc')]\n             for f in Hostels.search(dom):\n                 loc = '/hostels/%s' % slug(f)\n                 if not qs or qs.lower() in loc:\n                     yield {'loc': loc}\n    ```", "```py\n    @http.route('/hostels/<model(\"hostel.hostel\"):hostel>', type='http', auth='public', website = True, \n    sitemap=sitemap_hostels)\n         def hostel_detail(self, hostel):\n    ```", "```py\n...\n@http.route('/hostels/<model(\"hostel.hostel\"):hostel>', type='http', auth='public', website = True, sitemap=True)\n...\n```", "```py\n...\n@http.route('/hostels/<model(\"hostel.hostel\"):hostel>', type='http', auth='public', website = True, sitemap=False)\n...\n```", "```py\n./odoo-bin -c config_file --geoip-db=location_of_geoip_DB\n```", "```py\n    class Hostel(models.Model):\n        _name = 'library.book'\n        _inherit = ['website.seo.metadata']\n         ...\n        restrict_country_ids = fields.Many2many('res.country')\n        ...\n    ```", "```py\n    …\n        <field name=\"restrict_country_ids\" widget=\"many2many_tags\"/>\n    …\n    ```", "```py\n    @http.route('/hostels', type='http', auth='public', website = True)\n         def hostel(self):\n             country_id = False\n             country_code = request.geoip and request.geoip.get('country_code') or False\n             if country_code:\n                 country_ids = request.env['res.country'].sudo().search([('code', '=', country_code)])\n                 if country_ids:\n                     country_id = country_ids[0].id\n             domain = ['|', ('restrict_country_ids', '=', False), ('restrict_country_ids', 'not in', [country_id])]\n             hostels = request.env['hostel.hostel'].sudo().search(domain)\n             return request.render(\n             'my_hostel.hostels', {\n                 'hostels': hostels,})\n    ```", "```py\n    'depends': ['base', 'website', utm.mixin in the book.issue model, as follows:\n\n    ```", "```py\n\n    ```", "```py\n    ...\n    <group string=\"Book Issues\">\n        <field name=\"book_issue_ids\" nolabel=\"1\">\n            <tree name=\"Book issues\">\n                <field name=\"create_date\"/>\n                <field name=\"submitted_by\"/>\n                <field name=\"issue_description\"/>\n                <field name=\"campaign_id\"/>\n            </tree>\n        </field>\n    </group>\n    ...\n    ```", "```py\n    class Hostel(models.Model):\n         _name = 'hostel.hostel'\n         _description = \"Information about hostel\"\n         _inherit = ['website.seo.metadata', 'website.multi.mixin']\n    ...\n    ```", "```py\n    ...\n    <group>\n        <field name=\"website_id\"/>\n    </group>\n    ...\n    ```", "```py\n    @http.route('/hostels', type='http', auth='public', website = True)\n         def hostel(self, **post):\n    ...\n       domain = ['|', ('restrict_country_ids', '=', False), ('restrict_country_ids', 'not in', [country_id])]\n             domain += request.website.website_domain()\n        hostels = request.env['hostel.hostel'].sudo().search(domain)\n             return request.render(\n             'my_hostel.hostels', {\n                 'hostels': hostels,\n             })\n    ...\n    ```", "```py\n    import werkzeug\n    ...\n    @http.route('/hostels/<model(\"hostel.hostel\"):hostel>', type='http', auth='public', website = True, sitemap=sitemap_hostels)\n    def hostel_detail(self, hostel, **post):\n        if not hostel.can_access_from_current_website():\n            raise werkzeug.exceptions.NotFound()\n        return request.render(\n             'my_hostel.hostel_detail', {\n                 'hostel': hostel,\n                 'main_object': hostel\n             })\n    ...\n    ```", "```py\n    class Hostel(models.Model):\n         _name = 'hostel.hostel'\n         _description = \"Information about hostel\"\n         _inherit = ['website.seo.metadata', 'website.multi.mixin', ' website.published.mixin']\n         _order = \"id desc, name\"\n        ...\n    ```", "```py\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <odoo noupdate=\"1\">\n         <record id=\"hostels_rule_portal_public\" model=\"ir.rule\">\n             <field name=\"name\">Portal/Public user: View published Hostels</field>\n             <field name=\"model_id\" ref=\"my_hostel.model_hostel_hostel\"/>\n             <field name=\"groups\" eval=\"[(4, ref('base.group_portal')), (\n             4, ref('base.group_public'))]\"/>\n             <field name=\"domain_force\">\n             [('website_published','=', True)]</field>\n             <field name=\"perm_read\" eval=\"True\"/>\n         </record>\n    </odoo>\n    ```", "```py\n    @api.depends('name')\n    def _compute_website_url(self):\n        for hostel in self:\n            hostel.website_url = '/hostels/%s' % (slug(hostel))\n    ```", "```py\n    ...\n    <sheet>\n        <div class=\"oe_button_box\" name=\"button_box\">\n            <field name=\"is_published\"\n                   widget=\"website_redirect_button\"/>\n        </div>\n    ...\n    ```"]