["```py\n# Comment this line to disable developer mode. This should be done in\n# production\n# devmode on \n\n```", "```py\n$ bin/paster serve --daemon parts/etc/deploy.ini \n\n```", "```py\n$ bin/paster serve --status parts/etc/deploy.ini\n$ Server running in PID 11482 \n\n```", "```py\n$ bin/paster serve --stop-daemon parts/etc/deploy.ini \n\n```", "```py\n$ bin/paster serve --daemon --monitor-restart parts/etc/deploy.ini \n\n```", "```py\n$ bin/paster serve --daemon --reload parts/etc/deploy.ini \n\n```", "```py\n$ sudo apt-get install apache2 \n\n```", "```py\nLoadModule rewrite_module /usr/lib/apache2/modules/mod_rewrite.so\nLoadModule proxy_module /usr/lib/apache2/modules/mod_proxy.so\nLoadModule proxy_http_module /usr/lib/apache2/modules/mod_proxy_http.so\nProxyRequests off \n\n```", "```py\n<VirtualHost *:80>\nServerName grok.example.com\nRewriteEngine On\nRewriteRule ^/(.*) http://localhost:8080/todo/++vh++http:grok.example.com:80/++/$1 [P,L]\n</VirtualHost>\n\n```", "```py\n$ /etc/init.d/apache2 reload\n\n```", "```py\n$ sudo -s\n# apt-get install build-essential \n\n```", "```py\n# apt-get install python2.5 python2.5-dev\n# apt-get install apache2 \n\n```", "```py\n# dpkg -l|grep apache2 \n\n```", "```py\n# apt-get install apache2-threaded-dev \n\n```", "```py\n# apt-get install python-setuptools \n\n```", "```py\n# sh setuptools-0.6c9-py2.5.egg \n\n```", "```py\nsudo easy_install-2.5 -U setuptools \n\n```", "```py\n$ wget http://modwsgi.googlecode.com/files/mod_wsgi-2.6.tar.gz\n$ tar xzf mod_wsgi-2.6.tar.gz\n$ cd mod_wsgi-2.6\n$ ./configure --with-python=/usr/bin/python2.5\n$ make\n$ sudo make install \n\n```", "```py\nLoadModule wsgi_module /usr/lib/apache2/modules/mod_wsgi.so\n\n```", "```py\n# a2enmod wsgi \n\n```", "```py\n# cd /etc/apache2/mods-enabled\n# ln -s ../mods-available/wsgi.load\n# ln -s ../mods-available/wsgi.conf # if it exists \n\n```", "```py\n[paste.app_factory]\nmain = grokcore.startup:application_factory\ndebug = grokcore.startup:debug_application_factory\n\n```", "```py\nparts =\neggbasket\napp\ni18n\ntest\nmkdirs\nzpasswd\nzope_conf\nsite_zcml\nzdaemon_conf\nwsgi_app\ndeploy_ini\ndebug_ini\n\n```", "```py\n[wsgi_app]\nrecipe = collective.recipe.modwsgi\neggs = ${app:eggs}\nconfig-file = ${buildout:directory}/parts/etc/deploy.ini\n\n```", "```py\nWSGIPythonHome /usr\nWSGIDaemonProcess grok user=cguardia group=cguardia threads=4 maximum-requests=10000\n<VirtualHost *:80>\nServerName wsgi.example.com\nWSGIScriptAlias /todo /home/cguardia/grok/todo/parts/wsgi_app/wsgi\nWSGIProcessGroup grok\nWSGIPassAuthorization On\nWSGIReloadMechanism Process\nSetEnv HTTP_X_VHM_HOST http://wsgi.example.com/todo\n</VirtualHost>\n\n```", "```py\nWSGIDaemonProcess grok threads=4 maximum-requests=10000 python-eggs=/tmp/python-eggs\n\n```", "```py\n$ sudo a2ensite grok \n\n```", "```py\n$ sudo /etc/init.d/apache2 reload \n\n```", "```py\nparts =\neggbasket\napp\ni18n\ntest\nmkdirs\nzpasswd\nzope_conf\nsite_zcml\nzdaemon_conf\nzeo_server\nwsgi_app\ndeploy_ini\ndebug_ini\n\n```", "```py\n[zeo_server]\nrecipe = zc.zodbrecipes:server\nzeo.conf =\n<zeo>\naddress 8100\n</zeo>\n<blobstorage 1>\nblob-dir ${buildout:directory}/var/blobstorage\n<filestorage 1>\npath ${buildout:directory}/var/filestorage/Data.fs\n</filestorage>\n</blobstorage>\n<eventlog>\nlevel info\n<logfile>\npath ${buildout:directory}/parts/log/zeo.log\n</logfile>\n</eventlog>\n\n```", "```py\n[app]\nrecipe = zc.recipe.egg\neggs = gwsgi\nz3c.evalexception>=2.0\nPaste\nPasteScript\nPasteDeploy\nZODB3\n\n```", "```py\n# Uncomment this if you want to connect to a ZEO server instead:\n<zeoclient>\nserver localhost:8100\nstorage 1\n# ZEO client cache, in bytes\ncache-size 20MB\n# Uncomment to have a persistent disk cache\n#client zeo1\n</zeoclient>\n\n```", "```py\n$ bin/zeo_server start \n\n```", "```py\n$ bin/zeo_server stop \n\n```", "```py\nWSGIDaemonProcess grok user=cguardia group=cguardia processes=2 threads=4 maximum-requests=10000\n\n```"]