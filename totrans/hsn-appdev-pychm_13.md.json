["```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nN = 100\nfor _ in range(5):\n  x = np.random.normal(0, 1, N)\n  y = np.random.normal(2, 3, N)\n  plt.hist(x, alpha=0.5, label='x')\n  plt.hist(y, alpha=0.5, label='y')\n  plt.legend(loc='upper right')\n  plt.show()\n```", "```py\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n#%% generate sample data\n# x and z are randomly generated\n# y is loosely two times of x\nx = np.random.rand(50,)\ny = x * 2 + np.random.normal(0, 0.3, 50)\nz = np.random.rand(50,)\ndf = pd.DataFrame({\n  'x': x,\n  'y': y,\n  'z': z\n})\n#%% compute the correlation matrix\ncorr_mat = df.corr()\n#%% plot the heatmap\nplt.matshow(corr_mat)\nplt.show()\n```", "```py\nimport pandas as pd\nmeteor_data = pd.read_csv(\"./data/Meteorite_Langings.csv\")\n```", "```py\nimport math\nmath.e\n```", "```py\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n# Generate sample data\nx = np.random.rand(50,)\ny = x * 2 + np.random.normal(0, 0.3, 50)\nz = np.random.rand(50,)\ndf = pd.DataFrame({\n'x': x,\n'y': y,\n'z': z\n})\n# Compute and show correlation matrix\ncorr_mat = df.corr()\nplt.matshow(corr_mat)\nplt.show()\n```", "```py\n### Importing libraries\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n#%%\n```", "```py\nx = np.random.rand(50,)\ny = x * 2 + np.random.normal(0, 0.3, 50)\nz = np.random.rand(50,)\ndf = pd.DataFrame({\n  'x': x,\n  'y': y,\n  'z': z\n})\n#%%\n```", "```py\n### Pearson's correlation\n$r_{XY}\n= \\frac{\\sum^n_{i=1}{(X_i - \\bar{X})(Y_i - \\bar{Y})}}\n{\\sqrt{\\sum^n_{i=1}{(X_i - \\bar{X})^2}}\\sqrt{\\sum^n_{i=1}{(Y_i - \\bar{Y})^2}}}$\n```", "```py\n# Compute and show correlation matrix\ncorr_mat = df.corr()\nplt.matshow(corr_mat)\nplt.show()\n```", "```py\n# Scatterplot\nplt.scatter(df['x'], df(['y']))\nplt.show()\n```", "```py\n# Scatterplot\nplt.scatter(df['x'], df['y'])\nplt.show()\n```"]