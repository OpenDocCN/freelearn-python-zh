["```py\n(virtual_env) PS > python manage.py loaddata chapter_3\n```", "```py\n# /becoming_a_django_entdev/urls.py\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    path(\n```", "```py\n        '',   \n```", "```py\n        include(\n```", "```py\n            'becoming_a_django_entdev.chapter_10.urls'\n```", "```py\n        )\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    (virtual_env) PS > mkdir becoming_a_django_entdev/chapter_10/fixtures\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata -o becoming_a_django_entdev/chapter_10/fixtures/chapter_10.json\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3 -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_models.json\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers.json\n    ```", "```py\n    dumpdata commands in this chapter are very long single-line commands. Anything broken down onto a new line is likely separated by a single space, as is the case with the preceding command.\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller --format xml -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers.xml\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller --format jsonl -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers.jsonl\n    ```", "```py\n    (virtual_env) PS > pip install pyyaml\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller --format yaml -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers.yaml\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller --natural-primary -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers_natural_primary.json\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_3/models.py\n    from django.db import models\n    ...\n    class Vehicle(models.Model):\n        ...\n    def natural_key(self):\n            return self.full_vehicle_name()\n    ```", "```py\n    (virtual_env) PS > python manage.py dumpdata chapter_3.seller --natural-foreign -o becoming_a_django_entdev/chapter_10/fixtures/chapter_3_sellers_natural_foreign.json\n    ```", "```py\n    chapter_3_sellers, and different file extensions. Because of this, you will have to include the file extension when executing your command. If you are using anything other than JSON file formats, don't forget to always include the --format option. If you do not have multiple file formats that share the same name, it is not necessary to include the file extension when using the loaddata command.\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    from django.http import Http404\n    from django.template.response import (\n        TemplateResponse\n    )\n    from django.views.generic import View\n    from ..chapter_3.models import Vehicle\n    class VehiclesView(View):\n        template_name = 'chapter_10/vehicles.html'\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n    class VehiclesView(View):\n        ...\n        def get(self, request, *args, **kwargs):\n            try:\n                vehicles = Vehicle.objects.all()\n            except Vehicle.DoesNotExist:\n                raise Http404('No Vehicles Found')\n            return TemplateResponse(\n                request,\n                self.template_name,\n                {'vehicles': vehicles}\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/vehicles.html\n    {% load static chapter_4 %}\n    <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n            <title>All Vehicles Page</title>\n        </head>\n        <body style=\"text-align:center\" \n            class=\"chapter_10\">\n            <h1>All Vehicles</h1>\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/vehicles.html\n    ...\n        <body ...>\n            ...\n            {% if vehicles %}\n                {% for vehicle in vehicles %}\n                    <br />\n                    <p>VIN #: {{ vehicle.vin }}</p>\n                    <p>Price: {{ vehicle.price }}</p>\n                    <p>Make: {{ vehicle.make|vehicle_make }}</p>\n                    <p>Model: {{ vehicle.vehicle_model }}</p>\n                    <p>Engine: {{ vehicle.engine }}</p>\n                    <p>Is Sold? {{ vehicle.sold }}</p>\n                    <br /><hr />\n                {% endfor %}\n            {% endif %}\n        </body>\n    ...\n    ```", "```py\n    from django.urls import path\n    from .views import VehiclesView\n    urlpatterns = [\n        ...\n        path(\n            'all-vehicles/',\n            VehiclesView.as_view(),\n            name = 'all-vehicles'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n    class VehiclesView(View):\n        ...\n        def get(self, request, *args, **kwargs):\n            try:\n                vehicles=Vehicle.objects.select_related(\n                    'vehicle_model',\n                    'engine'\n                ).all()\n            ...\n    ```", "```py\n# /becoming_a_django_entdev/chapter_10/views.py\n```", "```py\n...\n```", "```py\n            Vehicles = Vehicle.objects.select_related(\n```", "```py\n                'vehicle_model',\n```", "```py\n                'engine'\n```", "```py\n            ).all()\n```", "```py\n...\n```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/vehicles.html\n    ...\n            {% if vehicles %}\n                {% for vehicle in vehicles %}\n                    ...\n                    <p>Is Sold? {{ vehicle.sold }}</p>\n                    {% for seller in vehicle.\n                        vehicle_sellers.all %}\n                        {{ seller.username }}\n                    {% endfor %}\n                    <br /><hr />\n                {% endfor %}\n            {% endif %}\n    ...\n    ```", "```py\n    related_name or related_query_name argument of a field on a model class ever changes, you will need to rerun your Django migration commands once again to reflect those changes in your database.\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n                Vehicles = Vehicle.objects.prefetch_related(\n        'vehicle_sellers'\n    ).select_related(\n        'vehicle_model',\n        'engine'\n    ).all()\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    from django.http import Http404\n    from django.template.response import (\n        TemplateResponse\n    )\n    from django.views.generic import View\n    from ..chapter_3.models import Seller, Vehicle\n    class SellersView(View):\n        template_name = 'chapter_10/sellers.html'\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n    class SellersView(View):\n        ...\n        def get(self, request, *args, **kwargs):\n            try:\n                sellers = Seller.objects.all()\n            except Seller.DoesNotExist:\n                raise Http404('No Sellers Found')\n            return TemplateResponse(\n                request,\n                self.template_name,\n                {'sellers': sellers}\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/sellers.html\n    {% load static chapter_4 %}\n    <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n            <title>All Sellers Page</title>\n            <style type=\"text/css\">\n                ...Found With the Code of this Book...\n            </style>\n        </head>\n        <body style=\"text-align:center\" \n            class=\"chapter_10\">\n            <h1>All Sellers</h1>\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/sellers.html\n    ...\n        <body ...>\n            ...\n            {% if sellers %}\n                {% for seller in sellers %}\n                    <p>First Name: {{ seller.first_name }}</p>\n                    <p>Last Name: {{ seller.last_name }}</p>\n                    <p>Username: {{ seller.username }}</p>\n                    <p>Business Name: {{ seller.name }}</p>\n                    <p>Email: {{ seller.email }}</p>\n                    <p>Last Login: {{ seller.last_login }}</p>\n                    <p>Date Joined: {{ seller.date_joined \n                        }}</p>\n                    <p>Is Staff? {{ seller.is_staff }}</p>\n                    <p>Is Active? {{ seller.is_active \n                        }}</p>\n                    <p>Is Superuser? {{ \n                        seller.is_superuser }}</p>\n                    <br /><hr /><br />\n                {% endfor %}\n            {% endif %}\n        </body>\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/sellers.html\n    ...\n                {% for seller in sellers %}\n                    ...\n                    <p>Is Superuser? {{ \n                         seller.is_superuser }}</p>\n                    {% if seller.vehicles.all %}\n                        <h2>Seller Vehicles</h2>\n                        {% for vehicle in seller.\n                            vehicles.all %}\n                            <div class=\"vehicle-box\">\n                                <p>VIN #: {{ vehicle.vin \n                                    }}</p>\n                                <p>Price: {{ vehicle.price \n                                    }}</p>\n                                <p>Make: {{ vehicle.make\n                                    |vehicle_make }}</p>\n                                <p>Model: {{ vehicle.\n                                    vehicle_model }}</p>\n                                <p>Engine: {{ \n                                    vehicle.engine }}</p>\n                                <p>Is Sold? {{ vehicle\n                                    .sold }}</p>\n                            </div>\n                        {% endfor %}\n                    {% endif %}\n                    <br /><hr /><br />\n                {% endfor %}\n    ...\n    ```", "```py\nfrom django.urls import path\n```", "```py\nfrom .views import SellersView, VehiclesView\n```", "```py\nurlpatterns = [\n```", "```py\n    ...\n```", "```py\n    path(\n```", "```py\n        'all-sellers/',\n```", "```py\n        SellersView.as_view(),\n```", "```py\n        name = 'all-sellers'\n```", "```py\n    )\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n    class SellersView(View):\n        ...\n        def get(self, request, *args, **kwargs):\n            try:\n                sellers = Seller.objects.prefetch_related(\n        'vehicles',\n        'vehicles__vehicle_model',\n        'vehicles__engine'\n    ).all()\n            ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    from django.db.models import Prefetch\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/views.py\n    ...\n    class SellersView(View):\n        ...\n                sellers = Seller.objects.prefetch_related(\n                    Prefetch(\n                        'vehicles',\n                        to_attr  = 'filtered_vehicles',\n                        queryset = Vehicle.objects.filter(\n                            vehicle_model__name = \n                                'Blazer LT'\n    )\n                    ),\n                    'filtered_vehicles__vehicle_model',\n                    'filtered_vehicles__engine'\n                ).all()\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_10/templates/chapter_10/sellers.html\n    ...\n                {% for seller in sellers %}\n                    ...\n                    {% if seller.filtered_vehicles %}\n                        <h2>Seller Vehicles</h2>\n                        {% for vehicle in \n                            seller.filtered_vehicles %}\n                            ...\n                        {% endfor %}\n                    {% endif %}\n                    <br /><hr /><br />\n                {% endfor %}\n    ...\n    ```"]