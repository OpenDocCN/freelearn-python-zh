["```py\n$ cd ~\n$ git clone https://github.com/PacktPublishing/Hands-On-ROS-for-Robotics-Programming \n```", "```py\n$ cp -R ~/Hands-On-ROS-for-Robotics-Programming/Chapter6_ROS_programming ~/catkin_ws/src\n```", "```py\n$ sudo visudo\n```", "```py\npi ALL=(ALL) NOPASSWD: ALL\n```", "```py\n$ sudo apt update && sudo apt upgrade -y\n```", "```py\n$ sudo apt install git\n```", "```py\n$ sudo apt install tree\n```", "```py\n$ sudo apt remove openssh-server\n$ sudo apt install openssh-server\n```", "```py\n$ sudo systemctl enable ssh\n$ sudo systemctl start ssh\n```", "```py\n$ sudo systemctl status ssh\n```", "```py\n$ sudo apt-get update\n$ sudo apt-get install x11vnc\n```", "```py\n$ x11vnc -storepasswd\n```", "```py\n$ sudo x11vnc -auth guess -forever -loop -noxdamage -repeat \\\n -rfbauth /home/pi/.vnc/passwd -rfbport 5900 -shared\n```", "```py\n$ sudo x11vnc -auth guess -forever -loop -noxdamage -repeat \\\n -rfbport 5900 -shared\n```", "```py\n$ sudo nano /lib/systemd/system/x11vnc.service\n```", "```py\n[Unit]\nDescription=Start x11vnc at startup.\nAfter=multi-user.target\n\n[Service]\nType=simple\n# If  using a password\nExecStart=/usr/bin/x11vnc -auth guess -forever -loop -noxdamage -repeat -rfbauth /home/pi/.vnc/passwd -rfbport 5900 -shared\n\n[Install]\nWantedBy=multi-user.target\n```", "```py\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable x11vnc.service\n$ sudo systemctl start x11vnc.service\n```", "```py\n$ sudo nano /boot/config.txt\n```", "```py\nhdmi_force_hotplug=1\n\nhdmi_group=2   \nhdmi_mode=47\n```", "```py\nhdmi_group=1\nhdmi_mode=31\n```", "```py\nhdmi_group=2\nhdmi_mode=82\n```", "```py\n$ sudo apt-get update\n$ sudo apt-get install -y geany\n```", "```py\n$ curl -kL dexterindustries.com/update_gopigo3 | bash\n$ curl -kL dexterindustries.com/update_sensors | bash\n```", "```py\nGoPiGo3 Troubleshooting Script log\n\nChecking for hardware, and checking hardware and firmware version.\n==================================================================\nManufacturer : Dexter Industries\nBoard : GoPiGo3\nSerial Number : F92DD433514E343732202020FF112535\nHardware version: 3.x.x\nFirmware version: 1.0.0\nBattery voltage : 9.414\n5v voltage : 4.889\n```", "```py\n$ sudo nano /boot/config.txt\n```", "```py\nstart_x=1\ngpu_mem=128\n```", "```py\n$ sudo bash -c \"echo 'start_x=1' >> /boot/config.txt\"\n$ sudo bash -c \"echo 'gpu_mem=128' >> /boot/config.txt\"\n```", "```py\n$ sudo pip install picamera\n```", "```py\nfrom time import sleep\nfrom picamera import PiCamera\n\ncamera = PiCamera()\ncamera.resolution = (1024, 768)\n\ncamera.start_preview()\n\n# Camera warm-up time\nsleep(2)\n\ncamera.capture('test.jpg')\n```", "```py\n$ chmod +x captureFile.py\n$ ./captureFile.py\n```", "```py\n$ sudo sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n```", "```py\n$ sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n```", "```py\n$ sudo apt-get update\n```", "```py\n$ sudo apt-get install ros-melodic-desktop\n```", "```py\n$ sudo rosdep init\n$ rosdep update\n```", "```py\n$ source /opt/ros/melodic/setup.bash\n```", "```py\n$ echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc\n$ source ~/.bashrc\n```", "```py\n$ mkdir -p ~/catkin_ws/src\n$ cd ~/catkin_ws/src\n$ catkin_init_workspace\n```", "```py\n$ ls -la\n\n... CMakeLists.txt -> /opt/ros/melodic/share/catkin/cmake/toplevel.cmake\n```", "```py\n$ cd ~/catkin_ws\n$ catkin_make\n```", "```py\n$ source ~/catkin_ws/devel/setup.bash\n```", "```py\n$ echo \"source ~/catkin_ws/devel/setup.bash\" >> ~/.bashrc\n$ source ~/.bashrc\n```", "```py\nsource /opt/ros/kinetic/setup.bash\nsource ~/catkin_ws/devel/setup.bash\n```", "```py\n$ cd ~/catkin_ws/src\n$ git clone https://github.com/ros-gopigo/gopigo3_node\n```", "```py\n$ cd ~/catkin_ws\n$ catkin_make\n```", "```py\n$ sudo apt-get update\n$ sudo apt-get install terminator\n```", "```py\n$ cd ~/catkin_ws/src/gopigo3_node/src\n$ ls\n```", "```py\nT1 $ roscore\nT2 $ rosrun gopigo3_node distance_sensor.py\nT3 $ rostopic echo /distance_sensor/distance\n```", "```py\nT4 $ rostopic echo /distance_sensor/distance -n 1\n```", "```py\n ~/Hands-On-ROS-for-Robotics-Programming/Chapter6_ROS_programming/pkg_mygopigo\n```", "```py\n$ cd ~/catkin_ws/src\n```", "```py\n$ catkin_create_pkg mygopigo\n```", "```py\n$ cd ~/catkin_ws\n$ catkin_make\n```", "```py\n$ roscd mygopigo\n$ mkdir src\n$ cd src\n```", "```py\n$ nano distance-sensor.py\n```", "```py\n#!/usr/bin/env python\n\n# import the modules\nfrom di_sensors.easy_distance_sensor import EasyDistanceSensor\nfrom time import sleep\n\n# instantiate the distance object\nmy_sensor = EasyDistanceSensor()\n\n# and read the sensor iteratively\nwhile True:\n  read_distance = my_sensor.read()\n  print(\"distance from object: {} cm\".format(read_distance))\n  sleep(0.1)\n```", "```py\n$ ./distance-sensor.py\n```", "```py\nimport rospy\nfrom sensor_msgs.msg import Range\n```", "```py\nfrom time import sleep\n```", "```py\ndef main():\n    my_sensor = EasyDistanceSensor()\n    rospy.init_node(\"distance_sensor\")\n    pub_distance = rospy.Publisher(\"~distance\", Range, queue_size=10)\n    msg_range = Range()\n    msg_range.header.frame_id = \"distance\"\n    msg_range.radiation_type = Range.INFRARED\n    msg_range.min_range = 0.02\n    msg_range.max_range = 3.0\n    rate = rospy.Rate(rospy.get_param('~hz', 1))\n\n```", "```py\n    while not rospy.is_shutdown():\n\n        read_distance = my_sensor.read()/100.0\n        msg_range.range = read_distance\n        msg_range.header.stamp = rospy.Time.now()\n\n        print msg_range.range*1000,\" mm\"\n        pub_distance.publish(msg_range)\n\n        rate.sleep()\n```", "```py\ncomment ...\nif __name__ == '__main__':\n    main()\n\n```", "```py\nimport rospy\nfrom sensor_msgs.msg import Range\n```", "```py\nrospy.init_node(\"distance_sensor\")\n```", "```py\npub_distance = rospy.Publisher(\"~distance\", Range, queue_size=10)\n```", "```py\n/distance_sensor/distance\n```", "```py\nuint8 ULTRASOUND=0\nuint8 INFRARED=1\n\nstd_msgs/Header header\nuint8 radiation_type\nfloat32 field_of_view\nfloat32 min_range\nfloat32 max_range\nfloat32 range\n```", "```py\nmsg_range = Range()\n\nmsg_range.header.frame_id = \"distance\"\nmsg_range.radiation_type = Range.INFRARED\nmsg_range.min_range = 0.02\nmsg_range.max_range = 3.0\n```", "```py\nread_distance = my_sensor.read()/100.0\n```", "```py\nmsg_range.range = read_distance\nmsg_range.header.stamp = rospy.Time.now()\n```", "```py\nrate = rospy.Rate(rospy.get_param('~hz', 1))\n```", "```py\ndistance_sensor/hz\n```", "```py\nwhile not rospy.is_shutdown():\n```", "```py\npub_distance.publish(msg_range)\n```", "```py\nrate.sleep()\n```", "```py\nT1 $ roscore\nT2 $ rosrun mygopigo distance-sensor.py\nT3 $ rostopic echo /distance_sensor/distance\n```", "```py\nT4 $ rqt_graph\n```", "```py\n$ roscd mygopigo\n```", "```py\n$ roscd mygopigo/src\n```", "```py\n$ rosls mygopigo/src\n```", "```py\n$ rosed mygopigo distance-sensor.py\n```", "```py\nexport EDITOR=nano\n```", "```py\necho 'export EDITOR=nano' >> ~/.bashrc\n```", "```py\nEDITOR=geany rosed mygopigo distance-sensor.py\n```", "```py\n$ roscore\n```", "```py\n$ rosrun <name_of_package> <name_of_script>\n```", "```py\nrospy.init_node(\"distance_sensor\")\n```", "```py\n$ rosrun mygopigo distance-sensor.py\n```", "```py\nprint msg_range.range*1000,\" mm\"\n```", "```py\n$ rostopic list\n```", "```py\n$ rostopic echo distance_sensor/distance\n```", "```py\n$ rosnode list\n```", "```py\n$ rosnode info distance_sensor\n```", "```py\n$ rostopic info distance_sensor/distance\n\n```", "```py\n$ rosmsg info sensor_msgs/Range\n```", "```py\nT1 $ roslaunch mygopigo easyDistance.launch\nT2 $ rosbag record /distance_sensor/distance\n```", "```py\nT2 $ rosbag info 2019-08-15-20-36-36_distanceSensor.bag\n\npath: 2019-08-15-20-36-36.bag\nversion: 2.0\nduration: 46.0s\nstart: Aug 15 2019 20:36:37.48 (1565894197.48)\nend: Aug 15 2019 20:37:23.50 (1565894243.50)\nsize: 14.5 KB\nmessages: 47\ncompression: none [1/1 chunks]\ntypes: sensor_msgs/Range [c005c34273dc426c67a020a87bc24148]\ntopics: /distance_sensor/distance 47 msgs : sensor_msgs/Range\n```", "```py\nT1 $ roscore\nT2 $ rosbag play 2019-08-15-20-36-36_distanceSensor.bag\n\nT3 $ rostopic echo /distance_sensor/distance\nT4 $ rqt_graph\nT5 $ rqt_plot\n```", "```py\n$ rospack list | grep gopigo\n gopigo3_node /home/pi/catkin_ws/src/gopigo3_node\n mygopigo /home/pi/catkin_ws/src/mygopigo\n```", "```py\n#!/usr/bin/env python\n\nimport rospy\nfrom sensor_msgs.msg import Range\n\ndef callback(msg):\n    print msg.data\n    rospy.loginfo(rospy.get_caller_id() + 'GoPiGo3 measures distance %s mm', msg.data*1000)\n\nrospy.init_node('distance_sensor_subscriber')\n\nsub = rospy.Subscriber('distance_sensor/distance', Range, callback)\n\nrospy.spin()\n```", "```py\nrospy.spin()\n```", "```py\nsub = rospy.Subscriber('distance_sensor/distance', Range, callback)\n```", "```py\ndef callback(msg):\n    print msg.data\n    rospy.loginfo(rospy.get_caller_id() + 'GoPiGo3 measures distance %s mm', msg.data*1000)\n```", "```py\nT1 $ roscore\nT2 $ rosrun mygopigo distance-sensor.py\nT3 $ rostopic echo distance_sensor/distance\nT4 $ rosrun mygopigo distance-sensor_subscriber.py\nT5 $ rqt_graph\n```", "```py\n$ roslaunch <name_of_package> <name_of_launch_file>\n```", "```py\n<launch>\n   <node name=\"easyDistance_sensor\" pkg=\"mygopigo\" type=\"distance-sensor.py\" output=\"screen\" />\n   node name=\"distance_subscriber\" pkg=\"mygopigo\" type=\"distance-sensor_subscriber.py\" output=\"screen\" />\n</launch>\n```", "```py\nrospy.init_node(\"distance_sensor\")\n```", "```py\nT1 $ roslaunch mygopigo easyDistance.launch\nT2 $ rostopic echo /easyDistance_sensor/distance\n```", "```py\nT1 $ roslaunch mygopigo easyDistance.launch\nT2 $ rostopic echo distance_sensor/distance\nT3 $ rqt_graph\n```", "```py\n$ cd ~/catkin_ws/src\n$ git clone https://github.com/UbiquityRobotics/raspicam_node.git\n```", "```py\n$ sudo -s\n$ echo “yaml https://raw.githubusercontent.com/UbiquityRobotics/rosdep/master/raspberry-pi.yaml” > /etc/ros/rosdep/sources.list.d/30-ubiquity.list\n$ exit\n```", "```py\n$ rosdep update\n```", "```py\n$ cd ~/catkin_ws\n$ rosdep install --from-paths src --ignore-src --rosdistro=melodic -y\n```", "```py\n$ catkin_make --only-pkg-with-deps raspicam_node\n$ catkin_make -DCATKIN_WHITELIST_PACKAGES=\"\"\n```", "```py\nT1 $ roslaunch raspicam_node camerav2_1280x960.launch\n```", "```py\nT1 $ roslaunch raspicam_node camerav1_1280x720.launch\n```", "```py\nT2 $ rosrun raspicam_node imv_view.py\n```", "```py\nT3 $ rqt_graph\n```", "```py\nT4 $ rostopic list | grep raspicam_node\n\n/raspicam_node/camera_info\n/raspicam_node/image/compressed\n/raspicam_node/parameter_descriptions\n/raspicam_node/parameter_updates\n```", "```py\nT1 $ roslaunch raspicam_node camerav2_410x308_30fps.launch\nT2 $ rqt_image_view\n```", "```py\nT1 $ roslaunch mygopigo easyDistance.launch\nT2 $ rostopic list | grep distance_sensor\nT3 $ rqt_plot\n```", "```py\nT1 $ roscore\nT2 $ rqt_bag\n```", "```py\nT3 $ rostopic echo /distance_sensor/distance\nT4 $ rqt_graph\nT5 $ rqt_plot\n```", "```py\nT1 $ roslaunch raspicam_node camerav2_410x308_30fps.launch\nT2 $ rosbag record /raspicam_node/image/compressed\n```", "```py\n$ rosbag info 2019-08-15-20-44-53_raspicamImage.bag\n\npath: 2019-08-15-20-44-53_raspicamImage.bag\nversion: 2.0\nduration: 13.3s\nstart: Aug 15 2019 20:44:54.09 (1565894694.09)\nend: Aug 15 2019 20:45:07.38 (1565894707.38)\nsize: 37.5 MB\nmessages: 400\ncompression: none [47/47 chunks]\ntypes: sensor_msgs/CompressedImage [8f7a12909da2c9d3332d540a0977563f]\ntopics: /raspicam_node/image/compressed 400 msgs : sensor_msgs/CompressedImage\n```", "```py\nT1 $ roscore\nT2 $ rqt_bag\n```", "```py\nT3 $ rostopic echo /raspicam_node/image/compressed\nT4 $ rqt_graph\nT5 $ rqt_image_view\n```", "```py\nT1 $ roslaunch raspicam_node camerav2_410x308_30fps.launch\nT2 $ rqt_image_view\nT3 $ rosrun rqt_reconfigure rqt_reconfigure\n```", "```py\nT4 $ rosparam list | grep raspicam_node\n\n/raspicam_node/ISO\n/raspicam_node/awb_mode\n/raspicam_node/brightness\n/raspicam_node/camera_frame_id\n/raspicam_node/camera_id\n/raspicam_node/camera_info_url\n/raspicam_node/camera_name\n/raspicam_node/contrast\n/raspicam_node/enable_imv\n/raspicam_node/enable_raw\n/raspicam_node/exposure_compensation\n...\n/raspicam_node/zoom\n```", "```py\nT4 $ rosparam get /raspicam_node/brightness\n 81\n```"]