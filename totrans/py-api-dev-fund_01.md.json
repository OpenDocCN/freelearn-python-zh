["```py\n{\n  \"recipes\":[\n    {\n      \"id\":1,\n      \"name\":\"Egg Salad\",\n      \"description\":\"Place an egg in a saucepan and...\"\n    },\n    {\n      \"id\":2,\n      \"name\":\"Tomato Pasta\",\n      \"description\":\"Bring a large pot of lightly salted water to a boil...\"\n    }\n  ]\n}\n```", "```py\n    Flask==1.0.3\n    httpie==1.0.2\n    ```", "```py\n    from flask import Flask\n    app = Flask(__name__)\n    @app.route(\"/\")\n    def hello():\n        return \"Hello World!\"\n    if __name__ == \"__main__\":\n        app.run()\n    ```", "```py\n    from flask import Flask, jsonify, request\n    ```", "```py\n    from http import HTTPStatus\n    ```", "```py\n    app = Flask(__name__)\n    ```", "```py\n    recipes = [\n        {\n            'id': 1,\n            'name': 'Egg Salad',\n            'description': 'This is a lovely egg salad recipe.'\n        },\n        {\n            'id': 2, 'name': 'Tomato Pasta',\n            'description': 'This is a lovely tomato pasta recipe.'\n        }\n    ]\n    ```", "```py\n    @app.route('/recipes', methods=['GET'])\n    def get_recipes():\n    ```", "```py\n        return jsonify({'data': recipes})\n    ```", "```py\n    @app.route('/recipes/<int:recipe_id>', methods=['GET'])\n    ```", "```py\n    def get_recipe(recipe_id):\n        recipe = next((recipe for recipe in recipes if recipe['id'] == recipe_id), None)\n        if recipe:\n            return jsonify(recipe)\n        return jsonify({'message': 'recipe not found'}), HTTPStatus.NOT_FOUND\n    ```", "```py\n    @app.route('/recipes', methods=['POST'])\n    ```", "```py\n    def create_recipe():\n        data = request.get_json()\n        name = data.get('name')\n        description = data.get('description')\n        recipe = {\n            'id': len(recipes) + 1,\n            'name': name,\n            'description': description\n        }\n        recipes.append(recipe)\n    ```", "```py\n        return jsonify(recipe), HTTPStatus.CREATED \n    ```", "```py\n    @app.route('/recipes/<int:recipe_id>', methods=['PUT'])\n    def update_recipe(recipe_id):\n        recipe = next((recipe for recipe in recipes if recipe['id'] == recipe_id), None)\n    ```", "```py\n        if not recipe:\n            return jsonify({'message': 'recipe not found'}), HTTPStatus.NOT_FOUND\n    ```", "```py\n        data = request.get_json()\n        recipe.update(\n            {\n                'name': data.get('name'),\n                'description': data.get('description')\n            }\n        )\n    ```", "```py\n        return jsonify(recipe)\n    ```", "```py\n    if __name__ == '__main__':\n        app.run()\n    ```", "```py\n    from flask import Flask, jsonify, request\n    from http import HTTPStatus\n    app = Flask(__name__)\n    recipes = [\n        {\n            'id': 1,\n            'name': 'Egg Salad',\n            'description': 'This is a lovely egg salad recipe.'\n        },\n        {\n            'id': 2, 'name': 'Tomato Pasta',\n            'description': 'This is a lovely tomato pasta recipe.'\n        }\n    ]\n    @app.route('/recipes/', methods=['GET'])\n    def get_recipes():\n        return jsonify({'data': recipes})\n    @app.route('/recipes/<int:recipe_id>', methods=['GET'])\n    def get_recipe(recipe_id):\n        recipe = next((recipe for recipe in recipes if recipe['id'] == recipe_id), None)\n        if recipe:\n            return jsonify(recipe)\n        return jsonify({'message': 'recipe not found'}), HTTPStatus.NOT_FOUND\n    @app.route('/recipes', methods=['POST'])\n    def create_recipe():\n        data = request.get_json()\n        name = data.get('name')\n        description = data.get('description')\n        recipe = {\n            'id': len(recipes) + 1,\n            'name': name,\n            'description': description\n        }\n        recipes.append(recipe)\n        return jsonify(recipe), HTTPStatus.CREATED\n    @app.route('/recipes/<int:recipe_id>', methods=['PUT'])\n    def update_recipe(recipe_id):\n        recipe = next((recipe for recipe in recipes if recipe['id'] == recipe_id), None)\n        if not recipe:\n            return jsonify({'message': 'recipe not found'}), HTTPStatus.NOT_FOUND \n        data = request.get_json()\n        recipe.update(\n            {\n                'name': data.get('name'),\n                'description': data.get('description')\n            }\n        )\n        return jsonify(recipe)\n    if __name__ == '__main__':\n        app.run()\n    ```", "```py\n    http GET localhost:5000/recipes\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes \n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Length: 175\n    Content-Type: application/json\n    Date: Mon, 15 Jul 2019 12:40:44 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"data\": [\n            {\n                \"description\": \"This is a lovely egg salad recipe.\",\n                \"id\": 1,\n                \"name\": \"Egg Salad\"\n            },\n            {\n                \"description\": \"This is a lovely tomato pasta recipe.\",\n                \"id\": 2,\n                \"name\": \"Tomato Pasta\"\n            }\n        ]\n    }\n    ```", "```py\n    http POST localhost:5000/recipes name=\"Cheese Pizza\" description=\"This is a lovely cheese pizza\"\n    ```", "```py\n    curl -i -X POST localhost:5000/recipes -H \"Content-Type: application/json\" -d '{\"name\":\"Cheese Pizza\", \"description\":\"This is a lovely cheese pizza\"}'\n    ```", "```py\n    HTTP/1.0 201 CREATED\n    Content-Length: 77\n    Content-Type: application/json\n    Date: Mon, 15 Jul 2019 14:26:11 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"description\": \"This is a lovely cheese pizza\",\n        \"id\": 3,\n        \"name\": \"Cheese Pizza\"\n    }\n    ```", "```py\n    http GET localhost:5000/recipes \n    curl -i -X GET localhost:5000/recipes \n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Length: 252\n    Content-Type: application/json\n    Date: Tue, 16 Jul 2019 01:55:30 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"data\": [\n            {\n                \"description\": \"This is a lovely egg salad recipe.\",\n                \"id\": 1,\n                \"name\": \"Egg Salad\"\n            },\n            {\n                \"description\": \"This is a lovely tomato pasta recipe.\",\n                \"id\": 2,\n                \"name\": \"Tomato Pasta\"\n            },\n            {\n                \"description\": \"This is a lovely cheese pizza\",\n                \"id\": 3,\n                \"name\": \"Cheese Pizza\"\n            }\n        ]\n    }\n    ```", "```py\n    http PUT localhost:5000/recipes/3 name=\"Lovely Cheese Pizza\" description=\"This is a lovely cheese pizza recipe.\"\n    ```", "```py\n    curl -i -X PUT localhost:5000/recipes/3 -H \"Content-Type: application/json\" -d '{\"name\":\"Lovely Cheese Pizza\", \"description\":\"This is a lovely cheese pizza recipe.\"}'\n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Length: 92\n    Content-Type: application/json\n    Date: Tue, 16 Jul 2019 02:04:57 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"description\": \"This is a lovely cheese pizza recipe.\",\n        \"id\": 3,\n        \"name\": \"Lovely Cheese Pizza\"\n    }\n    ```", "```py\n    http GET localhost:5000/recipes/3\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes/3 \n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Length: 92\n    Content-Type: application/json\n    Date: Tue, 16 Jul 2019 06:10:49 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"description\": \"This is a lovely cheese pizza recipe.\",\n        \"id\": 3,\n        \"name\": \"Lovely Cheese Pizza\"\n    }\n    ```", "```py\n    http GET localhost:5000/recipes/101\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes/101 \n    ```", "```py\n    HTTP/1.0 404 NOT FOUND\n    Content-Length: 31\n    Content-Type: application/json\n    Date: Tue, 16 Jul 2019 06:15:31 GMT\n    Server: Werkzeug/0.15.4 Python/3.7.0\n    {\n        \"message\": \"recipe not found\"\n    }\n    ```", "```py\n    {\n         \"key1\": \"value1\",\n         \"key2\": \"value2\"\n    }\n    ```"]