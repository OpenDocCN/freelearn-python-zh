- en: Chapter 5. Connecting Physical Computing Systems to the Internet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 5 章. 将物理计算系统连接到互联网
- en: 'In this chapter, we will be focusing on connecting the BeagleBone board to
    the Internet to connect the physical computing systems that we build to the Internet.
    First we will look into giving Internet access to the BeagleBone board via Ethernet,
    then we will learn how to add Wi-Fi capability to the BeagleBone board so that
    the system we build can be placed anywhere where we have Wi-Fi access, and so
    that we are not restricted to setting up the system only where the Ethernet is
    available. Once we are done with this, we will go ahead and build two projects;
    in the first one we will send an e-mail alert whenever the temperature sensor
    reading goes above a set level in the Python program running on the BeagleBone
    board. The next one will be a basic beginner project on Internet of Things for
    you to get started where the BeagleBone board will be uploading the temperature
    sensor data to a cloud server on the Internet. So basically, we will be using
    the knowledge we learnt in previous chapters, in this chapter, in order to take
    our previous projects to the next level. We''ll do this by connecting them to
    the Internet and by performing operations on the cloud and on messaging services
    such as e-mail. The contents of the chapter are divided into the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将专注于将 BeagleBone 板连接到互联网，以便将我们构建的物理计算系统连接到互联网。首先，我们将探讨通过以太网为 BeagleBone
    板提供互联网访问，然后我们将学习如何为 BeagleBone 板添加 Wi-Fi 功能，以便我们构建的系统可以放置在任何有 Wi-Fi 访问的地方，并且不受仅在有以太网的地方设置系统的限制。完成这些后，我们将继续构建两个项目；在第一个项目中，我们将通过运行在
    BeagleBone 板上的 Python 程序，在温度传感器读数超过设定水平时发送电子邮件警报。下一个项目将是一个基本的物联网入门项目，其中 BeagleBone
    板将把温度传感器数据上传到互联网上的云服务器。所以基本上，我们将利用在前几章中学到的知识，在本章中，将我们之前的项目提升到下一个层次。我们将通过将它们连接到互联网，并在云和邮件等消息服务上执行操作来实现这一点。本章内容分为以下主题：
- en: Prerequisites
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 前提条件
- en: Giving Internet access to your BeagleBone board
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的 BeagleBone 板提供互联网访问
- en: Adding Wi-Fi to your BeagleBone board
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为你的 BeagleBone 板添加 Wi-Fi
- en: 'Intermediate level project: E-mail alert fire alarm – the Python program will
    send an e-mail if the temperature sensor readings go above a set level'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 中级项目：电子邮件警报火灾报警器 – 如果温度传感器读数超过设定水平，Python 程序将发送电子邮件
- en: 'Advanced project: Sensor data to cloud – a Python program will upload the temperature
    sensor data to an open source or freely available cloud service using the HTTP
    web service'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级项目：传感器数据上传至云端 – 一个 Python 程序将通过 HTTP 网络服务将温度传感器数据上传到开源或免费云服务
- en: Prerequisites
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: This topic will cover what parts you need to get started with this chapter.
    These can be purchased from your favorite electrical hobby store or can simply
    be ordered online.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本主题将涵盖你开始本章所需的部件。这些可以从你喜欢的电子爱好商店购买，或者简单地在线订购。
- en: Materials needed
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需要的材料
- en: 'Following are the materials that we will need before moving ahead:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续前进之前，我们需要以下材料：
- en: 1x BeagleBone Black
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x BeagleBone Black
- en: 1x microSD card with latest version of Debian flashed on it to boot the BeagleBone
    board from the microSD card
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 带有最新版本 Debian 操作系统的 microSD 卡，用于从 microSD 卡启动 BeagleBone 板
- en: 1x 5V DC, 2A power supply
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 5V DC，2A 电源供应器
- en: 1x Ethernet cable
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 网线
- en: 1x LM35 temperature sensor
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x LM35 温度传感器
- en: 1x compatible Wi-Fi dongle
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 兼容的 Wi-Fi 拓展卡
- en: 1x BreadBoard
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1x 面包板
- en: A few jumper wires
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 几根跳线
- en: Giving Internet access to your BeagleBone board
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为你的 BeagleBone 板提供互联网访问
- en: 'Giving Internet access to the BeagleBone board via the Ethernet is very simple.
    All you need to do is connect one end of Ethernet cable to the BeagleBone board,
    and the other end to a router with an Internet connection. The BeagleBone board
    will obtain the IP address dynamically from the router using DHCP and get Internet
    access. To check this you can just type in the following command:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 通过以太网为 BeagleBone 板提供互联网访问非常简单。你只需要将网线的一端连接到 BeagleBone 板，另一端连接到有互联网连接的路由器。BeagleBone
    板将通过 DHCP 从路由器动态获取 IP 地址并获取互联网访问。为了检查这一点，你只需输入以下命令：
- en: '`ping www.google.com`'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`ping www.google.com`'
- en: You will get the response as shown in the following screenshot. This means you
    have a working Internet connection.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你将获得以下截图所示的响应。这意味着你有一个正常工作的互联网连接。
- en: '![Giving Internet access to your BeagleBone board](img/4602_05_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![为你的 BeagleBone 板提供互联网访问](img/4602_05_01.jpg)'
- en: Actually, what the ping command does is, it tests the connection and latency
    between two network connections. The ping command sends packets of data to the
    other network computer, in our case the [www.google.com](http://www.google.com)
    server, or the IP address of that server. You can see next to [www.google.com](http://www.google.com)
    in the output above, the global IP address of the server is shown. The picture
    shows how the ping command measures the time taken to get a response from that
    server computer, where the time is in milliseconds.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，ping命令的作用是测试两个网络连接之间的连接和延迟。ping命令向另一台网络计算机发送数据包，在我们的例子中是[www.google.com](http://www.google.com)服务器，或者该服务器的IP地址。你可以在上面的输出中看到[www.google.com](http://www.google.com)旁边，显示的是服务器的全球IP地址。图片显示了ping命令如何测量从该服务器计算机获得响应所需的时间，时间以毫秒为单位。
- en: So, it's as simple as that to give Internet access to the BeagleBone board,
    running a working operating system such as Linux. This will automatically obtain
    the IP address from the Internet router to which it is connected using DHCP. But
    in most of the cases we will need a setup where the real-time embedded system
    is wireless which gives more flexibility in placing the system at any place for
    its operation instead of restricting the setup to be connected to Ethernet cable.
    The next topic of this chapter will focus on how to setup Wi-Fi access to BeagleBone
    board.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，为BeagleBone板提供互联网访问非常简单，运行一个像Linux这样的工作操作系统。这将自动从连接的互联网路由器通过DHCP获取IP地址。但在大多数情况下，我们需要一个设置，其中实时嵌入式系统是无线连接的，这为将系统放置在任何地方进行操作提供了更多灵活性，而不是将设置限制为连接到以太网电缆。本章的下一个主题将重点介绍如何设置Wi-Fi访问BeagleBone板。
- en: Adding Wi-Fi to the BeagleBone board
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将Wi-Fi添加到BeagleBone板
- en: 'To add Wi-Fi capability to the BeagleBone board, let''s connect a Wi-Fi dongle
    in the USB port available on the BeagleBone board, as shown in the following picture:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要将Wi-Fi功能添加到BeagleBone板，让我们将Wi-Fi适配器连接到BeagleBone板上可用的USB端口，如下面图片所示：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_02.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_02.jpg)'
- en: 'Once you have connected the USB Wi-Fi dongle you can check whether it is connected
    or not by typing the following command:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你连接了USB Wi-Fi适配器，你可以通过输入以下命令来检查它是否已连接：
- en: '`lsusb`: This is shown in the following screenshot where the USB Wi-Fi dongle
    is highlighted, that is **Atheros Communications, Inc. AR9271 802.11n**:![Adding
    Wi-Fi to the BeagleBone board](img/4602_05_03.jpg)'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`lsusb`：如下面截图所示，USB Wi-Fi适配器被突出显示，即**Atheros Communications, Inc. AR9271 802.11n**：![将Wi-Fi添加到BeagleBone板](img/4602_05_03.jpg)'
- en: 'Then type the following command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然后输入以下命令：
- en: '`iwconfig`: `iwconfig` will show you the details of the wireless LAN connection
    status, as shown in the previous screenshot, where you can see that wlan1, which
    is highlighted, shows the detail that is not associated with any access point
    as of now.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iwconfig`：`iwconfig`将显示无线局域网连接状态的详细信息，如前一个截图所示，你可以看到被突出显示的wlan1目前没有与任何接入点关联的详细信息。'
- en: Our next step is to connect the Wi-Fi dongle to the Wi-Fi access point. To do
    this we will be using a program called `wicd-curses`, which is available in Debian
    by default.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们下一步是连接Wi-Fi适配器到Wi-Fi接入点。为此，我们将使用一个名为`wicd-curses`的程序，该程序在Debian中默认可用。
- en: 'To use the program we need to enter the following command:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用该程序，我们需要输入以下命令：
- en: sudo wicd-curses![Adding Wi-Fi to the BeagleBone board](img/4602_05_64.jpg)
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: sudo wicd-curses![将Wi-Fi添加到BeagleBone板](img/4602_05_64.jpg)
- en: 'Once you execute the command you will get an interactive program window as
    shown in the following screenshot:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，你将得到一个如下截图所示的交互式程序窗口：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_04.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_04.jpg)'
- en: 'You can see in the preceding screenshot that the program states there are **No
    wireless networks found**. This is because we need to set up the USB Wi-Fi device
    first, and then search for the available Wi-Fi access points in the range. To
    do this, follow the next steps as shown in the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在前面的截图看到，程序指出没有找到**无线网络**。这是因为我们需要首先设置USB Wi-Fi设备，然后在该范围内搜索可用的Wi-Fi接入点。为此，请按照以下截图所示的步骤进行操作：
- en: 'Press the *Tab* button once to open the configuration menu, – you should get
    the screen as shown in the following screenshot:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 按下 *Tab* 键一次以打开配置菜单，– 你应该会看到以下截图所示的屏幕：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_05.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_05.jpg)'
- en: Once you get this screen, then press page up button once – it should highlight
    the wireless interface area, and then you need to type **wlan1** in it as shown
    in the following screenshot. If you remember, **wlan1** is what we had in the
    details of the wireless interface when we used the command `iwconfig` to get details
    of the interface created because of the USB Wi-Fi dongle.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您看到这个屏幕，然后按一次翻页向上按钮——它应该会高亮无线接口区域，然后您需要在其中输入**wlan1**，如下截图所示。如果您还记得，**wlan1**是我们使用`iwconfig`命令获取由USB
    Wi-Fi网卡创建的接口详细信息时看到的接口名称。
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_06.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_06.jpg)'
- en: 'Then, press the *F10* key to save the configuration. Once you have saved it,
    it will take you back to the previous main screen as shown in the following screenshot:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，按*F10*键保存配置。一旦保存，它将带您回到如下截图所示的前一个主屏幕：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_07.jpg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_07.jpg)'
- en: 'Now you need to press the *R* key once to refresh the program and search for
    available Wi-Fi access points in the range that the Wi-Fi dongle can connect to.
    Once you press the *R* key you will get a screen as shown in the following screenshot
    saying that it''s searching for available networks:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您需要按一次*R*键来刷新程序并搜索Wi-Fi网卡可连接范围内的可用Wi-Fi接入点。按下*R*键后，您将看到一个如下截图所示的屏幕，表示正在搜索可用网络：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_08.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_08.jpg)'
- en: 'Then, after scanning, it will show the screen as shown in the following screenshot,
    listing out the available Wi-Fi access points in the range:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，扫描完成后，屏幕将显示如下截图所示的界面，列出范围内的可用Wi-Fi接入点：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_09.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_09.jpg)'
- en: 'Once you have the list of available Wi-Fi access points you can choose the
    one to which you want the Wi-Fi dongle to connect by using the arrow keys up and
    down to select the access point. As you can see in the following screenshot, the
    access points get highlighted as you move the arrow keys. In this picture, **TERO**
    is highlighted:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您有了可用Wi-Fi接入点的列表，您可以通过使用上下箭头键选择要连接的接入点。如以下截图所示，当您移动箭头键时，接入点会高亮显示。在这张图片中，**TERO**被高亮：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_10.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_10.jpg)'
- en: 'Once you have selected the network you want to connect to, when its highlighted
    as shown in the preceding picture, press the **right arrow** key on the keyboard
    and you should see the screen as shown in following screenshot which is asking
    for a password to connect:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了想要连接的网络，当它被高亮显示，如前图所示，请按键盘上的**右箭头**键，您应该会看到如下截图所示的屏幕，要求输入密码进行连接：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_11.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_11.jpg)'
- en: You need to set the options as shown in the following screenshot to get a DHCP-based
    IP allocation from the router, or if you want to have a static IP for your BeagleBone
    board, you can do that as well. Use the *Tab* key to switch fields on the screen.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要设置如下截图所示的选项，以便从路由器获取基于DHCP的IP分配，或者如果您想为您的BeagleBone板设置静态IP，也可以这样做。使用*Tab*键在屏幕上切换字段。
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_12.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_12.jpg)'
- en: 'So, set the hostname and enter the passkey in the key field as shown in the
    preceding screenshot, and save by pressing the *F10* key. Once you have done that
    you will get back to the main screen with a list of Wi-Fi access points available,
    as shown in the following screenshot:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，根据前述截图设置主机名并在密钥字段中输入密码，然后按*F10*键保存。完成这些操作后，您将回到主屏幕，显示可用的Wi-Fi接入点列表，如下截图所示：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_13.jpg)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_13.jpg)'
- en: Now you can press the *C* key connect to the network. Once you press it, your
    shell connection will be lost, as the BeagleBone board will get disconnected from
    the network via the Ethernet connection through which you have logged in. Now,
    the BeagleBone board will connect to the network via Wi-Fi, so the IP address
    of the BeagleBone board must have changed. To check this, we need to login to
    the router configuration page of the same router as we used to connect to the
    Wi-Fi when we connected the BeagleBone board. Think back to what we did in the
    first chapter to find the IP address of the BeagleBone board connected via the
    Ethernet to the router. Now we need to do the same with the Wi-Fi connection.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以按*C*键连接到网络。一旦按下，你的shell连接将会丢失，因为BeagleBone板将通过你登录的以太网连接断开网络连接。现在，BeagleBone板将通过Wi-Fi连接到网络，因此BeagleBone板的IP地址必须已更改。为了检查这一点，我们需要登录到与连接Wi-Fi时相同的路由器的路由器配置页面。回想一下我们在第一章中是如何找到通过以太网连接到路由器的BeagleBone板的IP地址的。现在我们需要用Wi-Fi连接来做同样的事情。
- en: 'Open the router page as follows:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下方式打开路由器页面：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_14.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_14.jpg)'
- en: 'Check the list of DHCP clients:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 检查DHCP客户端列表：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_15.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_15.jpg)'
- en: 'So, you can see the IP address of the BeagleBone board connected to the network
    via Wi-Fi and, if you remember, BeagleBone was the hostname we mentioned when
    configuring the Wi-Fi with our passkey. Now let''s login into the Linux shell
    using this new IP address we have assigned:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，你可以看到通过Wi-Fi连接到网络的BeagleBone板的IP地址，如果你还记得，BeagleBone是我们配置Wi-Fi时提到的主机名。现在让我们使用我们分配的新IP地址登录到Linux
    shell：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_16.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_16.jpg)'
- en: 'Once logged in using the same user ID and password, type the command `iwconfig`
    again, and you can see that wlan1 is connected to the SSID that we configured
    and connected, which you can see it in the following screenshot:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦使用相同的用户ID和密码登录，再次输入命令`iwconfig`，你将看到wlan1连接到了我们配置并连接的SSID，你可以在下面的屏幕截图中看到：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_17.jpg)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_17.jpg)'
- en: 'Now type in the `ping` command to check the Internet connectivity:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 现在输入`ping`命令来检查网络连接性：
- en: '![Adding Wi-Fi to the BeagleBone board](img/4602_05_18.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![将Wi-Fi添加到BeagleBone板](img/4602_05_18.jpg)'
- en: 'Once we have the Internet connection properly working on the BeagleBone board,
    we can move on to the next topics: two projects with the system connected to the
    Internet.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们在BeagleBone板上正确地建立了网络连接，我们就可以继续下一个主题：两个与互联网连接的项目。
- en: 'Intermediate level project: An e-mail alert fire alarm'
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中级项目：电子邮件警报火灾报警器
- en: 'First of all, as in the previous chapter, take three berg wires and connect
    the LM35 temperature sensor to the BeagleBone board, as per the circuit diagram
    shown in the following image:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，就像上一章一样，拿三根伯格线，按照以下电路图将LM35温度传感器连接到BeagleBone板：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_19.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_19.jpg)'
- en: Then we will turn on the BeagleBone board and login to the Linux shell to start
    coding it.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将打开BeagleBone板并登录到Linux shell以开始编写代码。
- en: 'Open the Python console to learn and test how to send an e-mail using Python:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 打开Python控制台，学习并测试如何使用Python发送电子邮件：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_20.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_20.jpg)'
- en: Our first step will be to import the `smtplib` into Python, which is the mail
    transfer protocol library with the predefined function that we will be using in
    the program.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的第一步是将`smtplib`导入Python，这是一个预定义函数的邮件传输协议库，我们将在程序中使用它。
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_21.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_21.jpg)'
- en: 'Next create a variable to store the e-mail ID to which you need to send the
    e-mail:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来创建一个变量来存储你想要发送电子邮件的电子邮件ID：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_22.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_22.jpg)'
- en: 'Then create the variables where you need to store the e-mail ID and password
    of the account from which you want to send the e-mail:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建变量以存储你想要发送电子邮件的账户的电子邮件ID和密码：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_23.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_23.jpg)'
- en: 'Create an SMTP object with a Gmail hostname and port number **587**:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Gmail主机名和端口号**587**创建一个SMTP对象：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_24.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_24.jpg)'
- en: 'EHLO is just like HELO except that the server''s response text provides computer-readable
    information about the server''s abilities. The response of this helps us to confirm
    whether the SMTP server we created is at our service:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: EHLO与HELO类似，但服务器的响应文本提供了关于服务器能力的计算机可读信息。这个响应有助于我们确认我们创建的SMTP服务器是否为我们提供服务：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_25.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_25.jpg)'
- en: 'Next we need to create a secure connection. We already have a connection, which
    we checked in the last step, but it is insecure. STARTTLS is a way to take an
    existing insecure connection and upgrade it to a secure connection using SSL/TLS.
    You can do this as shown in the following screenshot:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要创建一个安全连接。我们已经在最后一步检查了连接，但它是不安全的。STARTTLS是一种将现有不安全连接升级为安全连接的方法，使用SSL/TLS。你可以按照以下截图所示进行操作：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_26.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_26.jpg)'
- en: 'Once again use EHLO as shown in the picture below to check and create the running
    SMTP instance:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 再次使用下图所示的EHLO来检查和创建运行中的SMTP实例：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_27.jpg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_27.jpg)'
- en: 'Our next step is to create the header variable with information about the sender
    e-mail address, the receiver e-mail address, and details about the subject of
    the e-mail:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是创建一个包含发件人电子邮件地址、收件人电子邮件地址和电子邮件主题详细信息的头变量：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_28.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_28.jpg)'
- en: We need to create another variable where we will add the header to the message
    we are going to send in the e-mail.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建另一个变量，我们将在这个变量中添加即将发送的电子邮件的消息头。
- en: 'When you print it out using the `print msg` command you can see how it appears
    in the following screenshot:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用`print msg`命令打印出来时，你可以看到它如下截图所示的样子：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_29.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_29.jpg)'
- en: Now we have the `msg` variable with information of the sender e-mail, receiver
    e-mail, subject of the e-mail and message of the e-mail as shown in preceding
    screenshot.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了`msg`变量，其中包含了发件人电子邮件、收件人电子邮件、电子邮件主题和电子邮件消息的信息，如下面的截图所示。
- en: 'Our next step is to login to the server using the sender e-mail and password.
    You can do this as shown in the following screenshot:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的下一步是使用发件人电子邮件和密码登录到服务器。你可以按照以下截图所示进行操作：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_30.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_30.jpg)'
- en: If you get the response as shown in the preceding screenshot, then you have
    successfully logged in.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你得到如前截图所示的响应，那么你已经成功登录。
- en: 'Next send the e-mail using the `sendmail` function with the receiver e-mail
    ID, sender e-mail ID and message as arguments:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用`sendmail`函数，通过接收者电子邮件ID、发件人电子邮件ID和消息作为参数发送电子邮件：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_31.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_31.jpg)'
- en: 'Once you have sent it you can go ahead and close the SMTP server and log out
    from it as shown following:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 发送后，你可以继续关闭SMTP服务器并从其中注销，如下所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_32.jpg)'
  id: totrans-101
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_32.jpg)'
- en: 'By now you must have received the e-mail on the receiver e-mail ID where you
    can see the subject **Python Email Test** just as we mentioned in Python, as shown
    in the following screenshot:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你一定已经收到了收件人电子邮件ID上的电子邮件，你可以看到主题**Python Email Test**，正如我们在Python中提到的，如下截图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_33.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_33.jpg)'
- en: 'If you open the e-mail you can see this message:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打开电子邮件，你可以看到这条消息：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_34.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_34.jpg)'
- en: 'We can actually see the message content is in a similar format to what we printed
    out on the Python console. Click on the **Show original** option on Gmail to see
    the original text e-mail, as shown in the following screenshot:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 我们实际上可以看到消息内容与我们在Python控制台上打印的内容格式相似。点击Gmail上的**显示原始内容**选项，查看原始文本电子邮件，如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_35.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_35.jpg)'
- en: 'Once you click on **Show original** you will see the e-mail as shown in the
    following screenshot:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击**显示原始内容**，你将看到如图所示的电子邮件：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_36.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_36.jpg)'
- en: 'You can see the highlighted part in the mail, which is exactly the same as
    the message we composed and sent from the Python console, as shown following:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到邮件中高亮的部分，与我们从Python控制台组成并发送的消息完全相同，如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_37.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_37.jpg)'
- en: 'You can exit the Python console now:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可以退出Python控制台：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_38.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_38.jpg)'
- en: 'Now let''s go ahead and write the Python program to send an e-mail whenever
    the temperature goes too high. You can just edit the code from our project in
    the previous chapter and save it with a new name as shown in the following screenshot:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们继续编写Python程序，以便在温度过高时发送电子邮件。你可以直接编辑上一章项目中的代码，并保存为新的名称，如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_39.jpg)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_39.jpg)'
- en: 'Once you have saved it, you can run the code as shown in the following screenshot:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 保存后，你可以按照以下截图所示运行代码：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_40.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_40.jpg)'
- en: 'You should get an e-mail now as shown in the following screenshot:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在应该会收到一封电子邮件，如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_41.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_41.jpg)'
- en: 'Hold a flame near to the sensor as shown in the following picture:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 将火焰靠近传感器，如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_42.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_42.jpg)'
- en: 'The output of the running Python code will be as shown in the following screenshot:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 运行中的Python代码输出将如图所示：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_43.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_43.jpg)'
- en: 'And you will get an e-mail as shown in the following screenshot:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你将收到如图所示的电子邮件：
- en: '![Intermediate level project: An e-mail alert fire alarm](img/4602_05_44.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![中级项目：电子邮件警报火灾报警器](img/4602_05_44.jpg)'
- en: 'So, that ends our project. When you remove the flame, it will again send you
    an e-mail saying that the temperature is normal. Here is how the code works: whenever
    there is a change in the temperature level, that is if the temperature rises above
    a set or below a set limit, it will send an e-mail saying that the temperature
    is high or the temperature is low, respectively.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们的项目就结束了。当你移除火焰时，它将再次发送一封电子邮件，说明温度正常。以下是代码的工作原理：当温度水平发生变化时，也就是说，如果温度超过或低于设定的限制，它将发送一封电子邮件，说明温度过高或过低。
- en: Unlike in this project, where a decision is made using the temperature measured
    with a temperature sensor, and then an email is sent based on this decision, the
    next project will directly upload the temperature sensor data to the cloud server.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 与本项目不同，本项目是通过使用温度传感器测量的温度来做出决策，然后根据这个决策发送电子邮件，下一个项目将直接将温度传感器数据上传到云服务器。
- en: 'Advanced level project: Uploading sensor data to a web cloud'
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级项目：将传感器数据上传到网络云
- en: The connections are similar to the previous project, the only difference in
    that will be writing a new Python program to upload data to a freely available
    cloud server using HTTP call methods.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 连接方式与上一个项目类似，唯一的区别是编写一个新的Python程序，使用HTTP调用方法将数据上传到免费云服务器。
- en: With the same connections as the previous project, connect the temperature sensor
    to the BeagleBone board.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 使用与上一个项目相同的连接，将温度传感器连接到BeagleBone板。
- en: Then the first thing we need to do is setup the cloud server to which we need
    to upload data. We will be using a freely available cloud storage space website
    specially setup for IoT applications. The website is [www.thingspeak.com](http://www.thingspeak.com),
    We chose to use this cloud solution out of the many available because ThingSpeak
    makes it very simple to upload data from hardware to a cloud for IoT applications.
    They have a lot of examples for different hardware development boards used for
    different applications. Looking at these wide variety of examples and easy APIs
    will help you experiment a lot more on your own using the BeagleBone board than
    what we do in this chapter.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们首先需要设置需要上传数据的云服务器。我们将使用专门为物联网应用设置的免费云存储空间网站。该网站是[www.thingspeak.com](http://www.thingspeak.com)，我们从众多可用的云解决方案中选择使用这个云解决方案，因为ThingSpeak使得从硬件上传数据到云用于物联网应用变得非常简单。他们有很多用于不同应用的、不同硬件开发板的示例。查看这些广泛的示例和简单的API将帮助您在使用BeagleBone板时进行更多的实验，比我们在本章中做的还要多。
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_45.jpg)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_45.jpg)'
- en: 'The first thing you need to do on this website is signup and create an account:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个网站上，您需要做的第一件事是注册并创建一个账户：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_46.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_46.jpg)'
- en: 'Once the account is created, and you can login into your account, you will
    see the screen as shown in the following screenshot, and will need to click on
    **New Channel**:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了账户，并且您可以登录到您的账户，您将看到以下屏幕截图所示的界面，并且需要点击**新建频道**：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_47.jpg)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_47.jpg)'
- en: 'When you click on **New Channel** it will ask for details of the same. Fill
    them in as shown in the following screenshot:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 当您点击**新建频道**时，它将要求您填写相同的详细信息。按照以下屏幕截图所示填写：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_50.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_50.jpg)'
- en: 'Once you have entered the details you can click on **Save Channel**:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦输入了详细信息，您就可以点击**保存频道**：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_51.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_51.jpg)'
- en: 'You can see the channel with the field as shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下屏幕截图中看到具有所示字段的频道：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_52.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_52.jpg)'
- en: Next we should look at the API provided by the ThingSpeak website to update
    data to the cloud server.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们应该查看ThingSpeak网站提供的API，用于将数据更新到云服务器。
- en: 'You can see the details of the API of the HTTP call that you need to make to
    the ThingSpeak server in the following screenshot:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在以下屏幕截图中查看您需要发送到ThingSpeak服务器的HTTP调用的API详细信息：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_53.jpg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_53.jpg)'
- en: 'As highlighted in the preceding screenshot, we can use HTTP POST data to update
    data to the cloud server. The next steps will show you how to update data to the
    cloud server from Python using this HTTP POST call:'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个屏幕截图所示，我们可以使用HTTP POST数据更新云服务器上的数据。接下来的步骤将向您展示如何使用这个HTTP POST调用从Python更新云服务器上的数据：
- en: 'First, open the Python interactive console:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，打开Python交互式控制台：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_54.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_54.jpg)'
- en: 'Then we need to import the `requests` module, which is a Python library that
    has built in functions to make HTTP requests on webservers:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们需要导入`requests`模块，这是一个Python库，它具有在webservers上执行HTTP请求的内置函数：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_55.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_55.jpg)'
- en: 'Next we can directly try making the HTTP POST request to the server using the
    API that was given as shown in the following screenshot:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以直接尝试使用以下屏幕截图所示的API直接向服务器发送HTTP POST请求：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_56.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_56.jpg)'
- en: The highlighted part is the parameter you pass to the server when you are make
    the POST call to `https://api.thingspeak.com/update.json` URL.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 突出显示的部分是在您向`https://api.thingspeak.com/update.json` URL进行POST调用时传递给服务器的参数。
- en: You can see that we have mentioned `field1=25` which will be updated on the
    ThingSpeak server.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到我们提到了`field1=25`，这将更新到ThingSpeak服务器上。
- en: 'The response will be stored in variable `r`, and when you `print r`, if you
    get the response as `200`, then the data was updated successfully:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 响应将被存储在变量`r`中，当你`print r`时，如果你收到`200`的响应，那么数据已成功更新：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_57.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_57.jpg)'
- en: 'Once you have the response as `200`, the data is updated on the webserver as
    you can see in the following screenshot:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你收到`200`的响应，数据就像以下截图所示已更新到网络服务器上：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_58.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_58.jpg)'
- en: 'Perform the HTTP post call with `field1` data equal to `10`:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`field1`数据等于`10`执行HTTP POST调用：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_59.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_59.jpg)'
- en: 'Then you can see that field1 is updated with new data at that time instant:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，你可以看到field1在该时间点已更新为新数据：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_60.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_60.jpg)'
- en: 'Now we will go ahead and write the code to update the temperature data to the
    cloud continuously. We can use our `TestLM35.py` code to make changes in it and
    save it with a new name to update the temperature data every 61 seconds to the
    [https://thingspeak.com/](https://thingspeak.com/) server:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将继续编写代码以连续更新温度数据到云服务器。我们可以使用我们的`TestLM35.py`代码对其进行修改，并以新名称保存，以便每61秒将温度数据更新到[https://thingspeak.com/](https://thingspeak.com/)服务器：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_61.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_61.jpg)'
- en: 'When you run the program, the output will be as shown in the following screenshot:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行程序时，输出将如以下截图所示：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_62.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_62.jpg)'
- en: You can use *Ctrl* + *C* to end the program and exit.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用*Ctrl* + *C*来结束程序并退出。
- en: 'Then, if you see the data on the field1 Chart on the ThingSpeak website, you
    can see that the data has been updated as shown in the pictures below. You can
    see the time stamp and see that the interval between the two instances of data
    update is 1 minute, and the temperature reading value also matches what we printed
    on the output on the console:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果你在ThingSpeak网站上的field1图表中查看数据，你可以看到数据已如以下图片所示更新。你可以看到时间戳，并看到两次数据更新实例之间的间隔为1分钟，温度读数值也与我们打印在控制台输出上的一致：
- en: '![Advanced level project: Uploading sensor data to a web cloud](img/4602_05_63.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![高级项目：将传感器数据上传到网络云](img/4602_05_63.jpg)'
- en: So, we have successfully written a program that updates data and stores it in
    a cloud server every one minute.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们已经成功编写了一个程序，每分钟更新数据并将其存储在云服务器上。
- en: Summary
  id: totrans-171
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter we learnt about giving Internet access to the BeagleBone board
    through Wi-Fi, and sending an e-mail alert whenever temperature measured, using
    a temperature sensor connected to BeagleBone board, goes high or low, depending
    on the threshold value set in the program. We also saw how we can upload data
    to the cloud web server using HTTP requests made to the server from the BeagleBone
    board using Python. So, we have learnt how to set up basic level Internet of Things
    projects in this chapter. You can go ahead and explore the options of using the
    `requests` module in Python to use HTTP Put, Post, and Get requests on various
    freely available open source cloud servers built for IoT which are just like [https://thingspeak.com/](https://thingspeak.com/),
    which we used in this chapter. There are options where, instead of uploading data
    using an HTTP post request, you can get data from a cloud server; that is you
    can read data from the cloud server and print it on the Python program. You can
    read data from the server instead of uploading data, just like we did in this
    chapter. I would suggest you explore all such possibilities.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何通过Wi-Fi为BeagleBone板提供互联网接入，以及当通过连接到BeagleBone板的温度传感器测量的温度高于或低于程序中设置的阈值时，发送电子邮件警报。我们还看到了如何使用Python从BeagleBone板向服务器发送HTTP请求来上传数据到云网络服务器。因此，在本章中我们学习了如何设置基本级别的物联网项目。你可以继续探索使用Python的`requests`模块在物联网中使用的各种免费开源云服务器上的HTTP
    Put、Post和Get请求的选项，这些服务器就像我们本章使用的[https://thingspeak.com/](https://thingspeak.com/)一样。有选项可以让你在不需要使用HTTP
    POST请求上传数据的情况下从云服务器获取数据；也就是说，你可以从云服务器读取数据并在Python程序中打印它。你可以像本章中那样读取服务器上的数据而不是上传数据，我建议你探索所有这样的可能性。
- en: In our next chapter we will go ahead and set up our own web server and connect
    it to the Internet. Once you learn that, in future if you can have one BeagleBone
    board acting as a webserver, instead of the third-party server we used in this
    chapter, another BeagleBone board may be uploading data to the server we setup
    using another BeagleBone board.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将继续设置我们自己的网络服务器并将其连接到互联网。一旦你学会了这一点，将来如果你可以使用一块BeagleBone板作为网络服务器，而不是本章中使用的第三方服务器，另一块BeagleBone板可能正在使用另一块BeagleBone板上传数据到我们设置的服务器。
