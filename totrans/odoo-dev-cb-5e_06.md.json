["```py\n    'data': [\n    'data/data.xml',\n    ],\n    ```", "```py\n    <record id=\"hostel_room\" model=\"hostel.room\">\n    <field name=\"name\"> Hostel Room 01 </field>\n    </record>\n    ```", "```py\n    <record id=\"base.main_company\" model=\"res.company\">\n    <field name=\"name\">Packt Publishing</field>\n    </record>\n    ```", "```py\n    'demo': [\n    'data/demo.xml',\n    ],\n    ```", "```py\n    <odoo>\n    <record id=\"member_hda\" model=\"res.partner\">\n    <field name=\"name\">Husen Daudi</field>\n    </record>\n    <record id=\"member_jvo\" model=\"res.partner\">\n    <field name=\"name\">Jay Vora</field>\n    </record>\n    <record id=\"hostel_room_1\" model=\"hostel.room\">\n    <field name=\"name\">Hostel Room 01</field>\n    <field name=\"room_no\">HR001</field>\n    <field name=\"author_ids\"\n    eval=\"[(6, 0, [ref('author_hda'), ref('author_jvo')])]\"\n    />\n    </record>\n    </odoo>\n    ```", "```py\n    'data': [\n    'data/data.xml',\n    ...\n    ],\n    ```", "```py\n    <odoo>\n    <record id=\"res_partner_packt\" model=\"res.partner\">\n    <field name=\"name\">Packt Publishing</field>\n    <field name=\"city\">Birmingham</field>\n    <field name=\"country_id\" ref=\"base.uk\" />\n    </record>\n    </odoo>\n    ```", "```py\n    <odoo noupdate=\"1\">\n        <record id=\"res_partner_packt\" model=\"res.partner\">\n            <field name=\"name\">Packt Publishing</field>\n            <field name=\"city\">Birmingham</field>\n            <field name=\"country_id\" ref=\"base.uk\"/>\n        </record>\n    </odoo>\n    ```", "```py\n    <odoo noupdate=\"1\">\n        <record id=\"room_category_all\" model=\"hostel.room.category\"\n                forcecreate=\"false\">\n            <field name=\"name\">All rooms</field>\n        </record>\n    </odoo>\n    ```", "```py\n'data': [\n    ...\n    'security/ir.model.access.csv',\n],\n```", "```py\n    id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink\n    access_hostel_manager,hostel.room.manager,model_hostel_room,group_hostel_manager,1,1,1,1\n    ```", "```py\n        'version': '17.0.2.0.1',\n    ```", "```py\n    def migrate(cr, version):\n        cr.execute('ALTER TABLE hostel_room RENAME COLUMN allocation_date TO allocation_date_char')\n    ```", "```py\n    from odoo import fields\n    from datetime import date\n    def migrate(cr, version):\n        cr.execute('SELECT id, allocation_date_char FROM\n        hostel_room')\n        for record_id, old_date in cr.fetchall():\n            # check if the field happens to be set in Odoo's\n            internal\n            # format\n            new_date = None\n            try:\n                new_date = fields.Date.to_date(old_date)\n            except ValueError:\n                if len(old_date) == 4 and old_date.isdigit():\n                    # probably a year\n                    new_date = date(int(old_date), 1, 1)\n            if new_date:\n                cr.execute('UPDATE hostel_room SET allocation_date=%s WHERE id=2',\n                           (new_date,))\n    ```", "```py\nfrom odoo import api, SUPERUSER_ID\ndef migrate(cr, version):\n    env = api.Environment(cr, SUPERUSER_ID, {})\n    # env holds all currently loaded models\n```", "```py\n<record id=\"room_category_to_remove\" model=\"hostel.room.category\">\n    <field name=\"name\">Single sharing</field>\n</record>\n<record id=\"room_category_not_remove\" model=\"hostel.room.category\">\n    <field name=\"name\">Double Sharing</field>\n</record>\n```", "```py\n    <delete model=\"hostel.room.category\" id=\"room_category_to_remove\"/>\n    ```", "```py\n    <delete model=\"hostel.room.category\" search=\"[('name', 'ilike', 'Single Room Category')]\"/>\n    ```", "```py\n    @api.model\n    def _update_room_price(self):\n        all_rooms = self.search([])\n        for room in all_rooms:\n            room.cost_price += 10\n    ```", "```py\n    <function model=\"hostel.room\" name=\"_update_room_price\"/>\n    ```", "```py\n    @api.model\n    def update_room_price(self, category, amount_to_increase):\n        category_rooms = self.search([('category_id', '=', category.id)])\n        for room in category_rooms:\n            room.cost_price += amount_to_increase\n```", "```py\n<function model=\"hostel.room\"\n    name=\"update_room_price\"\n    eval=\"(ref('category_xml_id'), 20)\"/>\n```"]