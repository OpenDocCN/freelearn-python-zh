["```py\nclass Model(object):\n    services = {\n                 'email': {'number': 1000, 'price': 2,},\n                 'sms': {'number': 1000, 'price': 10,},\n                 'voice': {'number': 1000, 'price': 15,},\n    }\n\nclass View(object):\n    def list_services(self, services):\n        for svc in services:\n            print(svc, ' ')\n\n    def list_pricing(self, services):\n        for svc in services:\n            print(\"For\" , Model.services[svc]['number'],\n                               svc, \"message you pay $\",\n                           Model.services[svc]['price'])\n\nclass Controller(object):\n    def __init__(self):\n        self.model = Model()\n        self.view = View()\n\n    def get_services(self):\n        services = self.model.services.keys()\n        return(self.view.list_services(services))\n\n    def get_pricing(self):\n        services = self.model.services.keys()\n        return(self.view.list_pricing(services))\n\nclass Client(object):\n    controller = Controller()\n    print(\"Services Provided:\")\n    controller.get_services()\n    print(\"Pricing for Services:\")\n    controller.get_pricing()\n```", "```py\nclass Model(object):\n    def logic(self):\n        data = 'Got it!'\n        print(\"Model: Crunching data as per business logic\")\n        return data\n\nclass View(object):\n    def update(self, data):\n        print(\"View: Updating the view with results: \", data)\n\nclass Controller(object):\n    def __init__(self):\n        self.model = Model()\n        self.view = View()\n\n    def interface(self):\n        print(\"Controller: Relayed the Client asks\")\n        data = self.model.logic()\n        self.view.update(data)\n\nclass Client(object):\n    print(\"Client: asks for certain information\")\n    controller = Controller()\n    controller.interface()\n```", "```py\nimporttornado\nimport tornado.web\nimport tornado.ioloop\nimport tornado.httpserver\nimport sqlite3\n```", "```py\nclass IndexHandler(tornado.web.RequestHandler):\n    def get(self):\n        query = \"select * from task\"\n        todos = _execute(query)\n        self.render('index.html', todos=todos)\n\nclass NewHandler(tornado.web.RequestHandler):\n    def post(self):\n        name = self.get_argument('name', None)\n        query = \"create table if not exists task (id INTEGER \\\n            PRIMARY KEY, name TEXT, status NUMERIC) \"\n        _execute(query)\n        query = \"insert into task (name, status) \\\n            values ('%s', %d) \" %(name, 1)\n        _execute(query)\n        self.redirect('/')\n\n    def get(self):\n        self.render('new.html')\n\nclass UpdateHandler(tornado.web.RequestHandler):\n    def get(self, id, status):\n        query = \"update task set status=%d where \\\n            id=%s\" %(int(status), id)\n        _execute(query)\n        self.redirect('/')\n\nclass DeleteHandler(tornado.web.RequestHandler):\n    def get(self, id):\n        query = \"delete from task where id=%s\" % id\n        _execute(query)\n        self.redirect('/')\n```", "```py\nbase.html\n<html>\n<!DOCTYPE>\n<html>\n<head>\n        {% block header %}{% end %}\n</head>\n<body>\n        {% block body %}{% end %}\n</body>\n</html>\n\nindex.html\n\n{% extends 'base.html' %}\n<title>ToDo</title>\n{% block body %}\n<h3>Your Tasks</h3>\n<table border=\"1\" >\n<tralign=\"center\">\n<td>Id</td>\n<td>Name</td>\n<td>Status</td>\n<td>Update</td>\n<td>Delete</td>\n</tr>\n    {% for todo in todos %}\n<tralign=\"center\">\n<td>{{todo[0]}}</td>\n<td>{{todo[1]}}</td>\n            {% if todo[2] %}\n<td>Open</td>\n            {% else %}\n<td>Closed</td>\n            {% end %}\n            {% if todo[2] %}\n<td><a href=\"/todo/update/{{todo[0]}}/0\">Close Task</a></td>\n            {% else %}\n<td><a href=\"/todo/update/{{todo[0]}}/1\">Open Task</a></td>\n            {% end %}\n<td><a href=\"/todo/delete/{{todo[0]}}\">X</a></td>\n</tr>\n    {% end %}\n</table>\n\n<div>\n<h3><a href=\"/todo/new\">Add Task</a></h3>\n</div>\n{% end %}\n\nnew.html\n\n{% extends 'base.html' %}\n<title>ToDo</title>\n{% block body %}\n<div>\n<h3>Add Task to your List</h3>\n<form action=\"/todo/new\" method=\"post\" id=\"new\">\n<p><input type=\"text\" name=\"name\" placeholder=\"Enter task\"/>\n<input type=\"submit\" class=\"submit\" value=\"add\" /></p>\n</form>\n</div>\n{% end %}\n```", "```py\nclass RunApp(tornado.web.Application):\n    def __init__(self):\n        Handlers = [\n            (r'/', IndexHandler),\n            (r'/todo/new', NewHandler),\n            (r'/todo/update/(\\d+)/status/(\\d+)', UpdateHandler),\n            (r'/todo/delete/(\\d+)', DeleteHandler),\n        ]\n        settings = dict(\n            debug=True,\n            template_path='templates',\n            static_path=\"static\",\n        )\n        tornado.web.Application.__init__(self, Handlers, \\\n            **settings)\n```", "```py\nif__name__ == '__main__':\n    http_server = tornado.httpserver.HTTPServer(RunApp())\n    http_server.listen(5000)\n    tornado.ioloop.IOLoop.instance().start()\n```"]