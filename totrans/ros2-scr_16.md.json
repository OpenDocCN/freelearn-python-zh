["```py\n$ sudo apt install ros-<distro>-ros-gz\n```", "```py\n$ gz sim\n```", "```py\n$ gz sim empty.sdf\n```", "```py\n$ gz topic -l\n```", "```py\n$ ros2 launch ros_gz_sim gz_sim.launch.py\n```", "```py\n$ ros2 launch ros_gz_sim gz_sim.launch.py gz_args:=empty.sdf\n```", "```py\n<xacro:macro name=\"box_inertia\" params=\"m x y z o_xyz o_rpy\">\n    <inertial>\n        <mass value=\"${m}\" />\n        <origin xyz=\"${o_xyz}\" rpy=\"${o_rpy}\" />\n        <inertia ixx=\"${(m/12) * (z*z + y*y)}\" ixy=\"0\" ixz=\"0\"\n                 iyy=\"${(m/12) * (x*x + z*z)}\" iyz=\"0\"\n                 izz=\"${(m/12) * (x*x + y*y)}\" />\n    </inertial>\n</xacro:macro>\n```", "```py\n<xacro:macro name=\"cylinder_inertia\" params=\"m r l o_xyz o_rpy\">\n    <inertial>\n        <mass value=\"${m}\" />\n        <origin xyz=\"${o_xyz}\" rpy=\"${o_rpy}\" />\n        <inertia ixx=\"${(m/12) * (3*r*r + l*l)}\" ixy=\"0\" ixz=\"0\"\n                 iyy=\"${(m/12) * (3*r*r + l*l)}\" iyz=\"0\"\n                 izz=\"${(m/2) * (r*r)}\" />\n    </inertial>\n</xacro:macro>\n```", "```py\n<xacro:macro name=\"sphere_inertia\" params=\"m r o_xyz o_rpy\">\n    <inertial>\n        <mass value=\"${m}\" />\n        <origin xyz=\"${o_xyz}\" rpy=\"${o_rpy}\" />\n        <inertia ixx=\"${(2/5) * m * r * r}\" ixy=\"0\" ixz=\"0\"\n                 iyy=\"${(2/5) * m * r * r}\" iyz=\"0\"\n                 izz=\"${(2/5) * m * r * r}\" />\n    </inertial>\n</xacro:macro>\n```", "```py\n<xacro:box_inertia m=\"5.0\" x=\"${base_length}\" y=\"${base_width}\" z=\"${base_height}\" o_xyz=\"0 0 ${base_height / 2.0}\" o_rpy=\"0 0 0\" />\n```", "```py\n<xacro:cylinder_inertia m=\"1.0\" r=\"${wheel_radius}\" l=\"${wheel_length}\" o_xyz=\"0 0 0\" o_rpy=\"${pi / 2.0} 0 0\" />\n```", "```py\n<xacro:sphere_inertia m=\"0.5\" r=\"${wheel_radius / 2.0}\"\n    o_xyz=\"0 0 0\" o_rpy=\"0 0 0\" />\n```", "```py\n$ ros2 launch my_robot_description display.launch.xml\n```", "```py\n<collision>\n    <geometry>\n        <box size=\"${base_length} ${base_width} ${base_height}\" />\n    </geometry>\n    <origin xyz=\"0 0 ${base_height / 2.0}\" rpy=\"0 0 0\" />\n</collision>\n```", "```py\n<collision>\n    <geometry>\n        <sphere radius=\"${wheel_radius}\" />\n    </geometry>\n    <origin xyz=\"0 0 0\" rpy=\"0 0 0\" />\n</collision>\n```", "```py\n<collision>\n    <geometry>\n        <sphere radius=\"${wheel_radius / 2.0}\" />\n    </geometry>\n    <origin xyz=\"0 0 0\" rpy=\"0 0 0\" />\n</collision>\n```", "```py\n$ ros2 run robot_state_publisher robot_state_publisher --ros-args -p robot_description:=\"$(xacro /home/<user>/my_robot_ws/src/my_robot_description/urdf/my_robot.urdf.xacro)\"\n```", "```py\n$ ros2 launch ros_gz_sim gz_sim.launch.py gz_args:=\"empty.sdf -r\"\n```", "```py\n$ ros2 run ros_gz_sim create -topic robot_description\n```", "```py\n$ cd ~/my_robot_ws/src/\n$ ros2 pkg create my_robot_bringup --build-type ament_cmake\n$ cd my_robot_bringup/\n$ rm -r include/ src/\n$ mkdir launch config\n```", "```py\ninstall(\n  DIRECTORY launch config\n  DESTINATION share/${PROJECT_NAME}/\n)\n```", "```py\n$ cd ~/my_robot_ws/src/my_robot_bringup/launch/\n$ touch my_robot.launch.xml\n```", "```py\n<launch>\n</launch>\n```", "```py\n<let name=\"urdf_path\" value=\"$(find-pkg-share my_robot_description)/urdf/my_robot.urdf.xacro\" />\n```", "```py\n<node pkg=\"robot_state_publisher\" exec=\"robot_state_publisher\">\n    <param name=\"robot_description\"\n           value=\"$(command 'xacro $(var urdf_path)')\" />\n</node>\n```", "```py\n<include\n    file=\"$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py\">\n    <arg name=\"gz_args\" value=\"empty.sdf -r\" />\n</include>\n```", "```py\n<node pkg=\"ros_gz_sim\" exec=\"create\" args=\"-topic robot_description\" />\n```", "```py\n<exec_depend>my_robot_description</exec_depend>\n<exec_depend>robot_state_publisher</exec_depend>\n<exec_depend>ros_gz_sim</exec_depend>\n```", "```py\n$ ros2 launch my_robot_bringup my_robot.launch.xml\n```", "```py\n$ ros2 run rviz2 rviz2 -d ~/my_robot_ws/src/my_robot_description/rviz/urdf_config.rviz\n```", "```py\n<?xml version=\"1.0\"?>\n<robot >\n</robot>\n```", "```py\n<xacro:include filename=\"$(find my_robot_description)/urdf/mobile_base_gazebo.xacro\" />\n```", "```py\n<gazebo>\n    <plugin\n        filename=\"gz-sim-diff-drive-system\"\n        name=\"gz::sim::systems::DiffDrive\">\n        <left_joint>base_left_wheel_joint</left_joint>\n        <right_joint>base_right_wheel_joint</right_joint>\n        <frame_id>odom</frame_id>\n        <child_frame_id>base_footprint</child_frame_id>\n        <wheel_separation>0.45</wheel_separation>\n        <wheel_radius>0.1</wheel_radius>\n    </plugin>\n</gazebo>\n```", "```py\n<gazebo reference=\"caster_wheel_link\">\n    <mu1 value=\"0.1\" />\n    <mu2 value=\"0.1\" />\n</gazebo>\n```", "```py\n<gazebo>\n    <plugin\n        filename=\"gz-sim-joint-state-publisher-system\"\n        name=\"gz::sim::systems::JointStatePublisher\">\n    </plugin>\n</gazebo>\n```", "```py\n$ gz topic -l\n/model/my_robot/tf\n/world/empty/model/my_robot/joint_state\n/model/my_robot/cmd_vel\n```", "```py\n- ros_topic_name: \"/cmd_vel\"\n  gz_topic_name: \"/model/my_robot/cmd_vel\"\n  ros_type_name: \"geometry_msgs/msg/Twist\"\n  gz_type_name: \"gz.msgs.Twist\"\n  direction: ROS_TO_GZ\n```", "```py\n- ros_topic_name: \"/joint_states\"\n  gz_topic_name: \"/world/empty/model/my_robot/joint_state\"\n  ros_type_name: \"sensor_msgs/msg/JointState\"\n  gz_type_name: \"gz.msgs.Model\"\n  direction: GZ_TO_ROS\n```", "```py\n- ros_topic_name: \"/tf\"\n  gz_topic_name: \"/model/my_robot/tf\"\n  ros_type_name: \"tf2_msgs/msg/TFMessage\"\n  gz_type_name: \"gz.msgs.Pose_V\"\n  direction: GZ_TO_ROS\n```", "```py\n<let name=\"gazebo_config_path\" value=\"$(find-pkg-share my_robot_bringup)/config/gazebo_bridge.yaml\" />\n```", "```py\n<node pkg=\"ros_gz_bridge\" exec=\"parameter_bridge\">\n    <param name=\"config_file\"\n           value=\"$(var gazebo_config_path)\" />\n</node>\n```", "```py\n<exec_depend>ros_gz_bridge</exec_depend>\n```", "```py\n$ ros2 topic pub /cmd_vel geometry_msgs/msg/Twist \"{linear: {x: 0.5}}\"\n```", "```py\n$ ros2 run teleop_twist_keyboard teleop_twist_keyboard\n```", "```py\n<let name=\"rviz_config_path\" value=\"$(find-pkg-share my_robot_description)/rviz/urdf_config.rviz\" />\n```", "```py\n<node pkg=\"rviz2\" exec=\"rviz2\" args=\"-d $(var rviz_config_path)\" />\n```"]