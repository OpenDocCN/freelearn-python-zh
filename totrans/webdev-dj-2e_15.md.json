["```py\nimport os\n# This will set the value since it's not already set\nos.environ.setdefault('UNSET_VAR', 'UNSET_VAR_VALUE')\n# This value will not be set since it's already passed\n# in from the command line\nos.environ.setdefault('SET_VAR', 'SET_VAR_VALUE')\nprint('UNSET_VAR:' + os.environ.get('UNSET_VAR', ''))\nprint('SET_VAR:' + os.environ.get('SET_VAR', ''))\n# All these values were provided from the shell in some way\nprint('HOME:' + os.environ.get('HOME', ''))\nprint('VAR1:' + os.environ.get('VAR1', ''))\nprint('VAR2:' + os.environ.get('VAR2', ''))\nprint('VAR3:' + os.environ.get('VAR3', ''))\nprint('VAR4:' + os.environ.get('VAR4', ''))\n```", "```py\n$ export SET_VAR=\"Set Using Export\"\n$ export VAR1=\"Set Using Export\"\n$ export VAR2=\"Set Using Export\"\n```", "```py\nset SET_VAR=\"Set Using Export\"\nset VAR1=\"Set Using Export\"\nset VAR2=\"Set Using Export\"\n```", "```py\n$ VAR2=\"Set From Command Line\" VAR3=\"Also Set From Command Line\" python3 env_example.py \n```", "```py\nUNSET_VAR:UNSET_VAR_VALUE\nSET_VAR:Set Using Export\nHOME:/Users/ben\nVAR1:Set Using Export\nVAR2:Set From Command Line\nVAR3:Also Set From Command Line\nVAR4:\n```", "```py\npip3 install django-configurations\n```", "```py\nCollecting django-configurations\n  Using cached https://files.pythonhosted.org/packages/96/ef/bddcce16f3cd36f03c9874d8ce1e5d35f3cedea27b7d8455265e79a77c3d/django_configurations-2.2-py2.py3-none-any.whl\nRequirement already satisfied: six in /Users/ben/.virtualenvs/bookr/lib/python3.6/site-packages (from django-configurations) (1.14.0)\nInstalling collected packages: django-configurations\nSuccessfully installed django-configurations-2.2\n```", "```py\nimport os\nBASE_DIR =os.path.dirname\\\n          (os.path.dirname(os.path.abspath(__file__)))\nSECRET_KEY =\\\n'y%ux@_^+#eahu3!^i2w71qtgidwpvs^o=w2*$=xy+2-y4r_!fw'\nDEBUG = True\n…\n# The rest of the settings are not shown\n```", "```py\nimport os\n\nfrom configurations import Configuration\nclass Dev(Configuration):\n    BASE_DIR = os.path.dirname\\\n               (os.path.dirname(os.path.abspath(__file__)))\n    SECRET_KEY = \\\n    'y%ux@_^+#eahu3!^i2w71qtgidwpvs^o=w2*$=xy+2-y4r_!fw'\n    DEBUG = True\n    …\n    # All other settings indented in the same manner\n```", "```py\nclass Dev(Configuration):\n    DEBUG = True\n    …\n    # Other settings truncated\n\nclass Prod(Dev):\n    DEBUG = False\n    # no other settings defined since we're only overriding DEBUG\n```", "```py\ndjango.core.exceptions.ImproperlyConfigured: django-configurations settings importer wasn't correctly installed. Please use one of the starter functions to install it as mentioned in the docs: https://django-configurations.readthedocs.io/\n```", "```py\nos.environ.setdefault('DJANGO_CONFIGURATION', 'Dev')\n```", "```py\nfrom django.core.management import execute_from_command_line\n```", "```py\nfrom configurations.management import execute_from_command_line\n```", "```py\nfrom configurations import Configuration, values\nclass Dev(Configuration):\n    DEBUG = values.BooleanValue(True)\n    ALLOWED_HOSTS = values.ListValue([])\n    TIME_ZONE = values.Value('UTC')\n    SECRET_KEY =\\\n    'y%ux@_^+#eahu3!^i2w71qtgidwpvs^o=w2*$=xy+2-y4r_!fw'\n    …\n    # Other settings truncated\nclass Prod(Dev):\n    DEBUG = False\n    SECRET_KEY = values.SecretValue()\n    # no other settings are present\n```", "```py\n    pip3 install django-configurations\n    ```", "```py\n    from configurations import Configuration, values\n    ```", "```py\n    class Dev(Configuration):\n    ```", "```py\n        DEBUG = True\n    ```", "```py\n        DEBUG = values.BooleanValue(True)\n    ```", "```py\n        ALLOWED_HOSTS = []\n    ```", "```py\n        ALLOWED_HOSTS = values.ListValue([])\n    ```", "```py\n    class Prod(Dev):\n        DEBUG = False\n        SECRET_KEY = values.SecretValue()\n    ```", "```py\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bookr.settings')\n    ```", "```py\n    os.environ.setdefault('DJANGO_CONFIGURATION', 'Dev')\n    ```", "```py\n    from django.core.management import execute_from_command_line\n    ```", "```py\n    from manage.py script use Django Configuration's execute_from_command_line function, instead of the Django built-in one.Save `manage.py`.\n    ```", "```py\nsqlite:///<path>\n```", "```py\n<protocol>://<hostname>/<path>\n```", "```py\n<protocol>://<username>:<password>@<hostname>:<port>/<database_name>\n```", "```py\npostgres://bookr:b00ks@db.example.com:5432/bookr_django\n```", "```py\npip3 install dj-database-url\n```", "```py\nCollecting dj-database-url\n  Downloading https://files.pythonhosted.org/packages/d4/a6/4b8578c1848690d0c307c7c0596af2077536c9ef2a04d42b00fabaa7e49d/dj_database_url-0.5.0-py2.py3-none-any.whl\nInstalling collected packages: dj-database-url\nSuccessfully installed dj-database-url-0.5.0\n```", "```py\nimport dj_database_url\nDATABASES = {'default':dj_database_url.parse\\\n             ('postgres://bookr:b00ks@db.example.com:5432/\\\n               bookr_django')}\n```", "```py\nimport dj_database_url\nDATABASES = {'default': dj_database_url.parse\\\n             ('sqlite:///{}/db.sqlite3'.format(BASE_DIR))}\n```", "```py\nDATABASES = {'default': \\\n             {'NAME': '/Users/ben/bookr/bookr/db.sqlite3',\\\n              'USER': '',\\\n              'PASSWORD': '',\\\n              'HOST': '',\\\n              'PORT': '',\\\n              'CONN_MAX_AGE': 0,\\\n              'ENGINE': 'django.db.backends.sqlite3'}}\n```", "```py\nimport dj_database_url\nDATABASES = {'default': dj_database_url.config()}\n```", "```py\nimport dj_database_url\nDATABASES = {'default':dj_database_url.config\\\n             (default='sqlite:///{}/db.sqlite3'\\\n              .format(BASE_DIR))}\n```", "```py\nimport dj_database_url\nDATABASES = {'default':dj_database_url.config\\\n             (default='sqlite:///{}/db.sqlite3'\\\n                      .format(BASE_DIR)),\\\n             'secondary':dj_database_url.config\\\n                         ('DATABASE_URL_SECONDARY'\\\n                          default=\\\n                          'sqlite:///{}/db-secondary.sqlite3'\\\n                          .format(BASE_DIR)),}\n```", "```py\nimport dj_database_url\nDATABASES = {'default': dj_database_url.config()}\n```", "```py\nfrom configurations import values\nDATABASES = values.DatabaseURLValue()\n```", "```py\nDATABASES = values.DatabaseURLValue\\\n            ('sqlite:///{}/db.sqlite3'.format(BASE_DIR),\\\n              environment_prefix='DJANGO')\n```", "```py\n    pip3 install dj-database-url\n    ```", "```py\n    DATABASES = values.DatabaseURLValue\\\n                ('sqlite:///{}/db.sqlite3'.format(BASE_DIR),\\\n                  environ_prefix='DJANGO')\n    ```", "```py\npip3 install django-debug-toolbar\n```", "```py\n    path('__debug__/', include(debug_toolbar.urls))\n    ```", "```py\n    pip3 install django-debug-toolbar\n    INSTALLED_APPS = […\\\n                      'debug_toolbar']\n    ```", "```py\n    MIDDLEWARE = ['debug_toolbar.middleware.DebugToolbarMiddleware',\\\n                  …]\n    ```", "```py\n    INTERNAL_IPS = ['127.0.0.1']\n    ```", "```py\n    if settings.DEBUG:\n        urlpatterns += static(settings.MEDIA_URL,\\\n                              document_root=settings.MEDIA_ROOT)\n    ```", "```py\n        import debug_toolbar\n        urlpatterns = [path\\\n                       ('__debug__/',\\\n                        include(debug_toolbar.urls)),] + urlpatterns\n    ```", "```py\npip3 install django-crispy-forms \n```", "```py\nCRISPY_TEMPLATE_PACK = 'bootstrap4'\n```", "```py\n{% load crispy_forms_tags %}\n```", "```py\n{{ form.as_p }}\n```", "```py\n{{ form|crispy }}\n```", "```py\n{% crispy form %}\n```", "```py\n<form method=\"post\">\n  {% csrf_token %}\n  {% crispy form %}\n</form>\n```", "```py\n<form method=\"post\" >\n<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"…\">\n<form method=\"post\">\n<input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"…\">\n    … form fields …\n</form>\n</form>\n```", "```py\nfrom django import forms\nfrom crispy_forms.helper import FormHelper\n```", "```py\nclass ExampleForm(forms.Form):\nexample_field = forms.CharField()\n```", "```py\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n```", "```py\nself.helper = FormHelper()\nself.helper.form_method = 'post'\n```", "```py\nfrom crispy_forms.layout import Submit\n```", "```py\nself.helper.add_input(Submit(\"submit\", \"Submit\"))\n```", "```py\n    pip3 install django-crispy-forms\n    INSTALLED_APPS = […\\\n                      'reviews',\\\n                      'debug_toolbar',\\\n                      'crispy_forms'\\]\n    ```", "```py\n    CRISPY_TEMPLATE_PACK = 'bootstrap4'\n    ```", "```py\n    from crispy_forms.helper import FormHelper\n    from crispy_forms.layout import Submit\n    ```", "```py\n    class SearchForm(forms.Form):\n    …\n        def __init__(self, *args, **kwargs):\n            super().__init__(*args, **kwargs)\n    ```", "```py\n    self.helper = FormHelper()\n    self.helper.form_method = \"get\"\n    self.helper.add_input(Submit(\"\", \"Search\"))\n    ```", "```py\n    {% load crispy_forms_tags %}\n    ```", "```py\n    <form>\n        {{ form.as_p }}\n    <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n    </form>\n    ```", "```py\n    {% crispy form %}\n    ```", "```py\npip3 install django-allauth\n```", "```py\nINSTALLED_APPS = [# this entry added\n                  'django.contrib.sites',\\\n                  'django.contrib.admin',\\\n                  'django.contrib.auth',\\\n                  # the rest of the values are truncated]\nSITE_ID = 1\n```", "```py\nINSTALLED_APPS = [# the rest of the values are truncated\n                  'allauth',\\\n                  'allauth.socialaccount',]\n```", "```py\nINSTALLED_APPS = [# the rest of the values are truncated\n                  'allauth.socialaccount.providers.github',\\\n                  'allauth.socialaccount.providers.google',]\n```", "```py\npython3 manage.py migrate\n```", "```py\nurlpatterns = [path('allauth', include('allauth.urls')),]\n```"]