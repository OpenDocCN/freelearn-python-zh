["```py\nGPIO.setup(18,GPIO.OUT)\n```", "```py\nGPIO.setup(18,GPIO.IN)\n```", "```py\nimport time import RPi.GPIO as GPIO\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(24,GPIO.IN)\nGPIO.setup(23,GPIO.OUT)\nwhile True:\n  button_state = GPIO.input(24)\n    if button_state == True:\n      GPIO.output(23,GPIO.HIGH)\n    else:\n      GPIO.output(23,GPIO.LOW)\n  time.sleep(0.5)\nGPIO.cleanup()\n```", "```py\nbutton_state = GPIO.input(24)  \n```", "```py\nif button_state == True:\n   GPIO.output(23,GPIO.HIGH)  \n```", "```py\n  else:\n   GPIO.output(23,GPIO.LOW)\n```", "```py\nimport time import RPi.GPIO as GPIO\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(23,GPIO.IN) \nGPIO.setup(24,GPIO.OUT)\nwhile True:\n if GPIO.input(23) == 1: \n  GPIO.output(24,GPIO.HIGH)\n else: \n  GPIO.output(24,GPIO.LOW)\n\n time.sleep(1)\nGPIO.cleanup()\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(23,GPIO.OUT) \nGPIO.setup(24,GPIO.IN) \n\nwhile True:\n     pulse_start = 0\n     pulse_stop = 0\n     duration = 0\n     distance = 0\n\n     GPIO.output(23,GPIO.LOW)\n     time.sleep(0.1) \n     GPIO.output(23,GPIO.HIGH)\n     time.sleep(0.000010)\n     GPIO.output(23,GPIO.LOW)\n\n     while GPIO.input(24)==0:\n         pulse_start = time.time()\n\n     while GPIO.input(24)==1:\n         pulse_stop = time.time()\n\n     duration = pulse_stop - pulse_start\n\n     distance = duration*17150.0\n     distance = round(distance,2)\n     print (\"distance\" + str(distance)) \n\n     time.sleep(0.2)\n}\n```", "```py\nGPIO.setup(23,GPIO.OUT) \n```", "```py\nGPIO.setup(24,GPIO.IN)\n```", "```py\npulse_start = 0\n pulse_stop = 0\n duration = 0\n distance = 0\n```", "```py\nGPIO.output(23,GPIO.HIGH)\n  time.sleep(0.000010)\n  GPIO.output(23,GPIO.LOW)\n```", "```py\n  while GPIO.input(24)==0: \n pulse_start = time.time()\n```", "```py\nwhile GPIO.input(24)==1:\n pulse_stop = time.time()\n```", "```py\n duration = pulse_stop - pulse_start\n```", "```py\n distance = duration*17150.0\n```", "```py\ndistance = round(distance,2)\n```", "```py\nprint 'Distance = ',distance\n```", "```py\n time.sleep(0.25)\n```", "```py\nsudo apt-get install build-essential python-dev python-smbus python-pip \n```", "```py\nsudo pip install adafruit-ads1x15\n```", "```py\nimport time\nimport Adafruit_ADS1x15\nimport RPi.GPIO as GPIO\nLED =14\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(LED,GPIO.OUT)\n\nadc = Adafruit_ADS1x15.ADS1115()\nGAIN = 1\nchannel=0\nadc.start_adc(channel, gain=GAIN)\n\nwhile True:\n    value = adc.get_last_result()\n    print(str(value))\n    time.sleep(0.1)\n    if value >= 100:\n        GPIO.output(LED,1)\n    else :\n        GPIO.output(LED,0)\n\nadc.stop_adc()\n```", "```py\nif value >= 100:\n```", "```py\nimport Adafruit_ADS1x15\n```", "```py\nadc = Adafruit_ADS1x15.ADS1115()\n```", "```py\nGAIN = 1\n```", "```py\nchannel=0\n```", "```py\nadc.start_adc(channel, gain=GAIN)\n```", "```py\nadc.stop_adc()\n```"]