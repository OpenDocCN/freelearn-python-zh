- en: '*Appendix B*: Dictionary'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*附录B*：词典'
- en: A
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: A
- en: '**ALGOL** – A family of programming languages developed in 1958 by a committee
    of European and American computer scientists.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**ALGOL** – 1958年由欧洲和美国计算机科学家委员会开发的一组编程语言。'
- en: '**Algorithm** – A set of rules or a description of steps to be followed in
    problem-solving operations. Examples of algorithms used in computer science are
    sorting and searching algorithms.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**算法** – 一组规则或描述在问题解决操作中应遵循的步骤。计算机科学中使用的算法示例包括排序和搜索算法。'
- en: '**Analog** – Using signals or information represented by continuously changing
    a physical quantity, such as the voltage or spatial position.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '**模拟** – 使用表示通过连续改变物理量（如电压或空间位置）的信号或信息。'
- en: '**Application** – A computer program that is designed for a particular purpose.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用程序** – 为特定目的设计的计算机程序。'
- en: '**Arithmetic** – A branch of mathematics dealing with the properties and manipulation
    of numbers.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '**算术** – 一门处理数字性质和操作的数学分支。'
- en: '**Arithmetic** **overflow/underflow** – The result of a calculation that exceeds
    the memory space designated to hold the result.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '**算术溢出/下溢** – 计算结果超出分配给存储结果的内存空间。'
- en: '**Array type** – A data type that represents a collection of elements that
    can be selected by the use of indices.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**数组类型** – 一种数据类型，表示可以通过索引选择的一组元素。'
- en: '**ASCII-table** – A character-encoding standard that uses numbers to represent
    characters.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**ASCII表** – 使用数字表示字符的字符编码标准。'
- en: '**Assembly** **language** – A name used for any low-level programming language
    that has a strong correlation between its instructions and the corresponding machine
    code instructions.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**汇编语言** – 任何与机器代码指令有强相关性的低级编程语言的名称。'
- en: B
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: B
- en: '**Base 10** – See **Decimal**.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '**十进制** – 见**十进制**。'
- en: '**Base 16** – See **Hexadecimal**.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**十六进制** – 见**十六进制**。'
- en: '**Base 2** – See **Binary**.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**二进制** – 见**二进制**。'
- en: '**Binary** – A numbering system that works in base 2 – that is, it only uses
    two digits: zero and one.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**二进制** – 一种以2为基数的工作的数制 – 即，它只使用两个数字：零和一。'
- en: '**Blank line** – Used in programming to separate blocks of code that logically
    belong together.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**空行** – 在编程中用于分隔逻辑上属于一起的代码块。'
- en: '**Block comment** – A comment in programming code that spans several lines.
    See **Comment**.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**块注释** – 在编程代码中跨越多行的注释。见**注释**。'
- en: '**Boolean algebra** – A branch of algebra in which operations are performed
    only on the true and false values. The name comes from George Boole, who introduced
    it in 1847.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**布尔代数** – 一种仅对真值和假值进行操作的代数分支。这个名字来自George Boole，他在1847年引入了它。'
- en: '`true` and `false` values. See **Boolean algebra**.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '`true`和`false`值。见**布尔代数**。'
- en: '**Break** – A statement used by many programming languages to exit the current
    code block. See **Code block**.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**Break** – 许多编程语言中用于退出当前代码块的一个语句。见**代码块**。'
- en: '**Breakpoint** – Used when debugging applications to pause the execution at
    a particular line of code.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**断点** – 在调试应用程序时用于在特定代码行暂停执行。'
- en: '**Brief code** – A precursor of the Short code programming language. See **Short
    code**.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**简短代码** – 短代码编程语言的先驱。见**短代码**。'
- en: '**BUG** – A tag used as a comment to indicate code that contains a bug that
    has not yet been fixed.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**BUG** – 用作注释的标签，表示包含尚未修复错误的代码。'
- en: '**Byte** – A group of binary digits, usually 8, that is operated on as a single
    unit.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**字节** – 一组二进制数字，通常为8位，作为一个单元进行操作。'
- en: '**Byte code** – Intermediate code that a programming language can be compiled
    into. It can then be interpreted more efficiently if the source code was interpreted
    directly.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**字节码** – 编程语言可以编译成的中间代码。如果源代码被直接解释，则可以更有效地解释。'
- en: C
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: C
- en: '**C** – A programming language designed by Dennis Ritchie at Bell Labs in 1972\.
    Its syntax has influenced many other programming languages.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**C** – 由Dennis Ritchie在1972年于贝尔实验室设计的编程语言。其语法影响了其他许多编程语言。'
- en: '**C#** – Pronounced C sharp. A programming language developed by Microsoft
    in 2000.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**C#** – 发音为C sharp。由Microsoft于2000年开发的编程语言。'
- en: '**C++** – A programming language created by Bjarne Stroustrup in 1985\. It
    was developed as an object-oriented extension to the C programming language.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**C++** – 由Bjarne Stroustrup于1985年创建的编程语言。它被开发为C编程语言的面向对象扩展。'
- en: '`camelCase`.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '`camelCase`。'
- en: '**Central processing unit** – The component of a computer in which operations
    are controlled and executed.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**中央处理单元** – 计算机中控制并执行操作的组件。'
- en: '**Class method** – In object orientation, a class method is a function that
    belongs to a class. A class method is called on the class itself, rather than
    an instance. See **Method**.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**类方法** – 在面向对象中，类方法是指属于类的函数。类方法是在类本身上调用，而不是在实例上。见**方法**。'
- en: '**Class** – In object-orientation, a class is a template used for creating
    objects. See **Object**.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**类** – 在面向对象中，类是用于创建对象的模板。见**对象**。'
- en: '**Client software** – An application that plays the client role in a client-server
    solution.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端软件** – 在客户端-服务器解决方案中扮演客户端角色的应用程序。'
- en: '**Client-server** – A distributed application structure that partitions the
    workload between a server and one or more clients. The client initiates the communication,
    and the server provides a function or a service to the clients.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**客户端-服务器** – 一种分布式应用程序结构，将工作负载在服务器和一个或多个客户端之间分配。客户端发起通信，服务器向客户端提供功能或服务。'
- en: '**Clojure** – A programming language created by Rich Hickey in 2007\. The language
    is a Lisp dialect. See **LISP**.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**Clojure** – 由Rich Hickey于2007年创建的编程语言。该语言是Lisp方言。见**LISP**。'
- en: '**Cloud computing** – On-demand availability of computer system resources,
    such as storage or computing power, that is accessed over the internet.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**云计算** – 通过互联网按需提供的计算机系统资源，如存储或计算能力。'
- en: '**COBOL** – This acronym stands for **Common Business-Oriented Language** and
    is a compiled English-like programming language designed for business use. COBOL
    was developed in 1959 by a group called CODASYL and is based on the FLOW-MATIC
    programming language. See FLOW-MATIC.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**COBOL** – 这个缩写代表**通用商务语言**，是一种为商业用途设计的类似英语的编译型编程语言。COBOL于1959年由CODASYL小组开发，基于FLOW-MATIC编程语言。见FLOW-MATIC。'
- en: '**Code block** – A block of code that usually spans several lines and belongs
    to the same statement. The beginning and end are often marked with { and } or
    an indentation.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码块** – 通常跨越多行并属于同一语句的代码块。开始和结束通常用{和}或缩进来标记。'
- en: '**Code module** – A section of code that implements a particular functionality.
    It is usually packaged in a single unit, such as a code file.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码模块** – 实现特定功能的代码部分。它通常封装在一个单一单元中，例如一个代码文件。'
- en: '**Command prompt** – See **Terminal window**.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**命令提示符** – 见**终端窗口**。'
- en: '**Comment** – A programmer-readable explanation or annotation in the source
    code. Comments give instructions to humans and are ignored by the programming
    language.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**注释** – 源代码中供程序员阅读的解释或注释。注释为人类提供指令，并被编程语言忽略。'
- en: '**Common Lisp** – A programming language developed to consolidate other Lisp
    dialects. It was released in 1984.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**Common Lisp** – 一种旨在统一其他Lisp方言的编程语言。它于1984年发布。'
- en: '**Compiled language** – A programming language that will translate all the
    statements that make up a program. When all the statements are translated, the
    program can be executed. Programs written in a compiled programming language will
    typically be faster than programs written in an interpreted language.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**编译型语言** – 一种将程序中所有语句翻译成机器语言的编程语言。当所有语句都翻译完成后，程序可以执行。用编译型语言编写的程序通常比用解释型语言编写的程序运行得更快。'
- en: '**Composite type** – A data type that is made up of more than one value.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**复合类型** – 由多个值组成的数据类型。'
- en: '`if`, `for`, and `while` statements.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`if`、`for`和`while`语句。'
- en: '**Continue** – A statement used in loops. When encountered, the current iteration
    will be halted, and execution will immediately continue with the next iteration.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**继续** – 在循环中使用的语句。当遇到时，当前迭代将被终止，并立即继续下一个迭代。'
- en: '**CPU** – See **Central Processing Unit**.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**CPU** – 见**中央处理单元**。'
- en: D
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: D
- en: '**Database** – An organized set of data, stored and accessed electronically.
    Other applications typically use the data.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据库** – 有组织的电子数据集，存储和访问。其他应用程序通常使用这些数据。'
- en: '**Debugger** – A tool used by programmers to find errors in a program code.
    It will let the programmer step through the code line by line while executing
    the code, and the programmer can inspect the values of variables and the execution
    path that is taken.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**调试器** – 程序员用来查找程序代码中错误的工具。它允许程序员在执行代码时逐行执行代码，程序员可以检查变量的值和执行的路径。'
- en: '**Decimal** – A numbering system that works in base 10 – that is, it uses 10
    digits to represent numbers. It is the numbering system that we usually use.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**十进制** – 一种基于10的进制系统 – 即它使用10个数字来表示数字。这是我们通常使用的计数系统。'
- en: '**Dictionary type** – A data type that stores data in key-value pairs. The
    key value must be unique for every item in the dictionary.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**字典类型** – 一种存储数据在键值对中的数据类型。字典中的键值对于字典中的每个项目必须是唯一的。'
- en: '**Directive comment** – A comment in the source code not intended for humans
    but other programming tools, such as compilers.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**指令注释** – 源代码中的注释，不是为人类设计的，而是为其他编程工具，如编译器。'
- en: '**Division by zero** – An error that occurs in a division where the divisor
    is zero.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**除以零** – 发生在除法运算中，除数为零时出现的错误。'
- en: '**Docstring** – A comment that is formatted in a predefined way.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**文档字符串** – 以预定义方式格式化的注释。'
- en: E
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: E
- en: '**Encapsulation** – Used in object orientation to restrict direct access to
    some of an object''s components.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**封装** – 在面向对象编程中用于限制对对象某些组件的直接访问。'
- en: '`enum`, that has a set of named values.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`enum`，具有一组命名值。'
- en: '`as x + 1`.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '`as x + 1`。'
- en: F
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: F
- en: '**First-class function** – If a language supports first-class functions, this
    means that functions can be passed as arguments to other functions or returned
    as a result from a function.'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**一等函数** – 如果一种语言支持一等函数，这意味着函数可以作为参数传递给其他函数，或者作为函数的结果返回。'
- en: '**FIXME** – A tag that is used in comments to indicate that a particular section
    of code needs to be rewritten or updated.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**FIXME** – 在注释中使用的标签，表示代码的特定部分需要重写或更新。'
- en: '**Floating-point types** – A data type that can represent real numbers.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**浮点类型** – 一种可以表示实数的数据类型。'
- en: '**FLOW-MATIC** – A programming language designed by Grace Hopper in 1955\.
    It was the first English-like data processing language.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**FLOW-MATIC** – 1955年由Grace Hopper设计的编程语言。它是第一个类似英语的数据处理语言。'
- en: '**Fortran** – A programming language invented in 1954 at IBM by John Backus.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**Fortran** – 1954年由IBM的John Backus发明的编程语言。'
- en: '**Function** – A sequence of program instructions that are packaged as one
    unit and (usually) given a name.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数** – 一系列程序指令，作为一个单元打包，并且（通常）赋予一个名称。'
- en: '**Function call** – A call to a function will pass control to that function.
    Once the function has executed, control is given back.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数调用** – 对函数的调用会将控制权传递给该函数。一旦函数执行完毕，控制权将返回。'
- en: '**Functional programming** – A paradigm where programs are constructed by composing
    and applying functions.'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**函数式编程** – 一种通过组合和应用函数来构建程序的范式。'
- en: G
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: G
- en: '**Gate** – See **Logic gate**.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**门** – 见 **逻辑门**。'
- en: '**Go** – A programming language designed by Robert Griesemer, Rob Pike, and
    Ken Thompson that was released in 2009.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**Go** – 由Robert Griesemer、Rob Pike和Ken Thompson设计，于2009年发布的编程语言。'
- en: H
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H
- en: '**HACK** – A tag that is used in comments to indicate that a particular section
    of code is a workaround and that this code needs to be rewritten in the future.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**HACK** – 在注释中使用的标签，表示代码的特定部分是一个权宜之计，并且将来需要重写此代码。'
- en: '**Hard drive** – An electromechanical data storage device that uses rapidly
    rotating platters coated with magnetic material. It can be used to store and retrieve
    digital data.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬盘** – 一种电磁数据存储设备，使用涂有磁性材料的快速旋转盘。它可以用于存储和检索数字数据。'
- en: '**Hardware** – The machine and physical components that make up a computer
    or other electronic systems.'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**硬件** – 组成计算机或其他电子系统的机器和物理组件。'
- en: '**Hexadecimal** – A numbering system that works in base 16 – that is, it uses
    16 digits to represent numbers. It uses the digits 0–9, followed by the letters
    A–F, with A being 10 and F being 15.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**十六进制** – 一种基于16的计数系统 – 即，它使用16个数字来表示数字。它使用数字0-9，后跟字母A-F，其中A是10，F是15。'
- en: I
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: I
- en: '**IaaS** – **Infrastructure as a service** is an online service that let users
    use an instant computing infrastructure that is provisioned and managed over the
    internet.'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**IaaS** – **基础设施即服务**是一种在线服务，允许用户使用通过互联网提供和管理的即时计算基础设施。'
- en: '**IDE** – An **integrated development environment** is a program or suite of
    programs that gives a programmer the tools needed to, among other things, write,
    edit, debug, and test applications.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**IDE** – **集成开发环境**是一个程序或程序套件，它为程序员提供编写、编辑、调试和测试应用程序所需的工具。'
- en: '**Immutable data** – Data that cannot be changed once it has got its initial
    value. See **Mutable data**.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**不可变数据** – 一旦获得初始值后就不能更改的数据。见 **可变数据**。'
- en: '**Indentation** – A technique for making code more readable where lines of
    code have initial empty space at the beginning of the line.'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**缩进** – 一种使代码更易读的技术，其中代码行的开头有空格。'
- en: '**Instance** – See **Object**.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**实例** – 见 **对象**。'
- en: '`21`, `133`, `-7`, and `0`.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '`21`、`133`、`-7`和`0`。'
- en: '**Integer data type** – A data type that can represent integer values.'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '**整数数据类型** – 可以表示整数值的数据类型。'
- en: '**Interpreted language** – A programming language that translates programming
    instructions from a given programming language into machine code, one statement
    at a time. Once a statement is translated into machine code, it is sent to the
    central processing unit for execution.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**解释型语言** – 将编程指令从给定编程语言翻译成机器码的编程语言，一次翻译一条语句。一旦语句被翻译成机器码，它就会被发送到中央处理器执行。'
- en: '**iOS** – A mobile operating system created and developed by Apple Inc.'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**iOS** – 由苹果公司创建和开发的移动操作系统。'
- en: '**IP address** – A numerical address assigned to each device connected to a
    computer network that uses the Internet Protocol for communication.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '**IP地址** – 分配给每个连接到使用互联网协议进行通信的计算机网络的设备的数字地址。'
- en: '**Iteration statement** – A statement that causes other statements that are
    defined within its body to repeat zero an infinite number of times.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**迭代语句** – 导致其体内定义的其他语句重复零次或无限次的语句。'
- en: J
  id: totrans-90
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: J
- en: '**Java** – A programming language developed by James Gosling. It was first
    released in 1995.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**Java** – 由詹姆斯·高斯林开发的编程语言。它于1995年首次发布。'
- en: '**JavaScript** – A programming language developed by Brendan Eich. It was first
    released in 1995.'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '**JavaScript** – 由布兰登·艾奇开发的编程语言。它于1995年首次发布。'
- en: K
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: K
- en: '**Keyword** – In a programming language, a keyword is a reserved word that
    has a particular meaning in that language.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '**关键字** – 在编程语言中，关键字是该语言中具有特定含义的保留词。'
- en: '**Kotlin** – A programming language designed by the Czech software development
    company JetBrains. It was first released in 2011.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**Kotlin** – 由捷克软件开发公司JetBrains设计的编程语言。它于2011年首次发布。'
- en: L
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: L
- en: '**Language syntax** – See **Syntax**.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '**语言语法** – 见**语法**。'
- en: '**Lisp** – A family of programming languages, initially specified by John McCarthy
    in 1958\. Among the modern dialects of Lisp, we can find languages such as Racket,
    Common Lisp, Scheme, and Clojure.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '**Lisp** – 一系列编程语言，最初由约翰·麦卡锡于1958年指定。在现代Lisp方言中，我们可以找到诸如Racket、Common Lisp、Scheme和Clojure等语言。'
- en: '**Logic gate** – A physical electronic device that is used to implement logical
    operations on binary input.'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**逻辑门** – 用于在二进制输入上执行逻辑操作的物理电子设备。'
- en: '**Low-level programming** – Creating programs that interact directly with the
    computer hardware. A benefit of low-level programming is that there is no abstraction
    level between the hardware and the written code, making the programs execute faster.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**低级编程** – 创建直接与计算机硬件交互的程序。低级编程的好处是硬件和编写代码之间没有抽象级别，这使得程序执行得更快。'
- en: M
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: M
- en: '**Machine code** – Program instructions written in a numerical format that
    can be executed directly by the central processing unit.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**机器码** – 以数值格式编写的程序指令，可以直接由中央处理器执行。'
- en: '**Member variable** – A concept used in object-oriented programming where a
    variable belongs to one particular object.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**成员变量** – 在面向对象编程中使用的概念，其中变量属于一个特定的对象。'
- en: '**Memory** – A generic term for all the different technologies a computer may
    use to store data.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**内存** – 计算机可能使用的所有不同存储技术的通用术语。'
- en: '**Method** – A concept used in object-oriented programming. A method is a function
    associated with a class and its objects.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**方法** – 在面向对象编程中使用的概念。方法是与类及其对象相关联的函数。'
- en: '**Mobile application** – An application written to be executed on a mobile
    device.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**移动应用** – 编写以在移动设备上执行的应用程序。'
- en: '**Mutable data** – Data that can be changed. See **Immutable data**.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**可变数据** – 可以更改的数据。见**不可变数据**。'
- en: N
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: N
- en: '**Namespace** – A way to group objects of various kinds and ensure that all
    objects within the same namespace have unique names.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**命名空间** – 一种将各种类型的对象分组并确保同一命名空间内的所有对象都具有唯一名称的方法。'
- en: '**Napster** – A service released in 1999 where users could share music over
    a peer-to-peer network.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**Napster** – 1999年发布的一项服务，用户可以在对等网络中共享音乐。'
- en: '**Node** – A device in a computer network.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**节点** – 计算机网络中的设备。'
- en: '**Numeric type** – A data type that can represent numeric values. See **Integer
    data type** and **Floating-point types**.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**数值类型** – 可以表示数值的数据类型。见**整数数据类型**和**浮点类型**。'
- en: O
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: O
- en: '**Objective-C** – A programming language designed by Tom Love and Brad Cox.
    It was first released in 1984\. It was the primary programming language supported
    by Apple until the introduction of Swift in 2014\. See **Swift**.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**Objective-C** – 由汤姆·洛夫和布拉德·科克斯设计的编程语言。它于1984年首次发布。它是在Swift于2014年引入之前苹果支持的主要编程语言。见**Swift**。'
- en: '**Object orientation** – A software engineering paradigm in which concepts
    are represented as objects.'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**面向对象** – 一种软件工程范例，其中概念以对象的形式表示。'
- en: '**Object-oriented programming** – A paradigm based on a concept where programs
    are constructed using objects.'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**面向对象编程** – 一种基于对象概念的范例，程序使用对象构建。'
- en: '**Object** – A representation used in object orientation that is made up of
    data in the form of fields (often called attributes or properties) and code in
    the form of functions (referred to as methods to distinguish them from functions
    defined outside classes).'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '**对象** – 在面向对象中使用的一种表示，由字段形式的数据（通常称为属性或属性）和函数形式的代码（称为方法以区分类外定义的函数）组成。'
- en: '**Ones'' complement** – The ones'' complement of a binary number is accomplished
    by inverting all the bits in that number (swapping zeros for ones and vice versa).'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**反码** – 二进制数的反码是通过反转该数字中的所有位（将零换成一，反之亦然）来完成的。'
- en: '**Opcode** – An abbreviation of **operation code**, this is a portion of a
    machine language instruction that specifies what operation to perform.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**操作码** – **操作码**的缩写，这是机器语言指令的一部分，用于指定要执行的操作。'
- en: '**Open source** – Software for which the source code is made freely available
    and may be redistributed and modified.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**开源** – 源代码可以免费获取并可能被重新分发和修改的软件。'
- en: '**Operand** – An input value to an operator. See **Operator**.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**操作数** – 运算符的输入值。见**运算符**。'
- en: '**Operator** – A symbol that performs an operation that behaves like a function
    but is syntactically different from a function call.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '**运算符** – 执行类似函数的操作但语法上与函数调用不同的符号。'
- en: '**Order of operation** – The order in which multiple operations will be executed.'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '**运算顺序** – 多个操作将执行的顺序。'
- en: P
  id: totrans-124
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: P
- en: '**P2P** – See **Peer-to-peer**.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**P2P** – 见**对等网络**。'
- en: '**PaaS** – **Platform as a service** is a type of cloud service that provides
    a platform where customers can develop, run, and manage applications.'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**PaaS** – **平台即服务**是一种云服务类型，它提供了一个平台，客户可以在该平台上开发、运行和管理应用程序。'
- en: '**Package manager** – An application, or collection of applications, that automates
    the process of downloading, installing, configuring, and removing software.'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '**包管理器** – 一种应用程序或应用程序集合，它自动执行下载、安装、配置和删除软件的过程。'
- en: '**Peer-to-peer** – A distributed network application where the nodes in the
    network communicate directly with each other.'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**对等网络** – 一种分布式网络应用程序，其中网络中的节点直接相互通信。'
- en: '**Perl** – A programming language developed by Larry Wall. It was first released
    in 1987.'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '**Perl** – 由Larry Wall开发的编程语言。它首次发布于1987年。'
- en: '**PHP** – A programming language developed by Rasmus Lerdorf. It was first
    released in 1995.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '**PHP** – 由Rasmus Lerdorf开发的编程语言。它首次发布于1995年。'
- en: '**Pixel** – A physical point in a raster image or the smallest element of a
    computer screen (or other types of display devices).'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '**像素** – 拉塞图像中的物理点或计算机屏幕（或其他类型的显示设备）的最小元素。'
- en: '**Plankalkül** – One of the first programming languages, designed by Konrad
    Zuse. It was first released in 1948.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '**Plankalkül** – 由Konrad Zuse设计的第一种编程语言之一。它首次发布于1948年。'
- en: '**Processor** – See **Central processing unit**.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**处理器** – 见**中央处理器**。'
- en: '**Punch card** – A card with punched holes. The location of the holes can be
    used to represent data or program code instructions. This was formerly used by
    computers as the primary storage device.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '**穿孔卡片** – 带有穿孔的卡片。孔的位置可以用来表示数据或程序代码指令。这曾经是计算机作为主要存储设备使用。'
- en: '**Pure function** – A function that has the property of always returning the
    same value for the same argument and whose evaluation has no side effects.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**纯函数** – 一种具有始终为相同的参数返回相同值且其评估没有副作用特性的函数。'
- en: '**Python** – A programming language designed by Guido van Rossum. It was first
    released in 1990.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '**Python** – 由Guido van Rossum设计的编程语言。它首次发布于1990年。'
- en: R
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: R
- en: '**Record type** – A data type that is made up of several fields. Each field
    can be of any other type, including other records.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**记录类型** – 由多个字段组成的数据类型。每个字段可以是任何其他类型，包括其他记录。'
- en: '**Register** – A component inside a central processing unit used for storing
    information.'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**寄存器** – 中央处理器内部用于存储信息的组件。'
- en: '**Repository** – A storage location for software or code.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '**仓库** – 软件或代码的存储位置。'
- en: '**Reserved word** – A reserved word is a word that is reserved by a programming
    language and cannot be used by the programmer as a name for things such as functions
    and variables.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '**保留字** – 编程语言保留的单词，程序员不能将其用作函数和变量等事物的名称。'
- en: S
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: S
- en: '**SaaS** – An online service, **software as a service**, where software is
    licensed and hosted online.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '**SaaS** – 一种在线服务，**软件即服务**，软件在此在线许可和托管。'
- en: '**Scalability** – The ability to handle a growing amount of work.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '**可扩展性** – 处理日益增长工作量能力。'
- en: '`true` or `false` and can execute different blocks of code depending on the
    result.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '`true`或`false`，并且可以根据结果执行不同的代码块。'
- en: '**Sequence** – An enumerated collection of objects.'
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**序列** – 对象的枚举集合。'
- en: '**Server** – A computer program or device that provides services and functionality
    to other devices, called clients.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '**服务器** – 为其他设备（称为客户端）提供服务和功能计算机程序或设备。'
- en: '**Set type** – A data type that can store a collection of unique values without
    a particular order.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '**集合类型** – 一种可以存储无特定顺序的唯一值集合的数据类型。'
- en: '**Scheme** – A programming language developed by Guy L. Steele and Gerald Jay
    Sussman. It was first released in 1975.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '**Scheme** – 由Guy L. Steele和Gerald Jay Sussman开发的编程语言。它首次发布于1975年。'
- en: '**Short code** – Considered by many as being the first high-level programming
    language, proposed by John Mauchly in 1949.'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: '**简短代码** – 被许多人认为是第一种高级编程语言，由John Mauchly于1949年提出。'
- en: '**Signed magnitude representation** – A way to represent negative numbers in
    binary form.'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '**符号位表示法** – 一种用于以二进制形式表示负数的方法。'
- en: '**Simula** – A programming language design by Ole-Johan Dahl. It was first
    released in 1962.'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '**Simula** – 由Ole-Johan Dahl设计的编程语言。它首次发布于1962年。'
- en: '**SMR** – See **Signed magnitude representation**.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**SMR** – 参见**符号位表示法**。'
- en: '**Snake case** – A style for formating multi-word names. In snake case, only
    lowercase characters are used, and an underscore separates words.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**蛇形命名法** – 一种用于格式化多词名称的风格。在蛇形命名法中，仅使用小写字母，并且下划线分隔单词。'
- en: '**Source code** – The code written by programmers using the syntax of a programming
    language.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**源代码** – 程序员使用编程语言的语法编写的代码。'
- en: '**Standalone application** – An application that can work offline.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**独立应用程序** – 一种可以离线工作的应用程序。'
- en: '**Statement** – A unit of code of an imperative programming language that expresses
    some action.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**语句** – 命令式编程语言的一个代码单元，表示某种动作。'
- en: '**String type** – A data type that can represent a sequence of characters.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**字符串类型** – 一种可以表示字符序列的数据类型。'
- en: '**Substring** – A continuous sequence of characters within a string.'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**子串** – 字符串中连续的字符序列。'
- en: '**Swift** – A programming language developed by Apple Inc. as the successor
    of the Objective-C programming language. It was released in 2014\. See **Objective-C**.'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: '**Swift** – 苹果公司开发的编程语言，作为Objective-C编程语言的继任者。它于2014年发布。参见**Objective-C**。'
- en: '**Syntax** – Rules that define what symbols and keywords make up a programming
    language. It also defines how the keywords and symbols should be combined to form
    valid source code.'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '**语法** – 定义了构成编程语言符号和关键字的规则。它还定义了关键字和符号应该如何组合以形成有效的源代码。'
- en: '**Syntax error** – An error that occurs when source code is breaking the syntax
    rules of a programming language.'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: '**语法错误** – 当源代码违反编程语言的语法规则时发生错误。'
- en: T
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: T
- en: '**TCP/IP** – A suite of protocols that are used for transmitting data over
    the internet.'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: '**TCP/IP** – 用于在互联网上传输数据的一套协议。'
- en: '**Terminal window** – An application that lets the user execute text commands,
    usually to the operating system.'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '**终端窗口** – 一种允许用户执行文本命令的应用程序，通常用于操作系统。'
- en: '**Text string** – See **String type**.'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: '**文本字符串** – 参见**字符串类型**。'
- en: '**TODO** – A tag that is used in comments to indicate that a particular section
    of code is still not implemented.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**TODO** – 用于注释中的标签，表示代码的特定部分尚未实现。'
- en: '**Touchscreen** – A screen that lets the user control a connected device by
    touching the screen.'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '**触摸屏** – 一种允许用户通过触摸屏幕来控制连接设备的屏幕。'
- en: '**Two''s complement** – A technique for representing signed numbers in binary
    form.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '**二进制补码** – 一种用于以二进制形式表示有符号数字的技术。'
- en: U
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: U
- en: '**Unicode** – A character-encoding standard that can represent over 140,000
    different characters.'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '**Unicode** – 一种字符编码标准，可以表示超过140,000个不同的字符。'
- en: '**Unsigned integer** – A data type that can only represent positive integer
    values.'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '**无符号整数** – 一种只能表示正整数的数据类型。'
- en: V
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: V
- en: '**Variable** – A named representation of a memory address used in programming
    to access data.'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '**变量** – 编程中用于访问数据的内存地址的命名表示。'
- en: W
  id: totrans-175
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: W
- en: '**Web browser** – An application used to access information on the world wide
    web.'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '**网页浏览器** – 用于访问万维网上信息的应用程序。'
