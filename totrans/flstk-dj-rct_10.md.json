["```py\nimport React from \"react\";\nimport { Card, Button, Image } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nfunction ProfileCard(props) {\n return (\n    // JSX code here\n );\n}\nexport default ProfileCard;\n```", "```py\n...\nfunction ProfileCard(props) {\n const navigate = useNavigate();\n const { user } = props;\n const handleNavigateToProfile = () => {\n   navigate(`/profile/${user.id}/`)\n };\n return (\n    // JSX Code\n );\n}\nexport default ProfileCard;\n```", "```py\n...\n return (\n   <Card className=\"border-0 p-2\">\n     <div className=\"d-flex \">\n       <Image\n         src={user.avatar}\n         roundedCircle\n         width={48}\n         height={48}\n         className=\n           \"my-3 border border-primary border-2\"\n       />\n       <Card.Body>\n         <Card.Title\n           className=\"fs-6\">{user.name}</Card.Title>\n         <Button variant=\"primary\"\n           onClick={handleNavigateToProfile}>\n           See profile\n         </Button>\n       </Card.Body>\n     </div>\n   </Card>\n );\n}\nexport default ProfileCard;\n```", "```py\n...\nimport CreatePost from \"../components/posts/CreatePost\";\nimport ProfileCard from \"../components/profile/ProfileCard\";\nfunction Home() {\n...\n const profiles = useSWR(\"/user/?limit=5\", fetcher);\n...\n return (\n   <Layout>\n     <Row className=\"justify-content-evenly\">\n       ...\n       <Col sm={3} className=\"border rounded py-4\n           h-50\">\n         <h4 className=\"font-weight-bold text-center\">\n           Suggested people</h4>\n         <div className=\"d-flex flex-column\">\n           {profiles.data &&\n             profiles.data.results.map((profile,\n                                        index) => (\n               <ProfileCard key={index} user={profile}\n               />\n             ))}\n         </div>\n       </Col>\n     </Row>\n   </Layout>\n );\n}\nexport default Home;\n```", "```py\n…\nMEDIA_URL'= '/med'a/'\nMEDIA_ROOT = BASE_DIR'/ 'uplo'ds'\n```", "```py\npip install pillow\n```", "```py\n...\ndef user_directory_path(instance, filename):\n    # file will be uploaded to\n       MEDIA_ROOT/user_<id>/<filename>\n    return 'user_{0}/{1}'.format(instance.public_id,\n                                 filename)\n...\n```", "```py\n...\nclass User(AbstractModel, AbstractBaseUser, PermissionsMixin):\n...\n    avatar = models.ImageField(\n        null=True, blank=True,\n             upload_to=user_directory_path)\n...\n```", "```py\npython manage.py makemigrations\npython manage.py migrate\n```", "```py\n...\nDEFAULT_AVATAR_URL = \"https://avatars.dicebear.com/api/identicon/.svg\"\n```", "```py\n...\nfrom django.conf import settings\nclass UserSerializer(AbstractSerializer):\n...\n    def to_representation(self, instance):\n        representation =\n          super().to_representation(instance)\n        if not representation['avatar']:\n            representation['avatar'] =\n              settings.DEFAULT_AUTO_FIELD\n            return representation\n        if settings.DEBUG:  # debug enabled for dev\n            request = self.context.get('request')\n            representation['avatar'] =\n              request.build_absolute_uri(\n                representation['avatar'])\n        return representation\n```", "```py\nimport React from \"react\";\nimport { Button, Image } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nfunction ProfileDetails(props) {\n return (\n// JSX code here\n );\n}\nexport default ProfileDetails;\n```", "```py\n...\nfunction ProfileDetails(props) {\n const { user } = props;\n const navigate = useNavigate();\n if (!user) {\n   return <div>Loading...</div>;\n }\n return (\n   // JSX Code here\n );\n}\nexport default ProfileDetails;\n```", "```py\n...\n return (\n   <div>\n     <div className=\"d-flex flex-row border-bottom\n       p-5\">\n       <Image\n         src={user.avatar}\n         roundedCircle\n         width={120}\n         height={120}\n         className=\"me-5 border border-primary\n                    border-2\"\n       />\n       <div className=\"d-flex flex-column\n        justify-content-start align-self-center mt-2\">\n         <p className=\"fs-4 m-0\">{user.name}</p>\n         <p className=\"fs-5\">{user.bio ? user.bio :\n           \"(No bio.)\"}</p>\n         <p className=\"fs-6\">\n           <small>{user.posts_count} posts</small>\n         </p>\n         <Button\n           variant=\"primary\"\n           size=\"sm\"\n           className=\"w-25\"\n           onClick={() =>\n             navigate(`/profile/${user.id}/edit/`)}\n         >\n           Edit\n         </Button>\n       </div>\n     </div>\n   </div>\n );\n```", "```py\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Layout from \"../components/Layout\";\nimport ProfileDetails from \"../components/profile/ProfileDetails\";\nimport useSWR from \"swr\";\nimport { fetcher } from \"../helpers/axios\";\nimport { Post } from \"../components/posts\";\nimport { Row, Col } from \"react-bootstrap\";\nfunction Profile() {\n  return (\n    // JSX CODE\n  );\n}\nexport default Profile;\n```", "```py\n...\nfunction Profile() {\n  const { profileId } = useParams();\n  const user = useSWR(`/user/${profileId}/`, fetcher);\n  const posts = useSWR(`/post/?author__public_id=${profileId}`, fetcher, {\n       refreshInterval: 20000\n   });\n...\n```", "```py\n...\n  return (\n    <Layout hasNavigationBack>\n      <Row className=\"justify-content-evenly\">\n        <Col sm={9}>\n          <ProfileDetails user={user.data}/>\n          <div>\n            <Row className=\"my-4\">\n              {posts.data?.results.map((post, index)\n                => (\n                <Post key={index} post={post}\n                  refresh={posts.mutate} />\n              ))}\n            </Row>\n          </div>\n        </Col>\n      </Row>\n    </Layout>\n  );\n}\n...\n```", "```py\n…\n<Route\n  path=\"/profile/:profileId/\"\n  element={\n    <ProtectedRoute>\n      <Profile />\n    </ProtectedRoute>\n  }\n/>\n…\n```", "```py\n...\n    <NavDropdown.Item as={Link} to=\n      {`/profile/${user.id}/`}>Profile\n    </NavDropdown.Item>\n    <NavDropdown.Item onClick={handleLogout}>Logout\n    </NavDropdown.Item>\n  </NavDropdown>\n</Nav>\n...\n```", "```py\nfunction useUserActions() {\n  const navigate = useNavigate();\n  const baseURL = \"http://localhost:8000/api\";\n  return {\n    login,\n    register,\n    logout,\n    edit\n  };\n...\n  // Edit the user\n  function edit(data, userId) {\n    return axiosService.patch(`${baseURL}/user/${userId}/`,\n                               data).then((res) => {\n      // Registering the account in the store\n      localStorage.setItem(\n        \"auth\",\n        JSON.stringify({\n          access: getAccessToken(),\n          refresh: getRefreshToken(),\n          user: res.data,\n        })\n      );\n    });\n  }\n...\n}\n```", "```py\nimport React, { useState, useContext } from \"react\";\nimport { Form, Button, Image } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUserActions } from \"../../hooks/user.actions\";\nimport { Context } from \"../Layout\";\nfunction UpdateProfileForm(props) {\n  return (\n    // JSX Code\n  );\n}\nexport default UpdateProfileForm;\n```", "```py\n...\nfunction UpdateProfileForm(props) {\n  const { profile } = props;\n  const navigate = useNavigate();\n  const [validated, setValidated] = useState(false);\n  const [form, setForm] = useState(profile);\n  const [error, setError] = useState(null);\n  const userActions = useUserActions();\n  const [avatar, setAvatar] = useState();\n  const { toaster, setToaster } = useContext(Context);\n...\n```", "```py\n...\nconst handleSubmit = (event) => {\n  event.preventDefault();\n  const updateProfileForm = event.currentTarget;\n  if (updateProfileForm.checkValidity() === false) {\n    event.stopPropagation();\n  }\n  setValidated(true);\n  const data = {\n    first_name: form.first_name,\n    last_name: form.last_name,\n    bio: form.bio,\n  };\n  const formData = new FormData();\n}\n...\n```", "```py\n...\nconst formData = new FormData();\nObject.keys(data).forEach((key) => {\n    if (data[key]) {\n      formData.append(key, data[key]);\n    }\n});\n...\n```", "```py\n...\nconst formData = new FormData();\n// Checking for null values in the form and removing them.\nObject.keys(data).forEach((key) => {\n    if (data[key]) {\n      formData.append(key, data[key]);\n    }\n});\nif (avatar) {\n  formData.append(\"avatar\", avatar);\n}\n...\n```", "```py\n...\nuserActions\n  .edit(formData, profile.id)\n  .then(() => {\n    setToaster({\n      type: \"success\",\n      message: \"Profile updated successfully 🚀\",\n      show: true,\n      title: \"Profile updated\",\n    });\n    navigate(-1);\n  })\n  .catch((err) => {\n    if (err.message) {\n      setError(err.request.response);\n    }\n  });\n...\n```", "```py\n...\nreturn (\n  <Form\n    id=\"registration-form\"\n    className=\"border p-4 rounded\"\n    noValidate\n    validated={validated}\n    onSubmit={handleSubmit}\n  >\n    <Form.Group className=\"mb-3 d-flex flex-column\">\n      <Form.Label className=\"text-center\">Avatar\n      </Form.Label>\n      <Image\n        src={form.avatar}\n        roundedCircle\n        width={120}\n        height={120}\n        className=\"m-2 border border-primary border-2\n                   align-self-center\"\n      />\n      <Form.Control\n        onChange={(e) => setAvatar(e.target.files[0])}\n        className=\"w-50 align-self-center\"\n        type=\"file\"\n        size=\"sm\"\n      />\n      <Form.Control.Feedback type=\"invalid\">\n        This file is required.\n      </Form.Control.Feedback>\n    </Form.Group>\n    ...\n  </Form>\n);\n```", "```py\n...\n<Form.Group className=\"mb-3\">\n  <Form.Label>First Name</Form.Label>\n  <Form.Control\n    value={form.first_name}\n    onChange={(e) => setForm({ ...form, first_name:\n                              e.target.value })}\n    required\n    type=\"text\"\n    placeholder=\"Enter first name\"\n  />\n  <Form.Control.Feedback type=\"invalid\">\n    This file is required.\n  </Form.Control.Feedback>\n</Form.Group>\n<Form.Group className=\"mb-3\">\n  <Form.Label>Last name</Form.Label>\n  <Form.Control\n    value={form.last_name}\n    onChange={(e) => setForm({ ...form, last_name:\n                              e.target.value })}\n    required\n    type=\"text\"\n    placeholder=\"Enter last name\"\n  />\n  <Form.Control.Feedback type=\"invalid\">\n    This file is required.\n  </Form.Control.Feedback>\n</Form.Group>\n...\n```", "```py\n...\n<Form.Group className=\"mb-3\">\n  <Form.Label>Bio</Form.Label>\n  <Form.Control\n    value={form.bio}\n    onChange={(e) => setForm({ ...form, bio: e.target.value })}\n    as=\"textarea\"\n    rows={3}\n    placeholder=\"A simple bio ... (Optional)\"\n  />\n</Form.Group>\n<div className=\"text-content text-danger\">{error && <p>{error}</p>}</div>\n<Button variant=\"primary\" type=\"submit\">\n  Save changes\n</Button>\n...\n```", "```py\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport Layout from \"../components/Layout\";\nimport UpdateProfileForm from \"../components/profile/UpdateProfileForm\";\nimport { fetcher } from \"../helpers/axios\";\nimport { Row, Col } from \"react-bootstrap\";\nfunction EditProfile() {\n  return (\n    //JSX code\n  );\n}\nexport default EditProfile;\n```", "```py\n...\nfunction EditProfile() {\n  const { profileId } = useParams();\n  const profile = useSWR(`/user/${profileId}/`, fetcher);\n  return (\n    <Layout hasNavigationBack>\n      {profile.data ? (\n        <Row className=\"justify-content-evenly\">\n          <Col sm={9}>\n            <UpdateProfileForm profile={profile.data} />\n          </Col>\n        </Row>\n      ) : (\n        <div>Loading...</div>\n      )}\n    </Layout>\n  );\n}\n...\n```", "```py\n...\n<Route\n  path=\"/profile/:profileId/edit/\"\n  element={\n    <ProtectedRoute>\n      <EditProfile />\n    </ProtectedRoute>\n  }\n/>\n...\n```"]