["```py\n    from odoo import http\n    from odoo.http import request\n        class Main(http.Controller):\n            @http.route('/my_hostel/students', type='http', auth='none')\n        def students(self):\n            students = request.env['hostel.student'].sudo().search([])\n            html_result = '<html><body><ul>'\n            for student in students:\n                html_result += \"<li> %s </li>\" % student.name\n            html_result += '</ul></body></html>'\n            return html_result\n    ```", "```py\n    @http.route('/my_hostel/students/json', type='json', auth='none')\n        def students_json(self):\n            records = request.env['hostel.student'].sudo().search([])\n            return records.read(['name'])\n    ```", "```py\n    from . import main\n    ```", "```py\n    from . import controllers\n    ```", "```py\ncurl -i -X POST -H \"Content-Type: application/json\" -d \"{}\"\nlocalhost:8069/my_hostel/students/json\n```", "```py\nreturn request.make_response(\n  html_result, headers=[\n    ('Last-modified', email.utils.formatdate(\n      (\n        fields.Datetime.from_string(\n        request.env['hostel.student'].sudo()\n        .search([], order='write_date desc', limit=1)\n        .write_date) -\n        datetime.datetime(1970, 1, 1)\n      ).total_seconds(),\n      usegmt=True)),\n])\n```", "```py\nimport email\nimport datetime\nfrom odoo import fields\n```", "```py\nrequest.session['hello'] = 'world'\nrequest.session.get('hello')\n```", "```py\n        @http.route('/my_hostel/all-students', type='http', auth='none')\n        def all_students(self):\n            students = request.env['hostel.student'].sudo().search([])\n            html_result = '<html><body><ul>'\n            for student in students:\n                html_result += \"<li> %s </li>\" % student.name\n            html_result += '</ul></body></html>'\n            return html_result\n    ```", "```py\n    @http.route('/my_hostel/all-students/mark-mine', type='http', auth='public')\n        def all_students_mark_mine(self):\n            students = request.env['hostel.student'].sudo().search([])\n            hostels = request.env['hostel.hostel'].sudo().search([('rector', '=', request.env.user.partner_id.id)])\n            hostel_rooms = request.env['hostel.room'].sudo().search([('hostel_id', 'in', hostels.ids)])\n            html_result = '<html><body><ul>'\n            for student in students:\n                if student.id in hostel_rooms.student_ids.ids:\n                    html_result += \"<li> <b>%s</b> </li>\" % student.name\n                else:\n                    html_result += \"<li> %s </li>\" % student.name\n            html_result += '</ul></body></html>'\n            return html_result\n    ```", "```py\n    @http.route('/my_hostel/all-students/mine', type='http', auth='user')\n        def all_students_mine(self):\n            hostels = request.env['hostel.hostel'].sudo().search([('rector', '=', request.env.user.partner_id.id)])\n            students = request.env['hostel.room'].sudo().search([('hostel_id', 'in', hostels.ids)]).student_ids\n            html_result = '<html><body><ul>'\n            for student in students:\n                html_result += \"<li> %s </li>\" % student.name\n            html_result += '</ul></body></html>'\n            return html_result\n    ```", "```py\nfrom odoo import exceptions, http, models\nfrom odoo.http import request\nclass IrHttp(models.Model):\n  _inherit = 'ir.http'\n  def _auth_method_base_group_user(self):\n    self._auth_method_user()\n    if not request.env.user.has_group('base.group_user'):\n      raise exceptions.AccessDenied()\n```", "```py\n            @http.route('/my_hostel/student_details', type='http', auth='none')\n            def student_details(self, student_id):\n                    record = request.env['hostel.student'].sudo().browse(int(student_id))\n                    return u'<html><body><h1>%s</h1>Room No: %s' % (\n                            record.name, str(record.room_id.room_no) or 'none')\n    ```", "```py\n    @http.route(\"/my_hostel/student_details/<model('hostel.student'):student>\",\n                type='http', auth='none')\n        def student_details_in_path(self, book):\n            return self.student_details(student.id)\n    ```", "```py\n    <?xml version=\"1.0\"?>\n    <odoo>\n      <template id=\"show_website_info\"\n                inherit_id=\"website.show_website_info\">\n       <xpath expr=\"//dl[@t-foreach='apps']\" position=\"replace\">\n                <table class=\"table\">\n                    <tr t-foreach=\"apps\" t-as=\"app\">\n                        <th>\n                            <a t-att-href=\"app.website\" groups='base.group_no_one'>\n                                <t t-out=\"app.name\" />\n                            </a>\n                        </th>\n                        <td>\n                            <span t-out=\"app.summary\" />\n                        </td>\n                    </tr>\n                </table>\n            </xpath>\n      </template>\n    </odoo>\n    ```", "```py\n    from odoo import http\n    from odoo.addons.website.controllers.main import Website\n    class WebsiteInfo(Website):\n        @http.route()\n        def website_info(self):\n            result = super(WebsiteInfo, self).website_info()\n            result.qcontext['apps'] = result.qcontext['apps'].filtered(\n                lambda x: x.name != 'website'\n            )\n            return result\n    ```", "```py\nreturn request.render('template.name', values)\n```", "```py\n            @http.route('/demo_page', type='http', auth='none')\n            def students(self):\n                    image_url = '/my_hostel/static/src/image/odoo.png'\n                    html_result = \"\"\"<html>\n                                <body>\n                                <img src=\"img/%s\"/>\n                                </body>\n                            </html>\"\"\" % image_url\n            return html_result\n    ```"]