["```py\n$ mkdir ~/work15/library\n$ source ~/work15/env15/bin/activate\n(env15) $ odoo \\\n--addons-path=\"~/work15/library,~/work15/odoo/addons\" \\\n-d library -c ~/work15/library.conf --save --stop\n```", "```py\n(env15) $ odoo scaffold library_app ~/work15/library\n```", "```py\nlibrary_app/\n├── __init__.py\n├── __manifest__.py\n├── controllers\n│   ├── __init__.py\n│   └── controllers.py\n├── demo\n│   └── demo.xml\n├── models\n│   ├── __init__.py\n│   └── models.py\n├── security\n│   └── ir.model.access.csv\n└── views\n    ├── templates.xml\n    └── views.xml\n```", "```py\n{\n    'name': \"library_app\",\n    'summary': \"\"\"\n        Short (1 phrase/line) summary of the module's \n        purpose, used as subtitle on modules listing or \n        apps.openerp.com\"\"\",\n    'description': \"\"\"\n        Long description of module's purpose\n    \"\"\",\n    'author': \"My Company\",\n    'website': \"http://www.yourcompany.com\",\n    # Categories can be used to filter modules in modules \n    # listing\n    # Check https://github.com/odoo/odoo/blob/15.0/\n    #   odoo/addons/base/data/ir_module_category_data.xml\n    # for the full list\n    'category': 'Uncategorized',\n    'version': '0.1',\n    # any module necessary for this one to work correctly\n    'depends': ['base'],\n    # always loaded\n    'data': [\n        # 'security/ir.model.access.csv',\n        'views/views.xml',\n        'views/templates.xml',\n    ],\n    # only loaded in demonstration mode\n    'demo': [\n        'demo/demo.xml',\n    ],\n}\n```", "```py\nfrom . import controllers\nfrom . import models\n```", "```py\n{\n    \"name\": \"Library Management\",\n    \"summary\": \"Manage library catalog and book lending.\",\n    \"author\": \"Daniel Reis\",\n    \"license\": \"AGPL-3\",\n    \"website\": \"https://github.com/PacktPublishing\"\n               \"/Odoo-15-Development-Essentials\",\n    \"version\": \"15.0.1.0.0\",\n    \"depends\": [\"base\"],\n    \"application\": True,\n}\n```", "```py\n    \"category\": \"Services/Library\", \n```", "```py\nTitle\n=====\nSubtitle\n--------\nThis is *emphasis*, rendered in italics.\nThis is **strong emphasis**, rendered in bold.\nThis is a bullet list:\n- Item one.\n- Item two.\n```", "```py\n$ cd ~/work15/library/library_app\n$ mkdir -p ./static/description\n$ cp ~/work15/odoo/addons/note/static/description/\\\nicon.png ./static/description/\n```", "```py\n(env15)$ odoo -c ~/work15/library.conf -d library -i \\\nlibrary_app\n```", "```py\n(env15)$ odoo -c ~/work15/library.conf -d library \\\n-u library_app\n```", "```py\n<odoo> \n  <!-- Library App Menu -->\n  <menuitem id=\"menu_library\" name=\"Library\" /> \n</odoo> \n```", "```py\n    \"data\": [\n        \"views/library_menu.xml\",\n    ],\n```", "```py\n<odoo>\n  <data>\n    <!-- Library User Group -->\n    <record id=\"library_group_user\" model=\"res.groups\">\n      <field name=\"name\">User</field>\n      <field name=\"category_id\" \n             ref=\"base.module_category_services_library \"/>\n      <field name=\"implied_ids\" \n             eval=\"[(4, ref('base.group_user'))]\"/>\n    </record>\n  </data>\n</odoo>\n```", "```py\n    <!-- Library Manager Group -->\n    <record id=\"library_group_manager\" model=\"res.groups\">\n      <field name=\"name\">Manager</field>\n      <field name=\"category_id\" \n             ref=\"base.module_category_services_library \"/>\n      <field name=\"implied_ids\" \n             eval=\"[(4, ref('library_group_user'))]\"/>\n      <field name=\"users\" \n             eval=\"[(4, ref('base.user_root')),\n                    (4, ref('base.user_admin'))]\"/>\n    </record>\n```", "```py\n    \"data\": [\n        \"security/library_security.xml\",\n        \"views/library_menu.xml\",\n    ], \n```", "```py\n    from . import test_book\n    ```", "```py\n    from odoo.tests.common import TransactionCase \n    class TestBook(TransactionCase): \n        def setUp(self, *args, **kwargs):\n            super().setUp(*args, **kwargs)\n            self.Book = self.env[\"library.book\"]\n            self.book1 = self.Book.create({\n                \"name\": \"Odoo Development Essentials\",\n                \"isbn\": \"879-1-78439-279-6\"})\n        def test_book_create(self): \n            \"New Books are active by default\" \n            self.assertEqual(\n                self.book1.active, True\n            )\n    ```", "```py\n(env15) $ odoo -c ~/work15/library.conf -u library_app \\\n--test-enable\n```", "```py\n    def test_check_isbn(self): \n        \"Check valid ISBN\" \n        self.assertTrue(self.book1._check_isbn) \n```", "```py\ndef setUp(self, *args, **kwargs):\n    super().setUp(*args, **kwargs)\n    user_admin = self.env.ref(\"base.user_admin\")\n    self.env = self.env(user=user_admin)\n    self.Book = self.env[\"library.book\"]\n    self.book_ode = self.Book.create({\n        \"name\": \"Odoo Development Essentials\",\n        \"isbn\": \"879-1-78439-279-6\"})\n```", "```py\nfrom . import models\n```", "```py\nfrom . import library_book\n```", "```py\nfrom odoo import fields, models\nclass Book(models.Model):\n    _name = \"library.book\"\n    _description = \"Book\"\n    name = fields.Char(\"Title\", required=True)\n    isbn = fields.Char(\"ISBN\")\n    active = fields.Boolean(\"Active?\", default=True)\n    date_published = fields.Date()\n    image = fields.Binary(\"Cover\")\n    publisher_id = fields.Many2one(\"res.partner\", \n      string=\"Publisher\")\n    author_ids = fields.Many2many(\"res.partner\", \n      string=\"Authors\")\n```", "```py\n(env15)$ odoo -c ~/work15/library.conf -d library \\\n-u library_app\n```", "```py\n The model library.book has no access rules, consider adding one. \n```", "```py\nid,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink\naccess_book_user,BookUser,model_library_book,library_group_user,1,1,1,0\naccess_book_manager,BookManager,model_library_book,library_group_manager,1,1,1,1\n```", "```py\n    \"data\": [\n        \"security/library_security.xml\",\n        \"security/ir.model.access.csv\",\n        \"views/library_menu.xml\",\n    ],\n```", "```py\n(env15) $ odoo -c ~/work15/library.conf -u library_app --test-enable\n```", "```py\n  <data noupdate=\"1\">\n    <record id=\"book_user_rule\" model=\"ir.rule\">\n      <field name=\"name\">Library Book User Access</field>\n      <field name=\"model_id\" ref=\"model_library_book\"/>\n      <field name=\"domain_force\">\n        [('active', '=', True)]\n      </field>\n      <field name=\"groups\" eval=\"[(4, \n        ref('library_group_user'))]\"/>\n    </record>\n  </data>\n```", "```py\n  <!-- Action to open the Book list --> \n  <record id=\"action_library_book\" model=\n    \"ir.actions.act_window\">\n    <field name=\"name\">Library Books</field>\n    <field name=\"res_model\">library.book</field>\n    <field name=\"view_mode\">tree,form</field>\n  </record>\n  <!-- Menu item to open the Book list -->\n  <menuitem id=\"menu_library_book\" \n    name=\"Books\" \n    parent=\"menu_library\"\n    action=\"action_library_book\"\n  />\n```", "```py\n<odoo> \n  <record id=\"view_form_book\" model=\"ir.ui.view\"> \n    <field name=\"name\">Book Form</field> \n    <field name=\"model\">library.book</field> \n    <field name=\"arch\" type=\"xml\"> \n      <form string=\"Book\">\n        <group>\n          <field name=\"name\" /> \n          <field name=\"author_ids\" \n            widget=\"many2many_tags\" /> \n          <field name=\"publisher_id\" /> \n          <field name=\"date_published\" /> \n          <field name=\"isbn\" /> \n          <field name=\"active\" /> \n          <field name=\"image\" widget=\"image\" /> \n        </group> \n      </form> \n    </field> \n  </record> \n</odoo> \n```", "```py\n    \"data\": [\n        \"security/library_security.xml\",\n        \"security/ir.model.access.csv\", \n        \"views/book_view.xml\",\n        \"views/library_menu.xml\",\n    ], \n```", "```py\n<form> \n  <header> \n    <!-- Buttons will go here --> \n  </header> \n  <sheet> \n    <!-- Content goes here: --> \n    <group>\n      <field name=\"name\" /> \n      <field name=\"author_ids\" widget=\"many2many_tags\" /> \n      <field name=\"publisher_id\" /> \n      <field name=\"date_published\" /> \n      <field name=\"isbn\" /> \n      <field name=\"active\" /> \n      <field name=\"image\" widget=\"image\" /> \n    </group> \n  </sheet> \n</form> \n```", "```py\n<header> \n  <button name=\"button_check_isbn\" type=\"object\" \n          string=\"Check ISBN\" /> \n</header> \n```", "```py\n<sheet> \n  <group name=\"group_top\"> \n    <group name=\"group_left\"> \n      <field name=\"name\" />\n      <field name=\"author_ids\" widget=\"many2many_tags\" />\n      <field name=\"publisher_id\" />\n      <field name=\"date_published\" />\n    </group> \n    <group name=\"group_right\"> \n      <field name=\"isbn\" /> \n      <field name=\"active\" /> \n      <field name=\"image\" widget=\"image\" />\n    </group> \n  </group> \n</sheet>\n```", "```py\n<form> \n  <header> \n    <button name=\"check_isbn\" type=\"object\" \n      string=\"Check ISBN\" /> \n  </header> \n  <sheet> \n    <group name=\"group_top\"> \n      <group name=\"group_left\"> \n        <field name=\"name\" />\n        <field name=\"author_ids\" widget=\"many2many_tags\" />\n        <field name=\"publisher_id\" />\n        <field name=\"date_published\" />\n      </group> \n      <group name=\"group_right\"> \n        <field name=\"isbn\" /> \n        <field name=\"active\" /> \n        <field name=\"image\" widget=\"image\" />\n      </group> \n    </group> \n  </sheet> \n</form> \n```", "```py\n<record id=\"view_tree_book\" model=\"ir.ui.view\"> \n  <field name=\"name\">Book List</field> \n  <field name=\"model\">library.book</field> \n  <field name=\"arch\" type=\"xml\"> \n    <tree> \n      <field name=\"name\"/> \n      <field name=\"author_ids\" widget=\"many2many_tags\" />\n      <field name=\"publisher_id\"/> \n      <field name=\"date_published\"/>\n    </tree> \n  </field> \n</record> \n```", "```py\n<record id=\"view_search_book\" model=\"ir.ui.view\"> \n  <field name=\"name\">Book Filters</field> \n  <field name=\"model\">library.book</field> \n  <field name=\"arch\" type=\"xml\"> \n    <search> \n      <field name=\"publisher_id\"/> \n      <filter name=\"filter_inactive\"\n              string=\"Inactive\" \n              domain=\"[('active','=',True)]\"/>\n      <filter name=\"filter_active\"\n              string=\"Active\"\n              domain=\"[('active','=',False)]\"/> \n    </search> \n  </field> \n</record> \n```", "```py\nponderations = [1, 3] * 6\nterms = [a * b for a, b in zip(digits, ponderations)]\nremain = sum(terms) % 10 \ncheck = 10 - remain if remain != 0 else 0\nreturn digits[-1]\n```", "```py\n    def _check_isbn(self):\n        self.ensure_one()\n        digits = [int(x) for x in self.isbn if x.isdigit()]\n        if len(digits) == 13:\n            ponderations = [1, 3] * 6\n            terms = [a * b for a, b in zip(digits[:12], \n              ponderations)]\n            remain = sum(terms) % 10 \n            check = 10 - remain if remain != 0 else 0\n            return digits[-1] == check\n```", "```py\nfrom odoo.exceptions import ValidationError\n```", "```py\ndef button_check_isbn(self): \n    for book in self:\n        if not book.isbn:\n            raise ValidationError(\"Please provide an ISBN \n              for %s\" % book.name)\n        if book.isbn and not book._check_isbn():\n            raise ValidationError(\"%s ISBN is invalid\" % \n              book.isbn) \n    return True \n```", "```py\nfrom . import models\nfrom . import controllers\n```", "```py\nfrom . import main \n```", "```py\nfrom odoo import http\nclass Books(http.Controller):\n    @http.route(\"/library/books\")\n    def list(self, **kwargs):\n        Book = http.request.env[\"library.book\"]\n        books = Book.search([])\n        return http.request.render(\n            \"library_app.book_list_template\",\n            {\"book\"': books}\n        )\n```", "```py\n<odoo>\n<template id=\"book_list_template\" name=\"Book List\">\n  <div id=\"wrap\" class=\"container\">\n    <h1>Books</h1>\n      <t t-foreach=\"books\" t-as=\"book\">\n        <div class=\"row\">\n          <span t-field=\"book.name\" />,\n          <span t-field=\"book.date_published\" />,\n          <span t-field=\"book.publisher_id\" />\n        </div>\n      </t>\n  </div>\n</template>\n</odoo>\n```", "```py\n    \"data\": [\n        \"security/library_security.xml\",\n        \"security/ir.model.access.csv\", \n        \"views/book_view.xml\",\n        \"views/library_menu.xml\",\n        \"views/book_list_template.xml\",\n    ], \n```"]