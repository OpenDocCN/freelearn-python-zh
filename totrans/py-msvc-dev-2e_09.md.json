["```py\n from setuptools import setup, find_packages\n\n    with open(\"README.rst\") as f:\n        LONG_DESC = f.read()\n\n    setup(\n        name=\"MyProject\",\n        version=\"1.0.0\",\n        url=\"http://example.com\",\n        description=\"This is a cool microservice based on Quart.\",\n        long_description=LONG_DESC,\n        long_description_content_type=\"text/x-rst\",\n        author=\"Simon\",\n        author_email=\"simon@example.com\",\n        license=\"MIT\",\n        classifiers=[\n            \"Development Status :: 3 - Alpha\",\n            \"License :: OSI Approved :: MIT License\",\n            \"Programming Language :: Python :: 3\",\n        ],\n        keywords=[\"quart\", \"microservice\"],\n        packages=find_packages(),\n        include_package_data=True,\n        zip_safe=False,\n        install_requires=[\"quart\"],\n    ) \n```", "```py\n$ python3 –m venv ./my-project-venv \n$ source ./my-project-venv/bin/activate \n(my-project-venv) $ \n```", "```py\n$ more MyProject.egg-info/PKG-INFO\nMetadata-Version: 2.1\nName: MyProject\nVersion: 1.0.0\nSummary: This is a cool microservice based on Quart.\nHome-page: http://example.com\nAuthor: Simon\nAuthor-email: simon@example.com\nLicense: MIT\nDescription: long description!\n\nKeywords: quart,microservice\nPlatform: UNKNOWN\nClassifier: Development Status :: 3 - Alpha\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Programming Language :: Python :: 3\nDescription-Content-Type: text/x-rst \n```", "```py\narrow \npython-dateutil \npytz \nrequests \nsix \nstravalib \nunits \n```", "```py\n$ pip install pip-tools \n... \n$ pip-compile \n#\n# This file is autogenerated by pip-compile\n# To update, run:\n#\n#\tpip-compile\n#\naiofiles==0.6.0\n\t# via quart\nblinker==1.4\n\t# via quart\nclick==7.1.2\n\t# via quart\nh11==0.12.0\n\t# via\n\t#   hypercorn\n\t#   wsproto\n… \n```", "```py\n$ pip-compile —generate-hashes\n#\n# This file is autogenerated by pip-compile\n# To update, run:\n#\n#\tpip-compile —generate-hashes\n#\naiofiles==0.6.0 \\\n\t—hash=sha256:bd3019af67f83b739f8e4053c6c0512a7f545b9a8d91aaeab55e6e0f9d123c27 \\\n\t—hash=sha256:e0281b157d3d5d59d803e3f4557dcc9a3dff28a4dd4829a9ff478adae50ca092\n\t# via quart\nblinker==1.4 \\\n\t—hash=sha256:471aee25f3992bd325afa3772f1063dbdbbca947a041b8b89466dc00d606f8b6\n\t# via quart\nclick==7.1.2 \\\n\t—hash=sha256:d2b5255c7c6349bc1bd1e59e08cd12acbbd63ce649f2588755783aa94dfb6b1a \\\n\t—hash=sha256:dacca89f4bfadd5de3d7489b7c8a566eee0d3676333fbb50030263894c38c0dc\n\t# via quart \n```", "```py\n$ pip freeze\naiofiles==0.6.0\nblinker==1.4\nclick==7.1.2\nh11==0.12.0\nh2==4.0.0\nhpack==4.0.0\n…\n... \n```", "```py\nquart>0.13.0,<0.15.0 \n```", "```py\ninclude requirements.txt \ninclude README.rst \ninclude LICENSE \nrecursive-include myservice *.ini \nrecursive-include docs *.rst *.png *.svg *.css *.html conf.py \nprune docs/build/* \n```", "```py\n>>> import semver\n>>> version1 = semver.parse_version_info('2.2.3-rc2')\n>>> version2 = semver.parse_version_info('2.3.1')\n>>> version1 < version2\n    True \n```", "```py\n$ pip install --upgrade build \n...\n$ python -m build\n...\nrunning bdist_wheel\nrunning build\ninstalling to build/bdist.macosx-10.15-x86_64/wheel\nrunning install\nrunning install_egg_info\nrunning egg_info\nwriting MyProject.egg-info/PKG-INFO\nwriting dependency_links to MyProject.egg-info/dependency_links.txt\nwriting requirements to MyProject.egg-info/requires.txt\nwriting top-level names to MyProject.egg-info/top_level.txt\nreading manifest file 'MyProject.egg-info/SOURCES.txt'\nwriting manifest file 'MyProject.egg-info/SOURCES.txt'\nCopying MyProject.egg-info to build/bdist.macosx-10.15-x86_64/wheel/MyProject-1.0.0-py3.8.egg-info\nrunning install_scripts\ncreating build/bdist.macosx-10.15-x86_64/wheel/MyProject-1.0.0.dist-info/WHEEL\ncreating '/Users/simon/github/PythonMicroservices/CodeSamples/Chapter9/pyproject-example/dist/tmpcqfu71ms/MyProject-1.0.0-py3-none-any.whl' and adding 'build/bdist.macosx-10.15-x86_64/wheel' to it\nadding 'MyProject-1.0.0.dist-info/METADATA'\nadding 'MyProject-1.0.0.dist-info/WHEEL'\nadding 'MyProject-1.0.0.dist-info/top_level.txt'\nadding 'MyProject-1.0.0.dist-info/RECORD'\nremoving build/bdist.macosx-10.15-x86_64/wheel \n```", "```py\n $ ls dist/\nMyProject-1.0.0-py3-none-any.whl\tMyProject-1.0.0.tar.gz \n```", "```py\n$ pip install dist/MyProject-1.0.0-py3-none-any.whl\nProcessing ./dist/MyProject-1.0.0-py3-none-any.whl\nCollecting quart\n  Using cached Quart-0.15.1-py3-none-any.whl (89 kB)\nCollecting hypercorn>=0.11.2\n  Using cached Hypercorn-0.11.2-py3-none-any.whl (54 kB)\nCollecting itsdangerous\n  Using cached itsdangerous-2.0.1-py3-none-any.whl (18 kB) \n…\nInstalling collected packages: hyperframe, hpack, h11, wsproto, priority, MarkupSafe, h2, werkzeug, jinja2, itsdangerous, hypercorn, click, blinker, aiofiles, quart, MyProject\nSuccessfully installed MarkupSafe-2.0.1 MyProject-1.0.0 aiofiles-0.7.0 blinker-1.4 click-8.0.1 h11-0.12.0 h2-4.0.0 hpack-4.0.0 hypercorn-0.11.2 hyperframe-6.0.1 itsdangerous-2.0.1 jinja2-3.0.1 priority-2.0.0 quart-0.15.1 werkzeug-2.0.1 wsproto-1.0.0 \n```", "```py\nfrom pkgutil import extend_path \n__path__ = extend_path(__path__, __name__) \n```", "```py\n>>> from jeeves import tokendealer, dataservice \n```", "```py\n$ twine register dist/jeeves-dataservice-0.1.0.tar.gz \n```", "```py\n$ twine upload —repository testpypi dist/*\n$ pip install —index-url https://test.pypi.org/simple/ —extra-index-url https://pypi.org/simple jeeves-dataservice \n```", "```py\n$ twine upload dist/* \n```", "```py\n$ hypercorn dataservice:app \n```", "```py\n[watcher:web]\ncmd = hypercorn —bind fd://$(circus.sockets.web) server:app\nuse_sockets = True\nnumprocesses = 5\nvirtualenv = ./venvs/circus-virtualenv/\ncopy_env = True \n[watcher:redis] \ncmd = /usr/local/bin/redis-server \nuse_sockets = False \nnumprocesses = 1 \n\n[socket:web] \nhost = 0.0.0.0 \nport = 8000 \n```", "```py\n$ circusd myconfig.ini \n```"]