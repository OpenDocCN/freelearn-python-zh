["```py\n$ sudo service docker start\n$ docker network create elastic\n$ docker pull docker.elastic.co/elasticsearch/elasticsearch:8.4.2\n$ docker run --name elasticsearch –-rm -it --network elastic -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" -t docker.elastic.co/elasticsearch/elasticsearch:8.4.2 \n```", "```py\n->  Password for the elastic user (reset with 'bin/elasticsearch-reset-password -u elastic'):\n  <password>\n->  Configure Kibana to use this cluster:\n* Run Kibana and click the configuration link in the terminal when Kibana starts.\n* Copy the following enrollment token and paste it into Kibana in your browser (valid for the next 30 minutes):\n  <token> \n```", "```py\n$ docker pull docker.elastic.co/kibana/kibana:8.4.2\n$ docker run --name kibana –-rm -it --network elastic -p 5601:5601 docker.elastic.co/kibana/kibana:8.4.2 \n```", "```py\n$ docker ps\nCONTAINER ID   IMAGE                                                 COMMAND                  CREATED              STATUS              PORTS                                                                                  NAMES\nf7d6d8842060   docker.elastic.co/kibana/kibana:8.4.2                 \"/bin/tini -- /usr/l…\"   42 minutes ago       Up 42 minutes       0.0.0.0:5601->5601/tcp, :::5601->5601/tcp                                              kibana\ndc2a1fa15e3b   docker.elastic.co/elasticsearch/elasticsearch:8.4.2   \"/bin/tini -- /usr/l…\"   46 minutes ago       Up 46 minutes       0.0.0.0:9200->9200/tcp, :::9200->9200/tcp, 0.0.0.0:9300->9300/tcp, :::9300->9300/tcp   elasticsearch \n```", "```py\n$ sudo apt install openjdk-11-jre-headless\n$ java --version\nopenjdk 11.0.16 2022-07-19\nOpenJDK Runtime Environment (build 11.0.16+8-post-Ubuntu-0ubuntu122.04)\nOpenJDK 64-Bit Server VM (build 11.0.16+8-post-Ubuntu-0ubuntu122.04, mixed mode, sharing) \n```", "```py\n$ wget https://artifacts.elastic.co/downloads/logstash/logstash-8.4.2-linux-x86_64.tar.gz\n$ tar -xvzf logstash-8.4.2-linux-x86_64.tar.gz\n$ cd logstash-8.4.2/ \n```", "```py\n$ vim config/logstash.yml \n# change the following fields\nnode.name: mastering-python-networking\napi.http.host: <your host ip>\napi.http.port: 9600-9700 \n```", "```py\nr[1-6]#sh run | i logging\nlogging host <logstash ip> vrf Mgmt-intf transport udp port 5144 \n```", "```py\nechou@elk-stack-mpn:~$ cd logstash-8.4.2/\nechou@elk-stack-mpn:~/logstash-8.4.2$ mkdir network_configs\nechou@elk-stack-mpn:~/logstash-8.4.2$ touch network_configs/simple_config.cfg\nechou@elk-stack-mpn:~/logstash-8.4.2$ cat network_configs/simple_config.conf \ninput {\n  udp {\n    port => 5144\n    type => \"syslog-ios\"\n  }\n}\noutput {\n  stdout { codec => json }\n  elasticsearch {\n    hosts => [\"https://<elasticsearch ip>:9200\"]\n    ssl => true\n    ssl_certificate_verification => false\n    user => \"elastic\"\n    password => \"<password>\"\n    index => \"cisco-syslog-%{+YYYY.MM.dd}\"\n  }\n} \n```", "```py\n$ ./bin/logstash -f network_configs/simple_config.conf \nUsing bundled JDK: /home/echou/Mastering_Python_Networking_Fourth_Edition/logstash-8.4.2/jdk\n[2022-09-23T13:46:25,876][INFO ][logstash.inputs.udp      ][main][516c12046954cb8353b87ba93e5238d7964349b0fa7fa80339b72c6baca637bb] UDP listener started {:address=>\"0.0.0.0:5144\", :receive_buffer_bytes=>\"106496\", :queue_size=>\"2000\"} \n<skip> \n```", "```py\n{\"@timestamp\":\"2022-09-23T20:48:31.354Z\", \"log.level\": \"INFO\", \"message\":\"[cisco-syslog-2022.09.23/B7PH3hxNSHqAegikXyp9kg] create_mapping\", \"ecs.version\": \"1.2.0\",\"service.name\":\"ES_ECS\",\"event.dataset\":\"elasticsearch.server\",\"process.thread.name\":\"elasticsearch[24808013b64b][masterService#updateTask][T#1]\",\"log.logger\":\"org.elasticsearch.cluster.metadata.MetadataMappingService\",\"elasticsearch.cluster.uuid\":\"c-j9Dg8YTh2PstO3JFP9AA\",\"elasticsearch.node.id\":\"Pa4x3YJ-TrmFn5Pb2tObVw\",\"elasticsearch.node.name\":\"24808013b64b\",\"elasticsearch.cluster.name\":\"docker-cluster\"} \n```", "```py\n$ curl -X GET --insecure \"https://elastic:-Rel0twWMUk8L-ZtZr=I@192.168.2.126:9200/_cat/indices/cisco*\"\nyellow open cisco-syslog-2022.09.23 B7PH3hxNSHqAegikXyp9kg 1 1 9 0 21kb 21kb \n```", "```py\n$ curl -X GET --insecure \"https://elastic:-Rel0twWMUk8L-ZtZr=I@192.168.2.126:9200/_cat/indices/kibana*\"\ngreen open kibana_sample_data_ecommerce QcLgMu7CTEKNjeJeBxaD3w 1 0  4675 0 4.2mb 4.2mb\ngreen open kibana_sample_data_logs      KPcJfMoSSaSs-kyqkuspKg 1 0 14074 0 8.1mb 8.1mb\ngreen open kibana_sample_data_flights   q8MkYKooT8C5CQzbMMNTpg 1 0 13059 0 5.8mb 5.8mb \n```", "```py\n#!/usr/bin/env python3\nimport requests\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\n# disable https verification check warning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\ndef current_indices_list(es_host, index_prefix):\n    current_indices = []\n    http_header = {'content-type': 'application/json'}\n    response = requests.get(es_host + \"/_cat/indices/\" + index_prefix + \"*\", headers=http_header, verify=False)\n    for line in response.text.split('\\n'):\n        if line:\n            current_indices.append(line.split()[2])\n    return current_indices\nif __name__ == \"__main__\":\n    username = 'elastic'\n    password = '-Rel0twWMUk8L-ZtZr=I'\n    es_host = 'https://'+username+':'+password+'@192.168.2.126:9200'\n    indices_list = current_indices_list(es_host, 'kibana')\n    print(indices_list) \n```", "```py\n$ python Chapter13_1.py \n['kibana_sample_data_ecommerce', 'kibana_sample_data_logs', 'kibana_sample_data_flights'] \n```", "```py\n(venv) $ pip install elasticsearch \n```", "```py\n#!/usr/bin/env python3\nfrom elasticsearch import Elasticsearch\nes_host = Elasticsearch([\"https://elastic:-Rel0twWMUk8L-ZtZr=I@192.168.2.126:9200/\"],\n                        ca_certs=False, verify_certs=False)\nres = es_host.search(index=\"kibana*\", body={\"query\": {\"match_all\": {}}})\nprint(\"Hits Total: \" + str(res['hits']['total']['value'])) \n```", "```py\n$ python Chapter13_2.py\nHits Total: 10000 \n```", "```py\ninput {\n  udp {\n    port => 5144\n    type => \"syslog-core\"\n  }\n  udp {\n    port => 5145\n    type => \"syslog-edge\"\n  }\n}\nfilter {\n if [type] == \"syslog-edge\" {\n    grok {\n      match => { \"message\" => \".*\" }\n      add_field => [ \"received_at\", \"%{@timestamp}\" ]\n    }\n  } \n}\noutput {\n  stdout { codec => json }\n  elasticsearch {\n    hosts => [\"https://192.168.2.126:9200\"]\n    <skip>\n  }\n} \n```", "```py\nr[5-6]#sh run | i logging\nlogging host 192.168.2.126 vrf Mgmt-intf transport udp port 5145 \n```", "```py\n$ ./bin/logstash -f network_configs/config_2.conf\n<skip>\n[2022-09-23T14:50:42,097][INFO ][logstash.inputs.udp      ][main][212f078853a453d3d8a5d8c1df268fd628577245cd1b66acb06b9e1cb1ff8a10] UDP listener started {:address=>\"0.0.0.0:5144\", :receive_buffer_bytes=>\"106496\", :queue_size=>\"2000\"}\n[2022-09-23T14:50:42,106][INFO ][logstash.inputs.udp      ][main][6c3825527b168b167846f4ca7dea5ef55e1437753219866bdcc2eb51aee53c84] UDP listener started {:address=>\"0.0.0.0:5145\", :receive_buffer_bytes=>\"106496\", :queue_size=>\"2000\"} \n```", "```py\n$ $ curl -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.4.2-amd64.deb\n$ sudo dpkg -i filebeat-8.4.2-amd64.deb \n```", "```py\noutput.elasticsearch:\n  # Array of hosts to connect to.\n  hosts: [\"192.168.2.126:9200\"]\n  # Protocol - either 'http' (default) or 'https'.\n  protocol: \"https\"\n  # Authentication credentials - either API key or username/password.\n  username: \"elastic\"\n  password: \"changeme\"\n  ssl.verification_mode: none\nsetup.kibana:\n  host: \"192.168.2.126:5601\" \n```", "```py\n$ sudo filebeat setup --index-management -E output.logstash.enabled=false -E 'output.elasticsearch.hots=[\"https://elastic:-Rel0twWMUk8L-ZtZr=I@192.168.2.126:9200/\"]'\n$ sudo filebeat setup –dashboards \n```", "```py\n$ sudo filebeat modules enable cisco\nEnabled cisco \n```", "```py\n- module: cisco\n  ios:\n    enabled: true\n    var.input: syslog\n    var.syslog_host: 0.0.0.0\n    var.syslog_port: 514\n    var.paths: ['/home/echou/syslog/my_log.log'] \n```", "```py\n$ sudo service filebeat start\n$ sudo service filebeat status\n● filebeat.service - Filebeat sends log files to Logstash or directly to Elasticsearch.\n     Loaded: loaded (/lib/systemd/system/filebeat.service; disabled; vendor preset: enabled)\n     Active: active (running) since Fri 2022-09-23 16:06:09 PDT; 3s ago\n<skip> \n```", "```py\n$ sudo filebeat modules enable netflow\n$ sudo filebeat setup -e \n```", "```py\n- module: netflow\n  log:\n    enabled: true\n    var:\n      netflow_host: 0.0.0.0\n      netflow_port: 2055 \n```", "```py\n{\n  \"query\": {\n    \"match_all\": {}\n  }\n} \n```", "```py\nimport argparse\nparser = argparse.ArgumentParser(description='Elasticsearch Query Options')\nparser.add_argument(\"-i\", \"--index\", help=\"index to query\")\nparser.add_argument(\"-q\", \"--query\", help=\"query file\")\nargs = parser.parse_args() \n```", "```py\n# load elastic index and query body information\nquery_file = args.query\nwith open(query_file) as f:\n    query_body = json.loads(f.read())\n# Elasticsearch instance\nes_host = Elasticsearch([\"https://elastic:<pass> @192.168.2.126:9200/\"],\n              ca_certs=False, verify_certs=False) \n# Query both index and put into dictionary\nindex = args.index\nres = es.search(index=index, body=query_body)\nprint(res['hits']['total']['value']) \n```", "```py\n$ python Chapter13_3.py --help\nusage: Chapter12_3.py [-h] [-i INDEX] [-q QUERY]\nElasticsearch Query Options\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INDEX, --index INDEX\n                        index to query\n  -q QUERY, --query QUERY\n                        query file\n$ python3 Chapter13_3.py -q query_body_1.json -i \"cisco*\"\n50\n$ python3 Chapter13_3.py -q query_body_1.json -i \"filebeat*\"\n10000 \n```", "```py\n{\n  \"query\": {\n    \"bool\": {\n    \"filter\": [\n      {\n        \"range\": {\n          \"@timestamp\": {\n            \"gte\": \"now-10m\"\n          }\n        }\n      }\n    ]\n    }\n  }\n} \n```", "```py\n<skip>\nres = es.search(index=index, body=query_body)\nprint(\"Total hits: \" + str(res['hits']['total']['value']))\nfor hit in res['hits']['hits']:\n    pprint(hit) \n```", "```py\n$ python Chapter13_4.py -i \"filebeat*\" -q query_body_2.json\nTotal hits: 23 \n```", "```py\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"term\": {\n          \"source.ip\": \"192.168.0.1\"\n        }\n      },\n<skip> \n```", "```py\n$ python Chapter12_4.py -i \"filebeat*\" -q query_body_3.json\nTotal hits: 18 \n```", "```py\n{\n  \"aggs\": {\n        \"network_bytes_sum\": {\n          \"sum\": {\n            \"field\": \"network.bytes\"\n        }\n    }\n  },\n  <skip>\n} \n```", "```py\n$ python Chapter13_5.py -i \"filebeat*\" -q query_body_4.json\n1089.0\n$ python Chapter13_5.py -i \"filebeat*\" -q query_body_4.json\n990.0 \n```", "```py\n$ python Chapter13_6.py -i \"filebeat*\" -q query_body_5.json\n{'1': {'value': 8156040.0}, 'doc_count': 8256, 'key': '10.0.0.5'}\n{'1': {'value': 4747596.0}, 'doc_count': 103, 'key': '172.16.1.124'}\n{'1': {'value': 3290688.0}, 'doc_count': 8256, 'key': '10.0.0.9'}\n{'1': {'value': 576446.0}, 'doc_count': 8302, 'key': '192.168.0.2'}\n{'1': {'value': 576213.0}, 'doc_count': 8197, 'key': '192.168.0.1'}\n{'1': {'value': 575332.0}, 'doc_count': 8216, 'key': '192.168.0.3'}\n{'1': {'value': 433260.0}, 'doc_count': 6547, 'key': '192.168.0.5'}\n{'1': {'value': 431820.0}, 'doc_count': 6436, 'key': '192.168.0.4'} \n```"]