["```py\nimport RPi.GPIO as GPIO\nimport time\n\nLIGHT = 23\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nGPIO.setup(LIGHT,GPIO.OUT)\n\nimport datetime\n\nH = datetime.datetime.now().strftime('%H')\nM = datetime.datetime.now().strftime('%M') \n\nwhile True:\n\n       if H = '06'and M < 20 :\n           GPIO.output(LIGHT,GPIO.HIGH)\n\n       else:\n           GPIO.output(LIGHT,GPIO.LOW)\n```", "```py\nimport RPi.GPIO as GPIO\nimport time \n\nLIGHT = 23\nPIR = 24\nIrritation_flag = 3\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\n\nGPIO.setup(LIGHT,GPIO.OUT) \nGPIO.setup(PIR, GPIO.IN)\n\nimport datetime\n\nH = datetime.datetime.now().strftime('%H') \nM = datetime.datetime.now().strftime('%M')\n\n    while True:\n\n        if H = '07' and M <= '15' and Iriitation_Flag > 0 and GPIO.input(PIR) == 0:\n\n            GPIO.output(LIGHT,GPIO.HIGH)\n\n        if H = '07'and GPIO.input(PIR)==1:\n\n            GPIO.output(LIGHT,GPIO.LOW)\n            time.sleep(10)\n            Irritation_Flag = Irritation_Flag - 1\n\n        for H = '07'and M > '15' and Irritation_Flag > 0 and GPIO.input(PIR) = 0:\n\n            GPIO.output(LIGHT,GPIO.HIGH)\n            time.sleep(5)\n            GPIO.output(LIGHT,GPIO.LOW)\n            time.sleep(5)\n\n        if H != '07':\n\n            Irritation_flag = 3\n            GPIOP.output(LIGHT, GPIO.LOW) \n\n```", "```py\nIrritation_flag = 3\n```", "```py\n        if H = '07' and M <= '15' and Irritation_Flag > 0 and GPIO.input(PIR) == 0:\n\n            GPIO.output(LIGHT,GPIO.HIGH)\n```", "```py\n        if H = '07'and GPIO.input(PIR)==1:\n\n            GPIO.output(LIGHT,GPIO.LOW)\n            time.sleep(10)\n            Irritation_Flag = Irritation_Flag - 1\n```", "```py\n        for H = '07'and M > '15' and Irritation_Flag > 0 and GPIO.input(PIR) = 0:\n\n            GPIO.output(LIGHT,GPIO.HIGH)\n            time.sleep(5)\n            GPIO.output(LIGHT,GPIO.LOW)\n            time.sleep(5)\n\n```", "```py\n        if H != '07':\n\n            Irritation_flag = 3\n```", "```py\nimport RPi.GPIO as GPIO\nimport time \n\nimport Adafruit_ADS1x15\nadc0 = Adafruit_ADS1x15.ADS1115()\n\nGAIN = 1\n\nadc0.start_adc(0, gain=GAIN)\n\nLIGHT = 23\nPIR = 24\nIrritation_flag = 1\nIR = 2\n\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\n\nGPIO.setup(LIGHT,GPIO.OUT) \nGPIO.setup(PIR, GPIO.IN)\nGPIO.setup(IR. GPIO.IN)\n\nimport datetime\n\nH = datetime.datetime.now().strftime('%H') \nM = datetime.datetime.now().strftime('%M')\n\n  while True:\n\n  if H = '07' and M <= '15' and Iriitation_Flag > 0 and GPIO.input(PIR) == 0:\n\n      GPIO.output(LIGHT,GPIO.HIGH)\n\n  if H = '07'and GPIO.input(PIR)==1:\n\n   M_snooze = datetime.datetime.now().strftime('%M')\n   M_snooze = M_snooze + 5\n\n   for M <= M_snooze \n\n     GPIO.output(LIGHT,GPIO.LOW)\n\n     F_value = adc0.get_last_result()\n     F1 =    (1.0 / (F_value / 13.15)) - 0.35\n\n     time.sleep(0.1)\n\n     F_value = adc0.get_last_result()\n     F2 =    (1.0 / (F_value / 13.15)) - 0.35\n\n     F_final = F1-F2\n\n     M = datetime.datetime.now().strftime('%M')\n\n     if F_final > 25\n\n         Irritation_flag = 0\n\n  for H = '07'and M > '15' and Irritation_Flag > 0 and GPIO.input(PIR) = 0:\n\n GPIO.output(LIGHT,GPIO.HIGH)\n time.sleep(5)\n GPIO.output(LIGHT,GPIO.LOW)\n time.sleep(5)\n\n if H != '07':\n\n Irritation_flag = 1 \n```", "```py\n  if H = '07' and M <= '15' and Iriitation_Flag > 0 and GPIO.input(PIR) == 0:\n\n      GPIO.output(LIGHT,GPIO.HIGH)\n```", "```py\n  if H = '07'and GPIO.input(PIR)==1:\n\n   M_snooze = datetime.datetime.now().strftime('%M')\n   M_snooze = M_snooze + 5\n```", "```py\n   for M <= M_snooze \n```", "```py\n     GPIO.output(LIGHT,GPIO.LOW)\n\n     F_value = adc0.get_last_result()\n     F1 =    (1.0 / (F_value / 13.15)) - 0.35\n\n     time.sleep(0.1)\n\n     F_value = adc0.get_last_result()\n     F2 =    (1.0 / (F_value / 13.15)) - 0.35\n\n     F_final = F1-F2\n```", "```py\n     if F_final > 10\n\n        Irritation_flag = 1\n```", "```py\n  for H = '07'and M > '15' and Irritation_Flag = 0 and GPIO.input(PIR) = 0:\n\n    GPIO.output(LIGHT,GPIO.HIGH)\n    time.sleep(5)\n    GPIO.output(LIGHT,GPIO.LOW)\n    time.sleep(5)\n```", "```py\n        if H != '07':\n\n            Irritation_flag = 0 \n```"]