["```py\n$ cd ~/ros2_ws/src/my_py_pkg/my_py_pkg/\n$ touch number_publisher.py\n$ chmod +x number_publisher.py\n```", "```py\n#!/usr/bin/env python3\nimport rclpy\nfrom rclpy.node import Node\nclass NumberPublisherNode(Node):\n    def __init__(self):\n        super().__init__(\"number_publisher\")\ndef main(args=None):\n    rclpy.init(args=args)\n    node = NumberPublisherNode()\n    rclpy.spin(node)\n    rclpy.shutdown()\nif __name__ == \"__main__\":\n    main()\n```", "```py\n$ ros2 interface show example_interfaces/msg/Int64\n# Some comments\nint64 data\n```", "```py\nimport rclpy\nfrom rclpy.node import Node\nfrom example_interfaces.msg import Int64\nclass NumberPublisherNode(Node):\n    def __init__(self):\n        super().__init__(\"number_publisher\")\n        self.number_publisher_ = self.create_publisher(Int64, \"number\", 10)\n```", "```py\ndef __init__(self):\n    super().__init__(\"number_publisher\")\n    self.number_ = 2\n    self.number_publisher_ = self.create_publisher(Int64, \"number\", 10)\n    self.number_timer_ = self.create_timer(1.0, self.publish_number)\n    self.get_logger().info(\"Number publisher has been started.\")\ndef publish_number(self):\n    msg = Int64()\n    msg.data = self.number_\n    self.number_publisher_.publish(msg)\n```", "```py\n<depend>rclpy</depend>\n<depend>example_interfaces</depend>\n```", "```py\nentry_points={\n    'console_scripts': [\n        \"test_node = my_py_pkg.my_first_node:main\",\n        \"number_publisher = my_py_pkg.number_publisher:main\"\n    ],\n},\n```", "```py\n$ cd ~/ros2_ws/\n$ colcon build --packages-select my_py_pkg\n```", "```py\n$ source install/setup.bash # or source ~/.bashrc\n$ ros2 run my_py_pkg number_publisher\n[INFO] [1711526444.403883187] [number_publisher]: Number publisher has been started.\n```", "```py\n$ ros2 topic list\n/number\n/parameter_events\n/rosout\n```", "```py\n$ ros2 topic echo /number\ndata: 2\n---\ndata: 2\n---\n```", "```py\n$ cd ~/ros2_ws/src/my_cpp_pkg/src/\n$ touch number_publisher.cpp\n```", "```py\n#include \"rclcpp/rclcpp.hpp\"\n#include \"example_interfaces/msg/int64.hpp\"\n```", "```py\nnumber_publisher_ = this->create_publisher<example_interfaces::msg::Int64>(\"number\", 10);\n```", "```py\nrclcpp::Publisher<example_interfaces::msg::Int64>::SharedPtr number_publisher_;\n```", "```py\nnumber_timer_ = this->create_wall_timer(std::chrono::seconds(1), std::bind(&NumberPublisherNode::publishNumber, this));\nRCLCPP_INFO(this->get_logger(), \"Number publisher has been started.\");\n```", "```py\nvoid publishNumber()\n{\n    auto msg = example_interfaces::msg::Int64();\n    msg.data = number_;\n    number_publisher_->publish(msg);\n}\n```", "```py\n<depend>rclcpp</depend>\n<depend>example_interfaces</depend>\n```", "```py\nfind_package(rclcpp REQUIRED)\nfind_package(example_interfaces REQUIRED)\nadd_executable(test_node src/my_first_node.cpp)\nament_target_dependencies(test_node rclcpp)\nadd_executable(number_publisher src/number_publisher.cpp)\nament_target_dependencies(number_publisher rclcpp example_interfaces)\ninstall(TARGETS\n  test_node\n  number_publisher\n  DESTINATION lib/${PROJECT_NAME}/\n)\n```", "```py\n$ cd ~/ros2_ws/\n$ colcon build --packages-select my_cpp_pkg\n$ source install/setup.bash\n$ ros2 run my_cpp_pkg number_publisher\n[INFO] [1711528108.225880935] [number_publisher]: Number publisher has been started.\n```", "```py\n$ cd ~/ros2_ws/src/my_py_pkg/my_py_pkg/\n$ touch number_counter.py\n$ chmod +x number_counter.py\n```", "```py\n#!/usr/bin/env python3\nimport rclpy\nfrom rclpy.node import Node\nfrom example_interfaces.msg import Int64\n```", "```py\nclass NumberCounterNode(Node):\n    def __init__(self):\n        super().__init__(\"number_counter\")\n        self.counter_ = 0\n        self.number_subscriber_ = self.create_subscription(Int64, \"number\", self.callback_number, 10)\n       self.get_logger().info(\"Number Counter has been started.\")\n```", "```py\ndef callback_number(self, msg: Int64):\n    self.counter_ += msg.data\n    self.get_logger().info(\"Counter:  \" + str(self.counter_))\n```", "```py\nentry_points={\n    'console_scripts': [\n        \"test_node = my_py_pkg.my_first_node:main\",\n        \"number_publisher = my_py_pkg.number_publisher:main\",\n        \"number_counter = my_py_pkg.number_counter:main\"\n    ],\n},\n```", "```py\n$ ros2 run my_py_pkg number_publisher\n[INFO] [1711529824.816514561] [number_publisher]: Number publisher has been started.\n$ ros2 run my_py_pkg number_counter\n[INFO] [1711528797.363370081] [number_counter]: Number Counter has been started.\n[INFO] [1711528815.739270510] [number_counter]: Counter:  2\n[INFO] [1711528816.739186942] [number_counter]: Counter:  4\n[INFO] [1711528817.739050485] [number_counter]: Counter:  6\n[INFO] [1711528818.738992607] [number_counter]: Counter:  8\n```", "```py\n$ cd ~/ros2_ws/src/my_cpp_pkg/src/\n$ touch number_counter.cpp\n```", "```py\nnumber_subscriber_ = this->create_subscription<example_interfaces::msg::Int64>(\n           \"number\",\n           10,\n           std::bind(&NumberCounterNode::callbackNumber, this, _1));\n```", "```py\nrclcpp::Subscription<example_interfaces::msg::Int64>::SharedPtr number_subscriber_;\n```", "```py\nvoid callbackNumber(const example_interfaces::msg::Int64::SharedPtr msg)\n{\n    counter_ += msg->data;\n    RCLCPP_INFO(this->get_logger(), \"Counter: %d\", counter_);\n}\n```", "```py\nadd_executable(number_counter src/number_counter.cpp)\nament_target_dependencies(number_counter rclcpp example_interfaces)\ninstall(TARGETS\n  test_node\n  number_publisher\n  number_counter\n  DESTINATION lib/${PROJECT_NAME}/\n)\n```", "```py\n$ ros2 run my_py_pkg number_publisher\n[INFO] [1711597703.615546913] [number_publisher]: Number publisher has been started.\n$ ros2 run my_cpp_pkg number_counter\n[INFO] [1711597740.879160448] [number_counter]: Number Counter has been started.\n[INFO] [1711597741.607444197] [number_counter]: Counter: 2\n[INFO] [1711597742.607408224] [number_counter]: Counter: 4\n```", "```py\n$ rqt_graph\n```", "```py\n$ ros2 topic list\n/number\n/parameter_events\n/rosout\n```", "```py\n$ ros2 topic info /number\nType: example_interfaces/msg/Int64\nPublisher count: 1\nSubscription count: 1\n```", "```py\n$ ros2 interface show example_interfaces/msg/Int64\n# some comments\nint64 data\n```", "```py\n$ ros2 topic echo /number\ndata: 2\n---\ndata: 2\n---\n```", "```py\n$ ros2 topic pub -r 2.0 /number example_interfaces/msg/Int64 \\\"{data: 7}\"\npublisher: beginning loop\npublishing #1: example_interfaces.msg.Int64(data=7)\npublishing #2: example_interfaces.msg.Int64(data=7)\n```", "```py\n[INFO] [1711600360.459298369] [number_counter]: Counter: 7\n[INFO] [1711600360.960216275] [number_counter]: Counter: 14\n[INFO] [1711600361.459896877] [number_counter]: Counter: 21\n```", "```py\n$ ros2 run my_py_pkg number_publisher --ros-args -r number:=my_number\n```", "```py\n$ ros2 run my_py_pkg number_counter --ros-args -r number:=my_number\n```", "```py\n$ ros2 run my_py_pkg number_publisher --ros-args -r \\ __node:=number_publisher_2 -r number:=my_number\n```", "```py\n$ mkdir ~/bags\n$ cd ~/bags/\n$ ros2 bag record /number -o bag1\n...\n[INFO] [1711602240.190476880] [rosbag2_recorder]: Subscribed to topic '/number'\n[INFO] [1711602240.190542569] [rosbag2_recorder]: Recording...\n[INFO] [1711602240.190729185] [rosbag2_recorder]: All requested topics are subscribed. Stopping discovery...\n```", "```py\n[INFO] [1711602269.786924027] [rosbag2_cpp]: Writing remaining messages from cache to the bag. It may take a while\n[INFO] [1711602269.787416646] [rosbag2_recorder]: Event publisher thread: Exiting\n[INFO] [1711602269.787547010] [rosbag2_recorder]: Recording stopped\n```", "```py\n$ ros2 bag play ~/bags/bag1/\n```", "```py\n$ sudo apt install ros-jazzy-sensor-msgs\n```", "```py\n$ ros2 interface show sensor_msgs/msg/Image\n```", "```py\n$ ros2 interface show example_interfaces/msg/Int64\n# This is an example message of using a primitive datatype, int64.\n# If you want to test with this that's fine, but if you are deploying it into a system you should create a semantically meaningful message type.\n# If you want to embed it in another message, use the primitive data type instead.\nint64 data\n$ ros2 interface show std_msgs/msg/Int64\n# This was originally provided as an example message.\n# It is deprecated as of Foxy\n# It is recommended to create your own semantically meaningful message.\n# However if you would like to continue using this please use the equivalent in example_msgs.\nint64 data\n```", "```py\n$ cd ~/ros2_ws/src/\n$ ros2 pkg create my_robot_interfaces\n```", "```py\n$ cd my_robot_interfaces/\n$ rm -r src/ include/\n$ mkdir msg\n```", "```py\n<build_depend>rosidl_default_generators</build_depend>\n<exec_depend>rosidl_default_runtime</exec_depend>\n<member_of_group>rosidl_interface_packages</member_of_group>\n```", "```py\nfind_package(rosidl_default_generators REQUIRED)\nrosidl_generate_interfaces(${PROJECT_NAME}\n  # we will add the name of our custom interfaces here\n)\nament_export_dependencies(rosidl_default_runtime)\n```", "```py\n$ cd ~/ros2_ws/src/my_robot_interfaces/msg/\n$ touch HardwareStatus.msg\n```", "```py\nint64 version\nfloat64 temperature\nbool are_motors_ready\nstring debug_message\n```", "```py\nrosidl_generate_interfaces(${PROJECT_NAME}\n  \"msg/HardwareStatus.msg\"\n)\n```", "```py\n$ cd ~/ros2_ws/\n$ colcon build --packages-select my_robot_interfaces\nStarting >>> my_robot_interfaces\nFinished <<< my_robot_interfaces [4.00s]\nSummary: 1 package finished [4.28s]\n```", "```py\n$ source ~/.bashrc\n$ ros2 interface show my_robot_interfaces/msg/HardwareStatus\nint64 version\nfloat64 temperature\nbool are_motors_ready\nstring debug_message\n```", "```py\n<depend>rclpy</depend>\n<depend>example_interfaces</depend>\n<depend>my_robot_interfaces</depend>\n```", "```py\n    from my_robot_interfaces.msg import HardwareStatus\n    ```", "```py\n    msg = HardwareStatus()\n    msg.temperature = 34.5\n    ```", "```py\n    #include \"my_robot_interfaces/msg/hardware_status.hpp\"\n    ```", "```py\n    auto msg = my_robot_interfaces::msg::HardwareStatus();\n    msg.temperature = 34.5;\n    ```", "```py\n\"includePath\": [\n        \"/opt/ros/jazzy/include/**\",\n        \"/home/<user>/ros2_ws/install/my_robot_interfaces/include/**\",\n        \"/usr/include/**\"\n    ],\n```", "```py\n#!/usr/bin/env python3\nimport rclpy\nfrom rclpy.node import Node\nfrom geometry_msgs.msg import Twist\nfrom turtlesim.msg import Pose\n```", "```py\nclass TurtleControllerNode(Node):\n    def __init__(self):\n        super().__init__(\"turtle_controller\")\n        self.cmd_vel_pub_ = self.create_publisher(Twist, \"/turtle1/cmd_vel\", 10)\n        self.pose_sub_ = self.create_subscription(Pose, \"/turtle1/pose\", self.callback_pose, 10)\n```", "```py\ndef callback_pose(self, pose: Pose):\n    cmd = Twist()\n    if pose.x < 5.5:\n        cmd.linear.x = 1.0\n        cmd.angular.z = 1.0\n    else:\n        cmd.linear.x = 2.0\n        cmd.angular.z = 2.0\n    self.cmd_vel_pub_.publish(cmd)\n```"]