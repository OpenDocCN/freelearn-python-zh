["```py\nchetans-MacBookPro:ch08 Chetan$ sudo pip install python-pptx \nPassword: \nDownloading/unpacking python-pptx \n  Downloading python-pptx-0.6.0.tar.gz (6.3MB): 6.3MB downloaded \n  Running setup.py (path:/private/tmp/pip_build_root/python-pptx/setup.py) egg_info for package python-pptx \n\nRequirement already satisfied (use --upgrade to upgrade): lxml>=3.1.0 in /Library/Python/2.7/site-packages (from python-pptx) \nRequirement already satisfied (use --upgrade to upgrade): Pillow>=2.6.1 in /Library/Python/2.7/site-packages (from python-pptx) \nRequirement already satisfied (use --upgrade to upgrade): XlsxWriter>=0.5.7 in /Library/Python/2.7/site-packages (from python-pptx) \nInstalling collected packages: python-pptx \n  Running setup.py install for python-pptx \n\nSuccessfully installed python-pptx \nCleaning up...\n\n```", "```py\n            from pptx import Presentation \n            path_to_presentation = 'myprofile.pptx' \n            prs = Presentation(path_to_presentation) \n            print \"Presentation object for myprofile file: \", prs \n\n    ```", "```py\n            Presentation object for myprofile file:  \n            <pptx.presentation.Presentation object at 0x10e56e550> \n\n    ```", "```py\n            print \"Slides are:\" \n            for slide in prs.slides: \n                print \"Slide object:\", slide \n\n    ```", "```py\n     Slides are: \n            Slide object: <pptx.slide.Slide object at 0x10e59f500> \n            Slide object: <pptx.slide.Slide object at 0x10e59f460>\n\n    ```", "```py\n            print \"Slide has following objects:\" \n            slide1, slide2 = prs.slides[0], prs.slides[1] \n            print \"Slide Ids: \\n\", slide1.slide_id, \",\", slide2.slide_id \n            print \"Slide Open XML elements: \\n\", slide1.element, \",\", \n                   slide2.element \n            print \"Slide layouts: \\n\", slide1.slide_layout.name, \",\",\n                   slide2.slide_layout.name \n\n    ```", "```py\n    Slide has following objects:\n    Slide Ids: \n    256, 257\n    Slide Open XML elements: \n    <Element {http://schemas.openxmlformats.org/\n                      presentationml/2006/main}sld at 0x109fc2d60>, \n            <Element {http://schemas.openxmlformats.org/\n                      presentationml/2006/main}sld at 0x109fc23c0>\n    Slide layouts: \n    Title Slide, Title and Content\n\n    ```", "```py\n            print \"Shapes in the slides\" \n            i=1 \n            for slide in prs.slides: \n                print 'Slide', i \n                for shape in slide.shapes: \n                    print \"Shape: \", shape.shape_type \n                i +=1 \n\n    ```", "```py\n            Shapes in the slides \n            Slide 1 \n            Shape:  PLACEHOLDER (14) \n            Shape:  PLACEHOLDER (14) \n\n            Slide 2 \n            Shape:  PLACEHOLDER (14) \n            Shape:  PLACEHOLDER (14) \n            Shape:  AUTO_SHAPE (1) \n\n    ```", "```py\n            text_runs = [] \n            for slide in prs.slides: \n\n                for shape in slide.shapes: \n                    if not shape.has_text_frame: \n                    continue \n                for paragraph in shape.text_frame.paragraphs: \n                    for run in paragraph.runs: \n                        text_runs.append(run.text) \n\n            print \"Text is: \", text_runs \n\n    ```", "```py\nText is:  [u'Chetan Giridhar', u'World is full of knowledge..', u'He wishes to', u'Travel round the world', u'Build apps', u'Have fun', u'Die peacefully', u'This is circle of life'] \n\n```", "```py\n            from pptx import Presentation \n\n            prs = Presentation() \n            slide = prs.slides.add_slide(prs.slide_layouts[0]) \n            slide.shapes.title.text = \"Yo, Python!\" \n            slide.placeholders[1].text = \"Yes it is really awesome\" \n\n            prs.save('yoPython.pptx') \n\n    ```", "```py\n            from pptx import Presentation \n            prs = Presentation('sample_ppt.pptx') \n\n            first_slide = prs.slides[0] \n            first_slide.shapes[0].text_frame.paragraphs[0]\n                                 .text = \"Hello!\" \n\n            slide = prs.slides.add_slide(prs.slide_layouts[1]) \n            text_frame = slide.shapes[0].text_frame \n            p = text_frame.paragraphs[0] \n            p.text = \"This is a paragraph\" \n\n            prs.save('new_ppt.pptx')\n    ```", "```py\n            from pptx import Presentation\n\n            prs = Presentation()\n            two_content_slide_layout = prs.slide_layouts[3]\n            slide = prs.slides.add_slide(two_content_slide_layout)\n            shapes = slide.shapes\n\n            title_shape = shapes.title\n            title_shape.text = 'Adding a Two Content Slide'\n\n            body_shape = shapes.placeholders[1] \n            tf = body_shape.text_frame \n            tf.text = 'This is line 1.' \n\n            p = tf.add_paragraph() \n            p.text = 'Again a Line 2..' \n            p.level = 1 \n\n            p = tf.add_paragraph() \n            p.text = 'And this is line 3...' \n            p.level = 2 \n\n            prs.save('two_content.pptx') \n\n    ```", "```py\n            from pptx import Presentation \n            from pptx.util import Inches, Pt \n            prs = Presentation() \n            blank_slide_layout = prs.slide_layouts[6] \n            slide = prs.slides.add_slide(blank_slide_layout) \n\n            txBox = slide.shapes.add_textbox(Inches(2), \n                    Inches(2), Inches(5), Inches(1)) \n            tf = txBox.text_frame \n            tf.text = \"Wow! I'm inside a textbox\" \n\n            p = tf.add_paragraph() \n            p.text = \"Adding a new text\" \n            p.font.bold = True \n            p.font.italic = True \n            p.font.size = Pt(30) \n\n            prs.save('textBox.pptx')\n    ```", "```py\n            from pptx import Presentation \n            from pptx.enum.shapes import MSO_SHAPE \n            from pptx.util import Inches \n            from pptx.dml.color import RGBColor \n\n            prs = Presentation() \n            title_only_slide_layout = prs.slide_layouts[5] \n            slide = prs.slides.add_slide(title_only_slide_layout) \n            shapes = slide.shapes \n            shapes.title.text = 'Adding Shapes' \n\n            shape1 = shapes.add_shape(MSO_SHAPE.RECTANGULAR_CALLOUT,\n            Inches(3.5), Inches(2), Inches(2), Inches(2)) \n            shape1.fill.solid() \n            shape1.fill.fore_color.rgb = RGBColor(0x1E, 0x90, 0xFF) \n            shape1.fill.fore_color.brightness = 0.4 \n\n            shape1.text = 'See! There is home!' \n\n            shape2 = shapes.add_shape(MSO_SHAPE.ACTION_BUTTON_HOME,\n            Inches(3.5), Inches(5), Inches(2), Inches(2)) \n            shape2.text = 'Home' \n\n            prs.save('shapes.pptx') \n\n    ```", "```py\n            from pptx import Presentation \n            from pptx.util import Inches \n\n            prs = Presentation() \n            title_only_slide_layout = prs.slide_layouts[5] \n            slide = prs.slides.add_slide(title_only_slide_layout) \n            shapes = slide.shapes \n            shapes.title.text = 'Students Data' \n\n            rows = 4; cols = 3 \n            left = top = Inches(2.0) \n            width = Inches(6.0) \n            height = Inches(1.2) \n\n            table = shapes.add_table(rows, cols, left, top,\n                                     width, height).table \n            table.columns[0].width = Inches(2.0) \n            table.columns[1].width = Inches(2.0) \n            table.columns[2].width = Inches(2.0) \n\n            table.cell(0, 0).text = 'Sr. No.' \n            table.cell(0, 1).text = 'Student Name' \n            table.cell(0, 2).text = 'Student Id' \n\n            students = { \n                1: [\"John\", 115], \n                2: [\"Mary\", 119], \n                3: [\"Alice\", 101] \n            } \n\n            for i in range(len(students)): \n                table.cell(i+1, 0).text = str(i+1) \n                table.cell(i+1, 1).text = str(students[i+1][0]) \n                table.cell(i+1, 2).text = str(students[i+1][1]) \n\n            prs.save('table.pptx')\n    ```", "```py\n            from pptx import Presentation \n            from pptx.util import Inches \n\n            img_path = 'python.png' \n            img_path2 = 'learn_python.jpeg' \n            prs = Presentation() \n            blank_slide_layout = prs.slide_layouts[6] \n            slide = prs.slides.add_slide(blank_slide_layout) \n\n            left = top = Inches(2) \n            pic = slide.shapes.add_picture(img_path, left,\n                  top, height=Inches(2), width=Inches(3)) \n\n            left = Inches(2) \n            top = Inches(5) \n            height = Inches(2) \n            pic = slide.shapes.add_picture(img_path2, left,\n                                           top, height=height) \n\n            prs.save('picture.pptx') \n\n    ```", "```py\n            from pptx import Presentation \n            from pptx.chart.data import ChartData \n            from pptx.enum.chart import XL_CHART_TYPE \n            from pptx.enum.chart import XL_LABEL_POSITION,\n                                        XL_LEGEND_POSITION \n            from pptx.util import Inches \n\n            prs = Presentation() \n            slide = prs.slides.add_slide(prs.slide_layouts[5]) \n            slide.shapes.title.text = 'Data based on regions' \n\n            chart_data = ChartData() \n            chart_data.categories = ['West', 'East', \n                                     'North', 'South'] \n            chart_data.add_series('Series 1', (0.35, \n                                     0.25, 0.25, 0.15)) \n\n            x, y, cx, cy = Inches(2), Inches(2), Inches(6),\n                           Inches(4.5) \n            chart = slide.shapes.add_chart( \n                XL_CHART_TYPE.PIE, x, y, cx, cy, chart_data \n            ).chart \n\n            chart.has_legend = True \n            chart.legend.position = XL_LEGEND_POSITION.BOTTOM \n            chart.legend.include_in_layout = False \n\n            chart.plots[0].has_data_labels = True \n            data_labels = chart.plots[0].data_labels \n            data_labels.number_format = '0%' \n            data_labels.position = XL_LABEL_POSITION.OUTSIDE_END \n\n            prs.save('chart.pptx') \n\n    ```", "```py\npip install pandas\n\n```", "```py\n            from pptx import Presentation \n            from pptx.chart.data import ChartData \n            from pptx.enum.chart import XL_CHART_TYPE \n            from pptx.enum.chart import XL_LABEL_POSITION, \n                                        XL_LEGEND_POSITION \n            from pptx.util import Inches \n            from datetime import datetime \n            import pandas as pd \n\n            xls_file = pd.ExcelFile('Sales_Data.xlsx') \n\n            prs = Presentation('sample_ppt.pptx') \n\n            first_slide = prs.slides[0] \n            first_slide.shapes[0].text_frame.paragraphs[0]\n                       .text = \"Weekly Sales Report %s\" \\ \n                            % datetime.now().strftime('%D') \n           first_slide.placeholders[1].text = \n                              \"Author: Alex, alex@innova8\" \n           blank_slide_layout = prs.slide_layouts[6] \n           slide = prs.slides.add_slide(blank_slide_layout) \n           slide.shapes.title.text = '% Revenue for Accounts' \n           df = xls_file.parse('Sales') \n           df['total'] = df['Items'] * df['UnitPrice'] \n           plot = df.groupby('Account')['total']\n                    .sum().plot(kind='pie', \\ \n                    autopct='%.2f', fontsize=20) \n           f=plot.get_figure() \n           f.savefig(\"result.png\", bbox_inches='tight',\n                                                dpi=400) \n           left = Inches(2.5);  top = Inches(3) \n           pic = slide.shapes.add_picture(\"result.png\", left, top,\n           height=Inches(4), width=Inches(5)) \n\n           slide = prs.slides.add_slide(prs.slide_layouts[6]) \n           slide.shapes.title.text = 'Sales Manager Performance' \n           df = xls_file.parse('Sales') \n           df['total'] = df['Items'] * df['UnitPrice'] \n           mgr_data = df.groupby(['Manager'])['total'].sum() \n           managers = mgr_data.index.values.tolist() \n           sales = [] \n           for mgr in managers:  \n               sales.append(mgr_data.loc[mgr])  \n\n           chart_data = ChartData() \n           chart_data.categories = managers \n           chart_data.add_series('Series 1', tuple(sales)) \n           x, y, cx, cy = Inches(2), Inches(3), Inches(6),\n                          Inches(4) \n           chart = slide.shapes.add_chart( \n           XL_CHART_TYPE.COLUMN_CLUSTERED, x, y, cx, cy, \n                                              chart_data \n           ).chart \n\n           chart.has_legend = True \n           chart.legend.position = XL_LEGEND_POSITION.BOTTOM \n           chart.legend.include_in_layout = False \n\n           prs.save('sales.pptx') \n\n    ```"]