["```py\n...\nfunction Post(props) {\n const { post, refresh, isSinglePost } = props;\n...\n return (\nÂ Â Â <>\nÂ Â Â Â ...\nÂ Â Â Â Â Â Â Â Â Â Â Â {!isSinglePost && (\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <p className=\"ms-1 fs-6\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Link>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {post.comments_count} comments\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Link>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â </small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </p>\nÂ Â Â Â Â Â Â Â Â Â Â )}\nÂ Â Â ...\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {!isSinglePost && (\nÂ Â Â Â Â Â Â Â Â Â Â <div className=\"d-flex flex-row\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <CommentOutlined\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â style={{\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â width: \"24px\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â height: \"24px\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â padding: \"2px\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â fontSize: \"20px\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â color: \"#C4C4C4\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â }}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <p className=\"ms-1 mb-0\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <small>Comment</small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </p>\nÂ Â Â Â Â Â Â Â Â Â Â </div>\nÂ Â Â Â Â Â Â Â Â )}\n...\n```", "```py\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { useNavigate } from \"react-router-dom\";\nfunction Layout(props) {\n const { hasNavigationBack } = props;\n const navigate = useNavigate();\n...\nÂ Â return (\nÂ Â Â Â Â <div>\nÂ Â Â Â Â Â Â <Navigationbar />\nÂ Â Â Â Â Â Â {hasNavigationBack && (\nÂ Â Â Â Â Â Â Â Â <ArrowLeftOutlined\nÂ Â Â Â Â Â Â Â Â Â Â style={{\nÂ Â Â Â Â Â Â Â Â Â Â Â Â color: \"#0D6EFD\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â fontSize: \"24px\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â marginLeft: \"5%\",\nÂ Â Â Â Â Â Â Â Â Â Â Â Â marginTop: \"1%\",\nÂ Â Â Â Â Â Â Â Â Â Â }}\nÂ Â Â Â Â Â Â Â Â Â Â onClick={() => navigate(-1)}\nÂ Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â )}\nÂ Â Â Â Â Â Â <div className=\"container my-2\">\nÂ Â Â Â Â Â Â Â Â Â Â {props.children}\nÂ Â Â Â Â Â Â </div>\n...\n```", "```py\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Row, Col } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\nimport { fetcher } from \"../helpers/axios\";\nimport { Post } from \"../components/posts\";\nimport CreateComment from \"../components/comments/CreateComment\";\nimport Comment from \"../components/comments/Comment\";\nfunction SinglePost() {\n let { postId } = useParams();\n const post = useSWR(`/post/${postId}/`, fetcher);\n const comments = useSWR(`/post/${postId}/comment/`, fetcher);\n return (\nÂ Â Â <Layout hasNavigationBack>\nÂ Â Â Â Â {post.data ? (\nÂ Â Â Â Â Â Â <Row className=\"justify-content-center\">\nÂ Â Â Â Â Â Â Â Â <Col sm={8}>\nÂ Â Â Â Â Â Â Â Â Â Â <Post post={post.data} refresh={post.mutate}              isSinglePost />\nÂ Â Â Â Â Â Â Â Â Â Â // Adding CreateComment form and list all comments               here\nÂ Â Â Â Â Â Â Â Â </Col>\nÂ Â Â Â Â Â Â </Row>\nÂ Â Â Â Â ) : (\nÂ Â Â Â Â Â Â <div>Loading...</div>\nÂ Â Â Â Â )}\nÂ Â Â </Layout>\n );\n}\nexport default SinglePost;\n```", "```py\n...\nfunction App() {\n return (\nÂ Â Â <Routes>\nÂ Â Â Â Â <Route\nÂ Â Â Â Â Â Â path=\"/\"\nÂ Â Â Â Â Â Â element={\nÂ Â Â Â Â Â Â Â Â <ProtectedRoute>\nÂ Â Â Â Â Â Â Â Â Â Â <Home />\nÂ Â Â Â Â Â Â Â Â </ProtectedRoute>\nÂ Â Â Â Â Â Â }\nÂ Â Â Â Â />\nÂ Â Â Â Â <Route\nÂ Â Â Â Â Â Â path=\"/post/:postId/\"\nÂ Â Â Â Â Â Â element={\nÂ Â Â Â Â Â Â Â Â <ProtectedRoute>\nÂ Â Â Â Â Â Â Â Â Â Â <SinglePost />\nÂ Â Â Â Â Â Â Â Â </ProtectedRoute>\nÂ Â Â Â Â Â Â }\nÂ Â Â Â Â />\n...\n```", "```py\nreturn (\nÂ Â Â <>\nÂ Â Â Â ...\nÂ Â Â Â Â Â Â Â Â Â Â Â {!isSinglePost && (\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <p className=\"ms-1 fs-6\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Link to={`/post/${post.id}/`}>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â {post.comments_count} comments\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Link>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â </small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </p>\nÂ Â Â Â Â Â Â Â Â Â Â )}\nÂ Â Â Â ...\n```", "```py\n...\nfunction SinglePost() {\n console.log(useParams())\n let { postId } = useParams();\n...\n```", "```py\nimport React, { useState, useContext } from \"react\";\nimport { Button, Form, Image } from \"react-bootstrap\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../../hooks/user.actions\";\nimport { randomAvatar } from \"../../utils\";\nimport { Context } from \"../Layout\";\nfunction CreateComment(props) {\n const { postId, refresh } = props;\n return (\nÂ Â Â <Form>\nÂ Â Â </Form>\n );\n}\nexport default CreateComment;\n```", "```py\n...\nfunction CreateComment(props) {\n const { postId, refresh } = props;\n const [avatar, setAvatar] = useState(randomAvatar());\n const [validated, setValidated] = useState(false);\n const [form, setForm] = useState({});\n const { toaster, setToaster } = useContext(Context);\n const user = getUser();\n const handleSubmit = (event) => {\nÂ Â Â // Logic to handle form submission\n };\n...\n```", "```py\n...\nreturn (\nÂ Â Â <Form\nÂ Â Â Â Â className=\"d-flex flex-row justify-content-between\"\nÂ Â Â Â Â noValidate\nÂ Â Â Â Â validated={validated}\nÂ Â Â Â Â onSubmit={handleSubmit}\nÂ Â Â >\nÂ Â Â Â Â <Image\nÂ Â Â Â Â Â Â src={avatar}\nÂ Â Â Â Â Â Â roundedCircle\nÂ Â Â Â Â Â Â width={48}\nÂ Â Â Â Â Â Â height={48}\nÂ Â Â Â Â Â Â className=\"my-2\"\nÂ Â Â Â Â />\nÂ Â Â Â Â <Form.Group className=\"m-3 w-75\">\nÂ Â Â Â Â Â Â <Form.Control\nÂ Â Â Â Â Â Â Â Â className=\"py-2 rounded-pill border-primary\"\nÂ Â Â Â Â Â Â Â Â type=\"text\"\nÂ Â Â Â Â Â Â Â Â placeholder=\"Write a comment\"\nÂ Â Â Â Â Â Â Â Â value={form.body}\nÂ Â Â Â Â Â Â Â Â name=\"body\"\nÂ Â Â Â Â Â Â Â Â onChange={(e) => setForm({ ...form,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â body: e.target.value })}\nÂ Â Â Â Â Â Â />\nÂ Â Â Â Â </Form.Group>\nÂ Â Â Â Â <div className=\"m-auto\">\nÂ Â Â Â Â Â Â <Button\nÂ Â Â Â Â Â Â Â Â variant=\"primary\"\nÂ Â Â Â Â Â Â Â Â onClick={handleSubmit}\nÂ Â Â Â Â Â Â Â Â disabled={form.body === undefined}\nÂ Â Â Â Â Â Â Â Â size=\"small\"\nÂ Â Â Â Â Â Â >\nÂ Â Â Â Â Â Â Â Â Comment\nÂ Â Â Â Â Â Â </Button>\nÂ Â Â Â Â </div>\nÂ Â Â </Form>\n );\n...\n```", "```py\n...\n const handleSubmit = (event) => {\nÂ Â Â event.preventDefault();\nÂ Â Â const createCommentForm = event.currentTarget;\nÂ Â Â if (createCommentForm.checkValidity() === false) {\nÂ Â Â Â Â event.stopPropagation();\nÂ Â Â }\nÂ Â Â setValidated(true);\nÂ Â Â const data = {\nÂ Â Â Â Â author: user.id,\nÂ Â Â Â Â body: form.body,\nÂ Â Â Â Â post: postId,\nÂ Â Â };\nÂ Â Â axiosService\nÂ Â Â Â Â .post(`/post/${postId}/comment/`, data)\nÂ Â Â Â Â .then(() => {\nÂ Â Â Â Â Â Â setForm({ ...form, body: \"\" });\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"success\",\nÂ Â Â Â Â Â Â Â Â message: \"Comment posted successfullyðŸš€\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"Comment!\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â Â Â refresh();\nÂ Â Â Â Â })\nÂ Â Â Â Â .catch(() => {\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"danger\",\nÂ Â Â Â Â Â Â Â Â message: \"\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"An error occurred.!\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â });\n };\n...\n```", "```py\n...\n return (\nÂ Â Â <Layout hasNavigationBack>\nÂ Â Â Â Â {post.data ? (\nÂ Â Â Â Â Â Â <Row className=\"justify-content-center\">\nÂ Â Â Â Â Â Â Â Â <Col sm={8}>\nÂ Â Â Â Â Â Â Â Â Â Â <Post post={post.data} refresh={post.mutate}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â isSinglePost />\nÂ Â Â Â Â Â Â Â Â Â Â <CreateComment postId={post.data.id}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â refresh={comments.mutate} />\nÂ Â Â Â Â Â Â Â Â </Col>\nÂ Â Â Â Â Â Â </Row>\nÂ Â Â Â Â ) : (\nÂ Â Â Â Â Â Â <div>Loading...</div>\nÂ Â Â Â Â )}\nÂ Â Â </Layout>\n );\n...\n```", "```py\nimport React, { useState, useContext } from \"react\";\nimport { format } from \"timeago.js\";\nimport { Image, Card, Dropdown } from \"react-bootstrap\";\nimport { randomAvatar } from \"../../utils\";\nimport axiosService from \"../../helpers/axios\";\nimport { getUser } from \"../../hooks/user.actions\";\nimport UpdateComment from \"./UpdateComment\";\nimport { Context } from \"../Layout\";\nimport MoreToggleIcon from \"../MoreToggleIcon\";\nfunction Comment(props) {\n const { postId, comment, refresh } = props;\n const { toaster, setToaster } = useContext(Context);\n const user = getUser();\n const handleDelete = () => {\nÂ Â Â Â // Handle the deletion of a comment\n };\n return (\nÂ Â Â <Card className=\"rounded-3 my-2\">\nÂ Â Â Â // Code for the comment card\nÂ Â Â </Card>\n );\n}\nexport default Comment;\n```", "```py\n...\n return (\nÂ Â Â <Card className=\"rounded-3 my-2\">\nÂ Â Â Â Â <Card.Body>\nÂ Â Â Â Â Â Â <Card.Title className=\"d-flex flex-row\nÂ Â Â Â Â Â Â Â Â justify-content-between\">\nÂ Â Â Â Â Â Â Â Â <div className=\"d-flex flex-row\">\nÂ Â Â Â Â Â Â Â Â Â Â <Image\nÂ Â Â Â Â Â Â Â Â Â Â Â Â src={randomAvatar()}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â roundedCircle\nÂ Â Â Â Â Â Â Â Â Â Â Â Â width={48}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â height={48}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â className=\"me-2 border border-primary\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â border-2\"\nÂ Â Â Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â Â Â Â Â <div className=\"d-flex flex-column\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â justify-content-start\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â align-self-center mt-2\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <p className=\"fs-6 m-0\">{comment.author.name}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </p>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <p className=\"fs-6 fw-lighter\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <small>{format(comment.created)}</small>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </p>\nÂ Â Â Â Â Â Â Â Â Â Â </div>\nÂ Â Â Â Â Â Â Â Â </div>\nÂ Â Â Â Â Â Â Â Â {user.name === comment.author.name && (\nÂ Â Â Â Â Â Â Â Â Â Â <div>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Toggle\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â as={MoreToggleIcon}></Dropdown.Toggle>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Menu>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Item>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Modify\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Item>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Item onClick={handleDelete}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â className=\"text-danger\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Delete\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Item>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Menu>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown>\nÂ Â Â Â Â Â Â Â Â Â Â </div>\nÂ Â Â Â Â Â Â Â Â )}\nÂ Â Â Â Â Â Â </Card.Title>\nÂ Â Â Â Â Â Â <Card.Text>{comment.body}</Card.Text>\nÂ Â Â Â Â </Card.Body>\nÂ Â Â </Card>\n );\n...\n```", "```py\n...\n const handleDelete = () => {\nÂ Â Â axiosService\nÂ Â Â Â Â .delete(`/post/${postId}/comment/${comment.id}/`)\nÂ Â Â Â Â .then(() => {\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"danger\",\nÂ Â Â Â Â Â Â Â Â message: \"Comment deleted ðŸš€\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"Comment Deleted\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â Â Â refresh();\nÂ Â Â Â Â })\nÂ Â Â Â Â .catch((err) => {\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"warning\",\nÂ Â Â Â Â Â Â Â Â message: \"Comment deleted ðŸš€\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"Comment Deleted\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â });\n };\n...\n```", "```py\nimport React, { useState, useContext } from \"react\";\nimport { Button, Modal, Form, Dropdown } from \"react-bootstrap\";\nimport axiosService from \"../../helpers/axios\";\nimport { Context } from \"../Layout\";\nfunction UpdateComment(props) {\n const { postId, comment, refresh } = props;\n const [show, setShow] = useState(false);\n const [validated, setValidated] = useState(false);\n const [form, setForm] = useState({\nÂ Â Â author: comment.author.id,\nÂ Â Â body: comment.body,\nÂ Â Â post: postId\n });\n const { toaster, setToaster } = useContext(Context);\n const handleSubmit = (event) => {\nÂ Â Â // handle the modification of a comment\n };\n return (\nÂ Â Â <>\nÂ Â Â Â Â <Dropdown.Item\nÂ Â Â Â Â Â Â onClick={handleShow}>Modify</Dropdown.Item>\nÂ Â Â Â Â // Adding the Modal here\nÂ Â Â </>\n );\n}\nexport default UpdateComment;\n```", "```py\nâ€¦\n return (\nÂ Â Â <>\nÂ Â Â Â Â <Dropdown.Item onClick={handleShow}>Modify\nÂ Â Â Â Â </Dropdown.Item>\nÂ Â Â Â Â <Modal show={show} onHide={handleClose}>\nÂ Â Â Â Â Â Â <Modal.Header closeButton className=\"border-0\">\nÂ Â Â Â Â Â Â Â Â <Modal.Title>Update Post</Modal.Title>\nÂ Â Â Â Â Â Â </Modal.Header>\nÂ Â Â Â Â Â Â <Modal.Body className=\"border-0\">\nÂ Â Â Â Â Â Â Â Â <Form noValidate validated={validated}\nÂ Â Â Â Â Â Â Â Â Â Â onSubmit={handleSubmit}>\nÂ Â Â Â Â Â Â Â Â Â Â <Form.Group className=\"mb-3\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <Form.Control\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â name=\"body\"\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â value={form.body}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â onChange={(e) => setForm({ ...form,\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â body: e.target.value })}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â as=\"textarea\"\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â rows={3}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â Â Â Â Â </Form.Group>\nÂ Â Â Â Â Â Â Â Â </Form>\nÂ Â Â Â Â Â Â </Modal.Body>\nÂ Â Â Â Â Â Â <Modal.Footer>\nÂ Â Â Â Â Â Â Â Â <Button variant=\"primary\" onClick={handleSubmit}>\nÂ Â Â Â Â Â Â Â Â Â Â Modify\nÂ Â Â Â Â Â Â Â Â </Button>\nÂ Â Â Â Â Â Â </Modal.Footer>\nÂ Â Â Â Â </Modal>\nÂ Â Â </>\n );\nâ€¦\n```", "```py\nâ€¦\n const handleSubmit = (event) => {\nÂ Â Â event.preventDefault();\nÂ Â Â const updateCommentForm = event.currentTarget;\nÂ Â Â if (updateCommentForm.checkValidity() === false) {\nÂ Â Â Â Â event.stopPropagation();\nÂ Â Â }\nÂ Â Â setValidated(true);\nÂ Â Â const data = {\nÂ Â Â Â Â author: form.author,\nÂ Â Â Â Â body: form.body,\nÂ Â Â Â Â post: postId\nÂ Â Â };\nÂ Â Â axiosService\nÂ Â Â Â Â .put(`/post/${postId}/comment/${comment.id}/`, data)\nÂ Â Â Â Â .then(() => {\nÂ Â Â Â Â Â Â handleClose();\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"success\",\nÂ Â Â Â Â Â Â Â Â message: \"Comment updated ðŸš€\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"Success!\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â Â Â refresh();\nÂ Â Â Â Â })\nÂ Â Â Â Â .catch((error) => {\nÂ Â Â Â Â Â Â setToaster({\nÂ Â Â Â Â Â Â Â Â type: \"danger\",\nÂ Â Â Â Â Â Â Â Â message: \"An error occurred.\",\nÂ Â Â Â Â Â Â Â Â show: true,\nÂ Â Â Â Â Â Â Â Â title: \"Comment Error\",\nÂ Â Â Â Â Â Â });\nÂ Â Â Â Â });\n };\n...\n```", "```py\nâ€¦\nÂ Â Â Â Â Â Â Â Â {user.name === comment.author.name && (\nÂ Â Â Â Â Â Â Â Â Â Â <div>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Toggle as={MoreToggleIcon}>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Toggle>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Menu>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <UpdateComment\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â comment={comment}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â refresh={refresh}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â postId={postId}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â />\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â <Dropdown.Item onClick={handleDelete}\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â className=\"text-danger\">\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Delete\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Item>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown.Menu>\nÂ Â Â Â Â Â Â Â Â Â Â Â Â </Dropdown>\nÂ Â Â Â Â Â Â Â Â Â Â </div>\nÂ Â Â Â Â Â Â Â Â )}\nÂ Â Â Â Â Â Â </Card.Title>\nÂ Â Â Â Â Â Â <Card.Text>{comment.body}</Card.Text>\nÂ Â Â Â Â </Card.Body>\nÂ Â Â </Card>\nâ€¦\n```"]