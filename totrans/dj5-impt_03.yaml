- en: <st c="0">3</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">3</st>
- en: <st c="2">Designing a Base Template</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="2">设计基本模板</st>
- en: <st c="27">Django projects can consist of dozens or hundreds of template files.</st>
    <st c="97">Sometimes, these files can contain duplicated HTML and CSS code, which
    affects the project’s maintainability.</st> <st c="207">In this chapter, we introduce
    the concept of</st> **<st c="252">base templates</st>** <st c="266">and how they
    can be used to reduce duplicated template code.</st> <st c="328">We will also
    improve the look and feel of our application by designing a base template that
    includes a header and a footer, as well as links to</st> <st c="472">different
    pages.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="27">Django 项目可以包含数十或数百个模板文件。</st> <st c="97">有时，这些文件可能包含重复的 HTML 和 CSS
    代码，这会影响项目的可维护性。</st> <st c="207">在本章中，我们介绍了</st> **<st c="252">基本模板</st>** <st
    c="266">的概念以及如何使用它们来减少重复的模板代码。</st> <st c="328">我们还将通过设计一个包含页眉和页脚以及指向不同页面的链接的基本模板来改进我们应用程序的外观和感觉。</st>
- en: <st c="488">In this chapter, we will be covering the</st> <st c="530">following
    topics:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="488">在本章中，我们将涵盖以下主题：</st> <st c="530">以下主题：</st>
- en: <st c="547">Creating a base template</st> <st c="573">with Bootstrap</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="547">使用 Bootstrap 创建</st> <st c="573">基本模板</st>
- en: <st c="587">Updating the</st> **<st c="601">Home</st>** <st c="605">page to
    use the</st> <st c="622">base template</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="587">更新</st> **<st c="601">主页</st>** <st c="605">以使用</st> <st c="622">基本模板</st>
- en: <st c="635">Updating the</st> **<st c="649">About</st>** <st c="654">page to
    use the</st> <st c="671">base template</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="635">更新</st> **<st c="649">关于</st>** <st c="654">页面以使用</st> <st c="671">基本模板</st>
- en: <st c="684">Adding a</st> <st c="694">header section</st>
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="684">添加一个</st> <st c="694">页眉部分</st>
- en: <st c="708">Adding a</st> <st c="718">footer section</st>
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="708">添加一个</st> <st c="718">页脚部分</st>
- en: <st c="732">In the end, you will learn the importance of base templates and
    how they can be used to reduce duplicated code and improve the look and feel of
    your</st> <st c="882">web applications.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="732">最终，你将了解基本模板的重要性以及如何使用它们来减少重复代码并改善你</st> <st c="882">Web 应用程序的外观和感觉。</st>
- en: <st c="899">Technical requirements</st>
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="899">技术要求</st>
- en: <st c="922">In this chapter, we will be using</st> **<st c="957">Python 3.10+</st>**<st
    c="969">. Additionally, we will be using the</st> **<st c="1006">VS Code</st>**
    <st c="1013">editor in this book, which you can download</st> <st c="1058">from</st>
    <st c="1063">https://code.visualstudio.com/</st><st c="1093">.</st>
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="922">在本章中，我们将使用</st> **<st c="957">Python 3.10+</st>**<st c="969">。此外，我们将在本书中使用</st>
    **<st c="1006">VS Code</st>** <st c="1013">编辑器，您可以从</st> <st c="1058">以下位置下载</st>
    <st c="1063">https://code.visualstudio.com/</st><st c="1093">。</st>
- en: <st c="1094">The code for this chapter is located</st> <st c="1132">at</st>
    <st c="1135">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter03/moviesstore</st><st
    c="1243">.</st>
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1094">本章的代码位于</st> <st c="1132">于</st> <st c="1135">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter03/moviesstore</st><st
    c="1243">。</st>
- en: <st c="1244">The CiA video for this chapter can be found</st> <st c="1289">at</st>
    [<st c="1292">https://packt.link/psU29</st>](https://packt.link/psU29)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1244">本章的 CiA 视频可以在</st> <st c="1289">以下位置找到</st> [<st c="1292">https://packt.link/psU29</st>](https://packt.link/psU29)
- en: <st c="1316">Creating a base template with Bootstrap</st>
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1316">使用 Bootstrap 创建基本模板</st>
- en: <st c="1356">We currently</st> <st c="1370">have two templates (</st>`<st c="1390">index.html</st>`
    <st c="1401">and</st> `<st c="1406">about.html</st>`<st c="1416">) that duplicate
    the structure of the site and some HTML tags.</st> <st c="1480">Currently, it
    doesn’t seem like a serious issue.</st> <st c="1529">However, once the application
    starts growing, we will have a lot of duplicated HTML code</st> <st c="1618">spread
    over dozens of template files.</st> <st c="1656">To avoid this issue, we will
    create a base template that contains the main structure of the site over a single
    file, and the other templates will extend this</st> <st c="1814">base template.</st>
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1356">我们目前</st> <st c="1370">有两个模板（</st>`<st c="1390">index.html</st>`
    <st c="1401">和</st> `<st c="1406">about.html</st>`<st c="1416">）重复了网站的结构和一些 HTML
    标签。</st> <st c="1480">目前，这似乎不是一个严重的问题。</st> <st c="1529">然而，一旦应用程序开始增长，我们将有大量的重复
    HTML 代码</st> <st c="1618">散布在数十个模板文件中。</st> <st c="1656">为了避免这个问题，我们将创建一个包含网站主要结构的单个文件的基本模板，其他模板将扩展这个</st>
    <st c="1814">基本模板。</st>
- en: <st c="1828">Introducing Bootstrap</st>
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="1828">介绍 Bootstrap</st>
- en: '**<st c="1850">Bootstrap</st>** <st c="1860">is the most popular CSS framework
    for developing responsive and mobile-first websites (see</st> *<st c="1952">Figure
    3</st>**<st c="1960">.1</st>*<st c="1962">).</st> <st c="1966">Bootstrap</st>
    <st c="1976">provides a set of HTML, CSS, and JavaScript components and utilities
    that developers can use to build modern user interfaces quickly.</st> <st c="2110">For
    Django projects, a developer can design the user interface from scratch if they
    want to.</st> <st c="2203">However, as this book is not about user interfaces,
    we will take advantage of CSS frameworks (such as Bootstrap) and use some of their
    elements and examples to create something that looks professional.</st> <st c="2405">You
    can find out more about Bootstrap</st> <st c="2443">at</st> [<st c="2446">https://getbootstrap.com/</st>](https://getbootstrap.com/)<st
    c="2471">.</st>'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="1850">Bootstrap</st>** 是开发响应式和移动优先网站最流行的CSS框架（见**<st c="1952">图3.1</st>**）。<st
    c="1966">Bootstrap</st> 提供了一套HTML、CSS和JavaScript组件和实用工具，开发者可以使用它们快速构建现代用户界面。</st>
    <st c="2110">对于Django项目，如果开发者愿意，可以从头开始设计用户界面。</st> <st c="2203">然而，由于本书不是关于用户界面的，我们将利用CSS框架（如Bootstrap）并使用其中的一些元素和示例来创建看起来专业的产品。</st>
    <st c="2405">您可以在[<st c="2446">https://getbootstrap.com/</st>](https://getbootstrap.com/)了解更多关于Bootstrap的信息。</st>
    <st c="2471">.</st>'
- en: '![Figure 3.1 – The Bootstrap site](img/B22457_03_01.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1 – Bootstrap网站](img/B22457_03_01.jpg)'
- en: <st c="2773">Figure 3.1 – The Bootstrap site</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – Bootstrap网站
- en: <st c="2804">Introducing Django template language (DTL)</st>
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍Django模板语言（DTL）
- en: <st c="2847">We will build the base template as a combination of Bootstrap,
    HTML, CSS, JavaScript,</st> <st c="2934">and</st> **<st c="2938">DTL</st>**<st
    c="2941">.</st>
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建基础模板，作为Bootstrap、HTML、CSS、JavaScript和**<st c="2938">DTL</st>**的组合。
- en: <st c="2942">DTL is a templating language used within the</st> <st c="2987">Django
    web framework for building dynamic web pages (</st>[<st c="3041">https://docs.djangoproject.com/en/5.0/topics/templates/</st>](https://docs.djangoproject.com/en/5.0/topics/templates/)<st
    c="3097">).</st> <st c="3101">It is designed to separate the presentation layer
    from the business logic of an application, promoting clean and</st> <st c="3214">maintainable
    code.</st>
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: DTL是Django Web框架中用于构建动态网页的模板语言（[<st c="3041">https://docs.djangoproject.com/en/5.0/topics/templates/</st>](https://docs.djangoproject.com/en/5.0/topics/templates/)）。<st
    c="3101">它旨在将表示层与应用程序的业务逻辑分离，促进编写干净和可维护的代码。</st>
- en: <st c="3232">Some Django template language key features</st> <st c="3275">include</st>
    <st c="3284">the following:</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Django模板语言的关键特性包括以下内容：
- en: '`<st c="3417">{{</st>` `<st c="3420">variable }}</st>`<st c="3431">.</st>'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="3417">{{</st>` `<st c="3420">变量</st>`<st c="3431">.</st>'
- en: '`<st c="3538">{% %}</st>`<st c="3543">. Template tags allow for loops, conditionals,
    and other control flow statements.</st> <st c="3625">For example,</st> `<st c="3638">{%
    if condition %} ...</st> <st c="3661">{%</st>` `<st c="3664">endif %}</st>`<st
    c="3672">.</st>'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="3538">{% %}</st>`<st c="3543">. 模板标签允许循环、条件和其他控制流语句。</st> <st c="3625">例如，</st>
    `<st c="3638">{% if condition %} ...</st>` <st c="3661">{%</st>` `<st c="3664">endif
    %}</st>`<st c="3672">.</st>'
- en: '`<st c="3721">{# #}</st>` <st c="3726">and are not rendered in the final</st>
    <st c="3761">output HTML.</st>'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="3721">{# #}</st>` <st c="3726">在最终的输出HTML中不会被渲染。</st>'
- en: '**<st c="3773">Template inheritance</st>**<st c="3794">: Django templates support
    inheritance, allowing for the creation of base templates that define the overall
    structure and layout of a page, with child templates inheriting and overriding
    specific blocks</st> <st c="3998">or sections.</st>'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3773">模板继承</st>**：Django模板支持继承，允许创建定义页面整体结构和布局的基础模板，子模板继承并覆盖特定的块或部分。'
- en: <st c="4010">Creating a base template</st>
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建基础模板
- en: <st c="4035">The base template will serve as a “global” template (which will
    be used across all pages and apps).</st> <st c="4136">So, we will add it to our
    main</st> <st c="4166">project folder.</st> <st c="4183">In the</st> `<st c="4190">moviesstore/</st>`
    <st c="4202">folder (the directory that contains the</st> `<st c="4243">settings.py</st>`
    <st c="4254">file), create a folder</st> <st c="4277">called</st> `<st c="4285">templates</st>`<st
    c="4294">. In that folder, create a file called</st> `<st c="4333">base.html</st>`<st
    c="4342">. For now, fill it in with</st> <st c="4369">the following:</st>
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="5160">The previous file contains a base HTML structure for our site.</st>
    <st c="5224">Let’s review some important aspects of the</st> <st c="5267">previous
    code:</st>
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5281">The</st> `<st c="5286">head</st>` <st c="5290">tag contains the</st>
    `<st c="5308">title</st>` <st c="5313">tag, which uses DTL double curly braces
    to display the information of a variable (</st>`<st c="5396">{{ template_data.title
    }}</st>`<st c="5422">).</st> <st c="5426">Later, we will see how</st> <st c="5449">to
    pass that variable from views to this template.</st> <st c="5500">It also contains
    some links and a script to include Bootstrap and some fonts for our site.</st>
    <st c="5591">We take some of those links from this</st> <st c="5629">site:</st>
    <st c="5635">https://getbootstrap.com/docs/5.3/getting-started/introduction/#cdn-links</st><st
    c="5708">.</st>
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="5709">The</st> `<st c="5714">body</st>` <st c="5718">tag contains an
    HTML comment indicating the location of the header (we will later include the
    header in that position) and</st> `<st c="5842">div</st>`<st c="5845">, which
    includes a couple of DTL template tags.</st> `<st c="5893">{% block %}</st>` <st
    c="5904">and</st> `<st c="5909">{% endblock %}</st>` <st c="5923">are template
    tags used for template inheritance.</st> <st c="5973">This is a template tag that
    defines a block named</st> `<st c="6023">content</st>`<st c="6030">. Blocks are
    placeholders in the template that can be overridden by child templates.</st> <st
    c="6115">The content within this block will be replaced by the content defined
    in a child template that extends this template (we will see it later in action).</st>
    <st c="6266">It also contains an HTML comment indicating the location of the footer
    (we will later include the footer in</st> <st c="6374">that position).</st>
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="6389">Registering the base template</st>
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="6419">Finally, we need to</st> <st c="6439">register the</st> `<st c="6453">moviesstore/templates</st>`
    <st c="6474">folder in our application settings.</st> <st c="6511">We need to
    import the</st> `<st c="6533">os</st>` <st c="6535">module and include the new
    template path in our</st> `<st c="6584">/moviesstore/settings.py</st>` <st c="6608">file.</st>
    <st c="6615">In</st> `<st c="6618">/moviesstore/settings.py</st>`<st c="6642">,
    add the following</st> <st c="6662">in bold:</st>
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: <st c="6902">Now that we have defined our base template structure, let’s update
    the</st> **<st c="6974">Home</st>** <st c="6978">and</st> **<st c="6983">About</st>**
    <st c="6988">pages to extend</st> <st c="7005">this template.</st>
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6902">现在我们已经定义了基本模板的结构，让我们更新</st> **<st c="6974">主页</st>** <st c="6978">和</st>
    **<st c="6983">关于</st>** <st c="6988">页面以扩展</st> <st c="7005">此模板。</st>
- en: <st c="7019">Updating the home page to use the base template</st>
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="7019">更新主页以使用基本模板</st>
- en: <st c="7067">The new home page will</st> <st c="7091">extend the base template;
    it will include</st> <st c="7133">a background with an image and it will include
    custom CSS.</st> <st c="7192">Let’s create the new</st> <st c="7213">home page.</st>
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7067">新的主页将</st> <st c="7091">扩展基本模板；它将包含带有图像的背景，并且将包含自定义CSS。</st> <st
    c="7133">让我们创建新的</st> <st c="7213">主页。</st>
- en: <st c="7223">Creating the new index template</st>
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="7223">创建新的索引模板</st>
- en: <st c="7255">In</st> `<st c="7259">/home/templates/home/index.html</st>`<st
    c="7290">, replace the entire template code</st> <st c="7324">with</st> <st c="7330">the
    following:</st>
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7255">在</st> `<st c="7259">/home/templates/home/index.html</st>`<st c="7290">中，将整个模板代码</st>
    <st c="7324">替换为</st> <st c="7330">以下内容：</st>
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="7809">Let’s explain the</st> <st c="7828">previous code:</st>
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7809">让我们解释一下</st> <st c="7828">前面的代码：</st>
- en: <st c="7842">The new</st> `<st c="7851">index.html</st>` <st c="7861">file now
    extends the</st> `<st c="7883">base.html</st>` <st c="7892">template.</st>
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7842">新的</st> `<st c="7851">index.html</st>` <st c="7861">文件现在扩展了</st>
    `<st c="7883">base.html</st>` <st c="7892">模板。</st>
- en: <st c="7902">The code that is inside</st> `<st c="7927">{% block content %}</st>`
    `<st c="7946">{% endblock content %}</st>` <st c="7969">will be injected inside</st>
    `<st c="7994">div</st>` <st c="7997">of the</st> `<st c="8005">base.html</st>`
    <st c="8014">template file.</st> <st c="8030">This code defines a</st> <st c="8050">couple
    of messages and uses some custom CSS classes that will be</st> <st c="8115">defined
    next.</st>
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="7902">内部的代码</st> `<st c="7927">{% block content %}</st>` `<st c="7946">{%
    endblock content %}</st>` <st c="7969">将被注入到</st> `<st c="7994">div</st>` <st
    c="7997">的</st> `<st c="8005">base.html</st>` <st c="8014">模板文件中。</st> <st c="8030">此代码定义了一些消息并使用了一些将在下面定义的自定义CSS类。</st>
- en: <st c="8128">Creating a custom CSS file</st>
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="8128">创建自定义CSS文件</st>
- en: <st c="8155">In the</st> `<st c="8163">moviesstore/</st>` <st c="8175">folder
    (the directory that contains the</st> `<st c="8216">settings.py</st>` <st c="8227">file),
    create a folder called</st> `<st c="8258">static</st>`<st c="8264">. In that folder,
    create a</st> <st c="8291">subfolder called</st> `<st c="8308">css</st>`<st c="8311">.
    Then, in</st> `<st c="8322">moviesstore/static/css/</st>` <st c="8345">create
    a file called</st> `<st c="8367">style.css</st>`<st c="8376">. For now, fill it
    in with</st> <st c="8403">the following:</st>
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8155">在</st> `<st c="8163">moviesstore/</st>` <st c="8175">文件夹（包含</st>
    `<st c="8216">settings.py</st>` <st c="8227">文件的目录），创建一个名为</st> `<st c="8258">static</st>`<st
    c="8264">的文件夹。在该文件夹中，创建一个名为</st> `<st c="8291">css</st>`<st c="8311">的子文件夹。然后，在</st>
    `<st c="8322">moviesstore/static/css/</st>` <st c="8345">创建一个名为</st> `<st c="8367">style.css</st>`<st
    c="8376">的文件。目前，用以下内容填充它：</st>
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="8520">The previous code defines a CSS class called</st> `<st c="8566">bg-index</st>`<st
    c="8574">, which will be used to display an image as a background on the</st>
    <st c="8638">home page.</st>
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8520">前面的代码定义了一个名为</st> `<st c="8566">bg-index</st>`<st c="8574">的CSS类，它将被用于在主页上显示图像作为背景。</st>
- en: <st c="8648">Storing an image</st>
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="8648">存储图像</st>
- en: <st c="8665">Let’s also include the</st> `<st c="8689">background.jpg</st>`
    <st c="8703">image in our project.</st> <st c="8726">In</st> `<st c="8729">moviesstore/static</st>`<st
    c="8747">, create a folder</st> <st c="8765">called</st> `<st c="8772">img</st>`<st
    c="8775">. Then, in</st> `<st c="8786">moviesstore/static/img/</st>`<st c="8809">,
    download and store the</st> `<st c="8834">background.jpg</st>` <st c="8848">image
    from this link:</st> [<st c="8871">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/background.jpg</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/background.jpg)
    <st c="9017">(as shown in</st> *<st c="9031">Figure 3</st>**<st c="9039">.2</st>*<st
    c="9041">).</st>
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8665">让我们也将</st> `<st c="8689">background.jpg</st>` <st c="8703">图像包含到我们的项目中。</st>
    <st c="8726">在</st> `<st c="8729">moviesstore/static</st>`<st c="8747">中，创建一个名为</st>
    <st c="8765">img</st>`<st c="8775">的文件夹。然后，在</st> `<st c="8786">moviesstore/static/img/</st>`<st
    c="8809">中，从以下链接下载并存储</st> `<st c="8834">background.jpg</st>` <st c="8848">图像：</st>
    [<st c="8871">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/background.jpg</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/background.jpg)
    <st c="9017">(如图</st> *<st c="9031">图3</st>**<st c="9039">.2</st>*<st c="9041">所示)。</st>
- en: '![Figure 3.2 – Including a background image under the project structure](img/B22457_03_02.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 3.2 – Including a background image under the project structure](img/B22457_03_02.jpg)'
- en: <st c="9214">Figure 3.2 – Including a background image under the project structure</st>
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9214">图3.2 – 在项目结构下包含背景图像</st>
- en: <st c="9283">Serving the static files</st>
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="9283">服务静态文件</st>
- en: <st c="9308">We have defined a couple</st> <st c="9334">of static files, a CSS
    file, and a JPG file.</st> <st c="9379">To be able to use them or display them
    in our application, we need to register the folder that contains them.</st> <st
    c="9489">Add the following code in</st> `<st c="9538">/</st>``<st c="9539">moviesstore/settings.py</st>`
    <st c="9562">file:</st>
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9308">我们已经定义了一些静态文件，一个CSS文件和一个JPG文件。</st> <st c="9379">为了能够在我们的应用程序中使用或显示它们，我们需要注册包含它们的文件夹。</st>
    <st c="9489">在</st> `<st c="9538">/</st>``<st c="9539">moviesstore/settings.py</st>`
    <st c="9562">文件中添加以下代码：</st>
- en: '[PRE4]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: <st c="9679">Updating the base template to use the custom CSS and load static
    files</st>
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="9679">更新基础模板以使用定制CSS和加载静态文件</st>
- en: <st c="9749">We also need to update the base</st> <st c="9782">template to link
    the custom CSS we previously created, and we need to use a custom DTL tag to load
    the static files.</st> <st c="9899">In</st> `<st c="9902">/moviesstore/templates/base.html</st>`<st
    c="9934">, add the following</st> <st c="9954">in bold:</st>
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="9749">我们还需要更新基础</st> <st c="9782">模板以链接我们之前创建的定制CSS，并且我们需要使用一个定制的DTL标签来加载静态文件。</st>
    <st c="9899">在</st> `<st c="9902">/moviesstore/templates/base.html</st>`<st c="9934">中，添加以下</st>
    <st c="9954">粗体内容：</st>
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: <st c="10209">In the previous code, the</st> `<st c="10236">load static</st>`
    <st c="10247">template tag is used to load the static files in the</st> `<st c="10301">base.html</st>`
    <st c="10310">template.</st> <st c="10321">Once we have used this tag, we can
    use the</st> `<st c="10364">static</st>` <st c="10370">template tag to refer to
    specific static files to be loaded.</st> <st c="10432">It will search for the
    static files based on the</st> `<st c="10481">STATICFILES_DIRS</st>` <st c="10497">folder
    location.</st>
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10209">在前面的代码中，使用了</st> `<st c="10236">load static</st>` <st c="10247">模板标签来在</st>
    `<st c="10301">base.html</st>` <st c="10310">模板中加载静态文件。</st> <st c="10321">一旦我们使用了这个标签，我们就可以使用</st>
    `<st c="10364">static</st>` <st c="10370">模板标签来引用要加载的特定静态文件。</st> <st c="10432">它将根据</st>
    `<st c="10481">STATICFILES_DIRS</st>` <st c="10497">文件夹的位置来搜索静态文件。</st>
- en: <st c="10514">Now, save those files, run the server, and go back to</st> `<st
    c="10569">http://localhost:8000</st>`<st c="10590">; you should see the new home
    page displayed (</st>*<st c="10637">Figure 3</st>**<st c="10646">.3</st>*<st c="10648">).</st>
    <st c="10652">Check that the tab title doesn’t appear, as we need to send the</st>
    `<st c="10716">template_data.title</st>` <st c="10735">variable from the view
    function to the template (which is carried</st> <st c="10802">out next).</st>
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10514">现在，保存这些文件，运行服务器，然后回到</st> `<st c="10569">http://localhost:8000</st>`<st
    c="10590">；你应该会看到新的主页被显示出来（</st>*<st c="10637">图3</st>**<st c="10646">.3</st>*<st
    c="10648">）。</st> <st c="10652">检查标签标题是否没有出现，因为我们需要从视图函数发送</st> `<st c="10716">template_data.title</st>`
    <st c="10735">变量到模板中（这将在下一部分进行）。</st>
- en: '![Figure 3.3 – The new home page with the missing tab title](img/B22457_03_03.jpg)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![Figure 3.3 – The new home page with the missing tab title](img/B22457_03_03.jpg)'
- en: <st c="10933">Figure 3.3 – The new home page with the missing tab title</st>
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10933">图3.3 – 缺少标签页标题的新主页</st>
- en: <st c="10990">Note</st>
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10990">注意</st>
- en: <st c="10995">If you have problems loading the background image, we recommend
    you stop the server and run it again or clear the browser cache.</st> <st c="11125">Also,
    try to access the image file directly from the browser to</st> <st c="11188">check
    whether the image was loaded</st> <st c="11224">properly (</st>[<st c="11234">http://localhost:8000/static/img/background.jpg</st>](http://localhost:8000/static/img/background.jpg)<st
    c="11282">).</st>
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="10995">如果你在加载背景图片时遇到问题，我们建议你停止服务器并重新运行，或者清除浏览器缓存。</st> <st c="11125">此外，尝试直接从浏览器访问图像文件，</st>
    <st c="11188">检查图像是否已正确加载</st> <st c="11224">（</st>[<st c="11234">http://localhost:8000/static/img/background.jpg</st>](http://localhost:8000/static/img/background.jpg)<st
    c="11282">）。</st>
- en: <st c="11285">Updating the views index function</st>
  id: totrans-66
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="11285">更新视图索引函数</st>
- en: <st c="11319">Finally, let’s pass the title from the view</st> <st c="11363">function
    to the</st> <st c="11379">templates.</st> <st c="11391">In</st> `<st c="11394">/home/views.py</st>`<st
    c="11408">, add the following</st> <st c="11428">in bold:</st>
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11319">最后，让我们从视图</st> <st c="11363">函数传递标题到</st> <st c="11379">模板。</st>
    <st c="11391">在</st> `<st c="11394">/home/views.py</st>`<st c="11408">中，添加以下内容，并用粗体标出：</st>
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: <st c="11690">Let’s explain the</st> <st c="11709">previous code:</st>
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="11690">让我们解释一下</st> <st c="11709">之前的代码：</st>
- en: <st c="11723">We create a Python dictionary called</st> `<st c="11761">template_data</st>`<st
    c="11774">. We will always use this dictionary when we need to pass information
    from view functions</st> <st c="11864">to templates.</st>
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="11723">我们创建了一个名为</st> `<st c="11761">template_data</st>`<st c="11774">的Python字典。</st>
    <st c="11774">当我们需要从视图函数</st> <st c="11864">传递信息到模板时</st>，我们总是使用这个字典。
- en: <st c="11877">We add a key called</st> `<st c="11898">title</st>` <st c="11903">to
    the</st> `<st c="11911">template_data</st>` <st c="11924">dictionary.</st> `<st
    c="11937">title</st>` <st c="11942">will be used to define the browser tab title.</st>
    <st c="11989">Remember that</st> `<st c="12003">template_data.title</st>` <st
    c="12022">is used in the</st> `<st c="12038">base.html</st>` <st c="12047">template.</st>
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="11877">我们在</st> `<st c="11911">template_data</st>` <st c="11924">字典中添加了一个名为</st>
    `<st c="11898">title</st>` <st c="11937">的键。</st> `<st c="11937">title</st>` <st
    c="11942">将用于定义浏览器标签页标题。</st> <st c="11989">请记住</st> `<st c="12003">template_data.title</st>`
    <st c="12022">在</st> `<st c="12038">base.html</st>` <st c="12047">模板中</st> <st
    c="12022">被使用。</st>
- en: <st c="12057">We modify the</st> `<st c="12072">render</st>` <st c="12078">function
    to pass a third argument.</st> <st c="12114">This time we pass the</st> `<st c="12136">template_data</st>`
    <st c="12149">variable, which will be available across the</st> `<st c="12195">home/index.html</st>`
    <st c="12210">template</st> <st c="12219">or the templates that</st> <st c="12242">it
    extends.</st>
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="12057">我们修改了</st> `<st c="12072">render</st>` <st c="12078">函数以传递第三个参数。</st>
    <st c="12114">这次我们传递了</st> `<st c="12136">template_data</st>` <st c="12149">变量，它将在</st>
    `<st c="12195">home/index.html</st>` <st c="12210">模板</st> <st c="12219">或它扩展的模板中</st>
    <st c="12219">可用。</st>
- en: '*<st c="12253">Figure 3</st>**<st c="12262">.4</st>* <st c="12264">displays
    the</st> <st c="12277">updated</st> **<st c="12286">Home</st>** <st c="12290">page
    with the proper browser</st> <st c="12320">tab title.</st>'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*<st c="12253">图3</st>**<st c="12262">.4</st>* <st c="12264">显示了带有适当浏览器</st>
    <st c="12320">标签页标题的更新后的</st> **<st c="12286">主页</st>** <st c="12290">。</st>'
- en: '![Figure 3.4 – New home page with proper browser tab title](img/B22457_03_04.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图3.4 – 带有适当浏览器标签页标题的新主页](img/B22457_03_04.jpg)'
- en: <st c="12484">Figure 3.4 – New home page with proper browser tab title</st>
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12484">图3.4 – 带有适当浏览器标签页标题的新主页</st>
- en: <st c="12540">Updating the About page to use the base template</st>
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="12540">更新关于页面以使用基本模板</st>
- en: <st c="12589">The new</st> **<st c="12598">About</st>** <st c="12603">page will
    also extend the</st> <st c="12629">base template, and it</st> <st c="12652">will
    include a dummy text about the page and</st> <st c="12697">an image.</st>
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12589">新的</st> **<st c="12598">关于</st>** <st c="12603">页面也将扩展基本模板，并且它</st>
    <st c="12652">将包含关于页面的示例文本和图像。</st>
- en: <st c="12706">Creating the new About template</st>
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="12706">创建新的关于模板</st>
- en: <st c="12738">In</st> `<st c="12742">/home/templates/home/about.html</st>`<st
    c="12773">, replace the entire template code</st> <st c="12808">with</st> <st
    c="12813">the following:</st>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="12738">在</st> `<st c="12742">/home/templates/home/about.html</st>`<st
    c="12773">中，将整个模板代码</st> <st c="12808">替换为以下内容：</st> <st c="12813">以下内容：</st>
- en: '[PRE7]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: <st c="13857">Let’s explain the</st> <st c="13876">previous code:</st>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="13857">让我们解释一下</st> <st c="13876">之前的代码：</st>
- en: <st c="13890">The new</st> `<st c="13899">about.html</st>` <st c="13909">file
    now extends the</st> `<st c="13931">base.html</st>` <st c="13940">template.</st>
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="13890">新的</st> `<st c="13899">about.html</st>` <st c="13909">文件现在扩展了</st>
    `<st c="13931">base.html</st>` <st c="13940">模板。</st>
- en: <st c="13950">We use</st> `<st c="13958">{% block content %}</st>` `<st c="13977">{%
    endblock content %}</st>` <st c="14000">to inject the proper HTML code inside</st>
    `<st c="14039">div</st>` <st c="14042">of the</st> `<st c="14050">base.html</st>`
    <st c="14059">template file.</st> <st c="14075">This code defines a paragraph</st>
    <st c="14105">about the page and displays an image that will be</st> <st c="14155">stored
    next.</st>
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="13950">我们使用</st> `<st c="13958">{% block content %}</st>` `<st c="13977">{%
    endblock content %}</st>` <st c="14000">来在</st> `<st c="14039">div</st>` <st c="14042">的</st>
    `<st c="14050">base.html</st>` <st c="14059">模板文件中注入适当的HTML代码。</st> <st c="14075">此代码定义了一个关于页面的段落，并显示一个将要</st>
    <st c="14155">存储的图片。</st>
- en: <st c="14167">We also use the</st> `<st c="14184">{% load static %}</st>` <st
    c="14201">tag since this template loads a custom image by using the</st> `<st
    c="14260">static</st>` <st c="14266">template tag.</st>
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="14167">我们同样使用</st> `<st c="14184">{% load static %}</st>` <st c="14201">标签，因为这个模板通过使用</st>
    `<st c="14260">static</st>` <st c="14266">模板标签来加载自定义图片。</st>
- en: <st c="14280">Storing the about.jpg image</st>
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="14280">存储about.jpg图片</st>
- en: <st c="14308">Let’s also include the</st> `<st c="14332">about.jpg</st>` <st
    c="14341">image in our</st> <st c="14354">project.</st> <st c="14364">In</st>
    `<st c="14367">moviesstore/static/img/</st>`<st c="14390">, download and store
    the</st> `<st c="14415">about.jpg</st>` <st c="14424">image from this</st> <st
    c="14441">link:</st> [<st c="14447">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/about.jpg</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/about.jpg)<st
    c="14588">.</st>
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14308">让我们也把</st> `<st c="14332">about.jpg</st>` <st c="14341">图片添加到我们的</st>
    <st c="14354">项目中。</st> <st c="14364">在</st> `<st c="14367">moviesstore/static/img/</st>`<st
    c="14390">目录下，从以下</st> <st c="14415">链接</st>下载并存储`<st c="14424">about.jpg</st>`
    <st c="14441">图片：</st> [<st c="14447">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/about.jpg</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/blob/main/Chapter03/moviesstore/moviesstore/static/img/about.jpg)<st
    c="14588">。</st>
- en: <st c="14589">Updating the views about function</st>
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="14589">更新关于函数的视图</st>
- en: <st c="14623">Finally, let’s pass the title from the view</st> <st c="14667">about
    function to the templates.</st> <st c="14701">In</st> `<st c="14704">/home/views.py</st>`<st
    c="14718">, add the following</st> <st c="14738">in bold:</st>
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="14623">最后，让我们将从视图</st> <st c="14667">关于函数传递的标题到模板中。</st> <st c="14701">在</st>
    `<st c="14704">/home/views.py</st>`<st c="14718">中，添加以下</st> <st c="14738">加粗内容：</st>
- en: '[PRE8]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: …
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: …
- en: <body>
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: <body>
- en: <!-- Header --> <st c="16377"><nav class="p-3 navbar navbar-dark bg-dark</st>
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <!-- Header --> <st c="16377"><nav class="p-3 navbar navbar-dark bg-dark</st>
- en: <st c="16419">navbar-expand-lg"></st>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16419">navbar-expand-lg"></st>
- en: <st c="16438"><div class="container"></st>
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16438"><div class="container"></st>
- en: <st c="16462"><a class="navbar-brand"</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16462"><a class="navbar-brand"</st>
- en: <st c="16486">href="{% url 'home.index' %}"></st>
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16486">href="{% url 'home.index' %}"></st>
- en: <st c="16517"><img src="img/logo.png' %}" alt="logo"</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16517"><img src="img/logo.png' %}" alt="logo"</st>
- en: <st c="16567">height="40" /></st>
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16567">height="40" /></st>
- en: <st c="16582"></a></st>
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16582"></a></st>
- en: <st c="16587"><button class="navbar-toggler" type="button"</st>
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16587"><button class="navbar-toggler" type="button"</st>
- en: <st c="16632">data-bs-toggle="collapse"</st>
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16632">data-bs-toggle="collapse"</st>
- en: <st c="16658">data-bs-target="#navbarNavAltMarkup"</st>
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="16658">data-bs-target="#navbarNavAltMarkup"</st>
- en: '**<st c="16695">aria-controls="navbarNavAltMarkup"</st>**'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16695">aria-controls="navbarNavAltMarkup"</st>**'
- en: '**<st c="16730">aria-expanded="false"</st>**'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16730">aria-expanded="false"</st>**'
- en: '**<st c="16752">aria-label="Toggle navigation"></st>**'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16752">aria-label="Toggle navigation"></st>**'
- en: '**<st c="16784"><span class="navbar-toggler-icon"></span></st>**'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16784"><span class="navbar-toggler-icon"></span></st>**'
- en: '**<st c="16826"></button></st>**'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16826"></button></st>**'
- en: '**<st c="16836"><div class="collapse navbar-collapse"</st>**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16836"><div class="collapse navbar-collapse"</st>**'
- en: '**<st c="16874">id="navbarNavAltMarkup"></st>**'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16874">id="navbarNavAltMarkup"</st>**'
- en: '**<st c="16899"><div class="navbar-nav ms-auto navbar-ml"></st>**'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16899"><div class="navbar-nav ms-auto navbar-ml"></st>**'
- en: '**<st c="16942"><a class="nav-link"</st>**'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="16942"><a class="nav-link"</st>**'
- en: '****<st c="16962">href="{% url ''home.about'' %}">About</a></st>**'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '****<st c="16962">href="{% url ''home.about'' %}">关于</a></st>**'
- en: '**<st c="17002"></div></st>**'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="17002"></div></st>**'
- en: '**<st c="17009"></div></st>**'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="17009"></div></st>**'
- en: '**<st c="17016"></div></st>**'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="17016"></div></st>**'
- en: '**<st c="17023"></nav></st>** <st c="17030"><!-- Header -->'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: …</st>**
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: … <st c="18062">.navbar a.nav-link {</st>
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="18082">color: #FFFEF6 !important;</st>'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18109">}</st>
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18111">.bg-dark {</st>
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="18121">background-color: #2E2E2E !important;</st>'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: <st c="18159">}</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: …
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: <!-- Footer --> <st c="19099"><section class="p-3 ms-footer d-none d-md-block"></st>
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="19148"><div class="container"></st>
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19172"><div class="row mt-3 text-white"></st>
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19206"><div class="col-md-6 col-lg-6 col-xl-6</st>
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19245">mx-auto mb-4"></st>
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19260"><b>MOVIES STORE</b></st>
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19280"><hr /></st>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19287"><p></st>
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19291">Welcome to Movies Store, your premier online</st>
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19336">destination for a cinematic adventure like no</st>
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19382">other!</st> <st c="19390">Dive into the world of movies from the</st>
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19428">comfort of your own home with our user-</st>
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19468">friendly and immersive online movie store.</st>
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19511"></p></st>
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19516"></div></st>
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19523"><div class="col-md-3 col-lg-3 col-xl-3</st>
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19562">mx-auto mb-4"></st>
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19577"><b>LINKS</b></st>
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19590"><hr /></st>
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19597"><p><a class="nav-link"</st>
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19620">href="{% url ''home.about'' %}"></st>**'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19651">About</st>**'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19657"></a></p></st>**'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19666"></div></st>**'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19673"><div class="col-md-3 col-lg-3 col-xl-3 mx-auto</st>**'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19720">mb-4"></st>**'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19727"><b>CONTACT</b></st>**'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19742"><hr /></st>**'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19749"><p><i class="fas fa-home me-2"></i></st>**'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19785">150-2345 Tokyo-to, Japan</st>**'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '****<st c="19810"></p></st>**'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19815"><p><i class="fas fa-envelope me-2"></i></st>**'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19855">info@moviesstore.com</st>**'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19876"></p></st>**'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19881"><p><i class="fas fa-phone me-2"></i></st>**'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19918">+81 03-3333-3333</st>**'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19935"></p></st>**'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19940"></div></st>**'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19947"></div></st>**'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19954"></div></st>**'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: '****<st c="19961"></section></st>**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19972"><section class="p-3 ms-footer-bottom bg-dark"></st>**'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20019"><div class="container d-flex</st>**'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20048">justify-content-between"></st>**'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20074"><div class="me-5 text-white"></st>**'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20104"><span>DESIGNED BY</st>**'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20122"><a href="https://www.x.com/danielgarax"</st>**'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20162">target="_blank">DANIEL CORREA</a> &</st>**'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20198"><a href="https://www.x.com/greglim81"</st>**'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20236">target="_blank">GREG LIM</a></st>**'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
- en: '****<st c="20265"></span></st>**'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20273"></div></st>**'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20280"><div class="text-white"></st>**'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20305"><span>© Copyright - 2024</span></st>**'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20337"></div></st>**'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20344"></div></st>**'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="20351"></section></st>** <st c="20362"><!-- Footer -->'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
- en: …</st>******
  id: totrans-184
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: … <st c="20673">.ms-footer {</st>
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="20685">background-color: #202020;</st>'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20712">}</st>
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: <st c="20714">.ms-footer p {</st>
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="20728">color: #7F7F7F;</st>'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="20728">颜色: #7F7F7F;</st>'
- en: '<st c="20744">font-size: 13px;</st>'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="20744">字体大小: 13像素;</st>'
- en: <st c="20761">}</st>
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20761">}</st>
- en: <st c="20763">.ms-footer a:hover {</st>
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20763">.ms-footer a:hover {</st>
- en: '<st c="20783">color: #6ab43e;</st>'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="20783">颜色: #6ab43e;</st>'
- en: '<st c="20799">text-decoration: none;</st>'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '<st c="20799">文本装饰: 无;</st>'
- en: <st c="20822">}</st>
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20822">}</st>
- en: <st c="20824">.ms-footer-bottom span{</st>
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="20824">.ms-footer-bottom span{</st>
- en: '**<st c="20847">font-size: 13px;</st>**'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20847">字体大小: 13像素;</st>**'
- en: '**<st c="20864">line-height: 38px;</st>**'
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20864">行高: 38像素;</st>**'
- en: '**<st c="20883">}</st>**'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20883">}</st>**'
- en: '**<st c="20885">.ms-footer-bottom a {</st>**'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20885">.ms-footer-bottom a {</st>**'
- en: '**<st c="20906">color: #6ab43e;</st>**'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20906">颜色: #6ab43e;</st>**'
- en: '**<st c="20922">text-decoration: none;</st>**'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20922">文本装饰: 无;</st>**'
- en: '**<st c="20945">}</st>**'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20945">}</st>**'
- en: '**<st c="20947">.ms-footer-bottom a:hover {</st>**'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20947">.ms-footer-bottom a:hover {</st>**'
- en: '**<st c="20974">color: #fff;</st>**'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20974">颜色: #fff;</st>**'
- en: '**<st c="20987">}</st>**'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="20987">}</st>**'
- en: '[PRE12]'
  id: totrans-208
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
