["```py\nclass Model(QtCore.QAbstractItemModel):\n\n    def __init__(self, parent=None):\n        super(Model, self).__init__(parent)\n\n    def rowCount(self, parent):\n        return ... \n\n    def columnCount(self, parent):\n        return ...\n\n    def index(self, row, column, parent):\n        return ...\n\n    def data(self, index, role):\n        return ...\n```", "```py\nclass Model(QtCore.QAbstractTableModel):\n\n    def __init__(self, parent=None):\n        super(Model, self).__init__(parent)\n\n    def rowCount(self, parent):\n        return ...\n\n    def columnCount(self, parent):\n        return ...\n\n    def data(self, row, column):\n        return ...\n```", "```py\ncombo_box = QtWidgets.QComboBox()\n```", "```py\ncombo_boxf = QtWidgets.QFontComboBox()\n```", "```py\n...\nclass UComBox(QtWidgets.QComboBox):\n\n    def __init__(self, parent=None, icon=None, pad=10,\n                            bdr=5, bdw=1, bdc=color[3]):\n        super(UComBox, self).__init__(parent)\n        self.icon, self.pad = icon, pad\n        self.bdr, self.bdw, self.bdc = bdr, bdw, bdc\n        font = UFonts(size=14, weight=59)\n        self.setFont(font.font1)\n        self.setStyleSheet(\n          \"\"\"QComboBox {padding: %spx; background-color: %s;\n              color: %s; border-style: solid; border-radius: %spx;\n              border-width: %spx; border-color: %s;}\n             QComboBox:drop-down:down-arrow { image: url(%s);\n              width: 14px; height: 14px;}\n             QComboBox:drop-down:button { margin: %spx;\n              background-color: %s; border-style: solid;\n              border-radius: %spx; border-width: %spx;\n              border-color: %s;}\"\"\" \n             % (self.pad, color[0], color[3], self.bdr, self.bdw,\n               self.bdc, self.icon, self.pad, color[0], self.bdr,\n               self.bdw, self.bdc))\n  ...\n```", "```py\n...\nfrom u_style import UComBox\n...\n```", "```py\n...\n    def __init__(self, parent=None):\n        ...\n        self.combox1 = UComBox(self.frame2)\n        self.combox1.addItems([\"Texts\", \"Table\"])\n        ...\n        self.layfr2.addWidget(self.combox1, 0, 0, 1, 1)\n        self.layfr2.addWidget(self.label1, 1, 0, 1, 1)\n        self.layfr2.addWidget(self.line_ed3, 4, 0, 1, 1)\n        ... \n...\n```", "```py\n...\nself.combox1 = UComBox(self.frame2, icon=\"Path/to/Icon\")\n...\n```", "```py\nlist_view = QtWidgets.QListView()\n```", "```py\n...\nclass UListV(QtWidgets.QListView):\n\n    def __init__(self, parent=None, mg=5, pad=10,\n                       bdr=5, bdw=1, bdc=color[3]):\n        super(UListV, self).__init__(parent)\n        self.setWordWrap(True)\n        self.mg, self.pad = mg, pad\n        self.bdr, self.bdw, self.bdc = bdr, bdw, bdc\n        font = UFonts(size=14, weight=59)\n        self.setFont(font.font1)\n        self.setStyleSheet(\n          \"\"\"margin: %spx; padding: %spx; background-color: %s;\n             color: %s; border-style: solid; border-radius: %spx;\n             border-width: %spx; border-color: %s;\"\"\"\n          % (self.mg, self.pad, color[0], color[3],\n                      self.bdr, self.bdw, self.bdc))\n...\n```", "```py\n...\nfrom u_style import UComBox, UListV\n...\n```", "```py\n...\n    def __init__(self, parent=None):\n        ...\n        self.combox1.addItems([\"Texts\", \"Table\"])\n        self.combox1.setView(UListV())\n        ...\n...\n```", "```py\ntable_view = QtWidgets.QTableView()\n```", "```py\n...\nfrom PyQt5 import QtCore\nimport random\n...\n```", "```py\n...\nfrom PySide2 import QtCore\nimport random\n...\n```", "```py\n...\nclass UTModel(QtCore.QAbstractTableModel):\n\n    def __init__(self, parent=None):\n        super(UTModel, self).__init__(parent)\n\n    def rowCount(self, parent):\n        return 27\n\n    def columnCount(self, parent):\n        return 14\n\n    def data(self, row, column):\n        randn = random.randint(1, 100)\n        return randn\n...\n```", "```py\n...\nclass UTabView(QtWidgets.QTableView):\n\n    def __init__(self, parent=None, tvpad=7, tvbgcolor=color[1],\n                 tvtxc=color[3], bdr=5, bdw=1, bdc=color[3]):\n        super(UTabView, self).__init__(parent)\n        self.tvpad = tvpad\n        self.tvbgcolor, self.tvtxc = tvbgcolor, tvtxc\n        self.bdr, self.bdw, self.bdc = bdr, bdw, bdc\n        font = UFonts(size=14, weight=59)\n        self.setFont(font.font1)\n        self.setStyleSheet( \n          \"\"\"QTableView {padding: %spx; background-color: %s;\n              color: %s; border-style: solid;\n              border-radius: %spx; border-width: %spx;\n              border-color: %s; gridline-color: %s;}\"\"\"\n          % (self.tvpad, self.tvbgcolor, self.tvtxc,\n             self.bdr, self.bdw, self.bdc, color[3]))\n  ...\n```", "```py\n...\nfrom u_style import UComBox, UListV, UTabView\nfrom u_table import UTModel\n...\n```", "```py\n...\n    def __init__(self, parent=None):\n        ...\n        self.table = UTabView(self.frame1)\n        self.table.setVisible(False)\n        model = UTModel()\n        self.table.setModel(model)\n        self.layfr1 = QtWidgets.QGridLayout()\n        self.layfr1.addWidget(self.table, 0, 0, 1, 1)\n        self.layfr1.addWidget(self.text_edit, 0, 0, 1, 1)\n        ...\n        self.combox1.activated.connect(self.txt_table)\n\n    def txt_table(self):\n        if self.combox1.currentText() == \"Texts\":\n            self.text_edit.setVisible(True)\n            self.table.setVisible(False)\n        if self.combox1.currentText() == \"Table\":\n            self.text_edit.setVisible(False)\n            self.table.setVisible(True)\n...\n```"]