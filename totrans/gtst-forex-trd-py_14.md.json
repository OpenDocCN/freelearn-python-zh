["```py\n    if order['Type'] == 'Limit':\n        if order['Status'] == 'Created':\n            order['Status'] = 'Submitted'\n        if order['Status'] == 'Submitted':\n            if order['Side'] == 'Buy' and bar['Low'] <= order['Price']:\n                order['Status'] = 'Executed'\n                order['Executed Price'] = min(order['Price'], bar['Open'])\n            if order['Side'] == 'Sell' and bar['High'] >= order['Price']:\n                order['Status'] = 'Executed'\n                order['Executed Price'] = max(order['Price'], bar['Open'])\n```", "```py\n    if order['Type'] == 'Stop':\n        # print('Begin processing limit order',\n                Broker.orders_list)\n        if order['Status'] == 'Created':\n            # Here we actually send orders to the API\n            order['Status'] = 'Submitted'\n        if order['Status'] == 'Submitted':\n            if order['Side'] == 'Buy' and bar['High'] >= order['Price']:\n                order['Status'] = 'Executed'\n                order['Executed Price'] = max(order['Price'], bar['Open'])\n            if order['Side'] == 'Sell' and bar['Low'] <= order['Price']:\n                order['Status'] = 'Executed'\n                order['Executed Price'] = min(order['Price'], bar['Open'])\n```", "```py\n     if counter == 20:\n    ```", "```py\n         break\n    ```", "```py\n            if close == 1.12949 and System.market_position == 0:\n    ```", "```py\n                order = {}\n    ```", "```py\n                order['Type'] = 'Limit'\n    ```", "```py\n                order['Price'] = 1.1290\n    ```", "```py\n                order['Side'] = 'Buy'\n    ```", "```py\n                order['Size'] = 10000\n    ```", "```py\n                order['Status'] = 'Created'\n    ```", "```py\n                orders_stream.put(order)\n    ```", "```py\n                order = {}\n    ```", "```py\n                order['Type'] = 'Stop'\n    ```", "```py\n                order['Price'] = 1.1285\n    ```", "```py\n                order['Side'] = 'Sell'\n    ```", "```py\n                order['Size'] = 10000\n    ```", "```py\n                order['Status'] = 'Created'\n    ```", "```py\n                orders_stream.put(order)\n    ```", "```py\nif order['Status'] == 'Submitted':\n    System.orders_buffer.append(order)\n```", "```py\nfor order in System.orders_buffer:\n    orders_stream.put(order)\n    break\n```", "```py\nTotal trades: 2\nAverage trade: -2.6999999999999247\n```", "```py\n    if order['Side'] == 'Buy':\n    ```", "```py\n        System.market_position = System.market_position + order['Size']\n    ```", "```py\n    if order['Side'] == 'Sell':\n    ```", "```py\n        System.market_position = System.market_position – order['Size']\n    ```", "```py\n    if order['Side'] == 'Buy':\n    ```", "```py\n        System.market_position = System.market_position + order['Size']\n    ```", "```py\n        if System.market_position != 0:\n    ```", "```py\n            System.number_of_trades += 1\n    ```", "```py\n    if order['Side'] == 'Sell':\n    ```", "```py\n        System.market_position = System.market_position - order['Size']\n    ```", "```py\n        if System.market_position != 0:\n    ```", "```py\n            System.number_of_trades += 1\n    ```", "```py\n    print(\"Total trades:\", System.number_of_trades) # introduced number_of_trades\n    ```", "```py\n    print(\"Average trade:\", System.equity / System.number_of_trades)\n    ```", "```py\n    Total trades: 1\n    ```", "```py\n    Average trade: -5.399999999999849\n    ```", "```py\n    System.equity += (bar['Close'] - System.last_price) * System.market_position\n    ```", "```py\n    System.equity_timeseries.append(System.equity)\n    ```", "```py\n    System.last_price = bar['Close']\n    ```", "```py\n    System.equity += (order['Executed Price'] - System.last_price) * System.market_position\n    ```", "```py\n    Total trades: 1\n    ```", "```py\n    Average trade: -4.999999999999449\n    ```", "```py\nif order['Type'] == 'Limit' or order['Type'] == 'Stop':\n    System.orders_buffer = []\n    orders_stream.queue.clear()\n```", "```py\n        close = bar['Close']\n        if bar['Time'] == '23:00:00':\n            ref_close = close\n        if bar['Time'] == '22:50:00' and System.market_position == 0:\n            order = {}\n            order['Type'] = 'Market'\n            order['Price'] = close\n            if close < ref_close:\n                order['Side'] = 'Sell'\n            if close > ref_close:\n                order['Side'] = 'Buy'\n            order['Size'] = 10000\n            order['Status'] = 'Created'\n            orders_stream.put(order)\n            order = {}\n            order['Type'] = 'Limit'\n            if close < ref_close:\n                order['Side'] = 'Buy'\n                order['Price'] = close - 0.0005\n            if close > ref_close:\n                order['Side'] = 'Sell'\n                order['Price'] = close + 0.0005\n            order['Size'] = 10000\n            order['Status'] = 'Created'\n            orders_stream.put(order)\n            order = {}\n            order['Type'] = 'Stop'\n            if close < ref_close:\n                order['Side'] = 'Buy'\n                order['Price'] = close + 0.0005\n            if close > ref_close:\n                order['Side'] = 'Sell'\n                order['Price'] = close - 0.0005\n            order['Size'] = 10000\n            order['Status'] = 'Created'\n            orders_stream.put(order)\n```", "```py\nS = {1, -1, -1, 1, -1, 1, 1, 1, -1, -1, 1, -1, ...}\n```", "```py\nS1 = {b, -b, -b, b, -b, b, b, b, -b, -b, b, -b, ...}\n```", "```py\nS2 = {b, -b, -2b, 4b, -b, 2b, b, b, -b, -2b, 4b, -b, ...}\n```"]