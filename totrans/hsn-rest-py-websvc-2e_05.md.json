["```py\n    ~/HillarPythonREST2/Django01\n```", "```py\n    %USERPROFILE%\\HillarPythonREST2\\Django01\n```", "```py\n    $env:userprofile\\HillarPythonREST2\\Django01\n```", "```py\n    python3 -m venv ~/HillarPythonREST2/Django01\n```", "```py\n    python -m venv %USERPROFILE%\\HillarPythonREST2\\Django01\n```", "```py\n    python -m venv $env:userprofile\\HillarPythonREST2\\Django01 \n```", "```py\n    source ~/PythonREST/Django01/bin/activate\n```", "```py\n    source ~/PythonREST/Django01/bin/activate.csh \n```", "```py\n    source ~/PythonREST/Django01/bin/activate.fish\n```", "```py\n    %USERPROFILE%\\PythonREST\\Django01\\Scripts\\activate.bat\n```", "```py\n    cd $env:USERPROFILE\n    PythonREST\\Django01\\Scripts\\Activate.ps1\n```", "```py\nDjango==2.1.4 \ndjangorestframework==3.9.0 \nhttpie==0.9.9 \n```", "```py\n    cd ~/PythonREST/Django01\n```", "```py\n    cd /d %USERPROFILE%\\PythonREST\\Django01\n```", "```py\n    cd $env:USERPROFILE\n    cd PythonREST\\Django01 \n```", "```py\npip install -r requirements.txt \n```", "```py\nInstalling collected packages: pytz, Django, djangorestframework, Pygments, certifi, chardet, idna, urllib3, requests, httpie\nSuccessfully installed Django-2.1.4 Pygments-2.2.0 certifi-2018.10.15 chardet-3.0.4 djangorestframework-3.9.0 httpie-1.0.2 idna-2.7 pytz-2018.6 requests-2.20.0 urllib3-1.24\n\n```", "```py\n    django-admin.py startproject games_service\n```", "```py\n    cd games_service\n```", "```py\n    python manage.py startapp games\n```", "```py\nfrom django.apps import AppConfig \n\nclass GamesConfig(AppConfig): \n    name = 'games'\n```", "```py\nINSTALLED_APPS = [ \n    'django.contrib.admin', \n    'django.contrib.auth', \n    'django.contrib.contenttypes', \n    'django.contrib.sessions', \n    'django.contrib.messages', \n    'django.contrib.staticfiles', \n] \n```", "```py\nINSTALLED_APPS = [ \n    'django.contrib.admin', \n    'django.contrib.auth', \n    'django.contrib.contenttypes', \n    'django.contrib.sessions', \n    'django.contrib.messages', \n    'django.contrib.staticfiles', \n    # Django REST Framework \n    'rest_framework', \n    # Our Games application \n    'games.apps.GamesConfig', \n] \n```", "```py\nfrom django.db import models \n\n# Create your models here. \n```", "```py\nfrom django.db import models class Game(models.Model): created_timestamp = models.DateTimeField(auto_now_add=True) ...\n```", "```py\nfrom rest_framework import serializers \nfrom games.models import Game \n\nclass GameSerializer(serializers.Serializer): \n    id = serializers.IntegerField(read_only=True) \n    name = serializers.CharField(max_length=200) \n    release_date = serializers.DateTimeField() \n    esrb_rating = serializers.CharField(max_length=150) \n    played_once = serializers.BooleanField(required=False) \n    played_times = serializers.IntegerField(required=False) \n\n    def create(self, validated_data): \n        return Game.objects.create(**validated_data) \n\n    def update(self, instance, validated_data): \n        instance.name = validated_data.get('name',  \n            instance.name) \n        instance.release_date = validated_data.get('release_date',  \n            instance.release_date) \n        instance.esrb_rating = validated_data.get('esrb_rating',  \n            instance.esrb_rating) \n        instance.played_once = validated_data.get('played_once',  \n            instance.played_once) \n        instance.played_times = validated_data.get('played_times',  \n            instance.played_times) \n        instance.save() \n        return instance \n```", "```py\n    python manage.py shell\n```", "```py\nfrom datetime import datetime \nfrom django.utils import timezone \nfrom django.utils.six import BytesIO \nfrom rest_framework.renderers import JSONRenderer \nfrom rest_framework.parsers import JSONParser \nfrom games.models import Game \nfrom games.serializers import GameSerializer \n```", "```py\ngamedatetime = timezone.make_aware(datetime.now(), timezone.get_current_timezone()) \ngame1 = Game(name='PAW Patrol: On A Roll!', release_date=gamedatetime, esrb_rating='E (Everyone)') \ngame1.save() \ngame2 = Game(name='Spider-Man', release_date=gamedatetime, esrb_rating='T (Teen)') \ngame2.save()\n```", "```py\nprint(game1.id) \nprint(game1.name) \nprint(game1.created_timestamp) \nprint(game2.id) \nprint(game2.name) \nprint(game2.created_timestamp) \n```", "```py\ngame_serializer1 = GameSerializer(game1) \nprint(game_serializer1.data) \n```", "```py\n{'id': 1, 'name': 'PAW Patrol: On A Roll!', 'release_date': '2018-10-24T17:47:30.177610Z', 'esrb_rating': 'E (Everyone)', 'played_once': False, 'played_times': 0}\n\n```", "```py\ngame_serializer2 = GameSerializer(game2) \nprint(game_serializer2.data) \n```", "```py\n{'id': 2, 'name': 'Spider-Man', 'release_date': '2018-10-24T17:47:30.177610Z', 'esrb_rating': 'T (Teen)', 'played_once': False, 'played_times': 0}\n\n```", "```py\nrenderer = JSONRenderer() \nrendered_game1 = renderer.render(game_serializer1.data) \nrendered_game2 = renderer.render(game_serializer2.data) \nprint(rendered_game1) \nprint(rendered_game2) \n```", "```py\n    b'{\"id\":1,\"name\":\"PAW Patrol: On A Roll!\",\"release_date\":\"2018-10-24T17:47:30.177610Z\",\"esrb_rating\":\"E (Everyone)\",\"played_once\":false,\"played_times\":0}'\n    b'{\"id\":2,\"name\":\"Spider-Man\",\"release_date\":\"2018-10-24T17:47:30.177610Z\",\"esrb_rating\":\"T (Teen)\",\"played_once\":false,\"played_times\":0}'\n\n```", "```py\njson_string_for_new_game = '{\"name\":\"Tomb Raider Extreme Edition\",\"release_date\":\"2016-05-18T03:02:00.776594Z\",\"game_category\":\"3D RPG\",\"played\":false}' \njson_bytes_for_new_game = bytes(json_string_for_new_game , encoding=\"UTF-8\") \nstream_for_new_game = BytesIO(json_bytes_for_new_game) \nparser = JSONParser() \nparsed_new_game = parser.parse(stream_for_new_game) \nprint(parsed_new_game) \n```", "```py\n{'name': 'Red Dead Redemption 2', 'release_date': '2018-10-26T01:01:00.776594Z', 'esrb_rating': 'M (Mature)'}\n\n```", "```py\nnew_game_serializer = GameSerializer(data=parsed_new_game) \nif new_game_serializer.is_valid(): \n    new_game = new_game_serializer.save() \n    print(new_game.name) \n```", "```py\nquit() \n```", "```py\nfrom django.shortcuts import render \n\n# Create your views here. \n```", "```py\nfrom django.http import HttpResponse \nfrom django.views.decorators.csrf import csrf_exempt \nfrom rest_framework.renderers import JSONRenderer \nfrom rest_framework.parsers import JSONParser \nfrom rest_framework import status \nfrom games.models import Game \nfrom games.serializers import GameSerializer \n\nclass JSONResponse(HttpResponse): \n    def __init__(self, data, **kwargs): \n        content = JSONRenderer().render(data) \n        kwargs['content_type'] = 'application/json' \n        super(JSONResponse, self).__init__(content, **kwargs) \n\n@csrf_exempt \ndef game_collection(request): \n    if request.method == 'GET': \n        games = Game.objects.all() \n        games_serializer = GameSerializer(games, many=True) \n        return JSONResponse(games_serializer.data) \n    elif request.method == 'POST': \n        game_data = JSONParser().parse(request) \n        game_serializer = GameSerializer(data=game_data) \n        if game_serializer.is_valid(): \n            game_serializer.save() \n            return JSONResponse(game_serializer.data,  \n                status=status.HTTP_201_CREATED) \n        return JSONResponse(game_serializer.errors,  \n            status=status.HTTP_400_BAD_REQUEST) \n\n@csrf_exempt \ndef game_detail(request, id): \n    try: \n        game = Game.objects.get(id=id) \n    except Game.DoesNotExist: \n        return HttpResponse(status=status.HTTP_404_NOT_FOUND) \n    if request.method == 'GET': \n        game_serializer = GameSerializer(game) \n        return JSONResponse(game_serializer.data) \n    elif request.method == 'PUT': \n        game_data = JSONParser().parse(request) \n        game_serializer = GameSerializer(game,  \n            data=game_data) \n        if game_serializer.is_valid(): \n            game_serializer.save() \n            return JSONResponse(game_serializer.data) \n        return JSONResponse(game_serializer.errors,  \n            status=status.HTTP_400_BAD_REQUEST) \n elif request.method == 'DELETE': \n        game.delete() \n        return HttpResponse(status=status.HTTP_204_NO_CONTENT) \n```", "```py\nfrom django.conf.urls import url \nfrom games import views \n\nurlpatterns = [ \n    url(r'^games/$', views.game_collection), \n    url(r'^games/(?P<id>[0-9]+)/$', views.game_detail), \n] \n```", "```py\nfrom django.conf.urls import url, include \n\nurlpatterns = [ \n    url(r'^', include('games.urls')), \n] \n```", "```py\n    python manage.py runserver\n```", "```py\n    Performing system checks...\n\n    System check identified no issues (0 silenced).\n    October 24, 2018 - 19:58:03\n    Django version 2.1.2, using settings 'games_service.settings'\n    Starting development server at http://127.0.0.1:8000/\n    Quit the server with CONTROL-C. \n```", "```py\n    http \":8000/games/\"\n```", "```py\n    curl -iX GET \"localhost:8000/games/\"\n```", "```py\n    HTTP/1.1 200 OK\n    Content-Length: 438\n    Content-Type: application/json\n    Date: Wed, 24 Oct 2018 20:25:45 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    X-Frame-Options: SAMEORIGIN\n\n    [\n        {\n            \"esrb_rating\": \"E (Everyone)\",\n            \"id\": 1,\n            \"name\": \"PAW Patrol: On A Roll!\",\n            \"played_once\": false,\n            \"played_times\": 0,\n            \"release_date\": \"2018-10-24T17:47:30.177610Z\"\n        },\n        {\n            \"esrb_rating\": \"M (Mature)\",\n            \"id\": 3,\n            \"name\": \"Red Dead Redemption 2\",\n            \"played_once\": false,\n            \"played_times\": 0,\n            \"release_date\": \"2018-10-26T01:01:00.776594Z\"\n        },\n        {\n            \"esrb_rating\": \"T (Teen)\",\n            \"id\": 2,\n            \"name\": \"Spider-Man\",\n            \"played_once\": false,\n            \"played_times\": 0,\n            \"release_date\": \"2018-10-24T17:47:30.177610Z\"\n        }\n    ]\n\n```", "```py\n    [24/Oct/2018 20:25:45] \"GET /games/ HTTP/1.1\" 200 438 \n```", "```py\n    http \":8000/games/3/\"\n```", "```py\n    curl -iX GET \"localhost:8000/games/3/\"\n```", "```py\n    HTTP/1.1 200 OK\n    Content-Length: 148\n    Content-Type: application/json\n    Date: Wed, 24 Oct 2018 22:04:50 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": \"M (Mature)\",\n        \"id\": 3,\n        \"name\": \"Red Dead Redemption 2\",\n        \"played_once\": false,\n        \"played_times\": 0,\n        \"release_date\": \"2018-10-26T01:01:00.776594Z\"\n    }\n\n```", "```py\n    http \":8000/games/888/\"\n```", "```py\n    curl -iX GET \"localhost:8000/games/888/\"\n```", "```py\n    HTTP/1.1 404 Not Found\n    Content-Length: 0\n    Content-Type: text/html; charset=utf-8\n    Date: Wed, 24 Oct 2018 22:12:02 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    X-Frame-Options: SAMEORIGIN\n\n```", "```py\nhttp POST \":8000/games/\" name='Fortnite' esrb_rating='T (Teen)' release_date='2017-05-18T03:02:00.776594Z'\n\n```", "```py\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Fortnite\", \"esrb_rating\":\"T (Teen)\", \"release_date\": \"2017-05-18T03:02:00.776594Z\"}' \"localhost:8000/games/\"\n\n```", "```py\n{ \n    \"name\": \"Fortnite\",  \n    \"esrb_rating\": \"T (Teen)\",  \n    \"release_date\": \"2017-05-18T03:02:00.776594Z\" \n}\n```", "```py\n    HTTP/1.1 201 Created\n    Content-Length: 133\n    Content-Type: application/json\n    Date: Wed, 24 Oct 2018 22:18:36 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": \"T (Teen)\",\n        \"id\": 4,\n        \"name\": \"Fortnite\",\n        \"played_once\": false,\n        \"played_times\": 0,\n        \"release_date\": \"2017-05-18T03:02:00.776594Z\"\n    }\n\n```", "```py\n http PUT \":8000/games/4/\" name='Fortnite Battle Royale' esrb_rating='T (Teen)' played_once=true played_times=3 release_date='2017-05-20T03:02:00.776594Z'\n\n```", "```py\ncurl -iX PUT -H \"Content-Type: application/json\" -d '{\"name\":\"Fortnite Battle Royale\", \"esrb_rating\":\"T (Teen)\", \"played_once\": \"true\", \"played_times\": 3, \"release_date\": \"2017-05-20T03:02:00.776594Z\"}' \"localhost:8000/games/4/\"\n\n```", "```py\n{  \n    \"name\": \"Fortnite Battle Royale\",  \n    \"esrb_rating\": \"T (Teen)\",  \n    \"played_once\": true,\n     \"played_times\": 3, \n    \"release_date\": \"2017-05-20T03:02:00.776594Z\" \n} \n```", "```py\n    HTTP/1.1 200 OK\n    Content-Length: 146\n    Content-Type: application/json\n    Date: Wed, 24 Oct 2018 22:27:36 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": \"T (Teen)\",\n        \"id\": 4,\n        \"name\": \"Fortnite Battle Royale\",\n        \"played_once\": true,\n        \"played_times\": 3,\n        \"release_date\": \"2017-05-20T03:02:00.776594Z\"\n    }\n\n```", "```py\n    http PUT \":8000/games/4/\" name='Fortnite Forever'\n```", "```py\n  curl -iX PUT -H \"Content-Type: application/json\" -d '{\"name\":\"Fortnite Forever\"}' \"localhost:8000/games/4/\"\n\n```", "```py\n{  \n    \"name\": \"Fortnite Forever\",  \n} \n```", "```py\n    HTTP/1.1 400 Bad Request\n    Content-Length: 86\n    Content-Type: application/json\n    Date: Wed, 24 Oct 2018 22:33:37 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": [\n            \"This field is required.\"\n        ],\n        \"release_date\": [\n            \"This field is required.\"\n        ]\n    }\n\n```", "```py\n    http DELETE \":8000/games/4/\"  \n```", "```py\n    curl -iX DELETE \"localhost:8000/games/4/\"  \n```", "```py\n    HTTP/1.1 204 No Content\n    Content-Length: 0\n    Content-Type: text/html; charset=utf-8\n    Date: Wed, 24 Oct 2018 22:39:15 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    X-Frame-Options: SAMEORIGIN\n```"]