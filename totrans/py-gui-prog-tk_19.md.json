["```py\nCREATE TABLE musicians (\n  id SERIAL PRIMARY KEY,\n  name TEXT NOT NULL,\n  born DATE,\n  died DATE CHECK(died > born)\n ); \n```", "```py\nINSERT INTO musicians (name, born, died)\nVALUES\n  ('Robert Fripp','1946-05-16', NULL),\n  ('Keith Emerson', '1944-11-02', '2016-03-11'),\n  ('Greg Lake', '1947-11-10', '2016-12-7'),\n  ('Bill Bruford', '1949-05-17', NULL),\n  ('David Gilmour', '1946-03-06', NULL); \n```", "```py\nINSERT INTO musicians (name, born, died)\nVALUES\n  (\"Brian May\", \"1947-07-19\", NULL);\n-- Produces error:\nERROR:  column \"Brian May\" does not exist \n```", "```py\nCREATE TABLE instruments (id SERIAL PRIMARY KEY, name TEXT NOT NULL);\nINSERT INTO instruments (name)\nVALUES ('bass'), ('drums'), ('guitar'), ('keyboards'), ('sax'); \n```", "```py\nALTER TABLE musicians\n  ADD COLUMN main_instrument INT REFERENCES instruments(id); \n```", "```py\nSELECT name FROM musicians; \n```", "```py\nSELECT * FROM musicians; \n```", "```py\nSELECT name FROM musicians WHERE died IS NULL; \n```", "```py\nSELECT name FROM musicians WHERE born < '1945-01-01' AND died IS NULL; \n```", "```py\nSELECT name, age(born), (died - born)/365 AS \"age at death\"\nFROM musicians\nORDER BY born DESC; \n```", "```py\nDELETE FROM instruments WHERE id=5; \n```", "```py\nUPDATE musicians SET main_instrument=3 WHERE id=1;\nUPDATE musicians SET main_instrument=2 WHERE name='Bill Bruford'; \n```", "```py\nUPDATE musicians\n  SET main_instrument=4, name='Keith Noel Emerson'\n  WHERE name LIKE 'Keith%'; \n```", "```py\nUPDATE musicians SET main_instrument=1 WHERE LOWER (name) LIKE '%lake'; \n```", "```py\nUPDATE musicians\nSET main_instrument=(\n  SELECT id FROM instruments WHERE name='guitar'\n)\nWHERE name IN ('Robert Fripp', 'David Gilmour'); \n```", "```py\nSELECT name FROM musicians\nWHERE main_instrument IN (\n  SELECT id FROM instruments WHERE name LIKE '%r%'\n) \n```", "```py\nSELECT name\nFROM (\n  SELECT * FROM musicians WHERE died IS NULL\n) AS living_musicians; \n```", "```py\nSELECT musicians.name, instruments.name as main_instrument\nFROM musicians\n  JOIN instruments ON musicians.main_instrument = instrument.id; \n```", "```py\nSELECT instruments.name AS instrument, musicians.name AS musician\nFROM instruments\n  JOIN musicians ON musicians.main_instrument = instruments.id; \n```", "```py\nSELECT instruments.name AS instrument,\n  count(musicians.id) as musicians\nFROM instruments\n  JOIN musicians ON musicians.main_instrument = instruments.id\nGROUP BY instruments.name; \n```", "```py\nCREATE TABLE bands (id SERIAL PRIMARY KEY, name TEXT NOT NULL);\nINSERT INTO bands(name)\nVALUES ('ABWH'), ('ELP'), ('King Crimson'), ('Pink Floyd'), ('Yes'); \n```", "```py\nCREATE TABLE musicians_bands (\n  musician_id INT REFERENCES musicians(id),\n  band_id INT REFERENCES bands(id),\n  PRIMARY KEY (musician_id, band_id)\n);\nINSERT INTO musicians_bands(musician_id, band_id)\nVALUES (1, 3), (2, 2), (3, 2), (3, 3),\n  (4, 1), (4, 2), (4, 5), (5,4); \n```", "```py\nSELECT musicians.name, array_agg(bands.name) AS bands\nFROM musicians\n  JOIN musicians_bands ON musicians.id = musicians_bands.musician_id\n  JOIN bands ON bands.id = musicians_bands.band_id\nGROUP BY musicians.name\nORDER BY musicians.name ASC; \n```", "```py\nUPDATE instruments SET id=id+1;\nUPDATE musicians SET main_instrument=main_instrument+1;\nINSERT INTO instruments(id, name) VALUES (1, 'Vocals'); \n```", "```py\n**BEGIN****;**\nUPDATE instruments SET id=id+1;\nUPDATE musicians SET main_instrument=main_instrument+1;\nINSERT INTO instruments(id, name) VALUES (1, 'Vocals');\n**COMMIT****;** \n```"]