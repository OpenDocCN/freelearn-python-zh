["```py\nsudo apt-get install alsa-utils\n```", "```py\nsudo nano /etc/modules\n```", "```py\nsnd_bcm2835\n```", "```py\nsudo apt-get install mplayer\n```", "```py\nsudo nano /etc/mplayer/mplayer.conf\n```", "```py\nnolirc=yes\n```", "```py\nsudo apt-get install festvox-rablpc16k\n```", "```py\nimport os\nfrom time import sleep\nos.system('echo \"hello! i am raspberry pi robot\"|festival --tts ')\nsleep(2)\nos.system('echo \"how are you?\"| festival --tts ')\nsleep(2)\nos.system('echo \"I am having fun.\"| festival --tts ')\nsleep(2)\n```", "```py\nimport os\n```", "```py\nos.system('echo \"Hello from the other side\"|festival --tts ')\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nImport os\nGPIO.setmode(GPIO.BCM)\nPIR = 13\nGPIO.setup(PIR,GPIO.IN)\nwhile True:\n\n  if GPIO.input(PIR) == 1 :\n     os.system('echo \"Hello, welcome to my house\"|festival --tts ')\n     time.sleep(0.2)\n     os.system('echo \"If you are a delivery agent then please leave the package here\"|festival --tts ')\n     time.sleep(0.2)\n     os.system('echo \"If you are a guest then I'm sorry I have to leave I will be back after 7pm\"|festival --tts ')\n     time.sleep(0.2)\n     os.system('echo \"also Kindly don't step over the grass, its freshly grown and needs some time\"|festival --tts ')\n     time.sleep(1)\n     os.system('echo \"Thank you !\"|festival --tts ')\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nImport os\nimport cv2\nimport numpy as np\nimport cv2\n\nfaceDetect = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\ncam = cv2.VideoCapture(0)\nrec = cv2.face.LBPHFaceRecognizer_create()\nrec.read(\"recognizer/trainningData.yml\")\nid = 0\n\nwhile True:\n\n  GPIO.setmode(GPIO.BCM)\nPIR = 13\nGPIO.setup(PIR, GPIO.IN)\n\nif GPIO.input(PIR) == 1:\n\n  ret, img = cam.read()\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\nfaces = faceDetect.detectMultiScale(gray, 1.3, 5)\nfor (x, y, w, h) in faces:\n  cv2.rectangle(img, (x, y), (x + w, y + h), (0, 0, 255), 2)\nid, conf = rec.predict(gray[y: y + h, x: x + w])\n\nif id == 1:\n  id = \"BEN\"\nos.system('echo \"Hello, welcome to the house BEN\"|festival --tts ')\ntime, sleep(0.2)\n\nelse :\n\n  os.system('echo \"If you are a delivery agent then please leave the package here\"|festival --tts ')\ntime, sleep(0.2)\n\nos.system('echo \"If you are a guest then I'\n    m sorry I have to leave I will be back after 7 pm \"|festival --tts ')\n    time, sleep(0.2)\n\n    os.system('echo \"also Kindly don'\n      t step over the grass, its freshly grown and needs some time \"|festival --tts ')\n      time.sleep(1)\n\n      os.system('echo \"Thank you !\"|festival --tts ') cv2.imshow(\"face\", img) if cv2.waitKey(1) == ord('q'):\n      break cam.release()\n\n      cv2.destroyAllWindows()\nfaceDetect = cv2.CascadeClassifier('haarcascade_frontalface_default.xml')\n```", "```py\ncam = cv2.VideoCapture(0)\nrec = cv2.face.LBPHFaceRecognizer_create()\n```", "```py\n ret, img = cam.read()\n```", "```py\ngray = cv2.cvtColor(img,cv2.COLOR_BGR2GRAY)\nfaces = faceDetect.detectMultiScale(gray,1.3,5)\n```", "```py\n for (x,y,w,h) in faces:\n     cv2.rectangle(img, (x,y), (x+w, y+h), (0,0,255), 2)\n     id, conf = rec.predict(gray[y:y+h, x:x+w])\n     if id==1:\n         id = \"BEN\" \n         os.system('echo \"Hello, welcome to my house BEN\"|festival --tts ')\n         time, sleep(0.2)\n```", "```py\nos.system('echo \"If you are a delivery agent then please leave the package here\"|festival --tts ')\ntime, sleep(0.2)\n\nos.system('echo \"If you are a guest then I'm sorry I have to leave I will be back after 7pm\"|festival --tts ')\n time, sleep(0.2)\n\nos.system('echo \"also Kindly don't step over the grass, its freshly grown and needs some time\"|festival --tts ')\ntime.sleep(1)\n\nos.system('echo \"Thank you !\"|festival --tts ')\n```", "```py\nlsusb\n```", "```py\nalsamixer\n```", "```py\narecord -l\n```", "```py\narecord -D plughw:1,0 First.wav\n```", "```py\naplay test.wav\n```", "```py\nwget –- no-check-certificate “http://goo.gl/KrwrBa” -O PiAUISuite.tar.gz\n\ntar -xvzf PiAUISuite.tar.gz\n\ncd PiAUISuite/Install/\n\nsudo ./InstallAUISuite.sh\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nimport os\nGPIO.setmode(GPIO.BCM)\nLIGHT = 2\nGPIO.setup(LIGHT,GPIO.OUT)\nGPIO.output(LIGHT, GPIO.HIGH)\nos.system('echo \"LIGHTS TURNED ON \"|festival --tts')\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nimport os\nGPIO.setmode(GPIO.BCM)\nLIGHT = 23\nGPIO.setup(LIGHT,GPIO.OUT)\nGPIO.output(LIGHT, GPIO.LOW)\nos.system('echo \"LIGHTS TURNED OFF \"|festival --tts')\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nImport os\nGPIO.setmode(GPIO.BCM)\nFAN = 22\nGPIO.setup(FAN,GPIO.OUT)\nGPIO.output(LIGHT, GPIO.HIGH)\nos.system('echo \"FAN TURNED ON \"|festival --tts')\n```", "```py\nimport RPi.GPIO as GPIO\nimport time\nImport os\nGPIO.setmode(GPIO.BCM)\nFAN = 22\nGPIO.setup(FAN,GPIO.OUT)\nGPIO.output(LIGHT, GPIO.LOW)os.system('echo \"FAN TURNED OFF \"|festival --tts')\n```", "```py\nvoicecommand -c \n```", "```py\nvoicecommand -e. \n```", "```py\nLIGHT_ON\n\nLIGHT_OFF\n\nFAN_ON\n\nFAN_OFF\n```", "```py\nLIGHT ON = sudo python lighton.py\n\nLIGHT OFF = sudo python lightoff.py\n\nFAN ON = sudo python fanon.py\n\nFAN OFF = sudo python fanoff.py\n```"]