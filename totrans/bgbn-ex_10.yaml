- en: Chapter 10. Building Your Own Robot
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter we will see how to build our own robot using BeagleBone Black
    with Motors and Motor Driver IC interfaced with it. First we will learn about
    DC motors, followed by the L293D motor driver IC that will help us drive the DC
    motors. Then we will see how we can stream live video on a web page from the camera
    connected to the BeagleBone board. At the end we will build our own telecontrolled
    robot that you can control from a web page with a live video feed streaming from
    the camera connected to the BeagleBone Black.
  prefs: []
  type: TYPE_NORMAL
- en: 'The contents of this chapter are divided into:'
  prefs: []
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DC motors and the L293D motor driver IC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Live video streaming on the BeagleBone board
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Advanced Project: A tele-controlled robot with live video streaming'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Prerequisites
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This topic will cover the parts you will need to get started with building the
    robot. These materials can be purchased from your local electrical hobby store
    or by ordering online from websites like Adafruit, Sparkfun, Seed Studio and so
    on.
  prefs: []
  type: TYPE_NORMAL
- en: Materials Needed
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 1x BeagleBone Black
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x microSD card with latest version of Debian flashed on it to boot the BeagleBone
    board from a microSD card
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x 5V DC, 2A power supply/mobile power bank with USB output of 5V 2A or more
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x USB WiFi dongle
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x BreadBoard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 2x DC motors 50 to 100 RPM range operating at 12V
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x L293D motor driver IC
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x USB camera
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x USB hub
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x 12V or 9V battery
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x USB cable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 1x DC barrel jack
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting wires
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: DC motors
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A DC motor is a motor that runs using a DC power supply.
  prefs: []
  type: TYPE_NORMAL
- en: '![DC motors](img/4602_10_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding picture, it has two terminal wires. We can call one
    of these terminal wire positive and the other one negative. Usually, these wires
    are marked red and black where red is positive and black is negative. Although
    these wires are marked positive and negative, unlike the battery, where these
    polarities can't be mixed, here in the DC motors they can be mixed.
  prefs: []
  type: TYPE_NORMAL
- en: 'Say, for example, on a motor, if the positive wire is connected to the positive
    terminal of the battery and the negative wire is connected to the negative terminal
    of the battery, or the power source, the motor rotates in a clockwise direction.
    When you reverse the connection, say from the positive terminal of the motor to
    the negative terminal of the battery and the negative terminal of the motor to
    the positive terminal of the battery, then the motor will rotate in an anti-clockwise
    direction, as shown in the following picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![DC motors](img/4602_10_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: While the polarity of the voltage source's connection to terminals of the motor
    controls the DC motor's direction of rotation, the magnitude of the DC voltage
    source determines the speed of it.
  prefs: []
  type: TYPE_NORMAL
- en: But changing the polarity and switching the circuit on and off every time manually
    can be hectic job, and we need an electronic circuit that can help us do this
    without having to physically switch the connections. This is where motor driver
    ICs will come in useful to complete the task with digital inputs. One such motor
    driver IC is the L293D which will be discussing next.
  prefs: []
  type: TYPE_NORMAL
- en: L293D motor driver IC
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As we mentioned previously, the L293D can be defined as a, H-Bridge motor driver
    circuit, which is made into a IC allowing us to drive a DC motor in either direction
    using digital inputs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The pin configuration of the **L293D** is as shown in the following picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![L293D motor driver IC](img/4602_10_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: As shown in the preceding picture, in the L293D there are four input pins and
    four output pins. The two input pins, pin two and seven regulate the rotation
    of the motor connected to output pins three and six. Similarly, the input pins
    on the right, pin fifteen and ten regulate the rotation of the motor connected
    to output pins eleven and fourteen. The enable pins one and two, on the left and
    the right side of the IC on pin one and nine of the IC enables the operation of
    the output based on the input on that side of the IC. The motors rotate based
    on the inputs provided across the input pins as Logic `0` and Logic `1`. Supply
    **5V** to the **Vcc** pin of the IC for its operation, and connect the ground
    pins to the ground and negative pins of the power supply. And finally, you need
    to connect the positive of the DC power source/battery to the **Vss** pin to provide
    a power supply to the motor, and connect the negative of the power supply to the
    **GND** pin.
  prefs: []
  type: TYPE_NORMAL
- en: 'Consider the circuit connection as shown in the following picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![L293D motor driver IC](img/4602_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'For the circuit shown previously, when input 1 is LOW and input 2 is HIGH,
    the motor 1 will rotate in a clockwise direction, similarly when both inputs 1
    and 2 are LOW or HIGH the motor will not rotate. This can be explained using a
    logic table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Input 1 | Input2 | Motor 1 Running Direction |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| HIGH | LOW | ANTI-CLOCKWISE |'
  prefs: []
  type: TYPE_TB
- en: '| LOW | HIGH | CLOCKWISE |'
  prefs: []
  type: TYPE_TB
- en: '| HIGH | HIGH | IDLE – NO ROTATION |'
  prefs: []
  type: TYPE_TB
- en: '| LOW | LOW | IDLE – NO ROTATION |'
  prefs: []
  type: TYPE_TB
- en: 'Similarly for input 3 and input 4 the output will be as shown in the following
    table:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Input 3 | Input4 | Motor 2 Running Direction |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| HIGH | LOW | ANTI-CLOCKWISE |'
  prefs: []
  type: TYPE_TB
- en: '| LOW | HIGH | CLOCKWISE |'
  prefs: []
  type: TYPE_TB
- en: '| HIGH | HIGH | IDLE – NO ROTATION |'
  prefs: []
  type: TYPE_TB
- en: '| LOW | LOW | IDLE – NO ROTATION |'
  prefs: []
  type: TYPE_TB
- en: You can test it by connecting it to the BeagleBone Black by writing a similar
    Python code to our blink code or the home automation code that we tried in our
    previous chapters. With this knowledge, you will have a clear idea of the concept
    of how the L293D operates. You can look at the datasheet of the L293D IC to get
    more details about the specifications and ratings of the IC. You can get this
    datasheet provided by the IC manufacturer on the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: We will use the same circuit interfaced with the BeagleBone board at the end
    of the chapter to the build the robot in our final project. Now let's go ahead
    and see how we can stream video live on the BeagleBone board using the USB camera
    connected to it.
  prefs: []
  type: TYPE_NORMAL
- en: Live video streaming on the BeagleBone board
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To stream live video from Logitech HD webcam C270 USB camera, connected via
    local server to the BeagleBone board you need to have a software package that
    can do the job. But you also need to install some essential software before you
    download and compile the live video streaming software. Let''s get started with
    the installation of the software packages by executing the following commands
    :'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo apt-get install imagemagick`![Live video streaming on the BeagleBone
    board](img/4602_10_05.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'When you are prompted to continue the operation, type `Y`, as shown at the
    end of the preceding screenshot, and hit `Enter` to continue and finish the installation:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '`sudo apt-get install libjpeg8-dev`![Live video streaming on the BeagleBone
    board](img/4602_10_06.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sudo apt-get install subversion`![Live video streaming on the BeagleBone board](img/4602_10_07.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Now that we have installed all the prerequite softwares, let's download and
    compile the video streaming software.
  prefs: []
  type: TYPE_NORMAL
- en: 'First create a separate directory in the home directory, and put the contents
    of the streaming software inside it:'
  prefs: []
  type: TYPE_NORMAL
- en: '`mkdir mjpg`![Live video streaming on the BeagleBone board](img/4602_10_08.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now let us change our working directory to the directory we created:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cd mjpg`![Live video streaming on the BeagleBone board](img/4602_10_09.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you are in the `mjpg` directory, you can download the mjpg-streamer software
    package using the command given following from the URL mentioned in the command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`svn co https://svn.code.sf.net/p/mjpg-streamer/code/mjpg-streamer/ mjpg-streamer`![Live
    video streaming on the BeagleBone board](img/4602_10_10.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you have downloaded it there will be aa `mjpg-streamer` folder created,
    inside which you will have the source code of the software. Let''s go ahead and
    change the directory to that first:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cd mjpg-streamer`![Live video streaming on the BeagleBone board](img/4602_10_11.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now our next step will be compile the software using the `make` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`make`![Live video streaming on the BeagleBone board](img/4602_10_12.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you have successfully compiled the software without errors you can go
    ahead and run the software using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`/mjpg_streamer -i "./input_uvc.so -d /dev/video0 -n -y" -o "./output_http.so
    -w ./www"`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If the Apache server is installed on your Debian package then it might show
    an error saying **bind: Address already in use** as shown in the following screenshot
    when you execute the preceding command to run the video streaming software:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'This is due to port `8080` being used by default by the Apache server. In this
    case, to resolve the issue, we can change the port used by Apache to `8079`, or
    any other permited number as shown in the following screenshot, by changing the
    details in the `ports.conf` file:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo nano /etc/apache2/ports.conf`![Live video streaming on the BeagleBone
    board](img/4602_10_14.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you open the file you can change the `NameVirtualHost` to `8079` and `Listen`
    to `8079` port as shown in the following screenshot and save it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you save it, you need to restart the Apache server to perform the changes.
    To do that, execute the `service restart` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo service apache2 restart`![Live video streaming on the BeagleBone board](img/4602_10_16.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once you restart and get the output as shown in the preceding screenshot, it
    means the changes have been made. Now you can go ahead and run the streaming software
    by executing the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo ./mjpg_streamer -i "./input_uvc.so -d /dev/video0 -n -y" -o "./output_http.so
    -w ./www"`![Live video streaming on the BeagleBone board](img/4602_10_17.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you see the output as shown in the previous screenshot, then the streaming
    software is running properly. We can test it by visiting the local server at port
    `8080` as shown in the following screenshot. The IP address is the IP address
    of the BeagleBone Black on your router, which is same as the one we used to login
    to the BeagleBone board.
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you open the web link, you will see the streaming software''s home webpage
    as shown on the next page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The software description page with the details about which streaming software
    we are running on the BeagleBone board is shown in the previous screenshot. On
    the home page itself you can see the image captured from the camera but it''s
    a static image which is not a live stream. To see the live stream, click on the
    **Stream** button on the left and it will show you the live streamed web page
    where you can see the live feed from the camera as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Click the button **here**, which is highlighted in red saying **To see a simple
    example click here**. You will see just the video feed separately as a image element
    on an HTML page as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'A setup of the BeagleBone board with the USB camera whilst the live feed is
    being streamed is shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So, you can see that the BeagleBone and the power bank which are in front of
    the camera are visible on the live feed. If you just wave your hand in front of
    the camera you can see it live on the web page.
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have seen the live video feed on this, if you want to include it
    on any HTML page you want to create, you can do so by adding the image source
    element created by the streaming software. You get the information of that image
    source by right clicking on the browser and hitting the inspect element which
    will show the details as shown in the following screenshot. Almost all of the
    browsers we use like Chrome, IE or Mozilla shows these details now, and you can
    learn more about this by browsing the Internet.
  prefs: []
  type: TYPE_NORMAL
- en: '![Live video streaming on the BeagleBone board](img/4602_10_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The image element can be identified on the inspection block on the right side
    of the browser window where the details is mentioned as shown in the preceding
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will be using this in our project at the end of this chapter to get a live
    feed on the web page using a Flask framework and Python. Now that we know how
    to get a live feed from the USB camera and integrate it on a webpage, let's go
    ahead to the next topic in this chapter where we will be building a robot with
    live video streaming.
  prefs: []
  type: TYPE_NORMAL
- en: Advanced project – a telecontrolled robot with live video streaming
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'First connect the motor driver IC with motors, power supply as shown in the
    following circuit:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'The whole setup will look like the following picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'So you can see from the preceding picture that the BeagleBone Black is connected
    to a USB hub to which the WiFi dongle and USB camera are connected. Also the L293D
    is connected to motors of the robot and an external 12V battery is used to drive
    the motors. The input pins of L293D are connected to the BeagleBone Black to control
    the L293D. The BeagleBone Black is powered using a mobile power bank using a USB
    to DC barrel connector cable, which you can make on your own as shown in the following
    picture:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So why can't the BeagleBone board be powered using the inbuilt USB connection?.
    This is because the USB only draws 500mAh in total from the input supply, which
    isn't sufficient to power up the USB webcam and the Wi-Fi dongle.
  prefs: []
  type: TYPE_NORMAL
- en: Now, you can login into the BeagleBone Black and write the code to control the
    robot from the web page.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this project, we will not be writing the code from scratch – instead we
    will be writing it by editing the code from our home automation project from [Chapter
    6](ch06.html "Chapter 6. Home Automation Using BeagleBone"), *Home Automation
    Using BeagleBone*. So let''s go ahead to the home automation directory in the
    Linux shell after logging into it:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cd WorkSpace/HomeAutomation`![Advanced project – a telecontrolled robot with
    live video streaming](img/4602_10_26.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you list the contents in the directory using the `ls` command, you will
    see the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you are in the home automation directory, let''s first edit the HTML template:'
  prefs: []
  type: TYPE_NORMAL
- en: '`cd templates`![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_28.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Now we can go ahead and edit the `main.html` file that we created in our home
    automation project and then save it as `Robot.html` file, as shown in following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Once you have opened the `main.html` file, using the nano text editor, edit
    the content to make it look like the following screen shot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: You can see that we have added the image source element from our previous topic
    into this HTML file and added four buttons. Once you have saved the file, you
    can go ahead and make the changes in the Python file that we need to run in order
    to create a server using Python.
  prefs: []
  type: TYPE_NORMAL
- en: 'First let us go back to the home automation directory:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now let''s open the `GPIOControlWebApp.py` file that we created in the home
    automation project:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Edit the file as shown in the following screenshot and save it as `Robot.py`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_33.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Now you can run the Python code by using the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sudo python Robot.py`![Advanced project – a telecontrolled robot with live
    video streaming](img/4602_10_34.jpg)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Just running this code is not enough. We also need to run the streaming software
    to give our project the live video feed. So, login to the BeagleBone Black using
    another PuTTY session, and run the streaming software as shown in the following
    screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_35.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'When the streaming software and the Python code are running simulatneously,
    you can go ahead and check the server file by pointing your BeagleBone Black''s
    IP address at port `5000`, from any browser, via a PC or mobile phone connected
    to the same local network same as to which the the BeagleBone board is connected.
    You will see the output shown in the picture on the next page, from where you
    can see the live feed and control the robot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_36.jpg)'
  prefs: []
  type: TYPE_IMG
- en: So, in the preceding screenshot you can see the robot's wheels. The setup is
    the same as that shown in the picture at the beginning of this topic, where the
    camera was pointing at the wheels of the robot. This will show you how the wheel
    movement works when you click on each button on the web page. We will discuss
    this next where you can see the wheel movement on the images themselves, as the
    wheel that is running will look blurred.
  prefs: []
  type: TYPE_NORMAL
- en: When you click for the forward button. Both motors run as discussed out previous
    chapter regarding the differential drive system. That is the motors will drive
    the robot in forward direction, you can see the difference in the following screenshot
    where the motors are running when compared with the previous image shown in the
    previous page of this chapter where the wheels are idle and not running.
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_37.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'You can also see the log of the movement in the Python output when you press
    the button as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_38.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'Similarly, for turning left, the right motor needs to be running and the left
    one stopped, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_39.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'And when you press the **RIGHT** button then the **LEFT** motor is running,
    and the **RIGHT** one is stopped, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Advanced project – a telecontrolled robot with live video streaming](img/4602_10_40.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Similarly when you click on stop, both motors will be stopped. If you mount
    all these electronics on top of the robot as desired, you can make it drive around
    as a telecontrolled robot with a live feed carrying the BeagleBone Black with
    the camera. In this chapter I gave you all the resources you need to understand
    this idea. Now, you can go ahead and mount the electronics on the robot base.
    To find out how people make a simple prototyping shield with electronics soldered
    onto it on top of the hardware development boards. Just type in Google, `prototyping
    capes for BeagleBone` or `hats for raspberry pi and shields for Arduino`. Even
    though these are made for different hardware development boards like BeagleBone
    and Raspberry Pi, the same electronics can be mounted on a BeagleBone board with
    slight modifications which will help you get rid of the messy wiring. Also, try
    using the sub-process Python module to execute the shell command and start streaming
    software at the beginning of the Python code to start running the server. By using
    this sub-process you need not run two instances of PuTTY, you can finish your
    work with just one.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With that we are at the end of this chapter, where we have learnt some basics
    about DC motors and their operation, as well finding out what an L293D motor driver
    IC is, and how we can use it to control a connected DC motor connected. Next,
    we saw how to live stream video on the local server with BeagleBone Black using
    mjpg-streamer package. Finally we worked on a project where we interfaced the
    L293D motor driver IC with the BeagleBone Black, and a live streaming image source,
    to HTML templates and controlled a robot using the input buttons on the webpage
    that we created using the Python and Flask web server framework.
  prefs: []
  type: TYPE_NORMAL
