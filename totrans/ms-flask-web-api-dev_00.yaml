- en: <st c="0">Preface</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="8">Since 2009, the time I started using the framework for software project
    development, Flask remains a powerful, lightweight, seamless, and easy-to-use
    Python framework for API and web application development.</st> <st c="217">The
    non-boilerplate WSGI framework has grown its support, and now it has several utilities
    to support different features, even implementing</st> <st c="357">asynchronous
    components.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="381">The flexibility of Flask makes it the best tool for building various
    applications, from small-scale e-commerce to middle-scale enterprise applications,
    as per my experience.</st> <st c="556">The framework is also an ideal choice for
    implementing scientific applications, such as laboratory calibration and monitoring
    systems, weather forecasting systems, and many other applications that require
    XLSX and CSV automation and report and</st> <st c="800">graph generation.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="817">This book showcases Flask 3 and how it translates and upgrades all
    my previous software development specifications with previous Flask versions using
    up-to-date features.</st> <st c="989">I hope the book can help you understand
    Flask 3 and apply its components to create workarounds and provide solutions to
    challenging</st> <st c="1121">real-world problems.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1141">Who this book is for</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1162">This book is for proficient Python developers seeking a deeper
    understanding of the Flask framework as a solution for tackling enterprise challenges.</st>
    <st c="1313">It is also a great resource for Flask-savvy readers eager to learn
    more about the framework’s advanced capabilities and</st> <st c="1433">new features.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1446">What this book covers</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*<st c="1468">Chapter 1</st>*](B19383_01.xhtml#_idTextAnchor014)<st c="1478">,</st>
    *<st c="1480">A Deep Dive into the Flask Framework</st>*<st c="1516">, introduces
    Flask as a simple and lightweight Python framework for web applications and showcases
    the installation of Flask 3 to jumpstart web application development using a non-standard
    project directory structure with basic Flask features, such as the view functions,
    class-based views, database connectivity, built-in Werkzeug server and libraries,
    and custom</st> <st c="1881">environment variables.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="1903">Chapter 2</st>*](B19383_02.xhtml#_idTextAnchor047)<st c="1913">,</st>
    *<st c="1915">Adding Advanced Core Features</st>*<st c="1944">, provides the Flask
    3 core features of web applications, such as session management, data management
    using</st> **<st c="2052">Object Relational Mapping</st>** <st c="2077">(</st>**<st
    c="2079">ORM</st>**<st c="2082">), view rendition using Jinja2 templates, message
    flashing, error handling, software logging, adding static contents, and applying
    blueprint and application factory design to</st> <st c="2258">project structuring.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="2278">Chapter 3</st>*](B19383_03.xhtml#_idTextAnchor076)<st c="2288">,</st>
    *<st c="2290">Creating REST Web Services</st>*<st c="2316">, introduces API development
    using Flask 3 with request and response handling, implementation of JSON encoders
    and decoders for parsing the incoming request body and outgoing response, access
    of request and application context using</st> `<st c="2549">@before_request</st>`
    <st c="2564">and</st> `<st c="2569">@after_request</st>` <st c="2583">events,
    exception handling, and implementation of client applications to consume the</st>
    <st c="2669">REST services.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="2683">Chapter 4</st>*](B19383_04.xhtml#_idTextAnchor087)<st c="2693">,</st>
    *<st c="2695">Utilizing Flask Extensions</st>*<st c="2721">, discusses how to
    save development time and effort by using helpful and efficient Flask modules
    in replacement to their ground-up equivalents, such as Flask-Session for non-browser-based
    session handling, Bootstrap-Flask for providing the presentation layer, Flask-WTF
    for building model-based web forms, Flask-Caching for creating cache, Flask-Mail
    for sending emails, and Flask-Migrate for building the database schema from</st>
    <st c="3148">data models.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="3160">Chapter 5</st>*](B19383_05.xhtml#_idTextAnchor111)<st c="3170">,</st>
    *<st c="3172">Building Asynchronous Transactions</st>*<st c="3206">, explains
    the asynchronous features of Flask 3, which includes creating asynchronous view
    and API endpoint functions, implementing an asynchronous repository layer using
    SQLAlchemy, building asynchronous background tasks using Celery and Redis, implementing
    WebSocket and</st> `<st c="3510">asyncio</st>` <st c="3517">utilities, applying
    asynchronous signals for triggering transactions, and applying reactive programming,
    and introduces Quart as the ASGI-variant of</st> <st c="3667">Flask 3.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="3675">Chapter 6</st>*](B19383_06.xhtml#_idTextAnchor143)<st c="3685">,</st>
    *<st c="3687">Developing Computational and Scientific Applications</st>*<st c="3739">,
    discusses the use of Flask in building scientific applications with XLSX and CSV
    uploading and tabular and graphical reports using popular Python libraries such
    as</st> `<st c="3905">numpy</st>`<st c="3910">,</st> `<st c="3912">pandas</st>`<st
    c="3918">,</st> `<st c="3920">matplotlib</st>`<st c="3930">,</st> `<st c="3932">seaborn</st>`<st
    c="3939">,</st> `<st c="3941">scipy</st>`<st c="3946">, and</st> `<st c="3952">sympy</st>`<st
    c="3957">, JavaScript libraries such as Chart.js, Bokeh, and Plotly, LaTeX tools
    for PDF generation, Celery and Redis for time-expensive background computations,
    and other scientific tools, such</st> <st c="4143">as Julia.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="4152">Chapter 7</st>*](B19383_07.xhtml#_idTextAnchor177)<st c="4162">,</st>
    *<st c="4164">Using Non-Relational Data Storage</st>*<st c="4197">, explains how
    Flask can manage non-relational and big data using popular NoSQL databases, such
    as Apache HBase/Hadoop, Apache Cassandra, Redis, MongoDB, Couchbase,</st> <st
    c="4362">and Neo4J.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="4372">Chapter 8</st>*](B19383_08.xhtml#_idTextAnchor218)<st c="4382">,</st>
    *<st c="4384">Building Workflows with Flask</st>*<st c="4413">, discusses how
    to implement non-BPMN and BPMN workflows with Flask 3, using Celery and Redis,
    SpiffWorkflow, Zeebe server from Camunda, Airflow 2,</st> <st c="4561">and Temporal.io.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="4577">Chapter 9</st>*](B19383_09.xhtml#_idTextAnchor256)<st c="4587">,</st>
    *<st c="4589">Securing Flask Applications</st>*<st c="4616">, provides various
    ways to secure web-based and API-based Flask applications, such as implementing
    authentication and authorization mechanisms using HTTP Basic, Digest, and Bearer-token
    authentication schemes, OAuth2 authorization schemes, and Flask-Login; utilizing
    encoding/decoding and encryption/decryption libraries to protect user credentials;
    applying form validation and data sanitation to avoid different web attacks; replacing
    HTTP with the secured HTTPS to run applications; and controlling response headers
    to restrict or limit</st> <st c="5156">user access.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="5168">Chapter 10</st>*](B19383_10.xhtml#_idTextAnchor281)<st c="5179">,</st>
    *<st c="5181">Creating Test Cases for Flask</st>*<st c="5210">, provides techniques
    for testing with or without mocking the Flask 3 components, such as model classes,
    repository transactions, native services, view and API endpoint functions, database
    connectivity, asynchronous processes, and WebSockets, using the</st> <st c="5463">PyTest
    framework.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="5480">Chapter 11</st>*](B19383_11.xhtml#_idTextAnchor306)<st c="5491">,</st>
    *<st c="5493">Deploying Flask Applications</st>*<st c="5521">, discusses different
    options for deploying and running a web or API application, which includes using
    Gunicorn for standard and asynchronous Flask applications, uWSGI, the Docker platform
    through Docker Compose and Kubernetes deployments, and Apache</st> <st c="5772">HTTP
    Server.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="5784">Chapter 12</st>*](B19383_12.xhtml#_idTextAnchor322)<st c="5795">,</st>
    *<st c="5797">Integrating Flask with Other Tools and Frameworks</st>*<st c="5846">,
    provides solutions for integrating Flask applications into different popular tools,
    such as GraphQL, React client applications, and Flutter mobile applications, and
    for building sub-applications built from Django, FastAPI, Tornado, and Flask frameworks
    within a microservice application using Flask’s</st> <st c="6149">interoperability
    feature.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="6174">To get the most out of this book</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="6207">To fully grasp the initial chapters of the book, you should have
    a background in Python web and API programming using any framework or a little
    background in Flask.</st> <st c="6373">But having a background in creating scripts
    using standard Python can also help you at least understand the first chapter,
    which is a jumpstart on how to use the Python language to build a web application
    using basic Flask concepts.</st> <st c="6606">Experienced developers can use the
    book to enrich their Flask experience further with the new utility classes and
    functions of the Flask</st> <st c="6743">3.x framework.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '| **<st c="6757">Software/hardware covered in</st>** **<st c="6787">the book</st>**
    | **<st c="6795">Operating</st>** **<st c="6806">system requirements</st>** |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6825">Python 3.11.x</st> | <st c="6839">Windows 10,</st> <st c="6852">at
    least</st> |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6860">React 18.3.1</st> | <st c="6873">Ubuntu (using PowerShell</st>
    <st c="6899">and WSL2)</st> |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6908">Flutter 3.19.5</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6923">PostgreSQL 13.4</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6939">MongoDB Community</st> <st c="6958">Server 7.0.11</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6971">Redis server</st> <st c="6985">7.2.3 (Ubuntu)</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="6999">Redis server</st> <st c="7013">3.0.504 (Windows)</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7030">HBase/Hadoop 2.5.5</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7049">Couchbase 7.2.0</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7065">Cassandra 4.1.5</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7081">Neo4J</st> <st c="7088">Desktop 1.5.8</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7101">Julia 1.9.2</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7113">Docker 25.0.3</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7127">Kubernetes</st> <st c="7139">5.0.4 (Docker-bundled)</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7161">Zeebe</st> <st c="7168">1.1.0 (Docker)</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7182">Airflow 2.5</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7194">Temporal.io</st> <st c="7207">server 1.22.0</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7220">Apache HTTP</st> <st c="7233">Server 2.4</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7243">Jaeger 1.5</st> |  |'
  prefs: []
  type: TYPE_TB
- en: '| <st c="7254">VS</st> <st c="7258">Code 1.88.0</st> |  |'
  prefs: []
  type: TYPE_TB
- en: <st c="7269">Optionally, it would help if you use a licensed Microsoft Excel
    to open XLSX and CSV files for</st> [*<st c="7365">Chapter 6</st>*](B19383_06.xhtml#_idTextAnchor143)
    <st c="7374">and Foxit PDF Reader for the generated</st> <st c="7414">PDF files.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7424">If you are using the digital version of this book, we advise
    you to type the code yourself or access the code from the book’s GitHub repository
    (a link is available in the next section).</st> <st c="7612">Doing so will help
    you avoid any potential errors related to the copying and pasting</st>** **<st
    c="7697">of code.</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7705">We advise you to install the specified Python version to avoid
    unexpected errors related to version incompatibilities.</st> <st c="7825">Also,
    it will be advisable to download and read the code from GitHub while reading the
    chapters to understand the discussions.</st> <st c="7952">The code in GitHub is
    just a prototype and may serve as a guide to build your versions of</st> <st c="8042">the
    applications.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8059">Download the example code files</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="8091">You can download the example code files for this book from GitHub
    at</st> [<st c="8161">https://github.com/PacktPublishing/Mastering-Flask-Web-Development</st>](https://github.com/PacktPublishing/Mastering-Flask-Web-Development)<st
    c="8227">. If there’s an update to the code, it will be updated in the</st> <st
    c="8289">GitHub repository.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8307">We also have other code bundles from our rich catalog of books
    and videos available at</st> [<st c="8395">https://github.com/PacktPublishing/</st>](https://github.com/PacktPublishing/)<st
    c="8430">. Check</st> <st c="8438">them out!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8447">Conventions used</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="8464">There are a number of text conventions used throughout</st> <st
    c="8520">this book.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '`<st c="8530">Code in text</st>`<st c="8543">: Indicates code words in text,
    database table names, folder names, filenames, file extensions, pathnames, dummy
    URLs, user input, and Twitter handles.</st> <st c="8696">Here is an example: “However,
    to fully use this feature, install the</st> `<st c="8765">flask[async]</st>` <st
    c="8777">module using the following</st> `<st c="8805">pip</st>` <st c="8808">command:”</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="8818">A block of code is set</st> <st c="8842">as follows:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: <st c="9067">When we wish to draw your attention to a particular part of a code
    block, the relevant lines or items are set</st> <st c="9178">in bold:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: <st c="9372">Any command-line input or output is written</st> <st c="9417">as
    follows:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**<st c="9453">Bold</st>**<st c="9458">: Indicates a new term, an important
    word, or words that you see onscreen.</st> <st c="9534">For instance, words in
    menus or dialog boxes appear in</st> **<st c="9589">bold</st>**<st c="9593">.
    Here is an example: “Clicking this option will lead you to the</st> **<st c="9658">Enter
    interpreter path…</st>** <st c="9681">menu command and, eventually, to the</st>
    **<st c="9719">Find…</st>** <st c="9724">option.”</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9733">Tips or important notes</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9757">Appear like this.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="9775">Get in touch</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="9788">Feedback from our readers is</st> <st c="9818">always welcome.</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="9833">General feedback</st>**<st c="9850">: If you have questions
    about any aspect of this book, email us at</st> [<st c="9918">customercare@packtpub.com</st>](mailto:customercare@packtpub.com)
    <st c="9943">and mention the book title in the subject of</st> <st c="9989">your
    message.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="10002">Errata</st>**<st c="10009">: Although we have taken every care
    to ensure the accuracy of our content, mistakes do happen.</st> <st c="10105">If
    you have found a mistake in this book, we would be grateful if you would report
    this to us.</st> <st c="10200">Please visit</st> [<st c="10213">www.packtpub.com/support/errata</st>](http://www.packtpub.com/support/errata)
    <st c="10244">and fill in</st> <st c="10257">the form.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="10266">Piracy</st>**<st c="10273">: If you come across any illegal
    copies of our works in any form on the internet, we would be grateful if you would
    provide us with the location address or website name.</st> <st c="10444">Please
    contact us at</st> [<st c="10465">copyright@packtpub.com</st>](mailto:copyright@packtpub.com)
    <st c="10487">with a link to</st> <st c="10503">the material.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="10516">If you are interested in becoming an author</st>**<st c="10560">:
    If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, please</st> <st c="10685">visit</st> [<st c="10691">authors.packtpub.com</st>](http://authors.packtpub.com)<st
    c="10711">.</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10712">Share Your Thoughts</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="10732">Once you’ve read</st> *<st c="10750">Mastering Flask Web and API
    Development</st>*<st c="10789">, we’d love to hear your thoughts!</st> <st c="10824">Please</st>
    [<st c="10831">click here to go straight to the Amazon review page</st>](https://packt.link/r/1-837-63322-3)
    <st c="10882">for this book and share</st> <st c="10907">your feedback.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="10921">Your review is important to us and the tech community and will
    help us make sure we’re delivering excellent</st> <st c="11030">quality content.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11046">Download a free PDF copy of this book</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="11084">Thanks for purchasing</st> <st c="11107">this book!</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11117">Do you like to read on the go but are unable to carry your print</st>
    <st c="11183">books everywhere?</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11200">Is your e-book purchase not compatible with the device of</st>
    <st c="11259">your choice?</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11271">Don’t worry!, Now with every Packt book, you get a DRM-free PDF
    version of that book at</st> <st c="11360">no cost.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11368">Read anywhere, any place, on any device.</st> <st c="11410">Search,
    copy, and paste code from your favorite technical books directly into</st> <st
    c="11488">your application.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11505">The perks don’t stop there, you can get exclusive access to discounts,
    newsletters, and great free content in your</st> <st c="11621">inbox daily</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11632">Follow these simple steps to get</st> <st c="11666">the benefits:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11679">Scan the QR code or visit the</st> <st c="11710">following link:</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/B19383_QR_Free_PDF.jpg)'
  prefs: []
  type: TYPE_IMG
- en: '[<st c="11746">https://packt.link/free-ebook/9781837633227</st>](https://packt.link/free-ebook/9781837633227)'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11789">Submit your proof</st> <st c="11808">of purchase.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="11820">That’s it!</st> <st c="11832">We’ll send your free PDF and other
    benefits to your</st> <st c="11884">email directly.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="0">Part 1:Learning the Flask 3.x Framework</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="40">In this part, you will learn and understand the basic and core components
    to implement Flask-accepted web and API applications, including using the Blueprints
    and application factory functions to build the proper Flask project structure.</st>
    <st c="279">This part will also teach you how to integrate Flask into the PostgreSQL
    databases using the psycopg2 and asyncpg drivers and implement the repository
    layers of your application using the native database driver or the</st> **<st
    c="497">object-relational mapping</st>** <st c="522">(</st>**<st c="524">ORM</st>**<st
    c="527">) tool.</st> <st c="536">Moreover, you will learn how to use external
    Flask modules to implement the features of your applications without spending
    much time</st> <st c="669">and effort.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="680">This part includes the</st> <st c="704">following chapters:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[*<st c="723">Chapter 1</st>*](B19383_01.xhtml#_idTextAnchor014)<st c="733">,</st>
    *<st c="735">A Deep Dive into the Flask Framework</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="771">Chapter 2</st>*](B19383_02.xhtml#_idTextAnchor047)<st c="781">,</st>
    *<st c="783">Adding Advanced Core Features</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="812">Chapter 3</st>*](B19383_03.xhtml#_idTextAnchor076)<st c="822">,</st>
    *<st c="824">Creating REST Web Services</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*<st c="850">Chapter 4</st>*](B19383_04.xhtml#_idTextAnchor087)<st c="860">,</st>
    *<st c="862">Utilizing Flask Extensions</st>*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
