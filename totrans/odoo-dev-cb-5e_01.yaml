- en: '1'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Installing the Odoo Development Environment
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To begin our Odoo development journey, we must set up our development environment
    by installing Odoo using source code that we can use to enhance, debug, and improve
    our development skills. There are several ways to set up an Odoo development environment,
    but this chapter proposes the best of them. You will find several other tutorials
    on the web explaining the other approaches. Keep in mind that this chapter is
    about setting up a development environment that has different requirements from
    a production environment; production has different parameters we must set in the
    config file, as per the volume of data and number of users in the system. We will
    cover configuration file parameters and their usage in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: If you are new to Odoo development, you must know about certain aspects of the
    Odoo ecosystem. The first recipe will give you a brief introduction to the Odoo
    ecosystem, after which we will install Odoo for development purposes.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Odoo ecosystem
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Odoo from the source
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Managing Odoo server databases
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storing the instance configuration in a file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Activating Odoo developer tools
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Updating the add-on modules list
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All the code that’s used in this chapter can be downloaded from this book’s
    GitHub repository at [https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter01](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter01).
  prefs: []
  type: TYPE_NORMAL
- en: Understanding the Odoo ecosystem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Odoo provides developers with out-of-the-box modularity and its powerful framework
    helps them build projects quickly. There are various characters in the Odoo ecosystem
    that you should be familiar with before embarking on your journey of becoming
    a successful Odoo developer.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s assume you have a system with 4 CPU cores, 8 GB of RAM, and 30 concurrent
    Odoo users.
  prefs: []
  type: TYPE_NORMAL
- en: To determine the number of workers needed, divide the number of users by 6\.
    In this case, 30 users divided by 6 equals 5, which is the theoretical number
    of workers required.
  prefs: []
  type: TYPE_NORMAL
- en: To calculate the theoretical maximum number of workers, multiply the number
    of CPU cores by 2 and add 1\. For 4 CPU cores, (4 * 2) + 1 equals 9, which is
    the theoretical maximum number of workers.
  prefs: []
  type: TYPE_NORMAL
- en: Based on these calculations, you can use 5 workers for the Odoo users and an
    additional worker for the cron worker, making a total of 6 workers.
  prefs: []
  type: TYPE_NORMAL
- en: 'To estimate the RAM consumption, use the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '`RAM = Number of workers * ((0.8 * 150) + (0.2 *` `1024))`'
  prefs: []
  type: TYPE_NORMAL
- en: In this case, 6 workers multiplied by `((0.8 * 150) + (0.2 * 1024))` equals
    approximately 2 GB of RAM.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore, based on these calculations, the Odoo installation will require around
    2 GB of RAM.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo editions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Odoo comes in two different editions. The first one is **Community Edition**,
    which is open source, while the second one is **Enterprise Edition**, which has
    licensing fees. Unlike other software vendors, Odoo Enterprise Edition is just
    a pack of extra applications that adds extra features or new apps to the Community
    Edition. The Enterprise Edition runs on top of the Community Edition. The Community
    Edition comes under the **Lesser General Public License v3.0** (**LGPLv3**) and
    comes with all of the basic **enterprise resource planning** (**ERP**) applications,
    such as sales, **customer relationship management** (**CRM**), invoicing, purchases,
    and a website builder. Alternatively, the Enterprise Edition comes with the Odoo
    Enterprise Edition license, which is a proprietary license. Odoo Enterprise Edition
    has several advanced features, such as full accounting, studio, **Voice over Internet
    Protocol** (**VoIP**), mobile responsive design, e-sign, marketing automation,
    delivery and banking integrations, **Internet of Things** (**IoT**), and more.
    The Enterprise Edition also provides you with unlimited *bugfix support*. The
    following diagram shows that the Enterprise Edition depends on the Community Edition,
    which is why you need the latter to use the former:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.1 – Differences between the Community Edition and Enterprise Edition](img/B20997_01_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.1 – Differences between the Community Edition and Enterprise Edition
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find a full comparison of both editions here: [https://www.odoo.com/page/editions](https://www.odoo.com/page/editions).'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Odoo has the largest number of community developers among all open source ERPs
    on the market with 20K+ forks on GitHub, hence why you will find a large number
    of third-party apps (modules) on the app store. Some of the free apps use an **Affero
    General Public License version 3** (**AGPLv3**). You cannot use the proprietary
    license on your app if your application has dependencies on such apps. Apps with
    an Odoo proprietary license can only be developed on modules that have LGPL or
    other proprietary licenses.
  prefs: []
  type: TYPE_NORMAL
- en: Git repositories
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The entire code base of Odoo is hosted on GitHub. You can post bugs/issues
    for stable versions here. You can also propose a new feature by submitting a **pull
    request** (**PR**). There are several repositories in Odoo. See the following
    table for more information:'
  prefs: []
  type: TYPE_NORMAL
- en: '| **Repositories** | **Purpose** |'
  prefs: []
  type: TYPE_TB
- en: '| [https://github.com/odoo/odoo](https://github.com/odoo/odoo) | This is the
    Community Edition of Odoo. It’s available publicly. |'
  prefs: []
  type: TYPE_TB
- en: '| [https://github.com/odoo/enterprise](https://github.com/odoo/enterprise)
    | This is the Enterprise Edition of Odoo. It’s available to official Odoo partners
    only. |'
  prefs: []
  type: TYPE_TB
- en: '| [https://github.com/odoo-dev/odoo](https://github.com/odoo-dev/odoo) | This
    is an ongoing development repository. It’s available publicly. |'
  prefs: []
  type: TYPE_TB
- en: Table 1.1 – Odoo git repositories
  prefs: []
  type: TYPE_NORMAL
- en: Every year, Odoo releases a major release, which is a long-term support version
    that will last for 3 years, and a few minor versions. Minor versions are mostly
    used in Odoo’s online `master` branch is under development and is unstable, so
    it is advisable not to use this for production since it might break your database.
  prefs: []
  type: TYPE_NORMAL
- en: Runbot
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Runbot is Odoo’s automated testing environment. Whenever there is a new commit
    in Odoo’s GitHub branch, Runbot pulls those latest changes and creates the builds
    for the last four commits. Here, you can test all stable and in-development branches.
    You can even play with the Enterprise Edition and its development branches.
  prefs: []
  type: TYPE_NORMAL
- en: Every build has a different background color, which indicates the status of
    the test cases. A green background color means that all of the test cases run
    successfully and you can test that branch, while a red background color means
    that some test cases have failed on this branch and some features might be broken
    on that build. You can view the logs for all test cases, which show exactly what
    happens during installation. Every build has two databases. The `all` database
    has all of the modules installed on it, while the `base` database only has base
    Odoo modules installed. Every build is installed with basic demo data, so you
    can test it quickly without extra configurations.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You can access Runbot at [http://runbot.odoo.com/runbo](http://runbot.odoo.com/runbo)t.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following credentials can be used to access any Runbot build:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Login ID**: admin **Password**: admin'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Login ID**: demo **Password**: demo'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Login ID**: portal **Password**: portal'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: This is a public testing environment, so other users might be using/testing
    the same branch that you are testing.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo app store
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Odoo launched the app store a few years back, and it was an instant hit. At
    the time of writing, over 39,000+ different apps are hosted there. You will find
    lots of free and paid applications for different versions here. This includes
    specific solutions for different business verticals, such as education, food industries,
    and medicine. It also includes apps that extend or add new features to existing
    Odoo applications. The app store also provides numerous beautiful themes for the
    Odoo website builder. In [*Chapter 3*](B20997_03.xhtml#_idTextAnchor083), *Creating
    Odoo Add-On Modules*, you will learn how to set pricing and currency for your
    custom module.
  prefs: []
  type: TYPE_NORMAL
- en: You can access the Odoo app store by going to [https://www.odoo.com/apps](https://www.odoo.com/apps).
  prefs: []
  type: TYPE_NORMAL
- en: You can access Odoo’s themes by going to [https://www.odoo.com/apps/themes](https://www.odoo.com/apps/themes).
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Odoo has open sourced several themes after version 13 and now works with an
    advanced JavaScript called *OWL*. We will cover this in [*Chapter 16*](B20997_16.xhtml#_idTextAnchor929).
    Note that these were paid themes in previous versions. This means that, in Odoo
    versions 15 and 16, you can download and use those beautiful themes at no extra
    cost.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo Community Association
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Odoo Community Association** (**OCA**) is a non-profit organization that
    develops/manages community-based Odoo modules. All OCA modules are open source
    and maintained by Odoo community members. OCA’s GitHub account contains multiple
    repositories for different Odoo applications. Apart from Odoo modules, it also
    contains various tools, a migration library, accounting localizations, and so
    on.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the URL for OCA’s official GitHub account: [https://github.com/OCA](https://github.com/OCA).'
  prefs: []
  type: TYPE_NORMAL
- en: Official Odoo help forum
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Odoo has a very powerful framework, and tons of things can be achieved just
    by using/activating options or by following specific patterns. Consequently, if
    you run into some technical issues or if you are not sure about some complex cases,
    then you can post your query on Odoo’s official help forum. Lots of developers
    are active on this forum, including some official Odoo employees.
  prefs: []
  type: TYPE_NORMAL
- en: You can search for questions or post your new questions by going to [https://www.odoo.com/forum/help-1](https://www.odoo.com/forum/help-1).
  prefs: []
  type: TYPE_NORMAL
- en: Odoo’s eLearning platform
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Recently, Odoo has launched a new eLearning platform. This platform provides
    lots of videos that explain how to use different Odoo applications. At the time
    of writing, this platform does not have technical videos, just functional ones.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the URL for Odoo’s eLearning platform: [https://www.odoo.com/slides](https://www.odoo.com/slides).'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Odoo from the source
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It is highly recommended that you use the **Linux Ubuntu** operating system
    to install Odoo since this is the operating system that Odoo uses for all its
    tests, debugging, and installations of Odoo Enterprise. Additionally, most Odoo
    developers use GNU/Linux distributions, so they are much more likely to get support
    from the Odoo community for operating system-level issues that occur in **GNU/Linux**
    than *Windows* or *macOS*.
  prefs: []
  type: TYPE_NORMAL
- en: It is also recommended to develop Odoo add-on modules using the same environment
    (the same distribution and the same version) as the one that will be used in production.
    This will avoid nasty surprises, such as discovering on the day of deployment
    that a library has a different version than expected, with a slightly different
    and incompatible behavior. If your workstation is using a different operating
    system, a good approach is to set up a **virtual machine** (**VM**) on your workstation
    and install a GNU/Linux distribution in the VM.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Ubuntu is available as an app in the **Microsoft Store**, so you can use that
    if you don’t want to switch to Ubuntu.
  prefs: []
  type: TYPE_NORMAL
- en: For this book, we will be using Ubuntu Server 22.04 LTS, but you can use any
    other Debian GNU/Linux operating system. Whatever Linux distribution you choose,
    you should have some notion of how to use it from the command line, and knowing
    about system administration will certainly not do any harm.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are assuming that you have Ubuntu 22.04 up and running and that you have
    an account with root access or that `sudo` has been configured. In the following
    sections, we will install Odoo’s dependencies and download Odoo’s source code
    from GitHub.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Some of the configurations require a system login username, so we will use `$(whoami)`
    whenever a login username is required in a command line. This is a shell command
    that will substitute your login in the command you are typing.
  prefs: []
  type: TYPE_NORMAL
- en: Some operations will be easier if you have a GitHub account. If you don’t have
    one already, go to [https://github.com](https://github.com) and create one.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To install Odoo from the source, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Run the following commands to install the main dependencies:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Download and install **wkhtmltopdf**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you encounter any errors after running the previous command, force install
    the dependencies with the following command:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Now, install the PostgreSQL database:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Configure PostgreSQL:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: $ git config --global user.name "Your Name"
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: $ git config --global user.email youremail@example.com
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Clone the Odoo code base:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: $ python3 -m venv ~/venv-odoo-17.0
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'venv:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Create and start your first Odoo instances:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you need RTL support, please install `node` and `rtlcss` by running `sudo
    apt-get install nodejs npm -y sudo npm install -``g rtlcss`.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In *step 1*, we installed several core dependencies. These dependencies include
    various tools, such as **git**, **pip3**, **wget**, Python setup tools, and more.
    These core tools will help us install other Odoo dependencies using simple commands.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 2*, we downloaded and installed the `wkhtmltopdf` package, which is
    used in Odoo to print PDF documents such as sale orders, invoices, and other reports.
    Odoo 17.0 needs version 0.12.6.1 of `wkhtmltopdf`, and that exact version might
    be not included in the current Linux distributions. Fortunately for us, the maintainers
    of `wkhtmltopdf` provide pre-built packages for various distributions at [http://wkhtmltopdf.org/downloads.html](http://wkhtmltopdf.org/downloads.html)
    and we have downloaded and installed it from that URL.
  prefs: []
  type: TYPE_NORMAL
- en: After this, we configured PostgreSQL, which is used for Odoo’s database management.
  prefs: []
  type: TYPE_NORMAL
- en: PostgreSQL configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In *step 3*, we installed the PostgreSQL database.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 4*, we created a new database user with the login name of our system.
    `$(whoami)` is used to fetch your login name, and the `-s` option is used to give
    superuser rights. Let’s see why we need these configurations.
  prefs: []
  type: TYPE_NORMAL
- en: 'Odoo uses the `psycopg2` Python library to connect with a PostgreSQL database.
    To access a PostgreSQL database with the `psycopg2` library, Odoo uses the following
    values by default:'
  prefs: []
  type: TYPE_NORMAL
- en: By default, `psycopg2` tries to connect to a database with the same username
    as the current user on local connections, which enables password-less authentication
    (this is good for the development environment)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The local connection uses Unix domain sockets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The database server listens on port `5432`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That’s it! Your PostgreSQL database is now ready to be connected with Odoo.
  prefs: []
  type: TYPE_NORMAL
- en: As this is a development server, we have given `--superuser` rights to the user.
    It is OK to give the PostgreSQL user more rights as this will be your development
    instance. For a production instance, you can use the `--createdb` command line
    instead of `--superuser` to restrict rights. The `–superuser` rights in a production
    server will give additional leverage to an attacker exploiting a vulnerability
    in some part of the deployed code.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to use a database user with a different login, you will need to
    provide a password for the user. This is done by passing the `--pwprompt` flag
    on the command line when creating the user, in which case the command will prompt
    you for the password.
  prefs: []
  type: TYPE_NORMAL
- en: 'If the user has already been created and you want to set a password (or modify
    a forgotten password), you can use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: If this command fails with an error message saying that the database does not
    exist, it is because you did not create a database named after your login name
    in *step 4* of this recipe. That’s fine; just add the `--dbname` option with an
    existing database name, such as `--``dbname template1`.
  prefs: []
  type: TYPE_NORMAL
- en: Git configuration
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For the development environment, we are using Odoo sourced from GitHub. With
    `git`, you can easily switch between different Odoo versions. Note that you can
    fetch the latest changes with the `git` `pull` command.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 5*, we configured our `git` user.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 6*, we downloaded the source code from Odoo’s official GitHub repository.
    We used the `git clone` command to download Odoo’s source code. We used a single
    branch as we only wanted a branch for the 17.0 version. We also used `--depth
    1` to avoid downloading the full commit history of the branch. These options will
    download the source code very quickly, but if you want, you can omit those options.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo developers also propose nightly builds, which are available as tarballs
    and distribution packages. The main advantage of using `git clone` is that you
    will be able to update your repository when new bug fixes are committed in the
    source tree. You will also be able to easily test any proposed fixes and track
    regressions so that you can make your bug reports more precise and helpful for
    developers.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you have access to the Enterprise Edition source code, you can download that
    in a separate folder under the `~/``odoo-dev` directory.
  prefs: []
  type: TYPE_NORMAL
- en: Virtual environments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Python **virtual environments**, or **venvs** for short, are isolated Python
    workspaces. These are very useful to Python developers because they allow different
    workspaces with different versions of various Python libraries to be installed,
    possibly on different Python interpreter versions.
  prefs: []
  type: TYPE_NORMAL
- en: You can create as many environments as you wish using the `python3 -m venv ~/newvenv`
    command. This will create a `newvenv` directory in the specified location, containing
    a `bin/` subdirectory and a `lib/python3.10` subdirectory.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 7*, we created a new virtual environment in the `~/venv-odoo-17.0`
    directory. This will be our isolated Python environment for Odoo, and all of Odoo’s
    Python dependencies will be installed in this environment.
  prefs: []
  type: TYPE_NORMAL
- en: To activate the virtual environment, we need to use the `source` command. We
    used the `source ~/venv-odoo-17.0/bin/activate` command to activate the virtual
    environment.
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python packages
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Odoo’s source code has a list of Python dependencies in `requirements.txt`.
    In *step 8*, we installed all those requirements via the `pip3` `install` command.
  prefs: []
  type: TYPE_NORMAL
- en: That’s it. Now, you can run the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: Starting the instance
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now comes the moment you’ve been waiting for. To start our first instance,
    in *step 9*, we created a new empty database, used the `odoo-bin` script, and
    then started the Odoo instance with the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'You can also omit `python3` by using `./` before `odoo-bin` as it is an executable
    Python script:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'With `odoo-bin`, a script with the following command-line arguments is used:'
  prefs: []
  type: TYPE_NORMAL
- en: '`-d database_name`: Use this database by default.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--db-filter=database_name$`: Only try to connect to databases that match the
    supplied regular expression. One Odoo installation can serve multiple instances
    that live in separate databases, and this argument limits the available databases.
    The trailing `$` is important as the regular expression is used in match mode.
    This enables you to avoid selecting names starting with the specified string.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--addons-path=directory1,directory2,...`: This is a comma-separated list of
    directories in which Odoo will look for add-ons. This list is scanned at instance
    creation time to populate the list of available add-on modules in the instance.
    If you want to use Odoo’s Enterprise Edition, then add its directory with this
    option.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`-i base`: This is used to install a base module. This is required when you
    have created a database via the command line.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you are using a database user with a database login that is different from
    your Linux login, you need to pass the following additional arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '`--db_host=localhost`: Use a TCP connection to the database server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--db_user=database_username`: Use the specified database login'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`--db_password=database_password`: This is the password for authenticating
    against the PostgreSQL server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To get an overview of all available options, use the `--help` argument. We will
    see more of the `odoo-bin` script later in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: When Odoo is started on an empty database, it will create the database structure
    that’s needed to support its operations. It will also scan the add-on path to
    find the available add-on modules and insert some into the initial records in
    the database. This includes the `admin` user with the default `admin` password,
    which you will use for authentication.
  prefs: []
  type: TYPE_NORMAL
- en: 'Pointing your web browser to `http://localhost:8069/` leads you to the login
    page of your newly created instance, as shown in the following screenshot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.2 – Login screen of the Odoo instance](img/B20997_01_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.2 – Login screen of the Odoo instance
  prefs: []
  type: TYPE_NORMAL
- en: This is because Odoo includes an HTTP server. By default, it listens on all
    local network interfaces on TCP port `8069`.
  prefs: []
  type: TYPE_NORMAL
- en: Managing Odoo server databases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When working with Odoo, all the data in your instance is stored in a PostgreSQL
    database. All the standard database management tools you are used to are available,
    but Odoo also proposes a web interface for some common operations.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We are assuming that your work environment is set up and that you have an instance
    running.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Odoo database management interface provides tools to create, duplicate,
    remove, back up, and restore a database. There is also a way to change the master
    password, which is used to protect access to the database management interface.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the database management interface
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To access the database, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the login screen of your instance (if you are authenticated, log out).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on **Manage Databases**. This will navigate you to [http://localhost:8069/web/database/manager](http://localhost:8069/web/database/manager)
    (you can also point your browser directly to that URL):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.3 – Database manager](img/B20997_01_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.3 – Database manager
  prefs: []
  type: TYPE_NORMAL
- en: Setting or changing the master password
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you’ve set up your instance with default values and haven’t modified it
    yet, as we will explain in the following section, the database management screen
    will display a warning, telling you that the `master password` instance hasn’t
    been set and will advise you to set one with a direct link:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.4 – Master password warning](img/B20997_01_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.4 – Master password warning
  prefs: []
  type: TYPE_NORMAL
- en: 'To set the master password, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Set Master Password** button. You will get a dialog box asking
    you to fill in the **New Master** **Password** field:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.5 – Setting a new master password](img/B20997_01_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.5 – Setting a new master password
  prefs: []
  type: TYPE_NORMAL
- en: Type in a complex new password and click **Continue**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'If the master password is already set, click on the **Set Master Password**
    button at the bottom of the screen to change it. In the dialog box that opens,
    type the previous master password and the new one, and then click **Continue**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.6 – Changing the master password](img/B20997_01_6.0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.6 – Changing the master password
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The master password is the server configuration file under the `admin_passwd`
    key. If the server is started without a configuration file being specified, a
    new one will be generated in `~/.odoorc`. Refer to the next recipe for more information
    about the configuration file.
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'This dialog box can be used to create a new database instance that will be
    handled by the current Odoo server. Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the database management screen, click on the **Create Database** button,
    which can be found at the bottom of the screen. This will bring up the following
    dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.7 – The Create Database dialog](img/B20997_01_7.0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.7 – The Create Database dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in the form, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Master Password**: This is the master password for this instance.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database Name**: Input the name of the database you wish to create.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Email**: Add your email address here; this will be your username later.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Password**: Type in the password you want to set for the admin user of the
    new instance.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Phone Number**: Set your phone number (optional).'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Language**: Select the language that you wish to be installed by default
    in the new database in the drop-down list. Odoo will automatically load the translations
    for the selected language.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Country**: Select the country of the main company in the drop-down list.
    Selecting this will automatically configure a few things, including the company’s
    currency.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Demo data**: Check this box to obtain demonstration data. This is useful
    for running interactive tests or setting up a demonstration for a customer, but
    it should not be checked for a database that is designed to contain production
    data.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: If you wish to use the database to run automated tests for the modules (refer
    to [*Chapter 7*](B20997_07.xhtml#_idTextAnchor363), *Debugging Modules*), you
    need to have the demonstration data since the vast majority of the automated tests
    in Odoo depend on these records to run successfully.
  prefs: []
  type: TYPE_NORMAL
- en: Click **Continue** and wait until the new database is initialized. After, you
    will be redirected to the instance and connected as the administrator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Troubleshooting
  prefs: []
  type: TYPE_NORMAL
- en: If you are redirected to a login screen, this is probably because the `filter`
    option. Note that the `odoo-bin start` command does this silently, making only
    the current database available. To work around this, simply restart Odoo without
    the `start` command, as shown in the *Installing Odoo from the source* recipe.
    If you have a configuration file (refer to the *Storing the instance configuration
    in a file* recipe later in this chapter), check that the `db_filter` option is
    unset or set to a value matching the new database name.
  prefs: []
  type: TYPE_NORMAL
- en: Duplicating a database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Often, you will have an existing database, and you will want to experiment
    with it to try a procedure or run a test, but without modifying the existing data.
    The solution here is simple: duplicate the database and run the test on the copy.
    Repeat this as many times as required:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the database management screen, click on the **Duplicate Database** link
    next to the name of the database you wish to clone:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.8 – The Duplicate Database dialog](img/B20997_01_8.0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.8 – The Duplicate Database dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in the form, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Master Password**: This is the master password of the Odoo server'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**New Name**: The name you want to give to the copy'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Click **Continue**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can then click on the name of the newly created database on the database
    management screen to access the login screen for that database.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Removing a database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'When you have finished your tests, you will want to clean up the duplicated
    databases. To do this, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the database management screen, you will find the **Delete** button next
    to the name of the database. Clicking on it will bring up the following dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.9 – The Delete Database dialog](img/B20997_01_9.0.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.9 – The Delete Database dialog
  prefs: []
  type: TYPE_NORMAL
- en: Fill in the form, as well as the **Master Password** field, which is the master
    password of the Odoo server.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Delete**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Caution! Potential data loss!
  prefs: []
  type: TYPE_NORMAL
- en: If you selected the wrong database and have no backup, there is no way to recover
    the lost data.
  prefs: []
  type: TYPE_NORMAL
- en: Backing up a database
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To create a backup, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the database management screen, you will find the **Backup** button next
    to the database’s name. Clicking on it will bring up the following dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.10 – The Backup Database dialog](img/B20997_01_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.10 – The Backup Database dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in the form, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`zip` for a production database since this is the only real full backup format.
    Only use the `pg_dump` format for a development database when you don’t care about
    the file store.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Click **Backup**. The backup file will be downloaded to your browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Restoring a database backup
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'If you need to restore a backup, this is what you need to do:'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the database management screen, you will find a **Restore Database** button
    at the bottom of the screen. Clicking on it will bring up the following dialog:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.11 – The Restore Database dialog](img/B20997_01_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.11 – The Restore Database dialog
  prefs: []
  type: TYPE_NORMAL
- en: 'Fill in the form, as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Master Password**: This is the master password of the Odoo server.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**File**: This is a previously downloaded Odoo backup.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Database Name**: Provide the name of the database in which the backup will
    be restored. The database must not exist on the server.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**This database might have been moved or copied**: Choose **This database was
    moved** if the original database was on another server or if it has been deleted
    from the current server. Otherwise, choose **This database is a copy**, which
    is the safe default option.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Click **Continue**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: 'It isn’t possible to restore a database on top of itself. If you try to do
    this, you will get an error message (**Database restore error: Database already
    exists**). You need to remove the database first.'
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These features, apart from the **Change master password** screen, run PostgreSQL
    administration commands on the server and report back through the web interface.
  prefs: []
  type: TYPE_NORMAL
- en: The master password is a very important piece of information that only lives
    in the Odoo server configuration file and is never stored in the database. There
    used to be a default value of `admin`, but using this value is a security liability.
    In Odoo v9 and later, this is identified as an *unset* master password, and you
    are urged to change it when accessing the database administration interface. Even
    if it is stored in the configuration file under the `admin_passwd` entry, this
    is not the same as the password of the `admin` user; these are two independent
    passwords. The master password is set for an Odoo server process, which itself
    can handle multiple database instances, each of which has an independent `admin`
    user with their own password.
  prefs: []
  type: TYPE_NORMAL
- en: Security considerations
  prefs: []
  type: TYPE_NORMAL
- en: Remember that we are considering a development environment in this chapter.
    The Odoo database management interface is something that needs to be secured when
    you are working on a production server as it gives access to a lot of sensitive
    information, especially if the server hosts Odoo instances for several different
    clients.
  prefs: []
  type: TYPE_NORMAL
- en: To create a new database, Odoo uses the PostgreSQL `createdb` utility and calls
    the internal Odoo function to initialize the new database in the same way as when
    you start Odoo on an empty database.
  prefs: []
  type: TYPE_NORMAL
- en: To duplicate a database, Odoo uses the `--template` option of `createdb`, passing
    the original database as an argument. This duplicates the structure of the template
    database in the new database using internal and optimized PostgreSQL routines,
    which is much faster than creating a backup and restoring it (especially when
    using the web interface, which requires you to download the backup file and upload
    it again).
  prefs: []
  type: TYPE_NORMAL
- en: Backup and restore operations use the `pg_dump` and `pg_restore` utilities,
    respectively. When using the `zip` format, the backup will also include a copy
    of the file store that contains a copy of the documents when you configure Odoo
    so that it doesn’t keep these in the database; this is the default option in 14.0\.
    Unless you change it, these files reside in `~/.local/share/Odoo/filestore`.
  prefs: []
  type: TYPE_NORMAL
- en: If the backup becomes too large, downloading it may fail. This will be either
    because the Odoo server itself is unable to handle the large file in memory or
    because the server is running behind a reverse proxy because there is a limit
    to the size of HTTP responses that were set in the proxy. Conversely, for the
    same reasons, you will likely experience issues with the database restore operation.
    When you start running into these issues, it’s time to invest in a more robust
    external backup solution.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Experienced Odoo developers generally don’t use the database management interface
    and perform operations from the command line. To initialize a new database with
    demo data, for instance, the following single-line command can be used:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: The bonus of using this command line is that you can request add-ons to be installed
    while you are using it – for instance, `-``i sale,purchase,stock`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To duplicate a database, stop the server and run the following commands:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Note that, in the context of development, the file store is often omitted.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The use of `createdb -T` only works if there are no active sessions on the database,
    which means that you have to shut down your Odoo server before duplicating the
    database from the command line.
  prefs: []
  type: TYPE_NORMAL
- en: 'To remove an instance, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: 'To create a backup (assuming that the PostgreSQL server is running locally),
    use the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: 'To restore the backup, run the following command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: Caution!
  prefs: []
  type: TYPE_NORMAL
- en: If your Odoo instance uses a different user to connect to the database, you
    need to pass `-U username` so that the correct user is the owner of the restored
    database.
  prefs: []
  type: TYPE_NORMAL
- en: Storing the instance configuration in a file
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The `odoo-bin` script has dozens of options, and it is tedious to remember them
    all, as well as how to remember to set them properly when starting the server.
    Fortunately, it is possible to store them all in a configuration file and only
    specify the ones you want to alter for development, for example.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For this recipe, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To generate a configuration file for your Odoo instance, run the following
    command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'You can add additional options, and their values will be saved in the generated
    file. All the unset options will be saved with their default value set. To get
    a list of possible options, use the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Edit the `myodoo.cfg` file (use the table in the following section for some
    parameters you may want to change). Then, to start the server with the saved options,
    run the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The `--config` option is commonly abbreviated as `-c`.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: At startup, Odoo loads its configuration in three passes. First, a set of default
    values for all options is initialized from the source code. After, the configuration
    is parsed, and then any value that’s defined in the file overrides the defaults.
    Finally, the command-line options are analyzed, and their values override the
    configuration that was obtained from the previous pass.
  prefs: []
  type: TYPE_NORMAL
- en: 'As we mentioned earlier, the names of the configuration variables can be found
    by looking at the names of the command-line options by removing the leading dashes
    and converting the middle dashes into underscores. There are a few exceptions
    to this, notably the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 1.1 – Difference in Odoo parameters regarding the command line and
    the configuration file](img/Table_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 1.1 – Difference in Odoo parameters regarding the command line and the
    configuration file
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a list of options that are commonly set through the configuration file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 1.2 – Odoo parameters and their usage](img/Table_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 1.2 – Odoo parameters and their usage
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a list of configuration options related to the database:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 1.3 – Odoo parameters and their usage](img/Table_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 1.3 – Odoo parameters and their usage
  prefs: []
  type: TYPE_NORMAL
- en: The configuration file is parsed by Odoo using the Python `ConfigParser` module.
    However, the implementation in Odoo 11.0 has changed, and it is no longer possible
    to use variable interpolation. So, if you are used to defining values for variables
    from the values of other variables using the `%(section.variable)s` notation,
    you will need to change your habits and revert to explicit values.
  prefs: []
  type: TYPE_NORMAL
- en: 'Some options are not used in config files, but they are widely used during
    development:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Table 1.4 – Odoo parameters and their usage](img/Table_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Table 1.4 – Odoo parameters and their usage
  prefs: []
  type: TYPE_NORMAL
- en: Activating Odoo developer tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When using Odoo as a developer, you need to know how to activate **developer
    mode** in the web interface so that you can access the technical settings menu
    and developer information. Enabling debug mode will expose several advanced configuration
    options and fields. These options and fields are hidden in Odoo for better usability
    because they are not used daily.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To activate developer mode in the web interface, perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect to your instance and authenticate as `admin`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to the **Settings** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Scroll to the bottom and locate the **Developer** **Tools** section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.12 – Links to activate different developer modes](img/B20997_01_12.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.12 – Links to activate different developer modes
  prefs: []
  type: TYPE_NORMAL
- en: Click **Activate the** **developer mode**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Wait for the UI to reload.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Alternative way
  prefs: []
  type: TYPE_NORMAL
- en: It is also possible to activate developer mode by editing the URL. Before the
    `#` sign, insert `?debug=1`. For example, if your current URL is `http://localhost:8069/web#menu_id=102&action=94`
    and you want to enable developer mode, then you need to change that URL to `http://localhost:8069/web?debug=1#menu_id=102&action=94`.
    Furthermore, if you want to use debug mode with assets, then change the URL to
    `http://localhost:8069/web?debug=assets#menu_id=102&action=94`.
  prefs: []
  type: TYPE_NORMAL
- en: 'To exit developer mode, you can perform any one of the following operations:'
  prefs: []
  type: TYPE_NORMAL
- en: Edit the URL and write `?debug=0` in the query string
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use **Deactivate the developer mode** from the same place in the **Settings**
    menu
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Click on the bug icon in the top menu and click on the **Leave Developer** **Tools**
    option
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Lots of developers are using browser extensions to toggle debug mode. By doing
    this, you can toggle debug mode quickly without accessing the **Settings** menu.
    These extensions are available for Firefox and Chrome. The following screenshot
    shows one such plugin you can use and find in the Chrome store:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 1.13 – Browser extension for debug mode](img/B20997_01_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.13 – Browser extension for debug mode
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The behavior of the debug mode has changed since Odoo v13\. Since v13, the status
    of debug mode is stored in the session, implying that even if you have removed
    `?debug` from the URL, debug mode will still be active.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In developer mode, two things happen:'
  prefs: []
  type: TYPE_NORMAL
- en: You get tooltips when hovering over a field in a form view or over a column
    in a list view. These provide technical information about the field (internal
    name, type, and so on).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A drop-down menu with a bug icon is displayed next to the user’s menu in the
    top-right corner, giving you access to technical information about the model being
    displayed, the various related view definitions, the workflow, custom filter management,
    and so on.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There is a variant of developer mode called **Developer mode (with assets)**.
    This mode behaves like the normal developer mode, but the JavaScript and CSS code
    that’s sent to the browser is not minified, which means that the web development
    tools of your browser can easily be used to debug the JavaScript code (more on
    this in [*Chapter 15*](B20997_15.xhtml#_idTextAnchor861), *Web* *Client Development*).
  prefs: []
  type: TYPE_NORMAL
- en: Caution!
  prefs: []
  type: TYPE_NORMAL
- en: Test your add-ons both with and without developer mode since the unminified
    versions of the JavaScript libraries can hide bugs that only bite you in the minified
    version.
  prefs: []
  type: TYPE_NORMAL
- en: Updating the add-on modules list
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When a new add-on module is added, you need to run the **Update Module List**
    wizard to get your new application in the app list. In this recipe, you will learn
    how to update the app list.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Start your instance and connect to it using your **Administrator** account.
    After doing this, activate developer mode (if you don’t know how to activate developer
    mode, refer to the *Activating Odoo developer* *tools* recipe).
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To update the list of available add-on modules in your instance, you need to
    perform the following steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the **Apps** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click **Update** **Apps List**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.14 – Update Apps List](img/B20997_01_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.14 – Update Apps List
  prefs: []
  type: TYPE_NORMAL
- en: 'In the dialog that appears, click **Update**:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 1.15 – Dialog to update the apps list](img/B20997_01_15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1.15 – Dialog to update the apps list
  prefs: []
  type: TYPE_NORMAL
- en: At the end of the update, you can click on the **Apps** entry to see the updated
    list of available add-on modules. You will need to remove the default filter on
    **Apps** in the search box to see all of them.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When the `__manifest__.py` that’s stored in the add-on module directory. Odoo
    reads the manifest, expecting to find a Python dictionary. Unless the manifest
    contains a key `installable` instance set to `False`, the add-on module metadata
    is recorded in the database. If the module is already present, the information
    is updated. If not, a new record is created. If a previously available add-on
    module is not found, the record is not deleted from the list.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: An updated apps list is only required if you add the new add-on path after initializing
    the database. If you add the new add-on path to the configuration file before
    initializing the database, then there will be no need to update the module list
    manually.
  prefs: []
  type: TYPE_NORMAL
- en: 'To summarize what we have learned so far, after installing, you can start the
    Odoo server by using the following command line (if you are using a virtual environment,
    then you need to activate it first):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs: []
  type: TYPE_PRE
- en: Once you’ve run the module, you can access Odoo from http://localhost:8069.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can also use a configuration file to run Odoo, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs: []
  type: TYPE_PRE
- en: Once you start the Odoo server, you can install/update modules from the **App**
    menu.
  prefs: []
  type: TYPE_NORMAL
