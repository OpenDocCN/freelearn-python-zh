["```py\n$ git init\n```", "```py\n$ git status\n```", "```py\n# In Bash, comments are marked with a #, just like Python\n# Add any files that have changes and you wish to save in this      \n# commit\n$ git add main.py\n# Commit the changes, add in your commit message with -m\n$ git commit -m \"Our first commit\"\n```", "```py\n    # To see the changes from the last commit\n    $ git diff\n    # To see the history of your changes\n    $ git log\n    # As an example, we will stage main.py\n    # and then remove any added files from the stage\n    $ git add main.py\n    $ git status\n    $ git reset HEAD main.py\n    # After any complicated changes, be sure to run status\n    # to make sure everything went well\n    $ git status\n    # lets delete the changes to main.py, reverting to its state at the   \n    # last commit # This can only be run on files that aren't staged\n    $ git checkout -- main.py\n```", "```py\n*.pyc\n*.pem\n*.pub\n*.tar.gz\n*.zip\n*.sql\n*.db\nsecrets.txt\n./tmp\n./build/*\n.idea/*\n.idea\nenv\nvenv\n```", "```py\n $ git add --all\n $ git status\n $ git commit -a -m \"Added gitignore and all the projects missing \n    files\"\n```", "```py\n$ git log commit cd88be37f12fb596be743ccba7e8283dd567ac05 (HEAD -> master)\nAuthor: Daniel Gaspar\nDate: Sun May 6 16:59:46 2018 +0100\n\nAdded gitignore and all the projects missing files\ncommit beb471198369e64a8ee8f6e602acc97250dce3cd\nAuthor: Daniel Gaspar\nDate: Fri May 4 19:06:57 2018 +0100\n\nOur first commit\n```", "```py\n$ git checkout beb4711\n```", "```py\n$ git checkout master\n```", "```py\n# Display our branches\n$ git branch * master # Create a branch called feature/good-morning from master\n$ git branch feature/good-morning\n# Display our branches again\n$ git branch  feature/good-morning\n* master # Check out the new feature/good-morning branch\n$ git checkout feature/good-morning \n```", "```py\n$ git checkout -b feature/good-morning master\n```", "```py\n@app.route('/')\ndef home():\n    return '<h1>Hello world</h1>'\n```", "```py\n@app.route('/username')\ndef home():\n    return '<h1>Good Morning %s</h1>' % username\n```", "```py\n$ git diff\ndiff --git a/main.py b/main.py\nindex 3e0aacc..1a930d9 100755\n--- a/main.py\n+++ b/main.py\n@@ -5,9 +5,9 @@ app = Flask(__name__)\n app.config.from_object(DevConfig)\n\n # Changed to show the git diff command\n-@app.route('/')\n-def home():\n- return '<h1>Hello World!</h1>'\n+@app.route('/<username>')\n+def home(username):\n+ return '<h1>Good Morning %s</h1>' % username\n\n if __name__ == '__main__':\n app.run()\n```", "```py\n$ git commit -m \"Display good morning because its nice\"\n[feature/good-morning d4f7fb8] Display good morning because its nice\n 1 file changed, 3 insertions(+), 3 deletions(-)\n```", "```py\n# Get back to the master branch\n$ git checkout master\nSwitched to branch 'master'\nbash-3.2$ git log\ncommit 139d121d6ecc7508e1017f364e6eb2e4c5f57d83 (HEAD -> master)\nAuthor: Daniel Gaspar\nDate: Fri May 4 23:32:42 2018 +0100\n\n Our first commit\n# Merge our feature into the master branch\n$ git merge feature/good-morning\nUpdating 139d121..5d44a43\nFast-forward\n main.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\nbash-3.2$ git log\ncommit 5d44a4380200f374c879ec1f7bda055f31243263 (HEAD -> master, feature/good-morning)\nAuthor: Daniel Gaspar\nDate: Fri May 4 23:34:06 2018 +0100\n\nDisplay good morning because its nice commit 139d121d6ecc7508e1017f364e6eb2e4c5f57d83\nAuthor: Daniel Gaspar <daniel.gaspar@miniclip.com>\nDate: Fri May 4 23:32:42 2018 +0100\n\nOur first commit\n```", "```py\n$ git revert\n```", "```py\npip --help\n```", "```py\n$ python3 -m pip list\n```", "```py\n# Download and install pip\n$ wget https://bootstrap.pypa.io/get-pip.py    \n$ sudo python get-pip.py\n```", "```py\n$ pip install [package-name]\n```", "```py\n$ pip install flask\n```", "```py\n$ pip uninstall [package-name]\n```", "```py\n$ pip search [search-term]\n```", "```py\n$ pip freeze > requirements.txt\n```", "```py\nclick==6.7\nFlask==0.12.4\nitsdangerous==0.24\nJinja2==2.10\nMarkupSafe==1.0\nWerkzeug==0.14.1\n```", "```py\n$ pip install -r requirements.txt\n```", "```py\n# Create a python 3 virtualenv\n$ python3 -m venv env\n```", "```py\n$ pip install virtualenv\n```", "```py\n$ virtualenv env\n```", "```py\n$ source env/bin/activate\n# Your prompt should now look like\n(env) $\n```", "```py\n# you won't need sudo anymore\n(env) $ pip install flask\n# To return to the global Python\n(env) $ deactivate\n```", "```py\nFROM python:3.6.5\n# Set the working directory to /app\nWORKDIR /app\n# Copy local contents into the container\nADD . /app\n# Install all required dependencies\nRUN pip install -r requirements.txt\nEXPOSE 5000\nCMD [\"python\", \"main.py\"]\n```", "```py\n$ docker build -t chapter_1 . \n```", "```py\n$ docker run -p 5000:5000 chapter_1\n# List all the running containers\n$ docker container list\n```", "```py\nclass Config(object): \n    pass \n\nclass ProdConfig(Config): \n    pass \n\nclass DevConfig(Config): \n    DEBUG = True \n```", "```py\nfrom flask import Flask \nfrom config import DevConfig \n\napp = Flask(__name__) \napp.config.from_object(DevConfig) \n\n@app.route('/') \ndef home(): \n    return '<h1>Hello World!</h1>' \n\nif __name__ == '__main__': \n    app.run() \n```", "```py\nDockerfile # Instructions to configure and run our application on a container\nrequirements.txt # All the dependencies needed to run our application\n/venv # We will not add this folder to our Git repo, our virtualenv\n.gitignore # Instruction for Git to ignore files\nmain.py # Our main Flask application\nconfig.py # Our configuration file\n```", "```py\n# The --all flag will tell git to stage all changes you have made\n# including deletions and new files\n$ git add --all\n$ git commit -m\" \"\"created the base application\"\n```", "```py\n$ export FLASK_APP=main.py\n```", "```py\n$ flask run\n```", "```py\n$ flask shell Python 3.6.5 (v3.6.5:f59c0932b4, Mar 28 2018, 03:03:55)\n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin\nApp: main [debug]\nInstance: /chapter_1/instance >>> app.url_map\nMap([<Rule '/' (OPTIONS, GET, HEAD) -> home>,\n <Rule '/static/<filename>' (OPTIONS, GET, HEAD) -> static>])\n```", "```py\n>>> app.static_folder\n/chapter_1/static'\n>>> app.template_folder\n'templates'\n```"]