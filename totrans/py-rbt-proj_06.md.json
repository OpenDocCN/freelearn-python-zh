["```py\nimport RPi.GPIO as GPIO\nimport time\nGPIO.setmode(GPIO.BCM)\nMotor1a = 20\nMotor1b = 21\nMotor2a = 2\nMotor2b = 3\nGPIO.setup(Motor1a,GPIO.OUT)\nGPIO.setup(Motor1b,GPIO.OUT)\nGPIO.setup(Motor2a,GPIO.OUT)\nGPIO.setup(Motor2b,GPIO.OUT)\nGPIO.output(Motor1a,1)\nGPIO.output(Motor1b,0)\nGPIO.output(Motor2a,1)\nGPIO.output(Motor2b,0)\ntime.sleep(10)\nGPIO.cleanup()\n\n```", "```py\nimport bluetooth\nimport time\nimport RPi.GPIO as GPIO\nMotor1a = 20\nMotor1b = 21\nMotor2a = 2\nMotor2b = 3\nGPIO.setmode(GPIO.BCM)\nGPIO.setwarnings(False)\nGPIO.setup(Motor1a,GPIO.OUT)\nGPIO.setup(Motor1b,GPIO.OUT)\nGPIO.setup(Motor2a,GPIO.OUT)\nGPIO.setup(Motor2b,GPIO.OUT)\nserver_socket=bluetooth.BluetoothSocket( bluetooth.RFCOMM )\nport = 1\nserver_socket.bind((\"\",port))\nserver_socket.listen(1)\nclient_socket,address = server_socket.accept()\nprint (\"Accepted connection from \"+str(address))\ndef stop_car():\n  GPIO.output(Motor1a,0)\n  GPIO.output(Motor1b,0)\n  GPIO.output(Motor2a,0)\n  GPIO.output(Motor2b,0)\n\nwhile True:\n  data = client_socket.recv(1024)\n  if (data == \"B\" or data== \"b\"):\n    GPIO.output(Motor1a,1)\n    GPIO.output(Motor1b,0)\n    GPIO.output(Motor2a,1)\n    GPIO.output(Motor2b,0)\n    time.sleep(1)\n    stop_car()\n\n  if (data == \"F\" or data == \"f\"):\n    GPIO.output(Motor1a,0)\n    GPIO.output(Motor1b,1)\n    GPIO.output(Motor2a,0)\n    GPIO.output(Motor2b,1)\n    time.sleep(1)\n    stop_car()\n\n  if (data == \"R\" or data == \"r\"):\n    GPIO.output(Motor1a,0)\n    GPIO.output(Motor1b,1)\n    GPIO.output(Motor2a,1)\n    GPIO.output(Motor2b,0)\n    time.sleep(1)\n    stop_car()\n\n  if (data == \"L\" or data == \"l\"):\n    GPIO.output(Motor1a,1)\n    GPIO.output(Motor1b,0)\n    GPIO.output(Motor2a,0)\n    GPIO.output(Motor2b,1)\n    time.sleep(1)\n    stop_car()\n\n  if (data == \"Q\" or data ==\"q\"):\n    stop_car()\n\n  if (data =='Z' or data == \"z\"):\n    client_socket.close()\n    server_socket.close()\n\n```", "```py\nimport bluetooth\n```", "```py\nserver_socket=bluetooth.BluetoothSocket( bluetooth.RFCOMM )\n```", "```py\nport = 1\n```", "```py\nserver_socket.bind((\"\",port))\n```", "```py\nserver_socket.listen(1)\n```", "```py\nclient_socket,address = server_socket.accept()\n```", "```py\nprint (\"Accepted connection from \"+str(address))\n```", "```py\ndata = client_socket.recv(1024)\n```", "```py\n        client_socket.close()\n```", "```py\n server_socket.close()\n```"]