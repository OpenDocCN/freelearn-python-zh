["```py\nfrom rest_framework import serializers \nfrom toys.models import Toy \n\nclass ToySerializer(serializers.ModelSerializer): \n    class Meta: \n        model = Toy \n        fields = ('id',  \n                  'name',  \n                  'description', \n                  'release_date', \n                  'toy_category',  \n                  'was_included_in_home')\n```", "```py\n    System check identified no issues (0 silenced).\n    October 13, 2017 - 04:11:13\n    Django version 1.11.5, using settings 'restful01.settings'\n    Starting development server at http://0.0.0.0:8000/\n    Quit the server with CONTROL-C. \n```", "```py\n    http :8000/toys/ Accept:text/html \n```", "```py\n curl -H \"Accept: text/html\" -iX GET localhost:8000/toys/ \n```", "```py\n    Content-Type: application/json \n```", "```py\n   http :8000/toys/ Accept:application/json\n```", "```py\n curl -H \"Accept: application/json\" -iX GET localhost:8000/toys/ \n```", "```py\n    Content-Type: application/json\n```", "```py\n    http OPTIONS :8000/toys/\n```", "```py\n    curl -iX OPTIONS localhost:8000/toys/\n```", "```py\n    HTTP/1.0 500 Internal Server Error\n    Content-Length: 52222\n    Content-Type: text/html\n    Date: Tue, 10 Oct 2017 17:46:34 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    Vary: Cookie\n    X-Frame-Options: SAMEORIGIN\n```", "```py\n    http OPTIONS :8000/toys/2\n```", "```py\n    curl -iX OPTIONS localhost:8000/toys/2\n```", "```py\nfrom django.shortcuts import render \nfrom rest_framework import status \nfrom toys.models import Toy \nfrom toys.serializers import ToySerializer\nfrom rest_framework.decorators import api_view \nfrom rest_framework.response import Response \n\n@api_view(['GET', 'POST']) \ndef toy_list(request): \n    if request.method == 'GET': \n        toys = Toy.objects.all() \n        toys_serializer = ToySerializer(toys, many=True) \n        return Response(toys_serializer.data) \n\n    elif request.method == 'POST': \n        toy_serializer = ToySerializer(data=request.data) \n        if toy_serializer.is_valid(): \n            toy_serializer.save() \n            return Response(toy_serializer.data, status=status.HTTP_201_CREATED) \n        return Response(toy_serializer.errors, status=status.HTTP_400_BAD_REQUEST) \n\n@api_view(['GET', 'PUT', 'DELETE']) \ndef toy_detail(request, pk): \n    try: \n        toy = Toy.objects.get(pk=pk) \n    except Toy.DoesNotExist: \n        return Response(status=status.HTTP_404_NOT_FOUND) \n\n    if request.method == 'GET': \n        toy_serializer = ToySerializer(toy) \n        return Response(toy_serializer.data) \n\n    elif request.method == 'PUT': \n        toy_serializer = ToySerializer(toy, data=request.data) \n        if toy_serializer.is_valid(): \n            toy_serializer.save() \n            return Response(toy_serializer.data) \n        return Response(toy_serializer.errors, status=status.HTTP_400_BAD_REQUEST) \n\n    elif request.method == 'DELETE': \n        toy.delete() \n        return Response(status=status.HTTP_204_NO_CONTENT) \n```", "```py\ntoy_data = JSONParser().parse(request) \ntoy_serializer = ToySerializer(data=toy_data) \n```", "```py\ntoy_serializer = ToySerializer(data=request.data) \n```", "```py\ntoy_data = JSONParser().parse(request) \ntoy_serializer = ToySerializer(toy, data=toy_data)\n```", "```py\ntoy_serializer = ToySerializer(toy, data=request.data) \n```", "```py\n( \n    'rest_framework.parsers.JSONParser', \n    'rest_framework.parsers.FormParser', \n    'rest_framework.parsers.MultiPartParser' \n) \n```", "```py\n( \n    'rest_framework.renderers.JSONRenderer', \n    'rest_framework.renderers.BrowsableAPIRenderer', \n) \n```", "```py\n    http OPTIONS :8000/toys/\n```", "```py\n curl -iX OPTIONS localhost:8000/toys/\n```", "```py\n HTTP/1.0 200 OK\n    Allow: POST, OPTIONS, GET\n    Content-Length: 167\n    Content-Type: application/json\n    Date: Mon, 16 Oct 2017 04:28:32 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"description\": \"\", \n        \"name\": \"Toy List\", \n        \"parses\": [\n            \"application/json\", \n            \"application/x-www-form-urlencoded\", \n            \"multipart/form-data\"\n        ], \n        \"renders\": [\n            \"application/json\", \n            \"text/html\"\n        ]\n    }\n\n```", "```py\n    http OPTIONS :8000/toys/2\n```", "```py\n    curl -iX OPTIONS localhost:8000/toys/2\n```", "```py\n    HTTP/1.0 200 OK\n    Allow: DELETE, PUT, OPTIONS, GET\n    Content-Length: 169\n    Content-Type: application/json\n    Date: Mon, 16 Oct 2017 04:30:04 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"description\": \"\", \n        \"name\": \"Toy Detail\", \n        \"parses\": [\n            \"application/json\", \n            \"application/x-www-form-urlencoded\", \n            \"multipart/form-data\"\n        ], \n        \"renders\": [\n            \"application/json\", \n            \"text/html\"\n        ]\n    }\n\n```", "```py\nhttp -f POST :8000/toys/ name=\"Ken in Rome\" description=\"Ken loves Rome\" toy_category=\"Dolls\" was_included_in_home=false release_date=\"2017-10-09T12:11:37.090335Z\" \n```", "```py\ncurl -iX POST -d '{\"name\":\"Ken in Rome\", \"description\": \"Ken loves Rome\", \"toy_category\":\"Dolls\", \"was_included_in_home\": \"false\", \"release_date\": \"2017-10-09T12:11:37.090335Z\"}' localhost:8000/toys/ \n```", "```py\nname=Ken+in+Rome&description=Ken+loves+Rome&toy_category=Dolls&was_included_in_home=false&release_date=2017-10-09T12%3A11%3A37.090335Z \n```", "```py\nHTTP/1.0 201 Created\nAllow: GET, OPTIONS, POST\nContent-Length: 157\nContent-Type: application/json\nDate: Mon, 16 Oct 2017 04:40:02 GMT\nServer: WSGIServer/0.2 CPython/3.6.2\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n    \"description\": \"Ken loves Rome\",\n    \"id\": 6,\n    \"name\": \"Ken in Rome\",\n    \"release_date\": \"2017-10-09T12:11:37.090335Z\",\n    \"toy_category\": \"Dolls\",\n    \"was_included_in_home\": false\n}\n```", "```py\nhttp PATCH :8000/toys/\n```", "```py\ncurl -iX PATCH localhost:8000/toys/\n```", "```py\n    HTTP/1.0 405 Method Not Allowed\n    Allow: GET, OPTIONS, POST\n    Content-Length: 42\n    Content-Type: application/json\n    Date: Mon, 16 Oct 2017 04:41:35 GMT\n    Server: WSGIServer/0.2 CPython/3.6.2\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"detail\": \"Method \\\"PATCH\\\" not allowed.\"\n    }\n```"]