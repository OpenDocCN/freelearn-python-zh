- en: '24'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Managing the IoT Box
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Odoo provides support for the **Internet of Things** (**IoT**). The IoT is
    a network of devices/sensors that exchange data over the internet. By connecting
    such devices with a system, you can use them. For instance, by connecting a printer
    with Odoo, you can send PDF reports directly to the printer. Odoo uses a piece
    of hardware called the **IoT Box**, which is used to connect devices such as printers,
    calipers, payment devices, footswitches, and more. In this chapter, you will learn
    how to set up and configure the IoT Box. Here, we’ll cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Flashing the IoT Box image for Raspberry Pi
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Connecting the IoT Box with a network
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding the IoT Box to Odoo
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Loading drivers and listing connected devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Taking input from devices
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Accessing the IoT Box through SSH
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Configuring a **point of** **sale** (**POS**)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sending PDF reports directly to a printer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that the goal of this chapter is to install and configure the IoT Box.
    Developing hardware drivers is outside the scope of this book. If you want to
    learn about the IoT Box in more depth, explore the `iot` module in the Enterprise
    Edition.
  prefs: []
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box is a **Raspberry Pi**-based device. The recipes in this chapter
    are based on the **Raspberry Pi 3 Model B+**, available at [https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/](https://www.raspberrypi.org/products/raspberry-pi-3-model-b-plus/).
    The IoT Box is part of the Enterprise Edition, so you will need to use the Enterprise
    Edition to follow the recipes in this chapter.
  prefs: []
  type: TYPE_NORMAL
- en: 'All code used in this chapter can be downloaded from the following GitHub repository:
    [https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter24](https://github.com/PacktPublishing/Odoo-17-Development-Cookbook-Fifth-Edition/tree/main/Chapter24).'
  prefs: []
  type: TYPE_NORMAL
- en: Flashing the IoT Box image for Raspberry Pi
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, you will learn how to flash a **microSD** card with an image
    of the IoT Box. Note that this recipe is only for those who have purchased the
    **blank Raspberry Pi**. If you have purchased the official IoT Box from Odoo,
    you can skip this recipe as it is preloaded with the IoT Box image.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Raspberry Pi 3 Model B+ uses a microSD card, so we have used a microSD card
    for this recipe. You will need to connect a microSD card to your computer.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to install an IoT Box image onto your SD card:'
  prefs: []
  type: TYPE_NORMAL
- en: Insert a microSD card into your computer (use an adapter if your computer doesn’t
    have a dedicated slot).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download the IoT Box image from Odoo’s nightly builds. The image is available
    at [https://nightly.odoo.com/master/iotbox/](https://nightly.odoo.com/master/iotbox/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Download and install **balenaEtcher** on your computer. You can download this
    from [https://www.balena.io/etcher/](https://www.balena.io/etcher/).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open balenaEtcher, select the IoT Box image (we are using version 23.09 of
    the IoT Box image), and choose to flash your microSD card. You’ll see the following
    screen:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.1 – Flashing the SD card with the IoT Box image](img/B20997_24_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.1 – Flashing the SD card with the IoT Box image
  prefs: []
  type: TYPE_NORMAL
- en: Click on the **Flash!** button and wait until the process completes.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the microSD card and place it in the Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After these steps, your microSD card should be loaded with the IoT Box image
    and ready to be used in the IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this recipe, we have installed the IoT Box image on a microSD card. In the
    second step, we downloaded the IoT Box image from the Odoo nightly builds. On
    the nightly page, you can find different images for the IoT Box. You need to choose
    the latest image from the Odoo nightly builds. When writing this book, we used
    the latest image, which was `iotboxv23_11.zip`. The Odoo IoT Box image is based
    on the Raspbian Stretch Lite OS, and the image is loaded with the libraries and
    modules required to integrate the IoT Box with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 3*, we downloaded the balenaEtcher utility tool to flash the microSD
    card.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: In this recipe, we used balenaEtcher to flash the microSD card, but you can
    use any other tools to flash the microSD card.
  prefs: []
  type: TYPE_NORMAL
- en: In *step 4*, we flashed the microSD card with the IoT Box image. Note that this
    process can take several minutes. On completion of the process, the microSD card
    will be ready to be used.
  prefs: []
  type: TYPE_NORMAL
- en: 'Perform the following steps if you want to verify whether the image was flashed
    successfully:'
  prefs: []
  type: TYPE_NORMAL
- en: Mount the microSD card into Raspberry Pi.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Connect it to the power supply and attach the external display through an HDMI
    cable (in practical usage, an external display is not compulsory; we have used
    it here just for verification purposes).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'The OS will boot up and show the following page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.2 – The IoT Box screen](img/B20997_24_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.2 – The IoT Box screen
  prefs: []
  type: TYPE_NORMAL
- en: If you are not using a display, you can just connect the IoT Box to a power
    supply, and after some time, you will see the Wi-Fi network of the IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In previous versions of Odoo, the PosBox was used in POS applications. The IoT
    Box supports all the features of the PosBox, so if you are using the Community
    Edition of Odoo and you want to integrate devices, you can use the same IoT Box
    image to connect Odoo instances with different devices. See the *Configuring a
    POS* recipe for more information.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting the IoT Box with a network
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box communicates with an Odoo instance through the network. Connecting
    the IoT Box is a crucial step, and if you make a mistake here, you might encounter
    errors when connecting the IoT Box with Odoo.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Mount the microSD card with the IoT Box image into the Raspberry Pi and then
    connect the Raspberry Pi to the power supply.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Raspberry Pi 3 Model B+ supports two types of network connection—**Ethernet**
    **and Wi-Fi**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Connecting the IoT Box through Ethernet is simple; you just need to connect
    your IoT Box with the **RJ45 Ethernet cable**, and the IoT Box is then ready to
    be used. Connecting the IoT Box through Wi-Fi is complicated as you might not
    have a display attached to it. Perform the following steps to connect the IoT
    Box through Wi-Fi:'
  prefs: []
  type: TYPE_NORMAL
- en: Connect the IoT Box to the power supply (if the Ethernet cable is plugged into
    the IoT Box, remove it and restart the IoT Box).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open your computer and connect to the Wi-Fi network, named `IoTBox`, as shown
    in the following screenshot (no password is needed):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.3 – IoT Box Wi-Fi network](img/B20997_24_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.3 – IoT Box Wi-Fi network
  prefs: []
  type: TYPE_NORMAL
- en: 'After connecting to the Wi-Fi network, you’ll see a popup with the IoT Box
    home page, as shown in the following screenshot (if this does not work, open the
    IP address of the box in the browser):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.4 – Connecting to the IoT Box](img/B20997_24_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.4 – Connecting to the IoT Box
  prefs: []
  type: TYPE_NORMAL
- en: 'Set **IoT Box Name** and keep **Server token** empty, then click on **Next**.
    This will redirect you to a page where you can see a list of Wi-Fi networks:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.5 – Connecting to Wi-Fi](img/B20997_24_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.5 – Connecting to Wi-Fi
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: You can use a server token if you are using the Enterprise Edition and you want
    to connect the IoT Box with Odoo right away. You can get a server token from your
    Odoo instance; refer to the next recipe to learn more about it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Select the Wi-Fi network that you want to connect to and fill in the **Password**
    field. After doing this, click on the **Connect** button. If you entered the correct
    information, you will be redirected to the final page:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.6 – Confirmation page](img/B20997_24_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.6 – Confirmation page
  prefs: []
  type: TYPE_NORMAL
- en: After performing these steps, your IoT Box is connected to the network and ready
    to be integrated with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Connecting the Odoo instance to the IoT Box through Ethernet is simple; just
    connect your IoT Box with the RJ45 Ethernet cable, and the IoT Box is ready to
    be used. It’s different when you want to connect the IoT Box with Wi-Fi; this
    is difficult because the IoT Box doesn’t have a display or GUI. You do not have
    an interface to enter your Wi-Fi network password. Consequently, the solution
    to this problem is to disconnect your IoT Box from the Ethernet cable (if it is
    connected) and restart it. In such cases, the IoT Box will create its own Wi-Fi
    hotspot, named `IoTBox` or similar, as shown in *step 2*. You need to connect
    the Wi-Fi with the name `IoTBox`; luckily, it does not require a password. Once
    you connect to the `IoTBox` Wi-Fi, you’ll get a popup, as shown in *step 3*. Here,
    you can name your IoT Box something like `Assembly-line IoT Box`. Keep the server
    token empty for now; we will learn more about it in the *Adding the IoT Box to
    Odoo* recipe. Then, click on the **Next** button.
  prefs: []
  type: TYPE_NORMAL
- en: Upon clicking the **Next** button, you will be shown a list of Wi-Fi networks,
    as shown in *step 4*. Here, you can connect the IoT Box to your Wi-Fi network.
    Make sure you choose the right network. You need to connect the IoT Box with the
    same Wi-Fi network as the computer on which the Odoo instance is going to be used.
    The IoT Box and the Odoo instance communicate within a **local area network**
    (**LAN**). This means that if both are connected to different networks, they cannot
    communicate, and so IoT will not work.
  prefs: []
  type: TYPE_NORMAL
- en: After choosing the right Wi-Fi network, click on **Connect**. Then, the IoT
    Box will turn off its hotspot and reconnect to your configured Wi-Fi network.
    That’s it—the IoT Box is ready to be used.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the IoT Box to Odoo
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Our IoT Box is connected to the local network and ready to be used with Odoo.
    In this recipe, we will connect the IoT Box with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure the IoT Box is on and that you have connected the IoT Box to the same
    Wi-Fi network as the computer with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are a few things you need to take care of; otherwise, the IoT Box will
    not be added to Odoo:'
  prefs: []
  type: TYPE_NORMAL
- en: If you are testing the IoT Box in a local instance, you will need to use `http://192.168.*.*:8069`
    (your local IP) instead of `http://localhost:8069`. If you use localhost, the
    IoT Box will not be added to your Odoo instance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You need to connect the IoT Box with the same Wi-Fi/Ethernet network as the
    computer on which the Odoo instance is being used. Otherwise, the IoT Box will
    not be added to your Odoo instance.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If your Odoo instance is running with multiple databases, IoT Box will not auto-connect
    with the Odoo instance. Use the `--db-filter` option to avoid this issue.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to connect the IoT Box with Odoo, first you will need to install the
    `iot` module on your Odoo instance:'
  prefs: []
  type: TYPE_NORMAL
- en: 'To do so, go to the **Apps** menu and search for the **Internet of Things**
    module. The module will look like this. Activate the module, and we are good to
    go:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.7 – Installing the iot module](img/B20997_24_07.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.7 – Installing the iot module
  prefs: []
  type: TYPE_NORMAL
- en: After installing the `iot` module, you can connect your instance with the IoT
    Box. Then, connect your IoT Box manually with the Odoo instance by clicking on
    the **IoT** menu.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click on the **Connect** button on the control panel. This will show the following
    popup. Copy the **Token** value:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.8 – Dialog to connect the IoT Box with Odoo](img/B20997_24_08.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.8 – Dialog to connect the IoT Box with Odoo
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the IP of the IoT Box with port `8069`. This will display the home page
    of the IoT Box. Click on the **configure** button in the **Name** section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.9 – The IoT Box home page](img/B20997_24_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.9 – The IoT Box home page
  prefs: []
  type: TYPE_NORMAL
- en: 'Set the **IoT Box Name** setting and paste in the server token. Then, click
    on the **Connect** button. This will start configuring the IoT Box. Wait for the
    process to complete:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.10 – The IoT Box home page](img/B20997_24_010.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.10 – The IoT Box home page
  prefs: []
  type: TYPE_NORMAL
- en: 'Check the **IoT** menu in your Odoo instance. You will find a new IoT Box:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.11 – Successfully connected IoT Box](img/B20997_24_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.11 – Successfully connected IoT Box
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Connecting the IoT Box with Odoo is important. This way, Odoo will know the
    IP of the IoT Box. The IP will be used by Odoo to communicate with devices connected
    to that device. This will also make sure, in the case of multiple IoT Boxes, that
    Odoo communicates with the right one. The rest is straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to add an IoT Box to an Odoo instance during Wi-Fi configuration,
    that can be done. In the *Connecting the IoT Box with a network* recipe, we kept
    the **Server token** field empty. You just need to add the server token in this
    step:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.12 – Adding the server token during Wi-Fi configuration](img/B20997_24_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.12 – Adding the server token during Wi-Fi configuration
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Avoid using the DHCP network when using the IoT Box. This is because the IoT
    Box network configuration is added based on the IP address. If you use the DHCP
    network, then the IP address is assigned dynamically. So, there is a chance that
    your IoT Box will stop responding due to the new IP address. To avoid this issue,
    you can map the MAC address of the IoT Box to the fixed IP address.
  prefs: []
  type: TYPE_NORMAL
- en: Connecting an IoT Box with a pairing code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'There is one more alternative way to connect an IoT Box, which is through a
    `<IoTBOX IP>:8069/point_of_sale/display`. Once you open the POS client display,
    you will be able to see the pairing code as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.13 – The pairing code for the IoT Box](img/B20997_24_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.13 – The pairing code for the IoT Box
  prefs: []
  type: TYPE_NORMAL
- en: Then, you just need to use the pairing code in the IoT Box connection dialog
    in your Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: The pairing code will not be displayed if you are not connected to the internet.
  prefs: []
  type: TYPE_NORMAL
- en: In the preceding screenshot, we have seen how you can get the pairing code for
    the POS client display. But if you have an Ethernet connection and a printer,
    you can get the pairing code without a display. You just need to connect the IoT
    Box with the Ethernet and the printer. Once the IoT Box is booted, it will print
    a receipt with the pairing code. Then, you just need to use the pairing code in
    the IoT Box connection dialog in your Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'If you want to connect an existing IoT Box with any other Odoo instance, you
    will need to clear the configuration. You can clear the IoT Box configuration
    with the **Clear** button on the Odoo server configuration page of the IoT Box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.14 – Clearing the IoT Box configuration](img/B20997_24_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.14 – Clearing the IoT Box configuration
  prefs: []
  type: TYPE_NORMAL
- en: Loading drivers and listing connected devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box is not just limited to the Enterprise Edition. You can use it like
    the PosBox in the Community Edition. The device’s integration is part of the Enterprise
    Edition, so the IoT Box image does not come with device drivers; you need to load
    them manually. Usually, if you connect the IoT Box with an Enterprise Odoo instance,
    the IoT Box loads the device driver interfaces automatically. But sometimes, you
    might have custom drivers or drivers that are not loaded correctly. In that case,
    you can manually load the drivers. In this recipe, we will see how you can load
    drivers and get a list of connected devices.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure the IoT Box is on and that you have connected it to the same Wi-Fi
    network as the computer with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to load device drivers into the IoT Box:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the IoT Box home page and click on the **handlers list** button at the
    bottom:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.15 – handlers list button](img/B20997_24_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.15 – handlers list button
  prefs: []
  type: TYPE_NORMAL
- en: 'The **handlers list** button will redirect you to the **Handlers list** page,
    where you will find the **Load handlers** button. Click on the button to load
    the drivers:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.16 – Drivers list](img/B20997_24_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.16 – Drivers list
  prefs: []
  type: TYPE_NORMAL
- en: 'Go back to the **IoT Box** home page. Here, you will see a list of connected
    devices:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.17 – Connected devices](img/B20997_24_017.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.17 – Connected devices
  prefs: []
  type: TYPE_NORMAL
- en: After performing these steps, the IoT Box will be ready with the devices you
    specified, and you can start using the devices in your applications.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You can load the drivers from the home page of the IoT Box. You can do this
    using the **Load handlers** button at the bottom. Note that this will only work
    if your IoT Box is connected with the Odoo instance using the Enterprise Edition.
    After loading the drivers, you will be able to see a list of devices on the IoT
    Box home page. You can also see a list of connected devices in the Odoo instance
    through the **IoT** | **Devices** menu. In this menu, you will see a list of connected
    devices for each IoT Box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.18 – Connected devices list](img/B20997_24_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.18 – Connected devices list
  prefs: []
  type: TYPE_NORMAL
- en: 'Right now, the IoT Box supports a few hardware devices, such as cameras, footswitches,
    printers, and calipers. A list of devices that are recommended by Odoo can be
    found here: [https://www.odoo.com/page/iot-hardware](https://www.odoo.com/page/iot-hardware).
    If your device is not supported, you can pay for driver development.'
  prefs: []
  type: TYPE_NORMAL
- en: Taking input from devices
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box only supports limited devices. Right now, these hardware devices
    are integrated with the manufacturing application. But if you want, you can integrate
    supported devices with your module. In this recipe, we will capture a picture
    from a camera through our IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We will be using the `my_hostel` module from the *Logging user changes in a
    chatter* recipe of [*Chapter 23*](B20997_23.xhtml#_idTextAnchor1210), *Managing
    Emails in Odoo*. In this recipe, we will add a new field to capture and store
    images when a borrower returns a book. Make sure the IoT Box is on and that you
    have connected a supported camera device with it.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to capture a picture using a camera with the IoT
    Box:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add a dependency in the manifest file:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add new fields in the `hostel.student` model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add these fields into the form view of the `hostel.student` model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Update the `my_hostel` module to apply the changes. After the update, you will
    have a button to capture images:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.19 – Capturing an image via IoT](img/B20997_24_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.19 – Capturing an image via IoT
  prefs: []
  type: TYPE_NORMAL
- en: Note that the button will not capture images if the webcam is not connected
    to the IoT Box or drivers are not loaded in the IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In *step 1*, we added a dependency to the `quality_iot` module in the manifest
    file. The `quality_iot` module is part of the Enterprise Edition and contains
    a widget that allows you to request an image from a camera through the IoT Box.
    This will install `stock` modules, but for the sake of simplicity, we will use
    `quality_iot` as a dependency. If you do not want to use this dependency, you
    can create your own field widget. Refer to the *Creating custom widgets* recipe
    in [*Chapter 15*](B20997_15.xhtml#_idTextAnchor861), *Web Client Development*,
    to learn more about widgets.
  prefs: []
  type: TYPE_NORMAL
- en: 'In *step 2*, we added fields required to capture an image from the camera.
    To capture the image, we need two things: the device identifier and the IP address
    of the IoT Box. We want to give the user the option to select the camera, so we
    added a `device_id` field. The user will choose a camera to capture the image,
    and based on the selected camera device, we extracted IP and device identifier
    information from related fields. Based on these fields, Odoo will know where to
    capture the image, if you have multiple IoT Boxes. We have also added a binary
    field, `picture`, to save the image.'
  prefs: []
  type: TYPE_NORMAL
- en: In *step 3*, we added fields in the form view. Note that we used the `iot_picture`
    widget on the `picture` field. We added `ip` and `identifier` fields as invisible
    fields because we do not want to show them to the user; rather, we want to use
    them in the `picture` field options. This widget will add the button in the form
    view; upon clicking the button, Odoo will make a request to the IoT Box to capture
    the image. The IoT Box will return image data as the response. This response will
    be saved in the `picture` binary field.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The IoT Box supports Bluetooth calipers. If you want to take measurements in
    your module, you can use the `iot_measure` widget to fetch them in Odoo. Note
    that as with `iot_picture`, here, you will also need to add `ip` and `identifier`
    invisible fields in the form view:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: This will fill the `measure` field with the data captured from the IoT caliper.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing the IoT Box through SSH
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box is running on the Raspbian OS, and it is possible to access the
    IoT Box through SSH. In this recipe, we will learn how to access the IoT Box through
    SSH.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure the IoT Box is on and you have connected the IoT Box to the same Wi-Fi
    network as the computer with the Odoo instance.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to connect the IoT Box through SSH, you will need the IP address of
    the IoT Box. You can see this IP address in its form view. As an example, in this
    recipe, we will use `192.168.43.6` as the IoT Box IP address, so replace this
    with your IP address. Perform the following steps to access the IoT Box through
    SSH:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the terminal and execute the following command:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'If you add the right password, you can access the shell. Execute the following
    command to see the directory:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: As you have SSH access, you can explore the full filesystem of the IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We used the Pi user with the password `raspberry` to access the IoT Box through
    SSH. SSH connection is used when you want to debug a problem in the IoT Box. SSH
    doesn’t need any explanation, but let’s see how Odoo works in the IoT Box.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is some information that might help you debug the issue:'
  prefs: []
  type: TYPE_NORMAL
- en: The IoT Box is internally running some Odoo modules. The name of these modules
    usually starts with `hw_`, and they are available in the Community Edition. You
    can find all the modules in the `/``home/pi/odoo/addon` directory.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: If you want to see the Odoo server log, you can access it from the `/``var/log/odoo/odoo-server.log`
    file.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Odoo is running through a service named `odoo`; you can use the following command
    to start, stop, or restart the service:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`sudo service` `odoo start/restart/stop`'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: Customers mostly turn the IoT Box off by disconnecting the power. This means
    that the IoT Box OS does not shut down properly in such cases. To avoid corruption
    of the system, the IoT Box filesystem is read-only.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Note that the IoT Box is only connected to the local machine. Consequently,
    you cannot access the shell directly from a remote location (through the internet).
    If you want to access the IoT Box remotely, you can paste the `ngrok` authentication
    token key into the IoT Box’s remote debug page, as shown in the following screenshot.
    This will enable the TCP tunnel from the IoT Box so that you can connect the IoT
    Box through SSH from anywhere. Learn more about `ngrok` at [https://ngrok.com/](https://ngrok.com/):'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.20 – Debugging with a ngrok token](img/B20997_24_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.20 – Debugging with a ngrok token
  prefs: []
  type: TYPE_NORMAL
- en: Once you add your token, you will be able to access the IoT Box from remote
    locations.
  prefs: []
  type: TYPE_NORMAL
- en: Configuring a POS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box works with POS applications. In this recipe, we will learn how to
    configure the IoT Box for POS applications.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure the IoT Box is on and you have connected the IoT Box to the same Wi-Fi
    network as the computer with the Odoo instance. Also, install the POS application
    if it is not already installed.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Perform the following steps to configure the IoT Box for the POS application:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Open the POS application, and open **Settings** from the POS session dropdown:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.21 – POS session settings](img/B20997_24_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.21 – POS session settings
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Edit** button and click on the **IoT Box** checkbox. This will
    enable more options:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.22 – Selecting IoT devices](img/B20997_24_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.22 – Selecting IoT devices
  prefs: []
  type: TYPE_NORMAL
- en: Select the devices that you want to use in a POS session. If you are going to
    use hardware, such as a barcode scanner, select the relevant devices.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Save the changes by clicking the **Save** button in the control panel.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: After the configuration, you will be able to use the IoT Box in the POS application.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The IoT Box can be used with POS applications such as the PosBox. In order to
    use the IoT Box in a POS application, you have to connect the IoT Box to the Odoo
    instance. If you don’t know how to connect the IoT Box, follow the *Adding the
    IoT Box to Odoo* recipe. Once you have connected the IoT Box to Odoo, you will
    be able to select the IoT Box in the POS application, as shown in *step 2*.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, you can select the hardware you want to use in the POS session. After
    saving the changes, if you open the POS session, you will be able to use the enabled
    hardware at the POS. If you enabled specific hardware from the settings but the
    hardware is not connected to the IoT Box, you will see the following warning in
    the top bar:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.23 – IoT Box connection issues](img/B20997_24_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.23 – IoT Box connection issues
  prefs: []
  type: TYPE_NORMAL
- en: You can click on these warnings to try to connect again.
  prefs: []
  type: TYPE_NORMAL
- en: There’s more…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The POS application is part of the Community Edition. If you are using the
    Community Edition, instead of the **IoT Box** selection, you will see the **IoT
    Box IP Address** field in the POS settings:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 24.24 – IoT Box settings in the Community Edition](img/B20997_24_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.24 – IoT Box settings in the Community Edition
  prefs: []
  type: TYPE_NORMAL
- en: If you want to integrate hardware in the Community Edition, you will need to
    use the IP address of the IoT Box in the field.
  prefs: []
  type: TYPE_NORMAL
- en: Sending PDF reports directly to a printer
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The IoT Box runs the **Common UNIX Printing System** (**CUPS**) server by default.
    CUPS is a printing system that allows a computer to act as a printing server.
    You can learn more about it at [https://www.cups.org/](https://www.cups.org/).
    So, as the IoT Box runs CUPS internally, you can connect network printers with
    the IoT Box. In this recipe, we will see how you can print PDF reports directly
    from Odoo.
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Make sure the IoT Box is on and you have connected the IoT Box with Odoo.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Follow these steps to print reports directly from Odoo:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the IoT Box home page via IP.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Printer Server** button at the bottom.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: This will open the CUPS configuration home page. Configure your printer here.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Once you have configured the printer, you will be able to see the printer in
    the IoT device list. Activate developer mode and open **Settings**| **Technical**
    | **Actions** | **Report**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Search for the report that you want to print, open the form view, and select
    the printer in the **IoT Device** field, as shown in the following screenshot:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 24.25 – Options to select an IoT device](img/B20997_24_025.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 24.25 – Options to select an IoT device
  prefs: []
  type: TYPE_NORMAL
- en: Once this configuration is done, report PDFs will be sent directly to the printer.
  prefs: []
  type: TYPE_NORMAL
- en: How it works…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This recipe is straightforward in terms of configuration, but there are a few
    things that you should know. The IoT Box uses the CUPS server to print reports.
    You can access the CUPS home page at `http://<IoT` `Box IP>:631`.
  prefs: []
  type: TYPE_NORMAL
- en: With CUPS, you can add/remove your printer. On the home page of CUPS, you will
    be able to see all the documentation that you need to help you connect different
    types of printers. Once you have configured the printer, you will find your printer
    in the IoT device list. Then, you can select this IoT device (printer) in the
    report record. Usually, when you print a report in Odoo, it will download a PDF
    of the report. But when this configuration is done, instead of downloading the
    report, Odoo will send the PDF report directly to the selected printer. Note that
    only reports whose record has the printer set in the IoT device field will be
    sent to the printer.
  prefs: []
  type: TYPE_NORMAL
