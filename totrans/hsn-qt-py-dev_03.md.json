["```py\n# -*- coding: utf-8 -*-\nfrom PyQt5.QtCore import QUrl\nfrom PyQt5.QtQml import QQmlApplicationEngine\n\nclass UTools(): \n\n    def __init__(self):\n        self.us1 = \"QML with Python.\"\n\n    def u_qml(self):\n        self.qwid = QQmlApplicationEngine()\n        self.qwid.load(QUrl('u_qml.qml'))\n\nif __name__ == \"__main__\":\n    ut = UTools()\n```", "```py\n# -*- coding: utf-8 -*-\nfrom PyQt5 import QtWidgets\nfrom u_tools import UTools\n\nclass UApp(QtWidgets.QWidget, UTools):\n\n    def __init__(self, parent=None):\n        QtWidgets.QWidget.__init__(self, parent)\n        UTools.__init__(self)\n        self.start_qml()\n\n    def start_qml(self):\n        self.u_qml()\n\nif __name__ == \"__main__\":\n    import sys\n    app = QtWidgets.QApplication(sys.argv)\n    uap = UApp()\n    # uap.show()\n    sys.exit(app.exec_())\n```", "```py\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 350\n    height: 590\n    title: qsTr(\"First Qml\")\n}\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick.LocalStorage 2.0 as Database\nimport \"../privateComponents\"\n```", "```py\nimport \"somefile.js\" as Script\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\nimport QtQuick.Window 2.2\n\nWindow {\n    ...\n}\n```", "```py\nimport QtQuick.Window 2.2 as UQml\n\nUQml.Window {\n    visible: true\n    width: 350\n    height: 590\n    title: qsTr(\"First Qml\")\n}\n```", "```py\nimport QtQuick 2.7 as UQml\nimport QtQuick.Window 2.2 as UQml\n\nUQml.Window {\n    ...\n    UQml.Rectangle {\n        color: \"#FF0000\"\n        width: 140\n        height: 140\n        border.color: \"#FF0000\"\n        border.width: 1\n        radius: width * 0.5\n    } \n}\n```", "```py\nimport \"Path/To/The/Directory/With/Qml/\" as Qualifier\n```", "```py\nimport QtQuick 2.7\n\nRectangle {\n    color: Qt.rgba(1, 0, 0, 1);\n    border.color: Qt.rgba(0.9, 0, 0, 1);\n    border.width: 1\n    radius: width * 0.5\n}\n```", "```py\nimport QtQuick.Window 2.2 as UQml\nimport \"qmls\" as Uqmls\n\nUQml.Window {\n    ...\n    Uqmls.UCircle {\n        width: UQml.Window.width\n        height: UQml.Window.height\n    }\n}\n```", "```py\nimport \"Path/To/Javascript/File\" as Identifier\n```", "```py\nfunction hsize(height) {\n    return height - 10;\n}\n```", "```py\n...\nimport \"qmls\" as Uqmls\nimport \"jscripts/u_js.js\" as Ujs\n\nUQml.Window {\n    ...\n```", "```py\n...\nUQml.Window {\n    ...\n    Uqmls.UCircle {\n        id: rcircle\n        anchors.centerIn: parent\n        ...\n    }\n    MouseArea {\n        anchors.fill: parent\n        onClicked: rcircle.height = Ujs.hsize(rcircle.height);\n    }\n}\n```", "```py\nimport QtQuick 2.7\n\nRectangle {}\n```", "```py\nimport QtQuick 2.7\nimport QtQuick.Window 2.2 as UQml\nimport \"qmls\" as Uqmls\n\nUQml.Window {\n    visible: true\n    width: 350\n    height: 590\n    title: qsTr(\"First Qml\")\n    ...\n}\n```", "```py\n...\n    ....\n    Uqmls.URect {\n        id: rect1\n        color: \"#000000\"\n        width: parent.width - (parent.width / 5)\n        height: parent.height\n        MouseArea {\n            anchors.fill: parent\n            onClicked: rect1.color = \"#222222\";\n        }\n    }\n}\n```", "```py\n...\n    ...\n    Uqmls.URect {\n        id: rect2\n        color: \"#00293b\"\n        x: rect1.width\n        width: parent.width / 5 \n        height: parent.height\n        MouseArea {\n            anchors.fill: parent\n            onClicked: rect2.color = \"#340147\";\n        }\n    }\n}\n```", "```py\nimport QtQuick 2.7\n\nText {\n    color: \"#FFFFFF\"\n}\n```", "```py\n...\n    ...\n        ...\n        Uqmls.UText {\n            id: utext1\n            x: 20\n            y: 50\n            font.family: \"Open\"\n            font.pixelSize: 37\n            width: rect1.width - (20 * 2)\n            text: \"text 1\"\n        }\n        Uqmls.UText {\n            id: utext2\n            x: 20\n            y: utext1.height + (50 * 2)\n            font.family: \"Verdana\"\n            font.pixelSize: 27\n            width: rect1.width - (20 * 2) \n        }\n        Uqmls.UText {\n            id: utext3\n            x: 20\n            y: (utext1.height + utext2.height) + (50 * 3)\n            font.family: \"Open Sans\"\n            font.pointSize: 14\n            width: rect1.width - (20 * 2)\n        }\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n    Uqmls.URect {\n        ...\n        MouseArea {\n            anchors.fill: parent\n            onClicked: {\n                rect2.color = \"#340147\";\n                utext2.text = \"text 2\";\n                utext3.text = \"text 3\";\n            }\n        }\n    } \n}\n```", "```py\nimport QtQuick.Controls 2.2\n\nButton {\n    flat: true\n    highlighted: true\n}\n```", "```py\n...\n    ...\n    Uqmls.URect {\n        id: rect1\n        ...\n        property int rzwidth: parent.width - (parent.width / 5)\n        width: parent.width\n        height: parent.height\n        MouseArea {\n            ...\n            onClicked: {\n                rect1.width = rect1.rzwidth;\n                rect2.visible = true;\n            }\n        }\n    }\n    ...\n...\n```", "```py\n...\n    ...\n    Uqmls.URect {\n        id: rect2\n        visible: false\n        ...\n        Uqmls.UButton {\n            text: \"Hide\"\n            onClicked: {\n                rect2.visible = false;\n                rect1.width = UQml.Window.width;\n            }\n        }\n    } \n}\n```", "```py\nproperty int rzwidth: UQml.Window.width - (UQml.Window.width / 5)\n```", "```py\nonClicked: { rect2.visible = false; }\n```", "```py\nText {\n    font {pixelSize: 12; family: \"Verdana\"}\n}\n```", "```py\nItem {\n    signal clicked\n    signal hovered()\n    signal actionPerformed(string action, var actionResult)\n}\n```", "```py\n...\nUQml.Window {\n    ...\n    color: \"#000F1F\"\n```", "```py\n    Uqmls.URect {\n        id: rect1\n        signal colored(color uColor)\n        ...\n        property int rzwidth\n        ...\n        height: parent.height / 10\n        onColored: rect1.color = uColor;\n        MouseArea {\n            id: marea1\n            anchors.fill: parent\n        }\n        Connections {\n            target: marea1\n            onClicked: {\n                rect1.width = rect1.rzwidth;\n                rect2.visible = true;\n            }\n            onPressed: rect1.colored(\"#002737\")\n        }\n    }\n```", "```py\n    Uqmls.URect {\n        ...\n        Uqmls.UButton {\n            id: ubut1\n            width: rect2.width\n            height: rect2.height / 10\n            text: \"Hide\"\n            onClicked: {\n                rect2.visible = false;\n                rect1.width = UQml.Window.width;\n            }\n        }\n    }\n}\n```", "```py\n...\n    ...\n    Uqmls.URect {\n        id: rect1\n        ...\n        function onUcolor(ucolor) {\n            if (ucolor==\"#000F1D\") {\n                return \"#000F1F\";\n            } else {\n                return \"#000F1D\";\n            };\n        } \n        onColored: rect1.color = onUcolor(rect1.color);\n        ...\n    ...\n...\n```", "```py\nimport QtQml 2.0\n```", "```py\n#include <QtQml>\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n\nItem {\n    id: main_item\n    anchors.fill: parent\n    anchors.margins: 20\n```", "```py\n...\n    ...\n    Item {\n        id: i1\n        x: 50\n        width: parent.width / 2\n        height: parent.height / 4\n        z: 1\n        opacity: 0.5\n        Rectangle {\n            id: r1\n            width: parent.width\n            height: parent.height\n            color: \"#FF0000\"\n        }\n    }\n..\n```", "```py\n...\n    ...\n    Item {\n        id: i2\n        parent: i1\n        y: i1.height\n        width: parent.width / 2\n        height: parent.height / 4\n        scale: 2\n        z: 2\n        opacity: 0.7\n        Rectangle {\n            id: r2\n            width: parent.width\n            height: parent.height\n            color: \"#00FF00\"\n        }\n    }\n...\n```", "```py\n...\n    ...\n    Item {\n        id: i3\n        anchors.centerIn: parent\n        y: i1.height + i2.height\n        width: parent.width / 2\n        height: parent.height / 4\n        rotation: 90\n        z: 0\n        opacity: 0.9\n        Rectangle {\n            id: r3\n            width: parent.width\n            height: parent.height\n            color: \"#FFFF00\"\n        }\n    }\n...\n```", "```py\n...\n    ...\n    Item {\n        id: i4\n        parent: r3\n        width: parent.width\n        height: parent.height\n        z: 1\n        rotation: 45\n        scale: 0.7\n        Rectangle {\n            id: r4\n            anchors.centerIn: parent\n            width: parent.width\n            height: parent.height\n            antialiasing: true\n            color: \"#770077\"\n        }\n    }\n}\n```", "```py\n...\n    ...\n    Uqmls.UItem {\n        visible: true\n        width: rect1.width\n        height: parent.height - rect1.height\n        y: rect1.height\n    }\n    ...\n...\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtGraphicalEffects 1.0\n```", "```py\nimport QtQuick 2.7\nimport QtGraphicalEffects 1.0\n\nRectangle {\n    property color glowcolor\n    property color txglow\n    RectangularGlow {\n        id: rglow\n        anchors.fill: rectglow\n        glowRadius: 10\n        spread: 0.1\n        color: glowcolor\n          cornerRadius: rectglow.radius + glowRadius\n    }\n```", "```py\n    Rectangle {\n        id: rectglow\n        color: parent.color\n        anchors.centerIn: parent\n        width: parent.width / 1.5\n        height: parent.height / 1.5\n        radius: 14\n```", "```py\n        Text {\n            id: txt1\n            anchors.centerIn: parent\n            text: \"PUSH\"\n            font.family: \"Helvetica\"\n            font.pixelSize: parent.width / 8\n            font.weight: Font.Medium\n            font.letterSpacing: 2\n            color: parent.color\n        }\n        Glow {\n            anchors.fill: txt1\n            radius: 7\n            samples: 17\n            color: txglow\n            source: txt1\n        } \n    }\n}\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n\nGradient {\n    GradientStop {\n        position: 0.0;\n        color: \"red\";\n    }\n    GradientStop {\n        position: 0.27;\n        color: \"#AAFF00\";\n    }\n    GradientStop {\n        position: 0.534;\n        color: Qt.rgba(0.95,0,0,1);\n    }\n    GradientStop {\n        position: 0.7147;\n        color: \"yellow\";\n    }\n    GradientStop {\n        position: 1.0;\n        color: Qt.rgba(1,0,0,1);\n    }\n}\n```", "```py\nimport QtQuick 2.7\nimport \"gradients\" as UG\n\nRectangle {\n    radius: width * 0.5\n    antialiasing: true\n    gradient: UG.UGradient1 {}\n}\n```", "```py\nimport QtGraphicalEffects 1.0\n```", "```py\nimport QtQuick 2.7\nimport QtGraphicalEffects 1.0\nimport \"gradients\" as UG\n\nRectangle {\n    antialiasing: true\n    radius: width * 0.5\n    LinearGradient {\n        anchors.fill: parent\n        start: Qt.point(0, 0) \n        end: Qt.point(parent.height/2, parent.height/2)\n        source: parent\n        cached: true\n        gradient: UG.UGradient1 {}\n    }\n}\n```", "```py\nimport QtGraphicalEffects 1.0\n```", "```py\nimport QtQuick 2.7\nimport QtGraphicalEffects 1.0\nimport \"gradients\" as UG\n\nRectangle {\n    antialiasing: true\n    radius: width * 0.5\n    RadialGradient {\n        anchors.fill: parent\n        angle: 27\n        horizontalRadius: parent.width / 2\n        verticalRadius: parent.height / 2\n        horizontalOffset: 3\n        verticalOffset: 3\n        source: parent\n        cached: false\n        gradient: UG.UGradient1 {}\n    }\n}\n```", "```py\nimport QtGraphicalEffects 1.0\n```", "```py\nimport QtQuick 2.7\nimport QtGraphicalEffects 1.0\nimport \"gradients\" as UG\n\nRectangle {\n    antialiasing: true\n    radius: width * 0.5.\n    ConicalGradient {\n        anchors.fill: parent\n        angle: 1\n        horizontalOffset: 7\n        verticalOffset: 5\n        source: parent\n        cached: false\n        gradient: UG.UGradient1 {}\n    }\n}\n```", "```py\n...\n    ...\n    Grid {\n        visible: true\n        id: grid1\n        columns: 2\n        spacing: 20\n        padding: 20\n        width: rect1.width\n        height: parent.height - rect1.height\n        y: rect1.height\n        Uqmls.UCircle {\n            id: circle1\n            width: (parent.width / 2 - (parent.spacing * 2)) + 10\n            height: width\n        }\n        ...\n        Uqmls.URectGlow {\n            id: rectg1\n            width: (parent.width / 2 - (parent.spacing * 2)) + 10\n            height: width\n            color: Qt.rgba(0, 0.07, 0.14, 1);\n            glowcolor: Qt.rgba(0.007, 1, 1, 1);\n            txglow: Qt.rgba(0.007, 0.7, 0.7, 1);\n       }\n        ...\n    }\n...\n```", "```py\n...\n    ...\n    Uqmls.UItem {\n        visible: false\n    ...\n...\n```", "```py\nItem {\n    states: [ State { name: \"state1\"} ]\n    transitions: [ Transition {}]\n}\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\n...\n    ...\n        ...\n            ...\n            MouseArea {\n                anchors.fill: parent\n                onClicked: {i1.state == 'state1' ?;\n                    i1.state = '' : i1.state = 'state1';}\n            }\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n        ...\n        states: [\n            State {\n                name: \"state1\"\n                PropertyChanges { target: i1; x: 140 } \n            }\n        ]\n        transitions: [\n            Transition {\n                NumberAnimation { properties: \"x, y\" }\n            }\n        ]\n    ...\n...\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQml.StateMachine 1.0\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nBehavior on width {\n    Animation {}\n}\n```", "```py\n...\n    ...\n        ...\n            ...\n            MouseArea {\n                anchors.fill: parent\n                onClicked: {parent.y == 140 ?\n                        parent.y = 270 : parent.y = 140}\n            }\n            Behavior on y {\n                NumberAnimation {\n                    duration: 7000\n                    easing.type: Easing.OutInElastic\n                }\n            }\n        ...\n    ...\n...\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nSequentialAnimation {\n    Animation {}\n    Animation {}\n} \n// or:\nSequentialAnimation on width { \n    Animation {}\n    Animation {}\n}\n```", "```py\nimport QtQuick 2.7\n```", "```py\nParallelAnimation {\n    Animation {}\n    Animation {}\n}\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtPositioning 5.2\n```", "```py\nimport QtQuick 2.7\n```", "```py\nimport QtQuick 2.7\n```", "```py\n...\n    ...\n        ...\n            ...\n            SequentialAnimation on x {\n                id: sa1\n                running: false\n                loops: Animation.Infinite\n                NumberAnimation {\n                    from: 140\n                    to: 270\n                    duration: 7000\n                    easing.type: Easing.OutInElastic\n                }\n                NumberAnimation {\n                    from: 270\n                    to: 140\n                    duration: 7000\n                    easing.type: Easing.OutInElastic\n                }\n                PauseAnimation { duration: 140 }\n            }\n            MouseArea {\n                anchors.fill: parent\n                onClicked: sa1.running = true\n            }\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n        ...\n            ...\n            ParallelAnimation {\n                id: sa2\n                running: false\n                loops: Animation.Infinite\n                PropertyAnimation {\n                    target: r4\n                    property: \"rotation\"\n                    from: 0\n                    to: 360\n                    duration: 7000\n                    easing.type: Easing.OutInElastic\n                }\n                PropertyAnimation {\n                    target: r1\n                    property: \"rotation\"\n                    from: 0\n                    to: 360\n                    duration: 7000\n                    easing.type: Easing.InQuart\n                }\n            }\n            MouseArea {\n                anchors.fill: parent\n                onClicked: sa2.running = true\n            }\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n    Uqmls.UItem {\n        visible: true\n    ...\n...\n```", "```py\n...\n    ...\n    Grid {\n        visible: false\n    ...\n...\n```"]