["```py\n# /becoming_a_django_entdev/urls.py\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    path(\n```", "```py\n        '', \n```", "```py\n        include('becoming_a_django_entdev.chapter_7.urls')\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    if DEBUG:\n        EMAIL_HOST = os.getenv('EMAIL_HOST')\n        EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')\n        EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')\n        EMAIL_PORT = os.getenv('EMAIL_PORT')\n    else:\n        # Production Email Connection Settings\n        Pass\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nINSTALLED_APPS = [\n```", "```py\n    ...\n```", "```py\n    'django.contrib.sessions',\n```", "```py\n    'django.contrib.messages',\n```", "```py\n]\n```", "```py\nMIDDLEWARE = [\n```", "```py\n    ...\n```", "```py\n    'django.contrib.sessions.middleware.SessionMiddleware',\n```", "```py\n    'django.contrib.messages.middleware.MessageMiddleware',\n```", "```py\n]\n```", "```py\nTEMPLATES = [\n```", "```py\n    {\n```", "```py\n        ...\n```", "```py\n        'OPTIONS': {\n```", "```py\n            'context_processors': [\n```", "```py\n                ...\n```", "```py\n                'django.contrib.messages.context_processors.messages',\n```", "```py\n            ],\n```", "```py\n        },\n```", "```py\n    },\n```", "```py\n]\n```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nMESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'\n```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nfrom django.contrib.messages \n```", "```py\nimport constants as messages\n```", "```py\n...\n```", "```py\nif DEBUG:\n```", "```py\n    MESSAGE_LEVEL = messages.DEBUG\n```", "```py\nelse:\n```", "```py\n    pass\n```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nfrom django.contrib.messages \n```", "```py\nimport constants as messages\n```", "```py\n...\n```", "```py\nMESSAGE_TAGS = {\n```", "```py\n    messages.INFO: 'information',\n```", "```py\n}\n```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nMINOR = 50\n```", "```py\nMAJOR = 60\n```", "```py\nCRITICAL = 70\n```", "```py\nMESSAGE_TAGS = {\n```", "```py\n    messages.INFO: 'information',\n```", "```py\n    MINOR: 'minor',\n```", "```py\n    MAJOR: 'major',\n```", "```py\n    CRITICAL: 'critical',\n```", "```py\n}\n```", "```py\n    # /becoming_a_django_entdev/chapter_7/views.py\n    ...\n    from django.contrib \n    import messages\n    from django.template.response \n    import TemplateResponse\n    from django.views.generic.edit \n    import FormView\n    class FormClassView(FormView):\n        ...\n        def post(self, request, *args, **kwargs):\n            ...\n            if form.is_valid():\n                messages.add_message(\n                    request,\n                    messages.SUCCESS,\n                    'Your contact form submitted successfully'\n                )\n                context = {\n                    'title': 'FormClassView Page',\n                    'page_id': 'form-class-id',\n                    'page_class': 'form-class-page',\n                    'h1_tag': 'This is the FormClassView Page Using ContactForm',\n                    'form': form,\n                }\n        ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/views.py\n    ...\n    class FormClassView(FormView):\n        ...\n        def post(self, request, *args, **kwargs):\n            ...\n            if form.is_valid():\n                ...\n            else:\n                messages.add_message(\n                    request,\n                    messages.ERROR,\n                    'There was a problem submitting your contact form.<br />Please review the highlighted fields below.'\n                )\n                context = {\n                    'title': 'FormClassView Page - Please Correct The Errors Below',\n                    'page_id': 'form-class-id',\n                    'page_class': 'form-class-page errors-found',\n                    'h1_tag': 'This is the FormClassView Page Using ContactForm<br /><small class=\"error-msg\">Errors Found</small>',\n                    'form': form,\n                }\n            return TemplateResponse(\n                request,\n                self.template_name,\n                context\n            )\n        ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/views.py\n    ...\n    class FormClassView(FormView):\n        ...\n        def post(self, request, *args, **kwargs):\n            ...\n            if form.is_valid():\n                messages.success(\n                    request,\n                    'Your contact form submitted successfully'\n                )\n                ...\n            else:\n                messages.error(\n                    request,\n                    'There was a problem submitting your contact form.<br />Please review the highlighted fields below.'\n                )\n        ...\n    ```", "```py\n# /becoming_a_django_entdev/chapter_7/views.py\n```", "```py\nfrom django.views.generic.edit \n```", "```py\nimport FormView\n```", "```py\n...\n```", "```py\nfrom django.conf \n```", "```py\nimport settings\n```", "```py\nclass FormClassView(FormView):\n```", "```py\n    ...\n```", "```py\n    def post(self, request, *args, **kwargs):\n```", "```py\n        ...\n```", "```py\n        if form.is_valid():\n```", "```py\n            messages.add_message(\n```", "```py\n                request,\n```", "```py\n                settings.CRITICAL,\n```", "```py\n                'This is critical!'\n```", "```py\n            )\n```", "```py\n            ...\n```", "```py\n# /becoming_a_django_entdev/chapter_7/views.py\n```", "```py\nfrom django.contrib \n```", "```py\nimport messages\n```", "```py\nfrom django.views.generic.edit \n```", "```py\nimport FormView\n```", "```py\nfrom django.conf \n```", "```py\nimport settings\n```", "```py\n...\n```", "```py\nclass FormClassView(FormView):\n```", "```py\n    ...\n```", "```py\n    def post(self, request, *args, **kwargs):\n```", "```py\n        ...\n```", "```py\n        if form.is_valid():\n```", "```py\n            messages.success(\n```", "```py\n                request,\n```", "```py\n                'Your contact form submitted successfully', \n```", "```py\n                extra_tags = 'bold'\n```", "```py\n            )\n```", "```py\n            ...\n```", "```py\n# /becoming_a_django_entdev/chapter_7/views.py\n```", "```py\nfrom django.contrib \n```", "```py\nimport messages\n```", "```py\nfrom django.views.generic.edit \n```", "```py\nimport FormView\n```", "```py\nfrom django.conf \n```", "```py\nimport settings\n```", "```py\n...\n```", "```py\nclass FormClassView(FormView):\n```", "```py\n    ...\n```", "```py\n    def post(self, request, *args, **kwargs):\n```", "```py\n        ...\n```", "```py\n        if form.is_valid():\n```", "```py\n            messages.success(\n```", "```py\n                request,\n```", "```py\n                'Your contact form submitted successfully', \n```", "```py\n                fail_silently=True\n```", "```py\n            )\n```", "```py\n            ...\n```", "```py\n# /becoming_a_django_entdev/chapter_7/templates/chapter_7/form-class.html\n```", "```py\n...\n```", "```py\n{% block body_content %}\n```", "```py\n    ...\n```", "```py\n    <form method=\"post\">\n```", "```py\n        {% csrf_token %}\n```", "```py\n        {% if messages %}\n```", "```py\n            <ul class=\"messages\">\n```", "```py\n                {% for message in messages %}\n```", "```py\n                    <li{% if message.tags %} class=\"{{ message.tags }}\"{% endif %}>\n```", "```py\n                        {{ message|safe }}\n```", "```py\n                    </li>\n```", "```py\n                {% endfor %}\n```", "```py\n            </ul>\n```", "```py\n        {% endif %}\n```", "```py\n        ...\n```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.core.mail \n    import EmailMessage\n    ...\n    class ContactForm(Form):\n        ...\n        def send_email(self, request):\n            data = self.cleaned_data\n            msg_body = 'Hello World'\n            email = EmailMessage(\n                subject = 'New Contact Form Entry',\n                body = msg_body,\n                from_email = 'no-reply@example.com',\n                reply_to = ['no-reply@example.com'],\n                cc = [],\n                bcc = [],\n                to = [data['email_1']],\n                attachments = [],\n                headers = {},\n            )\n            email.content_subtype = 'plain'\n            email.send()\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/views.py\n    from django.template.response \n    import TemplateResponse\n    ...\n    class FormClassView(FormView):\n        ...\n        def post(self, request, *args, **kwargs):\n            form = self.form_class(request.POST)\n            ...\n            form.send_email(request)\n            return TemplateResponse(\n                request,\n                self.template_name,\n                context\n            )\n    ```", "```py\n# /becoming_a_django_entdev/chapter_7/forms.py\n```", "```py\n...\n```", "```py\nfrom django.core.mail \n```", "```py\nimport (\n```", "```py\n    EmailMessage,\n```", "```py\n    EmailMultiAlternatives\n```", "```py\n)\n```", "```py\n...\n```", "```py\nclass ContactForm(Form):\n```", "```py\n    ...\n```", "```py\n    def send_email(self, request):\n```", "```py\n        data = self.cleaned_data\n```", "```py\n        msg_body = '<b>Hello World</b>'\n```", "```py\n        email = EmailMultiAlternatives(\n```", "```py\n            subject = 'New Contact Form Entry',\n```", "```py\n            body = msg_body,\n```", "```py\n            from_email = 'no-reply@example.com',\n```", "```py\n            reply_to = ['no-reply@example.com'],\n```", "```py\n            cc = [],\n```", "```py\n            bcc = [],\n```", "```py\n            to = [data['email_1']],\n```", "```py\n            attachments = [],\n```", "```py\n            headers = {},\n```", "```py\n        )\n```", "```py\n        email.content_subtype = 'html'\n```", "```py\n        email.attach_alternative(\n```", "```py\n            'Hello World',\n```", "```py\n            'text/plain'\n```", "```py\n        )\n```", "```py\n        email.send()\n```", "```py\n# /becoming_a_django_entdev/chapter_7/forms.py\n```", "```py\n...\n```", "```py\nfrom django.conf \n```", "```py\nimport settings\n```", "```py\n...\n```", "```py\nclass ContactForm(Form):\n```", "```py\n    ...\n```", "```py\n    def send_email(self, request):\n```", "```py\n        ...\n```", "```py\n        email.attach_file(settings.STATIC_ROOT + '/chapter_7/pdf/example.pdf')\n```", "```py\n        email.send()\n```", "```py\n# /becoming_a_django_entdev/chapter_7/forms.py\n```", "```py\n...\n```", "```py\nclass ContactForm(Form):\n```", "```py\n    ...\n```", "```py\n    def send_email(self, request):\n```", "```py\n        ...\n```", "```py\n        email.send(fail_silently=True)\n```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.template.loader \n    import get_template\n    ...\n    class ContactForm(Form):\n        ...\n        def send_email(self, request):\n            data = self.cleaned_data\n            template = get_template(\n                'chapter_7/emails/plain_text_format.html'\n            )\n            msg_body = template.render()\n            email = EmailMessage(\n                subject = 'New Contact Form Entry',\n                body = msg_body,\n                from_email = 'no-reply@example.com',\n                reply_to = ['no-reply@example.com'],\n                cc = [],\n                bcc = [],\n                to = [data['email_1']],\n                attachments = [],\n                headers = {},\n            )\n            email.content_subtype = 'plain'\n            email.send(fail_silently = True)\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.template.loader \n    import get_template\n    ...\n    class ContactForm(Form):\n        ...\n        def send_email(self, request):\n            data = self.cleaned_data\n            template = get_template(\n                'chapter_7/emails/html_format.html'\n            )\n            msg_body = template.render()\n            email = EmailMessage(\n                subject = 'New Contact Form Entry',\n                body = msg_body,\n                from_email = 'no-reply@example.com',\n                reply_to = ['no-reply@example.com'],\n                cc = [],\n                bcc = [],\n                to = [data['email_1']],\n                attachments = [],\n                headers = {},\n            )\n            email.content_subtype = 'html'\n            email.send(fail_silently = True)\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/templates/chapter_7/emails/html_format.html\n    <!DOCTYPE html>\n    <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n            <meta charset=\"utf-8\" />\n            <title>Hello World</title>\n        </head>\n        <body>\n            <b>Hello World</b>\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.template.loader \n    import get_template\n    ...\n    class ContactForm(Form):\n        ...\n        def send_email(self, request):\n            data = self.cleaned_data\n            template = get_template('chapter_7/emails/new_contact_form_entry.html')\n            context = {'data': data}\n            msg_body = template.render(context)\n            email = EmailMessage(\n                subject = 'New Contact Form Entry',\n                body = msg_body,\n                from_email = 'no-reply@example.com',\n                reply_to = ['no-reply@example.com'],\n                cc = [],\n                bcc = [],\n                to = [data['email_1']],\n                attachments = [],\n                headers = {},\n            )\n            email.content_subtype = 'html'\n            email.send(fail_silently = True)\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/templates/chapter_7/emails/new_contact_form_entry.html\n    {% load static %}\n    <!DOCTYPE html>\n    <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n            <meta charset=\"utf-8\">\n            <title>Contact Form Submitted</title>\n        </head>\n        <body>\n            <center>\n                <h1>New Contact Form Entry</h1>\n                <h2>The field contents are listed below</h2>\n                <ul>\n                    <li>Full Name: {{ data.full_name }}</li>\n                    <li>Email Field Example 1: {{ data.email_1 }}</li>\n                    <li>Email Field Example 2: {{ data.email_2 }}</li>\n                    <li>Email Field Example 3: {{ data.email_3 }}</li>\n                    <li>Conditionally Required Field: {{ data.conditional_required }}</li>\n                    <li>Multiple Emails Field: {{ data.multiple_emails }}</li>\n                    <li>Message: {{ data.message }}</li>\n                </ul>\n            </center>\n        </body>\n    </html>\n    ```", "```py\n(virtual_env) pip install xhtml2pdf\n```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.conf \n    import settings\n    from django.http \n    import HttpResponse\n    from django.template.loader \n    import get_template\n    from xhtml2pdf \n    import pisa\n    ...\n    class ContactForm(Form):\n        ...\n        def generate_pdf(self, request):\n            dest = open(settings.STATIC_ROOT + '/chapter_7/pdf/test.pdf', 'w+b')\n            template = get_template('chapter_7/pdfs/pdf_template.html')\n            html = template.render()\n            result = pisa.CreatePDF(\n                html,\n                dest = dest,\n            )\n            return HttpResponse(result.err)\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/views.py\n    from django.template.response \n    import TemplateResponse\n    from django.views.generic.edit \n    import FormView\n    ...\n    class FormClass_View(FormView):\n        ...\n        def post(self, request, *args, **kwargs):\n            form = self.form_class(request.POST)\n            ...\n            form.send_email(request)\n            form.generate_pdf(request)\n            return TemplateResponse(\n                request,\n                self.template_name,\n                context\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/templates/chapter_7/pdfs/pdf_template.html\n    <!DOCTYPE html>\n    <html>\n        <head></head>\n        <body>\n            <div id=\"header_obj\"><h1>Header</h1></div>\n            <div id=\"footer_obj\">\n                &copy;Footer - Page <pdf:pagenumber> of <pdf:pagecount>\n            </div>\n            <div class=\"body-content\">\n                <h2>Hello World</h2>\n                {% lorem 50 p %}<pdf:pdf-next-page />{% lorem 50 p %}\n            </div>\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/templates/chapter_7/pdfs/pdf_template.html\n    ...\n        <head>\n            <style>\n                @page {\n                    size: a4 portrait;\n                    @frame header_frame {\n                        -pdf-frame-content: header_obj;\n                        top: 50pt; left: 50pt;\n                        width: 512pt; height: 40pt;\n                    }\n                    @frame content_frame {\n                        top: 90pt; left: 50pt;\n                        width: 512pt; height: 632pt;\n                    }\n                    @frame footer_frame {\n                        -pdf-frame-content: footer_obj;\n                        top: 772pt; left: 50pt;\n                        width: 512pt; height: 20pt;\n                    }\n                }\n                #header_obj { color: darkblue; text-align: center; }\n                .body-content { color: black; text-align: left; }\n                #footer_obj { color: green; text-align: right; }\n            </style>\n        </head>\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/forms.py\n    ...\n    from django.conf \n    import settings\n    from django.template.loader \n    import get_template\n    from xhtml2pdf \n    import pisa\n    ...\n    class ContactForm(Form):\n        ...\n        def generate_pdf(self, request):\n            data = self.cleaned_data\n            context = { 'data': data }\n            dest = open(settings.STATIC_ROOT + '/chapter_7/pdf/test_2.pdf', 'w+b')\n            template = get_template(\n                'chapter_7/pdfs/pdf_template.html'\n            )\n            html = template.render(context)\n            result = pisa.CreatePDF(\n                html,\n                dest = dest,\n            )\n            return HttpResponse(result.err)\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_7/templates/chapter_7/pdfs/pdf_template.html\n    ...\n            <div class=\"body-content\">\n                <h2>Hello World</h2>\n                <h3>The field contents are listed below</h3>\n                <ul>\n                    <li>Full Name: {{ data.full_name }}</li>\n                    <li>Email Field Example 1: {{ data.email_1 }}</li>\n                    <li>Email Field Example 2: {{ data.email_2 }}</li>\n                    <li>Email Field Example 3: {{ data.email_3 }}</li>\n                    <li>Conditionally Required Field: {{ data.conditional_required }}</li>\n                    <li>Multiple Emails Field: {{ data.multiple_emails }}</li>\n                    <li>Message: {{ data.message }}</li>\n                </ul>\n                {% lorem 50 p %}<pdf:pdf-next-page />{% lorem 50 p %}\n            </div>\n    ...\n    ```"]