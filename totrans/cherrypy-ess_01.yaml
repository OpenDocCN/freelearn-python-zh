- en: Chapter 1. Introduction to CherryPy
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. CherryPy 简介
- en: The use of the World Wide Web has grown exponentially, and has become a key
    component of the way we live today. From the developer's point of view, the Web
    offers great opportunities and good fun. However, the growing number of technologies
    oriented towards the Web is overwhelming, and it can be difficult to decide which
    one to use. The goal of this book is to present one of these, CherryPy, a Python
    web-application library.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网的使用呈指数级增长，已成为我们今天生活方式的关键组成部分。从开发者的角度来看，网络提供了巨大的机会和乐趣。然而，面向网络的技术的数量越来越多，令人难以抉择。本书的目标是介绍其中之一，CherryPy，一个
    Python 网络应用库。
- en: This chapter will introduce CherryPy's features and strengths, beginning with
    a summary of CherryPy's history, then looking at its friendly community, which
    has long been an important piece of the project's success, and finally reviewing
    key principles behind the evolution of CherryPy.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将介绍 CherryPy 的功能和优势，从 CherryPy 的历史概述开始，然后探讨其友好的社区，这个社区长期以来一直是项目成功的重要部分，最后回顾
    CherryPy 发展背后的关键原则。
- en: Overview
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: CherryPy is a Python library providing a friendly interface to the HTTP protocol
    for Python developers. HTTP is the backbone of the World Wide Web. Web applications
    have grown exponentially in the last few years. This explosion was followed by
    a large number of toolkits, libraries, and frameworks released in various programming
    languages to help web developers in their task. Ultimately all of these aim at
    making a web developer's life much easier. In this context CherryPy has started
    using Python's strengths as a dynamic language to model and bind the HTTP protocol
    into a API that follows Python idioms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: CherryPy 是一个为 Python 开发者提供友好 HTTP 协议接口的 Python 库。HTTP 是万维网的骨架。在过去的几年里，网络应用呈指数级增长。这种爆炸性增长随后是各种编程语言中发布的大量工具包、库和框架，以帮助网络开发者完成任务。最终，所有这些目标都是为了使网络开发者的生活更加轻松。在这种情况下，CherryPy
    开始利用 Python 作为动态语言的优势，将 HTTP 协议建模并绑定到一个遵循 Python 习惯的 API 中。
- en: The Python community has grown a large number of web libraries and frameworks
    over the years to the point where it has become some kind of a joke as much as
    a worry. Even though only a handful of them have attracted most of the community,
    (TurboGears, Django, or Zope) each existing library or framework has kept its
    niche influence by providing its own view on how to interface Python with HTTP
    and the Web in general. CherryPy was born because at that time Remi Delon, its
    creator, could not find what he wanted in the existing choices. Over the years,
    the design of CherryPy has been tuned by new developers who liked its strengths
    and joined in. Today the project has a strong community base that uses it on a
    daily basis in many different contexts.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 几年来，Python 社区已经积累了大量的网络库和框架，以至于这已经成为一种既令人担忧又有些好笑的现象。尽管只有少数几个吸引了大多数社区的关注（如 TurboGears、Django
    或 Zope），但每个现有的库或框架都通过提供自己对如何将 Python 与 HTTP 和网络接口的看法，保持了其特定的市场影响力。CherryPy 的诞生是因为当时它的创造者
    Remi Delon 找不到他想要的东西。多年来，CherryPy 的设计由喜欢其优势并加入的新开发者进行了调整。如今，该项目拥有一个强大的社区基础，它在许多不同的环境中每天都会使用它。
- en: History of CherryPy
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CherryPy 的历史
- en: Remi Delon released the first version of CherryPy in late June 2002\. This was
    the starting point of a successful Python web library. Remi is a French hacker
    who has trusted Python for being ultimately one of the greatest alternatives for
    web application development.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Remi Delon 在 2002 年 6 月晚些时候发布了 CherryPy 的第一个版本。这是成功 Python 网络库的起点。Remi 是一位法国黑客，他信任
    Python，认为它是开发网络应用的最佳替代品之一。
- en: 'The project attracted a number of developers who were interested in the approach
    taken by Remi:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目吸引了一些对 Remi 所采取的方法感兴趣的开发者：
- en: CherryPy classes were an extension to Python to support the separation of concern
    between the data and the presentation. It was close to the model-view-controller
    pattern.
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CherryPy 类是对 Python 的扩展，以支持数据与展示之间的关注点分离。它接近模型-视图-控制器模式。
- en: A CherryPy class has to be processed and compiled by the CherryPy engine to
    produce a self-contained Python module embedding the complete application as well
    as its own built-in web server.
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CherryPy 类必须由 CherryPy 引擎处理和编译，以生成一个包含完整应用程序以及其内置网络服务器的自包含 Python 模块。
- en: 'CherryPy would map a URL and its query string into a Python method call, for
    example: [http://somehost.net/echo?message=hello](http://somehost.net/echo?message=hello)
    would map to `echo(message=''hello'')`.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: CherryPy 会将 URL 和其查询字符串映射到一个 Python 方法调用，例如：[http://somehost.net/echo?message=hello](http://somehost.net/echo?message=hello)
    会映射到 `echo(message='hello')`。
- en: During the following two years, the project was supported by the community and
    Remi released several improved versions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的两年里，项目得到了社区的支持，Remi 发布了几个改进版本。
- en: In June 2004, a discussion started about the future of the project and whether
    it should continue with the same architecture. One of the main concerns was the
    compilation step, which did not feel natural to Python developers. Brainstorming
    and discussion by several project regulars then led to the concept of object-publishing
    engine and filters, which soon became a core ingredient of CherryPy 2.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 2004 年 6 月，关于项目未来的讨论开始了，讨论的主题是是否应该继续使用相同的架构。主要担忧之一是编译步骤，这对于 Python 开发者来说并不自然。随后，几个项目常客的头脑风暴和讨论导致了对象发布引擎和过滤器的概念，这很快成为了
    CherryPy 2 的核心组成部分。
- en: Eventually, in October 2004, the first version of CherryPy 2 alpha was released
    as a proof of concept of these core ideas. Then followed six months of intense
    work to release a stable version (late April 2005). Soon other developers joined
    the project to improve it. CherryPy 2.0 was a real success; however, it was recognized
    that its design could still be improved, and needed refactoring.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，在 2004 年 10 月，CherryPy 2 的第一个 alpha 版本作为这些核心思想的证明被发布。随后是六个月的紧张工作，以发布一个稳定版本（2005
    年 4 月晚些时候）。很快，其他开发者加入了项目，以改进它。CherryPy 2.0 是一个真正的成功；然而，人们认识到其设计仍有改进的空间，需要进行重构。
- en: After further community feedback/discussions, CherryPy's API was further modified
    to improve its elegance, leading to the release of CherryPy 2.1.0 in October 2005\.
    This version was shipped by the popular TurboGears project—itself a stack of projects
    to produce a web mega-framework. The team released CherryPy 2.2.0 in April 2006.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在进一步的社区反馈/讨论之后，CherryPy 的 API 被进一步修改，以提高其优雅性，导致 CherryPy 2.1.0 版本于 2005 年 10
    月发布。这个版本由流行的 TurboGears 项目提供支持——它本身是一个项目堆栈，旨在生产一个网络超级框架。该团队于 2006 年 4 月发布了 CherryPy
    2.2.0 版本。
- en: CherryPy's presence as a core ingredient in the increasingly widely adopted
    TurboGears stack naturally meant that more and more issues were raised about some
    aspects of CherryPy. For example, its WSGI support, the lack of up-to-date documentation,
    or its only-average performance. It was clear that to meet these real and important
    requirements, it would be extremely difficult to extend CherryPy 2 without breaking
    backward-compatibility constraints. As a result, the decision was finally made
    to move towards CherryPy 3, which was released at the end of 2006.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: CherryPy 作为 TurboGears 堆栈中越来越广泛采用的核心理念之一，自然意味着越来越多的关于 CherryPy 一些方面的讨论和问题被提出。例如，其
    WSGI 支持、缺乏最新的文档，或者其仅平均的性能。很明显，为了满足这些真实且重要的需求，在不破坏向后兼容性约束的情况下，扩展 CherryPy 2 将会非常困难。因此，最终决定转向
    CherryPy 3，该版本于 2006 年底发布。
- en: '![History of CherryPy](img/1848_01_01.jpg)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![CherryPy 历史](img/1848_01_01.jpg)'
- en: The Community
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 社区
- en: CherryPy would not be where it stands without the community built over the last
    few years. Remi has always been clear about the fact that he does not want CherryPy
    to be his pet project, but rather to be a community one.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有过去几年建立起来的社区，CherryPy 不可能达到现在的地位。Remi 总是明确表示，他并不希望 CherryPy 成为他的个人项目，而更希望它成为一个社区项目。
- en: CherryPy has always had its followers, but the CherryPy community actually started
    with version 2.0 of the product. In November 2004, an IRC channel was registered
    on the **Open** and **Free Technology Community** (**OFTC**) network to allow
    developers and users to quickly exchange ideas or to report defects. The channel
    gradually attracted more and more regulars and was generally recognized to be
    a very friendly place. In addition to the IRC channel, mailing-lists were created
    for developers and users. Eventually a feed aggregation of blog entries of regular
    CherryPy users was published and has been available since then at [http://planet.cherrypy.org](http://planet.cherrypy.org).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: CherryPy 一直有其追随者，但 CherryPy 社区实际上是从产品的 2.0 版本开始的。2004 年 11 月，在 **Open** 和 **Free
    Technology Community** （**OFTC**）网络上注册了一个 IRC 频道，以便开发者和用户可以快速交换想法或报告缺陷。频道逐渐吸引了越来越多的常客，并被普遍认为是一个非常友好的地方。除了
    IRC 频道外，还创建了针对开发者和用户的邮件列表。最终，一个常规 CherryPy 用户博客条目的聚合源被发布，并从那时起在 [http://planet.cherrypy.org](http://planet.cherrypy.org)
    上提供。
- en: '![The Community](img/1848_01_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![社区](img/1848_01_02.jpg)'
- en: CherryPy Project Strengths
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CherryPy 项目优势
- en: 'Simplicity: One of the main goals has always been to keep CherryPy as simple
    as possible with the aim of avoiding the library to over engineering the project.
    Thanks to the narrow scope covered by the library, the developers have been able
    to concentrate on the API and community feedback.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单性：主要目标之一始终是尽可能保持 CherryPy 的简单性，目的是避免库过度工程化项目。由于库覆盖的范围较窄，开发者能够专注于 API 和社区反馈。
- en: 'Self-contained: From the very beginning, Remi decided that the core of CherryPy
    would not require any third-party Python packages to work and would rely purely
    on the Python standard library.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自包含：从一开始，Remi 就决定 CherryPy 的核心不需要任何第三方 Python 包即可工作，并且将完全依赖于 Python 标准库。
- en: 'Not intrusive: Another critical aspect of the library the developers have long
    cared about was to make sure that CherryPy would stay as much as possible out
    of the way of its users. The idea was to provide a set of tools to any developer
    making no assumptions about the way in which he or she may choose to use them.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不侵入性：开发团队长期关注的另一个关键方面是确保 CherryPy 尽可能不干扰其用户。想法是为任何开发者提供一套工具，不对他们选择使用它们的方式做出任何假设。
- en: 'Open to discussion: The developer team has always listened to the feedback
    given by the community. This does not mean that every request has been adopted,
    but almost all have been discussed and reviewed.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开放讨论：开发团队始终倾听社区给出的反馈。这并不意味着每个请求都被采纳，但几乎所有的请求都经过了讨论和审查。
- en: 'Fun: When working on an open-source project, contributors should not be made
    to feel it is just their day-to-day job; on the contrary there is great value
    in them really enjoying what they do. Likewise, for a CherryPy user, the fun element
    is also an important part, and we observe that it makes each of us better and
    more creative developers.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣：在参与开源项目时，贡献者不应感到这仅仅是他们的日常工作；相反，真正享受他们所做的事情具有很大的价值。同样，对于 CherryPy 用户来说，乐趣元素也是一个重要的部分，我们观察到这使我们都成为了更好的、更有创造力的开发者。
- en: Beyond CherryPy
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CherryPy 之外
- en: In its early days, CherryPy attracted a small group of users but its design
    prevented it from growing into something larger or from being used more widely.
    Moreover, at that time the Python web-development field was mainly occupied by
    the Zope platform. When CherryPy 2 was released, its conception was more warmly
    welcomed by the community and eventually attracted more users who started to use
    it for applications as well as for building their own packages based on top of
    it.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在其早期，CherryPy 吸引了一小群用户，但其设计阻止了它成长为更大的项目或被更广泛地使用。此外，当时 Python 网络开发领域主要被 Zope
    平台占据。当 CherryPy 2 发布时，其概念受到了社区的广泛欢迎，并最终吸引了更多用户开始将其用于应用程序，以及基于其构建自己的包。
- en: Indeed in late September 2005, Kevin Dangoor released TurboGears—a framework
    for web development built as a stack of existing open-source products. Kevin chose
    CherryPy to handle the HTTP layer of his framework, SQLObject to map objects to
    the database, Kid for XHTML templating, and MochiKit for client-side handling.
    This release took place just a couple of months after another Python web framework,
    Django, was opened to the community. Both projects quickly gained a lot of popularity
    among the Python community and thanks to a little competition between them, they
    grew in a very quick fashion. The boom of TurboGears boosted CherryPy's fame and
    attracted an important volume of new users.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，在 2005 年 9 月晚些时候，Kevin Dangoor 发布了 TurboGears——一个作为现有开源产品堆栈构建的 Web 开发框架。Kevin
    选择了 CherryPy 来处理其框架的 HTTP 层，SQLObject 将对象映射到数据库，Kid 用于 XHTML 模板，MochiKit 用于客户端处理。这次发布发生在另一个
    Python Web 框架 Django 向社区开放后的几个月。这两个项目很快在 Python 社区中获得了巨大的流行度，并且由于它们之间的一点点竞争，它们以非常快的速度增长。TurboGears
    的繁荣提升了 CherryPy 的知名度，并吸引了一大批新用户。
- en: These waves of new developers increased CherryPy's number of requested features
    as well as defects being fixed, leading eventually to CherryPy 3, the most stable
    version of the library, and to the writing of this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这些新开发者的浪潮增加了 CherryPy 的功能请求以及修复的缺陷数量，最终导致了 CherryPy 3 的诞生，这是库最稳定的版本，也是本书的写作。
- en: CherryPy's future is clear and bright; the fantastic work done by Robert Brewer
    has allowed the library to reach its cruising speed. TurboGears' future version
    will certainly move to CherryPy 3, which will lead to a whole new set of questions
    to be brought up to the development team and will push CherryPy to its next big
    step.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: CherryPy的未来清晰且光明；罗伯特·布鲁尔所做的出色工作使得这个库达到了巡航速度。TurboGears的未来版本肯定会迁移到CherryPy 3，这将引发一系列新问题，需要开发团队提出，并将推动CherryPy迈出下一个重大步伐。
- en: Through the Book
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过本书
- en: This book aims at introducing the CherryPy library at a level that should make
    you confident that you can use it best in your own web application. Additionally
    we will try to open the discussion on the design of web applications and a perspective
    of the domain at the time of writing the book. In a nutshell the book will explain
    how to get and install CherryPy in a number of common ways in the Python community,
    such as using setup tools and easy_install. It will also give an overview of the
    main and most common aspects of CherryPy. This will gently bring you into an understanding
    of what the library can do. It then drills down into the library features such
    as its HTTP capabilities, alternative URI dispatchers, and extending the library
    as well as its WSGI support.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在以一个能够让你对自己在个人Web应用中使用CherryPy充满信心的水平介绍CherryPy库。此外，我们还将尝试在撰写本书时对Web应用设计和领域视角进行讨论。简而言之，本书将解释如何在Python社区中通过多种常见方式获取和安装CherryPy，例如使用setup工具和easy_install。它还将概述CherryPy的主要和最常见方面。这将让你逐渐了解这个库能做什么。然后，它将深入探讨库的功能，如其HTTP能力、替代URI分发器、扩展库以及其WSGI支持。
- en: This will give you a solid understanding of CherryPy, its design, and how to
    make the best use of it from within your own applications. The book then breaks
    down the layers of web development by introducing techniques and tools such as
    object-relational mappers, web services, and Ajax through the development of a
    simple blog application.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助你牢固地理解CherryPy、其设计和如何在你的应用中最好地利用它。本书随后通过介绍对象关系映射器、Web服务和Ajax等技术工具，通过开发一个简单的博客应用来分解Web开发的层次。
- en: It presents the blog application objectives and boundaries, reviews the status
    of database handling in Python, and then explains Object-Relational Mapping. It
    extensively presents one of the Python ORMs called Dejavu. It also talks about
    REST and the Atom Publishing Protocol, both of which offer a way to design web
    services that can extend your web applications beyond the simple capacity of serving
    HTML pages. Then it introduces you to the presentation layer of the blog application,
    which encompasses the review of the templating engine called Kid as well as the
    JavaScript library called MochiKit. The book discusses Ajax and how your applications
    can benefit from the principles behind it. We will also see how your application
    can call the web services. Then, the book extensively inspects the field of testing
    a web application. This goes from unit testing to load testing via the functional
    testing aspect of it. The book finally ends by presenting different ways to deploy
    a web application as a stand-alone application or via well known web servers such
    as Apache and lighttpd.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 它介绍了博客应用的目标和边界，回顾了Python中数据库处理的状态，然后解释了对象关系映射。它广泛介绍了Python中的一个ORM，称为Dejavu。它还讨论了REST和Atom发布协议，它们都提供了一种设计可以扩展Web应用超HTML页面简单服务能力的服务的方式。然后，它介绍了博客应用的表示层，包括对名为Kid的模板引擎和名为MochiKit的JavaScript库的回顾。本书讨论了Ajax以及你的应用如何从中受益。然后，我们将看到你的应用如何调用Web服务。接着，本书广泛检查了Web应用测试的领域。这从单元测试到通过其功能测试方面的负载测试。本书最后通过展示将Web应用作为独立应用或通过Apache和lighttpd等知名Web服务器部署的不同方式来结束。
- en: Although some chapters do not extensively include discussion about CherryPy
    itself, all of them will converge towards bringing an understanding of some aspects
    of web application development. Hopefully this book will teach you about CherryPy
    and will also give you the knowledge and the desire to learn more about the topics
    it covers
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然有些章节没有广泛讨论CherryPy本身，但它们都将汇聚到对Web应用开发某些方面的理解。希望这本书能让你了解CherryPy，并也会给你提供知识和欲望去了解更多它所涵盖的主题。
- en: Summary
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: After reading this introduction you should have the necessary background understanding
    of where this book is going to lead you. CherryPy is a simple and yet powerful
    Python library that will be a great companion to web developers who wish to find
    a package that hides the difficulties of the HTTP protocol while keeping its strengths.
    The CherryPy community has been working hard for the last few years to make such
    a product possible; hopefully this book will give you the right directions to
    make the most of it.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读这一介绍后，你应该对这本书将引导你走向何方有必要的背景理解。CherryPy 是一个简单而强大的 Python 库，它将成为那些希望找到一个能够隐藏
    HTTP 协议的困难同时保持其优势的包的网页开发者的绝佳伴侣。CherryPy 社区在过去几年里一直在努力工作，以使这样的产品成为可能；希望这本书能为你提供正确的方向，让你充分利用它。
