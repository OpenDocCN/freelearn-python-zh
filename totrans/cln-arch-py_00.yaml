- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Clean Architecture has become increasingly vital in modern software development,
    particularly as applications grow in complexity and teams need to maintain them
    over time. While architectural principles are often discussed in abstract terms,
    this book brings Clean Architecture to life through practical Python implementations,
    demonstrating how these concepts can transform your development approach.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Clean Architecture 在现代软件开发中变得越来越重要，尤其是在应用程序日益复杂且团队需要长期维护它们的情况下。虽然架构原则通常以抽象术语讨论，但本书通过实际的
    Python 实现，使 Clean Architecture 生动起来，展示了这些概念如何改变你的开发方法。
- en: Python’s versatility makes it an excellent language for applying Clean Architecture
    principles. Its dynamic nature and extensive ecosystem enable rapid development,
    yet these same strengths can lead to complex, difficult-to-maintain codebases
    as applications evolve. Clean Architecture provides the framework needed to balance
    Python’s flexibility with structured, maintainable design.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Python 的多功能性使其成为应用 Clean Architecture 原则的绝佳语言。其动态特性和广泛的生态系统使快速开发成为可能，但同样的优势也可能导致随着应用程序的发展而变得复杂、难以维护的代码库。Clean
    Architecture 提供了平衡 Python 的灵活性与结构化、可维护设计的框架。
- en: Throughout this book, we’ll explore how to apply Clean Architecture patterns
    to Python projects, creating systems that are not just functional but also testable,
    maintainable, and adaptable. Using a task management application as our running
    example, we’ll build a complete system from the ground up, demonstrating how proper
    architectural boundaries create software that can evolve gracefully over time.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将探讨如何将 Clean Architecture 模式应用于 Python 项目，创建不仅功能性强，而且可测试、可维护和适应变化的系统。以任务管理应用程序作为我们的示例，我们将从头开始构建一个完整的系统，展示适当的架构边界如何创建能够随着时间的推移优雅演变的软件。
- en: Whether you’re building new systems or maintaining existing ones, the principles
    and practices described in this book will help you create more robust and flexible
    Python applications. You’ll learn how to separate core business logic from external
    concerns, create clear interfaces between system components, and implement patterns
    that enable your software to adapt to changing requirements.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是构建新系统还是维护现有系统，本书中描述的原则和实践将帮助你创建更健壮和灵活的 Python 应用程序。你将学习如何将核心业务逻辑与外部关注点分离，在系统组件之间创建清晰的接口，并实施能够使你的软件适应不断变化需求的模式。
- en: 'In this book, we’re going to cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将涵盖以下主要主题：
- en: Understanding Clean Architecture fundamentals and applying SOLID principles
    in Python applications
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解 Clean Architecture 的基本原理并在 Python 应用程序中应用 SOLID 原则
- en: Enhancing Python with type hints to strengthen architectural boundaries and
    interfaces
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过类型提示增强 Python，以加强架构边界和接口
- en: Building robust domain models and application layers that encapsulate business
    logic independent of external concerns
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建健壮的领域模型和应用层，这些层封装了独立于外部关注点的业务逻辑
- en: Creating clear interfaces between architectural layers through controllers,
    presenters, and adapters
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过控制器、演示者和适配器在架构层之间创建清晰的接口
- en: Integrating with frameworks and external systems while maintaining architectural
    integrity
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在保持架构完整性的同时，与框架和外部系统集成
- en: 'Applying Clean Architecture in practical scenarios: testing, web interfaces,
    observability, and legacy system transformation'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在实际场景中应用 Clean Architecture：测试、Web 接口、可观察性和遗留系统转型
- en: Together, these topics form a comprehensive approach to building Python applications
    that can withstand the test of time. By the end of this book, you’ll have both
    the theoretical understanding and practical skills to implement Clean Architecture
    in your own projects, creating systems that are more maintainable, testable, and
    adaptable to change.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这些主题共同构成了构建能够经受时间考验的 Python 应用程序的综合方法。到本书结束时，你将具备理论理解和实践技能，能够在自己的项目中实施 Clean
    Architecture，创建更易于维护、可测试和适应变化的系统。
- en: Who this book is for
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for Python developers who want to create more maintainable, testable,
    and adaptable applications. It’s ideal for developers of an intermediate level
    or greater who have experience with Python and are looking to improve their architectural
    skills. If you’ve struggled with codebases that resist change, suffered through
    tangled dependencies, or simply want to write better Python code, this book will
    provide you with practical strategies and patterns to overcome these challenges.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为希望创建更可维护、可测试和可适应应用程序的Python开发者而写的。它非常适合具有Python经验的中级或更高水平的开发者，他们希望提高自己的架构技能。如果您在处理抗拒变化的代码库、经历了复杂的依赖关系或只是想编写更好的Python代码时遇到困难，这本书将为您提供克服这些挑战的实际策略和模式。
- en: 'Several roles will find value in this material:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 几个角色会发现这些材料有价值：
- en: '**Software architects** seeking to implement clean, maintainable system designs
    in Python projects'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**软件架构师**寻求在Python项目中实施干净、可维护的系统设计'
- en: '**Technical leads** responsible for guiding development teams and establishing
    coding standards'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**技术负责人**负责指导开发团队和建立编码标准'
- en: '**Backend developers** working on complex applications that need to evolve
    over time'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**后端开发者**正在开发需要随时间演变的复杂应用程序'
- en: '**DevOps engineers** looking to create more testable, observable Python services'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DevOps工程师**寻求创建更多可测试、可观察的Python服务'
- en: While beginners can benefit from the concepts presented, some familiarity with
    Python and object-oriented programming principles will help you get the most from
    this material. Technical leads, architects, and senior developers will find valuable
    insights for implementing Clean Architecture in team environments and guiding
    architectural decisions.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然初学者可以从所介绍的概念中受益，但了解Python和面向对象编程原则将有助于您从这些材料中获得最大收益。技术负责人、架构师和高级开发者将发现对于在团队环境中实施Clean
    Architecture和指导架构决策有价值的见解。
- en: What this book covers
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](Chapter_01.xhtml#_idTextAnchor015), *Clean Architecture Essentials:
    Transforming Python Development*, introduces the foundational concepts of Clean
    Architecture and explains why these principles matter for Python developers. It
    establishes the core architectural layers and explores how Clean Architecture
    can transform Python development practices.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](Chapter_01.xhtml#_idTextAnchor015)，*Clean Architecture基础：转变Python开发*，介绍了Clean
    Architecture的基础概念，并解释了为什么这些原则对Python开发者很重要。它建立了核心架构层，并探讨了Clean Architecture如何改变Python开发实践。'
- en: '[*Chapter 2*](Chapter_02.xhtml#_idTextAnchor040), *SOLID Foundations: Building
    Robust Python Applications*, examines how SOLID principles provide the foundation
    for Clean Architecture. Through practical Python examples, you’ll learn how to
    implement Single Responsibility, Open–Closed, Liskov Substitution, Interface Segregation,
    and Dependency Inversion Principles.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](Chapter_02.xhtml#_idTextAnchor040)，*SOLID基础：构建健壮的Python应用程序*，探讨了SOLID原则如何为Clean
    Architecture提供基础。通过实际的Python示例，您将学习如何实现单一职责、开闭原则、里氏替换原则、接口隔离原则和依赖倒置原则。'
- en: '[*Chapter 3*](Chapter_03.xhtml#_idTextAnchor060), *Type-Enhanced Python: Strengthening
    Clean Architecture*, demonstrates how Python’s type hints can enhance architectural
    boundaries. You’ll explore how typing improves interface definition, supports
    dependency inversion, and enables better tooling for architectural validation.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](Chapter_03.xhtml#_idTextAnchor060)，*类型增强Python：强化Clean Architecture*，展示了Python的类型提示如何增强架构边界。您将探索类型如何改进接口定义、支持依赖倒置并使架构验证的工具更好。'
- en: '[*Chapter 4*](Chapter_04.xhtml#_idTextAnchor091), *Domain-Driven Design: Crafting
    the Core Business Logic*, focuses on building robust domain models. You’ll learn
    how to identify and model entities, value objects, and domain services while ensuring
    they remain independent of external concerns.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](Chapter_04.xhtml#_idTextAnchor091)，*领域驱动设计：构建核心业务逻辑*，专注于构建健壮的领域模型。您将学习如何识别和建模实体、值对象和领域服务，同时确保它们保持对外部关注点的独立性。'
- en: '[*Chapter 5*](Chapter_05.xhtml#_idTextAnchor123), *The Application Layer: Orchestrating
    Use Cases*, covers the implementation of use cases that coordinate domain objects
    to accomplish specific tasks. You’ll create clean interfaces between your domain
    and outer layers while maintaining proper separation of concerns.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](Chapter_05.xhtml#_idTextAnchor123)，*应用层：协调用例*，涵盖了实现协调领域对象以完成特定任务的用例的实施。您将在保持适当的关注点分离的同时，创建领域和外部层之间的干净接口。'
- en: '[*Chapter 6*](Chapter_06.xhtml#_idTextAnchor144), *The Interface Adapters Layer:
    Controllers and Presenters*, explores how to create controllers that translate
    external requests and presenters that format domain data. You’ll build clean boundaries
    between your application core and delivery mechanisms.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](Chapter_06.xhtml#_idTextAnchor144)，*接口适配器层：控制器和表示器*，探讨了如何创建将外部请求转换为控制器，以及格式化领域数据的表示器。你将在应用程序核心和交付机制之间构建清晰的边界。'
- en: '[*Chapter 7*](Chapter_07.xhtml#_idTextAnchor168), *The Frameworks and Drivers
    Layer: External Interfaces*, demonstrates how to integrate external frameworks
    and infrastructure while keeping your core business logic independent. You’ll
    implement database adapters, web frameworks, and external services that respect
    Clean Architecture boundaries.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](Chapter_07.xhtml#_idTextAnchor168)，*框架和驱动层：外部接口*，展示了如何在保持核心业务逻辑独立的同时集成外部框架和基础设施。你将实现数据库适配器、Web
    框架和尊重清洁架构边界的第三方服务。'
- en: '[*Chapter 8*](Chapter_08.xhtml#_idTextAnchor192), *Implementing Test Patterns
    with Clean Architecture*, provides strategies for comprehensive testing across
    architectural boundaries. You’ll create unit tests for domain objects, integration
    tests for use cases, and end-to-end tests that verify system behavior.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](Chapter_08.xhtml#_idTextAnchor192)，*使用清洁架构实现测试模式*，提供了跨架构边界进行全面测试的策略。你将为领域对象创建单元测试，为用例创建集成测试，以及验证系统行为的端到端测试。'
- en: '[*Chapter 9*](Chapter_09.xhtml#_idTextAnchor218), *Adding Web UI: Clean Architecture’s
    Interface Flexibility*, shows how to implement a web interface for your Clean
    Architecture application. You’ll build a Flask-based web interface that demonstrates
    how Clean Architecture enables adding new interfaces without disrupting existing
    functionality.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](Chapter_09.xhtml#_idTextAnchor218)，*添加 Web UI：清洁架构的接口灵活性*，展示了如何为你的清洁架构应用程序实现
    Web 接口。你将构建一个基于 Flask 的 Web 接口，演示清洁架构如何在不干扰现有功能的情况下添加新接口。'
- en: '[*Chapter 10*](Chapter_10.xhtml#_idTextAnchor235), *Implementing Observability:
    Monitoring and Verification*, covers strategies for adding logging, monitoring,
    and architectural verification while maintaining Clean Architecture boundaries.
    You’ll implement cross-cutting concerns without compromising architectural integrity.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](Chapter_10.xhtml#_idTextAnchor235)，*实现可观察性：监控和验证*，涵盖了在保持清洁架构边界的同时添加日志记录、监控和架构验证的策略。你将实现横切关注点，而不会损害架构的完整性。'
- en: '[*Chapter 11*](Chapter_11.xhtml#_idTextAnchor250), *Legacy to Clean: Refactoring
    Python for Maintainability*, provides practical approaches for gradually transforming
    legacy Python applications. You’ll learn incremental refactoring techniques that
    improve architecture while maintaining system stability.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](Chapter_11.xhtml#_idTextAnchor250)，*从遗留代码到清洁架构：重构 Python 以提高可维护性*，提供了逐步改造遗留
    Python 应用程序的实际方法。你将学习增量重构技术，这些技术可以在保持系统稳定性的同时改进架构。'
- en: '[*Chapter 12*](Chapter_12.xhtml#_idTextAnchor276), *Your Clean Architecture
    Journey: Next Steps*, explores how to apply Clean Architecture across different
    system types and organizational contexts. You’ll discover strategies for architectural
    leadership, community building, and balancing pragmatism with architectural principles.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](Chapter_12.xhtml#_idTextAnchor276)，*你的清洁架构之旅：下一步*，探讨了如何在不同系统类型和组织环境中应用清洁架构。你将发现关于架构领导力、社区建设和平衡实用主义与架构原则的策略。'
- en: To get the most out of this book
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: Basic familiarity with Python programming is assumed, including knowledge of
    object-oriented concepts such as classes, inheritance, and composition. Experience
    with web development concepts will be helpful for later chapters but is not required.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 假设对 Python 编程有基本的了解，包括对类、继承和组合等面向对象概念的了解。对 Web 开发概念的了解将有助于后续章节，但不是必需的。
- en: '| **Software/hardware covered in the book** | **Operating system requirements**
    |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件/硬件** | **操作系统要求** |'
- en: '| Python 3.13 or greater | Windows, macOS, or Linux |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| Python 3.13 或更高版本 | Windows、macOS 或 Linux |'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository. Doing
    so will help you avoid any potential errors related to the copying and pasting
    of code.**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你使用的是本书的数字版，我们建议你亲自输入代码或从本书的 GitHub 仓库获取代码。这样做将有助于你避免与代码复制粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: The complete code for all examples is available in the book’s GitHub repository
    at [https://github.com/PacktPublishing/Clean-Architecture-with-Python](https://github.com/PacktPublishing/Clean-Architecture-with-Python).
    In addition, for relevant chapters, you’ll find a functional implementation of
    our task management application at the stage corresponding to that chapter. This
    allows you to run, test, and explore a working version of the application as it
    evolves throughout the book. Each chapter builds upon the previous ones, so it’s
    recommended to proceed through the book sequentially, although experienced developers
    may choose to focus on specific chapters relevant to their current challenges.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://packt.link/gbp/9781836642893](https://packt.link/gbp/9781836642893).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and X/Twitter
    handles. Here is an example: “The `project_id` parameter comes from the URL itself
    (`/projects/<project_id>/tasks/new`), while form fields contain task details.”'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    the screen. For instance, words in menus or dialog boxes appear in the text like
    this. For example: “**Bounded contexts** are conceptual boundaries that define
    where specific domain models apply.”'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book’s
    title in the subject of your message. If you have questions about any aspect of
    this book, please email us at `questions@packtpub.com`.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you reported this to us. Please visit [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    click **Submit Errata**, and fill in the form.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packtpub.com](https://copyright@packtpub.com)
    with a link to the material.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [http://authors.packtpub.com/](http://authors.packtpub.com/).'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且有兴趣撰写或为书籍做出贡献，请访问[http://authors.packtpub.com/](http://authors.packtpub.com/).'
- en: Share your thoughts
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Clean Architecture with Python*, we’d love to hear your thoughts!
    Scan the QR code below to go straight to the Amazon review page for this book
    and share your feedback.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《使用Python的清洁架构》，我们很乐意听到您的想法！扫描下面的二维码，直接进入此书的亚马逊评论页面并分享您的反馈。
- en: '[https://packt.link/r/183664289X](https://packt.link/r/183664289X)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/r/183664289X](https://packt.link/r/183664289X)'
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢随时随地阅读，但无法携带您的印刷书籍到处走？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠不会就此停止，您还可以获得独家折扣、时事通讯和每日收件箱中的精彩免费内容。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取福利：
- en: 'Scan the QR code or visit the link below:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接：
- en: '![](img/B31577_Free_PDF_QR.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/B31577_Free_PDF_QR.png)'
- en: '[https://packt.link/free-ebook/9781836642893](Preface.xhtml)'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781836642893](Preface.xhtml)'
- en: Submit your proof of purchase.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明。
- en: That’s it! We’ll send your free PDF and other benefits to your email directly.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将您的免费PDF和其他福利发送到您的电子邮件。
- en: Share your thoughts
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Clean Architecture with Python*, we’d love to hear your thoughts!
    Please [click here to go straight to the Amazon review page](https://packt.link/r/183664289X)
    for this book and share your feedback.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《使用Python的清洁架构》，我们很乐意听到您的想法！请[点击此处直接进入此书的亚马逊评论页面](https://packt.link/r/183664289X)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
