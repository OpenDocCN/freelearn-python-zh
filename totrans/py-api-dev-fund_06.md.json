["```py\n    import requests\n    class MailgunApi:\n    ```", "```py\n        API_URL = 'https://api.mailgun.net/v3/{}/messages'\n    ```", "```py\n        def __init__(self, domain, api_key):\n            self.domain = domain\n            self.key = api_key\n            self.base_url = self.API_URL.format(self.domain)\n    ```", "```py\n       def send_email(self, to, subject, text, html=None):\n            if not isinstance(to, (list, tuple)):\n                to = [to, ]\n            data = {\n                'from': 'SmileCook <no-reply@{}>'.format(self.domain),\n                'to': to,\n                'subject': subject,\n                'text': text,\n                'html': html\n            }\n            response = requests.post(url=self.base_url,\n                                                      auth=('api', self.key),\n                                                      data=data)\n            return response\n    ```", "```py\n    >>>from mailgun import MailgunApi\n    >>>mailgun = MailgunApi(domain='sandbox76165a034aa940feb3ef785819641871.mailgun.org',\n    api_key='441acf048aae8d85be1c41774563e001-19f318b0-739d5c30')\n    ```", "```py\n    itsdangerous==1.1.0\n    ```", "```py\n    pip install -r requirements.txt\n    ```", "```py\n    Installing collected packages: itsdangerous\n    Successfully installed itsdangerous-1.1.0\n    ```", "```py\n    class Config:\n        SECRET_KEY = 'super-secret-key'\n    ```", "```py\n    from itsdangerous import URLSafeTimedSerializer\n    from flask import current_app\n    ```", "```py\n    def generate_token(email, salt=None):\n        serializer = URLSafeTimedSerializer(current_app.config.get('SECRET_KEY'))\n        return serializer.dumps(email, salt=salt)\n    ```", "```py\n    def verify_token(token, max_age=(30 * 60), salt=None):\n        serializer = URLSafeTimedSerializer(current_app.config.get('SECRET_KEY'))\n        try:\n            email = serializer.loads(token, max_age=max_age, salt=salt)\n        except:\n            return False\n        return email\n    ```", "```py\n    from flask import request, url_for\n    from mailgun import MailgunApi\n    from utils import generate_token, verify_token\n    ```", "```py\n    mailgun = MailgunApi(domain='sandbox76165a034aa940feb3ef785819641871.mailgun.org',\n               api_key='441acf048aae8d85be1c41774563e001-19f318b0-739d5c30')\n    ```", "```py\n            token = generate_token(user.email, salt='activate')\n            subject = 'Please confirm your registration.'\n    ```", "```py\n            link = url_for('useractivateresource',\n                                 token=token,\n                                 _external=True)\n            text = 'Hi, Thanks for using SmileCook! Please confirm your registration by clicking on the link: {}'.format(link)\n    ```", "```py\n            mailgun.send_email(to=user.email,\n                                             subject=subject,\n                                             text=text)\n    ```", "```py\n    class UserActivateResource(Resource):\n        def get(self, token):\n            email = verify_token(token, salt='activate')\n            if email is False:\n                return {'message': 'Invalid token or token expired'}, HTTPStatus.BAD_REQUEST\n    ```", "```py\n            user = User.get_by_email(email=email)\n            if not user:\n                return {'message': 'User not found'}, HTTPStatus.NOT_FOUND\n            if user.is_active is True:\n                return {'message': 'The user account is already activated'}, HTTPStatus.BAD_REQUEST\n            user.is_active = True\n            user.save()\n    ```", "```py\n            return {}, HTTPStatus.NO_CONTENT\n    ```", "```py\n    from resources.user import UserListResource, UserResource, MeResource, UserRecipeListResource, UserActivateResource\n        api.add_resource(UserActivateResource, '/users/activate/<string:token>')\n    ```", "```py\n            if user.is_active is False:\n                return {'message': 'The user account is not activated yet'}, HTTPStatus.FORBIDDEN\n    ```", "```py\n    import os\n    mailgun = MailgunApi(domain=os.environ.get('MAILGUN_DOMAIN'),\n                                api_key=os.environ.get('MAILGUN_API_KEY'))\n    ```", "```py\nmailgun.send_email(to=user.email,\n                         subject=subject,\n                         text=text, \n                         html='<html><body><h1>Test email</h1></body></html>')\n```", "```py\ntemplate/sample.html\n<html><body><h1>Test email</h1></body></html>\n```", "```py\nmailgun.send_email(to=user.email,\n                         subject=subject,\n                         text=text, \n                         html=render_template('sample.html'))\n```", "```py\ntemplate/sample.html\n<html><body><h1>{{content}}</h1></body></html>\n```", "```py\nmailgun.send_email(to=user.email,\n                         subject=subject,\n                         text=text, \n                         html=render_template('sample.html', content='Test email'))\n```"]