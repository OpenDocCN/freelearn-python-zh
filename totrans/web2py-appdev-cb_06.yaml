- en: Chapter 6. Using Third-party Libraries
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章 使用第三方库
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下配方：
- en: Customizing logging
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定制日志
- en: Aggregating feeds
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚合源
- en: Displaying Tweets
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 显示推文
- en: Plotting with matplotlib
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用matplotlib绘图
- en: Extending PluginWiki with an RSS widget
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用RSS小部件扩展PluginWiki
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The power of Python comes form the plethora of **third-party libraries** available.
    The goal of this chapter is not to discuss the APIs of these third-party libraries,
    as the task would be monumental. The goal, instead, is to show you the proper
    way to do it by customizing logging, to detect possible problems, by creating
    your own APIs in the model files, and packaging the new interface as a plugin.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python的力量来自于可用的众多**第三方库**。本章的目标不是讨论这些第三方库的API，因为这个任务将是巨大的。相反，目标是通过定制日志、检测可能的问题、在模型文件中创建自己的API以及将新接口打包为插件来展示如何正确地完成这项工作。
- en: Customizing logging
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定制日志
- en: Python's logging capabilities are powerful and flexible, but can be complicated
    to implement effectively. Moreover, logging in web2py introduces a new problem
    set. This recipe offers an approach for effective logging in web2py, leveraging
    Python's native logging functionality.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Python的日志功能强大且灵活，但实现起来可能很复杂。此外，web2py中的日志记录引入了一组新的问题。这个配方提供了一个在web2py中有效日志记录的方法，利用Python的本地日志功能。
- en: 'Python''s native logging framework uses a logger-handler combination, whereby
    one or more loggers each logs to one or more handlers. The logging framework uses
    a singleton model for its loggers, so that the following line of code returns
    a single global `Logger` instance by that name, instantiating it only on first
    access:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Python的本地日志框架使用一个logger与handler的组合，其中一个或多个logger将日志记录到一个或多个handler。日志框架使用单例模型来管理其logger，因此以下代码行通过该名称返回一个全局`Logger`实例，仅在首次访问时实例化：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: By default, a Python process starts out with a single root, `logger (name ==
    ")`, with a single handler logging to `stdout`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Python进程以单个root，`logger (name == ")`开始，只有一个handler将日志记录到`stdout`。
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Logging in web2py involves some new issues, which are as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在web2py中的日志记录涉及一些新问题，如下所述：
- en: Configuring and controlling logging at the application level
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在应用级别配置和控制日志
- en: Configuring a logger once and only once
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只配置一次logger
- en: Implementing a simple syntax for logging
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实现简单的日志记录语法
- en: Python's native logging framework already maintains a global set of named loggers
    per process. But in web2py, since the applications run within the same process,
    loggers are shared across applications. We need a different solution, if we want
    to configure and control loggers on an application-specific basis.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Python的本地日志框架已经为每个进程维护了一个全局的命名logger集合。但在web2py中，由于应用在同一个进程中运行，logger是跨应用共享的。如果我们想根据应用特定地配置和控制logger，我们需要一个不同的解决方案。
- en: An easy way to create application-specific loggers is by including the application
    name in the name of the logger.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 创建特定于应用的logger的一个简单方法是在logger的名称中包含应用名称。
- en: '[PRE1]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This can be done, for example, in a model file. The same code used across multiple
    applications will now return separate loggers for each application.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以在模型文件中完成。现在，跨多个应用使用的相同代码将为每个应用返回不同的logger。
- en: We want to be able to configure a logger once on start-up. However, when accessing
    a named logger, Python doesn't provide a way to check if the logger already exists.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望在启动时只配置一次logger。然而，当访问一个命名logger时，Python没有提供检查logger是否已经存在的方法。
- en: 'The simplest way to ensure whether a logger is configured only once or not,
    is to check if it has any handlers, which is done as follows:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 确保logger只配置一次的最简单方法，是检查它是否有任何handler，如下所示：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Notice that if `loggername` is empty, you need to retrieve Python's root logger.
    The default root logger already has a handler associated with it, so you would
    check for a handler count of `1`. The root logger can't be made application-specific.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果`loggername`为空，你需要检索Python的root logger。默认的root logger已经关联了一个handler，所以你会检查handler的数量为`1`。root
    logger不能被设置为特定于应用。
- en: Of course, we don't want to have to call `get_configured_logger` every time
    we make a log entry. Instead, we can make a global assignment once in the model,
    and use it throughout our application. The assignment will be executed every time
    you use the logger in your controller, but instantiation and configuration will
    only happen at the first access.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，我们不希望每次记录日志时都要调用`get_configured_logger`。相反，我们可以在模型中一次性进行全局赋值，并在整个应用程序中使用它。赋值将在每次你在控制器中使用记录器时执行，但实例化和配置只会在第一次访问时发生。
- en: 'So finally, just place this code in a model:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 所以最后，只需将此代码放置在模型中：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Use it in your controllers as in the following examples:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，在你的控制器中使用它：
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: There's more...
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'What can we do with a custom application-level logger? We can, for example,
    re-program logging on Google App Engine, so that messages go in a datastore table.
    Here is how we can do it:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用自定义的应用程序级记录器做什么？例如，我们可以重新编程Google App Engine上的记录，让消息进入数据存储表。以下是我们可以这样做的步骤：
- en: '[PRE5]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'You can read more on the subject at the following URLs:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在以下网址了解更多关于这个主题的信息：
- en: '[http://docs.python.org/library/logging.html](http://docs.python.org/library/logging.html)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://docs.python.org/library/logging.html](http://docs.python.org/library/logging.html)'
- en: '[http://github.com/apptactic/apptactic-python/blob/master/logging/custom_handlers.py](http://github.com/apptactic/apptactic-python/blob/master/logging/custom_handlers.py)'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://github.com/apptactic/apptactic-python/blob/master/logging/custom_handlers.py](http://github.com/apptactic/apptactic-python/blob/master/logging/custom_handlers.py)'
- en: Aggregating feeds
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 汇总源
- en: In this recipe, we will build an RSS feed aggregator using **feedparser** and
    **rss2**. We call it **Planet Web2py**, because it will filter the rss items,
    based on the string `web2py`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将使用**feedparser**和**rss2**构建一个RSS源聚合器。我们称之为**Planet Web2py**，因为它将基于字符串`web2py`过滤rss条目。
- en: How to do it...
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'Create a `models/db_feed.py`, with the following content:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个`models/db_feed.py`，内容如下：
- en: '[PRE6]'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Then in `controllers/default.py`, add a planet function that renders a basic
    page by fetching all feeds with `feedparser:`
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后在`controllers/default.py`中添加一个`planet`函数，通过使用`feedparser:`获取所有源来渲染一个基本页面
- en: '[PRE7]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Before you can use this function, you will need to add some feed URLs in `db.feed`,
    for example, using `appadmin`.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能够使用这个函数之前，你需要在`db.feed`中添加一些源网址，例如，使用`appadmin`。
- en: 'Sample RSS feeds about web2py are as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些关于web2py的示例RSS源：
- en: '[http://reingart.blogspot.com/feeds/posts/default/-/web2py](http://reingart.blogspot.com/feeds/posts/default/-/web2py)'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://reingart.blogspot.com/feeds/posts/default/-/web2py](http://reingart.blogspot.com/feeds/posts/default/-/web2py)'
- en: '[http://web2py.wordpress.com/feed/](http://web2py.wordpress.com/feed/)'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://web2py.wordpress.com/feed/](http://web2py.wordpress.com/feed/)'
- en: '[http://www.web2pyslices.com/main/slices/get_latest.rss](http://www.web2pyslices.com/main/slices/get_latest.rss)'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.web2pyslices.com/main/slices/get_latest.rss](http://www.web2pyslices.com/main/slices/get_latest.rss)'
- en: '[http://martin.tecnodoc.com.ar/myblog/default/feed_articles.rss](http://martin.tecnodoc.com.ar/myblog/default/feed_articles.rss)'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://martin.tecnodoc.com.ar/myblog/default/feed_articles.rss](http://martin.tecnodoc.com.ar/myblog/default/feed_articles.rss)'
- en: There's more...
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多...
- en: 'A working example of web2py sample planet can be found at the following URL:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在以下网址找到web2py示例planet的工作示例：
- en: '[http://www.web2py.com.ar/planet/](http://www.web2py.com.ar/planet/)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.web2py.com.ar/planet/](http://www.web2py.com.ar/planet/)'
- en: 'Full source code of complete examples (planet-web2py) is published at the Google
    code project, available at the following URL:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 完整示例的完整源代码（planet-web2py）发布在Google代码项目中，可在以下网址找到：
- en: '[http://code.google.com/p/planet-web2py/](http://code.google.com/p/planet-web2py/)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://code.google.com/p/planet-web2py/](http://code.google.com/p/planet-web2py/)'
- en: That application stores `rss` feed entries, to speed-up aggregation, and refresh
    feeds periodically.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 该应用程序存储`rss`源条目，以加快聚合，并定期刷新源。
- en: Displaying Tweets
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示推文
- en: In this recipe we will show how to display recent tweets using `simplejson`,
    and fetch the tool included with web2py.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将展示如何使用`simplejson`显示最近的推文，并使用web2py包含的工具获取它。
- en: How to do it...
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到...
- en: 'First, create a `models/0.py` file to store the basic configuration, as follows:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，创建一个`models/0.py`文件来存储基本配置，如下所示：
- en: '[PRE8]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: In `controllers/default.py`, add a Twitter function that renders a basic page
    section by fetching all tweets with the fetch tool, and parse it with `simplejson:`
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`controllers/default.py`中添加一个Twitter函数，通过使用获取工具获取所有推文并使用`simplejson:`解析它来渲染一个基本页面部分
- en: '[PRE9]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Create a view for the twitter component in views/default/twitter.load where
    we will render each tweet:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`views/default/twitter.load`中创建一个用于twitter组件的视图，我们将渲染每条推文：
- en: '[PRE10]'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Then, in `default/index.html`, add the section using LOAD (jQuery) to load
    the tweets:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在 `default/index.html` 中，添加使用 LOAD（jQuery）加载推文的部分：
- en: '[PRE11]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There's more...
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 更多内容...
- en: 'You can use CSS styles to enhance the tweets section. Create a `static/css/tweets.css`
    file with the following code:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用 CSS 样式来增强推文部分。创建一个 `static/css/tweets.css` 文件，包含以下代码：
- en: '[PRE12]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Then, add the CSS file to the response:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将 CSS 文件添加到响应中：
- en: '[PRE13]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'You can further customize this recipe with the following attributes that this
    tweeter API returns for each tweet:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以使用以下属性进一步自定义此配方，这是该推文 API 为每条推文返回的：
- en: '`iso_language_code`'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iso_language_code`'
- en: '`to_user_name`'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_user_name`'
- en: '`to_user_id_str`'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_user_id_str`'
- en: '`profile_image_url_https`'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`profile_image_url_https`'
- en: '`from_user_id_str`'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_user_id_str`'
- en: '`text`'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`text`'
- en: '`from_user_name`'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_user_name`'
- en: '`in_reply_to_status_id_str`'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`in_reply_to_status_id_str`'
- en: '`profile_image_url`'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`profile_image_url`'
- en: '`id''`,'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id''`'
- en: '`to_user`'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_user`'
- en: '`source`'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`source`'
- en: '`in_reply_to_status_id`'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`in_reply_to_status_id`'
- en: '`id_str''`,'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`id_str''`'
- en: '`from_user`'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_user`'
- en: '`from_user_id`'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`from_user_id`'
- en: '`to_user_id`'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`to_user_id`'
- en: '`geo`'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`geo`'
- en: '`created_at`'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`created_at`'
- en: '`metadata`'
  id: totrans-93
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`metadata`'
- en: Remember that in this recipe we are using a cache to speed-up the page load
    (15 minutes = 60*15). If you need to change it, modify @cache(…,time_expire=…)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在这个配方中，我们使用缓存来加速页面加载（15分钟=60*15）。如果您需要更改它，请修改 @cache(…,time_expire=…)
- en: Plotting with matplotlib
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 matplotlib 绘图
- en: '**Matplotlib** is a state-of-the-art plotting library for Python. Some examples
    of what it can do can be found at the following URL:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '**Matplotlib** 是 Python 中最先进的绘图库。一些示例可以在以下 URL 中找到：'
- en: '[http://matplotlib.sourceforge.net/gallery.html](http://matplotlib.sourceforge.net/gallery.html)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://matplotlib.sourceforge.net/gallery.html](http://matplotlib.sourceforge.net/gallery.html)'
- en: 'Matplotlib can be used in the following two models:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 可以用于以下两种模型：
- en: PyLab (a Matlab compatibility mode)
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PyLab（一个 Matlab 兼容模式）
- en: More pythonic APIs
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多的 Pythonic API
- en: Most of the documentation uses PyLab, and that is a problem, because PyLab shares
    a global state and it does not work well with web applications. We will need to
    use the more pythonic APIs.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数文档使用 PyLab，这是一个问题，因为 PyLab 共享全局状态，并且与 Web 应用程序不兼容。我们需要使用更 Pythonic 的 API。
- en: How to do it...
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: Matplotlib has many backends that can be used to print in a GUI or to a file.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Matplotlib 有许多后端可以用于在 GUI 中打印或打印到文件。
- en: In order to use matplotlib in web applications, we need to instruct it to generate
    plots in real time, print them into a memory-mapped file, and stream the content
    of the file to the page visitor.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 Web 应用中使用 matplotlib，我们需要指导它实时生成图形，将其打印到内存映射文件中，并将文件内容流式传输到页面访问者。
- en: 'Here, we show a utility function to plot datasets of the form:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们展示了一个实用函数来绘制以下形式的数据集：
- en: '[PRE14]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a `models/matplotlib.py` file, containing the following code:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个 `models/matplotlib.py` 文件，包含以下代码：
- en: '[PRE15]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'You can now try it, using the following actions in your controller:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您现在可以尝试它，在您的控制器中使用以下操作：
- en: '[PRE16]'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '`http://.../test_images`'
  id: totrans-111
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://.../test_images`'
- en: '`http://.../a_plot.png`'
  id: totrans-112
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://.../a_plot.png`'
- en: '`http://.../a_histogram.png`'
  id: totrans-113
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`http://.../a_histogram.png`'
- en: How it works...
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'When you visit `test_images`, it generates an HTML that includes the plots
    as images:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 当您访问 `test_images` 时，它会生成一个包含图形的 HTML：
- en: '[PRE17]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Each of these URLs calls the myplot function in `models/matplotlib.py`. The
    plot function generates a figure containing one subplot (a set of X-Y axes). It
    then draws on the subplot called `ax` (connects the dots when `mode="plot"`, and
    draws histograms when `mode="hist")`, and prints the figure to a memory-mapped
    canvas called **stream**. It then reads the binary data from the stream and returns
    it.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 每个这些 URL 都调用 `models/matplotlib.py` 中的 myplot 函数。绘图函数生成一个包含一个子图的图形（一组 X-Y 轴）。然后在该子图
    `ax` 上绘制（当 `mode="plot"` 时连接点，当 `mode="hist"` 时绘制直方图），并将图形打印到一个名为 **stream** 的内存映射画布上。然后它从流中读取二进制数据并返回。
- en: There's more...
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更多内容...
- en: In the example, the critical functions are `ax.plot` and `ax.hist`, which draw
    on the axes in the subplot. You can now create more plotting functions by copying
    the provided `myplot` function, by renaming it, and by replacing `ax.plot` or
    `ax.hist` with other functions for scatter plots, error bars, and so on. Now,
    it should be straightforward from the matplotlib documentation.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，关键函数是 `ax.plot` 和 `ax.hist`，它们在子图的轴上绘制。您现在可以通过复制提供的 `myplot` 函数，重命名它，并用其他函数替换
    `ax.plot` 或 `ax.hist`（例如散点图、误差线等）来创建更多的绘图函数。现在，您应该可以直接从 matplotlib 文档中找到。
- en: Extending PluginWiki with an RSS widget
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 RSS 小部件扩展 PluginWiki
- en: '**PluginWiki** is the most complex of the web2py plugins. It adds a lot of
    capabilities; in particular, it adds a CMS to your application, and defines widgets
    that can be embedded in the CMS pages as well as your own views. This plugin can
    be extended, and here we show you how to add a new widget.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**PluginWiki**是web2py插件中最复杂的。它添加了许多功能；特别是，它为您的应用程序添加了一个CMS，并定义了可以嵌入CMS页面以及您自己的视图的小部件。此插件可以扩展，这里我们向您展示如何添加一个新的小部件。'
- en: 'For more information about plugin-wiki, see:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 有关插件-wiki的更多信息，请参阅：
- en: '[http://web2py.com/examples/default/download](http://web2py.com/examples/default/download)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://web2py.com/examples/default/download](http://web2py.com/examples/default/download)'
- en: How to do it...
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'Create a file named `models/plugin_wiki_rss.py`, and add the following code
    to it:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`models/plugin_wiki_rss.py`的文件，并将以下代码添加到其中：
- en: '[PRE18]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Now, you can include this widget in the PluginWiki CMS pages, using the following
    syntax:'
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以使用以下语法将此小部件包含在PluginWiki CMS页面上：
- en: '[PRE19]'
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'You can also include it in any web2py page using the following syntax:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您也可以使用以下语法将其包含在任何web2py页面上：
- en: '[PRE20]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: There's more...
  id: totrans-131
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'web2py user, **Bogdan**, has made some changes to this plugin to make it slicker,
    by using jQuery UI, which comes with PluginWiki. Here is the improved plugin:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: web2py用户**博格丹**通过使用随PluginWiki一起提供的jQuery UI对此插件进行了一些修改，使其更加流畅。以下是改进后的插件：
- en: '[PRE21]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: This modified version of the script does not use helpers, but raw html for speed,
    is CSS friendly, and uses a dialog pop-up for entry details.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 此脚本的修改版本不使用辅助工具，而是使用原始HTML以提高速度，对CSS友好，并使用对话框弹出窗口来输入详细信息。
