["```py\ndb = DAL('sqlite://storage.sqlite')\nfrom gluon.tools import *\nauth = Auth(db)\nauth.settings.extra_fields = [Field('html','text'),Field('css','te\nxt')]\nauth.define_tables(username=True)\n\n```", "```py\ndef index():\n\treturn locals()\n\ndef user():\n\treturn dict(form=auth())\n\ndef home():\n\treturn db.auth_user(username=request.args(0)).html\n\ndef css():\n\tresponse.headers['content-type']='text/css'\n\treturn db.auth_user(username=request.args(0)).css\n\n```", "```py\nroutes_in = (\n\t# make sure you do not break admin\n\t('/admin','/admin'),\n\t('/admin/$anything','/admin/$anything'),\n\t# make sure you do not break appadmin\n\t('/$app/appadmin','/$app/appadmin'),\n\t('/$app/appadmin/$anything','/$app/appadmin/$anything'),\n\t# map the specific urls for this the \"pages\" app\n\t('/$username/home','/pages/default/home/$username'),\n\t('/$username/css','/pages/default/css/$username'),\n\t# leave everything else unchanged\n)\n\nroutes_out = (\n\t# make sure you do not break admin\n\t('/admin','/admin'),\n\t('/admin/$anything','/admin/$anything'),\n\t# make sure you do not break appadmin\n\t('/$app/appadmin','/$app/appadmin'),\n\t('/$app/appadmin/$anything','/$app/appadmin/$anything'),\n\t# map the specific urls for this the \"pages\" app\n\t('/pages/default/home/$username','/$username/home'),\n\t('/pages/default/css/$username','/$username/css'),\n\t# leave everything else unchanged\n)\n\n```", "```py\nroutes_in=(\n\t...\n\t('/$username/home','/pages/default/home/$username'),\n\t...\n)\nroutes_out=(\n\t...\n\t('/pages/default/home/$username','/$username/home'),\n\t...\n)\n\n```", "```py\n    routers = dict(\n    \t# base router\n    \tBASE = dict(\n    \t\tdefault_application = 'welcome',\n    \t),\n    )\n\n    ```", "```py\n    routers = dict(\n    \t# base router\n    \tBASE = dict(\n    \t\tdefault_application = 'myapp',\n    \t\tdefault_controller = 'mycontroller',\n    \t\tdefault_function = 'myfunction',\n    \t),\n    )\n\n    ```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'myapp',\n\t\tpath_prefix = 'web2py',\n\t),\n)\n\n```", "```py\nrouters = dict(\n\tBASE = dict(\n\t\tdomains = {\n\t\t\t\"domain1.com\" : \"app1\",\n\t\t\t\"www.domain1.com\" : \"app1\",\n\t\t\t\"domain2.com\" : \"app2\",\n\t\t},\n\t\texclusive_domain = True,\n\t),\n\t# app1 = dict(...),\n\t# app2 = dict(...),\n)\n\n```", "```py\napp1 = dict(...),\napp2 = dict(...),\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'myapp',\n\t\tmap_static = True,\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'myapp',\n\t),\n\tmyapp = dict(\n\t\tmap_static = True,\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'welcome',\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tapplications = None,\n\t\tcontrollers = None,\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'myapp',\n\t),\n\tmyapp = dict(\n\t\tmap_hyphen = True,\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = 'myapp',\n\t\troot_static = ['favicon.ico', 'robots.txt']\n\t),\n)\n\n```", "```py\nrouters = dict(\n\t# base router\n\tBASE = dict(\n\t\tdefault_application = app,\n\t),\n\tapp = dict(\n\t\tdefault_language = 'en',\n\t\tlanguages = ['en', 'it', 'pt', 'pt-br'],\n\t),\n)\n\n```", "```py\nT.force(request.lang)\n\n```"]