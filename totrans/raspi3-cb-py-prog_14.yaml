- en: Can I Recommend a Movie for You?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我能为您推荐一部电影吗？
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将介绍以下菜谱：
- en: Euclidean distance score computation
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 欧几里得距离得分计算
- en: Pearson correlation score computation
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 皮尔逊相关系数计算
- en: How to find similar users in the dataset
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在数据集中找到相似的用户
- en: How to develop a movie recommendation module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何开发电影推荐模块
- en: Application of recommender systems
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推荐系统应用
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: Movie recommendations are used to predict movies for users based on their interests.
    The content in the database is filtered and an appropriate movie is recommended
    for the user. Having the appropriate movie recommended increases the probability
    of the user purchasing the movie. Collaborative filtering is used to build the
    movie recommendation system. It considers the behavior of the current user in
    the past. It also considers the ratings given by my other users. Collaborative
    filtering involves finding and computing the Euclidean distance, Pearson correlation,
    and finding similar users in the dataset.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 电影推荐是根据用户的兴趣预测电影。数据库中的内容会被过滤，并为用户推荐合适的电影。推荐合适的电影增加了用户购买电影的概率。协同过滤被用于构建电影推荐系统。它考虑了当前用户过去的行为。它还考虑了其他用户给出的评分。协同过滤包括在数据集中寻找和计算欧几里得距离、皮尔逊相关性和寻找相似用户。
- en: Computing the Euclidean distance score
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算欧几里得距离得分
- en: The first step in building a recommendation engine includes finding similar
    users in the database. The Euclidean distance score is one of the measures to
    find similarities.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 构建推荐引擎的第一步包括在数据库中寻找相似用户。欧几里得距离得分是寻找相似性的一个度量标准。
- en: Getting ready
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 准备就绪
- en: 'NumPy (Numerical Python) needs to be installed on Raspberry Pi 3 to calculate
    Euclidean distance. Readers can install `numpy` by typing the following command
    in the Raspberry Pi 3 Terminal:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: NumPy（数值Python）需要在Raspberry Pi 3上安装以计算欧几里得距离。读者可以在Raspberry Pi 3终端中输入以下命令来安装`numpy`：
- en: '[PRE0]'
  id: totrans-13
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: How to do it...
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We will create a new Python file and import the following packages into it:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的 Python 文件并将以下包导入到其中：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To calculate the Euclidean score between two users, we will define a new function.
    Let''s check the presence of the users in the database:'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要计算两个用户之间的欧几里得得分，我们将定义一个新的函数。让我们检查数据库中用户的存活性：
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'We will now extract the movies that have been rated by both users. Then we
    will compute the score:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将提取那些被用户评分的电影。然后我们将计算得分：
- en: '[PRE3]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'No movies in common indicates no similarities between the first and second
    user. (otherwise unable to compute the ratings in database):'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有共同的电影表示第一位和第二位用户之间没有相似性。（否则无法在数据库中计算评分）：
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If the ratings are common, calculate the sum of the squared differences, compute
    the square root of the result obtained, and then normalize it. The score will
    now be between zero and one:'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果评分是常见的，计算平方差的和，然后计算结果的平方根，最后进行归一化。此时，分数将在零和一之间：
- en: '[PRE5]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: If both user ratings are same, then sum of squared differences will be a small
    value. Therefore, the score will be high. This the aim here.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果两个用户评分相同，那么平方差的和将是一个较小的值。因此，得分将会很高。这正是这里的宗旨。
- en: 'We will name our data file `movie_rates.json`. We will now load it:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将命名我们的数据文件为`movie_rates.json`。现在我们来加载它：
- en: '[PRE6]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Let''s calculate the Euclidean distance score for two random users:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们计算两个随机用户之间的欧几里得距离得分：
- en: '[PRE7]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The preceding code will print the Euclidean distance score in the Terminal:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述代码将在终端中打印欧几里得距离得分：
- en: '![](img/a5f2a1de-a34e-4a95-865b-2f2ef667ab03.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a5f2a1de-a34e-4a95-865b-2f2ef667ab03.png)'
- en: How it works...
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Readers can refer to the article *Similarity and recommender systems* to learn
    how Euclidean distance works:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以参考文章《相似性与推荐系统》来了解欧几里得距离是如何工作的：
- en: '[http://www.inf.ed.ac.uk/teaching/courses/inf2b/learnnotes/inf2b-learn-note02-2up.pdf](http://www.inf.ed.ac.uk/teaching/courses/inf2b/learnnotes/inf2b-learn-note02-2up.pdf)'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.inf.ed.ac.uk/teaching/courses/inf2b/learnnotes/inf2b-learn-note02-2up.pdf](http://www.inf.ed.ac.uk/teaching/courses/inf2b/learnnotes/inf2b-learn-note02-2up.pdf)'
- en: There's more...
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Readers can refer to the article *Comparison of various metrics used in collaborative
    filtering for recommendation system* to learn more about various metrics used
    in recommendation systems:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以参考文章《协同过滤推荐系统中使用的各种指标比较》来了解更多关于推荐系统中使用的各种指标：
- en: '[http://ieeexplore.ieee.org/document/7346670/](http://ieeexplore.ieee.org/document/7346670/)'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://ieeexplore.ieee.org/document/7346670/](http://ieeexplore.ieee.org/document/7346670/)'
- en: See also
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: '*Quick Guide to Build a Recommendation Engine in Python*:'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Python构建推荐引擎快速指南*：'
- en: '[https://www.analyticsvidhya.com/blog/2016/06/quick-guide-build-recommendation-engine-python/](https://www.analyticsvidhya.com/blog/2016/06/quick-guide-build-recommendation-engine-python/)'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.analyticsvidhya.com/blog/2016/06/quick-guide-build-recommendation-engine-python/](https://www.analyticsvidhya.com/blog/2016/06/quick-guide-build-recommendation-engine-python/)'
- en: Computing a Pearson correlation score
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算皮尔逊相关系数
- en: Euclidean distance assumes that the sample points are distributed about the
    sample mean in a spherical manner, which is not always true. Hence, the Pearson
    correlation score is used instead of the Euclidean distance score. The computation
    of the Pearson correlation score is explained next.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 欧几里得距离假设样本点以球形方式分布在样本均值周围，这并不总是成立。因此，使用皮尔逊相关系数分数而不是欧几里得距离分数。接下来将解释皮尔逊相关系数分数的计算方法。
- en: How to do it...
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We will create a new Python file and import the following packages:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的 Python 文件并导入以下包：
- en: '[PRE8]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'To calculate the Pearson correlation score between two users, we will define
    a new function. Let''s check the presence of the users in the database:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要计算两个用户之间的皮尔逊相关系数，我们将定义一个新的函数。让我们检查数据库中用户的存在情况：
- en: '[PRE9]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'We will now extract the movies that have been rated by both users:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在将提取那些被用户评分的电影：
- en: '[PRE10]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'No movies in common indicates no similarities between the first and second
    user; hence, we return zero:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有共同的电影表示第一个用户和第二个用户之间没有相似性；因此，我们返回零：
- en: '[PRE11]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Calculate the sum of squared values of common movie ratings:'
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算常见电影评分的平方和：
- en: '[PRE12]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Calculate the sum of squared ratings of all the common movie ratings:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算所有共同电影评分的平方和：
- en: '[PRE13]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Now, calculate the sum of the products:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，计算乘积之和：
- en: '[PRE14]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Calculate the various variables required to calculate the Pearson correlation
    score:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算计算皮尔逊相关系数所需的各种变量：
- en: '[PRE15]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'We need to take care of the issue where the denominator becomes zero:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要关注分母变为零的问题：
- en: '[PRE16]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Return the Pearson correlation score:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回皮尔逊相关系数：
- en: '[PRE17]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Define the `main` function and calculate the Pearson correlation score between
    the two users:'
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义`main`函数并计算两个用户之间的皮尔逊相关系数：
- en: '[PRE18]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'The preceding code will print the Pearson correlation in the Terminal:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述代码将在终端中打印皮尔逊相关系数：
- en: '![](img/30f978bd-988b-413c-bca1-ce94c0910ca6.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30f978bd-988b-413c-bca1-ce94c0910ca6.png)'
- en: How it works...
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 它是如何工作的...
- en: 'Readers can refer to *Pearson Correlation Coefficient - Simple Tutorial* to
    learn how the Pearson correlation coefficient is calculated: [https://www.spss-tutorials.com/pearson-correlation-coefficient/](https://www.spss-tutorials.com/pearson-correlation-coefficient/)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以参考 *皮尔逊相关系数 - 简易教程* 来了解皮尔逊相关系数是如何计算的：[https://www.spss-tutorials.com/pearson-correlation-coefficient/](https://www.spss-tutorials.com/pearson-correlation-coefficient/)
- en: There's more...
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 还有更多...
- en: 'Readers can refer to two different variants of Pearson Correlation Coefficient
    here:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以在此参考两种不同的皮尔逊相关系数变体：
- en: 'Correlation Coefficient: Simple Definition, Formula, Easy Steps:'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相关系数：简单定义、公式、易行步骤：
- en: '[http://www.statisticshowto.com/how-to-compute-pearsons-correlation-coefficients/](http://www.statisticshowto.com/how-to-compute-pearsons-correlation-coefficients/)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '[如何计算皮尔逊相关系数](http://www.statisticshowto.com/how-to-compute-pearsons-correlation-coefficients/)'
- en: 'A new user similarity model to improve the accuracy of collaborative filtering:'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种用于提高协同过滤准确性的新用户相似度模型：
- en: '[http://www.sciencedirect.com/science/article/pii/S0950705113003560](http://www.sciencedirect.com/science/article/pii/S0950705113003560)'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.sciencedirect.com/science/article/pii/S0950705113003560](http://www.sciencedirect.com/science/article/pii/S0950705113003560)'
- en: See also
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: '*The new similarity measure based on user preference models for collaborative
    filtering*:'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*基于用户偏好模型的协同过滤新相似度度量*：'
- en: '[http://ieeexplore.ieee.org/document/7279353/](http://ieeexplore.ieee.org/document/7279353/)'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://ieeexplore.ieee.org/document/7279353/](http://ieeexplore.ieee.org/document/7279353/)'
- en: '*Application of artificial immune systems combines collaborative filtering
    in movie recommendation system*:'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*人工免疫系统在电影推荐系统中的应用*：'
- en: '[http://ieeexplore.ieee.org/document/6846855/](http://ieeexplore.ieee.org/document/6846855/)'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://ieeexplore.ieee.org/document/6846855/](http://ieeexplore.ieee.org/document/6846855/)'
- en: Finding similar users in the dataset
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在数据集中寻找相似用户
- en: Finding similar users in the dataset is a critical step in movie recommendations,
    and this process is explained next.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据集中找到相似用户是电影推荐中的关键步骤，这个过程将在下文中进行解释。
- en: How to do it...
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We will create a new Python file and import the following packages:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的 Python 文件并导入以下包：
- en: '[PRE19]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'First, define a function for the input user that will find the similar users.
    For this, three arguments are needed: the number of similar users, the input user,
    and the database. Check whether the user is present in the database. If they are
    present, calculate the Pearson correlation score between the users present in
    the database and the input user:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，为输入用户定义一个函数，用于找到相似用户。为此，需要三个参数：相似用户的数量、输入用户和数据库。检查用户是否存在于数据库中。如果存在，计算数据库中存在的用户与输入用户之间的皮尔逊相关系数：
- en: '[PRE20]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Now sort the obtained scores in descending order:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在将获得的分数按降序排列：
- en: '[PRE21]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We will pick the first `k` scores:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将选择前`k`个分数：
- en: '[PRE22]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'We define the `main` function and load the input database:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们定义`main`函数并加载输入数据库：
- en: '[PRE23]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We find three similar users:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们发现三个相似的用户：
- en: '[PRE24]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: See also
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: '*Recommendation for Movies and Stars Using YAGO and IMDB*:'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*使用YAGO和IMDB推荐电影和明星：*'
- en: '[http://ieeexplore.ieee.org/document/5474144/](http://ieeexplore.ieee.org/document/5474144/)'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://ieeexplore.ieee.org/document/5474144/](http://ieeexplore.ieee.org/document/5474144/)'
- en: Developing a movie recommendation module
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开发电影推荐模块
- en: We are now ready to build the movie recommendation engine. We will use all the
    functionalities that we built in the previous recipes. Let's see how it can be
    done.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在准备构建电影推荐引擎。我们将使用在前面的菜谱中构建的所有功能。让我们看看它是如何实现的。
- en: How to do it...
  id: totrans-101
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'We will create a new Python file and import the following packages:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个新的 Python 文件并导入以下包：
- en: '[PRE25]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'For movie recommendations for a given user, we will define a function first.
    We now check whether the user already exists:'
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于给定用户的电影推荐，我们首先定义一个函数。我们现在检查该用户是否已经存在：
- en: '[PRE26]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Compute the person score for the present user:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算当前用户的个人得分：
- en: '[PRE27]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'Find the movies that have not been rated by the user:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查找用户尚未评分的电影：
- en: '[PRE28]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'What if the user has seen all the movies in the dataset? Then there will be
    no recommendations:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果用户已经看过数据集中的所有电影？那么将不会有任何推荐：
- en: '[PRE29]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: 'We now have a list of these scores. Let''s create a normalized list of movie
    ranks:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在有一份这些分数的列表。让我们创建一个电影排名的标准化列表：
- en: '[PRE30]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'Based on the score, sort the list in descending order:'
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据分数，按降序排列列表：
- en: '[PRE31]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'We are finally ready to extract the movie recommendations:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们终于准备好提取电影推荐了：
- en: '[PRE32]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'Define the `main` function and load the dataset:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义`main`函数并加载数据集：
- en: '[PRE33]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: 'Let''s generate recommendations for `Steven Ferndndes`:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们为`史蒂文·费尔南德斯`生成推荐：
- en: '[PRE34]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'The user `Ramesh Nayak` has watched all the movies. Therefore, if we try to
    generate recommendations for him, it should display zero recommendations:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户 `Ramesh Nayak` 观看了所有电影。因此，如果我们尝试为他生成推荐，应该显示零推荐：
- en: '[PRE35]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: 'The preceding code will print the movie recommendations in the Terminal:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上述代码将在终端中打印电影推荐：
- en: '![](img/9d848d89-f60e-4711-bd19-865f25758bed.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9d848d89-f60e-4711-bd19-865f25758bed.png)'
- en: See also
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参见
- en: '*Recommender systems explained*:'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*推荐系统详解*：'
- en: '[https://medium.com/recombee-blog/recommender-systems-explained-d98e8221f468](https://medium.com/recombee-blog/recommender-systems-explained-d98e8221f468)'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[推荐系统解释](https://medium.com/recombee-blog/recommender-systems-explained-d98e8221f468)'
- en: '*Recommendation System Algorithms*:'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*推荐系统算法*:'
- en: '[https://blog.statsbot.co/recommendation-system-algorithms-ba67f39ac9a3](https://blog.statsbot.co/recommendation-system-algorithms-ba67f39ac9a3)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://blog.statsbot.co/recommendation-system-algorithms-ba67f39ac9a3](https://blog.statsbot.co/recommendation-system-algorithms-ba67f39ac9a3)'
- en: Applications of recommender systems
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推荐系统的应用
- en: Recommender systems are currently used in various fields. They play a very prominent
    role and are utilized in a variety of areas including music, movies, books, news,
    search queries, social tags, research articles, and products in general. There
    are also recommender systems for restaurants, experts, collaborators, financial
    services, jokes, garments, Twitter pages, and life insurance.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 推荐系统目前被广泛应用于各个领域。它们发挥着非常突出的作用，并在包括音乐、电影、书籍、新闻、搜索查询、社交标签、研究文章以及一般产品在内的多个领域得到应用。此外，还有针对餐厅、专家、合作伙伴、金融服务、笑话、服装、Twitter页面和人寿保险的推荐系统。
