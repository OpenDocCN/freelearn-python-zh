["```py\nnode -v\nyarn -v\n```", "```py\nnpm install -g yarn\n```", "```py\ncode .\n```", "```py\n    yarn create react-app social-media-app\n    ```", "```py\n    yarn start\n    ```", "```py\nyarn add react-router-dom@6\n```", "```py\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// Creating the root application component\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n <React.StrictMode>\n   <BrowserRouter>\n     <App />\n   </BrowserRouter>\n </React.StrictMode>\n);\n```", "```py\nyarn add react-bootstrap bootstrap\n```", "```py\n...\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from \"./App\";\n...\n```", "```py\nimport React from \"react\";\nfunction Home() {\n return (\n   <div>\n     <h1>Profile</h1>\n     <p>\n       Welcome!\n     </p>\n   </div>\n );\n}\nexport default Home;\n```", "```py\nimport React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Home />} />\n    </Routes>\n  );\n}\nexport default App;\n```", "```py\nfetch(\"http://127.0.0.1:8000/api/post/\")\n```", "```py\n    pip install django-cors-headers\n    ```", "```py\nINSTALLED_APPS = [\n    ...\n    'corsheaders',\n    ...\n]\nMIDDLEWARE = [\n    ...\n    'corsheaders.middleware.CorsMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    ...\n]\n```", "```py\nCORS_ALLOWED_ORIGINS = [\n    \"http://localhost:3000\",\n    \"http://127.0.0.1:3000\"\n]\n```", "```py\nlet counter = 0;\n// This is allowed because counter is not a constant\ncounter++;\n```", "```py\nconst name = 'World;\nconst message = `Hello, ${name}!`;\nconsole.log(message); // \"Hello, World!\"\n```", "```py\nconst a = 10;\nconst b = 20;\nconst message = `The sum of ${a} and ${b} is ${a + b}.`;\nconsole.log(message); // \"The sum of 10 and 20 is 30.\"\n```", "```py\nimport React from 'react';\nfunction Component() {\n  return (\n    <div>\n      <h1>Hello, world!</h1>\n      <p>This is some text.</p>\n    </div>\n  );\n}\n```", "```py\nimport React from 'react';\nfunction Component({ name }) {\n  return (\n    <div>\n      <h1>Hello, {name}!</h1>\n      <p>This is some text.</p>\n    </div>\n  );\n}\n```", "```py\nimport React from 'react';\nfunction ParentComponent() {\n  return (\n    <ChildComponent\n      name=\"John Doe\"\n      age={25}\n    />\n  );\n}\nfunction ChildComponent({ name, age }) {\n  return (\n    <p>\n      My name is {name} and I am {age} years old.\n    </p>\n  );\n}\n```", "```py\nimport React, { useState } from 'react';\nfunction Counter() {\n  // Use useState to manage the state of the counter\n  const [count, setCount] = useState(0);\n  // Function to increment the counter\n  function handleIncrement() {\n    setCount(count + 1);\n  }\n  return (\n    <div>\n      <p>The counter is at {count}.</p>\n      <button onClick={handleIncrement}>Increment</button>\n    </div>\n  );\n}\n```", "```py\n// Create a context for sharing data\nconst Context = React.createContext();\nfunction App() {\n  // Set some initial data in the context\n  const data = {\n    message: 'Hello, world!'\n  };\n  return (\n    // Provide the data to the components inside the\n    // Provider\n    <Context.Provider value={data}>\n      <Component />\n    </Context.Provider>\n  );\n}\nfunction Component() {\n  // Use the useContext Hook to access the data in the\n  // context\n  const context = React.useContext(Context);\n  return (\n    <p>{context.message}</p>\n  );\n}\n```", "```py\nimport React, { useMemo } from 'react';\nfunction Component({ data }) {\n  // Use useMemo to memoize the expensive calculation\n  const processedData = useMemo(() => {\n    // Do some expensive calculation with the data\n    return expensiveCalculation(data);\n  }, [data]);\n  return (\n    <div>\n      {/* Use the processed data in the component */}\n      <p>{processedData.message}</p>\n    </div>\n  );\n}\n```", "```py\nimport React, { useState } from 'react';\nfunction Form() {\n  // Use useState to manage the state of the input field\n  const [inputValue, setInputValue] = useState('');\n  // Function to handle changes to the input field\n  function handleChange(event) {\n    setInputValue(event.target.value);\n  }\n  return (\n    <form>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        value={inputValue}\n        onChange={handleChange}\n      />\n    </form>\n  );\n}\n```", "```py\nimport React from 'react';\nfunction Form() {\n  // Use a ref to manage the state of the input field\n  const inputRef = React.useRef();\n  // Function to handle the form submission\n  function handleSubmit(event) {\n    event.preventDefault();\n    // Do something with the input value here\n    // For example, you might send the input value to an\n    // API or save it to the database\n    sendInputValue(inputRef.current.value);\n    // Clear the input after submitting\n    inputRef.current.value = '';\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor=\"name\">Name:</label>\n      <input\n        type=\"text\"\n        id=\"name\"\n        defaultValue=\"\"\n        ref={inputRef}\n      />\n    </form>\n  );\n}\n```"]