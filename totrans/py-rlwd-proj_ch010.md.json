["```py\n% conda install jupyterlab\n```", "```py\n% python -m pip install jupyterlab\n```", "```py\n% jupyter lab\n```", "```py\ndef min_x(series: Series) -> float:\n    \"\"\"\n    >>> s = [\n    ...     {’x’: ’3’, ’y’: ’4’},\n    ...     {’x’: ’2’, ’y’: ’3’},\n    ...     {’x’: ’5’, ’y’: ’6’}]\n    >>> min_x(s)\n    2\n    \"\"\"\n    return min(int(s[’x’]) for s in series.samples)\n```", "```py\nx_values = []\nfor s in source_data[1:]:\n    x_values.append(float(s[’x’]))\nmin(x_values)\n```", "```py\nfrom series_stats import min_x\n```", "```py\nimport csv\nfrom collections.abc import Iterator\nimport json\nfrom typing import TextIO\n\ndef samples_iter(source: TextIO) -> Iterator[dict[str, str]]:\n    yield from (json.loads(line) for line in source)\n```", "```py\nfrom pathlib import Path\nsource_path = Path(\"/path/to/quartet/Series_1.ndjson\")\nwith source_path.open() as source_file:\n    source_data = list(samples_iter(source_file))\n```", "```py\nfrom collections import Counter\n\nvalues_x = (sample[’x’] for sample in source_data)\ndomain_x = Counter(values_x)\n```", "```py\ndef samples_iter(source: TextIO) -> Iterator[dict[str, str]]:\n    \"\"\"\n    # Build NDJSON file with two lines\n    >>> import json\n    >>> from io import StringIO\n    >>> source_data = [\n    ...     {’x’: 0, ’y’: 42},\n    ...     {’x’: 1, ’y’: 99},\n    ... ]\n    >>> source_text = [json.dumps(sample) for sample in source_data]\n    >>> ndjson_file = StringIO(’\\\\n’.join(source_text))\n\n    # Parse the file\n    >>> list(samples_iter(ndjson_file))\n    [{’x’: 0, ’y’: 42}, {’x’: 1, ’y’: 99}]\n    \"\"\"\n    yield from (json.loads(line) for line in source)\n```", "```py\nimport doctest\ndoctest.testmod()\n```", "```py\n% jupyter execute notebooks/example_2.ipynb\n```"]