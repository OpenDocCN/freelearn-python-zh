- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python is a language that is easy to learn and anyone can get started with a
    “Hello, World!” script within minutes. Mastering Python, however, is a completely
    different question.
  prefs: []
  type: TYPE_NORMAL
- en: 'Every programming problem has multiple possible solutions and choosing the
    Pythonic (idiomatic Python) solution is not always obvious; it can also change
    with time. This book will not only illustrate a range of different and new techniques
    but also explain where and when a method should be applied. To quote *The Zen
    of Python* by Tim Peters:'
  prefs: []
  type: TYPE_NORMAL
- en: “There should be one—and preferably only one—obvious way to do it. Although
    that way may not be obvious at first unless you’re Dutch.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Even though it does not always help, the author of this book is actually Dutch.
  prefs: []
  type: TYPE_NORMAL
- en: This book is not a beginner’s guide to Python. It is a book that can teach you
    about the more advanced techniques possible within Python, such as `asyncio`.
    It even includes Python 3.10 features, such as structural pattern matching (Python’s
    `switch` statement), in great detail.
  prefs: []
  type: TYPE_NORMAL
- en: As a Python programmer with many years of experience, I will attempt to rationalize
    the choices made in this book with relevant background information. These rationalizations
    are in no way strict guidelines, however, as several of these cases boil down
    to personal style in the end. Just know that they stem from experience and are,
    in many cases, the solutions recommended by the Python community.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the references in this book might not be obvious to you if you are not
    a fan of Monty Python. This book regularly uses `spam` and `eggs` instead of `foo`
    and `bar` in code samples because the Python programming language was named after
    Monty Python. To provide some background information about `spam` and `eggs`,
    I would recommend you watch the *Spam* sketch from Monty Python. It is positively
    silly.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is meant for programmers who are already experienced in Python and
    want to learn more about the advanced features that Python offers. With the depth
    of this book, I can guarantee that almost anyone can learn something new here
    if they wish.
  prefs: []
  type: TYPE_NORMAL
- en: If you only know the basics of Python, however, don’t worry. The book starts
    off relatively slow and builds to the more advanced subjects, so you should be
    fine.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Getting Started – One Environment per Project*, demonstrates
    several options for managing Python versions, virtual environments, and package
    dependencies.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Interactive Python Interpreters*, explores Python interpreter
    options. Python’s default interpreter is perfectly functional, but better alternatives
    are available. With a few modifications or a replacement, you can get auto-completion,
    syntax highlighting, and graphical output.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *Pythonic Syntax and Common Pitfalls*, discusses Pythonic coding,
    which is the art of writing beautiful and readable Python code. This chapter is
    not the holy grail, but it is filled with tips and best practices to achieve something
    along those lines.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Pythonic Design Patterns*, continues on the theme of *Chapter
    3*. Writing Pythonic code is not just about code style, but also about using the
    right design patterns and data structures. This chapter tells you about the data
    structures available and their performance characteristics.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Functional Programming – Readability Versus Brevity*, covers
    functional programming. Functional programming is considered a bit of a black
    art by some, but when applied correctly it can be a really powerful tool that
    makes code reuse trivial. It is probably as close to the underlying mathematics
    as you can get within programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Decorators – Enabling Code Reuse by Decorating*, discusses decorators,
    an amazing tool for reusing a method. With decorators, you can wrap functions
    and classes with some other function to modify their parameters and return values
    – an extremely useful tool.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Generators and Coroutines – Infinity, One Step at a Time*, discusses
    generators. Lists and tuples are fantastic if you already know that you are going
    to use every element, but the faster alternative is to only calculate the elements
    you actually need. That is what a generator does for you: generate items on demand.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Metaclasses – Making Classes (not Instances) Smarter*, explores
    metaclasses, the classes that make other classes. It is a magic you rarely need,
    but it does have practical uses cases such as plugin systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Documentation – How to Use Sphinx and reStructuredText*, gives
    you some documentation-related tips. Writing documentation might not be the favorite
    activity for most programmers, but it is useful. This chapter shows you how to
    make that easier by using Sphinx and reStructuredText to generate large portions
    automatically.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Testing and Logging – Preparing for Bugs*, covers how to implement
    tests and logging to prevent and detect bugs. Bugs are inevitable and by using
    logging, we can trace the cause. Often, bugs can be prevented by using tests.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Debugging – Solving the Bugs*, builds on *Chapter 10*. The previous
    chapter helped us find the bugs; now we need to solve them. Debuggers can be a
    huge help when hunting down difficult bugs, and this chapter shows you several
    debugging options.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Performance – Tracking and Reducing Your Memory and CPU Usage*,
    discusses the performance of your code. A common problem programmers have is trying
    to optimize code that does not need it, a fun but generally futile exercise. This
    chapter helps you find the code that needs to be optimized.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *asyncio – Multithreading without Threads*, covers `asyncio`.
    Waiting for external resources such as network resources is the most common bottleneck
    for applications. With `asyncio`, we can stop waiting for those bottlenecks and
    switch to another task instead.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Multiprocessing – When a Single CPU Core Is Not Enough*, discusses
    performance from a different perspective. With multiprocessing, we can use multiple
    processors (even remotely) in parallel. When your processor is the bottleneck,
    this can help a lot.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Scientific Python and Plotting*, covers the most important libraries
    for scientific computing. Python has become the language of choice for scientific
    purposes.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 16*, *Artificial Intelligence*, shows many AI algorithms and the libraries
    available for implementing them. In addition to being the language of choice for
    scientific purposes, most AI libraries are currently being built using Python
    as well.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 17*, *Extensions in C/C++, System Calls, and C/C++ Libraries*, shows
    you how to use existing C/C++ libraries from Python, which not only allows reuse
    but can also speed up execution greatly. Python is a wonderful language, but it
    is often not the fastest solution.'
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 18*, *Packaging – Creating Your Own Libraries or Applications*, will
    help you package your code into a fully functioning Python package that others
    can use. After building your wonderful new library, you might want to share it
    with the world.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Depending on your level of experience you should start reading from the beginning,
    or gloss over the chapters to skip to sections that are interesting for you. This
    book is suitable for intermediate to expert level Python programmers, but not
    all sections will be equally useful for everyone.
  prefs: []
  type: TYPE_NORMAL
- en: As an example, the first two chapters are about setting up your environment
    and Python interpreter and seem like chapters you can skip entirely as an advanced
    or expert Python programmer, but I would advise against fully skipping them, as
    a few useful utilities and libraries are covered which you might not be familiar
    with.
  prefs: []
  type: TYPE_NORMAL
- en: The chapters of this book do build on each other to a certain degree, but there
    is no strict reading order and you can easily cherry-pick the parts you wish to
    read. If there is a reference to an earlier chapter, it is clearly indicated.
  prefs: []
  type: TYPE_NORMAL
- en: The most up-to-date version of the code samples can always be found at [https://github.com/mastering-python/code_2](https://github.com/mastering-python/code_2).
  prefs: []
  type: TYPE_NORMAL
- en: The code in this repository is automatically tested and, if you have any suggestions,
    pull requests are always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: 'Most chapters of this book also include exercises at the end that will allow
    you to test what you have learned. Since there are always multiple solutions to
    problems, you, and every other reader of this book, can submit and compare your
    solutions on GitHub: [https://github.com/mastering-python/exercises](https://github.com/mastering-python/exercises)'
  prefs: []
  type: TYPE_NORMAL
- en: You are encouraged to create a pull request with your solution to the problems.
    And you can learn from others here as well, of course.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The code bundle for the book is hosted on GitHub at [https://github.com/mastering-python/code_2](https://github.com/mastering-python/code_2)
    and pull requests with improvements are welcome. We also have other code bundles
    from our rich catalog of books and videos available at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Download the color images
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781800207721_ColorImages.pdf](_ColorImages.pdf).'
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: While this book largely adheres to the PEP8 styling conventions, there are a
    few concessions made due to the space limitations of a book format. Simply put,
    code samples that span multiple pages are hard to read, so some parts use less
    whitespace than you would usually expect. The full version of the code is available
    on GitHub and is automatically tested to be PEP8-compliant.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    For example: “The `itertools.chain()` generator is one of the simplest yet one
    of the most useful generators in the Python library.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    the screen, for example, in menus or dialog boxes. For example: “Sometimes interactive
    interpreters are referred to as **REPL**. This stands for **Read-Eval-Print-Loop**.”'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com`, and mention the book’s
    title in the subject of your message. If you have questions about any aspect of
    this book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [http://authors.packtpub.com](http://authors.packtpub.com).'
  prefs: []
  type: TYPE_NORMAL
- en: Share your thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Mastering Python, Second Edition*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1800207727)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
