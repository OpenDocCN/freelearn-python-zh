["```py\n$ sudo apt-get install telnetd\n$ telnet localhost\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nimport getpass\nimport sys\nimport telnetlib\n\ndef run_telnet_session():\n  host = raw_input(\"Enter remote hostname e.g. localhost:\")\n  user = raw_input(\"Enter your remote account: \")\n  password = getpass.getpass()\n\n  session = telnetlib.Telnet(host)\n\n  session.read_until(\"login: \")\n  session.write(user + \"\\n\")\n  if password:\n    session.read_until(\"Password: \")\n    session.write(password + \"\\n\")\n\n  session.write(\"ls\\n\")\n  session.write(\"exit\\n\")\n\n  print session.read_all()\n\nif __name__ == '__main__':\n  run_telnet_session()\n```", "```py\n$ python 7_1_execute_remote_telnet_cmd.py \nEnter remote hostname e.g. localhost: localhost\nEnter your remote account: faruq\nPassword: \n\nls\nexit\nLast login: Mon Aug 12 10:37:10 BST 2013 from localhost on pts/9\nLinux debian6 2.6.32-5-686 #1 SMP Mon Feb 25 01:04:36 UTC 2013 i686\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nYou have new mail.\nfaruq@debian6:~$ ls \ndown              Pictures               Videos\nDownloads         projects               yEd\nDropbox           Public\nenv               readme.txt\nfaruq@debian6:~$ exit\nlogout\n\n```", "```py\n$ pip install paramiko\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications. \n\nimport argparse\nimport paramiko\nimport getpass\n\nSOURCE = '7_2_copy_remote_file_over_sftp.py'\nDESTINATION ='/tmp/7_2_copy_remote_file_over_sftp.py '\n\ndef copy_file(hostname, port, username, password, src, dst):\n  client = paramiko.SSHClient()\n  client.load_system_host_keys()\n  print \" Connecting to %s \\n with username=%s... \\n\" \n%(hostname,username)\n  t = paramiko.Transport((hostname, port)) \n  t.connect(username=username,password=password)\n  sftp = paramiko.SFTPClient.from_transport(t)\n  print \"Copying file: %s to path: %s\" %(SOURCE, DESTINATION)\n  sftp.put(src, dst)\n  sftp.close()\n  t.close()\n\nif __name__ == '__main__':\n  parser = argparse.ArgumentParser(description='Remote file copy')\n  parser.add_argument('--host', action=\"store\", dest=\"host\", \ndefault='localhost')\n  parser.add_argument('--port', action=\"store\", dest=\"port\", \ndefault=22, type=int)\n  parser.add_argument('--src', action=\"store\", dest=\"src\", \ndefault=SOURCE)\n  parser.add_argument('--dst', action=\"store\", dest=\"dst\", \ndefault=DESTINATION)\n\n  given_args = parser.parse_args()\n  hostname, port =  given_args.host, given_args.port\n  src, dst = given_args.src, given_args.dst\n\n  username = raw_input(\"Enter the username:\")\n  password = getpass.getpass(\"Enter password for %s: \" %username)\n\n  copy_file(hostname, port, username, password, src, dst)\n```", "```py\n$ python 7_2_copy_remote_file_over_sftp.py \nEnter the username:faruq\nEnter password for faruq: \n Connecting to localhost \n with username=faruq... \nCopying file: 7_2_copy_remote_file_over_sftp.py to path: \n/tmp/7_2_copy_remote_file_over_sftp.py \n\n```", "```py\n$ pip install paramiko\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nimport argparse\nimport getpass\nimport paramiko\n\nRECV_BYTES = 4096\nCOMMAND = 'cat /proc/cpuinfo'\n\ndef print_remote_cpu_info(hostname, port, username, password):\n  client = paramiko.Transport((hostname, port))\n  client.connect(username=username, password=password)\n\n  stdout_data = []\n  stderr_data = []\n  session = client.open_channel(kind='session')\n  session.exec_command(COMMAND)\n  while True:\n    if session.recv_ready():\n      stdout_data.append(session.recv(RECV_BYTES))\n      if session.recv_stderr_ready():\n        stderr_data.append(session.recv_stderr(RECV_BYTES))\n      if session.exit_status_ready():\n        break\n\n  print 'exit status: ', session.recv_exit_status()\n  print ''.join(stdout_data)\n  print ''.join(stderr_data)\n\n  session.close()\n  client.close()\n\nif __name__ == '__main__':\n  parser = argparse.ArgumentParser(description='Remote file copy')\n  parser.add_argument('--host', action=\"store\", dest=\"host\", \ndefault='localhost')\n  parser.add_argument('--port', action=\"store\", dest=\"port\", \ndefault=22, type=int)    \n  given_args = parser.parse_args()\n  hostname, port =  given_args.host, given_args.port\n\n  username = raw_input(\"Enter the username:\")\n  password = getpass.getpass(\"Enter password for %s: \" %username)\n  print_remote_cpu_info(hostname, port, username, password)\n```", "```py\n$ python 7_3_print_remote_cpu_info.py \nEnter the username:faruq\nEnter password for faruq: \nexit status:  0\nprocessor    : 0\nvendor_id    : GenuineIntel\ncpu family    : 6\nmodel        : 42\nmodel name    : Intel(R) Core(TM) i5-2400S CPU @ 2.50GHz\nstepping    : 7\ncpu MHz        : 2469.677\ncache size    : 6144 KB\nfdiv_bug    : no\nhlt_bug        : no\nf00f_bug    : no\ncoma_bug    : no\nfpu        : yes\nfpu_exception    : yes\ncpuid level    : 5\nwp        : yes\nflags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx rdtscp lm constant_tsc up pni monitor ssse3 lahf_lm\nbogomips    : 4939.35\nclflush size    : 64\ncache_alignment    : 64\naddress sizes    : 36 bits physical, 48 bits virtual\npower management:\n\n```", "```py\n$ pip install fabric\n\n```", "```py\n$ sudo apt-get install openssh-server\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nfrom getpass import getpass\nfrom fabric.api import settings, run, env, prompt\n\ndef remote_server():\n  env.hosts = ['127.0.0.1']\n  env.user = prompt('Enter user name: ')\n  env.password = getpass('Enter password: ')\n\ndef install_package():\n  run(\"pip install yolk\")\n```", "```py\n$ rm -rf fabfile.py\n$ ln -s 7_4_install_python_package_remotely.py fabfile.py\n\n```", "```py\n$ ln -sfn 7_4_install_python_package_remotely.py fabfile.py\n$ fab remote_server install_package\nEnter user name: faruq\nEnter password:\n[127.0.0.1] Executing task 'install_package'\n[127.0.0.1] run: pip install yolk\n[127.0.0.1] out: Downloading/unpacking yolk\n[127.0.0.1] out:   Downloading yolk-0.4.3.tar.gz (86kB): \n[127.0.0.1] out:   Downloading yolk-0.4.3.tar.gz (86kB): 100%  86kB\n[127.0.0.1] out:   Downloading yolk-0.4.3.tar.gz (86kB): \n[127.0.0.1] out:   Downloading yolk-0.4.3.tar.gz (86kB): 86kB \ndownloaded\n[127.0.0.1] out:   Running setup.py egg_info for package yolk\n[127.0.0.1] out:     Installing yolk script to /home/faruq/env/bin\n[127.0.0.1] out: Successfully installed yolk\n[127.0.0.1] out: Cleaning up...\n[127.0.0.1] out: \n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n```", "```py\n$ pip install fabric\n\n```", "```py\n$ sudo apt-get install openssh-server mysql-server\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nfrom getpass import getpass \nfrom fabric.api import run, env, prompt, cd\n\ndef remote_server():\n  env.hosts = ['127.0.0.1']\n# Edit this list to include remote hosts\n  env.user =prompt('Enter your system username: ')\n  env.password = getpass('Enter your system user password: ')\n  env.mysqlhost = 'localhost'\n  env.mysqluser = 'root'prompt('Enter your db username: ')\n  env.password = getpass('Enter your db user password: ')\n  env.db_name = ''\n\ndef show_dbs():\n  \"\"\" Wraps mysql show databases cmd\"\"\"\n  q = \"show databases\"\n  run(\"echo '%s' | mysql -u%s -p%s\" %(q, env.mysqluser, \nenv.mysqlpassword))\n\ndef run_sql(db_name, query):\n  \"\"\" Generic function to run sql\"\"\"\n  with cd('/tmp'):\n    run(\"echo '%s' | mysql -u%s -p%s -D %s\" %(query, \nenv.mysqluser, env.mysqlpassword, db_name))\n\ndef create_db():\n  \"\"\"Create a MySQL DB for App version\"\"\"\n  if not env.db_name:\n    db_name = prompt(\"Enter the DB name:\")\n  else:\n    db_name = env.db_name\n  run('echo \"CREATE DATABASE %s default character set utf8 collate \nutf8_unicode_ci;\"|mysql --batch --user=%s --password=%s --\nhost=%s'\\\n    % (db_name, env.mysqluser, env.mysqlpassword, env.mysqlhost), \npty=True)\n\ndef ls_db():\n  \"\"\" List a dbs with size in MB \"\"\"\n  if not env.db_name:\n    db_name = prompt(\"Which DB to ls?\")\n  else:\n    db_name = env.db_name\n  query = \"\"\"SELECT table_schema                                        \n\"DB Name\", \n  Round(Sum(data_length + index_length) / 1024 / 1024, 1) \"DB Size \nin MB\" \n    FROM   information_schema.tables         \n    WHERE table_schema = \\\"%s\\\" \n    GROUP  BY table_schema \"\"\" %db_name\n  run_sql(db_name, query)\n\ndef empty_db():\n  \"\"\" Empty all tables of a given DB \"\"\"\n  db_name = prompt(\"Enter DB name to empty:\")\n  cmd = \"\"\"\n  (echo 'SET foreign_key_checks = 0;'; \n  (mysqldump -u%s -p%s --add-drop-table --no-data %s | \n  grep ^DROP); \n  echo 'SET foreign_key_checks = 1;') | \\\n  mysql -u%s -p%s -b %s\n  \"\"\" %(env.mysqluser, env.mysqlpassword, db_name, env.mysqluser, \nenv.mysqlpassword, db_name)\n  run(cmd)\n```", "```py\n$ ln -sfn 7_5_run_mysql_command_remotely.py fabfile.py\n\n```", "```py\n$ fab remote_server show_dbs\n\n```", "```py\n$ fab remote_server create_db\n\n```", "```py\n$ fab remote_server ls_db()\n\n```", "```py\n$ fab remote_server empty_db()\n\n```", "```py\n$ $ fab remote_server show_dbs\n[127.0.0.1] Executing task 'show_dbs'\n[127.0.0.1] run: echo 'show databases' | mysql -uroot -p<DELETED>\n[127.0.0.1] out: Database\n[127.0.0.1] out: information_schema\n[127.0.0.1] out: mysql\n[127.0.0.1] out: phpmyadmin\n[127.0.0.1] out: \n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n$ fab remote_server create_db\n[127.0.0.1] Executing task 'create_db'\nEnter the DB name: test123\n[127.0.0.1] run: echo \"CREATE DATABASE test123 default character set utf8 collate utf8_unicode_ci;\"|mysql --batch --user=root --password=<DELETED> --host=localhost\n\nDone.\nDisconnecting from 127.0.0.1... done.\n$ fab remote_server show_dbs\n[127.0.0.1] Executing task 'show_dbs'\n[127.0.0.1] run: echo 'show databases' | mysql -uroot -p<DELETED>\n[127.0.0.1] out: Database\n[127.0.0.1] out: information_schema\n[127.0.0.1] out: collabtive\n[127.0.0.1] out: test123\n[127.0.0.1] out: testdb\n[127.0.0.1] out: \n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n```", "```py\n$ pip install fabric\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nfrom getpass import getpass\nfrom fabric.api import local, run, env, get, put, prompt, open_shell\n\ndef remote_server():\n  env.hosts = ['127.0.0.1']\n  env.password = getpass('Enter your system password: ')\n  env.home_folder = '/tmp'\n\ndef login():\n  open_shell(command=\"cd %s\" %env.home_folder)\n\ndef download_file():\n  print \"Checking local disk space...\"\n  local(\"df -h\")\n  remote_path = prompt(\"Enter the remote file path:\")\n  local_path = prompt(\"Enter the local file path:\")\n  get(remote_path=remote_path, local_path=local_path)\n  local(\"ls %s\" %local_path)\n\ndef upload_file():\n  print \"Checking remote disk space...\"\n  run(\"df -h\")\n  local_path = prompt(\"Enter the local file path:\")\n  remote_path = prompt(\"Enter the remote file path:\")\n  put(remote_path=remote_path, local_path=local_path)\n  run(\"ls %s\" %remote_path)\n```", "```py\n$ ln -sfn 7_6_transfer_file_over_ssh.py fabfile.py\n\n```", "```py\n$ fab remote_server login\n\n```", "```py\n$ fab remote_server download_file\n\n```", "```py\n$ fab remote_server upload_file\n\n```", "```py\n$ fab remote_server login\n[127.0.0.1] Executing task 'login'\nLinux debian6 2.6.32-5-686 #1 SMP Mon Feb 25 01:04:36 UTC 2013 i686\n\nThe programs included with the Debian GNU/Linux system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\n\nDebian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\npermitted by applicable law.\nYou have new mail.\nLast login: Wed Aug 21 15:08:45 2013 from localhost\ncd /tmp\nfaruq@debian6:~$ cd /tmp\nfaruq@debian6:/tmp$ \n\n<CTRL+D>\nfaruq@debian6:/tmp$ logout\n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n$ fab remote_server download_file\n[127.0.0.1] Executing task 'download_file'\nChecking local disk space...\n[localhost] local: df -h\nFilesystem            Size  Used Avail Use% Mounted on\n/dev/sda1              62G   47G   12G  81% /\ntmpfs                 506M     0  506M   0% /lib/init/rw\nudev                  501M  160K  501M   1% /dev\ntmpfs                 506M  408K  505M   1% /dev/shm\nZ_DRIVE              1012G  944G   69G  94% /media/z\nC_DRIVE               466G  248G  218G  54% /media/c\nEnter the remote file path: /tmp/op.txt\nEnter the local file path: .\n[127.0.0.1] download: chapter7/op.txt <- /tmp/op.txt\n[localhost] local: ls .\n7_1_execute_remote_telnet_cmd.py   7_3_print_remote_cpu_info.py           7_5_run_mysql_command_remotely.py  7_7_configure_Apache_for_hosting_website_remotely.py  fabfile.pyc  __init__.py  test.txt\n7_2_copy_remote_file_over_sftp.py  7_4_install_python_package_remotely.py  7_6_transfer_file_over_ssh.py      fabfile.py                        index.html     op.txt       vhost.conf\n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n```", "```py\n$ pip install fabric\n\n```", "```py\n$ sudo apt-get install openssh-server apache2\n\n```", "```py\n#!/usr/bin/env python\n# Python Network Programming Cookbook -- Chapter - 7\n# This program is optimized for Python 2.7.\n# It may run on any other version with/without modifications.\n\nfrom fabric.api import env, put, sudo, prompt\nfrom fabric.contrib.files import exists\n\nWWW_DOC_ROOT = \"/data/apache/test/\"\nWWW_USER = \"www-data\"\nWWW_GROUP = \"www-data\"\nAPACHE_SITES_PATH = \"/etc/apache2/sites-enabled/\"\nAPACHE_INIT_SCRIPT = \"/etc/init.d/apache2 \"\n\ndef remote_server():\n  env.hosts = ['127.0.0.1']\n  env.user = prompt('Enter user name: ')\n  env.password = getpass('Enter your system password: ')\n\ndef setup_vhost():\n  \"\"\" Setup a test website \"\"\"\n  print \"Preparing the Apache vhost setup...\"\n\n  print \"Setting up the document root...\"\n  if exists(WWW_DOC_ROOT):\n    sudo(\"rm -rf %s\" %WWW_DOC_ROOT)\n  sudo(\"mkdir -p %s\" %WWW_DOC_ROOT)\n\n  # setup file permissions\n  sudo(\"chown -R %s.%s %s\" %(env.user, env.user, WWW_DOC_ROOT))\n\n  # upload a sample index.html file\n  put(local_path=\"index.html\", remote_path=WWW_DOC_ROOT)\n  sudo(\"chown -R %s.%s %s\" %(WWW_USER, WWW_GROUP, WWW_DOC_ROOT))\n\n  print \"Setting up the vhost...\"\n  sudo(\"chown -R %s.%s %s\" %(env.user, env.user, \nAPACHE_SITES_PATH))\n\n  # upload a pre-configured vhost.conf\n  put(local_path=\"vhost.conf\", remote_path=APACHE_SITES_PATH)\n  sudo(\"chown -R %s.%s %s\" %('root', 'root', APACHE_SITES_PATH))\n\n  # restart Apache to take effect\n  sudo(\"%s restart\" %APACHE_INIT_SCRIPT)\n  print \"Setup complete. Now open the server path \nhttp://abc.remote-server.org/ in your web browser.\"\n```", "```py\n127.0.0.1 abc.remote-server.org abc \n\n```", "```py\n$ ln -sfn 7_7_configure_Apache_for_hosting_website_remotely.py \nfabfile.py\n\n```", "```py\n$ fab remote_server setup_vhost\n[127.0.0.1] Executing task 'setup_vhost'\nPreparing the Apache vhost setup...\nSetting up the document root...\n[127.0.0.1] sudo: rm -rf /data/apache/test/\n[127.0.0.1] sudo: mkdir -p /data/apache/test/\n[127.0.0.1] sudo: chown -R faruq.faruq /data/apache/test/\n[127.0.0.1] put: index.html -> /data/apache/test/index.html\n[127.0.0.1] sudo: chown -R www-data.www-data /data/apache/test/\nSetting up the vhost...\n[127.0.0.1] sudo: chown -R faruq.faruq /etc/apache2/sites-enabled/\n[127.0.0.1] put: vhost.conf -> /etc/apache2/sites-enabled/vhost.conf\n[127.0.0.1] sudo: chown -R root.root /etc/apache2/sites-enabled/\n[127.0.0.1] sudo: /etc/init.d/apache2 restart\n[127.0.0.1] out: Restarting web server: apache2apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1 for ServerName\n[127.0.0.1] out:  ... waiting apache2: Could not reliably determine the server's fully qualified domain name, using 127.0.0.1 for ServerName\n[127.0.0.1] out: .\n[127.0.0.1] out: \n\nSetup complete. Now open the server path http://abc.remote-server.org/ in your web browser.\n\nDone.\nDisconnecting from 127.0.0.1... done.\n\n```", "```py\nIt works! \nThis is the default web page for this server.\nThe web server software is running but no content has been added, \nyet.\n\n```"]