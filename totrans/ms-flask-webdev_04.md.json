["```py\nfrom flask import session\n...\nsession['page_loads'] = session.get('page_loads', 0) + 1\n...\n```", "```py\nfrom flask import g\n....\n# Set some key with some value on a request context\ng.some_key = \"some_value\"\n# Get a key\nv = g.some_key\n# Get and remove a key\nv = g.pop('some_key', \"default_if_not_present\")\n```", "```py\nimport random\nfrom flask import session, g\n\n@app.before_request\ndef before_request():\n    session['page_loads'] = session.get('page_loads', 0) + 1\n    g.random_key = random.randrange(1, 10)\n```", "```py\n@app.errorhandler(404) \ndef page_not_found(error): \n    return render_template('404.html'), 404 \n```", "```py\nfrom flask.views import View \n\nclass GenericView(View): \n    def __init__(self, template): \n        self.template = template \n        super(GenericView, self).__init__() \n\n    def dispatch_request(self): \n        return render_template(self.template) \n\napp.add_url_rule( \n    '/', view_func=GenericView.as_view( \n        'home', template='home.html' \n    ) \n)\n```", "```py\nclass GenericView(View): \n    methods = ['GET', 'POST'] \n    ... \n    def dispatch_request(self): \n        if request.method == 'GET': \n            return render_template(self.template) \n        elif request.method == 'POST': \n            ... \n```", "```py\nfrom flask.views import View\n\nclass GenericListView(View):\n\n    def __init__(self, model, list_template='generic_list.html'):\n        self.model = model\n        self.list_template = list_template\n        self.columns = self.model.__mapper__.columns.keys()\n        # Call super python3 style\n        super(GenericListView, self).__init__()\n\n    def render_template(self, context):\n        return render_template(self.list_template, **context)\n\n    def get_objects(self):\n        return self.model.query.all()\n\n    def dispatch_request(self):\n        context = {'objects': self.get_objects(),\n                   'columns': self.columns}\n        return self.render_template(context)\n\napp.add_url_rule(\n    '/generic_posts', view_func=GenericListView.as_view(\n        'generic_posts', model=Post)\n    )\n\napp.add_url_rule(\n    '/generic_users', view_func=GenericListView.as_view(\n        'generic_users', model=User)\n)\n\napp.add_url_rule(\n    '/generic_comments', view_func=GenericListView.as_view(\n        'generic_comments', model=Comment)\n)\n```", "```py\n{% extends \"base.html\" %}\n{% block body %}\n\n<div class=\"table-responsive\">\n    <table class=\"table table-bordered table-hover\">\n    {% for obj in objects %}\n        <tr>\n        {% for col in columns %}\n        <td>\n        {{col}} {{ obj[col] }}\n        </td>\n        {% endfor %}\n        </tr>\n    {% endfor %}\n    </table>\n</div>\n\n{% endblock %}\n```", "```py\n@app.route('/user', methods=['GET', 'POST', 'PUT', 'DELETE']) \ndef users(): \n    if request.method == 'GET': \n        ... \n    elif request.method == 'POST': \n        ... \n    elif request.method == 'PUT': \n        ... \n    elif request.method == 'DELETE': \n        ... \n```", "```py\nfrom flask.views import MethodView \n\nclass UserView(MethodView): \n    def get(self): \n        ... \n    def post(self): \n        ... \n    def put(self): \n        ... \n    def delete(self): \n        ... \n\napp.add_url_rule( \n    '/user', \n    view_func=UserView.as_view('user') \n) \n```", "```py\nfrom flask import Blueprint \nexample = Blueprint( \n    'example', \n    __name__, \n    template_folder='templates/example', \n    static_folder='static/example', \n    url_prefix=\"/example\" \n) \n\n@example.route('/') \ndef home(): \n    return render_template('home.html') \n```", "```py\n{{ url_for('example.home') }} \n```", "```py\n{{ url_for('.home') }} \n```", "```py\napp.register_blueprint(example) \n```", "```py\nblog_blueprint = Blueprint( \n    'blog', \n    __name__, \n    template_folder='templates/blog', \n    url_prefix=\"/blog\" \n) \n```", "```py\napp.register_blueprint(blog_blueprint)\n```", "```py\n@app.route('/') \ndef index(): \n    return redirect(url_for('blog.home')) \n```"]