["```py\n./ \n  config.py \n  database.db \n  main.py \n  manage.py \n  env/ \n  migrations/ \n    versions/ \n  templates/ \n    blog/ \n```", "```py\n./ \n  manage.py\n  main.py\n  config.py \n database.db \n  webapp/ \n    __init__.py\n    blog/\n      __init__.py \n      controllers.py\n      forms.py\n      models.py\n    main/\n      __init__.py\n      controllers.py\n    templates/ \n      blog/ \n  migrations/ \n    versions/ \n```", "```py\n./<MODULE_NAME>\n  __init__.py -> Declare a python module\n  controllers.py -> where our blueprint definition and views are\n  models.py -> The module database models definitions\n  forms.py -> All the module's web Forms \n```", "```py\nfrom flask import Flask, render_template\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_migrate import Migrate\n\ndb = SQLAlchemy()\nmigrate = Migrate()\n\ndef page_not_found(error):\n    return render_template('404.html'), 404\n\ndef create_app(config):\n...\n```", "```py\nfrom .. import db\n\n...\nclass User(db.Model):\n...\nclass Post(db.Model):\n...\nclass Comment(db.Model):\n...\nclass Tag(db.Model):\n...\n```", "```py\nfrom flask_wtf import Form \nfrom wtforms import StringField, TextAreaField \nfrom wtforms.validators import DataRequired, Length \n\nclass CommentForm(Form): \n  ... \n```", "```py\nfrom sqlalchemy import func\nfrom flask import render_template, Blueprint, flash, redirect, url_for\nfrom .models import db, Post, Tag, Comment, User, tags\nfrom .forms import CommentForm\n\nblog_blueprint = Blueprint(\n    'blog',\n    __name__,\n    template_folder='../templates/blog',\n    url_prefix=\"/blog\"\n)\n\ndef sidebar_data():\n...\n```", "```py\nfrom .blog.controllers import blog_blueprint\nfrom .main.controllers import main_blueprint\n\n...\napp.register_blueprint(main_blueprint)\napp.register_blueprint(blog_blueprint)\n```", "```py\nfrom flask import Flask, render_template\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_migrate import Migrate\n\ndb = SQLAlchemy()\nmigrate = Migrate()\n\ndef page_not_found(error):\n    return render_template('404.html'), 404\n\ndef create_app(object_name):\n    from .blog.controllers import blog_blueprint\n    from .main.controllers import main_blueprint\n\n    app = Flask(__name__)\n    app.config.from_object(object_name)\n\n    db.init_app(app)\n    migrate.init_app(app, db)\n    app.register_blueprint(main_blueprint)\n    app.register_blueprint(blog_blueprint)\n    app.register_error_handler(404, page_not_found)\n    return app\n```", "```py\nimport os\nfrom webapp import create_app\n\nenv = os.environ.get('WEBAPP_ENV', 'dev')\napp = create_app('config.%sConfig' % env.capitalize())\n\nif __name__ == '__main__':\n    app.run()\n```", "```py\nimport os\nfrom webapp import db, migrate, create_app\nfrom webapp.blog.models import User, Post, Tag\n\nenv = os.environ.get('WEBAPP_ENV', 'dev')\napp = create_app('config.%sConfig' % env.capitalize())\n\n@app.shell_context_processor\ndef make_shell_context():\n    return dict(app=app, db=db, User=User, Post=Post, Tag=Tag, migrate=migrate)\n```", "```py\n    $ export WEBAPP_ENV=\"dev\"\n```", "```py\n    $ echo $WEBAPP_ENV\n    dev\n```", "```py\n    $ unset $WEBAPP_ENV\n    $ echo $WEBAPP_ENV\n```"]