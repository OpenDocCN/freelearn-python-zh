- en: Chapter 10. Keep Coding!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In the previous chapter, we built a complete two-player game in a graphical
    environment using pygame. In the final chapter of this book, we will review all
    that you learned from the beginning of this journey, and then explore some other
    ideas that you can try with your new coding skills. Many of these ideas will be
    games, but some ideas will involve other ways in which Python can be used.
  prefs: []
  type: TYPE_NORMAL
- en: What we learned and your next steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'At the beginning of this book, you started out by learning about your computer.
    You learned how to install Python and use different free tools such as text editors,
    the Python shell, and a terminal/command line to run your games. Also, you learned
    how to navigate to your desktop directory and save your work so that you could
    work through each project. The next steps included the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Navigating to other folders and directories on your computer
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Learning more terminal/command prompt commands
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We then started our coding journey by making functions and variables, and using
    different data types. We created some functions to do mathematics, and then we
    put those functions together to create a calculator. You learned how to get information
    from someone by giving them a prompt using the `input()` command.
  prefs: []
  type: TYPE_NORMAL
- en: 'We used logic such as `if` and `else` to teach the computer how to make decisions
    based on what the user decided to do. We also used loops to help us perform different
    jobs in games. The steps after this would include the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Looking up and trying to understand nested `if` statements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using loops to work with large text or datasets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You learned about the different ways to use and store data in Python, such as
    dictionaries and lists. It is helpful to know how things are stored in Python,
    and one of the fastest features of Python is its capacity to store and retrieve
    data very quickly.
  prefs: []
  type: TYPE_NORMAL
- en: Throughout [Chapter 1](ch01.html "Chapter 1. Welcome! Let's Get Started"), *Welcome!
    Let's Get Started*, and [Chapter 9](ch09.html "Chapter 9. Tiny Tennis"), *Tiny
    Tennis*, we built several projects to show how you could use the skills that you
    learned. It is important to understand how to use the great features of Python
    to solve problems. Knowing about each tool means that you can better imagine how
    to solve a problem using your coding skills. For the remainder of the chapter,
    let's take a look at some of the problems we can solve that will expand our Python
    skills.
  prefs: []
  type: TYPE_NORMAL
- en: Classes and objects – very important next steps!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Immediately, you will need to start learning about classes and objects. These
    are great ways to simplify what would otherwise be repeated code. For example,
    there is a class in pygame called `Sprites`. The `pygame.Sprites` module has classes
    that make it easier to manage different game objects.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To learn more about Sprites, it is best to refer to the documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.pygame.org/docs/tut/SpriteIntro.html](http://www.pygame.org/docs/tut/SpriteIntro.html).'
  prefs: []
  type: TYPE_NORMAL
- en: To learn more about classes and objects, it is a good idea to search the Internet
    for things such as object-oriented programming (this is the kind of programming
    that Python uses) and, more specifically, classes and objects. If you find classes
    and objects confusing, do not worry. This is a concept that takes some getting
    used to.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here are some resources that will help you learn about classes and objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.tutorialspoint.com/python/python_classes_objects.htm](http://www.tutorialspoint.com/python/python_classes_objects.htm)'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.learnpython.org/en/Classes_and_Objects](http://www.learnpython.org/en/Classes_and_Objects)'
  prefs: []
  type: TYPE_NORMAL
- en: More fun with games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Since the focus of this book was making game projects, we shall take a look
    at some more complicated things that you can do with games once you explore pygame
    in more detail. You can start by making Tiny Tennis more complicated in these
    ways:'
  prefs: []
  type: TYPE_NORMAL
- en: Adding a music file
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding graphics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding music to games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: pygame allows you to add music to your games. There is a music module that allows
    you to add music in a few formats to your game files. There are some limitations,
    including file types. For example, using universally supported `.ogg` file types
    is better than using file types such as `.mp3`, which are not natively supported
    on all operating systems.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: For more information, you can go to the pygame site at [https://www.pygame.org/docs/ref/music.html](https://www.pygame.org/docs/ref/music.html)
    and learn how to add your favorite sounds.
  prefs: []
  type: TYPE_NORMAL
- en: Adding graphics to games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: While you learned how to make some basic shapes, our world would be pretty boring
    if it only had rectangles, circles, and squares in basic colors. By experimenting
    with modules such as the `pygame.image()` module you can learn how to work with
    images that are created outside of pygame. If you have an artistic sibling or
    friend or you are an artist yourself, you can create or scan artwork in your computer
    and then add it to your games.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can learn about the `pygame.image()` module at [http://www.pygame.org/docs/ref/image.html](http://www.pygame.org/docs/ref/image.html).
  prefs: []
  type: TYPE_NORMAL
- en: Remake or design games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'If you want a brand new challenge, you can try remaking a classic game on your
    own. There are a lot of classic games, such as PacMan, Asteroids, or Legend of
    Zelda. A good challenge would be to try and remake a version of these games using
    your skills. This practice exercise would require you to do some of these important
    things:'
  prefs: []
  type: TYPE_NORMAL
- en: Plan your program ahead of time
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Figure out if you need classes in your program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Figure out how to use objects in your program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage loops in your program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage `if`/`else` decisions in your program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Manage user information, such as the name and score, in your program
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once you make a few games that are based on classic games, you might have some
    ideas for your own games. If you do have ideas, make notes of them in a file on
    your computer. When you think about a new game, you need to do the same things
    that you do to recreate a classic game, except that you need to make other decisions
    about the purpose of the game, the win conditions of the game, and the controllers.
  prefs: []
  type: TYPE_NORMAL
- en: Other games
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Many programmers have made small games in Python to practice their programming
    skills. To start with, you can look at some other games that people have made
    and posted on the pygame website. Navigate to [http://pygame.org/tags/pygame](http://pygame.org/tags/pygame),
    and view some of the contributions people have made.
  prefs: []
  type: TYPE_NORMAL
- en: PB-Ball
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'PB-Ball is a basketball game that uses pygame and adds classes and objects.
    When you navigate to the project page, you will see a few different links to the
    code. The following links will help you find the game and look at the code. When
    you look at the code, you will notice that there are folders for images and sounds.
    So, there are many new skills to learn in order to create a game that has a more
    complicated background. Here is a screenshot along with some links to the game
    so that you can look at the code and learn it:'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here''s the link to the PB-Ball game:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://pygame.org/project-PB-Ball-2963-.html](http://pygame.org/project-PB-Ball-2963-.html)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a link to the main code, including two classes and source:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://bitbucket.org/tjohnson2/pb-ball/src/88e324263a63eb97d6a2427f7ea719df85010dfe/main.py?fileviewer=file-view-default](https://bitbucket.org/tjohnson2/pb-ball/src/88e324263a63eb97d6a2427f7ea719df85010dfe/main.py?fileviewer=file-view-default)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some files that include images and sounds needed to play the game:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://bitbucket.org/tjohnson2/pb-ball/src](https://bitbucket.org/tjohnson2/pb-ball/src)'
  prefs: []
  type: TYPE_NORMAL
- en: Snake
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A game that many people have played is the snake game, where the player starts
    as a short snake that becomes longer as the game goes on. The only rule to stay
    alive is that the snake cannot touch its tail. There are many samples of this
    game available on the Internet. You can view a few samples of code and check whether
    you are able to recreate the game.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Learn more about the Snake games from the following links:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://programarcadegames.com/python_examples/f.php?file=snake.py](http://programarcadegames.com/python_examples/f.php?file=snake.py)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/YesIndeed/SnakesForPython](https://github.com/YesIndeed/SnakesForPython)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/xtur/SnakesAllAround](https://github.com/xtur/SnakesAllAround)
    (this is multiplayer!)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Apart from the preceding games, there are a few programmers who have worked
    really hard to make Python game instructions available to new programmers! A few
    such books are available for free on the Internet. Refer to:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Rapid Game Development with Python* by Richard Jones ([http://richard.cgpublisher.com/product/pub.84/prod.11](http://richard.cgpublisher.com/product/pub.84/prod.11)).'
  prefs: []
  type: TYPE_NORMAL
- en: Other uses of Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Python has many uses outside of making games. Learning Python can open doors
    to careers in data science, web application development, or software testing,
    among other things. If you really want to make a career in computer programming,
    then it is a great idea to check out some of the different things you can do with
    Python.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Curious about how Python is used in the real world? Learn about how Python is
    used in many different fields! Visit [https://www.python.org/about/success/](https://www.python.org/about/success/)
    for more details.
  prefs: []
  type: TYPE_NORMAL
- en: SciPy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The **SciPy** library has a suite of several programs that are open source (free)
    and can be used for mathematics, science, and data analysis. Two of those programs
    will be reviewed here. Although some of the programs are rather advanced in their
    abilities, they can be used to do simple things. The suite of programs is worth
    knowing if you want to use Python in work related to your math or science.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Learn about all the programs at [http://www.scipy.org/](http://www.scipy.org/).
  prefs: []
  type: TYPE_NORMAL
- en: iPython
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**iPython** is a program that is similar to the Python shells that we used
    for our projects, including **IDLE** or in the terminal. However, iPython has
    a server that uses *notebooks* to keep track of your code as well as other notes
    that you make along with your code. The project is undergoing some positive changes.'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Learn about iPython notebook at [http://ipython.org/](http://ipython.org/).
  prefs: []
  type: TYPE_NORMAL
- en: 'Packt Publishing offers an introductory book called *Learning IPython for Interactive
    Computing and Data Visualization* (2015) by Cyrille Rossant to help you learn
    how to use iPython:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.packtpub.com/big-data-and-business-intelligence/learning-ipython-interactive-computing-and-data-visualization](https://www.packtpub.com/big-data-and-business-intelligence/learning-ipython-interactive-computing-and-data-visualization).'
  prefs: []
  type: TYPE_NORMAL
- en: MatPlotLib
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**MatPlotLib** is an advanced tool that can be coded using Python to create
    simple or complex charts, graphs, histograms, and even animations. It is an open
    source project, so it is also free to use. There are many ways to use this tool,
    which is especially useful for any 2D visualizations. All of the instructions
    for its download and installation are on its website. There are a lot of dependencies,
    but if you are keen on mathematics or 2D graphical representations (or both),
    then you should check out the website and code samples.'
  prefs: []
  type: TYPE_NORMAL
- en: Raspberry Pi
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The popular Raspberry Pi is a small computer board designed for experimentation
    in computing and robotics. Its operating system, which is different from Windows
    and Mac, comes preinstalled with Python and pygame, so it is a very convenient
    way to get started with gaming since you do not have to do all the work that we
    did in the first chapter.
  prefs: []
  type: TYPE_NORMAL
- en: To use Raspberry Pi, you will need a power source, a monitor that has an HDMI
    input, an HDMI cable, a keyboard and mouse, and a Wi-Fi dongle or Ethernet cable
    if you plan to use the Internet. Additionally, you will need an SD card to install
    the latest Raspberry Pi operating system. With these items, you can use Raspberry
    Pi as your primary computer and experiment, knowing that if you crash your computer,
    you can just make another copy of the operating system for free!
  prefs: []
  type: TYPE_NORMAL
- en: Many people have used Raspberry Pi to make games and even small, handheld game
    systems! Aside from making games, people have used Raspberry Pi to make robotics
    projects and media center projects. Something that's very neat about Raspberry
    Pi is that you can learn more about building computers, and you can try making
    computers for different uses. You can use Python and Raspberry Pi to write code
    that controls light switches, door buzzers, and even household appliances! You
    can visit the official Raspberry Pi website to learn more about its hardware and
    its Linux-based operating system.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Visit [https://www.raspberrypi.org/](https://www.raspberrypi.org/) and read
    *Learning Raspberry Pi* by Samarth Shah (*Packt Publishing*, 2015) and *Raspberry
    Pi Cookbook for Python Programmers* by Tim Cox (*Packt Publishing*, April 2014)
    for more details about Raspberry Pi.
  prefs: []
  type: TYPE_NORMAL
- en: '![Raspberry Pi](img/B04681_10_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Coding challenges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Aside from all of the neat things that you can do with Python code, you can
    practice coding Python by finding coding challenges and completing them alone
    or with friends. These challenges range from being short to long, easy to difficult,
    and are a great way to keep your skills sharp between projects. The coding challenges
    usually aim at one specific coding skill each, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Printing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Iterating over loops
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating variables, strings, and integers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`if`/`elif`/`else`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nested `if`/`elif`/`else`
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nested logic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recursing
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you don''t feel totally comfortable with these terms, look them up, read
    more about them, and try some of the coding challenges to strengthen your skills.
    Here are some websites that have coding challenges in Python:'
  prefs: []
  type: TYPE_NORMAL
- en: '[http://codingbat.com/python](http://codingbat.com/python)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://www.pythonchallenge.com/](http://www.pythonchallenge.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://usingpython.com/python-programming-challenges/](http://usingpython.com/python-programming-challenges/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://wiki.python.org/moin/ProblemSets](https://wiki.python.org/moin/ProblemSets)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.hackerrank.com/login](https://www.hackerrank.com/login)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can find hundreds of practice problems in these links!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Hopefully, this book has provided you a solid introduction to basic Python concepts.
    By no means are you an expert as Python is a powerful language that can do a lot
    more than can be presented in one book. However, if you worked through each of
    the games, you will have a solid Python foundation on which to build your next
    steps.
  prefs: []
  type: TYPE_NORMAL
- en: One way to keep using Python is to continue to work on challenges and games
    while digging into code architecture, classes and objects, and more advanced game
    coding using objects, custom images, sounds, and other effects. Python is not
    used in traditional game systems, but game design concepts work well in any object-oriented
    language. Once you are comfortable in Python, you can move toward more common
    game design languages, such as C++, with a lot more ease.
  prefs: []
  type: TYPE_NORMAL
- en: Another way to use Python is to learn more about data applications and how to
    use Python to work with different kinds of data and mathematics. This is a really
    great way to get further into exploring Python and also create a portfolio of
    work to show upper schools or even colleges. The Internet has large datasets about
    a variety of topics, including population and weather, among other things.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, you may decide that you want to learn about web applications that are
    built using Python. If you choose to do so, you can look at places such as GitHub
    or Bitbucket where programmers keep their code and sometimes allow it to be available
    for free. Reading the code of other programmers is a fantastic way to learn new
    and interesting ways to use code. Also, finding and helping build free programs,
    also called open source, is a great way to help the community get better at programming.
    You can ask great questions and get answers to them, too.
  prefs: []
  type: TYPE_NORMAL
- en: All the best in your quest to write better games and better code. Keep learning!
  prefs: []
  type: TYPE_NORMAL
