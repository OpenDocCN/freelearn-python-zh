["```py\n>>> import requests\n>>> session = requests.Session()\n>>> response = requests.get(\"https://google.co.in\", cookies={\"new-cookie-identifier\": \"1234abcd\"})\n\n```", "```py\n>>> response.request.headers\nCaseInsensitiveDict({'Cookie': 'new-cookie-identifier=1234abcd', 'Accept-Encoding': 'gzip, deflate, compress', 'Accept': '*/*', 'User-Agent': 'python-requests/2.2.1 CPython/2.7.5+ Linux/3.13.0-43-generic'})\n>>> response.request.headers['Cookie']\n'new-cookie-identifier=1234abcd'\n\n```", "```py\n>>> session.params = {\"key1\": \"value\", \"key2\": \"value2\"}\n>>> session.auth = ('username', 'password')\n>>> session.headers.update({'foo': 'bar'})\n\n```", "```py\n>>> session.get('http://mysite.com/new/url', headers={'foo': 'new-bar'})\n\n```", "```py\n>>> response = requests.get('https://python.org')\n\n```", "```py\n>>> response.request.headers\nCaseInsensitiveDict({'Accept-Encoding': 'gzip, deflate, compress', 'Accept': '*/*', 'User-Agent': 'python-requests/2.2.1 CPython/2.7.5+ Linux/3.13.0-43-generic'})\n\n```", "```py\n>>> response.headers\nCaseInsensitiveDict({'content-length': '45950', 'via': '1.1 varnish', 'x-cache': 'HIT', 'accept-ranges': 'bytes', 'strict-transport-security': 'max-age=63072000; includeSubDomains', 'vary': 'Cookie', 'server': 'nginx', 'age': '557','content-type': 'text/html; charset=utf-8', 'public-key-pins': 'max-age=600; includeSubDomains; ..)\n\n```", "```py\n>>> response.status_code\n200\n>>> response.url\nu'https://www.python.org/'\n>>> response.elapsed\ndatetime.timedelta(0, 1, 904954)\n>>> response.reason\n'OK'\n\n```", "```py\n>>> from requests import Request, Session\n>>> header = {}\n>>> request = Request('get', 'some_url', headers=header)\n\n```", "```py\n>>> from requests import Request, Session\n>>> session = Session()\n>>> request1 = Request('GET', 'some_url', headers=header)\n\n```", "```py\n>>> prepare = session.prepare_request(request1)\n\n```", "```py\n>>> response = session.send(prepare, stream=True, verify=True)\n200\n\n```", "```py\nrequests.get('no ssl certificate site', verify=True)\n```", "```py\nrequests.exceptions.ConnectionError: ('Connection aborted.', error(111, 'Connection refused'))\n\n```", "```py\n>>> requests.get('https://python.org', verify=True)\n<Response [200]>\n\n```", "```py\n>>> requests.get(\"https://pypi.python.org/packages/source/F/Flask/Flask-0.10.1.tar.gz\", stream=True)\n\n```", "```py\nif int(request.headers['content_length']) < TOO_LONG:\ncontent = r.content\n```", "```py\niter_content(chunk_size=size in bytes, decode_unicode=False)\n```", "```py\niter_lines(chunk_size = size in bytes, decode_unicode=None, delimitter=None)\n```", "```py\nwith open('massive-body', 'rb') as file:\n    requests.post('http://example.com/some/stream/url',\n                  data=file)\n```", "```py\n>>> def generator():\n...     yield \"Hello \"\n...     yield \"World!\"\n...\n>>> requests.post('http://example.com/some/chunked/url/path',\n data=generator())\n\n```", "```py\nhooks = {hook_name: callback_function, â€¦ }\n```", "```py\n>>> def print_attributes(request, *args, **kwargs):\n...     print(request.url)\n...     print(request .status_code)\n...     print(request .headers)\n\n```", "```py\n>>> requests.get('https://www.python.org/',\n hooks=dict(response=print_attributes))\nhttps://www.python.org/\n200\nCaseInsensitiveDict({'content-type': 'text/html; ...})\n<Response [200]>\n\n```", "```py\n>>> import json\n>>> import requests\n>>> r = requests.get('http://httpbin.org/stream/4', stream=True)\n>>> for line in r.iter_lines():\n...     if line:\n...         print(json.loads(line) )\n\n```", "```py\n>>> re = requests.get('http://google.com')\n>>> re.headers['content-type']\n 'text/html; charset=ISO-8859-1'\n\n```", "```py\n>>> url = \"https://api.github.com/search/code?q=addClass+user:mozilla&page=1&per_page=4\"\n>>> response = requests.head(url=url)\n>>> response.headers['link']\n'<https://api.github.com/search/code?q=addClass+user%3Amozilla&page=2&per_page=4>; rel=\"next\", <https://api.github.com/search/code?q=addClass+user%3Amozilla&page=250&per_page=4>; rel=\"last\"\n\n```", "```py\n>>> session = requests.Session()\n>>> adapter = requests.adapters.HTTPAdapter(max_retries=6)\n>>> session.mount(\"http://google.co.in\", adapter)\n\n```"]