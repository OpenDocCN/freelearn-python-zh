["```py\nclass Todo(grok.Application, grok.Model):\ntodolists = []\n\n```", "```py\nclass Todo(grok.Application, grok.Model):\ndef __init__(self):\nsuper(Todo, self).__init__() \nself.title = 'To-Do list manager'\nself.todolists = []\n\n```", "```py\n<h1 tal:content=\"context/title\">To-Do list manager</h1>\n\n```", "```py\nclass SetTitle(grok.View):\ndef update(self,new_title):\nself.context.title = new_title\ndef render(self):\nreturn self.context.title\n\n```", "```py\nself.context.p_changed_ = True\n\n```", "```py\nitems = self.context.todolists[list_index]['items']\n\n```", "```py\nclass Todo(grok.Application, grok.Model):\ndef __init__(self):\nsuper(Todo, self).__init__()\nself.title = 'To-Do list manager'\nself.todolists = []\ndef createList(self, title, description):\nself.todolists.append({'title':title, 'description':description, 'items':[]})\nself._p_changed = True\ndef getListItems(self, index):\nitems = self.todolists[index]['items']\nreturn items\n\n```", "```py\nclass Todo(grok.Application, grok.Container):\ndef __init__(self):\nsuper(Todo, self).__init__()\nself.next_id = 0\nself.title = 'To-Do list manager'\n\n```", "```py\nclass TodoList(grok.Container):\ndef __init__(self,list_title,list_description):\nsuper(TodoList, self).__init__()\nself.next_id = 0\nself.title = list_title\nself.description = list_description\n\n```", "```py\nclass TodoItem(grok.Model):\ndef __init__(self,item_description):\nsuper(TodoItem, self).__init__()\nself.description = item_description\nself.checked = False\n\n```", "```py\ndef addList(self,title,description):\nid = str(self.next_id)\nself.next_id = self.next_id+1\nself[id] = TodoList(title,description)\ndef deleteList(self,list):\ndel self[list]\n\n```", "```py\ndef addItem(self,description):\nid = str(self.next_id)\nself.next_id = self.next_id+1\nself[id] = TodoItem(description)\ndef deleteItem(self,item):\ndel self[item]\ndef updateItems(self, items):\nfor name,item in self.items():\nif name in items:\nself[item].checked = True\nelse:\nself[item].checked = False\n\n```", "```py\ndef toggleCheck(self):\nself.checked = not self.checked\n\n```", "```py\nclass Index(grok.View):\ngrok.context(Todo)\n\n```", "```py\nclass TodoIndex(grok.View):\ngrok.context(Todo)\ngrok.name('index')\n\n```", "```py\nclass TodoAddList(grok.View):\ngrok.context(Todo)\ngrok.name('addlist')\ndef update(self,title,description):\nself.context.addList(title,description)\ndef render(self):\nself.redirect(self.url('index'))\n\n```", "```py\nclass TodoDeleteList(grok.View):\ngrok.context(Todo)\ngrok.name('deletelist')\ndef update(self,list):\nself.context.deleteList(list)\ndef render(self):\nself.redirect(self.url('index'))\n\n```", "```py\nclass TodoSetTitle(grok.View):\ngrok.context(Todo)\ngrok.name('settitle')\ndef update(self,title):\nself.context.title = title\ndef render(self):\nreturn self.context.title\n\n```", "```py\nclass TodoListAddItem(grok.View):\ngrok.context(TodoList)\ngrok.name('additem')\ndef update(self,description):\nself.context.addItem(description)\ndef render(self):\nself.redirect(self.url(self.context.__parent__,'index'))\nclass TodoListDeleteItem(grok.View):\ngrok.context(TodoList)\ngrok.name('deleteitem')\ndef update(self,item):\nself.context.deleteItem(item)\ndef render(self):\nself.redirect(self.url(self.context.__parent__,'index'))\nclass TodoListUpdateItems(grok.View):\ngrok.context(TodoList)\ngrok.name('updateitems')\ndef update(self,items):\nself.context.updateItems(items)\ndef render(self):\nself.redirect(self.url(self.context.__parent__,'index'))\n\n```", "```py\nclass TodoItemCheck(grok.View):\ngrok.context(TodoItem)\ngrok.name('check')\ndef update(self):\nself.div_id = 'div_item_%s_%s' % (self.context.__parent__.__name__,self. context.__name__)\nself.context.toggleCheck()\ndef render(self):\nreturn self.div_id\n\n```", "```py\n<tal:block repeat=\"todolist context/values\">\n<div class=\"todolist\">\n\n```", "```py\n<form method=\"post\" tal:attributes=\"action python:view.url(todolist,'updateitems')\">\n<fieldset>\n\n```", "```py\n<legend><span tal:content=\"todolist/title\">title</span>\n<a tal:define=\"url python:view.url('deletelist')\" tal:attributes=\"href string:${url}?list=${todolist/__name__}\">\n<img border=\"0\" tal:attributes=\"src static/bin_closed.png\" />\n</a>\n</legend>\n\n```", "```py\n<p tal:content=\"todolist/description\">description</p>\n<div tal:repeat=\"item todolist/values\" tal:attributes=\"class python:item.checked and 'done' or 'pending'; id string:div_item_${todolist/__name__} _${item/__name__}\">\n<input type=\"checkbox\" name=\"items:list\" tal:define=\"check_url python:view.url(item,'check');\" tal:attributes=\"checked item/checked; onclick string:getRequest('{check_url}', processReqChange)\"/>\n<span tal:content=\"item/description\"></span>\n<a tal:define=\"url python:view.url(todolist,'deleteitem')\" tal:attributes=\"href string:${url}?item=${item/__name__}\">\n<img border=\"0\" tal:attributes=\"src static/bin_closed.png\" />\n</a>\n<br/>\n</div>\n<input type=\"submit\" class=\"update_button\" name=\"update_list\" value=\"Update list\"/>\n</fieldset>\n</form>\n\n```", "```py\n<form method=\"post\" tal:attributes=\"action python:view.url(todolist,'add item')\">\n<label for=\"description\"tal:attributes=\"onclick string:toggleAddControls('add_controls_${repeat/todolist/index}');; this.form.description.focus();\">New item</label><br/>\n<div class=\"controls\" tal:attributes=\"id string:add_controls_${repeat/todolist/index}\">\n<input type=\"text\" size=\"60\" name=\"description\">\n<br/>\n<input type=\"submit\" class=\"new_button\" name=\"new_item\" value=\"Add to list\"/>\n</div>\n</form>\n</tal:block>\n\n```"]