["```py\n(virtual_env) PS > python manage.py loaddata chapter_3\n```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nROOT_URLCONF = 'becoming_a_django_entdev.urls'\n```", "```py\n# /becoming_a_django_entdev/urls.py\n```", "```py\nfrom django.conf import settings\n```", "```py\nfrom django.conf.urls.static import static\n```", "```py\nurlpatterns = [...] + static(\n```", "```py\n    settings.STATIC_URL, \n```", "```py\n    document_root = settings.STATIC_ROOT\n```", "```py\n)\n```", "```py\n# /becoming_a_django_entdev/urls.py\n```", "```py\n...\n```", "```py\nurlpatterns = [...]\n```", "```py\nif settings.DEBUG:\n```", "```py\n    urlpatterns += static(\n```", "```py\n        settings.STATIC_URL, \n```", "```py\n        document_root = settings.STATIC_ROOT\n```", "```py\n    )\n```", "```py\n    # /becoming_a_django_entdev/urls.py\n    ...\n    from django.conf import settings\n    from django.conf.urls.static import static\n    urlpatterns = [...] + static(\n        settings.STATIC_URL,\n        document_root = settings.STATIC_ROOT\n    ) + static(\n        settings.MEDIA_URL,\n        document_root = settings.MEDIA_ROOT\n    )\n    ```", "```py\n    (virtual_env) PS > mkdir media\n    ```", "```py\n    # /becoming_a_django_entdev/urls.py\n    ...\n    from django.urls \n    import path\n    from django.views.generic \n    import TemplateView\n    urlpatterns = [\n       path(\n         '', \n         TemplateView.as_view(\n           template_name = 'chapter_4/index.html'\n         )\n       ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/urls.py\n    ...\n    urlpatterns = [   \n        path(\n    '', \n            TemplateView.as_view(\n                template_name = 'chapter_4/index.html'\n            ), \n            kwargs = {\n                'sub_title': 'I am the sub title.'\n            }\n        ), \n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/index.html\n    {% load static %}\n    <html>\n        <head><title></title></head>\n        <body style=\"text-align:center\">\n            <p>Home Page</p>\n            <img src=\"img/{% static 'chapter_4/home_page.jpg' %}\" role=\"img\" alt=\"Home Page Image\" width=\"400\" style=\"margin: 0 auto\" />\n            {% if sub_title %}\n            <p>{{ sub_title }}</p>\n            {% endif %}\n        </body>\n    </html>\n    ```", "```py\n    (virtual_env) PS > mkdir becoming_a_django_entdev/chapter_4/static/chapter_4\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    from django.urls \n    import path\n    from django.views.generic \n    import TemplateView\n    urlpatterns = [\n        path(\n           'chapter-4/', \n           TemplateView.as_view(\n                template_name='chapter_4/chapter_4.html'\n           )\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/urls.py\n    ...\n    from django.urls \n    import include, path\n    urlpatterns = [\n        path(\n            '', \n            include(\n               'becoming_a_django_entdev.chapter_4.urls'\n            )\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from django.urls \n    import include, path\n    from django.views.generic \n    import (\n        TemplateView,\n        RedirectView\n    )\n    urlpatterns = [\n        ...,\n        path(\n            'my_path/my_unwanted_url/', \n            RedirectView.as_view(\n                url = 'http://localhost:8000/my_wanted_url/'\n            )\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    urlpatterns = [\n        ...,\n        path(\n            'my_path/my_unwanted_url/', \n            RedirectView.as_view(\n                url = 'http://localhost:8000/my_wanted_url/', \n                permanent = True\n            )\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from django.urls \n    import include, path\n    from django.views.generic \n    import ..., TemplateView\n    urlpatterns = [\n        ...,\n        path(\n            'my_path/<path:my_pattern>/', \n            TemplateView.as_view(\n                template_name = 'chapter_4/index.html'\n            )\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from django.urls \n    import include, path\n    from django.views.generic \n    import ..., TemplateView\n    urlpatterns = [\n        ...,\n        path(\n            'my_year_path/<int:my_year>/', \n            TemplateView.as_view(\n                template_name = 'chapter_4/index.html'\n            )\n        )\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/converters.py\n    class YearConverter:\n        regex = '[0-9]{4}'\n        def to_python(self, value):\n            return int(value)\n        def to_url(self, value):\n            return '%04d' % value\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from django.urls \n    import path, register_converter\n    from .converters \n    import YearConverter\n    register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        path(\n            'my_year_path/<year:year>/', \n            TemplateView.as_view(\n                template_name = 'chapter_4/index.html'\n            )\n        ),\n    ]\n    ```", "```py\n# /becoming_a_django_entdev/chapter_4/urls.py\n```", "```py\n...\n```", "```py\nfrom django.urls \n```", "```py\nimport path, re_path\n```", "```py\n...\n```", "```py\nurlpatterns = [\n```", "```py\n    ...,\n```", "```py\n    re_path(\n```", "```py\n        'my_year_path/(?P<year>[0-9]{4})/$', \n```", "```py\n        TemplateView.as_view(\n```", "```py\n            template_name = 'chapter_4/index.html'\n```", "```py\n        )\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from django.urls \n    import ..., register_converter\n    from .converters \n    import YearConverter\n    from .views \n    import practice_view\n    register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        path(\n            'my_year_path/<year:year>/',\n            practice_view\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    from django.template.response \n    import (\n        TemplateResponse\n    )\n    def practice_view(request, year):\n        return TemplateResponse(\n            request,\n            'chapter_4/my_practice_page.html',\n            {\n               'year': year\n            }\n        )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from django.urls \n    import ..., register_converter\n    from .converters \n    import YearConverter\n    from .views \n    import ..., practice_year_view\n    register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        path(\n            'my_year_path/<year:year>/', \n            practice_year_view\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    from django.template.response \n    import (\n        TemplateResponse\n    )\n    ...\n    def practice_year_view(request, year):\n        print(type(year))\n        print(year)\n        return TemplateResponse(\n            request, \n            'chapter_4/my_year.html', \n            {'year': year}\n        )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from .views \n    import ..., practice_year_view\n    #register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        re_path(\n            'my_year_path/(?P<year>[0-9]{4})/$', \n            practice_year_view\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from django.urls \n    import ..., register_converter\n    from .converters \n    import YearConverter\n    from .views \n    import ..., practice_year_view \n    register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        path(\n            'my_year_path/<year:year>/',\n            practice_year_view\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    from django.http \n    import Http404\n    from django.template.response \n    import (\n        TemplateResponse\n    )\n    def practice_year_view(request, year):\n        if year >= 1900:\n            return TemplateResponse(\n                request, \n                'chapter_4/my_year.html', \n                {'year': year}\n            )\n        else:\n            raise Http404(f'Year Not Found: {year}')\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ...\n    from .views \n    import ..., vehicle_view \n    urlpatterns = [\n        ...,\n        path(\n            'vehicle/<int:id>/',\n            vehicle_view,\n            name = 'vehicle-detail'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.http \n    import Http404\n    from ..chapter_3.models \n    import Vehicle\n    def vehicle_view(request, id):\n        try:\n            vehicle = Vehicle.objects.get(id=id)\n        except Vehicle.DoesNotExist:\n            raise Http404(f'Vehicle ID Not Found: {id}')\n        return TemplateResponse(\n            request,\n            'chapter_4/my_vehicle.html',\n            {'vehicle': vehicle}\n        )\n    ```", "```py\n# /becoming_a_django_entdev/chapter_4/urls.py \n```", "```py\n...\n```", "```py\nfrom django.urls \n```", "```py\nimport ..., register_converter\n```", "```py\nfrom .converters \n```", "```py\nimport YearConverter\n```", "```py\nfrom .views \n```", "```py\nimport ..., practice_year_view \n```", "```py\nregister_converter(YearConverter, 'year')\n```", "```py\nurlpatterns = [\n```", "```py\n    ...,\n```", "```py\n    path(\n```", "```py\n        'my_year_path/<year:year>/', \n```", "```py\n        practice_year_view,\n```", "```py\n        name = 'year_url'\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.urls import reverse\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    def practice_year_view(request, year):\n        ...\n        print(reverse('year_url', args=(2023,)))\n        print(reverse('year_url', args=(2024,)))\n        ...( Repeat as desired )...\n    ```", "```py\n# Dummy Code\n```", "```py\n{% url 'year_url' 2023 5 25 %}\n```", "```py\n{% url 'year_url' year=2023 month=5 day=25 %}\n```", "```py\n# Dummy Code\n```", "```py\n{% url 'year_url' year month day %}\n```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/my_year.html\n    ...\n    <html>\n        ...\n        <body style=\"text-align:center\">\n            ...\n            <br /> <br />\n            <a href=\"{% url 'year_url' 2023 %}\">2023</a>\n            <a href=\"{% url 'year_url' 2024 %}\">2024</a>\n            ...( Repeat as desired )...\n        </body>\n    </html>\n    ```", "```py\n# /becoming_a_django_entdev/chapter_4/urls.py\n```", "```py\n...\n```", "```py\nfrom django.urls import (\n```", "```py\n    ..., \n```", "```py\n    re_path, \n```", "```py\n    register_converter\n```", "```py\n)\n```", "```py\nfrom .converters \n```", "```py\nimport YearConverter\n```", "```py\nfrom .views \n```", "```py\nimport ..., practice_view\n```", "```py\nregister_converter(YearConverter, 'year')\n```", "```py\nurlpatterns = [\n```", "```py\n    ...,\n```", "```py\n    re_path(\n```", "```py\n        r'^my_year_path/(?P<year>[0-9]+)/?$', \n```", "```py\n        practice_view\n```", "```py\n    ),\n```", "```py\n]\n```", "```py\ndjango.core.exceptions.ImproperlyConfigured: \"^my_year_path/(?P<year:year>[0-9]+)/?$\" is not a valid regular expression: bad character in group name 'year:year' at position 18\n```", "```py\n    # /becoming_a_django_entdev/context_processors.py\n    def global_context(request):\n        return {\n            'base_url': request.build_absolute_uri(\n                '/'\n            )[:-1].strip('/'),\n        }\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    TEMPLATES = [\n    {\n            ...\n            'OPTIONS': \n            {\n                'context_processors': [\n                    ...,\n    'becoming_a_django_entdev.context_processors.global_context',\n                ],\n            },\n    },]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from django.urls \n    import ..., register_converter\n    from .converters \n    import YearConverter\n    from .views \n    import ..., practice_year_view \n    register_converter(YearConverter, 'year')\n    urlpatterns = [\n        ...,\n        path(\n    'my_year_path/<year:year>/', \n            practice_year_view,\n            name = 'year_url'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/my_year.html\n    ...\n    <html>\n        ...\n        <body style=\"text-align:center\">\n            ...\n            <br /> <br />\n            <a href=\"{{ base_url }}{% url 'year_url' 2023 %}\">2023</a>\n            <a href=\"{{ base_url }}{% url 'year_url' 2024 %}\">2024</a>          \n            ...( Repeat as desired )...\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.urls \n    import reverse\n    def practice_year_view(request, year):\n        ...\n        print(\n            request.build_absolute_uri(\n                reverse('year_url', args=(2023,))\n            )\n        )\n        print(\n            request.build_absolute_uri(\n                reverse('year_url', args=(2024,))\n            )\n        )\n        ...( Repeat as desired )...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_3/models.py \n    class Vehicle(models.Model):\n        ...\n        def get_url(self):\n            from django.urls import reverse\n            return reverse(\n                'vehicle-detail', \n                kwargs = {'id': self.pk}\n            )\n        def get_absolute_url(self, request):\n            from django.urls import reverse\n            base_url = request.build_absolute_uri(\n                '/'\n            )[:-1].strip('/')\n            return base_url + reverse(\n                'vehicle-detail', \n                kwargs = {'id': self.pk}\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.http \n    import Http404\n    from ..chapter_3.models \n    import Vehicle\n    ...\n    def vehicle_view(request, id):\n        try:\n            vehicle = Vehicle.objects.get(id=id)\n        except Vehicle.DoesNotExist:\n            raise Http404(f'Vehicle ID Not Found: {id}')\n        else:\n            print(vehicle.get_url())\n            print(vehicle.get_absolute_url(request))\n        ...\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from .views \n    import ..., VehicleView\n    urlpatterns = [\n        ...,\n        path(\n            'vehicle/<int:id>/', \n            VehicleView.as_view(),\n            name = 'vehicle-detail'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.http \n    import Http404\n    from django.template.response \n    import (\n        TemplateResponse\n    )\n    from django.views.generic \n    import View\n    from ..chapter_3.models \n    import Vehicle\n    ...\n    class VehicleView(View):\n        template_name = 'chapter_4/my_vehicle_class_1.html'\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    class VehicleView(View):\n        ...\n        def get(self, request, id, *args, **kwargs):\n            try:\n                vehicle = Vehicle.objects.get(id=id)\n            except Vehicle.DoesNotExist:\n                raise Http404(\n                    f'Vehicle ID Not Found: {id}'\n                )\n            return TemplateResponse(\n                request,\n                self.template_name,\n                {'vehicle': vehicle}\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.http \n    import ..., HttpResponseRedirect\n    ...\n    class VehicleView(View):\n        ...\n        def post(self, request, *args, **kwargs):\n            return HttpResponseRedirect(\n                '/success/'\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from .views \n    import ..., VehicleView\n    urlpatterns = [\n        ...,\n        path(\n            'vehicle/<int:id>/', \n            VehicleView.as_view(\n                template_name = 'chapter_4/my_vehicle_class_2.html'\n            ),\n            name = 'vehicle-detail'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from .views \n    import ..., VehicleView2\n    urlpatterns = [\n        ...,\n        path(\n            'vehicle/<int:id>/', \n            VehicleView2.as_view(), \n            name = 'vehicle-detail'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    class VehicleView2(VehicleView):\n        template_name = 'chapter_4/my_vehicle_class_2.html'\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py\n    ...\n    from .views \n    import ..., TestPageView\n    urlpatterns = [\n        ...,\n        path(\n            'test_page_1/', \n            TestPageView.as_view(), \n            name = 'test-page'\n        ),\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/views.py\n    ...\n    from django.template.response \n    import (\n        TemplateResponse\n    )\n    from django.views.generic \n    import View\n    ...\n    class TestPageView(View):\n        template_name = 'chapter_4/pages/test_page_1.html'\n        def get(self, request, *args, **kwargs):\n            return TemplateResponse(\n                request, \n                self.template_name, \n                {\n                    'title': 'My Test Page 1',\n                    'page_id': 'test-id-1',\n                    'page_class': 'test-page-1',\n                    'h1_tag': 'This is Test Page 1'\n                }\n            )\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/pages/test_page_1.html\n    {% extends 'chapter_4/base/base_template_1.html' %}\n    {% load static %}\n    {% block page_title %}{{ title }}{% endblock %}\n    {% block head_stylesheets %}{% endblock %}\n    {% block js_scripts %}{% endblock %}\n    {% block page_id %}{{ page_id }}{% endblock %}\n    {% block page_class %}{{ block.super }} {{ page_class }}{% endblock %}\n    {% block body_content %}\n        {% if h1_tag %}\n            <h1>{{ h1_tag }}</h1>\n        {% else %}\n            <h1>Title Not Found</h1>\n        {% endif %}\n    {% endblock %}\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/base/base_template_1.html\n    {% load static %}\n    <!DOCTYPE html>\n    <html lang=\"en\" xmlns=\"http://www.w3.org/1999/xhtml\">\n        <head>\n            <meta charset=\"utf-8\" />\n            <title>{% block page_title %}My Page Title{% endblock %}</title>\n            <link rel=\"stylesheet\" href=\"{{ base_url }}{% static 'chapter_8/css/site.css' %}\">\n            {% block head_stylesheets %}{% endblock %}\n            <script defer type=\"text/javascript\" src=\"img/site-js.js' %}\"></script>\n        </head>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/base/base_template_1.html\n    ...\n        </head>\n        <body id=\"{% block page_id %}{% endblock %}\" class=\"{% block page_class %}base-template-class{% endblock %}\" style=\"text-align: center;\">\n            {% block header %}\n                {% include 'chapter_4/headers/header_1.html' %}\n            {% endblock %}\n            {% block site_container %}\n                <div class=\"site-container\">\n                    <div class=\"body-content\">\n                        {% block body_content %}\n                        {% endblock %}\n                    </div>\n                    {% block footer %}\n                        {% include 'chapter_4/footers/footer_1.html' with message='Footer of Document' %}\n                    {% endblock %}\n                </div>\n            {% endblock %}\n            {% block js_scripts %}{% endblock %}\n        </body>\n    </html>\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templatetags/chapter_4.py\n    from django.template \n    import Library\n    register = Library()\n    @register.filter(name = 'vehicle_make')\n    def vehicle_make(value):\n        from ...chapter_3.models import MAKE_CHOICES\n        for i, choice in enumerate(MAKE_CHOICES):\n            if i == value:\n                try:\n                    return choice[1]\n                except ValueError:\n                    pass\n        return ''\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/urls.py \n    ... \n    from .views import ..., vehicle_view \n    urlpatterns = [ \n        ..., \n        path( \n            'vehicle/<int:id>/', \n            vehicle_view, \n            name = 'vehicle-detail' \n        ), \n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_4/templates/chapter_4/my_vehicle.html\n    {% load static chapter_4 %}\n    ...\n            {% if vehicle %}\n                ...\n                <p>{{ vehicle.make }}</p>\n                <p>{{ vehicle.make|vehicle_make }}</p>\n                ...\n            {% endif %}\n    ...\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DEBUG = False\n    ```", "```py\n    (virtual_env) PS > python manage.py collectstatic\n    ```"]