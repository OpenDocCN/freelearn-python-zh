- en: Some Final Words from the Author
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I hope you thoroughly enjoyed reading this book. I made every possible effort
    to ensure it is beneficial and comprehensible, even for people who may have no
    prior experience in programming.
  prefs: []
  type: TYPE_NORMAL
- en: If you found this book valuable, please consider visiting the web store where
    you purchased it, as well as [goodreads.com](https://www.goodreads.com), to show
    your appreciation by writing a positive review and awarding as many stars as you
    think appropriate. By doing so, you will motivate me to keep writing and, of course,
    you'll be assisting other readers in discovering my work.
  prefs: []
  type: TYPE_NORMAL
- en: 'And always remember: Learning is a lifelong, continuous process that begins
    at birth and extends throughout your lifetime!'
  prefs: []
  type: TYPE_NORMAL
- en: Footnotes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**[1]** The word "algorithm" derives from the word "algorism" and the Greek
    word "arithmos". The word "algorism" comes from the Latinization of the name of
    Al–Khwārizmī^([2]) whereas the Greek word “arithmos” means “number”.'
  prefs: []
  type: TYPE_NORMAL
- en: '**[2]** Muḥammad ibn Al–Khwārizmī (780‐850) was a Persian mathematician, astronomer,
    and geographer. He is considered one of the fathers of algebra.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter04.html#Link_To_Endnote_1)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[3]** Donald Ervin Knuth, (1938- ), is a prominent American computer scientist
    and mathematician, renowned as the “father of the analysis of algorithms”. He
    authored the influential multi-volume work, The Art of Computer Programming, and
    made groundbreaking contributions to computational complexity analysis and literate
    programming.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter04.html#Link_To_Endnote_3)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[4]** Corrado Böhm (1923‐2017) was a computer scientist known especially
    for his contribution to the theory of structured programming, and for the implementation
    of functional programming languages.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter04.html#Link_To_Endnote_4)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[5]** Giuseppe Jacopini (1936‐2001) was a computer scientist. His most influential
    contribution is the theorem about structured programming, published along with
    Corrado Böhm in 1966, under the title *Flow Diagrams, Turing Machines, and Languages
    with Only Two Formation Rules*.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter04.html#Link_To_Endnote_5)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[6]** Grace Murray Hopper (1906‐1992) was an American computer scientist
    and US Navy admiral. She was one of the first programmers of the Harvard Mark
    I computer, and developed the first compiler for a computer programming language
    known as A–0 and later a second one, known as B–0 or FLOW-MATIC.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter04.html#Link_To_Endnote_6)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[7]** George Boole (1815‐1864) was an English mathematician, philosopher,
    and logician. He is best known as the architect of what is now called Boolean
    logic (Boolean algebra), the basis of the modern digital computer.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter05.html#Link_To_Endnote_7)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[8]** Daniel Gabriel Fahrenheit (1686‐1736) was a German physicist, engineer,
    and glass blower who is best known for inventing both the alcohol and the mercury
    thermometers, and for developing the temperature scale now named after him.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter10.html#Link_To_Endnote_8)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[9]** William Thomson, 1st Baron Kelvin (1824‐1907), was an Irish-born British
    mathematical physicist and engineer. He is widely known for developing the basis
    of absolute zero (the Kelvin temperature scale), and for this reason a unit of
    temperature measure is named after him. He discovered the Thomson effect in thermoelectricity
    and helped develop the second law of thermodynamics.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter10.html#Link_To_Endnote_9)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[10]** Anders Celsius (1701‐1744) was a Swedish astronomer, physicist, and
    mathematician. He founded the Uppsala Astronomical Observatory in Sweden and proposed
    the Celsius temperature scale, which takes his name.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter10.html#Link_To_Endnote_10)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[11]** Heron of Alexandria (c. 10‐c. 70 AD) was an ancient Greek mathematician,
    physicist, astronomer, and engineer. He is considered the greatest experimenter
    of ancient times. He described the first recorded steam turbine engine, called
    an “aeolipile” (sometimes called a "Hero engine"). Heron also described a method
    of iteratively calculating the square root of a positive number. Today, though,
    he is known best for the proof of “Heron''s Formula” which finds the area of a
    triangle from its side lengths.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter11.html#Link_To_Endnote_11)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[12]** Pythagoras of Samos (c. 571‐c. 497 BC) was a famous Greek mathematician,
    philosopher, and astronomer. He is best known for the proof of the important Pythagorean
    theorem. He was an influence for Plato. His theories are still used in mathematics
    today.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter11.html#Link_To_Endnote_12)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[13]** William Shakespeare (1564‐1616) was an English poet, playwright, and
    actor. He is often referred to as England''s national poet. He wrote about 40
    plays and several long narrative poems. His works are counted among the best representations
    of world literature. His plays have been translated into every major living language
    and are still performed today.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter15.html#Link_To_Endnote_13)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[14]** A quantity that is either zero or positive.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter17.html#Link_To_Endnote_14)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[15]** Francis Beaufort (1774‐1857) was an Irish hydrographer and officer
    in Britain''s Royal Navy. He is the inventor of the Beaufort wind force scale.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter18.html#Link_To_Endnote_15)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[16]** A quantity that is either zero or negative.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter19.html#Link_To_Endnote_16)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[17]** The value of −459.67° (on the Fahrenheit scale) is the lowest temperature
    possible and it is called *absolute zero*. Absolute zero corresponds to −273.15
    °C on the Celsius temperature scale and to 0 K on the Kelvin temperature scale.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_Endnote_17)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[18]** A quantity that is either zero or negative.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter24.html#Link_To_Endnote_18)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[19]** Madhava of Sangamagrama (c. 1340‐c. 1425), was an Indian mathematician
    and astronomer from the town of Sangamagrama (present day Irinjalakuda) of India.
    He founded the Kerala School of Astronomy and Mathematics and was the first to
    use infinite series approximations for various trigonometric functions. He is
    often referred to as the “father of mathematical analysis”.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_Endnote_19)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[20]** Gottfried Wilhelm von Leibniz (1646‐1716) was a German mathematician
    and philosopher. He made important contributions to the fields of metaphysics,
    logic, and philosophy, as well as mathematics, physics, and history. In one of
    his works, *On the Art of Combination (Dissertatio de Arte Combinatoria*), published
    in 1666, he formulated a model that is considered the theoretical ancestor of
    modern computers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_Endnote_20)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[21]** Leonardo Pisano Bigollo (c. 1170‐c. 1250), also known as Fibonacci,
    was an Italian mathematician. In his book *Liber Abaci* (published in 1202), Fibonacci
    used a special sequence of numbers to try to determine the growth of a rabbit
    population. Today, that sequence of numbers is known as the Fibonacci sequence.
    He was also one of the first people to introduce the Arabic numeral system to
    Europe; this is the numeral system we use today, based on ten digits with a decimal
    point and a symbol for zero. Before then, the Roman numeral system was being used,
    making numerical calculations difficult.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_Endnote_21)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[22]** Brook Taylor (1685‐1731) was an English mathematician who is best
    known for the Taylor series and his contributions to the theory of finite differences.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_Endnote_22)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[23]** Samuel Finley Breese Morse (1791‐1872) was an American painter and
    inventor. Morse contributed to the invention of a single-wire telegraph system
    and he was a co-developer of the Morse code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter30.html#Link_To_Endnote_23)'
  prefs: []
  type: TYPE_NORMAL
- en: '**[24]** In Greek mythology, the Titans and Titanesses were the children of
    Uranus and Gaea. They were giant gods who ruled during the legendary Golden Age
    (immediately preceding the Olympian gods). The male Titans were Coeus, Oceanus,
    Crius, Cronus, Hyperion, and Iapetus whereas the female Titanesses were Tethys,
    Mnemosyne, Themis, Theia, Rhea, and Phoebe. In a battle, known as the Titanomachy,
    fought to decide which generation of gods would rule the Universe, the Olympians
    won over the Titans!'
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter38.html#Link_To_Endnote_24)'
  prefs: []
  type: TYPE_NORMAL
- en: More...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is the nested decision control structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter19.html#Link_To_More_19_1_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is a nested multiple-alternative decision structure.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter19.html#Link_To_More_19_1_2)'
  prefs: []
  type: TYPE_NORMAL
- en: This is a nested single-alternative decision structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter20.html#Link_To_More_20_2_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is a nested dual-alternative decision structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter20.html#Link_To_More_20_2_2_2)'
  prefs: []
  type: TYPE_NORMAL
- en: This statement is not affected by the previous decision control structure and
    does not affect the next one.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter21.html#Link_To_More_21_5_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: The previous and next decision control structures are affected by this statement
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter21.html#Link_To_More_21_5_2_2)'
  prefs: []
  type: TYPE_NORMAL
- en: Code Fragment 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_1_6_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Code Fragment 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: The destination is inside the country. Check the weight and calculate the corresponding
    shipping cost.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_3_1)'
  prefs: []
  type: TYPE_NORMAL
- en: The destination is outside the country. Check the weight and calculate the corresponding
    shipping cost.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_3_2)'
  prefs: []
  type: TYPE_NORMAL
- en: -5 < x ≤ 0
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_4_a1)'
  prefs: []
  type: TYPE_NORMAL
- en: 0 < x ≤ 6
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_4_a2)'
  prefs: []
  type: TYPE_NORMAL
- en: 6 < x ≤ 20
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_4_a3)'
  prefs: []
  type: TYPE_NORMAL
- en: All other values of x
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_4_4_a4)'
  prefs: []
  type: TYPE_NORMAL
- en: Code Fragment 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter22.html#Link_To_More_22_5_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This pair of statements is executed 4 times forcing the user to enter 4 numbers.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter24.html#Link_To_More_24_1_5_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the part of the program that somehow repeats.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter24.html#Link_To_More_24_1_8_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This must be written 20 times
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter24.html#Link_To_More_24_1_9_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Nested loop
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter26.html#Link_To_More_26_1_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the dual-alternative decision structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the post-test loop structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_3_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is the dual-alternative decision structure
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_3_2)'
  prefs: []
  type: TYPE_NORMAL
- en: A statement or block of statements 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_4_1)'
  prefs: []
  type: TYPE_NORMAL
- en: A statement or block of statements 2
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_4_2)'
  prefs: []
  type: TYPE_NORMAL
- en: A statement or block of statements 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_4_3)'
  prefs: []
  type: TYPE_NORMAL
- en: A statement or block of statements 2
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_4_4)'
  prefs: []
  type: TYPE_NORMAL
- en: A statement or block of statements 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter27.html#Link_To_More_27_3_4_5)'
  prefs: []
  type: TYPE_NORMAL
- en: This code fragment calculates the denominator.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter28.html#Link_To_More_28_5_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Code Fragment 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter28.html#Link_To_More_28_7_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input stage without validation.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_1_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input validation without error messages.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_1_2)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input validation with one single error message.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_1_3)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input validation with a different error message for each type of input
    error.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_1_4)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input stage without validation
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_2_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input validation with one single error message
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_3_2_2)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input validation
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_4_1_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Code Fragment 1
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter29.html#Link_To_More_29_5_6_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input stage without validation.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter33a.html#Link_To_More_33_2_1_1)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input and validation
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter33a.html#Link_To_More_33_2_1_2)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input and validation
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter33a.html#Link_To_More_33_2_1_3)'
  prefs: []
  type: TYPE_NORMAL
- en: Data input and validation
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter33a.html#Link_To_More_33_2_1_4)'
  prefs: []
  type: TYPE_NORMAL
- en: This is a formal argument list
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter35.html#Link_To_More_35_5_1)'
  prefs: []
  type: TYPE_NORMAL
- en: This is an actual argument list
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter35.html#Link_To_More_35_5_2)'
  prefs: []
  type: TYPE_NORMAL
- en: This is an actual argument list
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter35.html#Link_To_More_35_5_3)'
  prefs: []
  type: TYPE_NORMAL
- en: By default, lists in Python are passed by reference.
  prefs: []
  type: TYPE_NORMAL
- en: '[[RETURN]](chapter36.html#Link_To_More_36_4_1)'
  prefs: []
  type: TYPE_NORMAL
