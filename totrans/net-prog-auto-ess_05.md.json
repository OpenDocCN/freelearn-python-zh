["```py\ndef router_connection(hostname, timeout):\n    \"\"\"Perform a connection to a router\n    :param string hostname:\n    :param int timeout:\n    :return: True | False\n    \"\"\"\n    print(\"Connecting to host\", hostname)\n    .\n    .\n    .\n    return True\n```", "```py\n// Asin returns the arcsine, in radians, of x.//\n// Special cases are:\n//\n//    Asin(±0) = ±0\n//    Asin(x) = NaN if x < -1 or x > 1\nfunc Asin(x float64) float64 {\n    if haveArchAsin {\n        return archAsin(x)\n    }\n    return asin(x)\n}\n```", "```py\nimport ipaddress\n\nnetwork = ipaddress.ip_network(\"10.8.8.0/30\")\nprint(list(network.hosts()))\n```", "```py\n[IPv4Address('10.8.8.1'), IPv4Address('10.8.8.2')]\n```", "```py\nimport ipaddress\n\nnetwork = ipaddress.ip_network(\"10.8.8.0/24\")\nsubnet_to_exclude = ipaddress.ip_network(\"10.8.8.64/26\")\nprint(list(network.address_exclude(subnet_to_exclude)))\n```", "```py\n[IPv4Network('10.8.8.128/25'), IPv4Network('10.8.8.0/26')]\n```", "```py\nimport (\n    \"fmt\"\n    \"net\"\n)\n\nfunc main() {\n    _, subnet, _ := net.ParseCIDR(\"10.8.8.0/29\")\n    ip := net.ParseIP(\"10.8.8.22\")\n    fmt.Println(subnet.Contains(ip))\n}\n```", "```py\nimport (\n    \"fmt\"\n    \"net/netip\"\n)\n\nfunc main() {\n    first_subnet := netip.MustParsePrefix(\"10.8.8.8/30\")\n    second_subnet := netip.MustParsePrefix(\"10.8.8.0/24\")\n\n    fmt.Println(second_subnet.Overlaps(first_subnet))\n}\n```", "```py\nif long_variable_name is not None and \\\n long_variable_name.field > 0 or long_variable_name.is_debug:\n z = 'hello '+'world'\nelse:\n world = 'world'\n a = 'hello {}'.format(world)\n f = rf'hello {world}'\n```", "```py\nif (\n    long_variable_name is not None\n    and long_variable_name.field > 0\n    or long_variable_name.is_debug\n):\n    z = \"hello \" + \"world\"\nelse:\n    world = \"world\"\n    a = \"hello {}\".format(world)\n    f = rf\"hello {world}\"\n```", "```py\nfrom central_lib import Path\nimport os\nfrom central_lib import Path3\nfrom central_lib import Path2\nimport sys\nfrom my_lib import lib15, lib1, lib2, lib3, lib4, lib5, lib6, lib7, lib8, lib9, lib10, lib11, lib12, lib13, lib14\nimport sys\n```", "```py\nimport os\nimport sys\nfrom my_lib import (lib1, lib2, lib3, lib4, lib5, lib6,\n                    lib7, lib8, lib9, lib10, lib11, lib12,\n                    lib13, lib14, lib15)\nfrom central_lib import Path, Path2, Path3\n```", "```py\nmyVariable := map[string]string{\"a key\": \"a value\", \"b key\": \"b value\", \"c key\": \"c value\", \"d key\": \"d value\", \"e key\": \"e value\"}\n```", "```py\nmyVariable := map[string]string{\n            \"a key\": \"a value\",\n            \"b key\": \"b value\",\n            \"c key\": \"c value\",\n            \"d key\": \"d value\",\n            \"e key\": \"e value\"\n}\n```"]