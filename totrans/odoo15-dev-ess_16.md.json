["```py\n$ sudo apt update\n$ sudo apt upgrade -y\n```", "```py\n$ sudo apt install postgresql -y\n$ sudo su -c \"createuser -s $USER\" postgres\n```", "```py\n$ sudo apt install git python3-dev python3-pip \\\npython3-wheel python3-venv -y\n$ sudo apt install build-essential libpq-dev libxslt-dev \\\nlibzip-dev libldap2-dev libsasl2-dev libssl-dev\n```", "```py\n$ wget \"https://github.com/wkhtmltopdf/wkhtmltopdf\\\n/releases\"\"/download/0.12.5/\\\nwkhtmltox_0.12.5-1.focal_amd64.deb\" \\\n-O /tmp/wkhtml.deb\n$ sudo dpkg -i /tmp/wkhtml.deb\n$ sudo apt-get -fy install  # Fix dependency errors\n```", "```py\n$ sudo adduser --home=/opt/odoo --disabled-password \\\n--gecos \"Odoo\" odoo\n```", "```py\n$ sudo su -c \"createuser odoo\" postgres\n$ createdb --owner=odoo odoo-prod\n```", "```py\n$ sudo su - odoo\n$ exit\n```", "```py\n$ sudo su - odoo\n$ git clone https://github.com/odoo/odoo.git \\\n/opt/odoo/odoo15 \\\n-b 15.0 --depth=1\n```", "```py\n$ git clone https://github.com/PacktPublishing/Odoo-15-Development-Essentials/opt/odoo/library\n```", "```py\n$ python3 -m venv /opt/odoo/env15\n$ source /opt/odoo/env15/bin/activate\n(env15) $ pip install -r /opt/odoo/odoo15/requirements.txt\n(env15) $ pip install -e /opt/odoo/odoo15\n```", "```py\n(env15) $ odoo --version\nOdoo Server 15.0\n(env15) $ /opt/odoo/odoo15/odoo-bin --version\nOdoo Server 15.0\n$ /opt/odoo/env15/bin/python3 /opt/odoo/odoo15/odoo-bin --version\nOdoo Server 15.0\n$ /opt/odoo/env15/bin/odoo --version\nOdoo Server 15.0\n```", "```py\n$ sudo su - odoo\n$ python3 -m venv /opt/odoo/env15\n```", "```py\n(env15) $ odoo -c /opt/odoo/odoo.conf --save --stop-after-init\n```", "```py\n(env15) $ odoo -c /opt/odoo/odoo.conf --save \\\n--stop-after-init \\\n-d odoo-prod --db-filter=\"^odoo-prod$\" \\\n--without-demo=all --proxy-mode\n```", "```py\n$ exit  # exit from the odoo user session\n$ sudo mkdir /etc/odoo\n$ sudo cp /opt/odoo/odoo.conf /etc/odoo/odoo.conf\n$ sudo chown -R odoo /etc/odoo\n$ sudo chmod u=r,g=rw,o=r /etc/odoo/odoo.conf  # for extra hardening\n```", "```py\n$ sudo mkdir /var/log/odoo\n$ sudo chown odoo /var/log/odoo\n```", "```py\n$ sudo nano /etc/odoo/odoo.conf\n```", "```py\n[options]\naddons_path = /opt/odoo/odoo15/odoo/addons,/opt/odoo/odoo15/addons,/opt/odoo/library\nadmin_passwd = StrongRandomPassword\ndb_name = odoo-prod\ndbfilter = ^odoo-prod$\nhttp_interface = 127.0.0.1\nhttp_port = 8069\nlimit_time_cpu = 600\nlimit_time_real = 1200\nlist_db = False\nlogfile = /var/log/odoo/odoo-server.log\nproxy_mode = True\nwithout_demo = all\nworkers = 6\n```", "```py\n$ sudo su - odoo\n$ source /opt/odoo/env15/bin/activate\n$ odoo -c /etc/odoo/odoo.conf\n```", "```py\n$ tail -f /var/log/odoo/odoo-server.log\n```", "```py\n$ /opt/odoo/env15/bin/odoo -c /etc/odoo/odoo.conf -i base \\\n--stop-after-init\n```", "```py\n$ man init\n```", "```py\n[Unit]\nDescription=Odoo Open Source ERP and CRM\nAfter=network.target\n[Service]\nType=simple\nUser=odoo\nGroup=odoo\nExecStart=/opt/odoo/env/bin/odoo -c /etc/odoo/odoo.conf --log-file=/var/log/odoo/odoo-server.log\nKillMode=mixed\n[Install]\nWantedBy=multi-user.target\n```", "```py\n$ sudo systemctl enable odoo.service\n```", "```py\n$ sudo systemctl start odoo\n```", "```py\n$ sudo systemctl status odoo\n```", "```py\n$ sudo systemctl stop odoo\n```", "```py\n$ curl http://localhost:8069\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<title>Redirecting...</title>\n<h1>Redirecting...</h1>\n<p>You should be redirected automatically to target URL: <a href=\"/web\">/web</a>.  If not click the link.\n```", "```py\n$ less /var/log/odoo/odoo-server.log\n```", "```py\n$ tail -f /var/log/odoo/odoo-server.log\n```", "```py\n$ curl http://localhost\ncurl: (7) Failed to connect to localhost port 80: Connection refused\n```", "```py\n$ sudo apt-get install nginx\n$ sudo service nginx start  # start nginx, if not already started\n```", "```py\n$ sudo rm /etc/nginx/sites-enabled/default\n$ sudo touch /etc/nginx/sites-available/odoo\n$ sudo ln -s /etc/nginx/sites-available/odoo \\\n/etc/nginx/sites-enabled/odoo\n```", "```py\n$ sudo nano /etc/nginx/sites-available/odoo\n```", "```py\nupstream odoo {\n  server 127.0.0.1:8069;\n}\nupstream odoochat {\n  server 127.0.0.1:8072;\n}\nserver {\n  listen 80;\n  server_name odoo.mycompany.com;\n  proxy_read_timeout 720s;\n  proxy_connect_timeout 720s;\n  proxy_send_timeout 720s;\n  # Add Headers for odoo proxy mode\n  proxy_set_header X-Forwarded-Host  $host;\n  proxy_set_header X-Forwarded-For   $proxy_add_x_\n    forwarded_for;\n  proxy_set_header X-Forwarded-Proto $scheme;\n  proxy_set_header X-Real-IP         $remote_addr;\n  # log\n  access_log /var/log/nginx/odoo.access.log;\n  error_log /var/log/nginx/odoo.error.log;\n  # Redirect longpoll requests to odoo longpolling port\n  location /longpolling {\n    proxy_pass http://odoochat;\n  }\n  # Redirect requests to odoo backend server\n  location / {\n    proxy_redirect off;\n    proxy_pass http://odoo;\n  }\n  # common gzip\n  gzip_types text/css text/scss text/plain text/xml \n   application/xml application/json application/javascript;\n  gzip on;\n}\n```", "```py\n$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n```", "```py\n$ sudo /etc/init.d/nginx reload\n$ sudo systemctl reload nginx  # using systemd\n$ sudo service nginx reload  # on Ubuntu systems\n```", "```py\n$ sudo mkdir /etc/ssl/nginx && cd /etc/ssl/nginx\n$ sudo openssl req -x509 -newkey rsa:2048 \\\n-keyout server.key -out server.crt -days 365 -nodes\n$ sudo chmod a-wx *            # make files read only\n$ sudo chown www-data:root *   # access only to www-data group\n```", "```py\nserver {\n  listen 80;\n  rewrite ^(.*) https://$host$1 permanent;\n}\n```", "```py\n# odoo server\nupstream odoo {\n  server 127.0.0.1:8069;\n}\nupstream odoochat {\n  server 127.0.0.1:8072;\n}\n# http -> https\nserver {\n  listen 80;\n  server_name odoo.mycompany.com;\n  rewrite ^(.*) https://$host$1 permanent;\n}\nserver {\n  listen 443;\n  server_name odoo.mycompany.com;\n  proxy_read_timeout 720s;\n  proxy_connect_timeout 720s;\n  proxy_send_timeout 720s;\n  # Add Headers for odoo proxy mode\n  proxy_set_header X-Forwarded-Host $host;\n  proxy_set_header X-Forwarded-For $proxy_add_x_for\n    warded_for;\n  proxy_set_header X-Forwarded-Proto $scheme;\n  proxy_set_header X-Real-IP $remote_addr;\n  # SSL parameters\n  ssl on;\n  ssl_certificate /etc/ssl/nginx/server.crt;\n  ssl_certificate_key /etc/ssl/nginx/server.key;\n  ssl_session_timeout 30m;\n  ssl_protocols TLSv1.2;\n  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-\n    AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-\n    RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-\n    POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-\n    GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;\n  ssl_prefer_server_ciphers off;\n  # log\n  access_log /var/log/nginx/odoo.access.log;\n  error_log /var/log/nginx/odoo.error.log;\n  # Redirect longpoll requests to odoo longpolling port\n  location /longpolling {\n    proxy_pass http://odoochat;\n  }\n  # Redirect requests to odoo backend server\n  location / {\n    proxy_redirect off;\n    proxy_pass http://odoo;\n  }\n  # common gzip\n  gzip_types text/css text/scss text/plain text/xml \n   application/xml application/json application/javascript;\n  gzip on;\n}\n```", "```py\n$ sudo nginx -t\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n$ sudo service nginx reload  # or: sudo systemctl reload nginx\n* Reloading nginx configuration nginx\n...done.\n$ curl -k https://localhost\n```", "```py\n  # cache static data\n  location ~* /web/static/ {\n    proxy_cache_valid 200 60m;\n    proxy_buffering on;\n    expires 864000;\n    proxy_pass http://odoo;\n  }\n```", "```py\n$ dropdb odoo-stage\n$ createdb --owner=odoo odoo-stage\n$ pg_dump odoo-prod | psql -d odoo-stage\n$ sudo su - odoo\n$ cd ~/.local/share/Odoo/filestore/\n$ cp -r odoo-prod odoo-stage\n$ exit\n```", "```py\n$ sudo su - odoo\n$ mkdir /opt/odoo/stage\n$ cp -r /opt/odoo/odoo15/ /opt/odoo/stage/\n$ cp -r /opt/odoo/library/ /opt/odoo/stage/  # custom code\n$ python3 -m venv /opt/odoo/env-stage\n$ source /opt/odoo/env-stage/bin/activate\n(env-stage) $ pip install -r \\\n/opt/odoo/stage/odoo15/requirements.txt\n(env-stage) $ pip install -e /opt/odoo/stage/odoo15\n(env-stage) $ exit\n```", "```py\n$ sudo su - odoo\n$ cd /opt/odoo/odoo15\n$ git tag --force 15-last-prod\n$ git pull\n$ exit\n```", "```py\n$ source /opt/odoo/env15/bin/activate\n(env15) $ odoo -c /etc/odoo/odoo.conf -d odoo-stage \\\n--http-port=8080 -u library  # modules to updgrade\n(env15) $ exit\n```", "```py\n$ sudo su - odoo\n$ cd /opt/odoo/odoo15\n$ git checkout 15-last-prod\n$ exit\n```", "```py\n$ sudo service odoo stop\n$ sudo su -c \"/opt/odoo/env15/bin/odoo -c /etc/odoo/odoo.conf\" \\\n\" -u base --stop-after-init\" odoo\n$ sudo service odoo start\n```"]