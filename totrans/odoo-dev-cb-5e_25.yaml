- en: '25'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Odoo Web Studio is a feature exclusive to the Odoo Enterprise edition. It’s
    a toolbox that lets you customize the Odoo user interface and its reports directly
    from the user interface without any code, such as by dragging and dropping components
    onto the view directly. Users can create or customize reports from the user interface
    itself.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo Web Studio is a visual development tool that allows users to customize
    and create applications within the Odoo **Enterprise Resource Planning** (**ERP**)
    platform. With Odoo Web Studio, users can design, modify, and extend various aspects
    of their Odoo applications without the need for extensive programming or coding
    skills. It offers a drag-and-drop interface, making it accessible to users with
    varying levels of technical expertise.
  prefs: []
  type: TYPE_NORMAL
- en: Odoo Web Studio empowers users to take full control of their Odoo ERP system
    by providing a user-friendly environment for module creation, report customization,
    automation, and more. It’s a valuable tool for businesses looking to adapt and
    optimize their Odoo applications to meet their unique requirements and preferences.
    So, Odoo Web Studio is a powerful tool that empowers users to create and customize
    applications within the Odoo ERP system with ease. Whether you’re building new
    modules, customizing existing ones, or designing reports, Odoo Web Studio provides
    a user-friendly and visual interface to streamline these processes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some key features and capabilities of Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Visual customization**: Odoo Web Studio provides a visual interface that
    allows users to customize the layout, fields, and forms of their applications.
    You can modify existing modules or create entirely new ones.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data model editor**: Users can define new data models, fields, and relationships
    between objects in their applications. This helps tailor the database structure
    to specific business needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflow configuration**: Workflow automation is a critical aspect of ERP
    systems. With Web Studio, users can design and configure workflows, automation
    rules, and triggers to streamline business processes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Reports and dashboards**: Users can design custom reports and dashboards
    to visualize data and gain insights into their business operations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Mobile responsiveness**: Odoo Web Studio applications are designed to be
    responsive, meaning they can adapt to different screen sizes and devices, including
    smartphones and tablets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**No-code or low-code**: While some level of technical knowledge can be helpful,
    Odoo Web Studio is designed to be user-friendly and accessible to those without
    extensive coding skills. This makes it possible for business users to make changes
    and adapt Odoo to their specific needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Real-time collaboration**: Multiple users can collaborate on designing and
    modifying applications simultaneously.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration**: Odoo Web Studio applications can be integrated with other
    Odoo modules and external systems to ensure seamless data flow and connectivity.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following recipes:'
  prefs: []
  type: TYPE_NORMAL
- en: Installing Odoo Web Studio
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Starting with a new app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Suggested features
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Components
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Field properties
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Views
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Build a new app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing an existing app
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in functions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Installing Odoo Web Studio
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this recipe, you’ll learn how to install Odoo Web Studio.
  prefs: []
  type: TYPE_NORMAL
- en: 'Log into your Odoo instance with administrative or superuser credentials. In
    the Odoo interface, go to the **Apps** module. This is where you can install or
    activate new modules and features:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to **Apps**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Search for `Web Studio`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **INSTALL**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'After installation, you should see a new menu item or section called **Studio**
    in your Odoo instance. Click on it to access Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.1 – Screenshot of the Studio button](img/B20997_25_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.1 – Screenshot of the Studio button
  prefs: []
  type: TYPE_NORMAL
- en: Once you’re in Odoo Web Studio, you can start customizing your Odoo applications,
    designing workflows, creating reports, and making other modifications using the
    visual tools and interface provided. By clicking on the icon, the studio customization
    mode is activated.
  prefs: []
  type: TYPE_NORMAL
- en: Starting with a new app
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you typically start by creating a new application. An application
    can be thought of as a module or a part of your ERP system. Click on the **Create**
    or **New** button to begin:'
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **App** **menu** screen.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the **Customize** icon.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Click the **New App** button to start creating a new app:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 25.2 – Screenshot of the New App creation screen](img/B20997_25_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.2 – Screenshot of the New App creation screen
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking on **New App**, you’ll see the following:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 25.3 – What you’ll see after clicking New App](img/B20997_25_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.3 – What you’ll see after clicking New App
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **Next**. From here, you can define your module’s name and change the
    logo of your module. You can upload a custom logo or customize the logo’s icon,
    icon color, and logo background:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.4 – Creating a new app](img/B20997_25_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.4 – Creating a new app
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose a name for your application. You can customize the icon by choosing
    any of the in-built icons. You’ll also have the chance to modify the background
    color and icon color as per your corporate branding. After adding the module’s
    name, click the **>** button. At this point, you can add your first menu’s name.
    Here, you have to build a new menu, so name it as you wish. Once you’ve done this,
    you can choose the type of model you wish to create. If you’re creating an app
    from scratch, choose **New Model**. Otherwise, choose **Existing Model**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.5 – Creating your first menu](img/B20997_25_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.5 – Creating your first menu
  prefs: []
  type: TYPE_NORMAL
- en: Once you’ve done this, click the **>** button. Your app will be ready for the
    next level of customization.
  prefs: []
  type: TYPE_NORMAL
- en: Suggested features
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Odoo Web Studio is a powerful tool that allows users to customize and extend
    their Odoo applications without the need for extensive coding. Depending on your
    business needs, there are several suggested features and capabilities that you
    can leverage when using Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.6 – Suggested features](img/B20997_25_06.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.6 – Suggested features
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click on the **CREATE YOUR APP** button, you’ll see the following
    screen. Here, you can add components and new fields, as well as modify or reuse
    existing model fields. You just need to drag and drop the fields:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 25.7 – Model components\uFEFF](img/B20997_25_07.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 25.7 – Model components
  prefs: []
  type: TYPE_NORMAL
- en: Components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Odoo Web Studio provides a set of components that you can use to create and
    customize modules within the Odoo ERP system. These components enable you to design
    data models, user interfaces, workflows, and reports without the need for extensive
    coding. Here are some of the key components and features available in Odoo Web
    Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Data Model Designer**: This component allows you to create and modify data
    models, define fields, specify data types, set default values, and establish relationships
    between objects. You can create custom objects to store data relevant to your
    business processes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Form Builder**: The Form Builder component lets you design and customize
    forms for data entry and display. You can drag and drop fields onto forms, arrange
    them, and set field properties such as labels, help text, and validation rules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Workflow Editor**: With the Workflow Editor component, you can design custom
    workflows to automate business processes. You can define triggers, actions, and
    transitions, allowing you to model how data moves through your application and
    what should happen at each stage.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Report Designer**: The Report Designer component enables you to create custom
    reports and dashboards. You can design templates for reports, add charts, tables,
    and graphs to visualize data, and generate printable or digital reports.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Menu Editor**: The Menu Editor component lets you create and modify menus
    and navigation structures within your Odoo modules. You can define menus for different
    user roles and organize them to provide easy access to various parts of your application.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Views and widgets**: You can customize the way data is displayed using views
    and widgets. Odoo Web Studio provides various view types, such as list views,
    form views, and kanban views, which you can configure to suit your needs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Actions and triggers**: Actions and triggers allow you to define what should
    happen in response to certain events or user actions. For example, you can set
    up actions to send email notifications, update records, or trigger specific workflows.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access control**: Odoo Web Studio allows you to set permissions and access
    rights for different user roles. You can control who can view, edit, or delete
    records and access specific features within your modules.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Localization support**: Customize your modules to accommodate regional or
    industry-specific requirements, including tax rules, languages, and accounting
    standards.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Data import and export**: Enable data import and export functionality to
    facilitate data migration and integration with external systems.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Scheduled actions**: You can automate tasks and actions on a scheduled basis,
    such as data backups or automated email notifications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Integration tools**: Odoo Web Studio provides tools so that you can integrate
    your custom modules with other Odoo modules or external systems, ensuring seamless
    data exchange and synchronization.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is a default list view with a **Description** field:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 25.8 – The default list vi\uFEFFew](img/B20997_25_08.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 25.8 – The default list view
  prefs: []
  type: TYPE_NORMAL
- en: Field properties
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, when creating or customizing fields in your data models,
    you have various options to configure and customize these fields to suit your
    business needs. Here are some of the common options that are available when creating
    new fields using Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Field Name**: Give your field a descriptive name that reflects the type of
    data it will store.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Field Type**: Select the appropriate data type for your field. Odoo provides
    a wide range of field types, including text, integer, float, date, datetime, selection,
    many2one (for relationships with other records), and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Required Field**: You can make the field required, meaning that users must
    provide a value for this field when creating or editing records.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default Value**: Set a default value for the field. This value will be pre-filled
    when creating a new record.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Read-Only**: Here, you can make the field read-only so that it cannot be
    edited by users. This is useful for fields that should not be modified once set.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Help Text**: Add some help text or a description to provide additional information
    about the field or instructions for users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Placeholder Text**: For text or char fields, you can specify a placeholder
    text that appears in the input field to guide users.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Validation Constraints**: Here, you can set validation constraints, such
    as character limits, numeric ranges, or patterns for text fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Compute and Default Functions**: You can define compute functions to calculate
    the value of the field based on other fields or conditions. Default functions
    allow you to set dynamic default values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dependencies**: Here, you can define field dependencies, which determine
    when a field is visible or required based on the values of other fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Selection Values**: For selection fields, specify the list of values that
    users can choose from. This is often used for fields such as drop-down menus.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Domain Filters**: Apply domain filters to restrict the available choices
    for many2one or many2many fields based on certain conditions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Options**: Odoo Web Studio also offers advanced options, such as
    setting a related field, specifying on-change actions, or setting access rights.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Groups and Access Rights**: Configure which user groups have access to view
    or edit this field. You can define different access rights based on user roles.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Computed Fields**: Create computed fields that display calculated values
    based on other fields in the record. These fields do not store data and instead
    dynamically calculate values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Widgets**: Choose different widgets to control how the field is displayed,
    such as text, selection, date, or color picker widgets.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Depends On**: Define field dependencies, indicating which other fields affect
    the visibility or behavior of this field.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Related Fields**: Create related fields to display information from related
    records. For example, you can display a customer’s name on an invoice by creating
    a related field.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Invisible or Hidden Fields**: Make fields invisible or hidden to control
    their visibility on forms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Attachment Fields**: Configure fields to allow attachments to be added or
    documents or files to be uploaded.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The following screenshot shows the new fields:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.9 – The new fields](img/B20997_25_09.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.9 – The new fields
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s a screenshot of the existing fields:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 25.10 – The existing fi\uFEFFelds](img/B20997_25_010.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 25.10 – The existing fields
  prefs: []
  type: TYPE_NORMAL
- en: Views
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, views are fundamental components for designing the user
    interface of your custom modules. Views determine how data is displayed and interacted
    with in your Odoo applications. There are several types of views you can work
    with in Odoo Web Studio to create and customize the user interface of your modules:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.11 – Views](img/B20997_25_011.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.11 – Views
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at some of the commonly used view types.
  prefs: []
  type: TYPE_NORMAL
- en: Form views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Form views allow users to view and edit individual records. You can customize
    the layout of form views by adding, removing, or rearranging fields. This view
    is commonly used for detailed record editing:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.12 – Form view](img/B20997_25_012.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.12 – Form view
  prefs: []
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, the form view is a crucial component for designing the
    user interface of your custom modules. Form views allow users to view and edit
    individual records within your application:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.13 – Form view fields](img/B20997_25_013.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.13 – Form view fields
  prefs: []
  type: TYPE_NORMAL
- en: 'We can create a form view using the fields shown in the preceding screenshot.
    Just drag and drop the field to create a new field in the form view where we want
    to display it:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.14 – The form view’s field details](img/B20997_25_014.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.14 – The form view’s field details
  prefs: []
  type: TYPE_NORMAL
- en: 'These are the field properties:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.15 – The form view’s field properties](img/B20997_25_015.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.15 – The form view’s field properties
  prefs: []
  type: TYPE_NORMAL
- en: 'Here, we can see the view options for particular fields:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.16 – Various form view field view options](img/B20997_25_016.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.16 – Various form view field view options
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a look at some of the important properties of the form view:'
  prefs: []
  type: TYPE_NORMAL
- en: '**View inheritance**: In Odoo Web Studio, you can work with view inheritance.
    This allows you to base a new form view on an existing one and make specific modifications
    or additions to it. This can save you time when you’re creating similar views.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Dependencies**: You can configure field dependencies within the form view.
    For example, you can make certain fields visible or required based on the values
    entered in other fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Validation rules**: Form views can have validation rules to ensure data accuracy.
    You can define constraints on fields to control the input data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Saving and testing**: Save your changes when you’re satisfied with the form
    view’s design. To test the form view, go to the application or module where it’s
    used, create or edit a record, and observe how your form view is displayed and
    functions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Custom actions**: You can also link custom actions to buttons within the
    form view, allowing users to perform specific actions when they’re interacting
    with records.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: List views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'List views display records in a tabular format, making it easy to browse and
    search multiple records. You can customize list views by selecting which fields
    to display, setting sorting options, and adding filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.17 – List view](img/B20997_25_017.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.17 – List view
  prefs: []
  type: TYPE_NORMAL
- en: 'When you click a column in the list view, you can edit the properties of that
    field. Users can set the following properties of the field:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Invisible**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Required**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Read only**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Optional**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Label**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Widget**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Default value**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Limit visibility to** **the groups**:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 25.18 – List view properties](img/B20997_25_018.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.18 – List view properties
  prefs: []
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, the list view is an essential component for designing the
    user interface of your custom modules. Here’s how you can work with list views
    in Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Create a new list view**: To create a new list view, click the **Create**
    button. Give it a name that reflects its purpose or function within your module.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Design the list view**: Once you’ve created the list view, you can start
    designing it.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Select the necessary fields**: Choose which fields you want to display in
    the list view by dragging and dropping them from the **Fields** section onto the
    list view canvas. You can arrange these fields as columns.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Column properties**: Click on each column to access its properties. You can
    set labels, formatting options, and sorting behavior for each column.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Sorting and grouping**: Configure how the records should be sorted and grouped
    in the list view.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Filter criteria**: Add filter criteria to limit the records that are displayed
    in the list view based on specific conditions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: List view settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Click on the list view itself to access its settings. You can configure various
    aspects, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Access Rights**: Define which user roles can view or access this list view.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Options**: Specify whether the list view should be visible, invisible,
    or read-only in specific situations.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Groups**: Set permissions and access rights for different user groups.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**View Inheritance**: Similar to form views, you can also work with view inheritance
    for list views. This allows you to create new list views based on existing ones
    and make specific modifications or additions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Search and Filter**: List views typically include a search and filter functionality,
    allowing users to quickly find records based on various criteria.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Group By and Totals**: You can enable grouping of records in the list view
    based on specific fields. Additionally, you can display totals and subtotals for
    numerical fields.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Batch Actions**: List views often include batch actions that allow users
    to perform actions on multiple selected records simultaneously, such as deleting,
    archiving, or updating records.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Column Visibility**: Users can often customize the visibility of columns
    in the list view, showing or hiding specific columns based on their preferences.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sorting and Pagination**: Configure how records are sorted and displayed
    on the list view, including options for ascending or descending order and pagination.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kanban views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Kanban views visualize records as cards or tiles, so they’re often used for
    managing tasks or workflows. You can customize Kanban views by defining columns
    and cards’ content and appearance:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.19 – Kanban view](img/B20997_25_019.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.19 – Kanban view
  prefs: []
  type: TYPE_NORMAL
- en: In Odoo Web Studio, Kanban views are useful components for designing user interfaces
    that visualize records as cards or tiles. These are often used for managing tasks,
    workflows, or project stages. Kanban views allow users to easily track the progress
    of records as they move through different stages. Let’s learn how to work with
    Kanban views in Odoo Web Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing Kanban Views
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To create or customize a Kanban view, go to the **Studio** module in your Odoo
    instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the application or module for which you want to create or modify the
    Kanban view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the left sidebar, you will find a **Views** section, which includes **Kanban
    Views**. Click **Kanban Views** to see the existing Kanban views or create a new
    one.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating a new Kanban view
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a new Kanban view, click the **Create** button. Provide a name for
    the Kanban view that reflects its purpose or function within your module.
  prefs: []
  type: TYPE_NORMAL
- en: Designing the Kanban view
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once you’ve created the Kanban view, you can start designing it:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define columns**: Kanban views are organized into columns, representing different
    stages or categories. Define the columns you need for your workflow.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add cards**: Drag and drop fields from the **Fields** section onto the Kanban
    view to define what information should be displayed on each card.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configure card properties**: Click on each card to access its properties.
    You can set labels, formatting options, and sorting behavior for each card.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kanban view settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Click on the Kanban view itself to access its settings. You can configure various
    aspects, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Access Rights**: Define which user roles can view or access this Kanban view'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Options**: Specify whether the Kanban view should be visible, invisible,
    or read-only in specific situations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Groups**: Set permissions and access rights for different user groups'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View inheritance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with other view types, you can work with view inheritance for Kanban views.
    This allows you to create new Kanban views based on existing ones and make specific
    modifications or additions.
  prefs: []
  type: TYPE_NORMAL
- en: Record movement and actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Kanban views, records can typically be moved from one column to another to
    indicate progress. You can configure actions or triggers that occur when records
    are moved or when specific actions are taken on cards.
  prefs: []
  type: TYPE_NORMAL
- en: Filter and search
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Kanban views often include filtering and search capabilities to help users find
    and organize cards based on various criteria.
  prefs: []
  type: TYPE_NORMAL
- en: Card colors
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can use color-coding to highlight cards or records that require attention
    or have specific attributes.
  prefs: []
  type: TYPE_NORMAL
- en: Custom actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Like other views, you can link custom actions to buttons or card interactions
    within the Kanban View.
  prefs: []
  type: TYPE_NORMAL
- en: Calendar views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Calendar views display records with date fields in a calendar format, making
    it suitable for scheduling and event management applications:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.20 – Calendar view](img/B20997_25_020.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.20 – Calendar view
  prefs: []
  type: TYPE_NORMAL
- en: In Odoo Web Studio, the calendar view is a component that allows you to present
    records with date-related information in a calendar format. This view is particularly
    useful for applications that involve scheduling, events, appointments, or any
    data that can be associated with dates and times. Let’s learn how to work with
    calendar views in Odoo Web Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Accessing calendar views
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: To create or customize a calendar view, go to the **Studio** module in your
    Odoo instance.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on the application or module for which you want to create or modify the
    calendar view.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In the left sidebar, you will find a **Views** section, which includes **Calendar
    Views**. Click **Calendar Views** to see the existing calendar views or create
    a new one.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Creating a new calendar view
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: To create a new calendar view, click the **Create** button. Provide a name for
    the calendar view that reflects its purpose or function within your module.
  prefs: []
  type: TYPE_NORMAL
- en: Designing the calendar view
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Once you’ve created the calendar view, you can start designing it:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Define events**: Calendar views typically represent events or records associated
    with specific dates and times. You can define which fields from your data model
    will be displayed in the calendar, such as event titles, start and end dates,
    descriptions, and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Customize the events’ appearance**: You can configure how events are displayed
    in the calendar, including the colors, text labels, and tooltips.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Calendar view settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Click on the calendar view itself to access its settings. You can configure
    various aspects, including the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Access Rights**: Define which user roles can view or access this calendar
    view'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Advanced Options**: Specify whether the calendar view should be visible,
    invisible, or read-only in specific situations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Groups**: Set permissions and access rights for different user groups'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: View inheritance
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Similar to other view types, you can work with view inheritance for calendar
    views. This allows you to create new calendar views based on existing ones and
    make specific modifications or additions.
  prefs: []
  type: TYPE_NORMAL
- en: Drag-and-drop interaction
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users can typically interact with the calendar by dragging and dropping events
    to reschedule or modify them.
  prefs: []
  type: TYPE_NORMAL
- en: Filter and search
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Calendar views often include filtering and search capabilities to help users
    find and organize events based on various criteria, such as date ranges or event
    types.
  prefs: []
  type: TYPE_NORMAL
- en: Event Details
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Clicking on an event in the calendar view typically displays detailed information
    about the event, allowing users to view or edit event details.
  prefs: []
  type: TYPE_NORMAL
- en: Custom actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: As with other views, you can link custom actions to buttons or event interactions
    within the calendar view.
  prefs: []
  type: TYPE_NORMAL
- en: Graph views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Graph views allow you to create bar charts, line charts, and pie charts to
    visualize data based on selected fields. This is useful for data analysis and
    reporting:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.21 – Graph view](img/B20997_25_021.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.21 – Graph view
  prefs: []
  type: TYPE_NORMAL
- en: Pivot views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Pivot views provide an interactive way to analyze data by aggregating and summarizing
    records based on selected fields. Users can create custom reports and perform
    ad hoc analysis:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.22 – Pivot view](img/B20997_25_022.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.22 – Pivot view
  prefs: []
  type: TYPE_NORMAL
- en: Search views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Search views enable users to filter records based on specified criteria. You
    can customize search views by defining search filters and filter groups:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.23 – Search view](img/B20997_25_023.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.23 – Search view
  prefs: []
  type: TYPE_NORMAL
- en: Gantt views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Gantt views are used for project management and to display tasks or events
    along a timeline. Users can view and manage project schedules using this view:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.24 – Gantt view](img/B20997_25_024.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.24 – Gantt view
  prefs: []
  type: TYPE_NORMAL
- en: Resource views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Resource views are used for resource management and to display resources (for
    example, employees and machines) and their availability over time.
  prefs: []
  type: TYPE_NORMAL
- en: Map views
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Map views display records with geographic information on a map, making them
    suitable for location-based applications.
  prefs: []
  type: TYPE_NORMAL
- en: Activity views
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Activity views show a timeline of activities related to a record, helping users
    track interactions and history:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.25 – Activity view](img/B20997_25_025.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.25 – Activity view
  prefs: []
  type: TYPE_NORMAL
- en: Building a new app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Creating a new app in Odoo Web Studio involves a series of steps to design and
    configure the data model, user interface, and functionality according to your
    specific business requirements. Here, we’ll cover the general steps you’ll need
    to follow to build a new app using Odoo Web Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the data model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Odoo Web Studio, you can define the data model for your application. This
    includes creating custom objects (database tables) to store your data.
  prefs: []
  type: TYPE_NORMAL
- en: 'Use the visual interface to add fields, specify data types, set default values,
    and create relationships between objects:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.26 – Defining the data model](img/B20997_25_026.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.26 – Defining the data model
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click the **New Model** button, the next step is to specify the name
    of the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.27 – Specifying the model’s name](img/B20997_25_027.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.27 – Specifying the model’s name
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve done this, you must choose the features of that model and then
    click **CREATE** **YOUR APP**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.28 – Choosing model features](img/B20997_25_028..jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.28 – Choosing model features
  prefs: []
  type: TYPE_NORMAL
- en: 'At this point, we’ll have different options to customize the app:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.29 – Various model options](img/B20997_25_029..jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.29 – Various model options
  prefs: []
  type: TYPE_NORMAL
- en: Defining the general views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As explained in the *Views* recipe, we must choose the views of the model by
    clicking the **VIEWS** button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.30 – View options](img/B20997_25_030..jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.30 – View options
  prefs: []
  type: TYPE_NORMAL
- en: Choose the views you wish to use as per your requirements and add fields as
    per your needs and functions. These can be chosen from the left sidebar.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the fields and components
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In the form view, we can add **Tabs** and **Columns** from the **Components**
    section:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.31 – Components options](img/B20997_25_031.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.31 – Components options
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you add tabs to the form view as **one2many** fields, you can edit the
    list and form view, as well as the **one2many** field itself:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.32 – Tabs options](img/B20997_25_032.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.32 – Tabs options
  prefs: []
  type: TYPE_NORMAL
- en: 'We can also set the details for **Widget**, **Domain**, and **Limit visibility
    to groups**, **Context**, and more, as per the field types:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.33 – Field properties](img/B20997_25_033.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.33 – Field properties
  prefs: []
  type: TYPE_NORMAL
- en: Text (char)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, Text fields are a common field type that’s used to store
    and display textual information. Text fields are versatile and can be used to
    capture various types of textual data, such as names, descriptions, comments,
    and notes.
  prefs: []
  type: TYPE_NORMAL
- en: Multiline text (text)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Multiline text field allows users to input and display
    text that spans multiple lines or paragraphs. This type of field is useful when
    you need to capture longer descriptions, comments, notes, or any other form of
    text that extends beyond a single line.
  prefs: []
  type: TYPE_NORMAL
- en: Integer (integer)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, an Integer field is used to store and display integer (whole
    number) values. Integer fields are commonly used for various purposes, such as
    counting, quantifying, or capturing numeric data that does not require decimal
    points.
  prefs: []
  type: TYPE_NORMAL
- en: Decimal (float)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Decimal field is used to store and display numeric values
    with decimal points or fractions. Decimal fields are versatile and can be used
    to capture and store data that requires precision in terms of decimal places.
  prefs: []
  type: TYPE_NORMAL
- en: HTML (html)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, an HTML field allows you to store and display HTML-formatted
    content within your records. This field type is especially useful when you need
    to include rich text, formatted descriptions, or multimedia content within your
    application.
  prefs: []
  type: TYPE_NORMAL
- en: Monetary (monetary)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Monetary field is used to store and display monetary values,
    such as currency amounts. Monetary fields are essential for applications that
    involve financial transactions, accounting, or any scenario where you need to
    handle currency-related data.
  prefs: []
  type: TYPE_NORMAL
- en: Date (date)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Date field is used to store and display date values. Date
    fields are essential for applications that involve tracking events, scheduling,
    and recording dates associated with various records.
  prefs: []
  type: TYPE_NORMAL
- en: Date & Time (datetime)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Date & Time field is used to store and display both date
    and time values. This field is especially useful for applications that must record
    events, appointments, or transactions with precise timestamps.
  prefs: []
  type: TYPE_NORMAL
- en: Checkbox (Boolean)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, a Checkbox field is used to capture binary or Boolean values,
    which represent two states: checked (true) or unchecked (false). Checkbox fields
    are commonly used to record yes/no, on/off, or true/false responses to questions
    or conditions.'
  prefs: []
  type: TYPE_NORMAL
- en: Selection (selection)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Selection field is used to provide users with a predefined
    list of options from which they can choose a single value. This type of field
    is commonly used when you want to capture categorical or discrete data with a
    limited set of choices.
  prefs: []
  type: TYPE_NORMAL
- en: File (binary)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a File field is used to allow users to upload and store
    files, such as documents, images, spreadsheets, or any other type of digital files,
    within records. File fields are commonly used when you need to associate files
    with specific records, such as invoices, contracts, or product images.
  prefs: []
  type: TYPE_NORMAL
- en: Lines (one2many)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Lines field, also known as a one2many field, is used to
    create a relationship between two models (database tables) by establishing a one-to-many
    relationship. It allows you to associate multiple records from one model with
    a single record in another model. Lines fields are commonly used for scenarios
    where you need to link related records, such as order lines in an invoice or tasks
    in a project.
  prefs: []
  type: TYPE_NORMAL
- en: One2many (one2many)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a One2many field is used to establish a one-to-many relationship
    between two models (database tables), allowing you to associate multiple records
    from one model with a single record in another model. One2many fields are commonly
    used in scenarios where you need to link related records, such as order lines
    in an invoice, tasks in a project, or products in a sales order.
  prefs: []
  type: TYPE_NORMAL
- en: Many2one (many2one)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Many2one field is used to establish a many-to-one relationship
    between two models (database tables), allowing you to associate a single record
    from one model with multiple records in another model. Many2one fields are commonly
    used in scenarios where you need to link records to a parent or reference record,
    such as linking a product to a category or a task to a project.
  prefs: []
  type: TYPE_NORMAL
- en: Many2many (many2many)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Many2many field is used to establish a many-to-many relationship
    between two models (database tables), allowing you to associate multiple records
    from one model with multiple records in another model. Many2many fields are commonly
    used in scenarios where you need to link multiple records to each other, such
    as tagging products with multiple categories or associating employees with multiple
    skills.
  prefs: []
  type: TYPE_NORMAL
- en: Image (binary)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, an Image field is used to allow users to upload and display
    images within records. Image fields are commonly used when you need to associate
    images with specific records, such as product images, profile pictures, or images
    related to marketing materials.
  prefs: []
  type: TYPE_NORMAL
- en: Tags (many2many)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Tags field is used to allow users to assign one or more
    tags or labels to records. Tags are short descriptive labels that help categorize
    and organize records based on specific criteria or attributes. Tags fields are
    commonly used in scenarios where you want to implement a flexible and user-driven
    categorization system, such as tagging products with product categories or labeling
    tasks with project stages.
  prefs: []
  type: TYPE_NORMAL
- en: Priority (selection)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Priority field is typically a selection field that’s used
    to indicate the priority or importance level of a record or a task. Priority fields
    are commonly used in applications such as project management, task tracking, and
    issue tracking to help users and teams prioritize their work.
  prefs: []
  type: TYPE_NORMAL
- en: Signature (binary)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a Signature field allows users to capture and store digital
    signatures within records. Signature fields are commonly used in scenarios where
    you need to collect and verify signatures as part of a workflow or approval process,
    such as signing off on documents, contracts, or delivery confirmations.
  prefs: []
  type: TYPE_NORMAL
- en: Related Field (related)
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, Related Field is a powerful field type that allows you to
    display data from a related record on the current record’s form view without creating
    a physical database link between the two records. It’s commonly used when you
    want to display information from another model (database table) related to the
    current record.
  prefs: []
  type: TYPE_NORMAL
- en: Defining the compute method for a field
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, you can define a computed field using a Python method to
    calculate its value dynamically based on other fields or data. Computed fields
    are useful when you want to display calculated or derived values in your records.
  prefs: []
  type: TYPE_NORMAL
- en: To define the compute method for the field, you’ll need to write Python code
    in the Odoo model class associated with your custom module. Let’s look at a basic
    example of how to define a compute method.
  prefs: []
  type: TYPE_NORMAL
- en: Defining a compute method using code
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In this example, we’ve created a computed field called `computed_field` that
    calculates its value based on `field1` and `field2`. The `@api.depends` decorator
    specifies the fields that trigger the computation when their values change:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Let’s see how we can add the compute field using Odoo Web Studio.
  prefs: []
  type: TYPE_NORMAL
- en: Here, we can take a look at a small Compute field for calculating the total
    of a sale order line.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.34 – Sales order](img/B20997_25_034.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.34 – Sales order
  prefs: []
  type: TYPE_NORMAL
- en: 'As shown in the following screenshot, we added one Compute field (**Total**)
    using Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.35 – Screenshot of the Added Total float field to write a compute
    method](img/B20997_25_036.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.35 – Screenshot of the Added Total float field to write a compute
    method
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **MORE** button to see all the properties of the field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.36 – MORE](img/B20997_25_036.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.36 – MORE
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve done this, you’ll see the **Dependencies** and **Compute** options
    under **ADVANCED PROPERTIES**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.37 – The ADVANCED PROPERTIES area](img/B20997_25_037.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.37 – The ADVANCED PROPERTIES area
  prefs: []
  type: TYPE_NORMAL
- en: In Odoo, a Computed field is a field that is not stored in the database but
    is dynamically calculated based on the values of other fields or data. Computed
    fields are used to display calculated or derived values in your records. They
    are especially useful when you need to perform calculations or apply business
    logic to fields in your database records.
  prefs: []
  type: TYPE_NORMAL
- en: 'The only predefined variables are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: self (the set of records to compute)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: datetime (Python module)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: dateutil (Python module)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: time (Python module)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Other features are accessible through self, such as **self.env**.
  prefs: []
  type: TYPE_NORMAL
- en: 'So, add some field dependencies and write the Python code in the **Compute**
    box:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.38 – The compute method’s code](img/B20997_25_038.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.38 – The compute method’s code
  prefs: []
  type: TYPE_NORMAL
- en: 'Now the compute method calculates the field values and stores them in the **Total**
    field:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.39 – The compute method’s calculation in the Total field](img/B20997_25_039.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.39 – The compute method’s calculation in the Total field
  prefs: []
  type: TYPE_NORMAL
- en: Adding a button
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In Odoo Web Studio, you can add a button to your custom views to trigger specific
    actions or functions within your Odoo application. Buttons are commonly used to
    initiate processes, validate data, or perform custom actions.
  prefs: []
  type: TYPE_NORMAL
- en: 'To add a button to your views, click on the XML section and add a new button
    through the code. Note that the button must be an action type button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.40 – The XML section, where you can add/modify anything through
    code](img/B20997_25_040.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.40 – The XML section, where you can add/modify anything through code
  prefs: []
  type: TYPE_NORMAL
- en: 'Once we click **XML**, the editor will open so that we can modify or add anything
    through the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.41 – Using the XML editor to add/modify anything through code](img/B20997_25_041.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.41 – Using the XML editor to add/modify anything through code
  prefs: []
  type: TYPE_NORMAL
- en: Adding a smart button
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In Odoo Web Studio, a smart button is a dynamic UI element that displays summarized
    information and provides quick access to related records. Smart buttons are commonly
    used to display counts of related records, such as the number of orders, tasks,
    or leads associated with a specific record, and they allow users to navigate to
    those related records with a single click.
  prefs: []
  type: TYPE_NORMAL
- en: 'Hover your mouse cursor over the top-right corner; a **+** sign will become
    visible. You can use this to add a smart button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.42 – Adding a smart button](img/B20997_25_042.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.42 – Adding a smart button
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click on the **+** sign, a new window will open called **Add a Button**.
    Here, you can add a label and choose the icon of the smart button:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.43 – The Add a Button options](img/B20997_25_043.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.43 – The Add a Button options
  prefs: []
  type: TYPE_NORMAL
- en: Adding a status bar and filters
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can create and customize a status bar and filters to
    enhance the user experience and improve the navigation of your custom views. Status
    bars typically display key information about the current record or context, while
    filters allow users to refine the records that are displayed in a list or search
    view:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.44 – Add a pipeline status bar](img/B20997_25_044.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.44 – Add a pipeline status bar
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click on the **Add a pipeline status bar** button, a window will open
    where you can add status bar options:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.45 – Status bar properties](img/B20997_25_045.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.45 – Status bar properties
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve edited and added the status bar’s field properties, click **CONFIRM**.
    The status bar will now be visible in your views:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.46 – The added status bar](img/B20997_25_046.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.46 – The added status bar
  prefs: []
  type: TYPE_NORMAL
- en: Filters
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can create and customize filters to allow users to
    refine and filter records in list views and search views. Filters are valuable
    in helping users find specific information within a large dataset:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.47 – Filter Rules](img/B20997_25_047.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.47 – Filter Rules
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows the common filter rules you must configure,
    as per your needs. You can also customize the domain as per the filter rules:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.48 – Adding new filter rules](img/B20997_25_048.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.48 – Adding new filter rules
  prefs: []
  type: TYPE_NORMAL
- en: Edit Menu
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can customize the menu structure of your Odoo application
    by adding, editing, or removing menu items. These menu items allow users to access
    different parts of the application, such as modules, views, and actions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.49 – Edit Menu](img/B20997_25_049.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.49 – Edit Menu
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click the **Edit Menu** button, a window will open where you can edit
    menu items:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.50 – Editing menu items](img/B20997_25_050.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.50 – Editing menu items
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the **Edit** icon of the menu item you wish to edit. Here, you can
    edit the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Name**: Change the display name of the menu item.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Action**: Modify the action associated with the menu item. Actions define
    what happens when users click on the menu item. You can associate a specific view,
    action, or function with the menu item.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Parent Menu**: Specify the parent menu under which the menu item should appear.
    This controls the hierarchy and organization of the menu’s structure.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Visibility**: Define the visibility of the menu item based on user roles,
    groups, or conditions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Icon**: Optionally, add an icon to represent the menu item.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Sequence**: Adjust the order in which the menu item appears within its parent
    menu.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Access Rights**: Configure access rights and permissions for the menu item,
    specifying which user roles can see or access it.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customizing an existing app
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Customizing an existing app in Odoo Web Studio involves making modifications
    to the app’s functionality, views, and data structures so that it can be aligned
    with your specific business requirements. This recipe will cover the general steps
    you must follow to customize an existing app in Odoo Web Studio:'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs: []
  type: TYPE_NORMAL
- en: Customizing an existing app typically requires developer-level access or the
    use of Odoo Web Studio for simpler customizations. Ensure you have the necessary
    permissions and access.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.51 – Customizing an existing app](img/B20997_25_051.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.51 – Customizing an existing app
  prefs: []
  type: TYPE_NORMAL
- en: Choosing an existing app to customize
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'From the main dashboard or menu, select the app or module you want to customize.
    This could be any existing app in Odoo. Here, you have various options:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Customize views**: Use Odoo Web Studio to customize the views of the app.
    You can modify existing views or create new ones to display data in the way you
    want. You can add or remove fields, change their labels, and adjust their positions
    on form views, list views, Kanban views, and more.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add or modify fields**: Add new fields to the app’s data model or modify
    existing fields. You can define field types, labels, default values, and other
    field properties using Odoo Web Studio.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create or edit actions**: Define actions and workflows for the app. Actions
    determine what happens when users perform specific actions, such as clicking buttons
    or menu items. You can create custom actions or modify existing ones.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add buttons and menu items**: Customize the app’s menu structure by adding
    buttons, menu items, and links to various parts of the app. This allows users
    to navigate easily between different views and functionalities.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Configure access rights**: Set access rights and permissions for the app’s
    views, models, and actions. Define who can view, edit, or delete data and access
    specific features within the app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Implement business logic**: Use Odoo Web Studio to implement custom business
    logic by defining computed fields, server actions, and other rules that automate
    processes and calculations within the app.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add custom reports**: If needed, create custom reports and documents using
    Odoo’s reporting tools. Define report templates and layouts to generate documents
    such as invoices, purchase orders, and sales quotes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Built-in functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Odoo Web Studio provides a set of built-in features and tools that allow users
    to customize, extend, and enhance their Odoo applications without the need for
    extensive programming or development skills. These built-in features are designed
    to streamline app customization and empower users to adapt their Odoo instance
    to their specific business needs.
  prefs: []
  type: TYPE_NORMAL
- en: Importing modules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Once you click on the **Import** link, a pop-up window will appear where you
    can upload the module’s ZIP file:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.52 – Screenshot of the Import Export options](img/B20997_25_052.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.52 – Screenshot of the Import Export options
  prefs: []
  type: TYPE_NORMAL
- en: 'Here’s what the **Import modules** option looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.53 – Import modules](img/B20997_25_053.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.53 – Import modules
  prefs: []
  type: TYPE_NORMAL
- en: 'Upload your **Module file (.zip)** and check **Force init**. Force init mode,
    even if installed, will update ‘noupdate == 1’ records:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.54 – Successfully importing a module](img/B20997_25_054.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.54 – Successfully importing a module
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you’ve uploaded the module file and clicked **Import**, you will get a
    message stating that the module was imported successfully:'
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 25.55 – The imported \uFEFFmodule](img/B20997_25_055.jpg)"
  prefs: []
  type: TYPE_IMG
- en: Figure 25.55 – The imported module
  prefs: []
  type: TYPE_NORMAL
- en: Go to the **App** list and search for the **Studio** customizations module.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting modules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To export modules from the Odoo database, you have to install the Odoo Studio
    module and then customize it in the database. If we do any customization from
    Odoo Web Studio, a new module will be created in the database:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.56 – The Export option](img/B20997_25_056.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.56 – The Export option
  prefs: []
  type: TYPE_NORMAL
- en: Once you click on the **Export** link it will download the Studio customize
    module. You can also import this module into other Odoo databases.
  prefs: []
  type: TYPE_NORMAL
- en: Search view
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can customize search views to tailor the way users
    search for and filter records within a specific module or application. Search
    views allow users to refine their search criteria, making it easier to find specific
    records:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.57 – Search filters](img/B20997_25_057.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.57 – Search filters
  prefs: []
  type: TYPE_NORMAL
- en: 'Click on the Studio icon, then **VIEWS**. Select the **Search** view:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.58 – The Search view](img/B20997_25_058.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.58 – The Search view
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking the **Search** view, the following screen will open. Here, you
    can modify or add search filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.59 – Search view filters](img/B20997_25_059.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.59 – Search view filters
  prefs: []
  type: TYPE_NORMAL
- en: Automations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Odoo provides automation capabilities to help streamline business processes
    and reduce manual tasks. These automation features are designed to make it easier
    for users to configure and customize automated actions within their Odoo applications.
  prefs: []
  type: TYPE_NORMAL
- en: Automated actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Odoo Studio allows users to create automated actions that trigger specific tasks
    based on predefined conditions or events. These actions can be associated with
    various Odoo modules and can include actions such as creating records, sending
    emails, updating fields, and more. Users can define the conditions that trigger
    these actions and specify what should happen when the conditions are met.
  prefs: []
  type: TYPE_NORMAL
- en: Scheduled actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users can schedule automated actions to run at specific times or intervals.
    This is useful for tasks such as sending automated reminders, generating reports,
    or performing data maintenance tasks. Scheduled actions can be configured to execute
    daily, weekly, monthly, or on a custom schedule.
  prefs: []
  type: TYPE_NORMAL
- en: Email automation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Odoo Studio enables users to automate email notifications and communications.
    Users can set up automated email triggers for events such as order confirmation,
    invoice generation, or when specific conditions are met. Email templates can be
    customized to include dynamic data from Odoo records.
  prefs: []
  type: TYPE_NORMAL
- en: Server actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Server actions allow users to define custom Python code or server-side logic
    that can be executed as part of an automated action. This provides advanced customization
    options for complex automation tasks that require custom programming:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.60 – Automations](img/B20997_25_060.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.60 – Automations
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click on the **Automation** link, the following screen will appear.
    Here, you can add a new automation action:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.61 – Adding a new automation](img/B20997_25_061.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.61 – Adding a new automation
  prefs: []
  type: TYPE_NORMAL
- en: 'There are multiple options you can choose from when performing an automation
    action:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Execute** **Python Code**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create a** **new Record**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Update** **the Record**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Execute** **several actions**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Send Email**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Add Followers**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Create** **Next Activity**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Send SMS** **Text Message**'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here, choose **Execute Python Code** from the **Action To Do** dropdown to
    run the Python code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.62 – Action To Do](img/B20997_25_062.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.62 – Action To Do
  prefs: []
  type: TYPE_NORMAL
- en: Reports
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In Odoo Web Studio, you can customize reports in terms of their layout, content,
    and appearance so that they meet your business needs. Report customization allows
    you to create professional and branded documents, such as invoices, purchase orders,
    quotations, and more.
  prefs: []
  type: TYPE_NORMAL
- en: Navigate to the **Studio** module within Odoo to access the report customization
    features.
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose the app or module for which you want to customize reports. Typically,
    reports are associated with specific modules, such as **Sales**, **Purchase**,
    **Inventory**, or **Accounting**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.63 – The Reports menu](img/B20997_25_063.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.63 – The Reports menu
  prefs: []
  type: TYPE_NORMAL
- en: 'Once you click on the **Reports** menu, a screen will appear where you can
    choose existing model reports or create new reports:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.64 – Reports](img/B20997_25_064.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.64 – Reports
  prefs: []
  type: TYPE_NORMAL
- en: 'Click **CREATE** to create a new report for the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.65 – Choosing a report type](img/B20997_25_065.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.65 – Choosing a report type
  prefs: []
  type: TYPE_NORMAL
- en: Odoo Web Studio allows you to create external reports, also known as custom
    reports, so that you can generate documents and reports outside of the standard
    built-in reports provided by Odoo. External reports can be highly customized to
    meet specific business requirements.
  prefs: []
  type: TYPE_NORMAL
- en: External reports
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here’s what the **External** report template looks like:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.66 – An external report template](img/B20997_25_066.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.66 – An external report template
  prefs: []
  type: TYPE_NORMAL
- en: Internal reports
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To create a PDF report in Odoo without a header and footer, choose the **Internal**
    report template:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.67 – An internal report template](img/B20997_25_067.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.67 – An internal report template
  prefs: []
  type: TYPE_NORMAL
- en: Blank reports
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To create a PDF report in Odoo without any predefined structure, choose the
    **Blank** report template:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.68 – A blank report template](img/B20997_25_068.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.68 – A blank report template
  prefs: []
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can customize existing reports in terms of their layout,
    content, and appearance to meet your specific business needs. This customization
    allows you to make adjustments to standard reports provided by Odoo so that they
    match your company’s branding and presentation requirements:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.69 – The QUOTATION/ORDER sales report](img/B20997_25_069.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.69 – The QUOTATION/ORDER sales report
  prefs: []
  type: TYPE_NORMAL
- en: 'There is also an **XML** editor option so that you can design complex parts
    of the report via code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.70 – The XML option](img/B20997_25_070.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.70 – The XML option
  prefs: []
  type: TYPE_NORMAL
- en: 'So, click **XML** to customize the report’s design through code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.71 – The XML editor](img/B20997_25_071.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.71 – The XML editor
  prefs: []
  type: TYPE_NORMAL
- en: 'Choose a different report template from the selection:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.72 – The XML editor – choosing a different report](img/B20997_25_072.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.72 – The XML editor – choosing a different report
  prefs: []
  type: TYPE_NORMAL
- en: 'All newly created reports will be displayed under **Reports**:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.73 – Screenshot of the created report](img/B20997_25_073.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.73 – Screenshot of the created report
  prefs: []
  type: TYPE_NORMAL
- en: 'Note that you now have the option to **Print** the report:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.74 – The Print option](img/B20997_25_074.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.74 – The Print option
  prefs: []
  type: TYPE_NORMAL
- en: Modules
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To export modules from the Odoo database, you have to install the Odoo Studio
    module and then start customizing the database. If we do any customization from
    the Studio module, a new module will be created in the database:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.75 – The Export module](img/B20997_25_075.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.75 – The Export module
  prefs: []
  type: TYPE_NORMAL
- en: Once you click on the **Export** link, the Studio customize module will be downloaded.
    You can also import this module into other Odoo databases.
  prefs: []
  type: TYPE_NORMAL
- en: Search views
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In Odoo Web Studio, you can customize search views to tailor the way users
    search for and filter records within a specific module or application. Search
    views allow users to refine their search criteria, making it easier to find specific
    records:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.76 – Search filters](img/B20997_25_076.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.76 – Search filters
  prefs: []
  type: TYPE_NORMAL
- en: 'Click the **Studio** icon, then **VIEWS**. Once you’ve done this, select the
    **Search** view:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.77 – The Search view](img/B20997_25_077.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.77 – The Search view
  prefs: []
  type: TYPE_NORMAL
- en: 'After clicking on the **Search** view, the following screen will open. Here,
    you can modify or add search filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.78 – Search view filters](img/B20997_25_078.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.78 – Search view filters
  prefs: []
  type: TYPE_NORMAL
- en: Automations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Odoo provides automation capabilities to help streamline business processes
    and reduce manual tasks. These automation features are designed to make it easier
    for users to configure and customize automated actions within their Odoo applications.
  prefs: []
  type: TYPE_NORMAL
- en: Automated Actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Odoo Studio allows users to create automated actions that trigger specific tasks
    based on predefined conditions or events. These actions can be associated with
    various Odoo modules and can include actions such as creating records, sending
    emails, updating fields, and more. Users can define the conditions that trigger
    these actions and specify what should happen when the conditions are met.
  prefs: []
  type: TYPE_NORMAL
- en: Scheduled Actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Users can schedule automated actions to run at specific times or intervals.
    This is useful for tasks like sending automated reminders, generating reports,
    or performing data maintenance tasks. Scheduled actions can be configured to execute
    daily, weekly, monthly, or on a custom schedule.
  prefs: []
  type: TYPE_NORMAL
- en: Email Automation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Odoo Studio enables users to automate email notifications and communications.
    Users can set up automated email triggers for events such as order confirmation,
    invoice generation, or when specific conditions are met. Email templates can be
    customized to include dynamic data from Odoo records.
  prefs: []
  type: TYPE_NORMAL
- en: Server Actions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Server actions allow users to define custom Python code or server-side logic
    that can be executed as part of an automated action. This provides advanced customization
    options for complex automation tasks that require custom programming.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.79 – Screenshot of the Automations](img/B20997_25_079.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.79 – Screenshot of the Automations
  prefs: []
  type: TYPE_NORMAL
- en: Once you click on the Automation link, it will open the screen to add a new
    automation action.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 25.80 – Screenshot of the Add New Automation](img/B20997_25_080.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.80 – Screenshot of the Add New Automation
  prefs: []
  type: TYPE_NORMAL
- en: There are multiple options to do an automation action.
  prefs: []
  type: TYPE_NORMAL
- en: Execute Python Code
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create a new Record
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Update the Record
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Execute several actions
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Send Email
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Add Followers
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Create Next Activity
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Send SMS Text Message
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 25.81 – Screenshot of the Action To Do](img/B20997_25_081.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 25.81 – Screenshot of the Action To Do
  prefs: []
  type: TYPE_NORMAL
