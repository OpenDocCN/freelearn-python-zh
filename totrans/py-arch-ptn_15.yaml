- en: Part IV
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四部分
- en: Ongoing operations
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 持续运营
- en: Our work with an architecture is not finished when a system is up and running.
    A working application requires ongoing maintenance and effort to keep it running
    successfully.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当系统上线并运行时，我们的架构工作并未结束。一个运行中的应用程序需要持续的维护和努力来保持其成功运行。
- en: Systems will be in a maintenance phase during the longest part of their life
    cycles. This phase is where we add features, detect and fix defects, and analyze
    the system's behavior to prevent problems.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 系统在其生命周期的大部分时间里将处于维护阶段。在这个阶段，我们添加功能、检测和修复缺陷，并分析系统的行为以预防问题。
- en: 'To be able to do that successfully, we need to have tools to cover two basic
    elements:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 要能够成功做到这一点，我们需要拥有工具来覆盖两个基本要素：
- en: '*Observability*: This is the capability of knowing what''s going on in a live
    system. Low-observability systems are difficult or even impossible to understand,
    which makes it difficult to know if there are problems or work out the cause of
    those problems. In high-observability systems, it''s easy to infer the internal
    state and the events flowing inside the system, which allows for easy detection
    of the critical structures where problems are being generated.The main tools for
    observing systems are **logs** and **metrics**, which are used in conjunction
    to allow us to understand the system and analyze its behavior.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*可观察性*：这是了解实时系统正在发生什么的能 力。低可观察性系统难以理解，甚至可能无法理解，这使得了解是否存在问题或找出问题原因变得困难。在高可观察性系统中，很容易推断系统的内部状态和系统内部流动的事件，这允许轻松检测到产生问题的关键结构。观察系统的主要工具是**日志**和**指标**，它们结合使用，使我们能够理解系统并分析其行为。'
- en: Observability is a property of the system itself. Typically, monitoring is the
    action of obtaining information about the current or past state of the system.
    It's all a bit of a naming debate, but technically, you *monitor* the system to
    collect the *observable* parts of it.
  id: totrans-6
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可观察性是系统本身的属性。通常，监控是获取关于系统当前或过去状态信息的行为。这有点像是命名上的争论，但从技术上讲，你*监控*系统以收集其*可观察*的部分。
- en: '*Analysis*: To detect problems in more controlled situations, we have two important
    tools, **debugging** and **profiling**. The first is a staple of the development
    process, working step by step through code to understand how a piece of code works
    and ascertain why it''s doing what it is doing. Profiling is instrumenting the
    code to show how it works and, specifically, determine which parts take the most
    time to execute, to allow you to act on them and improve their performance.These
    two tools work complementarily with one another and allow us to fix and improve
    different kinds of problems after they''ve been detected.'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*分析*：为了在更受控的情况下检测问题，我们有两个重要的工具，**调试**和**性能分析**。第一个是开发过程中的基本要素，通过逐步分析代码来理解代码的工作方式，并确定它为什么这样做。性能分析是通过向代码中添加工具来展示其工作方式，并具体确定哪些部分执行时间最长，以便你可以针对它们采取行动并提高其性能。这两个工具相互补充，使我们能够在检测到问题后修复和改进不同类型的问题。'
- en: In this section, we will also talk about the challenge of making changes while
    the system is in operation. The only constant in software is change, and balancing
    existing systems with new functionalities is a critical ability. Part of this
    task is to coordinate between different teams so they are aware of the implications
    of their changes and can work as a single unit.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们还将讨论在系统运行时进行更改的挑战。软件中唯一不变的是变化，平衡现有系统与新功能是一个关键能力。这项任务的一部分是协调不同团队，使他们了解他们更改的影响，并作为一个单一单位工作。
- en: 'This section comprises of the following chapters:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括以下章节：
- en: Logging
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 记录
- en: Metrics
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指标
- en: Profiling
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 性能分析
- en: Debugging
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试
- en: Ongoing architecture
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 持续架构
- en: We will start by understanding how to use logs for monitoring.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先了解如何使用日志进行监控。
