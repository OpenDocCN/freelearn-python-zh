- en: Review in “Subprograms”
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Review Crossword Puzzle
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 1)Solve the following crossword puzzle.
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](img/review07-01.png)'
  prefs: []
  type: TYPE_IMG
- en: Across
  prefs: []
  type: TYPE_NORMAL
- en: 1) A function may contain an argument list called a ________ argument list.
  prefs: []
  type: TYPE_NORMAL
- en: 4) Generally speaking, this subprogram returns a result.
  prefs: []
  type: TYPE_NORMAL
- en: 7) In this kind of programming, a problem is subdivided into smaller subproblems.
  prefs: []
  type: TYPE_NORMAL
- en: 10) A sequence of numbers where the first two numbers are 0 and 1, and each
    subsequent number is the sum of the previous two.
  prefs: []
  type: TYPE_NORMAL
- en: 11) In this kind of programming, subprograms of common functionality are grouped
    together into separate modules.
  prefs: []
  type: TYPE_NORMAL
- en: 12) Send a value to a function.
  prefs: []
  type: TYPE_NORMAL
- en: 13) Lists in Python are passed by __________.
  prefs: []
  type: TYPE_NORMAL
- en: Down
  prefs: []
  type: TYPE_NORMAL
- en: 2) A programming technique in which a subprogram calls itself.
  prefs: []
  type: TYPE_NORMAL
- en: 3) A block of statements packaged as a unit that performs a specific task.
  prefs: []
  type: TYPE_NORMAL
- en: 5) Generally speaking, this subprogram returns no result.
  prefs: []
  type: TYPE_NORMAL
- en: 6) When a subprogram is called, the passed argument list is called an _______
    argument list.
  prefs: []
  type: TYPE_NORMAL
- en: 8) It refers to the range of effect of a variable.
  prefs: []
  type: TYPE_NORMAL
- en: 9) The principle which states that most systems work best if they are kept simple,
    avoiding any unnecessary complexity!
  prefs: []
  type: TYPE_NORMAL
- en: Review Questions
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Answer the following questions.
  prefs: []
  type: TYPE_NORMAL
- en: 1)What is a subprogram? Name some built-in subprograms of Python.
  prefs: []
  type: TYPE_NORMAL
- en: 2)What is procedural programming?
  prefs: []
  type: TYPE_NORMAL
- en: 3)What are the advantages of procedural programming?
  prefs: []
  type: TYPE_NORMAL
- en: 4)What is modular programming? Name one module of Python you know.
  prefs: []
  type: TYPE_NORMAL
- en: 5)What is the general form of a Python function?
  prefs: []
  type: TYPE_NORMAL
- en: 6)How do you make a call to a function?
  prefs: []
  type: TYPE_NORMAL
- en: 7)Describe the steps that are performed when the main code makes a call to a
    function.
  prefs: []
  type: TYPE_NORMAL
- en: 8)What is a void function?
  prefs: []
  type: TYPE_NORMAL
- en: 9)What is the general form of a Python void function?
  prefs: []
  type: TYPE_NORMAL
- en: 10)How do you make a call to a void function?
  prefs: []
  type: TYPE_NORMAL
- en: 11)Describe the steps that are performed when the main code makes a call to
    a void function.
  prefs: []
  type: TYPE_NORMAL
- en: 12)What is the difference between a function and a void function?
  prefs: []
  type: TYPE_NORMAL
- en: 13)What is the formal argument list?
  prefs: []
  type: TYPE_NORMAL
- en: 14)What is the actual argument list?
  prefs: []
  type: TYPE_NORMAL
- en: 15)Can two subprograms use variables of the same name?
  prefs: []
  type: TYPE_NORMAL
- en: 16)How long does a subprogram's variable “live” in main memory?
  prefs: []
  type: TYPE_NORMAL
- en: 17)How long does a main code's variable “live” in main memory?
  prefs: []
  type: TYPE_NORMAL
- en: 18)Can a subprogram call another subprogram? If yes, give some examples.
  prefs: []
  type: TYPE_NORMAL
- en: 19)What does it mean to “pass an argument by value”?
  prefs: []
  type: TYPE_NORMAL
- en: 20)What does it mean to “pass an argument by reference”?
  prefs: []
  type: TYPE_NORMAL
- en: 21)What is an optional argument?
  prefs: []
  type: TYPE_NORMAL
- en: 22)What is meant by the term “scope” of a variable?
  prefs: []
  type: TYPE_NORMAL
- en: 23)What happens when a variable has a local scope?
  prefs: []
  type: TYPE_NORMAL
- en: 24)What happens when a variable has a global scope?
  prefs: []
  type: TYPE_NORMAL
- en: 25)What is the difference between a local and a global variable?
  prefs: []
  type: TYPE_NORMAL
- en: 26)What is recursion?
  prefs: []
  type: TYPE_NORMAL
- en: 27)What are the three rules that all recursive algorithms must follow?
  prefs: []
  type: TYPE_NORMAL
