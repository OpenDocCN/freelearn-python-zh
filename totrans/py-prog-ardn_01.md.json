["```py\n$ python -V\n\n```", "```py\n$ sudo apt-get update && sudo apt-get --only-upgrade install python\n\n```", "```py\n$ sudo add-apt-repository ppa:fkrull/deadsnakes\n$ sudo apt-get update\n$ sudo apt-get install python2.7\n\n```", "```py\n$ sudo yum upgrade python\n\n```", "```py\nTests-Mac:~ test$ python\nPython 2.7.5 (default, Aug 25 2013, 00:04:04)\n[GCC 4.2.1 Compatible Apple LLVM 5.0 (clang-500.0.68)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>>\n\n```", "```py\n$ sudo apt-get install python-setuptools\n\n```", "```py\n$ sudo yum install python-setuptools\n\n```", "```py\n$ wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | sudo python\n\n```", "```py\n> python ez_setup.py\n\n```", "```py\n    $ sudo python ez_setup.py\n\n    ```", "```py\n    $ brew install wget\n\n    ```", "```py\n    $ wget https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -O - | python\n\n    ```", "```py\n    ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n    ```", "```py\n$ sudo easy_install pip\n\n```", "```py\n> easy_install.exe pip\n\n```", "```py\n$ sudo easy_install --upgrade pip\n\n```", "```py\n$ easy_install PackageName\n\n```", "```py\n$ pip install PackageName\n\n```", "```py\n$ easy_install \"PackageName==version\"\n\n```", "```py\n$ easy_install \"PackageName > version\"\n\n```", "```py\n$ pip install PackageName==version\n$ pip install \"PackageName>=version\"\n\n```", "```py\n$ pip install \"PackageName>=0.1,<=0.3\"\n\n```", "```py\n$ easy_install --upgrade PackageName\n$ pip install --upgrade PackageName\n\n```", "```py\n$ easy_install -mxN PackageName\n\n```", "```py\n$ pip uninstall PackageName\n\n```", "```py\n>>> # Fundamental of Python\n>>> # My first comment\n>>> name = \"John\" # This is my name\n>>> print name\nJohn\n\n```", "```py\n>>> 2 + 2\n4\n>>> (2*3) + 1\n7\n>>> (2*3) / 5\n1\n\n```", "```py\n>>> weight = height = 5\n>>> weight * height\n25\n>>> type(weight)\n<type 'int'>\n\n```", "```py\n>>> length = 6.0\n>>> weight * height * length\n150.0\n>>> type(length)\n<type 'float'>\n\n```", "```py\n>>> val = 2.0 + 3.9j\n>>> val.real\n2.0\n>>> val.imag\n3.9\n\n```", "```py\n>>> abs(val)\n4.382921400162225\n>>> round(val.imag)\n4.0\n\n```", "```py\n>>> s1 = \"Hello\"\n>>> s2 = \"World!\"\n>>> s1 + s2\n'HelloWorld!'\n>>> s1 + \" \" + s2\n'Hello World!'\n\n```", "```py\n>>> s1[0]\n'H'\n>>> s1[:2]\n'He'\n>>> s1 + s2[5:]\n'Hello!'\n\n```", "```py\n>>> age = 14\n>>> if age > 10 or age < 20:\n...  print \"teen\"\n\nteen\n\n```", "```py\n>>> myList = ['a', 2, 'b', 12.0, 5, 2]\n>>> myList\n['a', 2, 'b', 12.0, 5, 2]\n\n```", "```py\n    >>> myList[0]\n    'a'\n\n    ```", "```py\n    >>> myList[:]\n    ['a', 2, 'b', 12.0, 5, 2]\n\n    ```", "```py\n    >>> myList[1:5]\n    [2, 'b', 12.0, 5]\n\n    ```", "```py\n    >>> myList[1:-1]\n    [2, 'b', 12.0, 5]\n\n    ```", "```py\n    >>> myList[0:5:2]\n    ['a', 'b', 5]\n\n    ```", "```py\n    >>> len(myList)\n    6\n\n    ```", "```py\n    >>> myList.append(10)\n    >>> myList\n    ['a', 2, 'b', 12.0, 5, 2, 10]\n\n    ```", "```py\n    >>> myList.insert(5,'hello')\n    >>> myList\n    ['a', 2, 'b', 12.0, 5, 'hello', 2, 10]\n\n    ```", "```py\n    >>> myList.pop()\n    10\n    >>> myList\n    ['a', 2, 'b', 12.0, 5, 'hello', 2]\n    >>> myList.pop(5)\n    'hello'\n    >>> myList\n    ['a', 2, 'b', 12.0, 5, 2]\n\n    ```", "```py\n>>> tupleA = 1, 2, 3\n>>> tupleA\n(1, 2, 3)\n>>> tupleB = (1, 'a', 3)\n>>> tupleB\n(1, 'a', 3)\n\n```", "```py\n>>> tupleB[1]\n'a'\n\n```", "```py\n>>> listA = [1, 2, 3, 1, 5, 2]\n>>> setA = set(listA)\n>>> setA\nset([1, 2, 3, 5])\n\n```", "```py\n>>> boards = {'uno':328,'mega':2560,'lily':'128'}\n>>> boards['lily']\n'128'\n>>> boards.keys()\n['lily', 'mega', 'uno']\n\n```", "```py\n>>> age = 14\n>>> if age < 18 and age > 12:\n print \"Teen\"\nelif age < 13:\n print \"Child\"\nelse:\n print \"Adult\"\n\n```", "```py\n>>> celsius = [13, 21, 23, 8]\n>>> for c in celsius:\n print \" Fahrenheit: \"+ str((c * 1.8) + 32)\n\n```", "```py\nFahrenheit: 55.4\nFahrenheit: 69.8\nFahrenheit: 73.4\nFahrenheit: 46.4\n\n```", "```py\n>>> count = 5\n>>> while (count > 0):\n print count\n count = count - 1\n\n```", "```py\n>>> a = 'a'\n>>> int(a,base=16)\n10\n>>> i = 1\n>>> str(i)\n'1'\n\n```", "```py\n>>> list = [1.12, 2, 2.34, 4.78]\n>>> min(list)\n1.12\n>>> max(list)\n4.78\n\n```", "```py\n>>> pow(3.14159, 2)\n9.869587728099999\n\n```", "```py\n    >>> str = \"Hello World!\"\n    >>> str.replace(\"World\", \"Universe\")\n    'Hello Universe!'\n\n    ```", "```py\n    >>> str = \"Hello World!\"\n    >>> str.split()\n    ['Hello', 'World!']\n\n    ```", "```py\n    >>> str2 = \"John, Merry, Tom\"\n    >>> str2.split(\",\")\n    ['John', ' Merry', ' Tom']\n\n    ```", "```py\n    >>> str = \"Hello World!\"\n    >>> str.upper()\n    'HELLO WORLD!'\n    >>> str.lower()\n    'hello world!'\n\n    ```", "```py\n$ sudo apt-get update && sudo apt-get install arduino arduino-core\n\n```", "```py\n$ sudo yum install arduino\n\n```", "```py\n/*\n  Blink\n  Turns on an LED on for one second, then off for one second, repeatedly.\n\n  This example code is in the public domain.\n */\n\n// Pin 13 has an LED connected on most Arduino boards.\n// give it a name:\nint led = 13;\n\n// the setup routine runs once when you press reset:\nvoid setup() {\n  // initialize the digital pin as an output.\n  pinMode(led, OUTPUT);\n}\n\n// the loop routine runs over and over again forever:\nvoid loop() {\n  digitalWrite(led, HIGH);   // turn the LED on (HIGH is the voltage level)\n  delay(1000);               // wait for a second\n  digitalWrite(led, LOW);    // turn the LED off by making the voltage LOW\n  delay(1000);               // wait for a second\n}\n```", "```py\n$ sudo usermod -a -G uucp, dialout, lock <username>\n\n```", "```py\n    /* This is a comment.\n    *  Arduino will ignore any text till it finds until the ending comment syntax, which is,\n    */\n    ```", "```py\n    // This syntax only applies to one line.\n    // You have to use it again for each next line of comment.\n    int pin = 13;     //Selected pin 13\n    ```", "```py\n//TODO: explain variables next.\n```", "```py\nint pin = 10;\n```", "```py\n    void setup() {\n    // actions\n    }\n    ```", "```py\n    boolean ledState = false;\n    ```", "```py\n    byte b = 0xFF;\n    ```", "```py\n    int varInt = 2147483647;\n    long varLong = varInt;\n    short varShort = -32768;\n    ```", "```py\n    float varFloat = 1.111;\n    ```", "```py\n    char myCharacater = 'P';\n    ```", "```py\n    int myIntArray[] = {1, 2, 3, 4, 5};\n    int tempValues[5] = { 32, 55, 72, 75};\n    char msgArray[10] = \"hello!\";\n    ```", "```py\n    myIntArray[0] == 1\n    msgArray[2] == 'e'\n    ```", "```py\nint myInt = 10;\nfloat myfloat = float(myInt);\n```", "```py\nvoid blinkLED(){\n// action A;\n// action B;\n}\n```", "```py\nvoid setup() {\n  // initialize the digital pin as an output.\n  pinMode(led, OUTPUT);\n}\n```", "```py\nvoid loop() {\n  digitalWrite(led, HIGH);\n  delay(1000);\n  digitalWrite(led, LOW);\n  delay(1000);\n}\n```", "```py\npinMode(led, OUTPUT)\n```", "```py\n    digitalWrite(13, HIGH);\n    ```", "```py\n    value = digitalRead(13);\n    ```", "```py\n    value = analogRead(0);\n    ```"]