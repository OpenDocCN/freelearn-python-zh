["```py\n    PS C:\\Projects\\Packt\\Repo> pip uninstall django\n    PS C:\\Projects\\Packt\\Repo> pip install django==4.0\n    ```", "```py\n    PS C:\\Projects\\Packt\\Repo> python -m django startproject becoming_a_django_entdev\n    ```", "```py\nPS C:\\Projects\\Packt\\Repo> django-admin startproject becoming_a_django_entdev\n```", "```py\nPS C:\\Projects\\Packt\\Repo> python -m django startproject becoming_a_django_entdev ./\n```", "```py\n# ././requirements.txt in Root Directory\n```", "```py\n# Path to Visual Studio requirements.txt below\n```", "```py\n-r becoming_a_django_entdev/requirements.txt\n```", "```py\n# requirements.txt\n```", "```py\ndjango~=4.0\n```", "```py\ndjango-extensions\n```", "```py\ndjango-heroku\n```", "```py\ndj-database-url\n```", "```py\ngunicorn\n```", "```py\npython-dotenv\n```", "```py\npydotplus\n```", "```py\npsycopg2\n```", "```py\npsycopg2-binary==2.8.6\n```", "```py\nwhitenoise\n```", "```py\nsecret-key-generator\n```", "```py\n    PS C:\\Projects\\Packt\\Repo> cd becoming_a_django_entdev\n    ```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> python -m venv virtual_env\n    ```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> virtual_env/Scripts/activate\n    ```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> pip install -r requirements.txt\n    ```", "```py\nPS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> pip install virtualenv\nPS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> virtualenv virtual_env\n```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> virtual_env/Scripts/activate\n    ```", "```py\n    PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev> source virtual_env/bin/activate\n    ```", "```py\n(virtual_env) PS C:\\Projects\\Packt\\Repo\\becoming_a_django_entdev>\n```", "```py\n(virtual_env) PS > python manage.py runserver\n```", "```py\nWatching for file changes with StatReloader\nPerforming system checks...\nSystem check identified no issues (0 silenced).\nDjango version 2.2.24, using settings 'becoming_a_django_entdev.settings'\nStarting development server at http://127.0.0.1:8000/\nQuit the server with CTRL-BREAK.\n```", "```py\n(virtual_env) PS > python manage.py runserver 8000\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    import os\n    import posixpath\n    import django_heroku\n    import dj_database_url\n    import dotenv\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n...\ndjango_heroku.settings(locals())\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    ALLOWED_HOSTS = [\n        'your-domain.com',\n        'www.your-domain.com',\n        'dev.your-domain.com',\n        'staging.your-domain.com',\n        'becoming-an-entdev.herokuapp.com',\n        'mighty-sea-09431.herokuapp.com',\n        'pure-atoll-19670.herokuapp.com',\n    ]\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n...\nALLOWED_HOSTS = [\n    '*',\n    '.your-domain.com',\n]\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'\n    ```", "```py\n    (virtual_env) PS > echo 'DATABASE_URL=sqlite:///db.sqlite3' > .env\n    ```", "```py\n    # /becoming_a_django_entdev/.env\n    DATABASE_URL = sqlite:///db.sqlite3\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    import dotenv\n    BASE_DIR = os.path.dirname(\n        os.path.dirname(os.path.abspath(__file__))\n    )\n    dotenv_file = os.path.join(BASE_DIR, \".env\")\n    if os.path.isfile(dotenv_file):\n        dotenv.load_dotenv(dotenv_file)\n    SECRET_KEY = os.getenv('SECRET_KEY')\n    ```", "```py\n    # /becoming_a_django_entdev/.env\n    ...\n    SECRET_KEY = my_randomly_generated_key\n    ```", "```py\n(virtual_env) PS > heroku login\n(virtual_env) PS > heroku config:add SECRET_KEY=my_randomly_generated_key --app becoming-an-entdev\n(virtual_env) PS > heroku config:add SECRET_KEY=my_randomly_generated_key --app mighty-sea-09431\n(virtual_env) PS > heroku config:add SECRET_KEY=my_randomly_generated_key --app pure-atoll-19670\n```", "```py\n# ./Procfile in Root of Repository\n```", "```py\nweb: gunicorn becoming_a_django_entdev.wsgi\n```", "```py\n# ./Procfile in Root of Repository\n```", "```py\nweb: sh -c 'cd ./becoming_a_django_entdev/ && exec gunicorn becoming_a_django_entdev.wsgi --log-file -'\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    MIDDLEWARE = [\n        ...,\n        'whitenoise.middleware.WhiteNoiseMiddleware',\n    ]\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\n    STATIC_URL = '/staticfiles/'\n    STATIC_ROOT = posixpath.join(\n        *(BASE_DIR.split(os.path.sep) + ['staticfiles'])\n    )\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n…\n```", "```py\nMEDIA_URL = '/media/'\n```", "```py\nMEDIA_ROOT = posixpath.join(\n```", "```py\n    *(BASE_DIR.split(os.path.sep) ['media'])\n```", "```py\n)\n```", "```py\n# ./.gitignore in Root of Repository\n```", "```py\n# Keep Rule\n```", "```py\n!gitkeep.txt\n```", "```py\n# Django #\n```", "```py\ndb.sqlite3\n```", "```py\n*.log\n```", "```py\n*.pyc\n```", "```py\n__pycache__\n```", "```py\n# Media – User Generated Content #\n```", "```py\nmedia/\n```", "```py\n# Environments #\n```", "```py\n.env\n```", "```py\nvirtual_env/\n```", "```py\n# Visual Studio and Visual Studio Code #\n```", "```py\n*.suo\n```", "```py\n*.pyproj\n```", "```py\n*.pyproj.user\n```", "```py\n*.history\n```", "```py\n.vs/\n```", "```py\nobj/\n```", "```py\n# Heroku\n```", "```py\nstaticfiles/\n```", "```py\n(virtual_env) PS > mkdir becoming_a_django_entdev/chapter_2\n(virtual_env) PS > python manage.py startapp chapter_2 becoming_a_django_entdev/chapter_2\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    INSTALLED_APPS = [\n        ...\n     'django_extensions',\n      'becoming_a_django_entdev.chapter_2',\n    ]\n    DEFAULT_AUTO_FIELD'= 'django.db.models.AutoField'\n    ```", "```py\n    # /becoming_a_django_entdev/chapter_2/apps.py\n    from django.apps import AppConfig\n    class chapter_2Config(AppConfig):\n        name= 'becoming_a_django_entdev.chapter_2'\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n...\n```", "```py\nDATABASES = {\n```", "```py\n    'default': {\n```", "```py\n        'ENGINE': 'django.db.backends.sqlite3',\n```", "```py\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n```", "```py\n    }\n```", "```py\n}\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.mysql', \n            'NAME': 'database_name',\n            'USER': 'database_user',\n            'PASSWORD': 'database_password',\n            'HOST': 'localhost',\n            'PORT': '3306',\n        }\n    }\n    ```", "```py\n    # requirements.txt\n    ...\n    Mysqlclient\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DATABASES = {\n        'default': {\n            'ENGINE': 'django.db.backends.oracle',\n            'NAME': 'xe',\n            'USER': 'database_user',\n            'PASSWORD': 'database_password,\n            'HOST': 'database_host',\n            'PORT': 'database_port_#',\n        }\n    }\n    ```", "```py\n    # requirements.txt\n    ...\n    cx_Oracle\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DATABASES = {\n        'default': {\n            'ENGINE': 'sql_server.pyodbc',\n            'NAME': 'database_name',\n            'USER': 'database_user',\n            'PASSWORD': 'database_password',\n            'HOST': 'database_host',\n            'PORT': '1433',\n            'OPTIONS': {\n                'driver': 'ODBC Driver 17 for SQL Server',\n            },\n        }\n    }\n    ```", "```py\n    # requirements.txt\n    ...\n    pyodbc\n    django-pyodbc\n    django-pyodbc-azure\n    ```", "```py\n# /becoming_a_django_entdev/settings.py\n```", "```py\n…\n```", "```py\nDATABASES = {\n```", "```py\n '  'defa'lt': {\n```", "```py\n     '  'ENG'NE': 'django.db.backends.postgre'ql',\n```", "```py\n     '  'N'ME': 'database_n'me',\n```", "```py\n     '  'H'ST': 'localh'st',\n```", "```py\n     '  'U'ER': 'database_u'er',\n```", "```py\n     '  'PASSW'RD': 'database_passw'rd',\n```", "```py\n     '  'P'RT': '5'32',\n```", "```py\n    }\n```", "```py\n}\n```", "```py\n# .env\n```", "```py\nDATABASE_URL=postgres://postgres:your_password@localhost:5432/local_postgresql\n```", "```py\n(virtual_env) PS > heroku login\n(virtual_env) PS > heroku addons:create heroku-postgresql:hobby-dev\n(virtual_env) PS > heroku addons:create heroku-postgresql:hobby-dev --app mighty-sea-09431\n(virtual_env) PS > heroku addons:create heroku-postgresql:hobby-dev --app pure-atoll-19670\n```", "```py\n(virtual_env) PS > heroku addons:create heroku-postgresql:hobby-dev --version=10\n```", "```py\n(virtual_env) PS > heroku config --app becoming_an_entdev\n(virtual_env) PS > heroku config --app mighty-sea-09431\n(virtual_env) PS > heroku config --app pure-atoll-19670\n```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    DATABASES = {\n        'default': dj_database_url.config(\n            conn_max_age=600\n        )\n    }\n    ```", "```py\n    # /becoming_a_django_entdev/settings.py\n    ...\n    django_heroku.settings(locals())\n    options = DATABASES['default'].get('OPTIONS', {})\n    options.pop('sslmode', None)\n    ```", "```py\n(virtual_env) PS > python manage.py makemigrations\n(virtual_env) PS > python manage.py migrate\n```", "```py\n(virtual_env) PS > python manage.py createsuperuser\n```", "```py\n    (virtual_env) PS > heroku login\n    (virtual_env) PS > heroku run bash --app becoming-an-entdev\n    (virtual_env) PS > heroku run bash --app mighty-sea-09431\n    (virtual_env) PS > heroku run bash --app pure-atoll-19670\n    ```", "```py\n    $ cd becoming_a_django_entdev\n    $ python manage.py makemigrations\n    $ python manage.py migrate\n    ```", "```py\n    (virtual_env) PS > heroku login\n    (virtual_env) PS > PGUSER=postgres PGPASSWORD=password heroku pg:push local_postgresql postgresql-tetrahedral-62413 --app mighty-sea-09431\n    ```", "```py\n(virtual_env) PS > heroku login\n(virtual_env) PS > set PGHOST=localhost\n(virtual_env) PS > set PGUSER=postgres\n(virtual_env) PS > set PGPASSWORD=password\n(virtual_env) PS > set PGPORT=5432\n(virtual_env) PS > heroku pg:push local_postgresql postgresql-tetrahedral-62413 --app mighty-sea-09431\n```", "```py\n(virtual_env) PS > heroku pg:pull local_postgresql postgresql-tetrahedral-62413 --app mighty-sea-09431\n```"]