["```py\nmkdir env\npython -m venv env/bookmarks \n```", "```py\nsource env/bookmarks/bin/activate \n```", "```py\n.\\env\\bookmarks\\Scripts\\activate \n```", "```py\n(bookmarks)laptop:~ zenx$ \n```", "```py\npython -m pip install Django~=5.0.4 \n```", "```py\ndjango-admin startproject bookmarks \n```", "```py\ncd bookmarks/\ndjango-admin startapp account \n```", "```py\nINSTALLED_APPS = [\n**'account.apps.AccountConfig'****,**\n'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n] \n```", "```py\npython manage.py migrate \n```", "```py\nfrom django import forms\nclass LoginForm(forms.Form):\n    username = forms.CharField()\n    password = forms.CharField(widget=forms.PasswordInput) \n```", "```py\nfrom django.contrib.auth import authenticate, login\nfrom django.http import HttpResponse\nfrom django.shortcuts import render\nfrom .forms import LoginForm\ndef user_login(request):\n    if request.method == 'POST':\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            cd = form.cleaned_data\n            user = authenticate(\n                request,\n                username=cd['username'],\n                password=cd['password']\n            )\n            if user is not None:\n                if user.is_active:\n                    login(request, user)\n                    return HttpResponse('Authenticated successfully')\n                else:\n                    return HttpResponse('Disabled account')\n            else:\n                return HttpResponse('Invalid login')\n    else:\n        form = LoginForm()\n    return render(request, 'account/login.html', {'form': form}) \n```", "```py\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n    path('login/', views.user_login, name='login'),\n] \n```", "```py\nfrom django.contrib import admin\nfrom django.urls import **include,** path\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    **path(****'account/'****, include(****'account.urls'****)),**\n] \n```", "```py\ntemplates/\n    account/\n        login.html\n    base.html \n```", "```py\n{% load static %}\n<!DOCTYPE html>\n<html>\n<head>\n<title>{% block title %}{% endblock %}</title>\n<link href=\"{% static \"css/base.css\" %}\" rel=\"stylesheet\">\n</head>\n<body>\n<div id=\"header\">\n<span class=\"logo\">Bookmarks</span>\n</div>\n<div id=\"content\">\n    {% block content %}\n    {% endblock %}\n  </div>\n</body>\n</html> \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Log-in{% endblock %}\n{% block content %}\n  <h1>Log-in</h1>\n<p>Please, use the following form to log-in:</p>\n<form method=\"post\">\n    {{ form.as_p }}\n    {% csrf_token %}\n    <p><input type=\"submit\" value=\"Log in\"></p>\n</form>\n{% endblock %} \n```", "```py\npython manage.py createsuperuser \n```", "```py\nUsername (leave blank to use 'admin'): admin\nEmail address: admin@admin.com\nPassword: ********\nPassword (again): ******** \n```", "```py\nSuperuser created successfully. \n```", "```py\npython manage.py runserver \n```", "```py\n**from** **django.contrib.auth** **import** **views** **as** **auth_views**\nfrom django.urls import path\nfrom . import views\nurlpatterns = [\n**# previous login url**\n**#** path('login/', views.user_login, name='login'),\n**# login / logout urls**\n **path(****'login/'****, auth_views.LoginView.as_view(), name=****'login'****),**\n **path(****'logout/'****, auth_views.LogoutView.as_view(), name=****'logout'****),**\n] \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Log-in{% endblock %}\n{% block content %}\n  <h1>Log-in</h1>\n  {% if form.errors %}\n    <p>\n      Your username and password didn't match.\n      Please try again.\n    </p>\n  {% else %}\n    <p>Please, use the following form to log-in:</p>\n  {% endif %}\n  <div class=\"login-form\">\n<form action=\"{% url 'login' %}\" method=\"post\">\n      {{ form.as_p }}\n      {% csrf_token %}\n      <input type=\"hidden\" name=\"next\" value=\"{{ next }}\" />\n<p><input type=\"submit\" value=\"Log-in\"></p>\n</form>\n</div>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Logged out{% endblock %}\n{% block content %}\n  <h1>Logged out</h1>\n<p>\n    You have been successfully logged out.\n    You can <a href=\"{% url \"login\" %}\">log-in again</a>.\n  </p>\n{% endblock %} \n```", "```py\nfrom django.contrib.auth.decorators import login_required\n@login_required\ndef dashboard(request):\n    return render(\n request,\n 'account/dashboard.html',\n {'section': 'dashboard'}\n ) \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Dashboard{% endblock %}\n{% block content %}\n  <h1>Dashboard</h1>\n<p>Welcome to your dashboard.</p>\n{% endblock %} \n```", "```py\nurlpatterns = [\n    # previous login url\n# path('login/', views.user_login, name='login'),\n# login / logout urls\n    path('login/', auth_views.LoginView.as_view(), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n **path(****''****, views.dashboard, name=****'dashboard'****),**\n] \n```", "```py\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL = 'login'\nLOGOUT_URL = 'logout' \n```", "```py\n{% load static %}\n<!DOCTYPE html>\n<html>\n<head>\n<title>{% block title %}{% endblock %}</title>\n<link href=\"{% static \"css/base.css\" %}\" rel=\"stylesheet\">\n</head>\n<body>\n<div id=\"header\">\n<span class=\"logo\">Bookmarks</span>\n **{% if request.user.is_authenticated %}**\n**<****ul****class****=****\"menu\"****>**\n**<****li** **{%** **if****section** **==** **\"dashboard\"** **%}****class****=****\"selected\"****{%** **endif** **%}>**\n**<****a****href****=****\"{% url \"****dashboard****\" %}\">****My dashboard****</****a****>**\n**</****li****>**\n**<****li** **{%** **if****section** **==** **\"images\"** **%}****class****=****\"selected\"****{%** **endif** **%}>**\n**<****a****href****=****\"#\"****>****Images****</****a****>**\n**</****li****>**\n**<****li** **{%** **if****section** **==** **\"people\"** **%}****class****=****\"selected\"****{%** **endif** **%}>**\n**<****a****href****=****\"#\"****>****People****</****a****>**\n**</****li****>**\n**</****ul****>**\n **{% endif %}**\n**<****span****class****=****\"user\"****>**\n **{% if request.user.is_authenticated %}**\n **Hello {{ request.user.first_name|default:request.user.username }},**\n**<****form****action****=****\"{% url \"****logout****\" %}\"** **method****=****\"post\"****>**\n**<****button****type****=****\"submit\"****>****Logout****</****button****>**\n **{% csrf_token %}**\n**</****form****>**\n **{% else %}**\n**<****a****href****=****\"{% url \"****login****\" %}\">****Log-in****</****a****>**\n **{% endif %}**\n**</****span****>**\n</div>\n<div id=\"content\">\n    {% block content %}\n    {% endblock %}\n  </div>\n</body>\n</html> \n```", "```py\nurlpatterns = [\n    # previous login url\n# path('login/', views.user_login, name='login'),\n# login / logout urls\n    path('login/', auth_views.LoginView.as_view(), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n**# change password urls**\n **path(**\n**'password-change/'****,**\n **auth_views.PasswordChangeView.as_view(),**\n **name=****'password_change'**\n **),**\n **path(**\n**'password-change/done/'****,**\n **auth_views.PasswordChangeDoneView.as_view(),**\n **name=****'password_change_done'**\n **),**\n    path('', views.dashboard, name='dashboard'),\n] \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Change your password{% endblock %}\n{% block content %}\n  <h1>Change your password</h1>\n<p>Use the form below to change your password.</p>\n<form method=\"post\">\n    {{ form.as_p }}\n    <p><input type=\"submit\" value=\"Change\"></p>\n    {% csrf_token %}\n  </form>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Password changed{% endblock %}\n{% block content %}\n  <h1>Password changed</h1>\n<p>Your password has been successfully changed.</p>\n{% endblock %} \n```", "```py\nurlpatterns = [\n    # previous login url\n# path('login/', views.user_login, name='login'),\n# login / logout urls\n    path('login/', auth_views.LoginView.as_view(), name='login'),\n    path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n\n    # change password urls\n    path(\n        'password-change/',\n        auth_views.PasswordChangeView.as_view(),\n        name='password_change'\n ),\n    path(\n        'password-change/done/',\n        auth_views.PasswordChangeDoneView.as_view(),\n        name='password_change_done'\n ),\n**# reset password urls**\n **path(**\n**'password-reset/'****,**\n **auth_views.PasswordResetView.as_view(),**\n **name=****'password_reset'**\n **),**\n **path(**\n**'password-reset/done/'****,**\n **auth_views.PasswordResetDoneView.as_view(),**\n **name=****'password_reset_done'**\n **),**\n **path(**\n**'****password-reset/<uidb64>/<token>/'****,**\n **auth_views.PasswordResetConfirmView.as_view(),**\n **name=****'password_reset_confirm'**\n **),**\n **path(****'password-reset/complete/'****,**\n **auth_views.PasswordResetCompleteView.as_view(),**\n **name=****'password_reset_complete'**\n **),**\n    path('', views.dashboard, name='dashboard'),\n] \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Reset your password{% endblock %}\n{% block content %}\n  <h1>Forgotten your password?</h1>\n<p>Enter your e-mail address to obtain a new password.</p>\n<form method=\"post\">\n    {{ form.as_p }}\n    <p><input type=\"submit\" value=\"Send e-mail\"></p>\n    {% csrf_token %}\n  </form>\n{% endblock %} \n```", "```py\nSomeone asked for password reset for email {{ email }}. Follow the link below:\n{{ protocol }}://{{ domain }}{% url \"password_reset_confirm\" uidb64=uid token=token %}\nYour username, in case you've forgotten: {{ user.get_username }} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Reset your password{% endblock %}\n{% block content %}\n  <h1>Reset your password</h1>\n<p>We've emailed you instructions for setting your password.</p>\n<p>If you don't receive an email, please make sure you've entered the address you registered with.</p>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Reset your password{% endblock %}\n{% block content %}\n  <h1>Reset your password</h1>\n  {% if validlink %}\n    <p>Please enter your new password twice:</p>\n<form method=\"post\">\n      {{ form.as_p }}\n      {% csrf_token %}\n      <p><input type=\"submit\" value=\"Change my password\" /></p>\n</form>\n  {% else %}\n    <p>The password reset link was invalid, possibly because it has already been used. Please request a new password reset.</p>\n  {% endif %}\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Password reset{% endblock %}\n{% block content %}\n  <h1>Password set</h1>\n<p>Your password has been set. You can <a href=\"{% url \"login\" %}\">log in now</a></p>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Log-in{% endblock %}\n{% block content %}\n  <h1>Log-in</h1>\n  {% if form.errors %}\n    <p>\n      Your username and password didn't match.\n      Please try again.\n    </p>\n  {% else %}\n    <p>Please, use the following form to log-in:</p>\n  {% endif %}\n  <div class=\"login-form\">\n<form action=\"{% url 'login' %}\" method=\"post\">\n      {{ form.as_p }}\n      {% csrf_token %}\n      <input type=\"hidden\" name=\"next\" value=\"{{ next }}\" />\n<p><input type=\"submit\" value=\"Log-in\"></p>\n</form>\n**<****p****>**\n**<****a****href****=****\"{% url \"****password_reset****\" %}\">**\n **Forgotten your password?**\n**</****a****>**\n**</****p****>**\n</div>\n{% endblock %} \n```", "```py\nEMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend' \n```", "```py\nContent-Type: text/plain; charset=\"utf-8\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nSubject: Password reset on 127.0.0.1:8000\nFrom: webmaster@localhost\nTo: test@gmail.com\nDate: Mon, 10 Jan 2024 19:05:18 -0000\nMessage-ID: <162896791878.58862.14771487060402279558@MBP-amele.local>\nSomeone asked for password reset for email test@gmail.com. Follow the link below:\nhttp://127.0.0.1:8000/account/password-reset/MQ/ardx0u-b4973cfa2c70d652a190e79054bc479a/\nYour username, in case you've forgotten: test \n```", "```py\nfrom django.urls import **include,** path\nfrom django.contrib.auth import views as auth_views\nfrom . import views\nurlpatterns = [\n    # previous login view\n# path('login/', views.user_login, name='login'),\n**#** path('login/', auth_views.LoginView.as_view(), name='login'),\n**#** path('logout/', auth_views.LogoutView.as_view(), name='logout'),\n# change password urls\n**#** path(\n**#**     'password-change/',\n**#**     auth_views.PasswordChangeView.as_view(),\n**#**     name='password_change'\n**#** ),\n**#** path(\n**#**     'password-change/done/',\n**#**     auth_views.PasswordChangeDoneView.as_view(),\n**#**     name='password_change_done'\n**#** ),\n# reset password urls\n**#** path(\n**#**     'password-reset/',\n**#**     auth_views.PasswordResetView.as_view(),\n**#**     name='password_reset'\n**#** ),\n**#** path(\n**#**     'password-reset/done/',\n**#**     auth_views.PasswordResetDoneView.as_view(),\n**#**     name='password_reset_done'\n**#** ),\n**#** path(\n**#**     'password-reset/<uidb64>/<token>/',\n**#**     auth_views.PasswordResetConfirmView.as_view(),\n**#**     name='password_reset_confirm'\n**#** ),\n**#** path(\n**#**     'password-reset/complete/',\n**#**     auth_views.PasswordResetCompleteView.as_view(),\n**#**     name='password_reset_complete'\n**#** ),\n**path(****''****, include(****'django.contrib.auth.urls'****)),**\n    path('', views.dashboard, name='dashboard'),\n] \n```", "```py\nfrom django import forms\n**from** **django.contrib.auth** **import** **get_user_model**\nclass LoginForm(forms.Form):\n    username = forms.CharField()\n    password = forms.CharField(widget=forms.PasswordInput)\n**class****UserRegistrationForm****(forms.ModelForm):**\n **password = forms.CharField(**\n **label=****'Password'****,**\n **widget=forms.PasswordInput**\n **)**\n **password2 = forms.CharField(**\n **label=****'Repeat password'****,**\n **widget=forms.PasswordInput**\n **)**\n**class****Meta****:**\n **model = get_user_model()**\n **fields = [****'username'****,** **'first_name'****,** **'email'****]** \n```", "```py\nclass UserRegistrationForm(forms.ModelForm):\n    password = forms.CharField(\n        label='Password',\n        widget=forms.PasswordInput\n    )\n    password2 = forms.CharField(\n        label='Repeat password',\n        widget=forms.PasswordInput\n    )\n    class Meta:\n        model = get_user_model()\n        fields = ['username', 'first_name', 'email']\n**def****clean_password2****(****self****):**\n **cd = self.cleaned_data**\n**if** **cd[****'password'****] != cd[****'password2'****]:**\n**raise** **forms.ValidationError(****\"Passwords don't match.\"****)**\n**return** **cd[****'password2'****]** \n```", "```py\nfrom django.contrib.auth import authenticate, login\nfrom django.contrib.auth.decorators import login_required\nfrom django.http import HttpResponse\nfrom django.shortcuts import render\nfrom .forms import LoginForm**, UserRegistrationForm**\n# ...\n**def****register****(****request****):**\n**if** **request.method ==** **'POST'****:**\n **user_form = UserRegistrationForm(request.POST)**\n**if** **user_form.is_valid():**\n**# Create a new user object but avoid saving it yet**\n **new_user = user_form.save(commit=****False****)**\n**# Set the chosen password**\n **new_user.set_password(**\n **user_form.cleaned_data[****'password'****]**\n **)**\n**# Save the User object**\n **new_user.save()**\n**return** **render(**\n**request,**\n**'account/register_done.html'****,**\n**{****'new_user'****: new_user}**\n**)**\n**else****:**\n **user_form = UserRegistrationForm()**\n**return** **render(**\n **request,**\n**'account/register.html'****,**\n **{****'user_form'****: user_form}**\n **)** \n```", "```py\nPASSWORD_HASHERS = [\n    'django.contrib.auth.hashers.PBKDF2PasswordHasher',\n    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',\n    'django.contrib.auth.hashers.Argon2PasswordHasher',\n    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',\n    'django.contrib.auth.hashers.ScryptPasswordHasher',\n] \n```", "```py\nurlpatterns = [\n    # ...\n    path('', include('django.contrib.auth.urls')),\n    path('', views.dashboard, name='dashboard'),\n    **path(****'register/'****, views.register, name=****'register'****),**\n] \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Create an account{% endblock %}\n{% block content %}\n  <h1>Create an account</h1>\n<p>Please, sign up using the following form:</p>\n<form method=\"post\">\n    {{ user_form.as_p }}\n    {% csrf_token %}\n    <p><input type=\"submit\" value=\"Create my account\"></p>\n</form>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Welcome{% endblock %}\n{% block content %}\n  <h1>Welcome {{ new_user.first_name }}!</h1>\n<p>\n    Your account has been successfully created.\n    Now you can <a href=\"{% url \"login\" %}\">log in</a>.\n  </p>\n{% endblock %} \n```", "```py\n<p>Please, use the following form to log-in:</p> \n```", "```py\n<p>\n  Please, use the following form to log-in.\n  **If you don't have an account** **<****a****href****=****\"{% url \"****register****\" %}\"****>****register here****</****a****>****.**\n</p> \n```", "```py\nfrom django.db import models\n**from** **django.conf** **import** **settings**\n**class****Profile****(models.Model):**\n **user = models.OneToOneField(**\n **settings.AUTH_USER_MODEL,**\n **on_delete=models.CASCADE**\n **)**\n **date_of_birth = models.DateField(blank=****True****, null=****True****)**\n **photo = models.ImageField(**\n **upload_to=****'users/%Y/%m/%d/'****,**\n **blank=****True**\n **)**\n**def****__str__****(****self****):**\n**return****f'Profile of** **{self.user.username}****'** \n```", "```py\npython -m pip install Pillow==10.3.0 \n```", "```py\nMEDIA_URL = 'media/'\nMEDIA_ROOT = BASE_DIR / 'media' \n```", "```py\n**from** **django.conf** **import** **settings**\n**from** **django.conf.urls.static** **import** **static**\nfrom django.contrib import admin\nfrom django.urls import path, include\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('account/', include('account.urls')),\n]\n**if** **settings.DEBUG:**\n **urlpatterns += static(**\n **settings.MEDIA_URL,**\n **document_root=settings.MEDIA_ROOT**\n **)** \n```", "```py\npython manage.py makemigrations \n```", "```py\nMigrations for 'account':\n  account/migrations/0001_initial.py\n    - Create model Profile \n```", "```py\npython manage.py migrate \n```", "```py\nApplying account.0001_initial... OK \n```", "```py\nfrom django.contrib import admin\n**from** **.models** **import** **Profile**\n**@admin.register(****Profile****)**\n**class****ProfileAdmin****(admin.ModelAdmin):**\n **list_display = [****'user'****,** **'date_of_birth'****,** **'photo'****]**\n **raw_id_fields = [****'user'****]** \n```", "```py\npython manage.py runserver \n```", "```py\n# ...\n**from** **.models** **import** **Profile**\n# ...\n**class****UserEditForm****(forms.ModelForm):**\n**class****Meta****:**\n **model = get_user_model()**\n **fields = [****'first_name'****,** **'last_name'****,** **'email'****]**\n**class****ProfileEditForm****(forms.ModelForm):**\n**class****Meta****:**\n **model = Profile**\n **fields = [****'date_of_birth'****,** **'photo'****]** \n```", "```py\n# ...\n**from** **.models** **import** **Profile**\n# ...\ndef register(request):\n    if request.method == 'POST':\n        user_form = UserRegistrationForm(request.POST)\n        if user_form.is_valid():\n            # Create a new user object but avoid saving it yet\n            new_user = user_form.save(commit=False)\n            # Set the chosen password\n            new_user.set_password(\n                user_form.cleaned_data['password']\n            )\n            # Save the User object\n            new_user.save()\n            **# Create the user profile**\n**Profile.objects.create(user=new_user)**\nreturn render(\n request,\n 'account/register_done.html',\n {'new_user': new_user}\n )\n    else:\n        user_form = UserRegistrationForm()\n    return render(\n        request,\n        'account/register.html',\n        {'user_form': user_form}\n    ) \n```", "```py\nfrom django.contrib.auth import authenticate, login\nfrom django.contrib.auth.decorators import login_required\nfrom django.http import HttpResponse\nfrom django.shortcuts import render\nfrom .forms import **(**\n    LoginForm,\n UserRegistrationForm**,**\n**UserEditForm,**\n**ProfileEditForm**\n**)**\nfrom .models import Profile\n# ...\n**@login_required**\n**def****edit****(****request****):**\n**if** **request.method ==** **'POST'****:**\n **user_form = UserEditForm(**\n **instance=request.user,**\n **data=request.POST**\n **)**\n **profile_form = ProfileEditForm(**\n **instance=request.user.profile,**\n **data=request.POST,**\n **files=request.FILES**\n **)**\n**if** **user_form.is_valid()** **and** **profile_form.is_valid():**\n **user_form.save()**\n **profile_form.save()**\n**else****:**\n **user_form = UserEditForm(instance=request.user)**\n **profile_form = ProfileEditForm(instance=request.user.profile)**\n**return** **render(**\n **request,**\n**'account/edit.html'****,**\n **{**\n**'user_form'****: user_form,**\n**'profile_form'****: profile_form**\n **}**\n **)** \n```", "```py\nurlpatterns = [\n    #...\n    path('', include('django.contrib.auth.urls')),\n    path('', views.dashboard, name='dashboard'),\n    path('register/', views.register, name='register'),\n    **path(****'edit/'****, views.edit, name=****'edit'****),**\n] \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Edit your account{% endblock %}\n{% block content %}\n  <h1>Edit your account</h1>\n<p>You can edit your account using the following form:</p>\n<form method=\"post\" enctype=\"multipart/form-data\">\n    {{ user_form.as_p }}\n    {{ profile_form.as_p }}\n    {% csrf_token %}\n    <p><input type=\"submit\" value=\"Save changes\"></p>\n</form>\n{% endblock %} \n```", "```py\n{% extends \"base.html\" %}\n{% block title %}Dashboard{% endblock %}\n{% block content %}\n  <h1>Dashboard</h1>\n<p>\n    Welcome to your dashboard. **You can** **<****a****href****=****\"{% url \"****edit****\" %}\">****edit your profile****</****a****>** **or** **<****a****href****=****\"{% url \"****password_change****\"** **%}\">****change your password****</****a****>****.**\n</p>\n{% endblock %} \n```"]