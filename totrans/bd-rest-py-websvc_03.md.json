["```py\nclass GameCategory(models.Model): \n    name = models.CharField(max_length=200, unique=True) \n\n    class Meta: \n        ordering = ('name',) \n\n    def __str__(self): \n        return self.name \n\nclass Game(models.Model): \n    created = models.DateTimeField(auto_now_add=True) \n    name = models.CharField(max_length=200, unique=True) \n    game_category = models.ForeignKey( \n        GameCategory,  \n        related_name='games',  \n        on_delete=models.CASCADE) \n    release_date = models.DateTimeField() \n    played = models.BooleanField(default=False) \n\n    class Meta: \n        ordering = ('name',) \n\n    def __str__(self): \n        return self.name \n\nclass Player(models.Model): \n    MALE = 'M' \n    FEMALE = 'F' \n    GENDER_CHOICES = ( \n        (MALE, 'Male'), \n        (FEMALE, 'Female'), \n    ) \n    created = models.DateTimeField(auto_now_add=True) \n    name = models.CharField(max_length=50, blank=False, default='', unique=True) \n    gender = models.CharField( \n        max_length=2, \n        choices=GENDER_CHOICES, \n        default=MALE, \n    ) \n\n    class Meta: \n        ordering = ('name',) \n\n    def __str__(self): \n        return self.name \n\n```", "```py\npython manage.py makemigrations games\n\n```", "```py\nMigrations for 'games':\n 0002_auto_20160623_2131.py:\n - Alter field name on game\n - Alter field name on gamecategory\n - Alter field name on player\n\n```", "```py\n# -*- coding: utf-8 -*- \n# Generated by Django 1.9.7 on 2016-06-23 21:31 \nfrom __future__ import unicode_literals \n\nfrom django.db import migrations, models \n\nclass Migration(migrations.Migration): \n\n    dependencies = [ \n        ('games', '0001_initial'), \n    ] \n\n    operations = [ \n        migrations.AlterField( \n            model_name='game', \n            name='name', \n            field=models.CharField(max_length=200, unique=True), \n        ), \n        migrations.AlterField( \n            model_name='gamecategory', \n            name='name', \n            field=models.CharField(max_length=200, unique=True), \n        ), \n        migrations.AlterField( \n            model_name='player', \n            name='name', \n            field=models.CharField(default='', max_length=50, unique=True), \n        ), \n    ] \n\n```", "```py\npython manage.py migrate\n\n```", "```py\nOperations to perform:\nOperations to perform:\n Apply all migrations: admin, auth, contenttypes, games, sessions\nRunning migrations:\n Rendering model states... DONE\n Applying games.0002_auto_20160623_2131... OK\n\n```", "```py\npython manage.py runserver\npython manage.py runserver 0.0.0.0:8000\n\n```", "```py\nhttp POST :8000/game-categories/ name='3D RPG'\n\n```", "```py\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"3D RPG\"}'\n    :8000/game-categories/\n\n```", "```py\nHTTP/1.0 400 Bad Request\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Sun, 26 Jun 2016 03:37:05 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"name\": [\n \"GameCategory with this name already exists.\"\n ]\n}\n\n```", "```py\nhttp PATCH :8000/games/2/ played=true\n\n```", "```py\ncurl -iX PATCH -H \"Content-Type: application/json\" -d '{\"played\":\"true\"}'\n    :8000/games/2/\n\n```", "```py\nHTTP/1.0 200 OK\nAllow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\nContent-Type: application/json\nDate: Sun, 26 Jun 2016 04:09:22 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"game_category\": \"3D RPG\", \n \"name\": \"PvZ Garden Warfare 4\", \n \"played\": true, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/2/\"\n}\n\n```", "```py\nhttp POST :8000/games/ name='Tetris Reloaded' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Puzzle Craft' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Blek' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Scribblenauts Unlimited' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Cut the Rope: Magic' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Tiny Dice Dungeon' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='A Dark Room' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Bastion' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Welcome to the Dungeon' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\nhttp POST :8000/games/ name='Dust: An Elysian Tail' game_category='2D mobile arcade' played=false release_date='2016-06-21T03:02:00.776594Z'\n\n```", "```py\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Tetris Reloaded\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Puzzle Craft\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Blek\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Scribblenauts Unlimited\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Cut the Rope: Magic\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Tiny Dice Dungeon\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"A Dark Room\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Bastion\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Welcome to the Dungeon\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Dust: An Elysian Tail\", \"game_category\":\"2D mobile arcade\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\n\n```", "```py\nREST_FRAMEWORK = { \n    'DEFAULT_PAGINATION_CLASS': \n    'rest_framework.pagination.LimitOffsetPagination', \n    'PAGE_SIZE': 5 \n} \n\n```", "```py\nhttp GET :8000/games/\n\n```", "```py\ncurl -iX GET :8000/games/\n\n```", "```py\nHTTP/1.0 200 OK\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Fri, 01 Jul 2016 00:57:55 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"count\": 12, \n \"next\": \"http://localhost:8000/games/?limit=5&offset=5\", \n \"previous\": null, \n \"results\": [\n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"A Dark Room\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/10/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Bastion\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/11/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Blek\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/6/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Cut the Rope: Magic\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/8/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Dust: An Elysian Tail\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/13/\"\n }\n ]\n}\n\n```", "```py\nhttp GET ':8000/games/?offset=0'\n\n```", "```py\ncurl -iX GET ':8000/games/?offset=0'\n\n```", "```py\nhttp GET ':8000/games/?limit=5&offset=0'\n\n```", "```py\ncurl -iX GET ':8000/games/?limit=5&offset=0'\n\n```", "```py\nhttp GET ':8000/games/?limit=5&offset=5'\n\n```", "```py\ncurl -iX GET ':8000/games/?limit=5&offset=5'\n\n```", "```py\nHTTP/1.0 200 OK\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Fri, 01 Jul 2016 01:25:10 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"count\": 12, \n \"next\": \"http://localhost:8000/games/?limit=5&offset=10\", \n \"previous\": \"http://localhost:8000/games/?limit=5\", \n \"results\": [\n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Puzzle Craft\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/5/\"\n }, \n {\n \"game_category\": \"3D RPG\", \n \"name\": \"PvZ Garden Warfare 4\", \n \"played\": true, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/2/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Scribblenauts Unlimited\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/7/\"\n }, \n {\n \"game_category\": \"3D RPG\", \n \"name\": \"Superman vs Aquaman\", \n \"played\": true, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/3/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Tetris Reloaded\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/4/\"\n }\n ]\n}\n\n```", "```py\nhttp GET ':8000/games/?offset=5'\n\n```", "```py\ncurl -iX GET ':8000/games/?offset=5'\n\n```", "```py\nhttp GET ':8000/games/?limit=5&offset=10'\n\n```", "```py\ncurl -iX GET ':8000/games/?limit=5&offset=10'\n\n```", "```py\nHTTP/1.0 200 OK\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Fri, 01 Jul 2016 01:28:13 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"count\": 12, \n \"next\": null, \n \"previous\": \"http://localhost:8000/games/?limit=5&offset=5\", \n \"results\": [\n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Tiny Dice Dungeon\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/9/\"\n }, \n {\n \"game_category\": \"2D mobile arcade\", \n \"name\": \"Welcome to the Dungeon\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/12/\"\n }\n ]\n}\n\n```", "```py\nfrom rest_framework.pagination import LimitOffsetPagination \n\nclass LimitOffsetPaginationWithMaxLimit(LimitOffsetPagination): \n    max_limit = 10 \n\n```", "```py\nREST_FRAMEWORK = { \n    'DEFAULT_PAGINATION_CLASS': \n    'games.pagination.LimitOffsetPaginationWithMaxLimit', \n    'PAGE_SIZE': 5 \n} \n\n```", "```py\nhttp GET ':8000/games/?limit=10000'\n\n```", "```py\ncurl -iX GET ':8000/games/?limit=10000'\n\n```", "```py\nHTTP/1.0 200 OK\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Fri, 01 Jul 2016 16:34:01 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nX-Frame-Options: SAMEORIGIN\n{\n \"count\": 12, \n \"next\": \"http://localhost:8000/games/?limit=10&offset=10\", \n \"previous\": null, \n \"results\": [\n {\n\n```", "```py\nREST_FRAMEWORK = { \n    'DEFAULT_PAGINATION_CLASS': \n    'games.pagination.LimitOffsetPaginationWithMaxLimit', \n    'PAGE_SIZE': 5, \n    'DEFAULT_AUTHENTICATION_CLASSES': ( \n        'rest_framework.authentication.BasicAuthentication', \n        'rest_framework.authentication.SessionAuthentication', \n        ) \n} \n\n```", "```py\nclass Game(models.Model): \n    owner = models.ForeignKey( \n        'auth.User',  \n        related_name='games', \n        on_delete=models.CASCADE) \n    created = models.DateTimeField(auto_now_add=True) \n    name = models.CharField(max_length=200, unique=True) \n    game_category = models.ForeignKey( \n        GameCategory,  \n        related_name='games',  \n        on_delete=models.CASCADE) \n    release_date = models.DateTimeField() \n    played = models.BooleanField(default=False) \n\n    class Meta: \n        ordering = ('name',) \n\n    def __str__(self): \n        return self.name \n\n```", "```py\npython manage.py createsuperuser\n\n```", "```py\nUsername (leave blank to use 'gaston'):\n\n```", "```py\nEmail address:\n\n```", "```py\nPassword:\n\n```", "```py\nPassword (again): \nSuperuser created successfully.\n\n```", "```py\nfrom django.contrib.auth.models import User \n\nclass UserGameSerializer(serializers.HyperlinkedModelSerializer): \n    class Meta: \n        model = Game \n        fields = ( \n            'url', \n            'name') \n\nclass UserSerializer(serializers.HyperlinkedModelSerializer): \n    games = UserGameSerializer(many=True, read_only=True) \n\n    class Meta: \n        model = User \n        fields = ( \n            'url',  \n            'pk', \n            'username', \n            'games') \n\n```", "```py\nclass GameSerializer(serializers.HyperlinkedModelSerializer): \n    # We just want to display the owner username (read-only) \n    owner = serializers.ReadOnlyField(source='owner.username') \n    # We want to display the game cagory's name instead of the id \n    game_category = serializers.SlugRelatedField(queryset=GameCategory.objects.all(), slug_field='name') \n\n    class Meta: \n        model = Game \n        depth = 4 \n        fields = ( \n                'url', \n                'owner', \n                'game_category', \n                'name', \n                'release_date', \n                'played') \n\n```", "```py\nfrom rest_framework import permissions \n\nclass IsOwnerOrReadOnly(permissions.BasePermission): \n    def has_object_permission(self, request, view, obj): \n        if request.method in permissions.SAFE_METHODS: \n            return True \n        else: \n            return obj.owner == request.user \n\n```", "```py\nfrom django.contrib.auth.models import User \nfrom games.serializers import UserSerializer \nfrom rest_framework import permissions \nfrom games.permissions import IsOwnerOrReadOnly \n\nclass UserList(generics.ListAPIView): \n    queryset = User.objects.all() \n    serializer_class = UserSerializer \n    name = 'user-list' \n\nclass UserDetail(generics.RetrieveAPIView): \n    queryset = User.objects.all() \n    serializer_class = UserSerializer \n    name = 'user-detail' \n\n```", "```py\nclass ApiRoot(generics.GenericAPIView): \n    name = 'api-root' \n    def get(self, request, *args, **kwargs): \n        return Response({ \n            'players': reverse(PlayerList.name, request=request), \n            'game-categories': reverse(GameCategoryList.name, request=request), \n            'games': reverse(GameList.name, request=request), \n            'scores': reverse(PlayerScoreList.name, request=request), \n            'users': reverse(UserList.name, request=request), \n            }) \n\n```", "```py\n    url(r'^users/$', \n        views.UserList.as_view(), \n        name=views.UserList.name), \n    url(r'^users/(?P<pk>[0-9]+)/$', \n        views.UserDetail.as_view(), \n        name=views.UserDetail.name), \n\n```", "```py\nfrom django.conf.urls import url, include \n\nurlpatterns = [ \n    url(r'^', include('games.urls')), \n    url(r'^api-auth/', include('rest_framework.urls')) \n] \n\n```", "```py\nclass GameList(generics.ListCreateAPIView): \n    queryset = Game.objects.all() \n    serializer_class = GameSerializer \n    name = 'game-list' \n    def perform_create(self, serializer): \n        # Pass an additional owner field to the create method \n        # To Set the owner to the user received in the request \n        serializer.save(owner=self.request.user)\n\n```", "```py\nclass GameList(generics.ListCreateAPIView): \n    queryset = Game.objects.all() \n    serializer_class = GameSerializer \n    name = 'game-list' \n    permission_classes = ( \n        permissions.IsAuthenticatedOrReadOnly, \n        IsOwnerOrReadOnly, \n        )\n\n```", "```py\nclass GameDetail(generics.RetrieveUpdateDestroyAPIView): \n    queryset = Game.objects.all() \n    serializer_class = GameSerializer \n    name = 'game-detail' \n    permission_classes = ( \n        permissions.IsAuthenticatedOrReadOnly, \n        IsOwnerOrReadOnly) \n\n```", "```py\npsql --username=user_name --dbname=games --command=\"SELECT id FROM auth_user WHERE username = 'superuser';\"\n\n```", "```py\nid \n----\n 1\n(1 row)\n\n```", "```py\npython manage.py makemigrations games\n\n```", "```py\nYou are trying to add a non-nullable field 'owner' to game without a default; we can't do that (the database needs something to populate existing rows).\nPlease select a fix:\n 1) Provide a one-off default now (will be set on all existing rows)\n 2) Quit, and let me add a default in models.py\nSelect an option: \n\n```", "```py\nPlease enter the default value now, as valid Python\nThe datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now()\n>>>\n\n```", "```py\nMigrations for 'games':\n 0003_game_owner.py:\n - Add field owner to game\n\n```", "```py\n# -*- coding: utf-8 -*-\n# Generated by Django 1.9.7 on 2016-07-01 21:06\nfrom __future__ import unicode_literals\nfrom django.conf import settings\nfrom django.db import migrations, models\nimport django.db.models.deletion\nclass Migration(migrations.Migration):\n dependencies = [\n migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n ('games', '0002_auto_20160623_2131'),\n ]\n operations = [\n migrations.AddField(\n model_name='game',\n name='owner',\n field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='games', to=settings.AUTH_USER_MODEL),\n preserve_default=False,\n ),\n ]\n\n```", "```py\npython manage.py migrate\n\n```", "```py\nOperations to perform:\n Apply all migrations: admin, auth, contenttypes, games, sessions\nRunning migrations:\n Rendering model states... DONE\n Applying games.0003_game_owner... OK\n\n```", "```py\npython manage.py shell\n\n```", "```py\nfrom django.contrib.auth.models import User \nuser = User.objects.create_user('kevin', 'kevin@example.com', 'kevinpassword')  \nuser.save() \n\n```", "```py\nquit() \n\n```", "```py\npython manage.py runserver\npython manage.py runserver 0.0.0.0:8000\n\n```", "```py\nhttp POST :8000/games/ name='The Last of Us' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'\n\n```", "```py\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"The Last of Us\", \"game_category\":\"3D RPG\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\n\n```", "```py\nHTTP/1.0 401 Unauthorized\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Sun, 03 Jul 2016 22:23:07 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept, Cookie\nWWW-Authenticate: Basic realm=\"api\"\nX-Frame-Options: SAMEORIGIN\n{\n \"detail\": \"Authentication credentials were not provided.\"\n}\n\n```", "```py\nhttp -a superuser:'password' POST :8000/games/ name='The Last of Us' game_category='3D RPG' played=false release_date='2016-06-21T03:02:00.776594Z'\n\n```", "```py\ncurl --user superuser:'password' -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"The Last of Us\", \"game_category\":\"3D RPG\", \"played\": \"false\", \"release_date\": \"2016-06-21T03:02:00.776594Z\"}' :8000/games/\n\n```", "```py\nHTTP/1.0 201 Created\nAllow: GET, POST, HEAD, OPTIONS\nContent-Type: application/json\nDate: Mon, 04 Jul 2016 02:45:36 GMT\nLocation: http://localhost:8000/games/16/\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept\nX-Frame-Options: SAMEORIGIN\n{\n \"game_category\": \"3D RPG\", \n \"name\": \"The Last of Us\", \n \"owner\": \"superuser\", \n \"played\": false, \n \"release_date\": \"2016-06-21T03:02:00.776594Z\", \n \"url\": \"http://localhost:8000/games/16/\"\n}\n\n```", "```py\nhttp -a kevin:'kevinpassword' PATCH :8000/games/16/ played=true\n\n```", "```py\ncurl --user kevin:'kevinpassword' -iX PATCH -H \"Content-Type: application/json\" -d '{\"played\": \"true\"}' :8000/games/16/\n\n```", "```py\nHTTP/1.0 403 Forbidden\nAllow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\nContent-Type: application/json\nDate: Mon, 04 Jul 2016 02:59:15 GMT\nServer: WSGIServer/0.2 CPython/3.5.1\nVary: Accept\nX-Frame-Options: SAMEORIGIN\n{\n \"detail\": \"You do not have permission to perform this action.\"\n}\n\n```", "```py\nhttp -a kevin:'kevinpassword' GET :8000/games/16/\n\n```", "```py\ncurl --user kevin:'kevinpassword' -iX GET :8000/games/16/\n\n```", "```py\nHTTP 200 OK\nAllow: GET, HEAD, OPTIONS\nContent-Type: application/json\nVary: Accept\n{\n \"count\": 2,\n \"next\": null,\n \"previous\": null,\n \"results\": [\n {\n \"url\": \"http://localhost:8000/users/1/\",\n \"pk\": 1,\n \"username\": \"superuser\",\n \"games\": [\n {\n \"url\": \"http://localhost:8000/games/10/\",\n \"name\": \"A Dark Room\"\n },\n {\n \"url\": \"http://localhost:8000/games/11/\",\n \"name\": \"Bastion\"\n },\n ...\n ]\n },\n {\n \"url\": \"http://localhost:8000/users/3/\",\n \"pk\": 3,\n \"username\": \"kevin\",\n \"games\": []\n }\n ]\n}\n\n```"]