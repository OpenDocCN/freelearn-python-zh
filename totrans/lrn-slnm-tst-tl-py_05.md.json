["```py\nimport unittest\nfrom selenium import webdriver\n\nclass SearchProductTest(unittest.TestCase):\n    def setUp(self):\n        # create a new Firefox session\n        self.driver = webdriver.Firefox()\n        self.driver.implicitly_wait(30)\n        self.driver.maximize_window()\n\n        # navigate to the application home page\n        self.driver.get(\"http://demo.magentocommerce.com/\")\n\n    def test_search_by_category(self):\n\n        # get the search textbox\n        self.search_field = self.driver.find_element_by_name(\"q\")\n        self.search_field.clear()\n\n        # enter search keyword and submit\n        self.search_field.send_keys(\"phones\")\n        self.search_field.submit()\n\n        # get all the anchor elements which have product names # displayed currently on result page using # find_elements_by_xpath method\n        products = self.driver\\\n            .find_elements_by_xpath(\"//h2[@class='product-name']/a\")\n\n        # check count of products shown in results\n        self.assertEqual(2, len(products))\n\n    def tearDown(self):\n        # close the browser window\n        self.driver.quit()\n\nif __name__ == '__main__':\n    unittest.main(verbosity=2)\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions\nimport unittest\n\nclass ExplicitWaitTests(unittest.TestCase):\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n        self.driver.get(\"http://demo.magentocommerce.com/\")\n\n    def test_account_link(self):\n        WebDriverWait(self.driver, 10)\\\n            .until(lambda s: s.find_element_by_id(\"select-language\").get_attribute(\"length\") == \"3\")\n\n        account = WebDriverWait(self.driver, 10)\\\n            .until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, \"ACCOUNT\")))\n        account.click()\n\n    def tearDown(self):\n        self.driver.quit()\n\nif __name__ == \"__main__\":\n    unittest.main(verbosity=2)\n```", "```py\ndef test_create_new_customer(self):\n    # click on Log In link to open Login page\n    self.driver.find_element_by_link_text(\"ACCOUNT\").click()\n\n    # wait for My Account link in Menu\n    my_account = WebDriverWait(self.driver, 10)\\\n        .until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, \"My Account\")))\n    my_account.click()\n\n    # get the Create Account button\n    create_account_button = WebDriverWait(self.driver, 10)\\\n        .until(expected_conditions.element_to_be_clickable((By.LINK_TEXT, \"CREATE AN ACCOUNT\")))\n\n    # click on Create Account button. This will displayed new account\n    create_account_button.click()\n    WebDriverWait(self.driver, 10)\\\n        .until(expected_conditions.title_contains(\"Create New Customer Account\"))\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions\nimport unittest\n\nclass CompareProducts(unittest.TestCase):\n    def setUp(self):\n        self.driver = webdriver.Firefox()\n        self.driver.get(\"http://demo.magentocommerce.com/\")\n\n    def test_compare_products_removal_alert(self):\n        # get the search textbox\n        search_field = self.driver.find_element_by_name(\"q\")\n        search_field.clear()\n\n        # enter search keyword and submit\n        search_field.send_keys(\"phones\")\n        search_field.submit()\n\n        # click the Add to compare link\n        self.driver.\\\n            find_element_by_link_text(\"Add to Compare\").click()\n\n        # wait for Clear All link to be visible\n        clear_all_link = WebDriverWait(self.driver, 10)\\\n            .until(expected_conditions.visibility_of_element_located((By.LINK_TEXT, \"Clear All\")))\n\n        # click on Clear All link,\n        # this will display an alert to the user\n        clear_all_link.click()\n\n        # wait for the alert to present\n        alert = WebDriverWait(self.driver, 10)\\\n            .until(expected_conditions.alert_is_present())\n\n        # get the text from alert\n        alert_text = alert.text\n\n        # check alert text\n        self.assertEqual(\"Are you sure you would like\n  to remove all products from your comparison?\", alert_text)\n        # click on Ok button\n        alert.accept()\n\n    def tearDown(self):\n        self.driver.quit()\n\nif __name__ == \"__main__\":\n    unittest.main(verbosity=2)\n```", "```py\ndef testLoginLink(self):\n    WebDriverWait(self.driver, 10).until(lambda s: s.find_element_by_id \"select-language\").get_attribute(\"length\") == \"3\")\n\n    login_link = WebDriverWait(self.driver, 10).until(expected_conditions.visibility_of_element_located((By.LINK_TEXT,\"Log In\")))\n       login_link.click();\n```"]