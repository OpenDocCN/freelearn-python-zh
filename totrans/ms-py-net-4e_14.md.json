["```py\n$ sudo apt update\n$ sudo apt install -y git\n$ git --version\ngit version 2.34.1 \n```", "```py\n$ git config --global user.name \"Your Name\"\n$ git config --global user.email \"email@domain.com\"\n$ git config --list \nuser.name=Your Name\nuser.email=email@domain.com \n```", "```py\n$ cat ~/.gitconfig \n[user] \nname = Your Name \nemail = email@domain.com \n```", "```py\n(optional) \n$ git config --global core.editor \"vim\" \n$ git config --list \nuser.name=Your Name \nuser.email=email@domain.com \ncore.editor=vim \n```", "```py\n# Byte-compiled / optimized / DLL files\n  pycache /\n*.py[cod]\n*$py.class \n```", "```py\n# OSX\n# =========================\n.DS_Store\n.AppleDouble\n.LSOverride \n```", "```py\n$ git --help\nusage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           <command> [<args>] \n```", "```py\n$ mkdir TestRepo-1\n$ cd TestRepo-1/\n$ git init\nInitialized empty Git repository in /home/echou/Mastering_Python_Networking_third_edition/Chapter13/TestRepo-1/.git/\n$ echo \"this is my test file\" > myFile.txt \n```", "```py\n$ ls -a\n.  ..  .git  myFile.txt\n$ ls .git/\nbranches  config  description  HEAD  hooks  info  objects  refs \n```", "```py\n$ ls .git/config\n.git/config\n$ ls ~/.gitconfig\n/home/echou/.gitconfig\n$ git config -l \nuser.name=Eric Chou \nuser.email=<email> \ncore.editor=vim\ncore.repositoryformatversion=0 \ncore.filemode=true \ncore.bare=false \ncore.logallrefupdates=true \n```", "```py\n$ git status\nOn branch master\nInitial commit\nUntracked files: \n     (use \"git add <file>...\" to include in what will be committed)\nmyFile.txt \nnothing added to commit but untracked files present (use \"git add\" to track) \n$ git add myFile.txt\n$ git status\nOn branch master \nInitial commit\nChanges to be committed:\n   (use \"git rm --cached <file>...\" to unstage) \nnew file: myFile.txt \n```", "```py\n$ git commit -m \"adding myFile.txt\"\n[master (root-commit) 5f579ab] adding myFile.txt\n 1 file changed, 1 insertion(+)\n create mode 100644 myFile.txt \n$ git status\nOn branch master\nnothing to commit, working directory clean \n```", "```py\n$ vim myFile.txt\n$ cat myFile.txt\nthis is the second iteration of my test file\n$ git status\nOn branch master\nChanges not staged for commit:\n(use \"git add <file>...\" to update what will be committed)\n(use \"git checkout -- <file>...\" to discard changes in working directory)\nmodified: myFile.txt\n$ git add myFile.txt\n$ git commit -m \"made modifications to myFile.txt\" \n[master a3dd3ea] made modifications to myFile.txt\n1 file changed, 1 insertion(+), 1 deletion(-) \n```", "```py\n$ git log\ncommit ff7dc1a40e5603fed552a3403be97addefddc4e9 (HEAD -> master)\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 08:49:02 2019 -0800\n    made modifications to myFile.txt\ncommit 5d7c1c8543c8342b689c66f1ac1fa888090ffa34\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 08:46:32 2019 -0800\n    adding myFile.txt \n```", "```py\n(venv) $ git show ff7dc1a40e5603fed552a3403be97addefddc4e9\ncommit ff7dc1a40e5603fed552a3403be97addefddc4e9 (HEAD -> master)\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 08:49:02 2019 -0800\n    made modifications to myFile.txt\ndiff --git a/myFile.txt b/myFile.txt\nindex 6ccb42e..69e7d47 100644\n--- a/myFile.txt\n+++ b/myFile.txt\n@@ -1 +1 @@\n-this is my test file\n+this is the second iteration of my test file \n```", "```py\n$ git revert ff7dc1a40e5603fed552a3403be97addefddc4e9\n[master 75921be] Revert \"made modifications to myFile.txt\"\n 1 file changed, 1 insertion(+), 1 deletion(-)\n$ cat myFile.txt\nthis is my test file \n```", "```py\n$ git log\ncommit 75921bedc83039ebaf70c90a3e8d97d65a2ee21d (HEAD -> master)\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 09:00:23 2019 -0800\n    Revert \"made modifications to myFile.txt\"\n    This reverts commit ff7dc1a40e5603fed552a3403be97addefddc4e9.\n     On branch master\n     Changes to be committed:\n            modified:   myFile.txt \n```", "```py\n$ git reset --hard ff7dc1a40e5603fed552a3403be97addefddc4e9\nHEAD is now at ff7dc1a made modifications to myFile.txt\n$ git log\ncommit ff7dc1a40e5603fed552a3403be97addefddc4e9 (HEAD -> master)\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 08:49:02 2019 -0800\n    made modifications to myFile.txt\ncommit 5d7c1c8543c8342b689c66f1ac1fa888090ffa34\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 08:46:32 2019 -0800\n    adding myFile.txt \n```", "```py\n$ git branch dev\n$ git branch\n  dev\n* master \n```", "```py\n$ git checkout dev\nSwitched to branch 'dev'\n$ git branch\n* dev\n  master \n```", "```py\n$ echo \"my second file\" > mySecondFile.txt\n$ git add mySecondFile.txt\n$ git commit -m \"added mySecondFile.txt to dev branch\"\n[dev a537bdc] added mySecondFile.txt to dev branch\n 1 file changed, 1 insertion(+)\n create mode 100644 mySecondFile.txt \n```", "```py\n$ git branch\n* dev\n  master\n$ git checkout master\nSwitched to branch 'master'\n$ ls\nmyFile.txt\n$ git checkout dev\nSwitched to branch 'dev'\n$ ls\nmyFile.txt  mySecondFile.txt \n```", "```py\n$ git branch\n* dev\n  master\n$ git checkout master\nSwitched to branch 'master'\n$ git merge dev master\nUpdating ff7dc1a..a537bdc\nFast-forward\n mySecondFile.txt | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 mySecondFile.txt\n$ git branch\n  dev\n* master\n$ ls\nmyFile.txt  mySecondFile.txt \n```", "```py\n$ touch myThirdFile.txt\n$ git add myThirdFile.txt\n$ git commit -m \"adding myThirdFile.txt\"\n[master 169a203] adding myThirdFile.txt\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 myThirdFile.txt\n$ ls\nmyFile.txt  mySecondFile.txt  myThirdFile.txt\n$ git rm myThirdFile.txt\nrm 'myThirdFile.txt'\n$ git status\nOn branch master\nChanges to be committed:\n  (use \"git reset HEAD <file>...\" to unstage)\n    deleted:    myThirdFile.txt\n$ git commit -m \"deleted myThirdFile.txt\"\n[master 1b24b4e] deleted myThirdFile.txt\n 1 file changed, 0 insertions(+), 0 deletions(-)\n delete mode 100644 myThirdFile.txt \n```", "```py\n$ git log\ncommit 1b24b4e95eb0c01cc9a7124dc6ac1ea37d44d51a (HEAD -> master)\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 10:02:45 2019 -0800\n    deleted myThirdFile.txt\ncommit 169a2034fb9844889f5130f0e42bf9c9b7c08b05\nAuthor: Eric Chou <echou@yahoo.com>\nDate:   Fri Nov 8 10:00:56 2019 -0800\n    adding myThirdFile.txt \n```", "```py\n$ git remote add gitHubRepo https://github.com/ericchou1/TestRepo.git\n$ git remote -v\ngitHubRepo\thttps://github.com/ericchou1/TestRepo.git (fetch)\ngitHubRepo\thttps://github.com/ericchou1/TestRepo.git (push) \n```", "```py\n$ git push gitHubRepo master\nUsername for 'https://github.com': <skip>\nPassword for 'https://echou@yahoo.com@github.com': <remember to use your personal access token>\nTo https://github.com/ericchou1/TestRepo.git\n ! [rejected]        master -> master (fetch first)\nerror: failed to push some refs to 'https://github.com/ericchou1/TestRepo.git' \n```", "```py\n$ git pull gitHubRepo master\nUsername for 'https://github.com': <skip> \nPassword for 'https://<username>@github.com': <personal access token>\nFrom https://github.com/ericchou1/TestRepo\n* branch master -> FETCH_HEAD\nMerge made by the 'recursive' strategy.\n.gitignore | 104\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ LICENSE | 21 +++++++++++++\nREADME.md | 2 ++\n3 files changed, 127 insertions(+)\ncreate mode 100644 .gitignore\ncreate mode 100644 LICENSE\ncreate mode 100644 README.md \n```", "```py\n$ git push gitHubRepo master\nUsername for 'https://github.com': <username> \nPassword for 'https://<username>@github.com': <personal access token> \nCounting objects: 15, done.\nCompressing objects: 100% (9/9), done.\nWriting objects: 100% (15/15), 1.51 KiB | 0 bytes/s, done. Total 15 (delta 1), reused 0 (delta 0)\nremote: Resolving deltas: 100% (1/1), done.\nTo https://github.com/ericchou1/TestRepo.git a001b81..0aa362a master -> master \n```", "```py\n[This is operated from another host]\n$ cd /tmp\n$ git clone https://github.com/ericchou1/TestRepo.git \nCloning into 'TestRepo'...\nremote: Counting objects: 20, done.\nremote: Compressing objects: 100% (13/13), done.\nremote: Total 20 (delta 2), reused 15 (delta 1), pack-reused 0 \nUnpacking objects: 100% (20/20), done.\n$ cd TestRepo/\n$ ls\nLICENSE myFile.txt\nREADME.md mySecondFile.txt \n```", "```py\n$ git log\ncommit 0aa362a47782e7714ca946ba852f395083116ce5 (HEAD -> master, origin/master, origin/HEAD)\nMerge: bc078a9 a001b81\nAuthor: Eric Chou <skip>\nDate: Fri Jul 20 14:18:58 2018 -0700\n    Merge branch 'master' of https://github.com/ericchou1/TestRepo\ncommit a001b816bb75c63237cbc93067dffcc573c05aa2\nAuthor: Eric Chou <skip>\nDate: Fri Jul 20 14:16:30 2018 -0700\n    Initial commit\n... \n```", "```py\n$ pip install gitpython\n$ python\n>>> from git import Repo\n>>> repo = Repo('/home/echou/Mastering_Python_Networking_third_edition/Chapter13/TestRepo-1')\n>>> for commits in list(repo.iter_commits('master')):\n... print(commits)\n...\n1b24b4e95eb0c01cc9a7124dc6ac1ea37d44d51a\n169a2034fb9844889f5130f0e42bf9c9b7c08b05\na537bdcc1648458ce88120ae607b4ddea7fa9637\nff7dc1a40e5603fed552a3403be97addefddc4e9\n5d7c1c8543c8342b689c66f1ac1fa888090ffa34 \n```", "```py\n>>> for (path, stage), entry in repo.index.entries.items():\n... print(path, stage, entry)\n...\nmyFile.txt 0 100644 69e7d4728965c885180315c0d4c206637b3f6bad 0 myFile.txt\nmySecondFile.txt 0 100644 75d6370ae31008f683cf18ed086098d05bf0e4dc 0 mySecondFile.txt \n```", "```py\n$ pip install PyGithub \n```", "```py\n$ python\n>>> from github import Github\n>>> g = Github(\"<username>\", \"<password>\")\n>>> for repo in g.get_user().get_repos():\n... print(repo.name)\n...\nMastering-Python-Networking-Second-Edition\nMastering-Python-Networking-Third-Edition \n```", "```py\n>>> from github import Github\n>>> g = Github(\"<token>\")\n>>> for repo in g.get_user().get_repos():\n... print(repo)\n...\nRepository(full_name=\"oreillymedia/distributed_denial_of_service_ddos\") \nRepository(full_name=\"PacktPublishing/-Hands-on-Network-    Programming-with- Python\")\nRepository(full_name=\"PacktPublishing/Mastering-Python-Networking\") \nRepository(full_name=\"PacktPublishing/Mastering-Python-Networking-Second- Edition\")\n... \n```", "```py\n$ ls configs/ \niosv-1 iosv-2\n$ cat configs/iosv-1 \nBuilding configuration...\nCurrent configuration : 4573 bytes\n!\n! Last configuration change at 02:50:05 UTC Sat Jun 2 2018 by cisco\n!\nversion 15.6\nservice timestamps debug datetime msec\n... \n```", "```py\n#!/usr/bin/env python3\n# reference: https://stackoverflow.com/questions/38594717/how-do-i-push-new-files-to-github\nfrom github import Github, InputGitTreeElement\nimport os\ngithub_token = '<token>'\nconfigs_dir = 'configs'\ngithub_repo = 'TestRepo'\n# Retrieve the list of files in configs directory\nfile_list = []\nfor dirpath, dirname, filenames in os.walk(configs_dir):\n    for f in filenames:\n        file_list.append(configs_dir + \"/\" + f)\ng = Github(github_token)\nrepo = g.get_user().get_repo(github_repo)\ncommit_message = 'add configs'\nmaster_ref = repo.get_git_ref('heads/master')\nmaster_sha = master_ref.object.sha\nbase_tree = repo.get_git_tree(master_sha)\nelement_list = list()\nfor entry in file_list: \n    with open(entry, 'r') as input_file:\n        data = input_file.read()\n    element = InputGitTreeElement(entry, '100644', 'blob', data)\n    element_list.append(element)\n# Create tree and commit\ntree = repo.create_git_tree(element_list, base_tree)\nparent = repo.get_git_commit(master_sha)\ncommit = repo.create_git_commit(commit_message, tree, [parent])\nmaster_ref.edit(commit.sha) \n```"]