["```py\n        'category': Hostel,\n    ```", "```py\n        'data': [\n            'security/groups.xml',\n        ],\n    ```", "```py\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <odoo>\n        <!--  Add step 4 goes here -->\n    </odoo>\n    ```", "```py\n    <record id=\"group_hostel_user\" model=\"res.groups\">\n         <field name=\"name\">User</field>\n         <field name=\"category_id\"\n                ref=\"base.module_category_hostel\"/>\n         <field name=\"implied_ids\"\n                eval=\"[(4, ref('base.group_user'))]\"/>\n    </record>\n    <record id=\"group_hostel_manager\" model=\"res.groups\">\n        <field name=\"name\">Manager</field>\n        <field name=\"category_id\"\n               ref=\"base.module_category_hostel\"/>\n        <field name=\"implied_ids\"\n               eval=\"[(4, ref('group_hostel_user'))]\"/>\n        <field name=\"users\" eval=\"[(4, ref('base.user_admin'))]\"/> </record>\n    ```", "```py\nWARNING The model hostel.hostel has no access rules, consider adding one example, access_hostel_hostel, access_hostel_hostel, model_hostel_hostel, base.group_user,1,0,0,0\n```", "```py\n        data: [\n            # ...Security Groups\n            'security/ir.model.access.csv',\n            # ...Other data files\n        ]\n    ```", "```py\n    id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink\n    acl_hostel,hostel_hostel_default,model_hostel_hostel,base_group_user,1,0,0,0\n    acl_hostel_manager,hostel_manager,model_hostel_hostel,group_hostel_manager,1,1,1,1\n    ```", "```py\n    is_public = fields.Boolean(groups='my_hostel.group_hostel_manager')\n    notes = fields.Text(groups='my_hostel.group_hostel_manager')\n    ```", "```py\n    <field name=\"is_public\" />\n    <field name=\"notes\" />\n    ```", "```py\n        'data': [\n            'security/security_rules.xml',\n            # ...\n        ],\n    ```", "```py\n[('is_public', 'in', [True, False])]\n```", "```py\n    {  'name': 'Cookbook code',\n        'category': 'Hostel',\n        'depends': ['base_setup'],\n        'data': [\n            'security/ir.model.access.csv',\n            'security/groups.xml',\n            'views/hostel_hostel.xml',\n            'views/res_config_settings.xml',\n        ],\n    }\n    ```", "```py\n        <record id=\"group_start_date\" model=\"res.groups\">\n            <field name=\"name\">Hostel: Start date feature</field>\n            <field name=\"category_id\" ref=\"base.module_category_hidden\" />\n        </record>\n    ```", "```py\n    class HostelHostel(models.Model):\n        # ...\n        date_start = fields.Date(\n            'Start Date',\n            groups='my_hostel.group_start_date',    )\n    ```", "```py\n    from . import hostel\n    from . import res_config_settings\n    ```", "```py\n    from odoo import models, fields\n    class ConfigSettings(models.TransientModel):\n        _inherit = 'res.config.settings'\n        group_start_date = fields.Boolean(\n                \"Manage Hostel Start dates\",\n                group='base.group_user',\n                implied_group='my_hostel.group_start_dates',\n        )\n        module_note = fields.Boolean(\"Install Notes app\")\n    ```", "```py\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <odoo>\n        <record id=\"view_general_config_hostel\" model=\"ir.ui.view\">\n            <field name=\"name\">Configuration: add Hostel options</field>\n            <field name=\"model\">res.config.settings</field>\n            <field name=\"inherit_id\" ref=\"base_setup.res_config_settings_view_form\" />\n            <field name=\"arch\" type=\"xml\">\n                <div id=\"business_documents\" position=\"before\">\n                 <h2>Hostel</h2>\n                    <div class=\"row mt16 o_settings_container\">\n                        <!-- Add Step 7 and 8 goes here -->\n                    </div>\n                </div>\n            </field>\n        </record>\n    </odoo>\n    ```", "```py\n    <!-- Start Dates option -->\n    <div class=\"col-12 col-lg-6 o_setting_box\">\n        <div class=\"o_setting_left_pane\">\n            <field name=\"group_start_date\" class=\"oe_inline\"/>\n        </div>\n        <div class=\"o_setting_right_pane\">\n            <label for=\"group_start_date\"/>\n            <div class=\"text-muted\">\n                Enable Start date feature on hostels\n            </div>\n        </div>\n    </div>\n    ```", "```py\n    <!-- Note module option -->\n    <div class=\"col-12 col-lg-6 o_setting_box\">\n        <div class=\"o_setting_left_pane\">\n            <field name=\"module_note\" class=\"oe_inline\"/>\n        </div>\n        <div class=\"o_setting_right_pane\">\n            <label for=\"module_note\"/>\n            <div class=\"text-muted\">\n                Install note module\n            </div>\n        </div>\n    </div>\n    ```", "```py\n    details_added = fields.Text(\n          string=\"Details\",\n          groups='my_hostel.group_hostel_manager')\n    ```", "```py\n    <field name=\"details_added\"/>\n    ```", "```py\n        def add_details(self):\n            self.ensure_one()\n            message = \"Details are(added by: %s)\" % self.env.user.name\n            self.sudo().write({\n                'details_added': message\n            })\n    ```", "```py\n    <button name=\"add_details\"\n        string=\"Add Details\"\n        type=\"object\"/>\n    ```", "```py\n    ...\n    <header groups=\"my_hostel.group_hostel_manager\">\n    ...\n    ```", "```py\n        <menuitem name=\"Hostel Room Categories\"\n            id=\"hostel_room_category_menu\"\n            parent=\"hostel_base_menu\"\n            action=\"hostel_room_category_action\"\n            groups=\"my_hostel.group_hostel_manager\"/>\n    ```"]