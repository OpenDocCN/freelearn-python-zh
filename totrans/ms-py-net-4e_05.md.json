["```py\n$ sudo apt-get update\n$ sudo apt-get -y upgrade\n$ sudo apt install apt-transport-https ca-certificates curl software-properties-common\n$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n$ echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n$ sudo apt update\n$ apt-cache policy docker-ce\n$ sudo apt install docker-ce \n```", "```py\n$ sudo systemctl status docker\n● docker.service - Docker Application Container Engine\n     Loaded: loaded (/lib/systemd/system/docker.service; enabled; vendor preset: enabled)\n     Active: active (running) since Sun 2022-09-11 15:02:27 PDT; 5s ago\nTriggeredBy: ● docker.socket\n       Docs: https://docs.docker.com \n```", "```py\n$ docker run hello-world\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\nTo generate this message, Docker took the following steps:\n 1\\. The Docker client contacted the Docker daemon.\n 2\\. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n    (amd64)\n 3\\. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4\\. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n<skip> \n```", "```py\n$ docker ps -a\nCONTAINER ID   IMAGE                  COMMAND            CREATED              STATUS                          PORTS     NAMES\n3cb4f91b6388   hello-world            \"/hello\"           About a minute ago   Exited (0) About a minute ago             fervent_torvalds \n```", "```py\n$ docker images hello-world\nREPOSITORY    TAG       IMAGE ID       CREATED         SIZE\nhello-world   latest    feb5d9fea6a5   11 months ago   13.3kB \n```", "```py\n$ mkdir ansible_container && cd ansible_container\n$ touch Dockerfile \n```", "```py\n# Getting base image\nFROM ubuntu:22.04\n# No need for interactive prompt\nENV DEBIAN_FRONTEND=noninteractive \n```", "```py\n$ docker build --tag ansible-docker:v0.1 . \n```", "```py\n$ docker images\nREPOSITORY              TAG             IMAGE ID       CREATED         SIZE\nansible-docker          v0.1            e99f103e2d36   3 seconds ago   864MB \n```", "```py\n$ docker run -it --name ansible-host1 ansible-docker:v0.1\nroot@96108c94e1d2:/# lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 22.04.1 LTS\nRelease:        22.04\nCodename:       jammy\nroot@96108c94e1d2:/# \n```", "```py\n$ docker ps -a\nCONTAINER ID   IMAGE                 COMMAND   CREATED         STATUS                      PORTS     NAMES\n<container id>   ansible-docker:v0.1   \"bash\"    2 minutes ago   Exited (0) 52 seconds ago             ansible-host1\n$ docker rm <container id>\n$ docker run -it -d --name ansible-host1 ansible-docker:v0.1 \n```", "```py\n$ docker ps\nCONTAINER ID   IMAGE                 COMMAND   CREATED              STATUS          PORTS     NAMES\nd3b6a6ec90e5   ansible-docker:v0.1   \"bash\"    About a minute ago   Up 58 seconds             ansible-host1\n$ docker exec -it ansible-host1 bash\nroot@d3b6a6ec90e5:/# ls \n```", "```py\n$ docker stop ansible-host1\n$ docker rm ansible-host1 \n```", "```py\n# Getting base image\nFROM ubuntu:22.04\n# No need for interactive prompt\nENV DEBIAN_FRONTEND=noninteractive\n# Run any command, i.e. install packages\nRUN apt update && apt install -y python3.10 python3-pip ansible vim\nRUN pip install ansible-pylibssh\n# specify a working directory\nWORKDIR /app\nCOPY . /app \n```", "```py\n$ docker images\n<find the image id>\n$ docker rmi <image id>\n$ docker build --tag ansible-docker:v0.1 . \n```", "```py\n$ docker run -it -d --name ansible-host1 ansible-docker:v0.1\ndocker exec -it ansible-host1 bash\nroot@5ef5e9c85065:/app# pwd\n/app\nroot@5ef5e9c85065:/app# ls\nansible.cfg  dockerfile  host_vars  hosts  ios_config_backup.yml\nroot@5ef5e9c85065:/app# ansible-playbook -i hosts ios_config_backup.yml \nPLAY [Back Up IOS Device Configurations] ********************************************************************\nTASK [backup] ***********************************************************************************************\nchanged: [iosv-2]\nchanged: [iosv-1]\nPLAY RECAP **************************************************************************************************\niosv-1                     : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \niosv-2                     : ok=1    changed=1    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   \nroot@5ef5e9c85065:/app# ls backup/\niosv-1_config.2022-09-12@23:01:07  iosv-2_config.2022-09-12@23:01:07 \n```", "```py\n$ docker stop ansible-host1\n$ docker start ansible-host1 \n```", "```py\n$ docker login \n```", "```py\n$ docker tag ansible-docker:v0.1 ericchou1/mastering-python-networking-example:ch05-ansible-dockerv-v0.1\n$ docker push ericchou1/mastering-python-networking-example:ch05-ansible-dockerv-v0.1 \n```", "```py\n$ mkdir -p ~/.docker/cli-plugins/\n$ curl -SL https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose\n$ chmod +x ~/.docker/cli-plugins/docker-compose\n$ docker compose version\nDocker Compose version v2.3.3 \n```", "```py\nversion: '3.9'\nservices:\n  ansible: \n    build: \n      dockerfile: dockerfile\n  db:\n    image: postgres:14.1-alpine\n    environment:\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=postgres\n    ports:\n      - '5432:5432'\n    volumes: \n      - db:/var/lib/postgresql/data\nvolumes:\n  db:\n    driver: local \n```", "```py\n$ docker compose up\n…\n Container ansible_container-db-1       Created                                                       0.0s\n  Container ansible_container-ansible-1  Created                                                       0.0s\nansible_container-db-1       | \nansible_container-db-1       | PostgreSQL Database directory appears to contain a database; Skipping initialization\nansible_container-db-1       | \nansible_container-db-1       | 2022-09-13 00:18:45.195 UTC [1] LOG:  starting PostgreSQL 14.1 on x86_64-pc-linux-musl, compiled by gcc (Alpine 10.3.1_git20211027) 10.3.1 20211027, 64-bit\nansible_container-db-1       | 2022-09-13 00:18:45.196 UTC [1] LOG:  listening on IPv4 address \"0.0.0.0\", port 5432\nansible_container-db-1       | 2022-09-13 00:18:45.196 UTC [1] LOG:  listening on IPv6 address \"::\", port 5432\nansible_container-db-1       | 2022-09-13 00:18:45.198 UTC [1] LOG:  listening on Unix socket \"/var/run/postgresql/.s.PGSQL.5432\"\nansible_container-db-1       | 2022-09-13 00:18:45.201 UTC [21] LOG:  database system was shut down at 2022-09-13 00:18:36 UTC\nansible_container-db-1       | 2022-09-13 00:18:45.204 UTC [1] LOG:  database system is ready to accept connections\n… \n```", "```py\n$ docker compose down\n[+] Running 3/3\n  Container ansible_container-db-1       Removed                                                       0.2s\n  Container ansible_container-ansible-1  Removed                                                       0.0s\n  Network ansible_container_default      Removed                                                       0.1s \n```", "```py\n$ docker run -it ubuntu:22.04\n<container launches and attached>\nroot@dcaa61a548be:/# apt update && apt install -y net-tools iputils-ping\nroot@dcaa61a548be:/# ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.17.0.2  netmask 255.255.0.0  broadcast 172.17.255.255\n<skip>\nroot@dcaa61a548be:/# ping -c 1 www.cisco.com\nPING e2867.dsca.akamaiedge.net (104.71.231.76) 56(84) bytes of data.\n64 bytes from a104-71-231-76.deploy.static.akamaitechnologies.com (104.71.231.76): icmp_seq=1 ttl=53 time=11.1 ms\n--- e2867.dsca.akamaiedge.net ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 11.147/11.147/11.147/0.000 ms \n```", "```py\n$ docker network ls\nNETWORK ID     NAME      DRIVER    SCOPE\n78e7ab7ea276   bridge    bridge    local\n93c142329fc9   host      host      local\nda9fe0ed2308   none      null      local \n```", "```py\n$ ip link show\n3: docker0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \n    link/ether 02:42:86:7f:f2:40 brd ff:ff:ff:ff:ff:ff\n21: veth3fda84e@if20: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master docker0 state UP mode DEFAULT group default \n    link/ether 9a:f8:83:ae:cb:ea brd ff:ff:ff:ff:ff:ff link-netnsid 0 \n```", "```py\n$ docker run -it --network host ubuntu:22.04\nroot@network-dev-4:/# apt update && apt install -y net-tools iputils-ping python3.10 vim\nroot@network-dev-4:/# ifconfig ens160\nens160: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.2.126  netmask 255.255.255.0  broadcast 192.168.2.255 \n```", "```py\nroot@network-dev-4:/# cat index.html \n<html>\n<head></head>\n<body><h1>Hello Networkers!</h1></body>\n</html> \nroot@network-dev-4:/# python3.10 -m http.server\nServing HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/) ... \n```", "```py\n$ docker network create network1 \n```", "```py\n$ docker run -it --network network1 ubuntu:22.04\nroot@41a977cd9c5b:/# apt update && apt install -y net-tools iputils-ping\nroot@41a977cd9c5b:/# ifconfig\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 172.18.0.2  netmask 255.255.0.0  broadcast 172.18.255.255\n<skip>\nroot@41a977cd9c5b:/# ping -c 1 www.cisco.com\nPING e2867.dsca.akamaiedge.net (23.206.3.148) 56(84) bytes of data.\n64 bytes from a23-206-3-148.deploy.static.akamaitechnologies.com (23.206.3.148): icmp_seq=1 ttl=53 time=13.2 ms \n```", "```py\n$ docker run -it --network network1 --publish 8000:8000 ubuntu:22.04 \n```", "```py\n$ docker network ls\nNETWORK ID     NAME       DRIVER    SCOPE\n30aa5d7887bc   network1   bridge    local\n$ docker network rm network1 \n```", "```py\n$ mkdir container_lab && cd container_lab\n$ echo \"deb [trusted=yes] https://apt.fury.io/netdevops/ /\" | sudo tee -a /etc/apt/sources.list.d/netdevops.list\n$ sudo apt update && sudo apt install containerlab \n```", "```py\n# topology documentation: http://containerlab.dev/lab-examples/two-srls/\n# https://github.com/srl-labs/containerlab/blob/main/lab-examples/srl02/srl02.clab.yml\nname: srl02\ntopology:\n  nodes:\n    srl1:\n      kind: srl\n      image: ghcr.io/nokia/srlinux\n      startup-config: srl1.cfg\n    srl2:\n      kind: srl\n      image: ghcr.io/nokia/srlinux\n      startup-config: srl2.cfg\n  links:\n    - endpoints: [\"srl1:e1-1\", \"srl2:e1-1\"] \n```", "```py\n$ cat srl1.cfg \nset / interface ethernet-1/1\nset / interface ethernet-1/1 subinterface 0\nset / interface ethernet-1/1 subinterface 0 ipv4\nset / interface ethernet-1/1 subinterface 0 ipv4 address 192.168.0.0/31\nset / interface ethernet-1/1 subinterface 0 ipv6\nset / interface ethernet-1/1 subinterface 0 ipv6 address 2002::192.168.0.0/127\nset / network-instance default\nset / network-instance default interface ethernet-1/1.0\n$ cat srl2.cfg \nset / interface ethernet-1/1\nset / interface ethernet-1/1 subinterface 0\nset / interface ethernet-1/1 subinterface 0 ipv4\nset / interface ethernet-1/1 subinterface 0 ipv4 address 192.168.0.1/31\nset / interface ethernet-1/1 subinterface 0 ipv6\nset / interface ethernet-1/1 subinterface 0 ipv6 address 2002::192.168.0.1/127 \n```", "```py\n$ sudo containerlab deploy --topo srl02.clab.yml \n[sudo] password for echou: \nINFO[0000] Containerlab v0.31.1 started                 \nINFO[0000] Parsing & checking topology file: srl02.clab.yml\n… \n```", "```py\n+---+-----------------+--------------+-----------------------+------+---------+----------------+----------------------+\n| # |      Name       | Container ID |         Image         | Kind |  State  |  IPv4 Address  |     IPv6 Address     |\n+---+-----------------+--------------+-----------------------+------+---------+----------------+----------------------+\n| 1 | clab-srl02-srl1 | 7cae81c710d8 | ghcr.io/nokia/srlinux | srl  | running | 172.20.20.2/24 | 2001:172:20:20::2/64 |\n| 2 | clab-srl02-srl2 | c75f274284ef | ghcr.io/nokia/srlinux | srl  | running | 172.20.20.3/24 | 2001:172:20:20::3/64 |\n+---+-----------------+--------------+-----------------------+------+---------+----------------+----------------------+ \n```", "```py\n$ ssh admin@172.20.20.3\nadmin@172.20.20.3's password: \nUsing configuration file(s): []\nWelcome to the srlinux CLI.\nType 'help' (and press <ENTER>) if you need any help using this.\n--{ running }--[  ]--\nA:srl1# show version \n-------------------------------------------------------------------------------------------------------------------------------\nHostname             : srl1\nChassis Type         : 7220 IXR-D2\nPart Number          : Sim Part No.\nSerial Number        : Sim Serial No.\nSystem HW MAC Address: 1A:85:00:FF:00:00\nSoftware Version     : v22.6.3\nBuild Number         : 302-g51cb1254dd\nArchitecture         : x86_64\nLast Booted          : 2022-09-12T03:12:15.195Z\nTotal Memory         : 1975738 kB\nFree Memory          : 219406 kB\n-------------------------------------------------------------------------------------------------------------------------------\n--{ running }--[  ]--\nA:srl1#\nA:srl1# quit \n```", "```py\n$ ls clab-srl02/*\nclab-srl02/ansible-inventory.yml  clab-srl02/topology-data.json\nclab-srl02/ca:\nroot  srl1  srl2\nclab-srl02/srl1:\nconfig  topology.yml\nclab-srl02/srl2:\nconfig  topology.yml \n```", "```py\n(venv) $ ip link show\n11: br-4807fa9091c5: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue state UP mode DEFAULT group default \n    link/ether 02:42:72:7a:9d:af brd ff:ff:ff:ff:ff:ff\n13: veth3392afa@if12: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master br-4807fa9091c5 state UP mode DEFAULT group default \n    link/ether be:f0:1a:f2:12:23 brd ff:ff:ff:ff:ff:ff link-netnsid 1\n15: veth7417e97@if14: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc noqueue master br-4807fa9091c5 state UP mode DEFAULT group default \n    link/ether 92:53:d3:ac:20:93 brd ff:ff:ff:ff:ff:ff link-netnsid 0 \n```", "```py\n$ sudo containerlab destroy --topo srl02.clab.yml \n[sudo] password for echou: \nINFO[0000] Parsing & checking topology file: srl02.clab.yml \nINFO[0000] Destroying lab: srl02                        \nINFO[0001] Removed container: clab-srl02-srl2           \nINFO[0001] Removed container: clab-srl02-srl1           \nINFO[0001] Removing containerlab host entries from /etc/hosts file \n```"]