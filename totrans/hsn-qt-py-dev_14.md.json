["```py\ndialog = QtWidgets.QDialog()\n```", "```py\nmesage_box = QtWidgets.QMessageBox()\n```", "```py\nerror_message = QtWidgets.QErrorMessage()\n```", "```py\nfont_dialog = QtWidgets.QFontDialog()\n```", "```py\ncolor_dialog = QtWidgets.QColorDialog()\n```", "```py\nfile_dialog = QtWidgets.QFileDialog()\n```", "```py\n...\n ...\n    def files(self, action):\n        fd = QtWidgets.QFileDialog()\n        if action.text() == \"Open\":\n            fdf = fd.getOpenFileNames(\n                    self, caption=\"Open Files\",\n                    directory=QtCore.QDir.homePath())\n        ...\n    ...\n...\n```", "```py\n...\nclass UApp(UWindow, UTools):\n\n    def __init__(self, parent=None):\n        ...\n        self.mb1.triggered.connect(self.files)  # Calling files function.\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n    def files(self, action):\n        ...\n        if action.text() == \"Open\":\n            ...\n            if len(fdf[0]) > 0:\n                self.text_edit.clear()\n                for of in fdf[0]:\n                    self.tabwid.setCurrentIndex(2)\n                    try:\n                        openf = open(of, 'r')\n                        self.text_edit.append(str(openf.read()))\n                        continue\n                    except Exception\n                        pass\n                    try:\n                        openf = open(of, 'rb')\n                        self.text_edit.append(str(openf.read()))\n                    except Exception:\n                        pass\n        ...\n    ...\n...\n```", "```py\n...\n    ...\n    def files(self, action):\n        ...\n        if action.text() == \"Open\":\n            ...\n        if action.text() == \"Save\":\n            fdf = fd.getSaveFileName(self,\n                        caption=\"Save Files\",\n                        directory=QtCore.QDir.homePath())\n            if fdf[0] != \"\":\n                self.tabwid.setCurrentIndex(2)\n                try:\n                    open(fdf[0], 'w').write(\n                            self.text_edit.toPlainText())\n                    success = True\n                except Exception:\n                    pass\n                if success != True:\n                    try:\n                        open(fdf[0], 'wb').write(\n                             self.text_edit.toPlainText())\n                        success = True\n                    except Exception:\n                        pass\n                if success == True:\n                    self.info_message(fpath=fdf[0],\n                        txt=\"File saved as\", types=\"info\")\n                else:\n                    self.info_message(fpath=fdf[0],\n                                  txt=\"File don`t saved\",\n                                         types=\"critical\")\n    ...\n...\n```", "```py\n...\n    ...\n    def info_message(self, fpath='', txt='', types=\"info\"):\n        message_box = QtWidgets.QMessageBox(self)\n        message_box.setStyleSheet(\"color: #FFFFFF;\")\n        message_box.setFont(QtGui.QFont(\"Verdana\", 12, 77))\n        message_box.setWindowTitle(\"Save files\")\n        if types == \"info\":\n            message_box.setIcon(\n                         QtWidgets.QMessageBox.Information)\n        if types == \"critical\":\n            message_box.setIcon(\n                            QtWidgets.QMessageBox.Critical) \n        message_box.addButton(QtWidgets.QMessageBox.Ok)\n        message_txt = \"%s\\n%s\" %(txt, fpath)\n        message_box.setText(message_txt)\n        message_box.exec_()\n...\n```", "```py\n...\nfrom PyQt5 import QtPrintSupport\n...\n```", "```py\n...\nfrom PySide2 import QtPrintSupport\n...\n```", "```py\nprint_dialog = QtPrintSupport.QPrintDialog()\n```", "```py\nprint_preview = QtPrintSupport.QPrintPreviewDialog()\n```", "```py\n...\nclass UWindow(UWin):\n\n    def __init__(self, parent=None):\n        ...\n        self.mb1.addAction(\"Print\")\n        self.mb1.addAction(\"Print Preview\")\n    ...\n...\n```", "```py\n...\nclass UApp(UWindow, UTools):\n\n    def __init__(self, parent=None):\n        ...\n        self.print_device = QtPrintSupport.QPrinter()\n    ...\n...\n```", "```py\n...\n    ...\n    def files(self, action):\n        ...\n        if action.text() == \"Save\":\n            ...\n        if action.text() == \"Print\":\n            print_dialog = QtPrintSupport.QPrintDialog(\n                                               self.print_device)\n            if print_dialog.exec_() == QtWidgets.QDialog.Accepted:\n                self.text_edit.print_(print_dialog.printer())\n        if action.text() == \"Print Preview\":\n            print_dialog = QtPrintSupport.QPrintPreviewDialog(\n                                               self.print_device)\n            print_dialog.setWindowTitle(\"Print Preview\")\n            print_dialog.setWindowIcon(\n                                QtGui.QIcon(\"Icons/python1.png\"))\n            print_dialog.paintRequested.connect(\n                                           self.text_edit.print_)\n            print_dialog.exec_()\n    ...\n...\n```"]