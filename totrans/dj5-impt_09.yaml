- en: <st c="0">9</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="2">Letting Users Create, Read, Update, and Delete Movie Reviews</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="62">Having implemented the authentication system, it is now time to let
    logged-in users perform the standard CRUD operations on reviews for movies.</st>
    <st c="207">This chapter will teach you how to perform complete CRUD operations
    and how to</st> <st c="286">manage authorizations.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="308">In this chapter, we will cover the</st> <st c="344">following topics:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="361">Creating a</st> <st c="373">review model</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="385">Creating reviews</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="402">Reading reviews</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="418">Updating</st> <st c="428">a review</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="436">Deleting</st> <st c="446">a review</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="454">By the end of the chapter, you will have learned how to create CRUD
    operations for your models and handle authorizations.</st> <st c="577">You will
    also recap how to use forms and how to manage different</st> <st c="642">HTTP
    methods.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="655">Technical requirements</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="678">In this chapter, we will be using Python 3.10 or above.</st> <st
    c="735">Additionally, we will be using the</st> **<st c="770">VS Code</st>** <st
    c="777">editor in this book, which you can download</st> <st c="822">from</st>
    [<st c="827">https://code.visualstudio.com/</st>](https://code.visualstudio.com/)<st
    c="857">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="858">The code for this chapter is located</st> <st c="896">at</st> [<st
    c="899">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter09/moviesstore</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter09/moviesstore)<st
    c="1007">.</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1008">The CiA video for this chapter can be found</st> <st c="1053">at</st>
    [<st c="1056">https://packt.link/dsqdR</st>](https://packt.link/dsqdR)
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1080">Creating a review model</st>
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="1104">To store the movies’ review</st> <st c="1133">information, we need
    to create a review Django model and follow the</st> <st c="1201">next steps:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1212">Create the</st> <st c="1224">review model.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="1237">Apply migrations.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="1255">Add the review model to the</st> <st c="1284">admin panel.</st>
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: <st c="1296">Create the review model</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="1320">The review information is closely connected to movies.</st> <st
    c="1376">Therefore, we will include this model in the</st> `<st c="1421">movies</st>`
    <st c="1427">app.</st> <st c="1433">In the</st> `<st c="1440">/movies/models.py</st>`
    <st c="1457">file, add the following parts that are highlighted</st> <st c="1509">in
    bold:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**<st c="1958">Let’s explain the</st> <st c="1977">preceding code:</st>'
  prefs: []
  type: TYPE_NORMAL
- en: <st c="1992">We import the</st> `<st c="2007">User</st>` <st c="2011">model
    from Django’s</st> `<st c="2032">django.contrib.auth.models</st>` <st c="2058">module.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2066">We define a Python class named</st> `<st c="2098">Review</st>`<st
    c="2104">, which inherits from</st> `<st c="2126">models.Model</st>`<st c="2138">.
    This means that</st> `<st c="2156">Review</st>` <st c="2162">is a Django</st>
    <st c="2175">model class.</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="2187">Inside the</st> `<st c="2199">Review</st>` <st c="2205">class,
    we define</st> <st c="2223">several fields:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="2238">id</st>` <st c="2241">is an</st> `<st c="2248">AutoField</st>`<st
    c="2257">, which automatically increments its value for each new record added
    to the database.</st> <st c="2343">The</st> `<st c="2347">primary_key=True</st>`
    <st c="2363">parameter specifies that this field is</st> <st c="2402">the primary
    key for the table, uniquely identifying</st> <st c="2455">each record.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="2467">comment</st>` <st c="2475">is a</st> `<st c="2481">CharField</st>`<st
    c="2490">, which represents a string field with a maximum length of 255 characters.</st>
    <st c="2565">It stores the movie</st> <st c="2585">review text.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="2597">date</st>` <st c="2602">is a</st> `<st c="2608">DateTimeField</st>`
    <st c="2621">, which is used for date and time data.</st> <st c="2661">The</st>
    `<st c="2665">auto_now_add=True</st>` <st c="2682">ensures that the date and time
    are automatically set to the current date and time when the review</st> <st c="2781">is
    created.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="2792">movie</st>` <st c="2798">is a foreign key relationship to the</st>
    `<st c="2836">Movie</st>` <st c="2841">model.</st> <st c="2849">A review is associated
    with a movie.</st> <st c="2886">The</st> `<st c="2890">on_delete</st>` <st c="2899">parameter
    specifies how to handle the deletion of a movie that a review is associated with.</st>
    <st c="2992">In this case,</st> `<st c="3006">on_delete=models.CASCADE</st>` <st
    c="3030">means that if the related movie is deleted, the associated review will
    also</st> <st c="3107">be deleted.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="3118">user</st>` <st c="3123">is another foreign key relationship but
    to the</st> `<st c="3171">User</st>` <st c="3175">model.</st> <st c="3183">A review
    is associated with a user (the person who wrote the review).</st> <st c="3253">Similar
    to the</st> `<st c="3268">movie</st>` <st c="3273">attribute,</st> `<st c="3285">on_delete=models.CASCADE</st>`
    <st c="3309">specifies that if the related user is deleted, the associated review
    will also</st> <st c="3389">be deleted.</st>'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`<st c="3400">__str__</st>` <st c="3408">is a method that returns a string
    representation of the review.</st> <st c="3473">In this case, it returns a string
    that is composed of the review ID and the name of the movie associated with</st>
    <st c="3583">the</st> <st c="3586">review.</st>'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="3594">Apply migrations</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="3611">Now that we have created the</st> `<st c="3641">Review</st>` <st
    c="3647">model, let’s apply those changes to our database by running the following</st>
    <st c="3722">commands according to your</st> <st c="3749">operating system:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="3766">For macOS,</st> <st c="3778">run this:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: <st c="3846">For Windows,</st> <st c="3860">run this:</st>
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: <st c="3926">Now, you should see something like in</st> *<st c="3965">Figure
    9</st>**<st c="3973">.1</st>*<st c="3975">:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 9.1 – Applying the review migration](img/B22457_09_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: <st c="4052">Figure 9.1 – Applying the review migration</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="4094">Add the review model to the admin panel</st>
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: <st c="4134">To add the</st> `<st c="4146">Review</st>` <st c="4152">model to</st>
    `<st c="4162">admin</st>`<st c="4167">, go back to</st> `<st c="4180">/movies/admin.py</st>`
    <st c="4196">and register it by adding the</st> <st c="4227">following parts that
    are highlighted</st> <st c="4264">in bold:</st>
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: <p><b>Price:</b> ${{ template_data.movie.price }}</p> <st c="5459">{% if user.is_authenticated
    %}</st>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="5489"><div class="container mt-4"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5518"><div class="row justify-content-center"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5559"><div class="col-12"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5580"><div class="card shadow p-3 mb-4 rounded"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5623"><div class="card-body"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="5647"><b class="text-start">Create a review</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5685"></b><br /><br /></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5702"><form method="POST" action=</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5730">"{% url ''movies.create_review''</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5761">id=template_data.movie.id %}"></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5792">{% csrf_token %}</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5809"><p></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5813"><label for="comment">Comment:</label></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5851"><textarea name="comment" required</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5885">class="form-control"</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5906">id="comment"></textarea></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '****<st c="5931"></p></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5936"><div class="text-center"></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5962"><button type="submit"</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="5984">class="btn bg-dark text-white"></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6016">Add Review</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6027"></button></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6037"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6044"></form></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6052"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6059"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6066"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6073"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6080"></div></st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="6087">{% endif %}</st>** <st c="6099"></div>'
  prefs: []
  type: TYPE_NORMAL
- en: <div class="col-md-6 mx-auto mb-3 text-center">
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <img src="img/{{ template_data.movie.image.url }}"
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: class="rounded img-card-400" />
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </div>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{% endblock content %}</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: from django.shortcuts import render<st c="7048">, redirect</st> from .models
    import Movie<st c="7084">, Review</st>
  prefs: []
  type: TYPE_NORMAL
- en: '<st c="7092">from django.contrib.auth.decorators import login_required</st>
    def index(request):'
  prefs: []
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'def show(request):'
  prefs: []
  type: TYPE_NORMAL
- en: … <st c="7194">@login_required</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="7209">def create_review(request, id):</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="7241">if request.method == 'POST' and request.POST['comment']</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7297">!= '''':</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7303">movie = Movie.objects.get(id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7336">review = Review()</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7354">review.comment = request.POST[''comment'']</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7395">review.movie = movie</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7416">review.user = request.user</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7443">review.save()</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7457">return redirect(''movies.show'', id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7495">else:</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="7501">return redirect(''movies.show'', id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: from django.urls import path
  prefs: []
  type: TYPE_NORMAL
- en: from . import views
  prefs: []
  type: TYPE_NORMAL
- en: urlpatterns = [
  prefs: []
  type: TYPE_NORMAL
- en: path('', views.index, name='movies.index'),
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: path('<int:id>/', views.show, name='movies.show'), <st c="9179">path('<int:id>/review/create/',
    views.create_review,</st>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="9231">name='movies.create_review'),</st> ]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: <p><b>Price:</b> ${{ template_data.movie.price }}
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </p> <st c="10987"><h2>Reviews</h2></st>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="11003"><hr /></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11010"><ul class="list-group"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11034">{% for review in template_data.reviews %}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11076"><li class="list-group-item pb-3 pt-3"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11115"><h5 class="card-title"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11139">Review by {{ review.user.username }}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11176"></h5></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11182"><h6 class="card-subtitle mb-2 text-muted"></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11225">{{ review.date }}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11243"></h6></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11249"><p class="card-text">{{ review.comment }}</p></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11295"></li></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11301">{% endfor %}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="11314"></ul></st> {% if user.is_authenticated %}
  prefs: []
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: 'def show(request, id):'
  prefs: []
  type: TYPE_NORMAL
- en: movie =  Movie.objects.get(id=id) <st c="11695">reviews = Review.objects.filter(movie=movie)</st>
    template_data = {}
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: template_data['title'] = movie.name
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: template_data['movie'] = movie <st c="11826">template_data['reviews'] = reviews</st>
    return render(request, 'movies/show.html',
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '{''template_data'': template_data})'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: '{% for review in template_data.reviews %}'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <li class="list-group-item pb-3 pt-3">
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <h5 class="card-title">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Review by {{ review.user.username }}
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </h5>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <h6 class="card-subtitle mb-2 text-muted">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{{ review.date }}'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </h6>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <p class="card-text">{{ review.comment }}</p> <st c="13360">{% if user.is_authenticated
    and user ==</st>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="13399">review.user %}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13414"><a class="btn btn-primary"</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13441">href="{% url 'movies.edit_review'</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13475">id=template_data.movie.id</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13501">review_id=review.id %}">Edit</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13530"></a></st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="13535">{% endif %}</st> </li>
  prefs: []
  type: TYPE_NORMAL
- en: '{% endfor %}'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '{% extends ''base.html'' %}'
  prefs: []
  type: TYPE_NORMAL
- en: '{% block content %}'
  prefs: []
  type: TYPE_NORMAL
- en: <div class="p-3">
  prefs: []
  type: TYPE_NORMAL
- en: <div class="container">
  prefs: []
  type: TYPE_NORMAL
- en: <div class="row mt-3">
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <div class="col mx-auto mb-3">
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: <h2>Edit Review</h2>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <hr />
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <form method="POST">
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{% csrf_token %}'
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <p>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <label for="comment">Comment:</label>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <textarea name="comment" required
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: class="form-control" id="comment">{{
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: template_data.review.comment }}</textarea>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </p>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <div class="text-start">
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <button type="submit"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: class="btn bg-dark text-white">Edit Review
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </button>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </div>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </form>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </div>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </div>
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: </div>
  prefs: []
  type: TYPE_NORMAL
- en: '{% endblock content %}'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: from django.shortcuts import render, redirect<st c="14998">, get_object_or_404</st>
    … <st c="15019">@login_required</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15034">def edit_review(request, id, review_id):</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15075">review = get_object_or_404(Review, id=review_id)</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15124">if request.user != review.user:</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15156">return redirect('movies.show', id=id)</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15194">if request.method == 'GET':</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15222">template_data = {}</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15241">template_data['title'] = 'Edit Review'</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15280">template_data['review'] = review</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="15313">return render(request, 'movies/edit_review.html',</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15363">{''template_data'': template_data})</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15397">elif request.method == ''POST'' and</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15431">request.POST[''comment''] != '''':</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15462">review = Review.objects.get(id=review_id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15504">review.comment = request.POST[''comment'']</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15545">review.save()</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15559">return redirect(''movies.show'', id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15597">else:</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="15603">return redirect(''movies.show'', id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: from django.urls import path
  prefs: []
  type: TYPE_NORMAL
- en: from . import views
  prefs: []
  type: TYPE_NORMAL
- en: urlpatterns = [
  prefs: []
  type: TYPE_NORMAL
- en: path('', views.index, name='movies.index'),
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: path('<int:id>/', views.show, name='movies.show'),
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: path('<int:id>/review/create/', views.create_review,
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: name='movies.create_review'), <st c="17432">path('<int:id>/review/<int:review_id>/edit/',</st><st
    c="17477">views.edit_review, name='movies.edit_review'),</st> ]
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: <h5 class="card-title">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: Review by {{ review.user.username }}
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </h5>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <h6 class="card-subtitle mb-2 text-muted">
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{{ review.date }}'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </h6>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <p class="card-text">{{ review.comment }}</p>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '{% if user.is_authenticated and user =='
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: review.user %}
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <a class="btn btn-primary"
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: href="{% url 'movies.edit_review'
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: id=template_data.movie.id
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: review_id=review.id %}">Edit
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: </a> <st c="19184"><a class="btn btn-danger"</st>
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="19209">href="{% url 'movies.delete_review'</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19245">id=template_data.movie.id</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19271">review_id=review.id %}">Delete</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19302"></a></st> {% endif %}
  prefs: []
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: … <st c="19591">@login_required</st>
  prefs: []
  type: TYPE_NORMAL
- en: <st c="19606">def delete_review(request, id, review_id):</st>
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19649">review = get_object_or_404(Review, id=review_id,</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19698">user=request.user)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19717">review.delete()</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '**<st c="19733">return redirect(''movies.show'', id=id)</st>**'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: …
  prefs: []
  type: TYPE_NORMAL
- en: urlpatterns = [
  prefs: []
  type: TYPE_NORMAL
- en: …
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: path('<int:id>/review/<int:review_id>/edit/',
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: views.edit_review, name='movies.edit_review'), <st c="20581">path('<int:id>/review/<int:review_id>/delete/',</st>
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
- en: <st c="20628">views.delete_review, name='movies.delete_review'),</st> ]
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]**'
  prefs: []
  type: TYPE_NORMAL
