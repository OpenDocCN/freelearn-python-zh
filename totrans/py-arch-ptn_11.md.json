["```py\n$ docker version\n\nClient:\n\n Cloud integration: 1.0.17\n\n Version:           20.10.7\n\n API version:       1.41\n\n Go version:        go1.16.4\n\n Git commit:        f0df350\n\n Built:             Wed Jun  2 11:56:22 2021\n\n OS/Arch:           darwin/amd64\n\n Context:           desktop-linux\n\n Experimental:      true\n\nServer: Docker Engine - Community\n\n Engine:\n\n  Version:          20.10.7\n\n  API version:      1.41 (minimum version 1.12)\n\n  Go version:       go1.13.15\n\n  Git commit:       b0f5bc3\n\n  Built:            Wed Jun  2 11:54:58 2021\n\n  OS/Arch:          linux/amd64\n\n  Experimental:     false\n\n containerd:\n\n  Version:          1.4.6\n\n  GitCommit:        d71fcd7d8303cbf684402823e425e9dd2e99285d\n\n runc:\n\n  Version:          1.0.0-rc95\n\n  GitCommit:        b9ee9c6314599f1b4a7f497e1f1f856fe433d3b7\n\n docker-init:\n\n  Version:          0.19.0\n\n  GitCommit:        de40ad0 \n```", "```py\nFROM ubuntu \n\nRUN mkdir -p /opt/\n\nCOPY sometext.txt /opt/sometext.txt\n\nCMD cat /opt/sometext.txt \n```", "```py\nRUN mkdir -p /opt/ \n```", "```py\nCOPY sometext.txt /opt/sometext.txt \n```", "```py\nCMD cat /opt/sometext.txt \n```", "```py\ndocker build -f <Dockerfile> --tag <tag name> <context> \n```", "```py\n$ docker build -f Dockerfile.sample -–tag example .\n\n[+] Building 1.9s (8/8) FINISHED\n\n => [internal] load build definition from Dockerfile.sample                                              \n\n => => transferring dockerfile: 92B                                                                                   \n\n => [internal] load .dockerignore                                                                                     \n\n => => transferring context: 2B                                                                                       \n\n => [internal] load metadata for docker.io/library/ubuntu:latest                                                      \n\n => [1/3] FROM docker.io/library/ubuntu@sha256:82becede498899ec668628e7cb0ad87b6e1c371cb8a1e597d83a47fac21d6af3       \n\n => [internal] load build context                                                                                     \n\n => => transferring context: 82B                                                                                      \n\n => CACHED [2/3] RUN mkdir -p /opt/                                                                                   \n\n => CACHED [3/3] COPY sometext.txt /opt/sometext.txt                                                                  \n\n => exporting to image                                                                                                \n\n => => exporting layers                                                                                               \n\n => => writing image sha256:e4a5342b531e68dfdb4d640f57165b704b1132cd18b5e2ba1220e2d800d066cb \n```", "```py\n$ docker images\n\nREPOSITORY      TAG          IMAGE ID       CREATED         SIZE\n\nexample         latest       e4a5342b531e   2 hours ago     72.8MB\n\nubuntu          latest       1318b700e415   47 hours ago    72.8MB \n```", "```py\n$ docker run example\n\nSome example text \n```", "```py\nFROM ubuntu AS runtime-image\n\n# Install Python, uwsgi and nginx\n\nRUN apt-get update && apt-get install -y python3 nginx uwsgi uwsgi-plugin-python3\n\nRUN apt-get install -y python3-pip\n\n# Add starting script and config\n\nRUN mkdir -p /opt/server\n\nADD ./docker/uwsgi.ini /opt/server\n\nADD ./docker/nginx.conf /etc/nginx/conf.d/default.conf\n\nADD ./docker/start_server.sh /opt/server\n\n# Add and install requirements\n\nADD requirements.txt /opt/server\n\nRUN pip3 install -r /opt/server/requirements.txt\n\n# Add the source code\n\nRUN mkdir -p /opt/code\n\nADD ./src/ /opt/code\n\nWORKDIR /opt/code\n\n# compile the static files\n\nRUN python3 manage.py collectstatic --noinput\n\nEXPOSE 8000\n\nCMD [\"/bin/sh\", \"/opt/server/start_server.sh\"] \n```", "```py\nFROM ubuntu AS runtime-image\n\n# Install Python, uwsgi and nginx\n\nRUN apt-get update && apt-get install -y python3 nginx uwsgi uwsgi-plugin-python3\n\nRUN apt-get install -y python3-pip \n```", "```py\n# Add starting script and config\n\nRUN mkdir -p /opt/server\n\nADD ./docker/uwsgi.ini /opt/server\n\nADD ./docker/nginx.conf /etc/nginx/conf.d/default.conf\n\nADD ./docker/start_server.sh /opt/server\n\nRUN chmod +x /opt/server/start_server.sh \n```", "```py\n# Add and install requirements\n\nADD requirements.txt /opt/server\n\nRUN pip3 install -r /opt/server/requirements.txt \n```", "```py\n# Add the source code\n\nRUN mkdir -p /opt/code\n\nADD ./src/ /opt/code\n\nWORKDIR /opt/code\n\n# compile the static files\n\nRUN python3 manage.py collectstatic --noinput \n```", "```py\nEXPOSE 8000\n\nCMD [\"/bin/bash\", \"/opt/server/start_server.sh\"] \n```", "```py\n[uwsgi]\n\nplugins=python3\n\nchdir=/opt/code\n\nwsgi-file = microposts/wsgi.py\n\nmaster=True\n\nsocket=/tmp/uwsgi.sock\n\nvacuum=True\n\nprocesses=1\n\nmax-requests=5000\n\nuid=www-data\n\n# Used to send commands to uWSGI\n\nmaster-fifo=/tmp/uwsgi-fifo \n```", "```py\nserver {\n\n    listen 8000 default_server;\n\n    listen [::]:8000 default_server;\n\n    root /opt/code/;\n\n    location /static/ {\n\n        autoindex on;\n\n        try_files $uri $uri/ =404;\n\n    }\n\n    location / {\n\n        proxy_set_header Host $host;\n\n        proxy_set_header X-Real-IP $remote_addr;\n\n        uwsgi_pass unix:///tmp/uwsgi.sock;\n\n        include uwsgi_params;\n\n    }\n\n} \n```", "```py\n#!/bin/bash\n\n_term() {\n\n  # See details in the uwsgi.ini file and\n\n  # in http://uwsgi-docs.readthedocs.io/en/latest/MasterFIFO.html\n\n  # q means \"graceful stop\"\n\n  echo q > /tmp/uwsgi-fifo\n\n}\n\ntrap _term TERM\n\nnginx\n\nuwsgi --ini /opt/server/uwsgi.ini &\n\n# We need to wait to properly catch the signal, that's why uWSGI is started\n\n# in the background. $! is the PID of uWSGI\n\nwait $!\n\n# The container exits with code 143, which means \"exited because SIGTERM\"\n\n# 128 + 15 (SIGTERM)\n\n# http://www.tldp.org/LDP/abs/html/exitcodes.html\n\n# http://tldp.org/LDP/Bash-Beginners-Guide/html/sect_12_02.html\n\necho \"Exiting, bye!\" \n```", "```py\nuwsgi --ini /opt/server/uwsgi.ini &\n\nwait $! \n```", "```py\n_term() {\n\n  echo q > /tmp/uwsgi-fifo\n\n}\n\ntrap _term TERM \n```", "```py\n$ docker build -f docker/Dockerfile --tag example .\n\n[+] Building 0.2s (19/19) FINISHED\n\n => [internal] load build definition from Dockerfile\n\n => => transferring dockerfile: 85B\n\n => [internal] load .dockerignore \n\n => => transferring context: 2B\n\n => [internal] load metadata for docker.io/library/ubuntu:latest\n\n => [ 1/14] FROM docker.io/library/ubuntu\n\n => [internal] load build context\n\n => => transferring context: 4.02kB\n\n => CACHED [ 2/14] RUN apt-get update && apt-get install -y python3 nginx uwsgi uwsgi-plugin-pytho  \n\n => CACHED [ 3/14] RUN apt-get install -y python3-pip\n\n => CACHED [ 4/14] RUN mkdir -p /opt/server \n\n => CACHED [ 5/14] ADD ./docker/uwsgi.ini /opt/server\n\n => CACHED [ 6/14] ADD ./docker/nginx.conf /etc/nginx/conf.d/default.conf\n\n => CACHED [ 7/14] ADD ./docker/start_server.sh /opt/server\n\n => CACHED [ 8/14] RUN chmod +x /opt/server/start_server.sh\n\n => CACHED [ 9/14] ADD requirements.txt /opt/server\n\n => CACHED [10/14] RUN pip3 install -r /opt/server/requirements.txt\n\n => CACHED [11/14] RUN mkdir -p /opt/code \n\n => CACHED [12/14] ADD ./src/ /opt/code\n\n => CACHED [13/14] WORKDIR /opt/code\n\n => CACHED [14/14] RUN python3 manage.py collectstatic --noinput\n\n => exporting to image\n\n => => exporting layers\n\n => => writing image sha256:7be9ae2ab0e16547480aef6d32a11c2ccaa3da4aa5efbfddedb888681b8e10fa\n\n => => naming to docker.io/library/example \n```", "```py\n$ docker run -p 8000:8000 example\n\n[uWSGI] getting INI configuration from /opt/server/uwsgi.ini\n\n*** Starting uWSGI 2.0.18-debian (64bit) on [Sat Jul 31 20:07:20 2021] ***\n\ncompiled with version: 10.0.1 20200405 (experimental) [master revision 0be9efad938:fcb98e4978a:705510a708d3642c9c962beb663c476167e4e8a4] on 11 April 2020 11:15:55\n\nos: Linux-5.10.25-linuxkit #1 SMP Tue Mar 23 09:27:39 UTC 2021\n\nnodename: b01ce0d2a335\n\nmachine: x86_64\n\nclock source: unix\n\npcre jit disabled\n\ndetected number of CPU cores: 2\n\ncurrent working directory: /opt/code\n\ndetected binary path: /usr/bin/uwsgi-core\n\nsetuid() to 33\n\nchdir() to /opt/code\n\nyour memory page size is 4096 bytes\n\ndetected max file descriptor number: 1048576\n\nlock engine: pthread robust mutexes\n\nthunder lock: disabled (you can enable it with --thunder-lock)\n\nuwsgi socket 0 bound to UNIX address /tmp/uwsgi.sock fd 3\n\nPython version: 3.8.10 (default, Jun  2 2021, 10:49:15)  [GCC 9.4.0]\n\n*** Python threads support is disabled. You can enable it with --enable-threads ***\n\nPython main interpreter initialized at 0x55a60f8c2a40\n\nyour server socket listen backlog is limited to 100 connections\n\nyour mercy for graceful operations on workers is 60 seconds\n\nmapped 145840 bytes (142 KB) for 1 cores\n\n*** Operational MODE: single process ***\n\nWSGI app 0 (mountpoint='') ready in 1 seconds on interpreter 0x55a60f8c2a40 pid: 11 (default app)\n\n*** uWSGI is running in multiple interpreter mode ***\n\nspawned uWSGI master process (pid: 11)\n\nspawned uWSGI worker 1 (pid: 13, cores: 1) \n```", "```py\n[pid: 13|app: 0|req: 2/2] 172.17.0.1 () {42 vars in 769 bytes} [Sat Jul 31 20:28:56 2021] GET /api/users/jaime/collection => generated 10375 bytes in 173 msecs (HTTP/1.1 200) 8 headers in 391 bytes (1 switches on core 0) \n```", "```py\n$ docker ps\n\nCONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                       NAMES\n\nb01ce0d2a335   example   \"/bin/bash /opt/serv…\"   23 minutes ago   Up 23 minutes   0.0.0.0:8000->8000/tcp, :::8000->8000/tcp   hardcore_chaum\n\n$ docker stop b01ce0d2a335\n\nb01ce0d2a335 \n```", "```py\nCaught SIGTERM signal! Sending graceful stop to uWSGI through the master-fifo\n\nExiting, bye! \n```"]