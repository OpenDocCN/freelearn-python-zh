["```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<title>Hello World!</title>\n</head>\n<body>\n<p>Not much to say really.</p>\n</body>\n</html>\n\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html >\n<head>\n<title>Hello World!</title>\n</head>\n<body>\n<p>Not much to say really.</p>\n</body>\n</html>\n\n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<title>Hello World!</title>\n<style type=\"text/css\">\nbody\n{\nbackground-color: #666633;\ncolor: #fff;\n}\np\n{\ntext-align: center;\n}\n</style>\n</head>\n<body>\n<p>Not much to say really.</p>\n</body>\n</html>\n\n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<title>Hello World!</title>\n<link rel=\"stylesheet\" href=\"style.css\">\n</head>\n<body>\n<p>Not much to say really.</p>\n</body>\n</html>\n\n```", "```py\nbody\n{\nbackground-color: #663;\ncolor: #fff;\n}\np\n{\ntext-align: center;\n}\n\n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html >\n<head>\n<title>${title}</title>\n<link rel=\"stylesheet\" href=\"style.css\" />\n</head>\n<body> <p>${message}</p>\n</body>\n</html>\n\n```", "```py\nimport kid\nparams = {'title': 'Hello world', 'message': 'Not much to say.'}\nt = kid.Template('helloworld.kid', **params)\nprint t.serialize(output='html')\n\n```", "```py\n<p py:if=\"...\">...</p>\n\n```", "```py\n<tag py:if=\"expression\">...</tag>\n\n```", "```py\n<tag py:for=\"*expression*\">...</tag>\n\n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html >\n<head>\n<title>${title}</title>\n<link rel=\"stylesheet\" href=\"style.css\" />\n</head>\n<body>\n<table>\n<caption>A few songs</caption>\n<tr>\n<th>Artist</th>\n<th>Album</th>\n<th>Title</th>\n</tr>\n<tr py:for=\"info in infos\">\n<td>${info['artist']}</td>\n<td>${info['album']}</td>\n<td>${info['song']}</td>\n</tr>\n</table>\n</body>\n</html>\nimport kid\n# Fake object and method which suggests that we pull the data to be\n# rendered from a database in the form of a Python dictionary.\nparams = discography.retrieve_songs()\nt = kid.Template('songs.kid', **params)\nprint t.serialize(output='html')\n\n```", "```py\n<tag py:extends=\"templates\">...</tag>\n\n```", "```py\n<html >\n<head py:match=\"item.tag == 'this-is-ed'\">\n<title>${title}</title>\n<link rel=\"stylesheet\" href=\"style.css\" />\n</head>\n</html>\n\n```", "```py\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html py:extends=\"'common.kid'\" >\n...\n...\n<body>\n<table>\n<caption>A few songs</caption>\n<tr>\n<th>Artist</th>\n<th>Album</th>\n<th>Title</th>\n</tr>\n<tr py:for=\"info in infos\">\n<td>${info['artist']}</td>\n<td>${info['album']}</td>\n<td>${info['song']}</td>\n</tr>\n</table>\n</body>\n</html>\n\n```", "```py\ndefault\\\ncommond.kid\nindex.kid\ncss\\\nstyle.css\nimages\\\njs\\\n\n```", "```py\nimport os.path\nimport cherrypy\nfrom cherrypy import Tool, tools\nimport kid\ndef transform(path=None, template=None):\nparams = cherrypy.response.body\nif path and template and isinstance(params, dict):\npath = os.path.normpath(os.path.join(path, template + '.kid'))\ntemplate = kid.Template(file=path, **params)\ncherrypy.response.body = template.generate(output='html')\n# Attach our Design tool to the CherryPy default toolbox\ntools.design = Tool(\"before_finalize\", transform)\n\n```", "```py\n@cherrypy.expose\n@cherrypy.tools.design(template='index')\ndef index(self):\nreturn {...}\n\n```", "```py\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">\n<html py:extends=\"'common.kid'\" >\n<head />\n<body>\n<!-- main container of our content -->\n<div id=\"page\">\n<div id=\"header\">\n<br />\n</div>\n<div id=\"nav\">\n<ul>\n<li><a href=\"/\">Home</a></li>\n<li><a href=\"/\">Albums</a></li>\n<li><a href=\"/\">Sign-In</a></li>\n<li><a href=\"/\">About</a></li>\n</ul>\n</div>\n<!-- content area where we will display the picture\nand other content such as forms -->\n<div id=\"content-pane\">\n<div id=\"photo-pane\">\n<img id=\"photo-data\" src=\"img/\" alt=\"\" /><br />\n</div>\n</div>\n<div id=\"footer\">\n<br />\n</div>\n</div>\n</body>\n</html>\n\n```", "```py\n<html >\n<head py:match=\"item.tag == 'head'\">\n<title></title>\n<meta http-equiv=\"content-type\" content=\"text/html;\ncharset=iso-8859-1\"> </meta>\n</head>\n</html>\n\n```", "```py\nimport cherrypy\nimport kid\nclass Root:\n@cherrypy.expose\ndef index(self):\nt = kid.Template('index.kid')\nreturn t.generate(output='html')\nif __name__ == '__main__':\nimport os.path\ncur_dir = os.getcwd()\nconf = {'/style.css': {'tools.staticfile.on': \\\nTrue,'tools.staticfile.filename': os.path.join(cur_dir, \\\n'style.css')}}\ncherrypy.quickstart(Root(), config=conf)\n\n```", "```py\n<html >\n<head py:match=\"item.tag == 'head'\">\n<title></title>\n<meta http-equiv=\"content-type\" content=\"text/html;\ncharset=iso-8859-1\">\n</meta>\n<link rel=\"stylesheet\" type=\"text/css\" href=\"/style.css\"> </link>\n</head>\n</html>\n\n```", "```py\nbody\n{\nbackground-color: #ffffff;\nfont-family: sans-serif;\nfont-size: small;\nline-height: 1.3em;\ntext-align: center;\n}\n#page\n{\nposition:relative;\nPhotoblog designbasic structuretop: 25px;\nmargin: 0px auto;\ntext-align:left;\nwidth: 600px;\nposition: left;\nborder: 1px #ffffff solid;\n}\n#header\n{\nheight: 45px;\nbackground-color: #71896D;\nborder-bottom: 2px #858A6E solid;\n}\n#nav\n{\nheight: 20px;\nbackground-color: #CED6AB;\nborder-bottom: 2px #858A6E solid;\nfont-weight: bold;\ntext-align: right;\n}\n#nav ul\n{\nmargin: 0 0 0 20px;\npadding: 0;\nlist-style-type: none;\n}\n#nav li\n{\ndisplay: inline;\npadding: 0 10px;\n}\n#nav li a\n{\ntext-decoration: none;\ncolor: #858A6E;\n}\n#nav li a:hover\n{\ntext-decoration: none;\ncolor: #999966;\n}\n#content-pane\n{\nbackground-color: #ffffff;\nPhotoblog designbasic structureborder-bottom: 1px #858A6E solid;\ntext-align: center;\npadding: 50px 50px 50px 50px;\n}\n#photo-pane img\n{\nborder: 1px #858A6E solid;\npadding: 3px 3px 3px 3px;\n}\n#footer\n{\nheight: 20px;\nbackground-color: #CED6AB;\n}\n\n```", "```py\n<div id=\"film-pane\">\n<div id=\"film-infos-pane\">\n<label class=\"infos-label\">Title:</label>\n<span class=\"infos-content\">My last holiday</span>\n<label class=\"infos-label\">Created on:</label>\n<span class=\"infos-content\">18th August, 2006</span>\n<label class=\"infos-label\">Updated on:</label>\n<span class=\"infos-content\">27th August, 2006</span>\n<label class=\"infos-label\">Description:</label>\n<span class=\"infos-content\">Some text here...</span>\n</div>\n</div>\n\n```", "```py\n<span id=\"toggle-film-infos\">Film information</span>\n\n```", "```py\nfunction toggleFilmVisibility(e)\n{\ntoggle($('film-pane'), 'slide');\n}\nfunction initialize(e)\n{\nhideElement($('film-pane'));\nconnect('toggle-film-infos', 'onclick', toggleFilmVisibility);\n};\nconnect(window, 'onload', initialize);\n\n```", "```py\n<script type=\"application/javascript\" src=\"img/MochiKit.js\" />\n<script type=\"application/javascript\" src=\"img/New.js\" />\n<script type=\"application/javascript\" src=\"img/utils.js\" />\n\n```", "```py\n/* will inform the end-user the text is clickable as link */\nspan#toggle-film-infos\n{\ncursor: pointer;\ntext-align: left;\n}\nspan#toggle-film-infos:hover\n{\ntext-decoration: underline;\n}\n#film-pane\n{\nborder: 1px #663 solid;\npadding: 3px 3px 3px 3px;\nbackground-color: #fff;\n}\n#film-infos-pane\n{\ntext-align: left;\n}\n/* the following rules allow the information to be\norganized and displayed as in table */\ninfos-content, .infos-label\n{\ndisplay: block;\nwidth: 170px;\nfloat: left;\nmargin-bottom: 2px;\n}\ninfos-label\n{\ntext-align: left;\nwidth: 95px;\npadding-right: 20px;\nfont-weight: bold;\n}\n\n```", "```py\nvar albumInfoBlock = DIV({'class': 'albums-infos-pane', 'id':\n'album-' + album['id']},\nLABEL({'class': 'infos-label'}, 'Title:'),\nSPAN({'class': 'infos-content'}, album['title']),\nLABEL({'class': 'infos-label'}, 'Created on:'),\nSPAN({'class': 'infos-content'}, album['created']),\nLABEL({'class': 'infos-label'}, 'Updated on:'),\nSPAN({'class': 'infos-content'}, album['updated']),\nLABEL({'class': 'infos-label'}, 'Description:'),\nSPAN({'class': 'infos-content'}, album['description']));\n\n```", "```py\nconnect(albumInfoBlock, 'onclick', selectAlbum);\n\n```", "```py\nappendChildNodes(albumsPane, albumInfoBlock);\ntoggle(albumsPane, 'blind');\n\n```"]