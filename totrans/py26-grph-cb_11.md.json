["```py\n# grid_button_array_1.py\n#>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Pack Geometry Manager\")\nbutn_NW = Button(root, bg='blue',text=\"NorthWest\").grid(row=0, \\ column=0)\nbutn_NW1 = Button(root, bg='blue',text=\"Northwest\").grid(row=0, \\ column=1)\nbutn_NE1 = Button(root, bg='blue',text=\"Northeast\").grid(row=0, \\ column=2)\nbutn_NE = Button(root, bg='blue',text=\"NorthEast\").grid(row=0, \\ column=3)\nbutn_N1W = Button(root, bg='sky blue',text=\"norWest\").grid(row=1, \\ column=0)\nGrid Layout Geometry Managerexamplebutn_N1W1 = Button(root, bg='sky blue',text=\"norwest\").grid(row=1, \\ column=1)\nbutn_S1E1 = Button(root, bg='pale green',text=\"soueast\").grid(row=1, column=2)\nbutn_S1E = Button(root, bg='pale green',text=\"souEast\").grid(row=1, column=3)\nbutn_SW = Button(root, bg='green',text=\"SouthWest\").grid(row=2, \\column=0)\nbutn_SW1 = Button(root, bg='green',text=\"SothuWest\").grid(row=2, \\ column=1)\nbutn_SE1 = Button(root, bg='green',text=\"SouthEast\").grid(row=2, \\ column=2)\nbutn_SE = Button(root, bg='green',text=\"SouthEast\").grid(row=2, \\ column=3)\nroot.mainloop()\n\n```", "```py\n# pack_button_array_1.py\n#>>>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Pack Geometry Manager\")\nbutn_NW = Button(root, bg='blue',text=\"NorthWest\").pack(side=LEFT)\nbutn_NW1 = Button(root, bg='blue',text=\"Northwest\").pack(side=LEFT)\nbutn_NE1 = Button(root, bg='blue',text=\"Northeast\").pack(side=LEFT)\nbutn_NE = Button(root, bg='blue',text=\"NorthEast\").pack(side=LEFT)\nbutn_N1W = Button(root, bg='sky blue',text=\"norWest\").pack()\nbutn_N1W1 = Button(root, bg='sky blue',text=\"norwest\").pack()\nbutn_S1E1 = Button(root, bg='pale green',text=\"soueast\").pack(side=BOTTOM)\nPack Geometry Managerexamplebutn_S1E = Button(root, bg='pale green',text=\"souEast\").pack(side=BOTTOM)\nbutn_SW = Button(root, bg='green',text=\"SouthWest\").pack(side=RIGHT)\nbutn_SW1 = Button(root, bg='green',text=\"SothuWest\").pack(side=RIGHT)\nbutn_SE1 = Button(root, bg='green',text=\"SouthEast\").pack(side=RIGHT)\nbutn_SE = Button(root, bg='green',text=\"SouthEast\").pack(side=RIGHT)\nroot.mainloop()\n\n```", "```py\n# radiobuttons_1.py\n#>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk( )\nroot.title(\"Radiobuttons\")\nvar_1 = StringVar( )\nrad_1 = Radiobutton(root, text='violent', variable = var_1, \\ value=\"action\").grid(row=0, column=0)\nrad_2 = Radiobutton(root, text='love', variable = var_1, \\ value=\"romance\").grid(row=0, column=1)\nrad_2 = Radiobutton(root, text='conflict', variable = var_1, \\ value=\"war\").grid(row=0, column=2)\ndef callback_1():\nv_1 = var_1.get()\nprint v_1\nbutton_1= Button(root, command=callback_1).grid(row=4, column=0)\nroot.mainloop()\n\n```", "```py\n# checkbox_1.py\n#>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nimport tkMessageBox\nroot = Tk()\nroot.title(\"Checkboxes\")\ncheck_var1 = IntVar()\ncheck_var2 = IntVar()\ncheck_var3 = StringVar()\ncheck_var4 = StringVar()\ndef change_it():\nprint \"Why do you want to change things?\"\nCk_1 = Checkbutton(root, text = \"Dog\", variable = check_var1, \\ command=change_it, \\\nonvalue = 1, offvalue = 0, height=3, \\\nwidth = 10).grid(row=0, column=0)\nCk_2 = Checkbutton(root, text = \"Cat\", variable = check_var2, \\\nonvalue = 1, offvalue = 0, height=6, \\\nwidth = 10).grid(row=1, column=0)\nCk_3 = Checkbutton(root, text = \"Rat\", variable = check_var3, \\\nonvalue = \"fly me\", offvalue = \"keep walking\", \\ height=9, \\\nwidth = 10).grid(row=2, column=0)\nCk_4 = Checkbutton(root, text = \"Frog\", variable = check_var4, \\\nonvalue = \"to the moon\", offvalue = \"to Putney road\", \\height=12, \\\nwidth = 10).grid(row=3, column=0)\ndef callback_1():\nv_1 = check_var1.get()\nv_2 = check_var2.get()\nv_3 = check_var3.get()\nv_4 = check_var4.get()\nprint v_1, v_2, v_3, v_4\nbutton_1= Button(root, command=callback_1).grid(row=4, column=0)\nroot.mainloop()\n\n```", "```py\n# keypress_1.py\n#>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Key symbol Getter\")\ndef key_was_pressed(event):\nprint 'keysym=%s' % (event.keysym)\ntext_1 = Text(root, width=20, height=5, highlightthickness=15)\ntext_1.grid(row=0, column=0)\ntext_1.focus_set()\nroot.mainloop()\n\n```", "```py\nscrollbar_1.py\n#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nframe_1 = Frame(root, bd=2, relief=SUNKEN)\nframe_1.grid(row=0, column=0)\npic_1 = PhotoImage(file=\"/constr/pics1/table_glass_vase.gif\")\nyscrollbar = Scrollbar(frame_1, orient=VERTICAL, \\ bg=\"skyblue\",activebackground=\"blue\")\nyscrollbar.grid(row=0, column=1, sticky=N+S)\ncanvas_1 = Canvas(frame_1, bd=0, scrollregion=(0, 0, 2100, 2000), # The extent of the scrollable area.\nyscrollcommand=yscrollbar.set, # Link to the # scrollbar.\n)\ncanvas_1.grid(row=0, column=0)\ncanvas_1.create_image(0 ,0 ,anchor=NW, image= pic_1)\nyscrollbar.config(command=canvas_1.yview) # Link to the #canvas.\nmainloop()\n\n```", "```py\nxscrollbar = Scrollbar(frame_1, orient=HORIZONTAL, bg=\"orange\",activebackground=\"red\")\nxscrollbar.grid(row=1, column=0),\ncanvas_1 = Canvas(frame_1, bd=0, scrollregion=(0, 0, 2100, 2000), # The extent of the area across which can be scrolled.\nxscrollcommand=xscrollbar.set,\nyscrollcommand=yscrollbar.set,\n\n```", "```py\n# mini_slider_widget_1.py\n#>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nimport math\nroot = Tk()\nroot.title(\"A 3 color linear slider control gadget\")\ncw = 200 # canvas width\nch = 200 # canvas height\nchart_1 = Canvas(root, width=cw, height=ch, background=\"#ffffff\")\nchart_1.grid(row=1, column=1)\n#============================================\n# Mini slider canvas widget\nfocus_flag = 0 # 0-> uncommited, 1 -> slider #1, 2 -> slider #2 etc.\nx_1 = 50 # Position of slider #1 base.\ny_1 = 150\nx_2 = 80 # Position of slider #2 base.\ny_2 = 150\nx_3 = 110 # Position of slider #3 base.\ny_3 = 150\nlength_1 = 100 # Length of slider #1 (pixels) - constant.\nlength_2 = 110\nlength_3 = 120\nslide_1 = y_1 # Position of slider handle #1 - variable.\nslide_2 = y_2\nslide_3 = y_3\n#==============================================\ndef separation(x_now, y_now, x_dot, y_dot): # distance # measurement\n# Distance to points - used to find out if the mouse clicked # inside a circle\nsum_squares = (x_now - x_dot)**2 + (y_now -y_dot)**2\ndistance= int(math.sqrt(sum_squares)) # get #pythagorean distance\nwidgetsconstructingreturn( distance)\n#==============================================\ndef canv_slider(xn, yn, length, kula):\n# Draw the background slider gadgets.\ny_top = yn -length\nchart_1.create_line(xn, yn, xn, y_top, fill=\"gainsboro\", width = 6)\nchart_1.create_rectangle(xn - 5, yn -3, xn + 5, yn + 3, fill=kula, tag=\"knob_active\")\nchart_1.create_text(xn, yn + 10, text='zero',font=('verdana', 8))\nchart_1.create_text(xn, y_top - 10, text='max',font=('verdana', 8))\ncanv_slider(x_1, y_1, length_1, \"red\")\ncanv_slider(x_2, y_2, length_2, \"green\")\ncanv_slider(x_3, y_3, length_3, \"blue\")\n#==============================================\ndef dyn_slider(xn, yn, slide_val, kula, tagn):\n# Draw the dynamic slider position.\nchart_1.delete(tagn)\nchart_1.create_line(xn, yn, xn, slide_val, fill=kula, width=4, tag =tagn)\nchart_1.create_rectangle(xn - 5, slide_val -3 , xn + 5,slide_val + 3, fill=kula, tag=tagn)\nchart_1.create_text(xn + 15, slide_val, text=str(slide_val), font=('verdana', 6),tag =tagn)\n#==============================================\ndef callback_1(event):\n# LEFT CLICK event processor.\nglobal x_1, y_1, x_2, y_2, x_3, y_3, focus_flag\nglobal slide_1, slide_2, slide_3\n# Measure distances to identify which point has been clicked on.\nd1 = separation(event.x, event.y, x_1, slide_1)\nd2 = separation(event.x, event.y, x_2, slide_2)\nd3 = separation(event.x, event.y, x_3, slide_3)\nif d1 <= 5:\nfocus_flag = 1\nif d2 <= 5:\nfocus_flag = 2\nif d3 <= 5:\nfocus_flag = 3\ndef callback_2(event):\nwidgetsconstructing# LEFT DRAG event processor.\nglobal length_1, length_2, length_3\nglobal x_1, y_1, x_2, y_2, x_3, y_3, focus_flag\nglobal slide_1, slide_2, slide_3\npos_x = event.x\nslide_val = event.y\nif focus_flag == 1 and slide_val <= y_1 and slide_val >= y_1 - length_1\\\nand pos_x <= x_1 + 10 and pos_x >= x_1 - 10:\ndyn_slider(x_1, y_1, slide_val, \"red\", \"slide_red\")\nslide_1 = slide_val\nif focus_flag == 2 and slide_val <= y_2 and slide_val >= y_2 - length_2\\\nand pos_x <= x_2 + 10 and pos_x >= x_2 - 10:\ndyn_slider(x_2, y_2, slide_val, \"green\", \"slide_green\")\nslide_2 = slide_val\nif focus_flag == 3 and slide_val <= y_3 and slide_val >= y_3 - length_3\\\nand pos_x <= x_3 + 10 and pos_x >= x_3 - 10:\ndyn_slider(x_3, y_3, slide_val, \"blue\", \"slide_blue\" )\nslide_3 = slide_val\n#==============================\nchart_1.bind(\"<Button-1>\", callback_1)\nchart_1.bind(\"<B1-Motion>\", callback_2)\nroot.mainloop()\n\n```", "```py\n# frame_1.py\n#>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.config(bg=\"black\")\nroot.title(\"It's a Frame-up\")\n#================================================\n# frame_1 and her motley little family\nframe_1 = Frame(root, bg=\"red\", border = 4, relief=\"raised\")\nframe_1.grid(row=0, column=0, columnspan=2)\nredbutton_1 = Button(frame_1, text=\"Red\",bg =\"orange\", fg=\"red\")\nredbutton_1.grid(row=0, column=1)\ngreenbutton_1 = Button(frame_1, text=\"Brown\",bg =\"pink\", fg=\"brown\")\ngreenbutton_1.grid(row=1, column=2)\nbluebutton_1 = Button(frame_1, text=\"Blue\",bg =\"yellow\", fg=\"blue\")\nbluebutton_1.grid(row=0, column=3)\n#================================================\n# frame _2 and her neat blue home\nframe_2 = Frame(root, bg=\"blue\", border = 10, relief=\"sunken\")\nframe_2.grid(row=1, column=0)\nredbutton_2 = Button(frame_2, text=\"Green\",bg =\"brown\", fg=\"green\")\nredbutton_2.grid(row=0, column=1)\ngreenbutton_2 = Button(frame_2, text=\"Brown\",bg =\"green\", fg=\"brown\")\ngreenbutton_2.grid(row=2, column=2)\nbluebutton_2 = Button(frame_2, text=\"Pink\",bg =\"gray\", fg=\"black\")\nbluebutton_2.grid(row=3, column=3)\n#================================================\n# frame_3 with her friendly green home\nframe_3 = Frame(root, bg=\"green\", border = 20, relief=\"groove\")\nframe_3.grid(row=1, column=1)\nredbutton_3 = Button(frame_3, text=\"Purple\",bg =\"white\", fg=\"red\")\nredbutton_3.grid(row=0, column=3)\ngreenbutton_3 = Button(frame_3, text=\"Violet\",bg =\"cyan\", fg=\"violet\")\ngreenbutton_3.grid(row=2, column=2)\nbluebutton_3 = Button(frame_3, text=\"Cyan\",bg =\"purple\", fg=\"blue\")\nbluebutton_3.grid(row=3, column=0)\nroot.mainloop()\n\n```"]