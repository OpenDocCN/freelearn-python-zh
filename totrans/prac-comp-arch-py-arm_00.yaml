- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: A fundamental thread of computer science is computer architecture. This topic
    was once called computer hardware and is concerned with the physical computer
    itself; that is, the **central processing unit** (**CPU**), memory, buses, and
    peripherals. Computer hardware contrasts with computer software, which applies
    to the programs, applications, and operating systems that computers execute.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机科学的根本线索是计算机架构。这个主题曾经被称为计算机硬件，它关注的是物理计算机本身；也就是说，**中央处理单元**（**CPU**）、内存、总线和外设。计算机硬件与计算机软件相对立，后者适用于计算机执行的程序、应用程序和操作系统。
- en: Most users are no more concerned with computer hardware and architecture than
    drivers worry about the operation of their vehicles’ carburetors. However, a knowledge
    of computer architecture is useful in many ways, ranging from how efficiently
    you operate your computer to maximizing its security. A good analogy is with pilots.
    They learn how to fly an aircraft, and a knowledge of how its engines operate
    is considered absolutely vital in handling abnormal situations, prolonging the
    engine life, and minimizing fuel consumption.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数用户对计算机硬件和架构的关注程度不亚于司机对车辆化油器操作的关心。然而，了解计算机架构在很多方面都是有用的，从如何高效地操作计算机到最大化其安全性。一个很好的类比是飞行员。他们学习如何驾驶飞机，而了解其发动机的工作原理被认为在处理异常情况、延长发动机寿命和最小化燃料消耗方面至关重要。
- en: 'Computer architecture is a large subject and is broadly divided into three
    interrelated areas: `add P,A,B`, which adds A to B and puts the sum in P. This
    book explains computer architecture by demonstrating how you can write a program
    that simulates a computer.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机架构是一个庞大的主题，大致分为三个相互关联的领域：`add P,A,B`，即将A加到B上，并将和放入P。本书通过演示如何编写一个模拟计算机的程序来解释计算机架构。
- en: The part of computer science that deals with how a computer implements the actions
    of its architecture is called computer organization and is largely beyond the
    scope of this text. Computer organization is concerned with the gates and circuits
    of the computer.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机科学中处理计算机如何实现其架构动作的部分被称为计算机组织，这部分内容在很大程度上超出了本文的范围。计算机组织关注的是计算机的门电路和电路。
- en: 'An author can’t do justice to all the aspects of a computer in one book. Here,
    I am interested in tackling one topic: the ISA. I am going to introduce the computer’s
    instruction set and explain what it does. I will also discuss different types
    of instruction sets; for example, the ARM processor found in most mobile phones
    is very different from the Intel and AMD processors at the heart of PCs and laptops.
    In the second part of this book, we will concentrate on a specific computer and
    look at a real-world architecture, the ARM processor.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 一本书无法全面地涵盖计算机的所有方面。在这里，我感兴趣的是探讨一个主题：指令集架构（ISA）。我将介绍计算机的指令集并解释其功能。我还会讨论不同类型的指令集；例如，大多数手机中使用的ARM处理器与PC和笔记本电脑核心的英特尔和AMD处理器非常不同。本书的第二部分，我们将专注于特定的计算机，并研究一个现实世界的架构，即ARM处理器。
- en: This book is different. There are books on computer architecture. There are
    books on Python. There are books on the Raspberry Pi computer. Here, we combine
    all three of these topics. However, I don’t do this in a superficial way leaving
    the reader with a shallow and unsatisfactory knowledge of each topic.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书与众不同。有关于计算机架构的书，有关于Python的书，还有关于树莓派计算机的书。在这里，我们结合了这三个主题。然而，我并不是肤浅地处理这些主题，让读者对每个主题都只有浅薄和不满意的知识。
- en: My intention is to introduce a computer architecture and its instruction set.
    That is, I am going to explain how a computer works at the level of its native
    instructions (called assembly language). I describe what an instruction does and
    how it is read, interpreted (i.e., decoded), and then executed (implemented).
    I will also discuss the type of operations computers implement.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目的是介绍计算机架构及其指令集。也就是说，我将解释计算机在其原生指令（称为汇编语言）级别是如何工作的。我描述了指令的功能以及它是如何被读取、解释（即解码）和执行的。我还会讨论计算机实现的操作类型。
- en: So, how does Python fit into this scheme? Python is a popular high-level programming
    language that is freely available for use on the PC, Apple Mac, and Raspberry
    Pi. Moreover, Python is probably the easiest computer language to learn, and it
    is remarkably powerful.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，Python在这个体系中如何定位呢？Python是一种流行的通用高级编程语言，可以在PC、Apple Mac和树莓派上免费使用。此外，Python可能是最容易学习的计算机语言之一，而且功能非常强大。
- en: People learn by doing. I have decided to include sufficient Python for the reader
    to construct a simple computer simulator that can read a machine-level computer
    instruction and execute it. Because I will show how this Python simulator works,
    students can build computers to their own specifications. They can experiment
    with instruction sets, addressing modes, instruction formats, and so on. They
    can even build different types of computers to their own specifications, for example,
    by using **complex instruction set computer** (**CISC**) or **reduced instruction
    set computer** (**RISC**) architectures. CISC and RISC offer two different philosophies
    of computer design. Essentially, RISC computers have fixed-length instructions
    that permit only register load and store memory operations, whereas CISC computers
    can have variable-length instructions and permit direct data operations on memory.
    In reality, the distinction between RISC and CISC is more complex. The first generation
    of microprocesses all conformed to CISC philosophy.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 人们通过实践来学习。我决定包含足够的Python代码，让读者能够构建一个简单的计算机模拟器，该模拟器可以读取机器级计算机指令并执行它。因为我将展示这个Python模拟器的工作原理，学生可以构建符合他们自己规格的计算机。他们可以实验指令集、寻址模式、指令格式等等。他们甚至可以根据自己的规格构建不同类型的计算机，例如，使用**复杂指令集计算机**（**CISC**）或**精简指令集计算机**（**RISC**）架构。CISC和RISC提供了两种不同的计算机设计哲学。本质上，RISC计算机具有固定长度的指令，只允许寄存器加载和存储内存操作，而CISC计算机可以具有可变长度的指令，并允许直接在内存上执行数据操作。实际上，RISC和CISC之间的区别更为复杂。第一代微处理器都遵循CISC哲学。
- en: Readers can build computers because they can write a program in Python that
    will execute the target language of a specific computer architecture and they
    can design that target language themselves.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 读者可以构建计算机，因为他们可以用Python编写程序来执行特定计算机体系结构的目标语言，并且他们可以自己设计那种目标语言。
- en: One of the most popular computer architectures is the ARM processor found in
    countless mobile applications and even Apple laptops. Not only is this an economically
    dominant processor family but it’s also very popular in education because of its
    interesting and innovative architecture and its relatively gentle learning curve.
    Even better, this is the processor used by the low-cost Raspberry Pi computer.
    You can run ARM code on Raspberry Pi using software tools that come with the computer.
    You can also run Python programs on Raspberry Pi with free software. Consequently,
    Raspberry Pi provides students with an excellent low-cost machine that lets them
    study core hardware topics with no further investment in hardware or software.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 最受欢迎的计算机体系结构之一是ARM处理器，它被无数移动应用甚至苹果笔记本电脑所采用。这不仅是一个经济上占主导地位的处理器系列，而且由于其有趣和创新的架构以及相对平缓的学习曲线，它在教育领域也非常受欢迎。更好的是，这是低成本Raspberry
    Pi计算机所使用的处理器。您可以使用随计算机提供的软件工具在Raspberry Pi上运行ARM代码。您还可以使用免费软件在Raspberry Pi上运行Python程序。因此，Raspberry
    Pi为学生提供了一个优秀的低成本机器，让他们能够以无需进一步投资硬件或软件的方式研究核心硬件主题。
- en: Who this book is for
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向的对象
- en: For many years, I have taught computer architecture and have used simulators
    to teach assembly language. This approach demonstrates what instructions do but
    not how they do it or how they are designed, decoded, and executed. I decided
    to create a simple instruction simulator for class use. This book evolved from
    that project.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我一直在教授计算机体系结构，并使用模拟器来教授汇编语言。这种方法展示了指令做什么，但没有展示它们是如何做或如何设计、解码和执行的。我决定为课堂使用创建一个简单的指令模拟器。这本书就是从这个项目演变而来的。
- en: 'My target audience can be divided into four main groups, as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我的目标受众可以分为四个主要群体，如下所示：
- en: Students who are taking a computer architecture course and would like to enhance
    their experience of computer architecture by experimenting with their own CPUs
    by means of simulation. This approach would increase the depth of their knowledge
    of computer architecture and enhance their understanding of the trade-offs that
    the computer designer faces.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 正在修读计算机体系结构课程并希望通过通过模拟自己的CPU来增强他们对计算机体系结构的体验的学生。这种方法将加深他们对计算机体系结构的了解，并增强他们对计算机设计师所面临的权衡的理解。
- en: The non-computer specialist, the layperson, and the enthusiast who would like
    to know how computers work. By using Python as the design language and providing
    an introductory course on Python, I have attempted to make the book accessible
    to those with little or no experience in programming.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 非计算机专业人士、普通人和那些想了解计算机工作原理的爱好者。通过使用Python作为设计语言并提供Python入门课程，我试图使本书对那些编程经验很少或没有经验的人变得易于理解。
- en: The Raspberry Pi user. Raspberry Pi has had an immense impact on computer science
    education. This book provides a brief introduction to Raspberry Pi and shows how
    it is possible to write assembly language programs in the ARM’s native language.
    Moreover, Raspberry Pi also provides an environment (Python and its tools) that
    allows the reader to understand and simulate computers.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派用户。树莓派对计算机科学教育产生了巨大的影响。本书简要介绍了树莓派，并展示了如何使用ARM的本地语言编写汇编语言程序。此外，树莓派还提供了一个环境（Python及其工具），使读者能够理解和模拟计算机。
- en: The reader wanting to learn Python. Although this is not a formal course on
    Python, it provides a goal-oriented introduction to Python; that is, it applies
    Python to an actual example. This approach avoids the breadth of a conventional
    course and enables the reader to construct a practical application with a relatively
    shallow learning curve.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 想要学习Python的读者。尽管这不是一门正式的Python课程，但它提供了一个以目标为导向的Python入门介绍；也就是说，它将Python应用于实际示例。这种方法避免了传统课程的范围广泛，使得读者能够以相对较浅的学习曲线构建一个实际的应用程序。
- en: I have not assumed that a beginner reader has absolutely no knowledge of computers
    at all. This book assumes a very basic knowledge of binary arithmetic and number
    bases and the basic concepts of Boolean variables.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我并没有假设初学者读者对计算机一无所知。本书假设读者对二进制算术和数制以及布尔变量的基本概念有非常基础的了解。
- en: What this book covers
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B19624_01.xhtml#_idTextAnchor015)*, From Finite State Machines
    to the Computers,* introduces the notion of digital computers via the finite state
    machine that is used to model simple control systems. From there, we introduce
    the concept of algorithms and programs. Once we know what we want a computer to
    do, we can think about what we need to implement a computer.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第1章*](B19624_01.xhtml#_idTextAnchor015)*，从有限状态机到计算机，*通过用于模拟简单控制系统的有限状态机引入了数字计算机的概念。从那里，我们引入了算法和程序的概念。一旦我们知道我们想让计算机做什么，我们就可以考虑我们需要实现计算机的内容。'
- en: '[*Chapter 2*](B19624_02.xhtml#_idTextAnchor023)*, High-Speed Introduction to
    Python,* provides the initial background in Python that is required to take the
    first steps on the way to implementing a computer using Python.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第2章*](B19624_02.xhtml#_idTextAnchor023)*，Python的高效入门，*提供了在Python中实现计算机所需的基本背景知识。 '
- en: '[*Chapter 3*](B19624_03.xhtml#_idTextAnchor042)*, Data Flow in a Computer,*
    demonstrates how information flows around a computer during the execution of a
    program. It is this data flow that we have to implement when we are simulating
    a program in software.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B19624_03.xhtml#_idTextAnchor042)*，计算机中的数据流，*展示了在程序执行过程中信息在计算机周围流动的方式。当我们用软件模拟程序时，我们必须实现的就是这种数据流。'
- en: '[*Chapter 4*](B19624_04.xhtml#_idTextAnchor062)*, Crafting an Interpreter –
    First Steps,* begins the journey to a simulator. Now that we have been introduced
    to the concept of a computer and a little Python, we can go further and describe
    the fundamental ideas behind a computer simulator. In this chapter, we also look
    at the nature of computer instructions.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B19624_04.xhtml#_idTextAnchor062)*，构建解释器——第一步，*开始了通往模拟器的旅程。现在我们已经了解了计算机的概念和一点Python，我们可以进一步描述计算机模拟器背后的基本思想。在本章中，我们还探讨了计算机指令的本质。'
- en: '[*Chapter 5*](B19624_05.xhtml#_idTextAnchor075)*, A Little More Python,* expands
    our knowledge of Python and introduces us to vital topics such as Python’s dictionaries,
    which provide tools that greatly simplify the design of a computer simulator.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B19624_05.xhtml#_idTextAnchor075)*，更多Python知识，*扩展了我们对Python的了解，并介绍了诸如Python字典等关键主题，这些工具极大地简化了计算机模拟器的设计。'
- en: '[*Chapter 6*](B19624_06.xhtml#_idTextAnchor091)*, TC1 Assembler and Simulator
    Design,* is the heart of this book. Here, we discuss the components of a simulator
    and then provide a program that can simulate a hypothetical teaching computer,
    TC1.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*](B19624_06.xhtml#_idTextAnchor091)*，TC1汇编器和模拟器设计，*是本书的核心。在这里，我们讨论了模拟器的组件，然后提供了一个可以模拟假设教学计算机TC1的程序。'
- en: '[*Chapter 7*](B19624_07.xhtml#_idTextAnchor121)*, Extending the TC1,* adds
    further facilities to the simulator, such as data checking and creating new instructions.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*](B19624_07.xhtml#_idTextAnchor121)*，扩展TC1*，为模拟器添加了更多功能，例如数据检查和创建新指令。'
- en: '[*Chapter 8*](B19624_08.xhtml#_idTextAnchor135)*, Simulators for Other Architectures,*
    looks at different types of computer architecture and describes alternative simulators.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*](B19624_08.xhtml#_idTextAnchor135)*，其他架构的模拟器*，探讨了不同类型的计算机架构并描述了替代的模拟器。'
- en: '[*Chapter 9*](B19624_09.xhtml#_idTextAnchor159)*, Raspberry Pi – An Introduction,*
    changes course. Here, we look at the popular Raspberry Pi and the ARM processor
    at its core. In particular, we learn how to enter a program in ARM assembly language
    and run it in debugging mode.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*](B19624_09.xhtml#_idTextAnchor159)*，树莓派简介*，改变了方向。在这里，我们探讨了流行的树莓派及其核心的ARM处理器。特别是，我们学习了如何将程序输入ARM汇编语言并在调试模式下运行它。'
- en: '[*Chapter 10*](B19624_10.xhtml#_idTextAnchor184)*, A Closer Look at the ARM,*
    examines ARM’s instruction set in greater detail and provides a foundation for
    writing programs in assembly language.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*](B19624_10.xhtml#_idTextAnchor184)*，深入探讨ARM*，更详细地探讨了ARM的指令集，并为编写汇编语言程序提供了基础。'
- en: '[*Chapter 11*](B19624_11.xhtml#_idTextAnchor197)*, ARM Addressing Modes,* looks
    at the addressing modes of the ARM in greater detail and explains some of its
    special features.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*](B19624_11.xhtml#_idTextAnchor197)*，ARM寻址模式*，更详细地探讨了ARM的寻址模式并解释了一些其特殊功能。'
- en: '[*Chapter 12*](B19624_12.xhtml#_idTextAnchor209)*, Subroutines and the Stack,*
    is really an extension of the previous chapter because we look at the way in which
    the ARM uses its addressing modes to implement stack operations, which are so
    important in assembly language programming.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*](B19624_12.xhtml#_idTextAnchor209)*，子程序和堆栈*，实际上是前一章的扩展，因为我们探讨了ARM如何使用其寻址模式来实现堆栈操作，这在汇编语言编程中非常重要。'
- en: To get the most out of this book
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: This book is split into two parts. The first part develops a computer simulator
    in Python and the second part provides a brief introduction to Raspberry Pi and
    uses it as a vehicle to teach ARM assembly language programming.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为两部分。第一部分使用Python开发计算机模拟器，第二部分简要介绍了树莓派，并利用它作为教授ARM汇编语言编程的工具。
- en: I used a PC with Windows to develop the Python programs. The reader may use
    a Windows-based system, an Apple Mac, or any Linux-based computer to develop Python.
    All the necessary software is freely available.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用装有Windows的PC来开发Python程序。读者可以使用基于Windows的系统、苹果Mac或任何基于Linux的计算机来开发Python。所有必要的软件都是免费可用的。
- en: You can, of course, use Raspberry Pi itself to develop Python.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以使用树莓派本身来开发Python。
- en: In order to write ARM assembly language programs and debug them, you need a
    Raspberry Pi. This is a single-board computer and requires a power supply, keyboard,
    mouse, and monitor. I have used both the Raspberry Pi 3 Model A+ and Raspberry
    Pi 4 Model B versions.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 为了编写ARM汇编语言程序并调试它们，您需要一个树莓派。这是一个单板计算机，需要电源、键盘、鼠标和显示器。我使用了树莓派3型号A+和树莓派4型号B版本。
- en: The software required to develop Python programs is freely available from [https://www.python.org](https://www.python.org).
    The Raspberry Pi single-board computer is not sold with an operating system. You
    must either buy an SD card with the operating system installed or download it
    yourself. Details are given at https://www.raspberrypi.com/documentation/computers/getting-started.html.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 开发Python程序所需的软件可以从[https://www.python.org](https://www.python.org)免费获取。树莓派单板计算机不附带操作系统。您必须购买已安装操作系统的SD卡或自行下载。详细信息请参阅https://www.raspberrypi.com/documentation/computers/getting-started.html。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的数字版，我们建议您亲自输入代码或从本书的GitHub仓库（下一节中提供链接）获取代码。这样做将帮助您避免与代码复制粘贴相关的任何潜在错误**。'
- en: Download the example code files
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Practical-Computer-Architecture-with-Python-and-ARM](https://github.com/PacktPublishing/Practical-Computer-Architecture-with-Python-and-ARM).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件，网址为[https://github.com/PacktPublishing/Practical-Computer-Architecture-with-Python-and-ARM](https://github.com/PacktPublishing/Practical-Computer-Architecture-with-Python-and-ARM)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的书籍和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Conventions used
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates that words in text are not plain English words, but
    are words belonging to a program.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的单词不是普通英语单词，而是属于程序中的单词。'
- en: The `break` instruction breaks out of the `while` loop (that is, execution continues
    beyond the end of the loop - it’s a sort of short-circuit mechanism).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`break`指令会退出`while`循环（即，执行将继续到循环的末尾之外 - 它是一种短路机制）。'
- en: 'In order to draw your attention to features in code, we sometimes use bold
    font or shading to highlight features. Consider the following example:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了吸引您对代码中功能的注意，我们有时会使用粗体字体或阴影来突出显示功能。考虑以下示例：
- en: 'The text following # is in a non-monospaced font and is a comment ignored by
    the computer:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '#后面的文本使用非等宽字体，并且是计算机忽略的注释：'
- en: '[PRE0]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Get in touch
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过电子邮件发送给我们，邮箱地址为[customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保我们内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将非常感激您向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式遇到我们作品的非法副本，我们将非常感激您提供位置地址或网站名称。请通过[copyright@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您想成为一名作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为本书做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Practical Computer Architecture with Python and ARM*, we’d
    love to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1-837-63667-2) for this book and share your feedback.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了*《使用Python和ARM的实用计算机架构》*，我们很乐意听到您的想法！请[点击此处直接转到本书的亚马逊评论页面](https://packt.link/r/1-837-63667-2)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载本书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买本书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但无法携带您的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您喜欢的技术书籍中搜索、复制并粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止这些，您还可以获得独家折扣、时事通讯和每日邮箱中的优质免费内容。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![Download a free PDF copy of this book](img/B19624_QR_Free_PDF.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![下载此书的免费PDF副本](img/B19624_QR_Free_PDF.jpg)'
- en: https://packt.link/free-ebook/9781837636679
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: https://packt.link/free-ebook/9781837636679
- en: Submit your proof of purchase
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这么简单！我们将直接将您的免费PDF和其他优惠发送到您的邮箱
