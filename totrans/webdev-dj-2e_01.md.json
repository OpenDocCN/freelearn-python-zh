["```py\ndjango-admin.py startproject myproject\n```", "```py\npython3 manage.py runserver\n```", "```py\npython3 manage.py startapp myapp\n```", "```py\n    django-admin startproject bookr\n    ```", "```py\n    python3 manage.py runserver\n    Watching for file changes with StatReloader\n    Performing system checks...\n    System check identified no issues (0 silenced).\n    You have 17 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, sessions.\n    Run 'python manage.py migrate' to apply them.\n    September 14, 2019 - 09:40:45\n    Django version 3.0a1, using settings 'bookr.settings'\n    Starting development server at http://127.0.0.1:8000/\n    Quit the server with CONTROL-C.\n    ```", "```py\n    python3 manage.py startapp reviews\n    ```", "```py\nGET /page HTTP/1.1\nHost: www.example.com\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Firefox/15.0.1\nCookie: sessid=abc123def456\n```", "```py\nPOST /login HTTP/1.1\nHost: www.example.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 32\nusername=user1&password=password1\n```", "```py\nHTTP/1.1 200 OK\nServer: nginx\nContent-Length: 18132\nContent-Type: text/html\nSet-Cookie: sessid=abc123def46\n<!DOCTYPE html><html><head>…\n```", "```py\nHTTP/1.1 404 Not Found\nServer: nginx\nContent-Length: 55\nContent-Type: text/html\n<!DOCTYPE html><html><body>Page Not Found</body></html>\n```", "```py\npython3 manage.py runserver\n```", "```py\npython3 manage.py runserver 8001\n```", "```py\npython3 manage.py runserver 0.0.0.0:8000\n```", "```py\npython3 manage.py startapp myapp\n```", "```py\n    which python3\n    /Users/ben/.virtualenvs/bookr/bin/python3\n    ```", "```py\n    from django.shortcuts import render\n    # Create your views here.\n    ```", "```py\n    from django.http import HttpResponse\n    def index(request):\n        return HttpResponse(\"Hello, world!\")\n    ```", "```py\n    import reviews.views\n    ```", "```py\n    urlpatterns = [path('admin/', admin.site.urls),\\\n                   path('', reviews.views.index)]\n    index function (that is, it should be reviews.views.index and not reviews.views.index()) as we are passing a reference to a function rather than calling it. When you're finished, your urls.py file should like *Figure 1.24*:\n    ```", "```py\n>>> qd = QueryDict(\"k=a&k=b&k=c\")\n```", "```py\n>>> qd[\"k\"]\n'c'\n>>> qd.get(\"k\")\n'c'\n```", "```py\n>>> qd.getlist(\"k\")\n['a', 'b', 'c']\n```", "```py\n>>> qd.getlist(\"bad key\")\n[]\n```", "```py\n>>> qd[\"k\"] = \"d\"\nAttributeError: This QueryDict instance is immutable\n>>> qd2 = qd.copy()\n>>> qd2\n<QueryDict: {'k': ['a', 'b', 'c']}>\n>>> qd2[\"k\"] = \"d\"\n>>> qd2[\"k\"]\n\"d\"\n```", "```py\nrequest.GET = QueryDict(\"val1=a&val2=b&val2=c&val3\")\n```", "```py\nrequest.GET[\"val1\"]\n```", "```py\nrequest.GET[\"val2\"]\n```", "```py\nrequest.GET.getlist(\"val2\")\n```", "```py\nrequest.GET[\"val3\"]\n```", "```py\nrequest.GET[\"val4\"]\n```", "```py\nrequest.GET.getlist(\"val4\")\n```", "```py\n    name = request.GET.get(\"name\") or \"world\"\n    ```", "```py\n    return HttpResponse(\"Hello, {}!\".format(name))\n    ```", "```py\nSECRET_KEY = '…'\n```", "```py\nDEBUG = True\n```", "```py\nINSTALLED_APPS = […]\n```", "```py\nROOT_URLCONF = 'bookr.urls'\n```", "```py\nTEMPLATES = […]\n```", "```py\n'APP_DIRS': True,\n```", "```py\nfrom bookr import settings\nif settings.DEBUG:  # check if running in DEBUG mode\n    do_some_logging()\n```", "```py\nfrom django.conf import settings  # import settings from here instead\nif settings.DEBUG:\n    do_some_logging()\n```", "```py\n    INSTALLED_APPS = ['django.contrib.admin',\\\n                      'django.contrib.auth',\\\n                      'django.contrib.contenttypes',\\\n                      'django.contrib.sessions',\\\n                      'django.contrib.messages',\\\n                      'django.contrib.staticfiles',\\\n                      'reviews']\n    ```", "```py\n    <!DOCTYPE html>\n    <html lang=\"en\">\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>Title</title>\n    </head>\n    <body>\n    </body>\n    </html>\n    ```", "```py\n    <body>\n        Hello from a template!\n    </body>\n    ```", "```py\n    from django.http import HttpResponse\n    ```", "```py\n    from django.shortcuts import render\n    ```", "```py\n    def index(request):\n        return render(request, \"base.html\")\n    ```", "```py\n    <body>\n    Hello, {{ name }}!\n    </body>\n    ```", "```py\n    def index(request):\n        name = \"world\"\n        return render(request, \"base.html\")\n    ```", "```py\n    return render(request, \"base.html\", {\"name\": name})\n    ```", "```py\n    >>> a === 1\n      File \"<stdin>\", line 1\n        a === 1\n            ^\n    SyntaxError: invalid syntax\n    ```", "```py\n    >>> import missing_file\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    ImportError: No module named missing_file\n    ```", "```py\n    >>> a = b + 5\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    NameError: name 'b' is not defined\n    ```", "```py\n    >>> d = {'a': 1}\n    >>> d['b']\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    KeyError: 'b'\n    ```", "```py\n    >>> l = ['a', 'b']\n    >>> l[3]\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    IndexError: list index out of range\n    ```", "```py\n    >>> 1 + '1'\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    TypeError: unsupported operand type(s) for +: 'int' and 'str'\n    ```", "```py\n    return render(request, \"base.html\", {\"name\": invalid_name})\n    ```", "```py\n    NameError at /\n    name 'invalid_name' is not defined\n    ```"]