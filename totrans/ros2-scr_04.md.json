["```py\n$ ros2 run demo_nodes_cpp talker\n[INFO] [1710223859.331462978] [talker]: Publishing: 'Hello World: 1'\n[INFO] [1710223860.332262491] [talker]: Publishing: 'Hello World: 2'\n[INFO] [1710223861.333233619] [talker]: Publishing: 'Hello World: 3'\n^C[INFO] [1710223862.456938986] [rclcpp]: signal_handler(signum=2)\n```", "```py\n$ ros2 run demo_nodes_cpp listener\n[INFO] [1710224252.496221751] [listener]: I heard: [Hello World: 9]\n[INFO] [1710224253.497121609] [listener]: I heard: [Hello World: 10]\n[INFO] [1710224254.495878769] [listener]: I heard: [Hello World: 11]\n```", "```py\n$ rqt_graph\n```", "```py\n$ ros2 run turtlesim turtlesim_node\nWarning: Ignoring XDG_SESSION_TYPE=wayland on Gnome. Use QT_QPA_PLATFORM=wayland to run on Wayland anyway.\n[INFO] [1710229365.273668657] [turtlesim]: Starting turtlesim with node name /turtlesim\n[INFO] [1710229365.288027379] [turtlesim]: Spawning turtle [turtle1] at x=[5.544445], y=[5.544445], theta=[0.000000]\n```", "```py\n$ ros2 run turtlesim turtle_teleop_key\nReading from keyboard\n---------------------------\nUse arrow keys to move the turtle.\nUse G|B|V|C|D|E|R|T keys to rotate to absolute orientations. 'F' to cancel a rotation.\n'Q' to quit.\n```", "```py\n$ rqt_graph\n```", "```py\n$ ros2 run demo_nodes_cpp talker\n```", "```py\n$ ros2 run demo_nodes_cpp listener\n```", "```py\n$ rqt_graph\n```", "```py\n$ ros2 topic list\n/chatter\n/parameter_events\n/rosout\n```", "```py\n$ ros2 topic info /chatter\nType: std_msgs/msg/String\nPublisher count: 1\nSubscription count: 1\n```", "```py\n$ ros2 interface show std_msgs/msg/String\n# Some comments\nstring data\n```", "```py\n$ ros2 run turtlesim turtlesim_node\n```", "```py\n$ ros2 run turtlesim turtle_teleop_key\n```", "```py\n$ rqt_graph\n```", "```py\n$ ros2 topic list\n/parameter_events\n/rosout\n/turtle1/cmd_vel\n/turtle1/color_sensor\n/turtle1/pose\n```", "```py\n$ ros2 topic info /turtle1/cmd_vel\nType: geometry_msgs/msg/Twist\nPublisher count: 1\nSubscription count: 1\n```", "```py\n$ ros2 interface show geometry_msgs/msg/Twist\n# This expresses velocity in free space broken into its linear and angular parts.\nVector3  linear\n      float64 x\n      float64 y\n      float64 z\nVector3  angular\n      float64 x\n      float64 y\n      float64 z\n```", "```py\n$ ros2 run demo_nodes_cpp add_two_ints_server\n```", "```py\n$ ros2 run demo_nodes_cpp add_two_ints_client\n```", "```py\n[INFO] [1710301834.789596504] [add_two_ints_server]: Incoming request\na: 2 b: 3\n```", "```py\n[INFO] [1710301834.790073100] [add_two_ints_client]: Result of add_two_ints: 5\n```", "```py\n$ ros2 service list\n/add_two_ints\n/add_two_ints_server/describe_parameters\n/add_two_ints_server/get_parameter_types\n/add_two_ints_server/get_parameters\n/add_two_ints_server/list_parameters\n/add_two_ints_server/set_parameters\n/add_two_ints_server/set_parameters_atomically\n```", "```py\n$ ros2 service type /add_two_ints\nexample_interfaces/srv/AddTwoInts\n$ ros2 interface show example_interfaces/srv/AddTwoInts\nint64 a\nint64 b\n---\nint64 sum\n```", "```py\n$ ros2 service call /add_two_ints example_interfaces/srv/AddTwoInts \"{a: 4, b: 7}\"\nwaiting for service to become available...\nrequester: making request: example_interfaces.srv.AddTwoInts_Request(a=4, b=7)\nresponse:\nexample_interfaces.srv.AddTwoInts_Response(sum=11)\n```", "```py\n[INFO] [1710302858.634838573] [add_two_ints_server]: Incoming request\na: 4 b: 7\n```", "```py\n$ ros2 run turtlesim turtlesim_node\n```", "```py\n$ ros2 service list\n/clear\n/kill\n/reset\n/spawn\n/turtle1/set_pen\n/turtle1/teleport_absolute\n/turtle1/teleport_relative\n# There are more services containing \"parameter\" that we can ignore\n```", "```py\n$ ros2 service type /spawn\nturtlesim/srv/Spawn\n$ ros2 interface show turtlesim/srv/Spawn\nfloat32 x\nfloat32 y\nfloat32 theta\nstring name # Optional.  A unique name will be created and returned if this is empty\n---\nstring name\n```", "```py\n$ ros2 service call /spawn turtlesim/srv/Spawn \"{x: 3.0, y: 4.0}\"\nwaiting for service to become available...\nrequester: making request: turtlesim.srv.Spawn_Request(x=3.0, y=4.0, theta=0.0, name='')\nresponse:\nturtlesim.srv.Spawn_Response(name='turtle2')\n```", "```py\n$ ros2 run turtlesim turtlesim_node\n```", "```py\n$ ros2 action list\n/turtle1/rotate_absolute\n```", "```py\n$ ros2 action info /turtle1/rotate_absolute -t\nAction: /turtle1/rotate_absolute\nAction clients: 0\nAction servers: 1\n    /turtlesim [turtlesim/action/RotateAbsolute]\n```", "```py\n$ ros2 interface show turtlesim/action/RotateAbsolute\n# The desired heading in radians\nfloat32 theta\n---\n# The angular displacement in radians to the starting position\nfloat32 delta\n---\n# The remaining rotation in radians\nfloat32 remaining\n```", "```py\n$ ros2 action send_goal /turtle1/rotate_absolute turtlesim/action/RotateAbsolute \"{theta: 1.0}\"\nWaiting for an action server to become available...\nSending goal:\n     theta: 1.0\nGoal accepted with ID: 3ba92096282a4053b552a161292afc8e\nResult:\n    delta: -0.9919999837875366\nGoal finished with status: SUCCEEDED\n```", "```py\n$ ros2 run turtlesim turtlesim_node\n```", "```py\n$ ros2 param list\n/turtlesim:\n  background_b\n  background_g\n  background_r\n  holonomic\n  qos_overrides./parameter_events.publisher.depth\n  qos_overrides./parameter_events.publisher.durability\n  qos_overrides./parameter_events.publisher.history\n  qos_overrides./parameter_events.publisher.reliability\n  start_type_description_service\n  use_sim_time\n```", "```py\n$ ros2 param get /turtlesim background_b\nInteger value is: 255\n$ ros2 param get /turtlesim background_g\nInteger value is: 86\n$ ros2 param get /turtlesim background_r\nInteger value is: 69\n```", "```py\n$ ros2 run turtlesim turtlesim_node --ros-args -p background_b:=0 -p background_r:=0\n```", "```py\n$ ros2 launch demo_nodes_cpp talker_listener_launch.py\n[INFO] [launch]: All log files can be found below /home/ed/.ros/log/2024-03-14-16-09-27-384050-ed-vm-2867\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [talker-1]: process started with pid [2868]\n[INFO] [listener-2]: process started with pid [2871]\n[talker-1] [INFO] [1710403768.481156318] [talker]: Publishing: 'Hello World: 1'\n[listener-2] [INFO] [1710403768.482142732] [listener]: I heard: [Hello World: 1]\n```", "```py\n$ ros2 node list\n/listener\n/talker\n```", "```py\n$ ros2 launch turtlesim multisim.launch.py\n[INFO] [launch]: All log files can be found below /home/ed/.ros/log/2024-03-14-16-14-41-043618-ed-vm-2962\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [turtlesim_node-1]: process started with pid [2963]\n[INFO] [turtlesim_node-2]: process started with pid [2965]\n```", "```py\n$ ros2 node list\n/turtlesim1/turtlesim\n/turtlesim2/turtlesim\n```"]