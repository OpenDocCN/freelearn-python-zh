- en: Chapter 5. Adding Ajax Effects
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章 添加Ajax效果
- en: 'In this chapter, we will cover the following recipes:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下食谱：
- en: Using `jquery.multiselect.js`
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`jquery.multiselect.js`
- en: Creating a `select_or_add` widget
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建`select_or_add`小部件
- en: Using an autocompletion plugin
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用自动完成插件
- en: Creating a drop-down date selector
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建下拉日期选择器
- en: Improving the built-in `ajax` function
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改进内置的`ajax`函数
- en: Using a slider to represent a number
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用滑块表示数字
- en: Using jqGrid and web2py
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用jqGrid和web2py
- en: Improving data tables with WebGrid
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用WebGrid改进数据表
- en: Ajaxing your search functions
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ajax化您的搜索功能
- en: Creating sparklines
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建sparklines
- en: Introduction
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we discuss examples of integration of jQuery plugins with web2py.
    These plugins help in making forms and tables more interactive and friendly to
    the user, thus improving the usability of your application. In particular, we
    provide examples of how to improve the multi-select drop-down with an interactive
    **add option** button, how to replace an input field with a slider, and how to
    display tabular data using `jqGrid` and `WebGrid`.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了jQuery插件与web2py集成的示例。这些插件有助于使表单和表格更加交互友好，从而提高应用程序的可用性。特别是，我们提供了如何通过交互式**添加选项**按钮改进多选下拉列表、如何用滑块替换输入字段以及如何使用`jqGrid`和`WebGrid`显示表格数据的示例。
- en: Using jquery.multiselect.js
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用`jquery.multiselect.js`
- en: The default rendering of`<select multiple="true">..</select>` is quite ugly
    and not intuitive to use, in particular, when you need to select multiple non-contiguous
    options. This is not an HTML shortcoming, but a poor design of most browsers.
    Anyway, the presentation of the multiple `select` can be overwritten using JavaScript.
    Here, we will be using a jQuery plugin called `jquery.multiselect.js`. Notice
    that this jQuery plugin comes as standard and enabled with PluginWiki, but we
    assume that you are not using PluginWiki.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '`<select multiple="true">..</select>`的默认渲染非常丑陋且不直观，尤其是在您需要选择多个非连续选项时。这并不是HTML的缺陷，而是大多数浏览器设计不佳。无论如何，可以使用JavaScript覆盖多选`select`的呈现。在这里，我们将使用一个名为`jquery.multiselect.js`的jQuery插件。请注意，这个jQuery插件作为标准插件与PluginWiki一起提供，但我们假设您没有使用PluginWiki。'
- en: Getting ready
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: You will need to download `jquery.muliselect.js` from [http://abeautifulsite.net/2008/04/jquery-multiselect](http://abeautifulsite.net/2008/04/jquery-multiselect),
    and place the corresponding files into `static/js/jquery.multiselect.js` and `static/css/jquery.multiselect.css`.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要从[http://abeautifulsite.net/2008/04/jquery-multiselect](http://abeautifulsite.net/2008/04/jquery-multiselect)下载`jquery.muliselect.js`，并将相应的文件放入`static/js/jquery.multiselect.js`和`static/css/jquery.multiselect.css`。
- en: How to do it...
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: In your view, simply add the following before `{{extend 'layout.html}}:`
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在您的视图中，只需在`{{extend 'layout.html'}}:`之前添加以下内容：
- en: '[PRE0]'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Place the following after `{{extend 'layout.html'}}:`
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`{{extend 'layout.html'}}:`之后放置以下代码：
- en: '[PRE1]'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: That is all. All your multiple `select` will be nicely styled.
  id: totrans-23
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 就这些了。你所有的多选`select`都将被优雅地样式化。
- en: 'Consider the following action:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 考虑以下操作：
- en: '[PRE2]'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'This action can be tried with the following view:'
  id: totrans-26
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 可以使用以下视图尝试此操作：
- en: '[PRE3]'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Here is a screenshot of how it looks:'
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这是它的截图：
- en: '![How to do it...](img/5467OS_05_29.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![如何做...](img/5467OS_05_29.jpg)'
- en: Creating a select_or_add widget
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建select_or_add小部件
- en: This widget will create a object with an **Add** button next to it, allowing
    users to add new categories and so on, on the fly without having to visit a different
    screen. It works with `IS_IN_DB`, and uses web2py components and jQueryUI dialogs.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 此小部件将在旁边创建一个带有**添加**按钮的对象，允许用户在不访问不同屏幕的情况下即时添加新类别等。它与`IS_IN_DB`一起工作，并使用web2py组件和jQueryUI对话框。
- en: 'This widget was inspired by the `OPTION_WITH_ADD_LINK` slice, which can be
    found at the following link:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 此小部件的灵感来自可以在以下链接中找到的`OPTION_WITH_ADD_LINK`切片：
- en: '[http://web2pyslices.com/main/slices/take_slice/11](http://web2pyslices.com/main/slices/take_slice/11)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://web2pyslices.com/main/slices/take_slice/11](http://web2pyslices.com/main/slices/take_slice/11)'
- en: How to do it...
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做...
- en: Place the following code into a model file. For example, `models/select_or_add_widget.py:`
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下代码放入模型文件中。例如，`models/select_or_add_widget.py:`
- en: '[PRE4]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'You assign the widget to a field using the following:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用以下方式将小部件分配给字段：
- en: '[PRE5]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The widget accepts the following arguments:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此小部件接受以下参数：
- en: '`form_title: string:` This will appear as the jQueryUI dialog-box''s title.
    The default value is `Add New`.'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`form_title: string:` 这将作为jQueryUI对话框框的标题。默认值是`添加新内容`。'
- en: '`controller: string:` This is the name of the controller that will handle record
    creation.'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`controller: string:` 这是将处理记录创建的控制器名称。'
- en: '`function: string`. This is the name of the function that will handle record
    creation. It should create a form, accept it, and be prepared to issue JavaScript
    to interact with the widget - see `add_category` in *step 4.)*'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`button_text: string`. This is the text that should appear on the button that
    will activate our form dialog-box. The default value is `Add`.'
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dialog_width: integer`. This is the desired width in pixels of the dialog-box.
    Default is `450`.'
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Define your database tables in `models/db.py`, as follows:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Create your controller functions:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Here is a screenshot showing the widget in action:'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/5467OS_05_30.jpg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Click on the **Add New** button, and the dialog-box opens. (Hmm, can't type
    my own widget's name right!).
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![How to do it...](img/5467OS_05_31.jpg)'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Click on **Submit**, and the new option is created and automatically selected
    in the main form.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![How to do it...](img/5467OS_05_32.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
- en: 'You can get the source or a sample application from bitbucket, at the following
    link:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[https://bitbucket.org/bmeredyk/web2py-select_or_add_option-widget/src](http://https://bitbucket.org/bmeredyk/web2py-select_or_add_option-widget/src)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Using an autocompletion plugin
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Although web2py comes with its own autocomplete plugin, its behavior is a kind
    of magic and, if it does not suit you, you may prefer to use a jQuery plugin for
    autocompletion.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Download the necessary files from the following website:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '[http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/](http://bassistance.de/jquery-plugins/jquery-plugin-autocomplete/)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: 'Unzip the files into `static/autocomplete`. Make sure you have the following
    files:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '`static/autocomplete/jquery.autocomplete.js`'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`static/autocomplete/jquery.autocomplete.css`'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First of all, define the following widget in your model:'
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: This widget creates a normal `<input/>` widget inp followed by a script that
    registers the autocomplete plugin. It also passes to the plugin, a list of possible
    values, obtained by existing values of the field itself.
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Now, in your model or controller, you simply assign this widget to any string
    field. For example:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'If you want the widget to get values from a different table/field, you just
    need to change the following lines:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Change them to the following:'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-74
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: There is more...
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'A limitation with this approach is that all possible values will be fetched
    when the widget is rendered and embedded in the page. This approach has two limitations:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: Serving the page gets slower and slower, as more options exist for the autocompletion
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It exposes your entire data to the visitor
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There is a solution. The plugin can fetch the data using an Ajax callback.
    To fetch the items remotely using an Ajax call, we can modify the widget as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Now you need to implement your own `callback_url`.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Here is an example of how it works:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: '![There is more...](img/5467OS_05_33.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: Creating a drop-down date selector
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes, you might not like the normal pop-up calendar selector, and want
    to create a widget that allows selecting the year, month, and day of the month
    separately, using dropdown lists. Here we present a widget to do it.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In one of your models, write the following widget:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Create a test form in your controller, and set the field to use the widget:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Here is how it looks:'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '![How to do it...](img/5467OS_05_34.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: Improving the built-in ajax function
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Web2py comes with a `static/js/web2py_ajax.js` file, which defines an ajax function.
    It is a wrapper around `jQuery.ajax`, but provides an even simpler syntax. Yet,
    this function is designed to be intentionally minimalist. In this recipe, we show
    you how to rewrite it, so that it displays a spinning image while performing the
    Ajax request in the background.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'First of all, you need a spinning icon. Choose one for example from this web
    site: [http://www.freeiconsdownload.com/Free_Downloads.asp?id=585](http://www.freeiconsdownload.com/Free_Downloads.asp?id=585),
    and save it in `static/images/loading.gif`.'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Then, edit the ajax function in the file `static/js/web2py_ajax.js`, as follows
    (for older web2py applications, this function is in `views/web2py_ajax.html):`
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: Using a slider to represent a number
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: jQuery UI comes with a handy slider that can be used to represent numerical
    fields in a range as opposed to a boring`<input/>` tag.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Create a model file called `models/plugin_slider.py`, and define the following:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Create a test table, and set the widget to our new slider widget:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Then, use the slider by creating a form in your controller:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![How to do it...](img/5467OS_05_35.jpg)'
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_IMG
- en: Using jqGrid and web2py
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**jqGrid** is an Ajax-enabled JavaScript control built on jQuery that provides
    a solution for representing and manipulating tabular data. You can think of it
    as a replacement for the web2py `SQLTABLE` helper. jqGrid is a client-side solution,
    and it loads data dynamically through Ajax callbacks, thus providing pagination,
    search popup, inline editing, and so on. jqGrid is integrated into PluginWiki,
    but, here, we discuss it as a standalone for web2py programs that do not use the
    plugin. jqGrid deserves a book of its own, and here we only discuss its basic
    features and simplest integration.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: Getting ready
  id: totrans-112
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'You will need jQuery (that comes with web2py), jQuery.UI, and one or more themes
    which you can get directly from Google but you will also need jqGrid, which you
    can get from:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '[http://www.trirand.com/blog](http://www.trirand.com/blog)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
- en: 'We will also assume we have a table with stuff that you can pre-populate with
    random data:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: How to do it...
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First of all, you need a helper that will display the jqGrid, and we can define
    this in a model. For example, `models/plugin_qgrid.py:`
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE21]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'We can use this in our control as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE22]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: This function simply generates all the required JavaScript, but does not pass
    any data to it. Instead, it passes a callback function URL (`jqgrid`), which is
    digitally signed for security. We need to implement this callback.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数简单地生成所有必需的 JavaScript，但不向它传递任何数据。相反，它传递一个回调函数 URL（`jqgrid`），该 URL 为安全起见进行了数字签名。我们需要实现这个回调。
- en: 'We can define the callback in the same controller of the index action:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在索引操作的同一控制器中定义回调：
- en: '[PRE23]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Both the `JQGRID` helper and the `jqgrid` action are canned, very similar to
    the PluginWiki `jgGrid` widget, and probably require no modification. The `jqgrid`
    action is called by the code generated by the helper. It checks whether the URL
    is properly signed (the user is authorized to access the callback) or not, parses
    all data in the request to determine what the user wants, including building a
    query from the `jqgrid` search pop-up, and performs the `select` and `return`
    on the data through JSON.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '`JQGRID` 辅助工具和 `jqgrid` 动作都是预制的，非常类似于 PluginWiki 的 `jgGrid` 小部件，可能不需要任何修改。`jqgrid`
    动作是由辅助工具生成的代码调用的。它检查 URL 是否正确签名（用户有权访问回调）或未签名，解析请求中的所有数据以确定用户想要什么，包括从 `jqgrid`
    搜索弹出窗口构建查询，并通过 JSON 在数据上执行 `select` 和 `return` 操作。'
- en: 'Notice that you can use multiple `JQGRID(table)` in multiple actions, and you
    do not need to pass any other parameter other than the table to be displayed.
    Yet, you may want to pass extra parameters to the helper:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，您可以在多个操作中使用多个 `JQGRID(table)`，并且除了要显示的表之外，您不需要传递任何其他参数。但是，您可能希望向辅助工具传递额外的参数：
- en: '`fieldname` and `fieldvalue` attributes are user to pre-filter results, based
    on `table[fieldname]==fieldvalue`'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fieldname` 和 `fieldvalue` 属性用于根据 `table[fieldname]==fieldvalue` 预先筛选结果'
- en: '`col_widths` is a list of column widths in pixels'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`col_widths` 是像素中的列宽列表'
- en: '`colnames` is a list of column names to replace `field.name`'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`colnames` 是要替换 `field.name` 的列名列表'
- en: '`_id` is the tag ID for the grid'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`_id` 是网格的标签 ID'
- en: '`fields` is a list of field names to be displayed'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`fields` 是要显示的字段名列表'
- en: '`col_width=80` is the default width of each column'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`col_width=80` 是每列的默认宽度'
- en: '`width=700` and `height=300` are the size of the grid'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`width=700` 和 `height=300` 是网格的大小'
- en: '`dbname=''db''` is the name of the database to be utilized by the callback,
    in case you have more than one, or you use a name that is not `db`'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dbname=''db''` 是回调将使用的数据库的名称，如果您有多个数据库，或者您使用的是不是 `db` 的名称'
- en: Improving data tables with WebGrid
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 WebGrid 提高数据表
- en: 'In this recipe we will build a module called WebGrid that you can think of
    a replacement or web2py''s SQLTABLE. Yet is is smarter: it supports paging, sorting,
    editing and it is easy to use and customize. It is intentionally designed not
    to require session nor jQuery plugins.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们将构建一个名为 WebGrid 的模块，您可以将它视为 web2py 的 SQLTABLE 的替代品。然而，它更智能：它支持分页、排序、编辑，并且易于使用和定制。它故意设计为不需要会话或
    jQuery 插件。
- en: Getting ready
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备工作
- en: Download `webgrid.py` from [http://web2pyslices.com/main/static/share/webgrid.py](http://web2pyslices.com/main/static/share/webgrid.py),
    and store it in the `modules/` folder.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 从 [http://web2pyslices.com/main/static/share/webgrid.py](http://web2pyslices.com/main/static/share/webgrid.py)
    下载 `webgrid.py`，并将其存储在 `modules/` 文件夹中。
- en: You may want to download a demo application from[http://web2pyslices.com/main/static/share/web2py.app.webgrid.w2p](http://web2pyslices.com/main/static/share/web2py.app.webgrid.w2p),
    but this is not necessary for WebGrid to work.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 [http://web2pyslices.com/main/static/share/web2py.app.webgrid.w2p](http://web2pyslices.com/main/static/share/web2py.app.webgrid.w2p)
    下载一个演示应用程序，但这对于 WebGrid 正常工作不是必需的。
- en: 'We will assume the scaffolding application with `crud` defined, and the following
    code:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将假设有一个具有 `crud` 定义的脚手架应用程序，以及以下代码：
- en: '[PRE24]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: We have in mind a simple inventory system.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 我们心中有一个简单的库存系统。
- en: How to do it...
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: We will explain it backwards for a change. First, we will show you how to use
    it.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将改变一下顺序。首先，我们将向您展示如何使用它。
- en: 'Add the `webgrid.py` module to your `modules` folder (see the *Getting ready*
    section for the instructions on how to install it). In your controller, add the
    following code:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `webgrid.py` 模块添加到您的 `modules` 文件夹中（有关安装说明，请参阅 *准备工作* 部分）。在您的控制器中添加以下代码：
- en: '[PRE25]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The datasource can be a `Set, Rows, Table`, or `list of Tables. Joins` are also
    supported.
  id: totrans-147
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数据源可以是 `Set`、`Rows`、`Table` 或 `Table` 列表。也支持连接。
- en: '[PRE26]'
  id: totrans-148
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The main row components of the WebGrid are `header, filter, datarow, pager,
    page_total,` and `footer`
  id: totrans-149
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: WebGrid 的主要行组件包括 `header`、`filter`、`datarow`、`pager`、`page_total` 和 `footer`
- en: 'You can link to `crud` functions using `action_links`. Just tell it where `crud`
    is exposed:'
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以使用 `action_links` 链接到 `crud` 函数。只需告诉它 `crud` 在哪里公开：
- en: '[PRE27]'
  id: totrans-151
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'You can turn `rows` on and off:'
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以开启或关闭`rows`：
- en: '[PRE28]'
  id: totrans-153
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: You can control the `fields` and `field_headers:`
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以控制`fields`和`field_headers`：
- en: '[PRE29]'
  id: totrans-155
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: You can control the `action_links` (links to `crud` actions) and `action_headers:`
  id: totrans-156
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以控制`action_links`（指向`crud`操作的链接）和`action_headers`：
- en: '[PRE30]'
  id: totrans-157
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE30]'
- en: 'You will want to modify `crud.settings.[action]_next`, so that it redirects
    to your WebGrid page after completing:'
  id: totrans-158
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可能需要修改`crud.settings.[action]_next`，以便在完成操作后重定向到你的WebGrid页面：
- en: '[PRE31]'
  id: totrans-159
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE31]'
- en: 'You can get page `totals` for numeric fields:'
  id: totrans-160
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以为数值字段获取页面`总计`：
- en: '[PRE32]'
  id: totrans-161
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE32]'
- en: 'You can set `filters` on columns:'
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在列上设置`过滤器`：
- en: '[PRE33]'
  id: totrans-163
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE33]'
- en: You can modify the `query` that `filters` use (not available if your datasource
    is a `Rows` object; use `rows.find):`
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以修改`过滤器`使用的`查询`（如果你的数据源是`Rows`对象，则不可用；使用`rows.find`）：
- en: '[PRE34]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE34]'
- en: 'You can control which request `vars` are allowed to override the `grid` settings:'
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以控制哪些请求`变量`可以覆盖`grid`设置：
- en: '[PRE35]'
  id: totrans-167
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The WebGrid will use a field's represent function, if present, when rendering
    the cell. If you need more control, you can completely override the way a row
    is rendered.
  id: totrans-168
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当渲染单元格时，WebGrid将使用字段表示函数，如果存在。如果你需要更多的控制，你可以完全覆盖渲染行的方式。
- en: 'The functions that render each row can be replaced with your own `lambda` or
    function:'
  id: totrans-169
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 渲染每一行的函数可以被替换成你自己的`lambda`或函数：
- en: '[PRE36]'
  id: totrans-170
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'Here are some useful variables for building your own rows:'
  id: totrans-171
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这里有一些有用的变量，用于构建你自己的行：
- en: '[PRE37]'
  id: totrans-172
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE37]'
- en: 'For example, let''s customize the footer:'
  id: totrans-173
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 例如，让我们自定义页脚：
- en: '[PRE38]'
  id: totrans-174
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'You can also customize messages:'
  id: totrans-175
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以自定义消息：
- en: '[PRE39]'
  id: totrans-176
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'You can also also use the `row_created` event to modify the row when it is
    created. Let''s add a column to the header:'
  id: totrans-177
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以使用`row_created`事件在行创建时修改该行。让我们在表头中添加一个列：
- en: '[PRE40]'
  id: totrans-178
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE40]'
- en: 'Let''s move the action links to the right-hand side:'
  id: totrans-179
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们将操作链接移到右侧：
- en: '[PRE41]'
  id: totrans-180
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '![How to do it...](img/5467OS_05_36.jpg)'
  id: totrans-181
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何操作...](img/5467OS_05_36.jpg)'
- en: If you are using multiple grids on the same page, they must have unique names.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在同一页面上使用多个网格，它们必须具有唯一的名称。
- en: Ajaxing your search functions
  id: totrans-183
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Ajax化你的搜索功能
- en: 'In this recipe, we describe the code demonstrated in this video:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个菜谱中，我们描述了视频中展示的代码：
- en: '[http://www.youtube.com/watch?v=jGuW43sdv6E](http://www.youtube.com/watch?v=jGuW43sdv6E)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.youtube.com/watch?v=jGuW43sdv6E](http://www.youtube.com/watch?v=jGuW43sdv6E)'
- en: It is very similar to autocompletion. It lets you type code in an input field,
    sends the text to the server through Ajax, and displays the results returned by
    the server. It can be used, for example, to perform live search. It differs from
    autocompletion, because the text is not necessarily picked from one table (it
    can originate from a more complex search condition implemented server-side), and
    the results are not used to populate an input field.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 它与自动完成非常相似。它允许你在输入字段中输入代码，通过Ajax将文本发送到服务器，并显示服务器返回的结果。它可以用于执行实时搜索。它与自动完成不同，因为文本不一定来自一个表（它可以来自服务器端实现的更复杂的搜索条件），并且结果不用于填充输入字段。
- en: How to do it...
  id: totrans-187
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何操作...
- en: 'We need to start with a model and, for this example, we picked this one:'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要从一个模型开始，在这个例子中，我们选择了这个模型：
- en: '[PRE42]'
  id: totrans-189
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE42]'
- en: 'We populate this model with the following data:'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们用以下数据填充此模型：
- en: '[PRE43]'
  id: totrans-191
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE43]'
- en: Create the following css file `static/css/livesearch.css:`
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下CSS文件`static/css/livesearch.css`：
- en: '[PRE44]'
  id: totrans-193
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE44]'
- en: Create the following JavaScript file `static/js/livesearch.js:`
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建以下JavaScript文件`static/js/livesearch.js`：
- en: '[PRE45]'
  id: totrans-195
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE45]'
- en: 'Now create a simple controller action:'
  id: totrans-196
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在创建一个简单的控制器动作：
- en: '[PRE46]'
  id: totrans-197
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE46]'
- en: The simple controller action is associated to the following `views/default/index.html`,
    which uses the livesearch JS and CSS created in *steps 3* and *4:*
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简单控制器动作关联到以下`views/default/index.html`，它使用了在*步骤 3*和*步骤 4*中创建的livesearch JS和CSS：
- en: '[PRE47]'
  id: totrans-199
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE47]'
- en: 'Finally, in the same controller as the `index` function, implement the Ajax
    callback:'
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在`index`函数相同的控制器中，实现Ajax回调：
- en: '[PRE48]'
  id: totrans-201
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE48]'
- en: 'Here is how it looks:'
  id: totrans-202
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 这就是它的样子：
- en: '![How to do it...](img/5467OS_05_37.jpg)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![如何操作...](img/5467OS_05_37.jpg)'
- en: Creating sparklines
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建sparklines
- en: '`Sparklines` are small graphs, typically embedded in text, that summarize a
    time series or similar information. The `jquery.sparklines` plugin provides several
    different chart styles and a useful variety of display options. You can combine
    the sparklines plugin with the `jquery.timers` plugin to display data that''s
    changing in real time. This recipe shows one way to accomplish that.'
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: '`Sparklines`是小型图表，通常嵌入在文本中，用于总结时间序列或类似信息。`jquery.sparklines`插件提供了几种不同的图表样式和有用的显示选项。你可以将sparklines插件与`jquery.timers`插件结合使用，以显示实时变化的数据。这个菜谱展示了实现这一点的其中一种方法。'
- en: 'Sparkline charts are really useful in applications where you need to visually
    compare lots of similar data series. Here''s a link to a chapter in *Edward Tufte''s,
    Beautiful Evidence* with more info:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Sparkline图表在需要直观比较大量相似数据系列的应用程序中非常有用。以下是一个链接，指向*爱德华·图费尔的《美丽证据》*一书中关于更多信息的一个章节：
- en: '[http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR](http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR)'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR](http://www.edwardtufte.com/bboard/q-and-a-fetch-msg?msg_id=0001OR)'
- en: We will create an index that shows five to 25 bar charts displaying random numbers,
    reversely sorted to emulate Pareto charts. The charts update once-per-second with
    new data from the server.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个索引，显示5到25个条形图，展示随机数字，反向排序以模拟帕累托图。图表每秒更新一次，以从服务器获取的新数据。
- en: 'Here''s what the display will look like:'
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 显示效果如下：
- en: '![Creating sparklines](img/5467OS_05_38.jpg)'
  id: totrans-210
  prefs: []
  type: TYPE_IMG
  zh: '![创建sparklines](img/5467OS_05_38.jpg)'
- en: This example assumes that you can use a single JSON query to get the data for
    all the sparklines at once, and that you know at the time the view is rendered
    how many graphs are to be displayed. The trick is choosing a suitable scheme for
    generating graph IDs, in this case `["dynbar0", "dynbar1",....]`, and using the
    same ID strings as keys for the dictionary, returned from the JSON service function.
    This makes it simple to use the web2py view templating methods, to generate `jquery.sparkline()`
    calls that update the sparklines with data returned from the service function.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 此示例假设您可以使用单个JSON查询一次性获取所有sparklines的数据，并且您在视图渲染时知道要显示多少个图表。技巧是选择一个合适的方案来生成图形ID，在这种情况下是`["dynbar0",
    "dynbar1",....]`，并且使用从JSON服务函数返回的相同ID字符串作为字典的键。这使得使用web2py视图模板方法生成`jquery.sparkline()`调用以更新从服务函数返回的sparklines变得简单。
- en: How to do it...
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何做到这一点...
- en: 'First of all, you need to download the following:'
  id: totrans-213
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，您需要下载以下内容：
- en: '[http://plugins.jquery.com/project/sparklines, into "static/js/jquery.sparkline.js"](http://plugins.jquery.com/project/sparklines)'
  id: totrans-214
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://plugins.jquery.com/project/sparklines, 进入 "static/js/jquery.sparkline.js"](http://plugins.jquery.com/project/sparklines)'
- en: And the timer, [http://plugins.jquery.com/project/timers](http://plugins.jquery.com/project/timers),
    into `static/js/jquery.timers-1.2.js`
  id: totrans-215
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及计时器，[http://plugins.jquery.com/project/timers](http://plugins.jquery.com/project/timers)，进入`static/js/jquery.timers-1.2.js`
- en: 'Then, in your `layout.html`, before including `web2py_ajax.html`, add the following:'
  id: totrans-216
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在您的`layout.html`中，在包含`web2py_ajax.html`之前，添加以下内容：
- en: '[PRE49]'
  id: totrans-217
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'Add the following actions to your controller:'
  id: totrans-218
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将以下操作添加到您的控制器中：
- en: '[PRE50]'
  id: totrans-219
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE50]'
- en: 'Then, create `views/default/index.html`, as follows:'
  id: totrans-220
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，创建`views/default/index.html`，如下所示：
- en: '[PRE51]'
  id: totrans-221
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE51]'
