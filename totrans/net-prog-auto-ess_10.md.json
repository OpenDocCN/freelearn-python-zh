["```py\ndevices:\n  - name: acc-a\n    type: router_acc\n    image: brnuts/routerlab\n  - name: acc-b\n    type: router_acc\n    image: brnuts/routerlab\nlinks:\n  - name: [pc, cpe]\n    connection: [pc-a, cpe-a]\n  - name: [cpe, acc]\n    connection: [cpe-a, acc-a]\n```", "```py\nnetlab@netlab:~$ docker inspect -f '{{.State.Pid}}' pc-a\n1069\nnetlab@netlab:~$ docker inspect -f '{{.State.Pid}}' cpe-a\n1063\nnetlab@netlab:~$ sudo ip link add pc-cpe type veth peer name cpe-pc\nnetlab@netlab:~$ sudo ip link set pc-cpe netns 1069\nnetlab@netlab:~$ sudo ip link set cpe-pc netns 1063\nnetlab@netlab:~$ docker exec pc-a ip link set pc-cpe up\nnetlab@netlab:~$ docker exec cpe-a ip link set cpe-pc up\n```", "```py\nclaus@dev % git clone https://github.com/brnuts/netlab.git\nCloning into 'netlab'…\nremote: Enumerating objects: 103, done.\nremote: Counting objects: 100% (103/103), done.\nremote: Compressing objects: 100% (79/79), done.\nremote: Total 103, reused 44 (delta 12), pack-reused 0\nReceiving objects: 100% (103/103), 58 KiB | .9 MiB/s, done.\nResolving deltas: 100% (36/36), done.\n```", "```py\nclaus@dev % go build\nclaus@dev % ls -lah netlab\n-rwxr-xr-x  1 user  staff   5.3M Feb  8 11:54 netlab\n```", "```py\nclaus@dev % ./netlab\n```", "```py\nclaus@dev % ./netlab -host 10.0.4.1 -user oper -pw secret\n```", "```py\nclaus@dev % ./netlab -help\nUsage of ./netlab:\n  -host string\n      Host IP for netlab (default \"localhost\")\n  -port uint\n      SSH port to access Host IP for netlab (default 22)\n  -pw string\n      Password to access netlab host (default \"netlab\")\n  -topo string\n      Topology yaml file (default \"topology.yaml\")\n  -user string\n      Username to access netlab host (default \"netlab\")\n```", "```py\nclaus@dev % ls –1\ngo.mod\ngo.sum\nhostconnect.go\nnetlab.go\nreadtopology.go\nruncommand.go\ntopology.yaml\ntypes.go\nvethcommands.go\n```", "```py\ntype DeviceTopologyType struct {\n        Name  string\n        Type  string\n        Image string\n}\ntype LinkTopologyType struct {\n        Name       []string\n        Connection []string\n}\ntype TopologyConfType struct {\n        Devices []DeviceTopologyType\n        Links   []LinkTopologyType\n}\n```", "```py\nfmt.Errorf(\"failed '%s', out: %s ,err: %v\", cmd, out, err)\n```", "```py\ndevice_channel = self.transport.open_channel(\n    \"direct-tcpip\", target_socket, source_socket\n)\n```", "```py\nnetwork = ipaddress.ip_network(args.subnet)\nvalid_ips = list(network.hosts())\n```", "```py\nprefix = network.prefixlen\nfor device, interface in wan_interfaces.items():\n    ip = valid_ips.pop(0)\n    cmd = \"sudo ip addr add {}/{} dev {}\".format(ip, prefix, interface)\n    run_device_command(args, device, cmd)\n```", "```py\nsudo tc qdisc add dev wan-core-a1 root netem delay 100ms\n```"]