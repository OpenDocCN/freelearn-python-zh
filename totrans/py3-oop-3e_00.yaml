- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book introduces the terminology of the object-oriented paradigm. It focuses
    on object-oriented design with step-by-step examples. It guides us from simple
    inheritance, one of the most useful tools in the object-oriented programmer's
    toolbox, through exception handling to design patterns, an object-oriented way
    of looking at object-oriented concepts.
  prefs: []
  type: TYPE_NORMAL
- en: Along the way, we'll learn how to integrate the object-oriented and the not-so-object-oriented
    aspects of the Python programming language. We will learn the complexities of
    string and file manipulation, emphasizing the difference between binary and textual
    data.
  prefs: []
  type: TYPE_NORMAL
- en: We'll then cover the joys of unit testing, using not one, but two unit testing
    frameworks. Finally, we'll explore, through Python's various concurrency paradigms,
    how to make objects work well together at the same time.
  prefs: []
  type: TYPE_NORMAL
- en: Each chapter includes relevant examples and a case study that collects the chapter's
    contents into a working (if not complete) program.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book specifically targets people who are new to object-oriented programming.
    It assumes you have basic Python skills. You'll learn object-oriented principles
    in depth. It is particularly useful for system administrators who have used Python
    as a *glue* language and would like to improve their programming skills.
  prefs: []
  type: TYPE_NORMAL
- en: Alternatively, if you are familiar with object-oriented programming in other
    languages, then this book will help you understand the idiomatic ways to apply
    your knowledge in the Python ecosystem.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is loosely divided into four major parts. In the first four chapters,
    we will dive into the formal principles of object-oriented programming and how
    Python leverages them. In [Chapter 5](42cd7e16-073b-485c-8073-554ac64d992f.xhtml), *When
    to Use Object*-*Oriented Programming*, through [Chapter 8](9a6335a2-1c69-4fa8-a685-02bbeeba23be.xhtml), *Strings
    and Serialization*, we will cover some of Python's idiosyncratic applications
    of these principles by learning how they are applied to a variety of Python's
    built-in functions. [Chapter 9](0abbcae0-eb3f-4237-adda-32765e1cce32.xhtml), *The
    Iterator Pattern*, through [Chapter 11](8f3d1c0f-4a63-4d06-8fb2-ad4dfe2669a3.xhtml), *Python
    Design Patterns II*, cover design patterns, and the final two chapters discuss
    two bonus topics related to Python programming that may be of interest.
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 1](f3a06c74-ab7f-450f-9663-bfe014b359bf.xhtml), *Object-Oriented Design*,
    covers important object-oriented concepts. It deals mainly with terminology such
    as abstraction, classes, encapsulation, and inheritance. We also briefly look
    at UML to model our classes and objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](0786c893-abb9-4f35-9320-3f2f54de95eb.xhtml), *Objects in Python*,
    discusses classes and objects as they are used in Python. We will learn about
    attributes and behaviors of Python objects, and the organization of classes into
    packages and modules. Lastly, we will see how to protect our data.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ba7b3eb7-17cc-4f1c-bb74-fb7d5ee7d517.xhtml), *When Objects Are
    Alike*, gives us a more in-depth look into inheritance. It covers multiple inheritance
    and shows us how to extend built-in. This chapter also covers how polymorphism
    and duck typing work in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](04b8e2ea-599a-4bd0-abf7-4276eab787e0.xhtml), *Expecting the Unexpected*,
    looks into exceptions and exception handling. We will learn how to create our
    own exceptions and how to use exceptions for program flow control.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](42cd7e16-073b-485c-8073-554ac64d992f.xhtml), *When to Use Object*-*Oriented
    Programming*, deals with creating and using objects. We will see how to wrap data
    using properties and restrict data access. This chapter also discusses the DRY
    principle and how not to repeat code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](6a121a79-7716-4a8f-94ab-f96781e82d25.xhtml), *Python Data Structures*,
    covers the object-oriented features of Python''s built-in classes. We''ll cover
    tuples, dictionaries, lists, and sets, as well as a few more advanced collections.
    We''ll also see how to extend these standard objects.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](b70c8ea0-4778-4005-af13-bdae3d90d2c6.xhtml), *Python Object-Oriented
    Shortcuts*, as the name suggests, deals with time-savers in Python. We will look
    at many useful built-in functions, such as method overloading using default arguments.
    We''ll also see that functions themselves are objects and how this is useful.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](9a6335a2-1c69-4fa8-a685-02bbeeba23be.xhtml), *Strings and Serialization*,
    looks at strings, files, and formatting. We''ll discuss the difference between
    strings, bytes, and byte arrays, as well as various ways to serialize textual,
    object, and binary data to several canonical representations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](0abbcae0-eb3f-4237-adda-32765e1cce32.xhtml), *The Iterator Pattern*,
    introduces the concept of design patterns and covers Python''s iconic implementation
    of the iterator pattern. We''ll learn about list, set, and dictionary comprehensions.
    We''ll also demystify generators and coroutines.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](345fe617-9a90-4c59-9355-e7076759f9a4.xhtml), *Python Design Patterns
    I*, covers several design patterns, including the decorator, observer, strategy,
    state, singleton, and template patterns. Each pattern is discussed with suitable
    examples and programs implemented in Python.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](8f3d1c0f-4a63-4d06-8fb2-ad4dfe2669a3.xhtml), *Python Design Patterns
    II*, wraps up our discussion of design patterns with coverage of the adapter,
    facade, flyweight, command, abstract, and composite patterns. More examples of
    how idiomatic Python code differs from canonical implementations are provided.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 12](ab1b23ea-7665-4745-a2a3-e739252eafb0.xhtml), *Testing Object-Oriented
    Programs*, opens with why testing is so important in Python applications. It focuses
    on test-driven development and introduces two different testing suites: `unittest`
    and `py.test`. Finally, it discusses mocking test objects and code coverage.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 13](580eef91-bc55-4407-9475-9c31c5c4da80.xhtml), *Concurrency*, is
    a whirlwind tour of Python''s support (and lack thereof) of concurrency patterns.
    It discusses threads, multiprocessing, futures, and the modern AsyncIO library.'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All the examples in this book rely on the Python 3 interpreter. Make sure you
    are not using Python 2.7 or earlier. At the time of writing, Python 3.7 was the
    latest release of Python. Many examples will work on earlier revisions of Python
    3, but you'll likely experience a lot of frustration if you're using anything
    older than 3.5.
  prefs: []
  type: TYPE_NORMAL
- en: All of the examples should run on any operating system supported by Python.
    If this is not the case, please report it as a bug.
  prefs: []
  type: TYPE_NORMAL
- en: Some of the examples need a working internet connection. You'll probably want
    to have one of these for extracurricular research and debugging anyway!
  prefs: []
  type: TYPE_NORMAL
- en: In addition, some of the examples in this book rely on third-party libraries
    that do not ship with Python. They are introduced within the book at the time
    they are used, so you do not need to install them in advance.
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packt.com/support](http://www.packt.com/support)
    and register to have the files emailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register at [www.packt.com](http://www.packt.com/support).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the SUPPORT tab.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on Code Downloads & Errata.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR/7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg/iZip/UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip/PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Python-3-Object-Oriented-Programming-Third-Edition](https://github.com/PacktPublishing/Python-3-Object-Oriented-Programming-Third-Edition). In
    case there's an update to the code, it will be updated on the existing GitHub
    repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Most object-oriented programming languages have the concept of
    a **constructor****.**"'
  prefs: []
  type: TYPE_NORMAL
- en: Warnings or important notes appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packt.com/submit-errata](http://www.packt.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packt.com` with a link
    to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: Reviews
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  prefs: []
  type: TYPE_NORMAL
- en: For more information about Packt, please visit [packt.com](https://www.packt.com/).
  prefs: []
  type: TYPE_NORMAL
