- en: Part I
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Design
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will first spend some time explaining the basic steps to designing a system.
    My suggestion is as follows: "Design is the first stage of any successful system,
    and encompasses everything that you work on before you begin implementation."
    In this section, we will focus on the general principles and core aspects of each
    element of the system.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Two main core elements should be at the forefront when designing each part
    of the system: The *interface*, or how an element of the system connects to the
    rest, and *data storage*, how this element stores information that can be retrieved
    later.'
  prefs: []
  type: TYPE_NORMAL
- en: Both are critical. The interface defines what the system is and its functionality
    from the point of view of any user. A well-designed interface hides the implementation
    details and provides some abstractions that allow for a consistent and comprehensive
    way of performing actions.
  prefs: []
  type: TYPE_NORMAL
- en: The heart of virtually every successful working system is the data. This is
    where the value of the system lies. Any seasoned engineer will tell you that an
    organization can reconstruct a system when the data is available, even if the
    code that produced it is lost, rather than recover from a total loss of the data,
    even if the application code is available.
  prefs: []
  type: TYPE_NORMAL
- en: The storage of data is, then, the core of the system. There are many options
    we can choose from when it comes to storing our data. What kind of database? Store
    the data in one data storage facility, or several? The traditional way of using
    raw access to the database, typically in plain SQL statements, is not the most
    efficient option, and it's prone to problems when complex systems are involved.
    Other kinds of databases exist that don't even use SQL. We will look at multiple
    options along with their pros and cons.
  prefs: []
  type: TYPE_NORMAL
- en: Changing how the data is stored in the system is hard once the system is in
    operation. It isn't impossible but will require a lot of work. The storage option
    is arguably the founding stone when designing a new system, so be sure that the
    chosen option fits your requirements. It can be difficult to design something
    that isn't overly complex but also allows the allocated space to grow as the application
    starts to store more and more data as it's used.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section of the book comprises the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**API Design**, describing how to create useful, yet flexible, interfaces'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Data Modeling**, with different ways of handling and representing data to
    ensure that this critical aspect is well thought through from the outset'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
