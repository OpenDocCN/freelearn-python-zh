["```py\npytest==4.0.1 \ncoverage==4.5.2 \npytest-cov==2.6.0 \n```", "```py\n    pip install -r requirements.txt\n```", "```py\nInstalling collected packages: atomicwrites, six, more-itertools, pluggy, py, attrs, pytest, coverage, pytest-cov\nSuccessfully installed atomicwrites-1.2.1 attrs-18.2.0 coverage-4.5.2 more-itertools-4.3.0 pluggy-0.8.0 py-1.7.0 pytest-4.0.1 pytest-cov-2.6.0 six-1.12.0\n\n```", "```py\nimport pytest \nfrom app import create_app \nfrom models import orm \nfrom flask_sqlalchemy import SQLAlchemy \nfrom flask import Flask \nfrom views import service_blueprint \n\n@pytest.fixture \ndef application(): \n    # Beginning of Setup code \n    app = create_app('test_config') \n    with app.app_context():    \n        orm.create_all() \n        # End of Setup code \n        # The test will start running here \n        yield app \n        # The test finished running here \n        # Beginning of Teardown code \n        orm.session.remove() \n        orm.drop_all() \n        # End of Teardown code \n\n@pytest.fixture \ndef client(application): \n    return application.test_client() \n```", "```py\nimport pytest from base64 import b64encode from flask import current_app, json, ...\n```", "```py\n[tool:pytest] \ntestpaths = tests \n\n[coverage:run] \nbranch = True \nsource =  \n    models \n    views \n```", "```py\n    pytest --cov -s\n```", "```py\n=================================== test session starts ===================================\n latform darwin -- Python 3.7.1, pytest-4.0.1, py-1.7.0, pluggy-0.8.0 - \n - /Users/gaston/HillarPythonREST2/Flask01/bin/python3\n cachedir: .pytest_cache\n rootdir: /Users/gaston/HillarPythonREST2/Flask01/service, inifile: \n setup.cfg\n plugins: cov-2.6.0\n collected 5 items \n\n    tests/test_views.py::test_request_without_authentication PASSED                     \n    [ 20%]\n    tests/test_views.py::test_create_and_retrieve_notification_category \n    PASSED          [ 40%]\n    tests/test_views.py::test_create_duplicated_notification_category \n    PASSED            [ 60%]\n    tests/test_views.py::test_retrieve_notification_categories_list \n    PASSED              [ 80%]\n    tests/test_views.py::test_update_notification_category PASSED                       \n    [100%]\n\n    ---------- coverage: platform darwin, python 3.7.1-final-0 --------\n    ---\n    Name        Stmts   Miss Branch BrPart  Cover\n    ---------------------------------------------\n    models.py     101     27     24      7    66%\n    views.py      208    112     46     10    43%\n    ---------------------------------------------\n    TOTAL         309    139     70     17    51%\n\n========================== 5 passed, 1 warnings in 18.15 seconds ==========================\n\n```", "```py\n    coverage report -m\n```", "```py\n    Name        Stmts   Miss Branch BrPart  Cover   Missing\n    -------------------------------------------------------\n    models.py     101     27     24      7    66%   22-23, 38, 40, 42, \n    44, 46, 48, 68-75, 78-80, 94, 133-143, 37->38, 39->40, 41>42, 43-\n    >44, 45->46, 47->48, 93->94\n    views.py      208    112     46     10    43%   37-39, 45-52, 57-\n    58, 61, 65-66, 77-81, 86-88, 91-118, 121-129, 134-141, 144-175, \n    188-189, 192, 199-200, 203-206, 209-217, 230-231, 234, 245-250, 56-\n    >57, 60->61, 64->65, 71->77, 187->188, 191->192, 194->201, 196-\n    >199, 229->230, 233->234\n    -------------------------------------------------------\n    TOTAL         309    139     70     17    51%\n\n```", "```py\n    coverage html\n```", "```py\ndef create_notification(client, message, ttl,notification_category): \n url = url_for('service.notificationlistresource', _external=True) data = {'message': message, 'ttl': ttl, 'notification_category': notification_category} response = client.post( url, headers=get_authentication_headers(TEST_USER_NAME, TEST_USER_PASSWORD), data=json.dumps(data)) ...\n```", "```py\n    pip freeze > requirements.txt\n```", "```py\n    alembic==1.0.0\n    aniso8601==3.0.2\n    atomicwrites==1.2.1\n    attrs==18.2.0\n    certifi==2018.8.24\n    chardet==3.0.4\n    Click==7.0\n    coverage==4.5.1\n    Flask==1.0.2\n    Flask-HTTPAuth==3.2.4\n    flask-marshmallow==0.9.0\n    Flask-Migrate==2.3.0\n    Flask-RESTful==0.3.6\n    Flask-SQLAlchemy==2.3.2\n    httpie==1.0.0\n    idna==2.7\n    itsdangerous==0.24\n    Jinja2==2.10\n    Mako==1.0.7\n    MarkupSafe==1.0\n    marshmallow==2.16.3\n    marshmallow-sqlalchemy==0.15.0\n    more-itertools==4.3.0\n    passlib==1.7.1\n    pluggy==0.8.0\n    psycopg2==2.7.6.1\n    py==1.7.0\n    Pygments==2.2.0\n    pytest==4.0.1\n    pytest-cov==2.6.0\n    python-dateutil==2.7.3\n    python-editor==1.0.3\n    pytz==2018.5\n    requests==2.19.1\n    six==1.11.0\n    SQLAlchemy==1.2.12\n    urllib3==1.23\n    Werkzeug==0.14.1\n\n```"]