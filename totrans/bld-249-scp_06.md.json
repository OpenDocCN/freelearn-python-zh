["```py\ndef diagonal(bb):\n   maxco=[]\n   minco=[]\n for i in range(3):\n      maxco.append(max(b[i] for b in bb))\n      minco.append(min(b[i] for b in bb))\n   return sqrt(sum((a-b)**2 for a,b in zip(maxco,minco)))\n```", "```py\nobs=Blender.Scene.GetCurrent().objects.selected\n\nif len(obs)!=2:\n Draw.PupMenu('Please select 2 objects%t|Ok')\nelse:\n   loc0 = obs[0].getLocation()\n   loc1 = obs[1].getLocation()\n\n   bb0 = obs[0].getBoundBox()\n   bb1 = obs[1].getBoundBox()\n\n   w = (diagonal(bb0)+diagonal(bb1))/4.0\n```", "```py\n   ipo0 = Ipo.New('Object','ObjectIpo0')\n   ipo1 = Ipo.New('Object','ObjectIpo1')\n```", "```py\n   for i,icu in enumerate((Ipo.OB_LOCX,Ipo.OB_LOCY,Ipo.OB_LOCZ)):\n ipo0[icu]=(1,loc0[i])\n      ipo0[icu][30]=loc1[i]\n\n ipo1[icu]=(1,loc1[i])\n      ipo1[icu][30]=loc0[i]\n\n      ipo0[icu].interpolation = IpoCurve.InterpTypes.BEZIER\n      ipo1[icu].interpolation = IpoCurve.InterpTypes.BEZIER\n```", "```py\n   mid_z = (loc0[2]+loc1[2])/2.0\n   ipo0[Ipo.OB_LOCZ][15] = mid_z + w\n   ipo1[Ipo.OB_LOCZ][15] = mid_z - w\n```", "```py\nobs[0].setIpo(ipo0)\nobs[1].setIpo(ipo1)\n```", "```py\ndef sort_by_parent(pbones):\n   bones=[]\n   if len(pbones)<1 : return bones\n   bone = pbones.pop(0)\n while(not bone.name in bones):\n      bones.append(bone.name)\n```", "```py\n      parent = bone.parent\n      while(parent):\n         if not parent.name in bones:\n bones.insert(bones.index(bone.name),parent.name)\n         parent = parent.parent\n         bone = parent\n      try:\n         bone = pbones.pop(0)\n      except IndexError:\n         break\n   return bones\n```", "```py\nscn = Blender.Scene.GetCurrent()\n\narm = scn.objects.active\n\nif arm.getType()!='Armature':\n Blender.Draw.PupMenu(\"Selected object is not an Armature%t|Ok\")\nelse:\n   adata = arm.getData()\n```", "```py\n   adata.makeEditable()\n   for ebone in adata.bones.values():\n ebone.options =list(set(ebone.options)|set([Blender.Armature.HINGE]))\n   adata.update()\n```", "```py\n   pose = arm.getPose()\n   action = arm.getAction()\n if not action:\n      action = Blender.Armature.NLA.NewAction()\n      action.setActive(arm)\n```", "```py\n   bones = sort_by_parent(pose.bones.values())\n\n   for frame in range(1,161,10):\n      index = int(frame/21)-1\n      n = len(bones)\n      for i,bone in enumerate(bones):\n         if i == index :\n            size = 1.3\n         else :\n            size = 1.0\n         pose.bones[bone].size=Vector(size,size,size)\n         pose.bones[bone].insertKey(arm,frame,Blender.Object.Pose.SIZE)\n```", "```py\nimport Blender\nfrom Blender import Scene,Window,Draw\nfrom Blender.Scene import Render\n\nimport struct\nimport wave\n```", "```py\ndef popup(msg):\n   (w,h)=Window.GetScreenSize()\n   Window.SetMouseCoords(w/2,h/2)\n   return Draw.PupMenu(msg)\n```", "```py\ndef sound2active(filename,shapekey='Pop out'):\n   try:\n wr = wave.open(filename,'rb')\n   except wave.Error,e:\n      return popup(str(e)+'%t|Ok')\n```", "```py\n   c = wr.getnchannels()\n   if c!=1 : return popup('Only mono files are supported%t|Ok')\n   t = wr.getcomptype()\n   w = wr.getsampwidth()\n   if t!='NONE' or w!=2 : \n     return popup('Only 16-bit, uncompresses files are supported%t|Ok')\n```", "```py\n   fr= wr.getframerate()\n   n = wr.getnframes()\n\n   b = wr.readframes(n)\n```", "```py\n   scn         = Scene.GetCurrent()\n   context     = scn.getRenderingContext()\n seconds     = float(n)/fr\n   sampleratio = fr/float(context.framesPerSec())\n```", "```py\n   samples  = struct.unpack('<%dh'%n,b)\n```", "```py\n   staframe = context.startFrame()\n   endframe = int(staframe + seconds*context.framesPerSec())\n\n   popout=[]\n   for i in range(staframe,endframe):\n popout.append(sum(samples[int((i-1)*sampleratio):int(i*sampleratio)])/sampleratio)\n   minvalue = min(popout)\n   maxvalue = max(popout)\n   scale = 1.0/(maxvalue-minvalue)\n```", "```py\n   ob=Blender.Scene.GetCurrent().objects.active\n\n ipo = ob.getData().getKey().getIpo()\n\n   for i,frame in enumerate(range(staframe,endframe)):\n      ipo[shapekey][frame]=(popout[i]-minvalue)*scale\n```", "```py\nif __name__ == \"__main__\":\n   ob=Blender.Scene.GetCurrent().objects.active\n\n   try:\n shapekeys = ob.getData().getKey().getIpo().curveConsts\n      key = popup('Select a shape key%t|'+'|'.join(shapekeys))\n      if key>0:\n Window.FileSelector \n (lambda f:sound2active(f,shapekeys[key-1]), \n \"Select a .wav file\",\n Blender.Get('soundsdir'))\n   except:\n      popup('Not a mesh or no shapekeys defined%t|Ok')\n```"]