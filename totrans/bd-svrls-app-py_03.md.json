["```py\nfrom __future__ import print_function\n\nimport json\nimport urllib\nimport boto3\nfrom botocore.client import Config\n\nprint('Loading function')\nsts_client = boto3.client('sts', use_ssl=True)\n\n# Assume a Role for temporary credentials\nassumedRoleObject = sts_client.assume_role(\nRoleArn=\"arn:aws:iam::080983167913:role/service-role/Pycontw-Role\",\nRoleSessionName=\"AssumeRoleSession1\"\n)\ncredentials = assumedRoleObject['Credentials']\nregion = 'us-east-1'\n\ndef lambda_handler(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n\n    # Get the object from the event and show its content type\n    bucket = event['Records'][0]['s3']['bucket']['name']\n    key = urllib.unquote_plus(event['Records'][0]['s3']       ['object']['key'].encode('utf8'))\n    try:\n        # Creates a session\n        session = boto3.Session(credentials['AccessKeyId'],      credentials['SecretAccessKey'] ,      aws_session_token=credentials['SessionToken'],      region_name=region)\n\n        #Instantiates an S3 resource\n        s3 = session.resource('s3',  config=Config(signature_version='s3v4'), use_ssl=True)\n\n        #Instantiates an S3 client\n        client = session.client('s3',   config=Config(signature_version='s3v4'), use_ssl=True)\n\n        # Gets the list of objects of a bucket\n        response = client.list_objects(Bucket=bucket)\n\n        destination_bucket = 'receiver-bucket'\n        source_bucket = 'sender-bucket'\n\n        # Adding all the file names in the S3 bucket in an  array\n        keys = []\n        if 'Contents' in response:\n            for item in response['Contents']:\n                keys.append(item['Key']);\n\n        # Add all the files in the bucket into the receiver bucket\n        for key in keys:\n            path = source_bucket + '/' + key\n            print(key)\n        s3.Object(destination_bucket,  key).copy_from(CopySource=path)\n\n    Exception as e:\n        print(e)\nprint('Error getting object {} from bucket {}. Make sure they exist and your bucket is in the same region as this function.'.format(key, bucket))\nraise e\n```", "```py\nfrom __future__ import print_function\nimport json\nprint('Loading function')\ndef lambda_handler(event, context):\n    #print(\"Received event: \" + json.dumps(event, indent=2))\n    message = event['Records'][0]['Sns']['Message']\n    print(\"From SNS: \" + message)\n    print('Hello World')\n    return message\n```", "```py\n import boto3\n import logging\n import json\n logger = logging.getLogger()\n logger.setLevel(logging.INFO)\n def lambda_handler(event, context):\n #capturing the CloudWatch log data\n LogEvent = str(event['awslogs']['data'])\n #converting the log data from JSON into a dictionary\n cleanEvent = json.loads(LogEvent)\n print 'Hello World'\n print cleanEvent['logEvents']\n```"]