["```py\n    cd c:\\web2py\n    c:\\python27\\python.exe web2py.py\n\n    ```", "```py\nC:\\web2py>c:\\python27\\python.exe web2py.py --help\n\n```", "```py\n    cd /home\n    mkdir www-dev\n    cd www-dev\n    wget http://www.web2py.com/examples/static/web2py_src.zip\n    (get web2py)\n\n    ```", "```py\n    unzip -x web2py_src.zip\n\n    ```", "```py\n    sudo apt-get install python-tk\n\n    ```", "```py\n    cd web2py\n    python web2py.py\n\n    ```", "```py\npython web2py.py -i 127.0.0.1 -p 8000 -a mypassword --nogui\n\n```", "```py\nsudo apt-get update\nsudo apt-get upgrade\n\n```", "```py\n    sudo apt-get install postgresql\n\n    ```", "```py\n     sudo apt-get install unzip\n    sudo apt-get install openssh-server\n\n    ```", "```py\n    sudo apt-get install apache2\n    sudo apt-get install libapache2-mod-wsgi\n\n    ```", "```py\n    sudo apt-get install python-imaging\n\n    ```", "```py\n    cd /home\n    sudo mkdir www-data\n    cd www-data\n\n    ```", "```py\n    sudo wget http://web2py.com/examples/static/web2py_src.zip\n    sudo unzip web2py_src.zip\n    sudo chown -R www-data:www-data web2py\n\n    ```", "```py\n    sudo a2enmod expires\n    sudo a2enmod ssl\n\n    ```", "```py\n    sudo openssl req -new -x509 -nodes -sha1 -days 365 -key \\\n    /etc/apache2/ssl/self_signed.key > \\\n    /etc/apache2/ssl/self_signed.cert\n    sudo openssl x509 -noout -fingerprint -text < \\\n    /etc/apache2/ssl/self_signed.cert > \\\n    /etc/apache2/ssl/self_signed.info\n\n    ```", "```py\n    sudo nano /etc/apache2/sites-available/default\n\n    ```", "```py\n    NameVirtualHost *:80\n    NameVirtualHost *:443\n\n    <VirtualHost *:80>\n    \tWSGIDaemonProcess web2py user=www-data group=www-data\n    \tWSGIProcessGroup web2py\n    \tWSGIScriptAlias / /home/www-data/web2py/wsgihandler.py\n\n    \t<Directory /home/www-data/web2py>\n    \t\tAllowOverride None\n    \t\tOrder Allow,Deny\n    \t\tDeny from all\n    \t\t<Files wsgihandler.py>\n    \t\t\tAllow from all\n    \t\t</Files>\n    \t</Directory>\n\n    \tAliasMatch ^/([^/]+)/static/(.*) \\\n    \t\t/home/www-data/web2py/applications/$1/static/$2\n\n    \t<Directory /home/www-data/web2py/applications/*/static/>\n    \t\tOptions -Indexes\n    \t\tOrder Allow,Deny\n    \t\tAllow from all\n    \t</Directory>\n\n    \t<Location /admin>\n    \t\tDeny from all\n    \t</Location>\n\n    \t<LocationMatch ^/([^/]+)/appadmin>\n    \t\tDeny from all\n    \t</LocationMatch>\n\n    \tCustomLog /var/log/apache2/access.log common\n    \tErrorLog /var/log/apache2/error.log\n    </VirtualHost>\n\n    <VirtualHost *:443>\n    \tSSLEngine on\n    \tSSLCertificateFile /etc/apache2/ssl/self_signed.cert\n    \tSSLCertificateKeyFile /etc/apache2/ssl/self_signed.key\n\n    \tWSGIProcessGroup web2py\n\n    \tWSGIScriptAlias / /home/www-data/web2py/wsgihandler.py\n\n    \t<Directory /home/www-data/web2py>\n    \t\tAllowOverride None\n    \t\tOrder Allow,Deny\n    \t\tDeny from all\n    \t\t<Files wsgihandler.py>\n    \t\t\tAllow from all\n    \t\t</Files>\n    \t</Directory>\n\n    \tAliasMatch ^/([^/]+)/static/(.*) \\\n    \t\t/home/www-data/web2py/applications/$1/static/$2\n    \t<Directory /home/www-data/web2py/applications/*/static/>\n    \t\tOptions -Indexes\n    \t\tExpiresActive On\n    \t\tExpiresDefault \"access plus 1 hour\"\n    \t\tOrder Allow,Deny\n    \t\tAllow from all\n    \t</Directory>\n\n    \tCustomLog /var/log/apache2/access.log common\n    \tErrorLog /var/log/apache2/error.log\n    </VirtualHost>\n\n    ```", "```py\n     sudo /etc/init.d/apache2 restart\n    \tcd /home/www-data/web2py\n    \tsudo -u www-data python -c \"from gluon.widget import console; \\\n    console();\"\n    \tsudo -u www-data python -c \"from gluon.main \\\n    import save_password; \\\n    save_password(raw_input('admin password: '),443)\"\n\n    ```", "```py\n wget http://web2py.googlecode.com/hg/scripts/setup-web2py-\\\n\tubuntu.sh\nchmod +x setup-web2py-ubuntu.sh\nsudo ./setup-web2py-ubuntu.sh\n\n```", "```py\napt-get install apache\n\n```", "```py\nyum install httpd\n\n```", "```py\n    a2enmod proxy\n    a2enmod rewrite\n\n    ```", "```py\n     <VirtualHost *:80>\n    \t...\n    </VirtualHost>\n\n    ```", "```py\n     <VirtualHost *:80>\n    \tRewriteEngine on\n    \t...\n    </VirtualHost>\n\n    ```", "```py\n     <VirtualHost *:80>\n    \tRewriteEngine on\n    \t# make sure we handle the case with no / at the end of URL\n    \tRewriteRule ^/web2py$ /web2py/ [R,L]\n\n    \t# when matching a path starting with /web2py/ do use a reverse\n    \t# proxy\n    \tRewriteRule ^/web2py/(.*) http://localhost:8000/$1 [P,L]\n    \t...\n    </VirtualHost>\n\n    ```", "```py\n     <VirtualHost *:80>\n    \t...\n    \t#make sure that HTTP redirects generated by web2py are reverted\n    \t\t/ -> /web2py/\n    \tProxyPassReverse /web2py/ http://localhost:8000/\n    \tProxyPassReverse /web2py/ /\n\n    \t# transform cookies also\n    \tProxyPassReverseCookieDomain localhost localhost\n    \tProxyPassReverseCookiePath / /web2py/\n    \t...\n    </VirtualHost>\n\n    ```", "```py\n    routes_out=((r'^/(?P<any>.*)', r'/web2py/\\g<any>'),)\n\n    ```", "```py\n # Enable content compression on the fly,\n# speeding up the net transfer on the reverse proxy.\n<Location /web2py/>\n\t# Insert filter\n\tSetOutputFilter DEFLATE\n\t# Netscape 4.x has some problems...\n\tBrowserMatch ^Mozilla/4 gzip-only-text/html\n\t# Netscape 4.06-4.08 have some more problems\n\tBrowserMatch ^Mozilla/4\\.0[678] no-gzip\n\t# MSIE masquerades as Netscape, but it is fine\n\tBrowserMatch \\bMSIE !no-gzip !gzip-only-text/html\n\t# Don't compress images\n\tSetEnvIfNoCase Request_URI \\\n\t\t\\.(?:gif|jpe?g|png)$ no-gzip dont-vary\n\t# Make sure proxies don't deliver the wrong content\n\tHeader append Vary User-Agent env=!dont-vary\n</Location>\n\n```", "```py\n <VirtualHost *:80>\n\tServerName localhost\n\t# ServerAdmin: Your address, where problems with the server\n\t# should\n\t# be e-mailed. This address appears on some server-generated\n\t# pages,\n\t# such as error documents. e.g. admin@your-domain.com\n\tServerAdmin root@localhost\n\n\t# DocumentRoot: The directory out of which you will serve your\n\t# documents. By default, all requests are taken from this\n\t# directory,\n\t# but symbolic links and aliases may be used to point to other\n\t# locations.\n\t# If you change this to something that isn't under /var/www then\n\t# suexec will no longer work.\n\tDocumentRoot \"/var/www/localhost/htdocs\"\n\n\t# This should be changed to whatever you set DocumentRoot to.\n\t<Directory \"/var/www/localhost/htdocs\">\n\t\t# Possible values for the Options directive are \"None\", \"All\",\n\t\t# or any combination of:\n\t\t# \tIndexes Includes FollowSymLinks\n\t\t# \tSymLinksifOwnerMatch ExecCGI MultiViews\n\t\t#\n\t\t# Note that \"MultiViews\" must be named *explicitly* ---\n\t\t# \"Options All\"\n\t\t# doesn't give it to you.\n\t\t#\n\t\t# The Options directive is both complicated and important.\n\t\t# Please\n\t\t# see http://httpd.apache.org/docs/2.2/mod/core.html#options\n\t\t# for more information.\n\t\tOptions Indexes FollowSymLinks\n\t\t# AllowOverride controls what directives may be placed in\n\t\t# .htaccess\n\t\t# It can be \"All\", \"None\", or any combination of the keywords:\n\t\t# \tOptions FileInfo AuthConfig Limit\n\t\tAllowOverride All\n\n\t\t# Controls who can get stuff from this server.\n\t\t\tOrder allow,deny\n\t\t\tAllow from all\n\t\t</Directory>\n\n\t\t### WEB2PY EXAMPLE PROXY REWRITE RULES\n\t\tRewriteEngine on\n\t\t# make sure we handle when there is no / at the end of URL\n\t\tRewriteRule ^/web2py$ /web2py/ [R,L]\n\n\t\t# when matching a path starting with /web2py/ do a reverse proxy\n\t\tRewriteRule ^/web2py/(.*) http://localhost:8000/$1 [P,L]\n\n\t\t# make sure that HTTP redirects generated by web2py are reverted\n\t\t# / -> /web2py/\n\t\tProxyPassReverse /web2py/ http://localhost:8000/\n\t\tProxyPassReverse /web2py/ /\n\n\t\t# transform cookies also\n\t\tProxyPassReverseCookieDomain localhost localhost\n\t\tProxyPassReverseCookiePath / /web2py/\n\n\t\t# Enable content compression on the fly speeding up the net\n\t\t# transfer on the reverse proxy.\n\t\t<Location /web2py/>\n\t\t\t# Insert filter\n\t\t\tSetOutputFilter DEFLATE\n\t\t\t# Netscape 4.x has some problems...\n\t\t\tBrowserMatch ^Mozilla/4 gzip-only-text/html\n\t\t\t# Netscape 4.06-4.08 have some more problems\n\t\t\tBrowserMatch ^Mozilla/4\\.0[678] no-gzip\n\t\t\t# MSIE masquerades as Netscape, but it is fine\n\t\t\tBrowserMatch \\bMSIE !no-gzip !gzip-only-text/html\n\t\t\t# Don't compress images\n\t\t\tSetEnvIfNoCase Request_URI \\\n\t\t\t\t\\.(?:gif|jpe?g|png)$ no-gzip dont-vary\n\t\t\t# Make sure proxies don't deliver the wrong content\n\t\t\tHeader append Vary User-Agent env=!dont-vary\n\t\t</Location>\n</VirtualHost>\n\n```", "```py\napachectl restart\n\n```", "```py\neasy_install scgi\neasy_install paste\neasy_install wsgitools\n\n```", "```py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nLOGGING = False\nSOFTCRON = False\n\nimport sys\nimport os\n\npath = os.path.dirname(os.path.abspath(__file__))\nos.chdir(path)\nsys.path = [path]+[p for p in sys.path if not p==path]\n\nimport gluon.main\n\nif LOGGING:\napplication = gluon.main.appfactory(\n\twsgiapp=gluon.main.wsgibase,\n\tlogfilename='httpserver.log',\nprofilerfilename=None)\nelse:\n\tapplication = gluon.main.wsgibase\n\nif SOFTCRON:\n\tfrom gluon.settings import global_settings\n\tglobal_settings.web2py_crontype = 'soft'\n\ntry:\n\timport paste.util.scgiserver as scgi\n\tscgi.serve_application(application, '', 4000).run()\nexcept ImportError:\nfrom wsgitools.scgi.forkpool import SCGIServer\nSCGIServer(application, port=4000).run()\n\n```", "```py\n    $ nohup python ./scgihandler.py &\n\n    ```", "```py\n    server.modules += ( \"mod_scgi\" )\n    server.document-root=\"/var/www/web2py/\"\n    # for >= linux-2.6\n    server.event-handler = \"linux-sysepoll\"\n\n    url.rewrite-once = (\n    \t\"^(/.+?/static/.+)$\" => \"/applications$1\",\n    \t\"(^|/.*)$\" => \"/handler_web2py.scgi$1\",\n    )\n    scgi.server = ( \"/handler_web2py.scgi\" =>\n    \t(\"handler_web2py\" =>\n    \t\t( \"host\" => \"127.0.0.1\",\n    \t\t\"port\" => \"4000\",\n    \t\t\"check-local\" => \"disable\", # important!\n    \t\t)\n    \t)\n    )\n\n    ```", "```py\n    $ lighttpd -t -f lighttpd.conf\n\n    ```", "```py\n    $ lighttpd -D -f lighttpd.conf\n\n    ```", "```py\n$ /etc/init.d/lighttpd start|stop|restart\n\n```", "```py\n     <uwsgi>\n    \t<pythonpath>/home/web2py</pythonpath>\n    \t<module>wsgihandler</module>\n    \t<socket>127.0.0.1:37719</socket>\n    \t<master/>\n    \t<processes>8</processes>\n    \t<memory-report/>\n    </uwsgi>\n\n    ```", "```py\n    $ uWSGI -d uwsgi.xml\n\n    ```", "```py\n    $ cherokee-admin\n\n    ```", "```py\n$ su - <web2py user>\n$ cd <web2py root>\n$ uwsgi -x uwsgi.xml -d /tmp/uwsgi.log\n\n```", "```py\napt-get update\napt-get -y upgrade\napt-get install python-software-properties\nadd-apt-repository ppa:nginx/stable\nadd-apt-repository ppa:uwsgi/release\napt-get update\napt-get -y install nginx-full\napt-get -y install uwsgi-python\n\n```", "```py\n     server {\n    \tlisten \t\t\t80;\n    \tserver_name \t$hostname;\n    \tlocation ~* /(\\w+)/static/ {\n    \t\troot /home/www-data/web2py/applications/;\n    \t}\n    \tlocation / {\n    \t\tuwsgi_pass \t127.0.0.1:9001;\n    \t\tinclude \tuwsgi_params;\n    \t}\n    }\n\n    server {\n    \tlisten \t\t\t443;\n    \tserver_name \t$hostname;\n    \tssl \t\t\t\t\ton;\n    \tssl_certificate \t\t/etc/nginx/ssl/web2py.crt;\n    \tssl_certificate_key \t/etc/nginx/ssl/web2py.key;\n    \tlocation / {\n    \t\tuwsgi_pass \t127.0.0.1:9001;\n    \t\tinclude \tuwsgi_params;\n    \t\tuwsgi_param UWSGI_SCHEME $scheme;\n    \t}\n    }\n\n    ```", "```py\n     <uwsgi>\n    \t<socket>127.0.0.1:9001</socket>\n    \t<pythonpath>/home/www-data/web2py/</pythonpath>\n    \t<app mountpoint=\"/\">\n    \t\t<script>wsgihandler</script>\n    \t</app>\n    </uwsgi>\n\n    ```", "```py\n    rm /etc/nginx/sites-enabled/default\n    rm /etc/nginx/sites-available/default\n    ln -s /etc/nginx/sites-available/web2py /etc/nginx/sites-enabled/\\\n    web2py\n    ln -s /etc/uwsgi-python/apps-available/web2py.xml /etc/uwsgi-\\\n    python/apps-enabled/web2py.xml\n\n    ```", "```py\n    mkdir /etc/nginx/ssl\n    cd /etc/nginx/ssl\n    openssl genrsa -out web2py.key 1024\n    openssl req -batch -new -key web2py.key -out web2py.csr\n    openssl x509 -req -days 1780 -in web2py.csr -signkey web2py.key \\\n    -out web2py.crt\n\n    ```", "```py\n    cd /var/web2py\n    sudo -u www-data python -c \"from gluon.main import save_password;\\\n    save_password('$PW', 443)\"\n\n    ```", "```py\n/etc/init.d/uwsgi-python restart\n/etc/init.d/nginx restart\n\n```", "```py\ncd cgi-bin\nwget http://www.web2py.com/examples/static/web2py_src.zip\nunzip web2py_src.zip\nrm web2py_src.zip\n\n```", "```py\n     SuexecUserGroup <yourusername> <yourgroup>\n    RewriteEngine on\n    RewriteBase /usr/www/users/username\n    RewriteRule ^(welcome|examples|admin)(/.*)?$ \\\n    \t\t\t/cgi-bin/cgiwrap/username/web2py/cgihandler.py\n\n    ```", "```py\n    chown 644 .htaccess\n\n    ```", "```py\n     RewriteEngine on\n    RewriteBase /usr/www/users/username\n    RewriteRule ^((welcome|examples|admin)(/.*)?)$ \\\n    \t\t\thttp://127.0.0.1:8000/$1 [P]\n\n    ```", "```py\nnohup python web2py.py -a password -p 8000 -N\n\n```", "```py\npython web2py.py -i 127.0.0.1 -p 8000 -f /path/to/apps\n\n```", "```py\n import socket\nimport os\nip = '0.0.0.0'\nport = 80\ninterfaces=[('0.0.0.0',80),\n\t('0.0.0.0',443,'ssl_key.pem','ssl_certificate.pem')]\npassword = '<recycle>' # <recycle> means use the previous password\npid_filename = 'httpserver.pid'\nlog_filename = 'httpserver.log'\nprofiler_filename = None\n#ssl_certificate = 'ssl_cert.pem' # certificate file\n#ssl_private_key = 'ssl_key.pem' # private key file\n#numthreads = 50 # ## deprecated; remove\nminthreads = None\nmaxthreads = None\nserver_name = socket.gethostname()\nrequest_queue_size = 5\ntimeout = 30\nshutdown_timeout = 5\nfolder = \"/path/to/apps\" # <<<<<<<< edit this line\nextcron = None\nnocron = None\n\n```", "```py\n    sudo adduser web2py\n\n    ```", "```py\n    sudo passwd -l web2py\n\n    ```", "```py\n    wget http://www.web2py.com/examples/static/web2py_src.zip\n    sudo unzip -x web2py_src.zip -d /opt\n    sudo chown -Rv web2py. /opt/web2py\n\n    ```", "```py\n    sudo cp /opt/web2py/scripts/web2py.ubuntu.sh /etc/init.d/web2py\n\n    ```", "```py\n    sudo nano /etc/init.d/web2py\n\n    ```", "```py\n    PIDDIR=/opt/$NAME\n    DAEMON_DIR=/opt/$NAME\n    APPLOG_FILE=$DAEMON_DIR/web2py.log\n    DAEMON_ARGS=\"web2py.py -p 8001 -i 127.0.0.1 -c server.crt -k\n    server.key -a<recycle> --nogui --pid_filename=$PIDFILE -l \\\n    $APPLOG_FILE\"\n\n    ```", "```py\n    sudo openssl genrsa -out /opt/web2py/server.key 1024\n    sudo openssl req -new -key /opt/web2py/server.key -out /opt/\\\n    web2py/server.csr\n    sudo openssl x509 -req -days 365 -in /opt/web2py/server.csr \\\n    -signkey /opt/web2py/server.key -out /opt/web2py/server.crt\n\n    ```", "```py\n    sys.stdout = sys.stderr = open(\"/opt/web2py/web2py.err\",\"wa\", 0)\n\n    ```", "```py\n    sudo /etc/init.d/web2py start\n\n    ```", "```py\nsudo update-rc.d web2py defaults\n\n```", "```py\nhttps://127.0.0.1:8001/welcome/default/index\n\n```", "```py\nsudo bash -x /etc/init.d/web2py start\n\n```", "```py\n start-stop-daemon --start \\\n\t${DAEMON_USER:+--chuid $DAEMON_USER} --chdir $DAEMON_DIR \\\n\t--background --user $DAEMON_USER --verbose --exec $DAEMON \\\n\t--$DAEMON_ARGS || return 2\n\n```", "```py\nsudo -u web2py python /opt/web2py/web2py.py -p 8001 -a mypasswd\n\n```", "```py\npython web2py -p 8081 -i 127.0.0.1 -a 'password'\n\n```", "```py\nhttp://www.microsoft.com/web/downloads/platform.aspx\n\n```", "```py\n    cd C:\\Python\\Lib\\site-packages\n    C:\\Python\\Lib\\site-packages> python isapi_wsgi.py install\n    Configured Virtual Directory: isapi-wsgi-test\n    Extension installed\n    Installation complete.\n\n    ```", "```py\n    C:\\Python\\Lib\\site-packages> python isapi_wsgi.py remove\n\n    ```", "```py\n    set PYTHONPATH=%PYTHONPATH%;C:\\path\\to\\web2py\n\n    ```", "```py\n     import os\n    import sys\n    import isapi_wsgi\n\n    # The entry point for the ISAPI extension.\n    def __ExtensionFactory__():\n    \tpath = os.path.dirname(os.path.abspath(__file__))\n    \tos.chdir(path)\n    \tsys.path = [path]+[p for p in sys.path if not p==path]\n    \timport gluon.main\n    \tapplication = gluon.main.wsgibase\n    \treturn isapi_wsgi.ISAPISimpleHandler(application)\n\n    # ISAPI installation:\n    if __name__=='__main__':\n    \tfrom isapi.install import ISAPIParameters\n    \tfrom isapi.install import ScriptMapParams\n    \tfrom isapi.install import VirtualDirParameters\n    \tfrom isapi.install import HandleCommandLine\n    \tparams = ISAPIParameters()\n    \tsm = [ScriptMapParams(Extension=\"*\", Flags=0)]\n    vd = VirtualDirParameters(Name=\"appname\",\n    \tDescription = \"Web2py in Python\", ScriptMaps = sm,\n    \tScriptMapUpdate = \"replace\")\n    params.VirtualDirs = [vd]\n    HandleCommandLine(params)\n\n    ```", "```py\n cd c:\\path\\to\\web2py\npython isapiwsgihandler.py install --server=sitename\n\n```", "```py\ncd C:\\Inetpub\\AdminScripts\ncscript.exe adsutil.vbs get W3SVC/AppPools/Enable32BitAppOnWin64\ncscript %systemdrive%\\inetpub\\AdminScripts\\adsutil.vbs get w3svc/\\\nAppPools/Enable32bitAppOnWin64\n\n```", "```py\ncscript %systemdrive%\\inetpub\\AdminScripts\\adsutil.vbs set w3svc/\\\nAppPools/Enable32bitAppOnWin64 1\n\n```", "```py\nIIsExt /AddFile %systemroot%\\syswow64\\inetsrv\\httpext.dll 1 ^\nWEBDAV32 1 \"WebDAV (32-bit)\"\n\n```", "```py\nsystem.webServer/applicationPool/add@enable32BitAppOnWin64.\n\n```"]