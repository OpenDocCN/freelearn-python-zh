["```py\n>>> def get_number(): \n...     return 10\n... \n>>>\n\n```", "```py\n>>> get_number.__doc__ \n>>> \n\n```", "```py\n>>> def get_number(): \n...     \"\"\"Return a special number\"\"\" \n...     return 10 \n... \n>>> get_number.__doc__ \n'Return a special number'\n\n```", "```py\n1\\. Introduction\n----------------\n```", "```py\npara1\\. Just write the sentences in the para \nand end it by adding one or more blank line.\n\n    para2 . blah blah blah. \n    ...more stuff in paragraph 2 See how it gets appended.. \n```", "```py\n.. code-block:: python \n\n    from wargame.attackoftheorcs import AttackOfTheOrcs \n    game = AttackOfTheOrcs() \n    game.play() \n```", "```py\nText before the bullet points. A blank line follows...\n\n* First bullet item\n  Some continuation text for first bullet, \n  Note that its alignment should match the bullet it is part of.  \n* second bullet item\n* last bullet item\n\nText after the bullets. Again needs a blank line after the last bullet. \n```", "```py\nText before the enumerated list. A blank line follows...\n\n1\\. item 1\n2\\. item 2\n   some continuation stuff in item 2\n3\\. item 3\n\nText after the enumerated lust. Again needs a blank line after the last item. \n```", "```py\n    :ivar int number: A number assigned to this hut.\n    :ivar AbstractGameUnit occupant: The occupant of...\n    ```", "```py\n:param type param_name: description \n```", "```py\n    $ cd  pyment-master\n    $ python setup.py install\n\n    ```", "```py\n$ pyment hut.py\n\n```", "```py\n$ patch hut.py hut.py.patch \npatching file hut.py \n\n```", "```py\n$ pip install Sphinx\n\n```", "```py\n$ pip install pygments\n\n```", "```py\n$ sphinx-quickstart\n\n```", "```py\n> Root path for the documentation [.]: docs \n\n> Separate source and build directories (y/n) [n]: y \n\n> Project name: wargame\n\n> Author name(s): Your_Name \n\n> Project version: 2.0.0 \n\nPlease indicate if you want to use one of the following Sphinx extensions: \n> autodoc: automatically insert docstrings from modules (y/n) [n]: y\n\n```", "```py\nextensions = [   'sphinx.ext.autodoc', ]\n```", "```py\nextensions = [   'sphinx.ext.autodoc', 'sphinx.ext.todo', ]\n```", "```py\n#sys.path.insert(0, os.path.abspath('.'))\n```", "```py\nsys.path.insert(0,   \n  os.path.abspath('/home/book/wargame_distribution')\n)\n```", "```py\n$ sphinx-apidoc [options] -o <outputdir> <sourcedir> [pathnames â€¦]\n\n```", "```py\n$ sphinx-apidoc  -o source/ ../\n\n```", "```py\n$ sphinx-apidoc  -o source/  /home/book/wargame_distribution\n\n```", "```py\n$ sphinx-build source build\n\n```", "```py\n$ cd /home/book/wargame_distribution/wargame/docs/source\n$ make html \n\n```", "```py\n> make.bat  html\n\n```", "```py\nimport os\nimport sys\nfrom numpy import trapz, polyfit\n```", "```py\nclass AttackOfTheOrcs:\n```", "```py\ndef show_game_mission(self):\n```", "```py\nif my_var is None:\n    # do something\n```", "```py\nif my_var is not None: \n    # do something else. \n```", "```py\n$ pip install pylint \n\n```", "```py\n$ pylint module_name.py\n\n```", "```py\n$ pylint --generate-rcfile > ~/.pylintrc\n\n```", "```py\n$ cd wargame\n$ pylint hut.py\n\n```", "```py\ninit-hook='import sys; sys.path.append(\"/path/to/wargame/\")' \n```", "```py\n$ pip install pep8\n\n```", "```py\n$ pip install autopep8\n\n```"]