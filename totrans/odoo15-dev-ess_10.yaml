- en: '[*Chapter 10*](B16119_10_Final_PD_ePub.xhtml#_idTextAnchor287): Backend Views
    – Designing the User Interface'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '[*第10章*](B16119_10_Final_PD_ePub.xhtml#_idTextAnchor287)：后端视图 – 设计用户界面'
- en: This chapter describes how to create views to implement the user interface for
    business applications. The Odoo user interface starts with the menu items and
    various actions being executed on menu clicks, so these are the first components
    we will learn about.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章描述了如何创建视图以实现业务应用的用户界面。Odoo用户界面从菜单项和菜单点击时执行的各种动作开始，因此这些是我们首先将学习的组件。
- en: The most used view type is the *form view*, and there are a few elements we
    must learn about, from organizing the disposition of the elements in the view
    to understanding all the options that are available for fields and buttons.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的视图类型是**表单视图**，我们需要了解一些元素，从组织视图中的元素布局到理解字段和按钮的所有可用选项。
- en: Some other frequently used views include list views and search views. Finally,
    other view types are available that are useful for specific purposes, such as
    the pivot and graph views. An overview of these will be provided toward the end
    of this chapter.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 一些其他常用的视图包括列表视图和搜索视图。最后，还有其他一些针对特定目的有用的视图类型，例如数据透视表视图和图形视图。这些视图类型将在本章末尾进行概述。
- en: 'The following topics will be covered in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主题：
- en: Adding menu items
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加菜单项
- en: Understanding window actions
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解窗口动作
- en: Exploring the form view's structure
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索表单视图的结构
- en: Using fields
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用字段
- en: Using buttons
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用按钮
- en: Adding dynamic view elements
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加动态视图元素
- en: Exploring list views
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索列表视图
- en: Exploring search views
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索搜索视图
- en: Understanding the other available view types
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解其他可用的视图类型
- en: By the end of this chapter, you should be familiar with all the Odoo view types
    and have the resources to use them. In particular, you will be confident with
    designing non-trivial form views and providing an adequate user experience.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该熟悉所有Odoo视图类型，并拥有使用它们的资源。特别是，你将能够自信地设计非平凡的表单视图，并提供良好的用户体验。
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: We'll continue working with the `library_checkout` add-on module. The model
    layer for it is already complete; now, it needs the view layer for the user interface.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将继续使用`library_checkout`附加模块。它的模型层已经完成；现在，它需要用户界面的视图层。
- en: The code in this chapter is based on the code that we created in [*Chapter 8*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227),
    *Business Logic – Supporting Business Processes*. The necessary code can be found
    in this book's GitHub repository at [https://github.com/PacktPublishing/Odoo-15-Development-Essentials](https://github.com/PacktPublishing/Odoo-15-Development-Essentials),
    in the `ch10` directory.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的代码基于我们在[*第8章*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227)中创建的代码，*业务逻辑
    – 支持业务流程*。必要的代码可以在此书的GitHub仓库中找到，位于[https://github.com/PacktPublishing/Odoo-15-Development-Essentials](https://github.com/PacktPublishing/Odoo-15-Development-Essentials)的`ch10`目录下。
- en: Adding menu items
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加菜单项
- en: Menu items are the starting point for user interface navigation. They form a
    hierarchical structure, where the top-level items represent applications, and
    the level below is the application main menu. Further sub-menu levels can be added.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项是用户界面导航的起点。它们形成一个层次结构，其中顶级项代表应用程序，下一级是应用程序主菜单。可以添加更多子菜单级别。
- en: Menu items with no sub-menus are *actionable* and can trigger an action that
    tells the web client what to do, such as opening a view.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 没有子菜单的菜单项是**可操作的**，可以触发一个动作，告诉Web客户端要做什么，例如打开一个视图。
- en: Menu items are stored in the `ir.ui.menu` model and can be browsed via the **Settings**
    | **Technical** | **User Interface** | **Menu Items** menu.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项存储在`ir.ui.menu`模型中，可以通过**设置** | **技术** | **用户界面** | **菜单项**菜单进行浏览。
- en: The `library_app` add-on module created a top-level menu for the library books,
    while the `library_checkout` add-on module added the menu items for the checkouts
    and checkout stages. These are both implemented in `library_checkout/views/library_menu.xml`.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '`library_app`附加模块为图书馆书籍创建了一个顶级菜单，而`library_checkout`附加模块添加了借阅和借阅阶段的菜单项。这两个模块都在`library_checkout/views/library_menu.xml`中实现。'
- en: 'This is the XML for the checkout menu item:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这是借阅菜单项的XML：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding code uses a `<menuitem>` shortcut element, which is an abbreviated
    way to create a menu record that's more convenient than a `<record model="ir.ui.menu">`
    element.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 上一段代码使用了`<menuitem>`快捷元素，这是一种创建菜单记录的简写方式，比`<record model="ir.ui.menu">`元素更方便。
- en: 'The most used `<menuitem>` attributes are as follows:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 最常用的 `<menuitem>` 属性如下：
- en: '`name` is the menu item''s title and is present in the user interface.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是菜单项的标题，并在用户界面中显示。'
- en: '`action` is the XML ID of the action to run when clicking on the menu item.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`action` 是点击菜单项时运行的动作的 XML ID。'
- en: '`parent` is the XML ID of the parent menu item. In this case, the parent was
    created in another module, so it needs to be referenced using the complete XML
    ID; that is, `<module>.<XML ID>`.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`parent` 是父菜单项的 XML ID。在这种情况下，父菜单项是在另一个模块中创建的，因此需要使用完整的 XML ID 进行引用；即 `<module>.<XML
    ID>`。'
- en: 'Some other attributes are also available:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他属性也是可用的：
- en: '`sequence` sets a number to order the presentation of the menu items; for example,
    `sequence="10"`.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`sequence` 设置一个数字以对菜单项的展示顺序进行排序；例如，`sequence="10"`。'
- en: '`groups` is a comma-separated list of XML IDs of the security groups that have
    access to the menu item; for example, `groups="library_app.library_group_user,library_app.library_group_manager"`.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups` 是具有访问菜单项的安全组 XML ID 的逗号分隔列表；例如，`groups="library_app.library_group_user,library_app.library_group_manager"`。'
- en: '`web_icon` is the path to the icon to use. It''s only relevant for top-level
    menu items in the enterprise edition. The path value should follow the `web_icon="library_app,static/description/icon.png"`
    format.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`web_icon` 是要使用的图标的路径。它仅适用于企业版的顶级菜单项。路径值应遵循 `web_icon="library_app,static/description/icon.png"`
    格式。'
- en: Menu items can run an action, as identified by the `action` attribute, and in
    most cases, this will be a **window action**. The next section will explain how
    to create actions and what they are capable of.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项可以运行由 `action` 属性标识的动作，在大多数情况下，这将是一个 **窗口动作**。下一节将解释如何创建动作以及它们能够做什么。
- en: Understanding window actions
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解窗口动作
- en: A **window action** on a menu gives the web client instructions on what to do,
    such as opening a view, and can be used in menu items or buttons in views.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单上的 **窗口动作** 给予网络客户端执行指令，例如打开一个视图，并且可以在视图中的菜单项或按钮中使用。
- en: Window actions identify the model to use and the views to present in the user
    interface. They can also filter the available records using a `domain` filter
    and can set default values and filters using the `context` attribute.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口动作用于标识在用户界面中使用的模型和要展示的视图。它们还可以使用 `domain` 过滤器来过滤可用的记录，并可以使用 `context` 属性设置默认值和过滤器。
- en: Window actions are stored in the `ir.actions.act_window` model and can be browsed
    by going to the **Settings** | **Technical** | **Actions** | **Window Actions**
    menu.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口动作存储在 `ir.actions.act_window` 模型中，可以通过转到 **设置** | **技术** | **动作** | **窗口动作**
    菜单进行浏览。
- en: 'The `library_checkout/views/library_menu.xml` file contains the definition
    for the window action that''s used by the checkout menu item:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '`library_checkout/views/library_menu.xml` 文件包含用于结账菜单项的窗口动作定义：'
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'A window action is an `ir.actions.act_window` record. The most important fields
    are as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口动作是一个 `ir.actions.act_window` 记录。最重要的字段如下：
- en: '`name` is the title that will be displayed on the view that''s opened through
    the action.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是通过动作打开的视图上显示的标题。'
- en: '`res_model` is the identifier of the target model.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`res_model` 是目标模型的标识符。'
- en: '`view_mode` is a comma-separated list of the view types to make available.
    The first in the list is the one to open by default.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`view_mode` 是要提供的视图类型的逗号分隔列表。列表中的第一个是默认打开的。'
- en: 'The other relevant window actions fields are as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 其他相关的窗口动作字段如下：
- en: '`target` defaults to `current` and opens the view inline in the main content
    area. If it''s set to `new`, it will open the view in a pop-up dialog window;
    for example, `target="new"`.'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`target` 默认为 `current`，在主内容区域内联打开视图。如果设置为 `new`，则将在弹出对话框窗口中打开视图；例如，`target="new"`。'
- en: '`context` sets context information on the target views, which can set default
    values or activate filters, among other things; for example, `<field name="context">{''default_user_id'':
    uid}</field>`.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context` 在目标视图中设置上下文信息，可以设置默认值或激活过滤器等；例如，`<field name="context">{''default_user_id'':
    uid}</field>`。'
- en: '`domain` is a domain expression that forces a filter for the records that can
    be browsed in the opened views; for example, `domain="[(''user_id'', ''='', uid)]"`.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain` 是一个域表达式，它强制对在打开的视图中可浏览的记录进行过滤；例如，`domain="[(''user_id'', ''='', uid)]"`。'
- en: '`limit` is the number of records for each page in the list view; for example,
    `limit="80"`.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`limit` 是列表视图中每页的记录数；例如，`limit="80"`。'
- en: '`view_id` is a reference to a particular view to be used. It can''t be used
    together with `view_mode`. It is often used together with `target="new"`, to open
    a particular form as a popup.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`view_id`是对要使用的特定视图的引用。它不能与`view_mode`一起使用。它通常与`target="new"`一起使用，以弹出方式打开特定表单。'
- en: Changes in Odoo 13
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 13中的更改
- en: Until Odoo 12, the `<act_window>` shortcut element could be used to create window
    actions. This was removed in Odoo 13\. Now, window actions must be created using
    a `<record model="ir.actions.act_window">` element.
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 直到Odoo 12，可以使用`<act_window>`快捷元素来创建窗口操作。这在Odoo 13中被删除了。现在，必须使用`<record model="ir.actions.act_window">`元素来创建窗口操作。
- en: In this chapter, we will add view types for the `library.checkout` model. By
    doing so, we will showcase the other available view types, other than form and
    tree/list views.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将为`library.checkout`模型添加视图类型。通过这样做，我们将展示除了表单和树/列表视图之外的其他可用视图类型。
- en: 'The view types to be made available must be indicated by the window action.
    So, let''s edit the `library_checkout/views/library_menu.xml` file to add the
    new view types, as highlighted in the following code:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 要提供的视图类型必须由窗口操作指示。因此，让我们编辑`library_checkout/views/library_menu.xml`文件以添加新的视图类型，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: These changes can't be made yet. The definitions of the corresponding view types
    should be implemented before they are added to the window action's `view_mode`.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这些更改目前还不能进行。在将它们添加到窗口操作的`view_mode`之前，应该实现相应视图类型的定义。
- en: Other than the menu items or view buttons, actions can also be used in the **Action**
    context menu, which is available near the search box. The next section explains
    this in detail.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 除了菜单项或视图按钮之外，操作还可以在可用的**操作**上下文菜单中使用，该菜单位于搜索框附近。下一节将详细介绍这一点。
- en: Adding options to the Action context menu
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 向操作上下文菜单添加选项
- en: 'Window actions can also be used from the **Action** menu button, available
    at the top of form views, and also in list views when records are selected:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 窗口操作也可以从位于表单视图顶部的**操作**菜单按钮使用，也可以在记录被选中时在列表视图中使用：
- en: '![Figure 10.1 – The Action context menu'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.1 – 操作上下文菜单'
- en: '](img/Figure_10.1_B16119.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.1_B16119.jpg)'
- en: Figure 10.1 – The Action context menu
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – 操作上下文菜单
- en: This menu is contextual because the action will apply to the record or records
    currently selected.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此菜单是上下文相关的，因为操作将应用于当前选定的记录或记录。
- en: 'To have an action available in the **Action** menu, two more fields have to
    be set on the window action:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要在**操作**菜单中提供操作，必须在窗口操作上设置两个更多字段：
- en: '`binding_model_id` is a reference to the model to use the action for; for example,
    `<field name="binding_model_id" ref="model_library_checkout" />`.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binding_model_id`是对要使用该操作的模型的引用；例如，`<field name="binding_model_id" ref="model_library_checkout"
    />`。'
- en: '`binding_view_types` can be used to limit the option''s visibility to specific
    view types, such as `form` or `list`; for example, `<field name="binding_view_types">form,list</field>`.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`binding_view_types`可用于限制选项的可见性，使其仅对特定视图类型可见，例如`form`或`list`；例如，`<field name="binding_view_types">form,list</field>`。'
- en: 'An example of this has already been implemented in the `library_checkout` module,
    in the `wizard/checkout_mass_message_wizard_view.xml` file. This has been copied
    here for reference:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在`library_checkout`模块的`wizard/checkout_mass_message_wizard_view.xml`文件中已经实现了这个示例。这里复制出来供参考：
- en: '[PRE3]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The settings that are related to binding to the **Action** menu are highlighted
    in the previous code.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 与绑定到**操作**菜单相关的设置在上一段代码中被突出显示。
- en: 'The following screenshot illustrates the corresponding action menu item:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图说明了相应的操作菜单项：
- en: '![Figure 10.2 – The Send Message action menu options'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '![图10.2 – 发送消息操作菜单选项'
- en: '](img/Figure_10.2_B16119.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.2_B16119.jpg)'
- en: Figure 10.2 – The Send Message action menu options
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.2 – 发送消息操作菜单选项
- en: Changes in Odoo 13
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 13中的更改
- en: The action binding fields were changed in Odoo 13\. Until Odoo 12, `src_model`
    set the binding and used the model identifier, `library.checkout`, for example.
    It is available in the form view, and it can also be made available in the list
    view by setting `multi` to `true`.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在Odoo 13中，操作绑定字段发生了变化。直到Odoo 12，`src_model`设置绑定并使用模型标识符，例如`library.checkout`。它可以在表单视图中使用，也可以通过将`multi`设置为`true`使其在列表视图中可用。
- en: Once a window action has been triggered, the corresponding views are opened.
    The most used view types are form and list. The next section details how to create
    form views.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦触发窗口操作，就会打开相应的视图。最常用的视图类型是表单和列表。下一节将详细介绍如何创建表单视图。
- en: Exploring the form view structure
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索表单视图结构
- en: Form views are the main way users can interact with data records. Form views
    can either follow a simple layout or a business document layout, similar to a
    paper document. In this section, we'll learn how to design these business document
    views and how to use the elements and widgets that are available.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 表单视图是用户与数据记录交互的主要方式。表单视图可以采用简单的布局或业务文档布局，类似于纸质文档。在本节中，我们将学习如何设计这些业务文档视图以及如何使用可用的元素和组件。
- en: In [*Chapter 8*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227), *Business
    Logic – Supporting Business Processes*, we created a library checkout model and
    prepared a basic form for it. We will revisit and enhance it in this section.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第8章*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227)，*业务逻辑 – 支持业务流程*中，我们创建了一个图书馆借阅模型并为其准备了一个基本表单。我们将在本节中重新访问并增强它。
- en: 'The following screenshot shows what the form view will look like when we''re
    done:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了完成后的表单视图将看起来像什么：
- en: '![Figure 10.3 – The enhanced Checkouts form view'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.3 – 增强的结账表单视图'
- en: '](img/Figure_10.3_B16119.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '![img/Figure_10.3_B16119.jpg]'
- en: Figure 10.3 – The enhanced Checkouts form view
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 增强的结账表单视图
- en: You can refer to this screenshot while we gradually add the different elements
    throughout this chapter.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们逐渐在本章中添加不同元素的同时，您可以参考此截图。
- en: Using business document views
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用业务文档视图
- en: Historically, organizations use paper forms to support their internal processes.
    Business application models support digital versions of these paper forms, and
    in the process, they can add automation and make operations more efficient.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 从历史上看，组织使用纸质表单来支持其内部流程。业务应用模型支持这些纸质表单的数字版本，在这个过程中，它们可以添加自动化并使操作更高效。
- en: For a more intuitive user interface, form views can mimic these paper documents,
    helping users to visualize processes they are used to running on paper forms.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获得更直观的用户界面，表单视图可以模仿这些纸质文档，帮助用户可视化他们在纸质表单上习惯运行的过程。
- en: For example, for the **Library** app, book checkouts are probably a process
    where a paper form has to be filled in. It is probably a good idea to let the
    checkout form have a layout that looks like a paper document.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于**图书馆**应用，图书借阅可能是一个需要填写纸质表单的过程。让结账表单具有类似纸质文档的布局可能是一个好主意。
- en: 'A business document is a form that contains two elements: a `<head>` section
    and a `<sheet>` section. `head` contains buttons and widgets to control the document''s
    business workflow, while `sheet` contains the actual document content. After the
    `sheet` section, we can also have the message and activity widgets.'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 一个业务文档包含两个元素：一个`<head>`部分和一个`<sheet>`部分。`head`包含控制文档业务工作流的按钮和组件，而`sheet`包含实际的文档内容。在`sheet`部分之后，我们还可以有消息和活动组件。
- en: 'To add this structure to the checkout form, start by editing the `library_checkout/views/checkout_view.xml`
    file and changing the form view record to the following basic skeleton:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要将此结构添加到结账表单中，首先编辑`library_checkout/views/checkout_view.xml`文件，并将表单视图记录更改为以下基本框架：
- en: '[PRE4]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The view name is optional and automatically generated if it's missing. So, for
    simplicity, the `<field name="name">` element was omitted from the preceding view
    record.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 视图名称是可选的，如果缺失则自动生成。因此，为了简单起见，前一个视图记录中省略了`<field name="name">`元素。
- en: The `<head>` and `<sheet>` sections are empty for now, and will be expanded
    next.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`<head>`和`<sheet>`部分目前为空，将在下一部分中扩展。'
- en: The messaging section at the bottom uses the widgets provided by the `mail`
    add-on module, as explained in [*Chapter 8*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227),
    *Business Logic – Supporting Business Processes*.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 底部的消息部分使用了由`mail`附加模块提供的组件，具体说明见[*第8章*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227)，*业务逻辑
    – 支持业务流程*。
- en: The first section to check is the form header.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 首先要检查的部分是表单标题。
- en: Adding a header section
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加标题部分
- en: The header at the top usually features the steps that the document will move
    through in its life cycle and the related action buttons. These action buttons
    are regular form buttons, and the button for moving on will usually be highlighted,
    to help the user.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部的标题通常包含文档在其生命周期中将经过的步骤以及相关的操作按钮。这些操作按钮是常规的表单按钮，而用于前进的按钮通常会被突出显示，以帮助用户。
- en: Adding header buttons
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加标题按钮
- en: Let's start by adding a button to the currently empty header section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从向当前空白的标题部分添加一个按钮开始。
- en: 'While editing the `<header>` section in the form view, add a button to move
    a checkout to the `done` state:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在编辑表单视图中的`<header>`部分时，添加一个按钮将结账移动到`完成`状态：
- en: '[PRE5]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: By using the preceding code, the `Return Books` button is added to the header
    with `type="object"`, meaning that a model method is called. `name="button_done"`
    declares the method name to call.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用前面的代码，将`Return Books`按钮添加到标题中，并设置`type="object"`，表示调用模型方法。`name="button_done"`声明了要调用的方法名称。
- en: '`class="oe_highlight"` is used to highlight the button. When we have several
    buttons to choose from, the main or more usual course of action can be highlighted
    to help users.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`class="oe_highlight"`来突出显示按钮。当我们有多个按钮可供选择时，可以突出显示主要或更常见的操作，以帮助用户。
- en: The `attrs` attribute is used to have the button visible only in the states
    where it makes sense. It should be visible in the `open` state, so it should be
    set to invisible for the `new`,  `done`, and `cancel` states.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`attrs`属性使按钮仅在有意义的状态下可见。它应在`open`状态下可见，因此应将`new`、`done`和`cancel`状态设置为不可见。
- en: The condition to do this uses the `state` field, which otherwise is not used
    on the form. For the `attrs` condition to work, the `state` field needs to be
    loaded into the web client. To ensure this, it was added as an invisible field.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 用于执行此操作的条件使用`state`字段，否则在表单上不使用。为了使`attrs`条件工作，需要将`state`字段加载到Web客户端。为此，它被添加为一个不可见字段。
- en: In this particular case, the special `state` field name is being used, and the
    visibility condition to be implemented with `attrs` can be achieved with the simpler
    `states` attribute. The `states` attribute lists the states where the element
    will be visible.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个特定情况下，使用了特殊的`state`字段名，并且可以使用更简单的`states`属性来实现使用`attrs`实现的可见性条件。`states`属性列出了元素将可见的状态。
- en: 'By using `states` instead of `attrs`, the button will only be visible in the
    `open` state and will look like this:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用`states`而不是`attrs`，按钮仅在`open`状态下可见，看起来如下：
- en: '[PRE6]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The `attrs` and `states` element visibility features can also be used on other
    view elements, such as fields. We'll explore them in more detail later in this
    chapter.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '`attrs`和`states`元素可见性功能也可以用于其他视图元素，例如字段。我们将在本章后面更详细地探讨它们。'
- en: 'For this button to work, the method that''s being called must be implemented.
    For this, in the `library_checkout/models/library_checkout.py` file, add the following
    code to the `checkout` class:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此按钮工作，被调用的方法必须实现。为此，在`library_checkout/models/library_checkout.py`文件中，向`checkout`类添加以下代码：
- en: '[PRE7]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: First, the code looks up `done` state. It will be used to set the records to
    that stage.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，代码查找`完成`状态。它将用于将记录设置为该阶段。
- en: The `self` recordset will usually be a single record, but the API allows it
    to be called for a multi-record recordset, so this possibility should be addressed.
    This can be done with a `for` loop on `self`. Then, for each record in the `self`
    recordset, the `stage_id` field must be set to the `done` stage.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '`self`记录集通常是一个单独的记录，但API允许它对多记录记录集进行调用，因此应该处理这种可能性。这可以通过对`self`上的`for`循环来完成。然后，对于`self`记录集中的每个记录，必须将`stage_id`字段设置为`完成`阶段。'
- en: Alongside the buttons, the header can feature a status bar widget to present
    the available *stages* or *states*.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 除了按钮外，标题还可以包含状态栏小部件，以展示可用的**阶段**或**状态**。
- en: Adding a status bar pipeline
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 添加状态栏管道
- en: Another helpful element in the header is a pipeline diagram presenting the process
    steps and where the current document is at. This can be based either on a *stages*
    or a *states* list. This pipeline widget can be clickable or not, in case we want
    the changes to only be made through buttons.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 标题中另一个有用的元素是流程图，展示流程步骤以及当前文档的位置。这可以基于**阶段**或**状态**列表。此管道小部件可以是可点击的，也可以不是，以防我们只想通过按钮进行更改。
- en: 'The status bar widget is added with a `<field>` element using the `statusbar`
    widget. The checkout model has the `stage_id` field that we will use:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`statusbar`小部件通过`<field>`元素添加状态栏小部件。结账模型有`stage_id`字段，我们将使用它：
- en: '[PRE8]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `statusbar` widget can be used either with a **state** selection field or
    a **stage** many-to-one field. These two kinds of fields can be found across several
    Odoo core modules.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '`statusbar`小部件可以使用**状态**选择字段或**阶段**多对一字段。这两种字段可以在多个Odoo核心模块中找到。'
- en: The `clickable` option allows the user to change the document stage by clicking
    on the status bar. Having it enabled provides flexibility to the user. But there
    are also cases where we need more control over the workflow, and require the users
    to progress through the stages using only the available action buttons.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '`clickable` 选项允许用户通过点击状态栏来更改文档阶段。启用它为用户提供灵活性。但也有一些情况下，我们需要对工作流程有更多的控制，并要求用户仅通过可用的操作按钮来通过阶段。'
- en: Changes in Odoo 12
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 12 的变化
- en: 'Until Odoo 11, the clickable option was a field attribute, `<field widget="statusbar"
    clickable="True" />`. In Odoo 12, it was converted into a widget option, `<field
    widget="statusbar" options="{''clickable'': True}" />`.'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '直到 Odoo 11，可点击的选项是一个字段属性，`<field widget="statusbar" clickable="True" />`。在
    Odoo 12 中，它被转换为一个小部件选项，`<field widget="statusbar" options="{''clickable'': True}"
    />`。'
- en: The `fold_field` option is used to allow less important stages, such as *canceled*,
    to be hidden (folded) in a `fold_field` is set with the field name that's used
    for this. In this case, it is named `fold`.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '`fold_field` 选项用于允许不太重要的阶段，如 *已取消*，在设置 `fold_field` 时被隐藏（折叠），该字段名用于此。在这种情况下，它被命名为
    `fold`。'
- en: Using states instead of stages
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用状态而不是阶段
- en: The **stage** is a many-to-one field that uses a supporting model to set up
    the steps of the process. It is flexible, can be configured by end users to fit
    their specific business process, and is perfect for supporting Kanban boards.
    The library checkouts model is using it.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**阶段**是一个多对一的字段，它使用支持模型来设置流程的步骤。它是灵活的，可以被最终用户配置以适应他们特定的业务流程，并且非常适合支持看板。图书馆借阅模型正在使用它。'
- en: The **state** is a closed selection list featuring fixed process steps, such
    as **New**, **In Progress**, and **Done**. It can be used in business logic since
    the available states can't change. But it can't be configured by end users.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态**是一个包含固定流程步骤的封闭选择列表，例如 **新建**、**进行中** 和 **完成**。由于可用的状态不能更改，因此可以在业务逻辑中使用它。但它不能由最终用户配置。'
- en: Each of the approaches has pros and cons. It is possible to benefit from the
    best of both options by using stages and having each stage mapped into a state.
    The checkout model implemented this, adding a state field in the checkout stages
    model, which is also directly available in the checkout model through a related
    field.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 每种方法都有其优缺点。通过使用阶段并将每个阶段映射到状态，可以从中受益于两种选项的最佳之处。借阅模型实现了这一点，在借阅阶段模型中添加了一个状态字段，该字段也通过相关字段直接在借阅模型中可用。
- en: If a model is using states only, the status bar pipeline can also be used, with
    the `statusbar` widget. However, the `fold_field` option is not available; instead,
    the `statusbar_visible` attribute can be used, listing the states to make visible.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 如果一个模型只使用状态，则可以使用带有 `statusbar` 小部件的状态栏管道。然而，`fold_field` 选项不可用；相反，可以使用 `statusbar_visible`
    属性，列出要显示的状态。
- en: 'Using the status bar with a state `field` looks like this:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 使用带有状态 `field` 的状态栏看起来是这样的：
- en: '[PRE9]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Notice that the previous code is not used in the `library_checkout` module.
    Since it supports the more flexible stages, we prefer to use them on the user
    interface.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，之前的代码在 `library_checkout` 模块中没有使用。由于它支持更灵活的阶段，我们更愿意在用户界面中使用它们。
- en: Now that we're are done with the header section, let's look at the main form
    section.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了标题部分，让我们来看看主要表单部分。
- en: Designing the document sheet
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计文档表格
- en: The sheet canvas is the main area of the form and is where the actual data elements
    are placed. It is designed to look like an actual paper document.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 表格画布是表单的主要区域，实际数据元素放置于此。它被设计得像实际的纸质文档。
- en: 'Usually, a document sheet structure will contain the following areas:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，一个文档表格结构将包含以下区域：
- en: A document title at the top
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部的一个文档标题
- en: A button box at the top-right corner
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 顶部右角的一个按钮框
- en: Document header data fields
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文档标题数据字段
- en: A notebook at the bottom, for additional fields that can be organized into tabs
    or pages
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部的一个笔记本，用于可以组织成标签或页面的附加字段
- en: The document will often contain detailed lines of code. These are usually presented
    on the notebook's first page.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 文档通常会包含详细的代码行。这些通常在笔记本的第一页上展示。
- en: 'Here is the expected XML structure:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是预期的 XML 结构：
- en: '[PRE10]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: After the sheet, we usually have the Chatter widget, which contains the document
    followers, discussion messages, and planned activities.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在表格之后，我们通常会有聊天小部件，其中包含文档关注者、讨论消息和计划活动。
- en: Let's go through each of these areas. The button box will be discussed later,
    so next, we will discuss the header title.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐一讨论这些区域。按钮框将在稍后讨论，所以接下来，我们将讨论标题头。
- en: Adding a header title
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加标题头
- en: The header title will usually display the document's title in large letters.
    It may be followed by a subtitle and may also have an image next to it.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 标题头通常会用大号字母显示文档的标题。它可能后面跟着一个副标题，也可能旁边有一个图像。
- en: 'First, a couple of fields need to be added to the checkout model. A field needs
    to be used as the title, and an image needs to be used to represent the borrower.
    Edit the `library_checkout/models/library_checkout.py` file and add the following
    code:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，需要向结账模型添加几个字段。需要一个字段用作标题，还需要一个图像来表示借阅者。编辑 `library_checkout/models/library_checkout.py`
    文件并添加以下代码：
- en: '[PRE11]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The header title goes inside a `<div class="oe_title">` element. Regular HTML
    elements, such as `div`, `span`, `h1`, and `h3`, can be used.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 标题头位于 `<div class="oe_title">` 元素内。可以使用常规 HTML 元素，如 `div`、`span`、`h1` 和 `h3`。
- en: 'In the following code, the `<sheet>` element has been expanded to include the
    title, plus some additional fields as subtitles:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，`<sheet>` 元素已经扩展以包含标题，以及一些作为副标题的附加字段：
- en: '[PRE12]'
  id: totrans-151
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The preceding XML render includes the following:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的 XML 渲染包括以下内容：
- en: A button box `<div>` element. It is empty now but can be used to add smart buttons.
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个按钮框 `<div>` 元素。现在它是空的，但可以用来添加智能按钮。
- en: An image field, for `member_image`, using an avatar-like image widget.
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个图像字段，用于 `member_image`，使用类似头像的图像小部件。
- en: 'A `<div>` element containing the document title elements. Inside the title,
    there is the following:'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含文档标题元素的 `<div>` 元素。在标题内，有如下内容：
- en: A `<label>` for the `name` field, which is only visible in edit mode.
  id: totrans-156
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 字段的 `<label>`，仅在编辑模式下可见。'
- en: The `name` field, which is rendered as an HTML `<h1>` heading.
  id: totrans-157
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 字段，它被渲染为 HTML `<h1>` 标题。'
- en: A `<h3>` subtitle heading containing the `member_id` field. This is only visible
    in read mode. The `<field>` tag uses `oe_inline` to let the HTML elements manage
    the text flow.
  id: totrans-158
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个包含 `member_id` 字段的 `<h3>` 副标题头。这仅在阅读模式下可见。`<field>` 标签使用 `oe_inline` 让 HTML
    元素管理文本流。
- en: Fields outside a `<group>` element don't have labels rendered for them. The
    preceding XML has no `<group>` element, so labels need to be explicitly added.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '`<group>` 元素之外的字段不会为其渲染标签。前面的 XML 没有包含 `<group>` 元素，因此需要显式添加标签。'
- en: After the title element, there will usually be header fields, organized into
    groups.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 标题元素之后，通常会有标题字段，组织成组。
- en: Organizing the form content using groups
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用组组织表单内容
- en: The main content of the form should be organized using `<group>` tags.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 表单的主要内容应该使用 `<group>` 标签组织。
- en: The `<group>` tag inserts two columns in the canvas. Fields that are added inside
    a group use these two columns – the first for the field label and the second for
    the field value widget. Adding more fields to the group will stack them vertically
    as new fields are added in a new row.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: '`<group>` 标签在画布中插入两列。添加到组内的字段使用这些两列——第一列用于字段标签，第二列用于字段值小部件。向组中添加更多字段将按垂直堆叠，新字段添加在新的一行中。'
- en: A common pattern is to have two columns of fields, side by side. You can do
    this by adding two `<group>` tags nested into a top group.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 一个常见的模式是拥有两列字段，并排排列。你可以通过在顶层组中添加两个嵌套的 `<group>` 标签来实现这一点。
- en: 'Continuing with our form view, we''ll use this to add the main content, after
    the title''s `<div>` section:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 继续我们的表单视图，我们将使用这个来添加主要内容，在标题的 `<div>` 部分之后：
- en: '[PRE13]'
  id: totrans-166
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The top `<group>` element creates two columns in the canvas. Each of the two
    nested `<group>` elements uses one of these columns. The first nested group uses
    the left column, while the second group takes the right column.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 顶部的 `<group>` 元素在画布中创建两列。每个嵌套的 `<group>` 元素使用这些列中的一列。第一个嵌套组使用左列，而第二个组使用右列。
- en: The `<group>` elements were assigned a `name`. This is not required but is recommended
    so that the module is easier to extend.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`<group>` 元素被分配了一个 `name`。这不是必需的，但建议这样做，以便模块更容易扩展。'
- en: The `<group>` element can also have a `string` attribute, which is used to display
    title text for it.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '`<group>` 元素也可以有一个 `string` 属性，它用于显示其标题文本。'
- en: Changes in Odoo 11
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 11 的变化
- en: The `string` attribute cannot be used as an anchor for inheritance anymore.
    This is because the corresponding text can be translated, and this can break inherited/extension
    views. The `name` attribute should be used instead.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`string` 属性不能再用作继承的锚点。这是因为相应的文本可以被翻译，这可能会破坏继承/扩展视图。应使用 `name` 属性代替。'
- en: 'The following elements can be used to adjust the view layout:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用以下元素来调整视图布局：
- en: The `<newline>` element can be used to force a new line so that the next element
    is rendered in the next row's first column.
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以使用`<newline>`元素来强制换行，以便下一个元素在下一行的第一列中渲染。
- en: The `<separator>` element can be added to add section titles. A title text can
    be set using the `string` attribute.
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以添加`<separator>`元素来添加部分标题。可以使用`string`属性设置标题文本。
- en: 'The `col` and `colspan` attributes provide additional control over the grid
    layout:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '`col`和`colspan`属性提供了对网格布局的额外控制：'
- en: The `col` attribute is used on `<group>` elements to customize the number of
    columns it contains. By default, a `<group>` element contains two columns, but
    that can be changed to any other number. Even numbers work better since, by default,
    each field that's added takes up two columns – one for the label and one for the
    value.
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`col`属性用于`<group>`元素上，以自定义它包含的列数。默认情况下，一个`<group>`元素包含两列，但可以更改为任何其他数字。偶数更合适，因为默认情况下，添加的每个字段都占用两列——一列用于标签，一列用于值。'
- en: The `colspan` attribute can be used on group-contained elements to set a specific
    number of columns they should take. By default, a field takes two columns.
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在组内元素上使用`colspan`属性来设置它们应该占据的特定列数。默认情况下，一个字段占用两列。
- en: 'The following code shows an alternative version of the top group element and
    uses `col="4"` to present the four fields in two columns:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码显示了顶部分组元素的另一种版本，并使用`col="4"`来在两列中展示四个字段：
- en: '[PRE14]'
  id: totrans-179
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Notice that the order of the fields is different because the fields are placed
    from left to right, and then from top to bottom. The `<span colspan="2">` element
    was used to occupy the two first columns of the second row so that the `close_date`
    field takes the last two columns.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 注意到字段的顺序不同，因为字段是从左到右，然后从上到下放置的。使用了`<span colspan="2">`元素来占据第二行的前两列，以便`close_date`字段占据最后两列。
- en: Some forms also feature a notebook section to organize the additional fields
    on different pages.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 一些表单还包含笔记本部分，用于在不同页面上组织额外的字段。
- en: Adding tabbed notebooks
  id: totrans-182
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加标签页笔记本
- en: The notebook element is another way to organize the form's content. It is a
    container with multiple tabbed pages. These can be used to keep less-used data
    out of sight until it's needed or to organize a large number of fields by topic.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 笔记本元素是组织表单内容的另一种方式。它是一个包含多个标签页的容器。这些可以用来将不常用的数据隐藏起来，直到需要时才显示，或者按主题组织大量字段。
- en: 'The checkout form will have a notebook element, and the first page will contain
    the list of borrowed books. For this, after the `<group name="group_top">` element,
    which we added in the previous section, include the following XML:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 结账表单将包含一个笔记本元素，第一页将包含借阅书籍的列表。为此，在上一节中添加的`<group name="group_top">`元素之后，包含以下XML：
- en: '[PRE15]'
  id: totrans-185
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: This notebook contains only one page. To add more, just include more `<page>`
    elements inside the `<notebook>` element. The page canvas does not render field
    labels by default. For that to happen, the fields should be placed inside a `<group>`
    section, just like for the form main canvas.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 这个笔记本只包含一个页面。要添加更多，只需在`<notebook>`元素内包含更多的`<page>`元素。默认情况下，页面画布不会渲染字段标签。为了实现这一点，字段应该放在一个`<group>`部分内，就像表单主画布一样。
- en: In this case, the one-to-many `line_ids` field was added inside the page, with
    no `<group>` element, so no label will be rendered for it.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，在页面内部添加了一个多对一`line_ids`字段，没有`<group>`元素，因此不会为其渲染标签。
- en: 'The `page` element supports the following attributes:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: '`page`元素支持以下属性：'
- en: '`string`, for the page title. This is required.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string`，用于页面标题。这是必需的。'
- en: '`attrs` is a dictionary for mapping the `invisible` and `required` attribute
    values to the result of a domain expression.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attrs`是一个字典，用于将`invisible`和`required`属性值映射到域表达式的结果。'
- en: '`accesskey`, an HTML access key.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`accesskey`，一个HTML访问键。'
- en: This section discussed the typical layout for a form view, as well as the most
    important elements to use for this. The most important elements are the data fields.
    The next section discusses them in detail.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 本节讨论了表单视图的典型布局，以及使用此视图时最重要的元素。最重要的元素是数据字段。下一节将详细讨论它们。
- en: Using fields
  id: totrans-193
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用字段
- en: Inside a form or list view, fields widgets are the way to present and edit data
    from model fields.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 在表单或列表视图中，字段小部件是展示和编辑模型字段数据的方式。
- en: View fields have a few attributes available to them. Most of these attribute
    values have defaults that are taken from the model definition, but these can be
    overridden in the view.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 视图字段有一些可用的属性。大多数这些属性值默认来自模型定义，但在视图中可以覆盖这些值。
- en: 'Here is a quick reference for the common field attributes:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是常见字段属性的快速参考：
- en: '`name` is the field name in the model and identifies the field that''s being
    rendered by this element.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是模型中的字段名称，并标识了由该元素渲染的字段。'
- en: '`string` is the label text to be used. It overrides the model definition.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 是要使用的标签文本。它覆盖了模型定义。'
- en: '`help` provides some tooltip help text that''s shown when the mouse is hovered
    over the field.'
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help` 提供了一些当鼠标悬停在字段上时显示的工具提示帮助文本。'
- en: '`placeholder` provides suggestion text to be displayed inside the field.'
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`placeholder` 提供了在字段内显示的建议文本。'
- en: '`widget` sets a specific widget to be used to render the field. The available
    widgets will be discussed later in this section.'
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`widget` 设置用于渲染字段的特定小部件。可用的小部件将在本节后面讨论。'
- en: '`options` is a JSON data structure that''s used to pass additional options
    to the widget. The values to use depend on the widget being used.'
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`options` 是一个 JSON 数据结构，用于向小部件传递额外的选项。要使用的值取决于所使用的小部件。'
- en: '`Class` is a comma-separated list of CSS classes to use for the field HTML
    rendering process.'
  id: totrans-203
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Class` 是用于字段 HTML 渲染过程的 CSS 类的逗号分隔列表。'
- en: '`nolabel="True"` prevents the automatic field label from being presented. It
    only makes sense for fields inside a `<group>` element and is often used along
    with a `<label for="...">` element.'
  id: totrans-204
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`nolabel="True"` 阻止自动字段标签的展示。这对于 `<group>` 元素内的字段是有意义的，并且经常与 `<label for="...">`
    元素一起使用。'
- en: '`invisible="True"` makes the field not visible, but its data is fetched from
    the server and is available on the form. Note that forms can''t write on invisible
    fields.'
  id: totrans-205
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`invisible="True"` 使得字段不可见，但它的数据是从服务器获取的，并在表单上可用。请注意，表单不能在不可见字段上写入。'
- en: '`readonly="True"` makes the field read-only on the form.'
  id: totrans-206
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`readonly="True"` 使得表单上的字段为只读。'
- en: '`required="True"` makes the field mandatory on the form.'
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`required="True"` 使得字段在表单上为必填项。'
- en: 'The following special attributes are only supported by specific field types:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 以下特殊属性仅由特定字段类型支持：
- en: '`password="True"` is used for text fields. It is displayed as a password field,
    masking the characters that are typed in.'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`password="True"` 用于文本字段。它显示为密码字段，会隐藏输入的字符。'
- en: '`filename` is used for binary fields and is the name of the model field to
    be used for the name of the uploaded file.'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filename` 用于二进制字段，是用于上传文件名称的模型字段名称。'
- en: Two more topics are worth further discussion. One is how to have additional
    control of the field label's presentation, while the other is about using different
    web client widgets for a better user experience.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个话题值得进一步讨论。一个是如何更好地控制字段标签的展示，另一个是关于使用不同的网页客户端小部件以获得更好的用户体验。
- en: Modifying field labels
  id: totrans-212
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 修改字段标签
- en: Fields won't automatically render labels unless they're inside a `<group>` element.
    In that case, labels will be explicitly suppressed using `nolabel="True"`.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 字段不会自动渲染标签，除非它们在 `<group>` 元素内。在这种情况下，标签将使用 `nolabel="True"` 显式抑制。
- en: 'Labels can be explicitly added using a `<label for="..."/>` element. This gives
    you more control over where to display field labels. The following code was used
    in the form title:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `<label for="..."/>` 元素显式添加标签。这使您能够更好地控制字段标签的显示位置。以下代码用于表单标题：
- en: '[PRE16]'
  id: totrans-215
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'The `for` attribute identifies the field we should get the label text from.
    The optional `string` attribute can set specific text for the label. CSS classes
    can also be used. The previous code used the following:'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`for` 属性标识了我们应该从其中获取标签文本的字段。可选的 `string` 属性可以设置标签的特定文本。也可以使用 CSS 类。之前的代码使用了以下内容：'
- en: '`class="oe_edit_only"` makes the element visible in edit mode only.'
  id: totrans-217
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`class="oe_edit_only"` 使得元素仅在编辑模式下可见。'
- en: '`class="oe_read_only"` makes the element visible in read mode only.'
  id: totrans-218
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`class="oe_read_only"` 使得元素仅在只读模式下可见。'
- en: This can be used to control how field labels are presented. How the field data
    is presented can also be adjusted using different widgets.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 这可以用来控制字段标签的展示方式。字段数据的展示也可以通过不同的小部件进行调整。
- en: Choosing field widgets
  id: totrans-220
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择字段小部件
- en: Field content is presented using a web client widget. This can influence the
    way data is presented to the user, as well as the interaction when setting a value
    on the field.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 字段内容是通过网页客户端小部件展示的。这可能会影响数据向用户展示的方式，以及设置字段值时的交互。
- en: Each field type is displayed using the appropriate default widget. However,
    additional alternative widgets may be available.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 每种字段类型都使用适当默认小部件显示。然而，可能还有其他可选小部件。
- en: Text field widgets
  id: totrans-223
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 文本字段小部件
- en: 'For text fields, the following widgets can be used:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文本字段，可以使用以下小部件：
- en: '`email` renders as an actionable `mailto` HTML link.'
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`email` 渲染为可操作的 `mailto` HTML 链接。'
- en: '`phone` renders as an actionable phone HTML link.'
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`phone` 渲染为可操作的电话 HTML 链接。'
- en: '`url` is used to format the text as a clickable URL.'
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`url` 用于将文本格式化为可点击的 URL。'
- en: '`html` is used to render the text as HTML content. In edit mode, it features
    a WYSIWYG editor to allow you to format the content without the need to use HTML
    syntax.'
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`html` 用于将文本渲染为 HTML 内容。在编辑模式下，它具有所见即所得的编辑器，允许您格式化内容而无需使用 HTML 语法。'
- en: Numeric field widgets
  id: totrans-229
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数值字段小部件
- en: 'For numeric fields, the following widgets are available:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数值字段，以下小部件可用：
- en: '`handle` is specifically designed for sequence fields in list views and displays
    a handle to drag lines and reorganize their order.'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`handle` 专门为列表视图中的序列字段设计，显示一个可拖动的手柄以重新组织行顺序。'
- en: '`float_time` formats a `float` field as hours and minutes.'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`float_time` 将 `float` 字段格式化为小时和分钟。'
- en: '`monetary` displays a `float` field as a currency amount. It expects the currency
    that''s used to be in a `currency_id` companion field. If the `currency` field
    has a different name, it can be set with `options="{''currency_field'': ''<field
    name>''}"`.'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`monetary` 将 `float` 字段显示为货币金额。它期望使用的货币在 `currency_id` 伴随字段中。如果 `currency`
    字段有不同的名称，可以通过 `options="{''currency_field'': ''<field name>''}"` 设置。'
- en: '`progressbar` represents a `float` as a percentage progress bar, which is useful
    for fields representing a completion rate.'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`progressbar` 将 `float` 表示为百分比进度条，这对于表示完成率的字段很有用。'
- en: '`percentage` and `percentpie` are other widgets that can be used with float
    fields.'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`percentage` 和 `percentpie` 是可以与浮点字段一起使用的其他小部件。'
- en: Relation and selection field widgets
  id: totrans-236
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关联和选择字段小部件
- en: 'For relation and selection fields, the following widgets are available:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 对于关联和选择字段，以下小部件可用：
- en: '`many2many_tags` displays values as a list of button-like labels.'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`many2many_tags` 将值显示为类似按钮的标签列表。'
- en: '`many2many_checkboxes` displays the selectable values as a list of checkboxes.'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`many2many_checkboxes` 将可选择的值显示为复选框列表。'
- en: '`selection` uses the `selection` field widget for a many-to-one field.'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`selection` 使用 `selection` 字段小部件处理多对一字段。'
- en: '`radio` displays the `selection` field options using radio buttons.'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`radio` 使用单选按钮显示 `selection` 字段选项。'
- en: '`priority` represents the `selection` field as a list of clickable stars. The
    selection options are usually numeric digits.'
  id: totrans-242
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`priority` 将 `selection` 字段表示为可点击的星级列表。选择选项通常是数字。'
- en: '`state_selection` shows a traffic light button and is typically used for the
    Kanban state selection list. The `normal` state is gray, `done` is green, and
    any other state is represented in red.'
  id: totrans-243
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`state_selection` 显示交通灯按钮，通常用于看板状态选择列表。`normal` 状态为灰色，`done` 为绿色，任何其他状态均以红色表示。'
- en: Changes in Odoo 11
  id: totrans-244
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 11 的变化
- en: The `state_selection` widget was introduced in Odoo 11 and replaces the former
    `kanban_state_selection`, which has been deprecated.
  id: totrans-245
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`state_selection` 小部件在 Odoo 11 中引入，并取代了之前的 `kanban_state_selection`，后者已被弃用。'
- en: Binary field widgets
  id: totrans-246
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 二进制字段小部件
- en: 'For binary fields, the following widgets are available:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: 对于二进制字段，以下小部件可用：
- en: '`image` presents the binary data as an image.'
  id: totrans-248
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image` 将二进制数据呈现为图像。'
- en: '`pdf_viewer` presents the binary data in a PDF preview widget (introduced in
    Odoo 12).'
  id: totrans-249
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pdf_viewer` 以 PDF 预览小部件的形式呈现二进制数据（自 Odoo 12 引入）。'
- en: Relation fields
  id: totrans-250
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关联字段
- en: The relation field widget allows you to search for and select a related record.
  id: totrans-251
  prefs: []
  type: TYPE_NORMAL
  zh: 关联字段小部件允许您搜索并选择相关记录。
- en: It also allows you to open the related record's form or navigate to the corresponding
    form and create new records on the fly, also known as **quick create**.
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 它还允许您打开相关记录的表单或导航到相应的表单，并即时创建新记录，也称为 **快速创建**。
- en: 'These features can be disabled using the `options` field attribute:'
  id: totrans-253
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `options` 字段属性禁用这些功能：
- en: '[PRE17]'
  id: totrans-254
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'The `context` and `domain` field attributes are particularly useful in relational
    fields:'
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: '`context` 和 `domain` 字段属性在关联字段中特别有用：'
- en: '`context` can set default values for related records that are created from
    the field.'
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context` 可以设置从字段创建的相关记录的默认值。'
- en: '`domain` limits the selectable records. A common example is for a field to
    have the selection options depend on the value of another field that''s present
    in the form.'
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain` 限制可选择的记录。一个常见示例是字段的选项取决于表中的另一个字段的值。'
- en: To-many fields can also use the `mode` attribute to set the view types to use
    to display the records. A `tree` view is used by default, but other options include
    `form`, `kanban`, and `graph`. It can be a comma-separated list of view modes.
  id: totrans-258
  prefs: []
  type: TYPE_NORMAL
  zh: 多对多字段也可以使用 `mode` 属性来设置用于显示记录的视图类型。默认使用 `tree` 视图，但其他选项包括 `form`、`kanban` 和
    `graph`。它可以是逗号分隔的视图模式列表。
- en: 'Relation fields can include inline specific view definitions to use. These
    are declared as nested view definitions, inside the `<field>` element. For example,
    the `line_ids` checkout can define a specific list and form views for these lines:'
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 关联字段可以包含内联特定视图定义以使用。这些定义在 `<field>` 元素内部作为嵌套视图定义。例如，`line_ids` 检查点可以定义特定列表和表单视图：
- en: '[PRE18]'
  id: totrans-260
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The line list will use the inline `<tree>` definition provided. When you click
    on a line, a form dialog will appear and use the structure in the inline `<form>`
    definition.
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 行列表将使用内联 `<tree>` 定义。当您点击一行时，将出现一个表单对话框并使用内联 `<form>` 定义的结构。
- en: We've seen everything that can be done with fields. The next most important
    view element is buttons, which are used to run actions.
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到了可以使用字段完成的所有事情。下一个最重要的视图元素是按钮，用于运行操作。
- en: Using buttons
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用按钮
- en: Buttons allow the user to trigger actions, such as opening another view or running
    business logic in a server function. They were introduced previously in this chapter,
    when we discussed the form header, but they can also be added anywhere in form
    and list views.
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮允许用户触发操作，例如打开另一个视图或在服务器函数中运行业务逻辑。它们在讨论表头时被引入，但也可以在表单和列表视图的任何位置添加。
- en: 'Buttons support the following attributes:'
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮支持以下属性：
- en: '`string` is the button text label, or the HTML `alt` text when an icon is used.'
  id: totrans-266
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 是按钮文本标签，或当使用图标时 HTML 的 `alt` 文本。'
- en: '`type` is the type of action to perform. Possible values include `object`,
    to call a Python method, or `action`, to run a window action.'
  id: totrans-267
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` 是要执行的操作类型。可能的值包括 `object`，用于调用 Python 方法，或 `action`，用于运行窗口操作。'
- en: '`name` identifies the specific action to perform, according to the chosen type:
    either a model method name or the database ID of a window action to run. The `%(<xmlid>)d`
    formula can be used to translate an XML ID into the necessary database ID when
    the view is being loaded.'
  id: totrans-268
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 根据所选类型标识要执行的具体操作：要么是模型方法名称，要么是要运行的窗口操作的数据库 ID。可以使用 `%(<xmlid>)d` 公式在视图加载时将
    XML ID 转换为必要的数据库 ID。'
- en: '`args` is used when `type="object"` is used to pass additional parameters to
    the method call.'
  id: totrans-269
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`args` 在 `type="object"` 时使用，用于将额外参数传递给方法调用。'
- en: '`context` sets the values on the context. This could be used in the called
    method or affect the view that''s opened by the windows action.'
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context` 设置上下文的值。这可以在调用的方法中使用或影响由窗口操作打开的视图。'
- en: '`confirm` is the text for a confirmation message box when the button is clicked.
    This is displayed before the action is run.'
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`confirm` 是当按钮被点击时确认消息框的文本。这将在执行操作之前显示。'
- en: '`special="cancel"` is used on wizard forms to add a **Cancel** button, which
    is used for closing the form without performing any action.'
  id: totrans-272
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`special="cancel"` 在向导表单中使用，用于添加 **取消** 按钮，用于关闭表单而不执行任何操作。'
- en: '`icon` is an icon image to be shown in the button. The available icons are
    from the Font Awesome set and they should be specified using the corresponding
    CSS class, such as `icon="fa-question"`. For an icon reference, check out [https://fontawesome.com/](https://fontawesome.com/).'
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon` 是要在按钮中显示的图标图像。可用的图标来自 Font Awesome 集合，应使用相应的 CSS 类指定，例如 `icon="fa-question"`。有关图标参考，请查看
    [https://fontawesome.com/](https://fontawesome.com/)。'
- en: Changes in Odoo 11
  id: totrans-274
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 11 的变化
- en: Before Odoo 11, the button icons were images that originated from the GTK client
    library and were limited to the ones available in `addons/web/static/src/img/icons`.
  id: totrans-275
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Odoo 11 之前，按钮图标是从 GTK 客户端库中起源的图像，并且限于 `addons/web/static/src/img/icons` 中可用的那些。
- en: The workflow engine was deprecated and removed in Odoo 11\. In previous versions,
    where workflows were supported, buttons could trigger workflow engine signals
    using `type="workflow"`. In this case, the `name` attribute was supposed to have
    a workflow signal name.
  id: totrans-276
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 工作流引擎在 Odoo 11 中已被弃用并移除。在之前支持工作流的版本中，按钮可以使用 `type="workflow"` 触发工作流引擎信号。在这种情况下，`name`
    属性应包含工作流信号名称。
- en: A particular kind of button that's found at the top right area of some forms
    is called a **smart button**. Let's have a closer look at it.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些表单的右上角区域找到的一种特定类型的按钮称为 **智能按钮**。让我们更仔细地看看它。
- en: Using smart buttons
  id: totrans-278
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用智能按钮
- en: It's not uncommon for document forms to have a smart button area in the top-right
    section. Smart buttons are shown as rectangles with a statistic indicator that
    can be followed through when clicked.
  id: totrans-279
  prefs: []
  type: TYPE_NORMAL
  zh: 文档表单在右上角区域有一个智能按钮区域是很常见的。智能按钮显示为带有统计指示器的矩形，点击时可以追踪。
- en: 'The Odoo UI pattern is to have an invisible box for smart buttons. This button
    box is usually the first element in `<sheet>` and looks like this:'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo UI 模式通常有一个用于智能按钮的不可见框。这个按钮框通常是 `<sheet>` 中的第一个元素，看起来像这样：
- en: '[PRE19]'
  id: totrans-281
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: The container for the buttons is just a `div` element with the `oe_button_box`
    class. In Odoo versions before 11.0, the `oe_right` class may also be needed to
    ensure that the button box stays aligned to the right-hand side of the form.
  id: totrans-282
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮的容器只是一个具有 `oe_button_box` 类的 `div` 元素。在 Odoo 11.0 之前的版本中，可能还需要 `oe_right`
    类来确保按钮框保持与表单右侧对齐。
- en: For the library checkout module, a smart button will be added for the still
    open checkouts that are being made by this library member. The button should present
    a statistic with the count of those checkouts and, when clicked, should open a
    checkout list that contains those items.
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 对于图书馆借阅模块，将为该图书馆成员正在进行的未完成借阅添加一个智能按钮。按钮应显示这些借阅的统计信息，并且点击时应该打开一个包含这些项目的借阅列表。
- en: 'For the button statistic, a computed field needs to be created in the `library.checkout`
    model, in the `library_checkout/models/library_checkout.py` file:'
  id: totrans-284
  prefs: []
  type: TYPE_NORMAL
  zh: 对于按钮统计，需要在 `library.checkout` 模型中创建一个计算字段，在 `library_checkout/models/library_checkout.py`
    文件中：
- en: '[PRE20]'
  id: totrans-285
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: The preceding computation loops through each checkout record to compute and
    runs a search query for that member, counting the number of open checkouts.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的计算会遍历每个借阅记录来计算并运行该成员的搜索查询，统计未完成借阅的数量。
- en: Tip
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'The preceding implementation goes against a performance principle: don''t do
    record search operations inside loops.'
  id: totrans-288
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的实现违反了一个性能原则：不要在循环中执行记录搜索操作。
- en: For performance optimization, the search operation should be done in bulk, before
    the loop, and the result should be used inside the loop. An example of this implementation
    is shown next. This involves non-trivial code, so feel free to skip it if you
    feel it is too difficult to understand right now.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 为了性能优化，应该在循环之前批量执行搜索操作，并将结果用于循环内部。下面是一个这种实现示例。这涉及到一些非平凡的代码，所以如果你觉得现在理解起来太难，可以自由跳过。
- en: 'The `read_group()` method can be used to get the grouped data. It returns a
    list of `dict` rows, such as `[{''member_id_count'': 1, ''member_id'': (1, ''John
    Doe''), …), …]`. It is hard to look up a `member_id` in this data structure. This
    lookup can become a trivial operation if the list of rows is converted into a
    dictionary that''s mapping a `member_id` to a record count.'
  id: totrans-290
  prefs: []
  type: TYPE_NORMAL
  zh: '`read_group()` 方法可以用来获取分组后的数据。它返回一个包含 `dict` 类型行的列表，例如 `[{''member_id_count'':
    1, ''member_id'': (1, ''John Doe''), …), …]`。在这个数据结构中查找 `member_id` 是比较困难的。如果将行列表转换成一个将
    `member_id` 映射到记录计数的字典，这个查找操作就可以变得非常简单。'
- en: 'Here is the alternative implementation, using these techniques:'
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用这些技术的替代实现：
- en: '[PRE21]'
  id: totrans-292
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: 'Now that there is a field computing the number to display, the smart button
    can be added to the view. Right at the top of the `<sheet>` section, replace the
    button box placeholder we added previously with the following code:'
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 现在有了计算显示数量的字段，智能按钮可以添加到视图中。在 `<sheet>` 部分的顶部，用以下代码替换我们之前添加的按钮框占位符：
- en: '[PRE22]'
  id: totrans-294
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The `button` element itself is a container, and fields for displaying statistics
    should be added inside it. These statistics are regular fields that use a specific
    `statinfo` widget. The number of open checkouts is presented using the `count_checkouts`
    field, inside the button definition.
  id: totrans-295
  prefs: []
  type: TYPE_NORMAL
  zh: '`button` 元素本身是一个容器，用于显示统计信息的字段应该添加到其中。这些统计信息是使用特定 `statinfo` 小部件的常规字段。未完成借阅的数量通过
    `count_checkouts` 字段在按钮定义中展示。'
- en: The smart button must have the `class="oe_stat_button"` CSS style and should
    have an icon set with the `icon` attribute.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 智能按钮必须具有 `class="oe_stat_button"` CSS 样式，并且应该使用 `icon` 属性设置图标集。
- en: In this case, it contains `type="action"`, meaning that a button runs a *window
    action*, as identified by the `name` attribute. The `%(action_library_checkout)d`
    expression returns the database ID for the action to run. This *window action*
    opens the checkout list. To ensure only the relevant records are displayed there,
    the `domain` attribute is used. And if a new record is created on that view, it
    is convenient that the current member is set as a default value. This can be done
    using the `default_member_id` key in the `context` attribute.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，它包含 `type="action"`，这意味着按钮运行一个 *窗口操作*，如 `name` 属性所标识。`%(action_library_checkout)d`
    表达式返回要运行的操作的数据库 ID。此 *窗口操作* 打开结账列表。为了确保只显示相关的记录，使用了 `domain` 属性。如果在那个视图中创建了一个新记录，将当前成员设置为默认值将非常方便。这可以通过在
    `context` 属性中使用 `default_member_id` 键来完成。
- en: 'For reference, these are the attributes that can be used with smart buttons:'
  id: totrans-298
  prefs: []
  type: TYPE_NORMAL
  zh: 作为参考，以下是可用于智能按钮的属性：
- en: '`class="oe_stat_button"` renders a rectangle instead of a regular button.'
  id: totrans-299
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`class="oe_stat_button"` 将渲染一个矩形而不是常规按钮。'
- en: '`icon` sets the icon to use, as chosen from the *Font Awesome* set. Visit [http://fontawesome.com](http://fontawesome.com)
    to browse the available icons.'
  id: totrans-300
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon` 设置要使用的图标，从 *Font Awesome* 集合中选择。访问 [http://fontawesome.com](http://fontawesome.com)
    浏览可用的图标。'
- en: '`type` and `name` are the button type and the name of the action to trigger,
    respectively. For smart buttons, the type will usually be `action` for a *window
    action*, while `name` will be the ID of the action to execute. `"%(action-xmlid)d"`
    can be used to convert an XML ID into the needed database ID.'
  id: totrans-301
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` 和 `name` 分别是按钮类型和要触发的操作的名称。对于智能按钮，类型通常为 `action` 用于 *窗口操作*，而 `name`
    将是执行操作的 ID。可以使用 `"%(action-xmlid)d"` 将 XML ID 转换为所需的数据库 ID。'
- en: '`string` adds label text to the button. It wasn''t used in the preceding code
    example because the field is providing a text label.'
  id: totrans-302
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 向按钮添加标签文本。在先前的代码示例中没有使用它，因为字段提供了文本标签。'
- en: '`context` can be used to set default values on the target view, for new records
    that are created on the view that''s being navigated from the button.'
  id: totrans-303
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context` 可以用于在目标视图中设置默认值，对于从按钮导航的视图中创建的新记录。'
- en: '`help` adds a help tooltip that''s displayed when the mouse pointer hovers
    over the button.'
  id: totrans-304
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`help` 添加了一个当鼠标指针悬停在按钮上时显示的帮助提示。'
- en: Other than buttons and smart buttons, dynamic elements can be added to views
    to change the values or visibility of elements. This will be discussed in the
    next section.
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 除了按钮和智能按钮之外，还可以将动态元素添加到视图中，以更改元素的值或可见性。这将在下一节中讨论。
- en: Adding dynamic view elements
  id: totrans-306
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加动态视图元素
- en: View elements can dynamically change their appearance or behavior, depending
    on the field values. Field values can be dynamically set values of domain filters
    on other form fields through the *onchange* mechanism. These features will be
    discussed next.
  id: totrans-307
  prefs: []
  type: TYPE_NORMAL
  zh: 视图元素可以根据字段值动态更改其外观或行为。字段值可以通过 *onchange* 机制动态设置为其他表单字段上的域筛选器的值。这些功能将在下一节中讨论。
- en: Using onchange events
  id: totrans-308
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 onchange 事件
- en: The **onchange** mechanism allows us to trigger server logic while the user
    is modifying data on an unsaved form. For example, when setting the product field,
    a unit price on the same form can be automatically set.
  id: totrans-309
  prefs: []
  type: TYPE_NORMAL
  zh: '**onchange** 机制允许我们在用户在未保存的表单上修改数据时触发服务器逻辑。例如，当设置产品字段时，同一表单上的单价可以自动设置。'
- en: In older Odoo versions, the onchange events were defined at the view level,
    but since Odoo 8, they are declared directly on the model layer, without the need
    for any specific view markup. This can be done with methods that use the `@api.onchange('field1',
    'field2', ...)` decorator. It binds onchange logic to the declared fields. The
    onchange model methods were discussed in more detail in [*Chapter 8*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227),
    *Business Logic – Supporting Business Processes*, and an example was discussed
    there.
  id: totrans-310
  prefs: []
  type: TYPE_NORMAL
  zh: 在较旧的 Odoo 版本中，onchange 事件在视图级别定义，但自 Odoo 8 以来，它们直接在模型层声明，无需任何特定的视图标记。这可以通过使用
    `@api.onchange('field1', 'field2', ...)` 装饰器的方法来完成。它将 onchange 逻辑绑定到声明的字段。在第 8
    章[*第 8 章*](B16119_08_Final_PD_ePub.xhtml#_idTextAnchor227)中详细讨论了 onchange 模型方法，*业务逻辑
    - 支持业务流程*，并在那里讨论了一个示例。
- en: The onchange mechanism also takes care of automatically recalculating the computed
    fields, reacting immediately to user input. Continuing with the previous example,
    if the price field is changed, a computed field with the total amount would also
    be automatically updated with the new price information.
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: onchange机制还会自动重新计算计算字段，立即响应用户输入。继续使用之前的例子，如果价格字段发生变化，包含总金额的计算字段也会自动使用新的价格信息进行更新。
- en: Using dynamic attributes
  id: totrans-312
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用动态属性
- en: View elements can have some attributes react to changes on field values; for
    example, to become visible or mandatory.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 视图元素可以有一些属性对字段值的变化做出反应；例如，变为可见或必填。
- en: 'The following attributes can be used to control the visibility of view elements:'
  id: totrans-314
  prefs: []
  type: TYPE_NORMAL
  zh: 以下属性可以用来控制视图元素的可见性：
- en: '`groups` make an element visible, depending on the security groups the current
    user belongs to. Only the members of the specified groups will see it. It expects
    a comma-separated list of group XML IDs.'
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups`根据当前用户所属的安全组使元素可见。只有指定组的成员才能看到它。它期望一个以逗号分隔的组XML ID列表。'
- en: '`states` make an element visible, depending on the record''s `state` field.
    It expects a comma-separated list of state values. Of course, the model must have
    a `state` selection field.'
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`states`根据记录的`state`字段使元素可见。它期望一个以逗号分隔的状态值列表。当然，模型必须有一个`state`选择字段。'
- en: '`attrs` can set both the invisible and required attributes based on certain
    conditions. It uses a dictionary, with `invisible`, `readonly`, and `required`
    as the possible keys. These keys map to a domain expression that evaluates to
    true or false.'
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`attrs`可以根据某些条件设置不可见和必填属性。它使用一个字典，其中`invisible`、`readonly`和`required`是可能的键。这些键映射到评估为真或假的域表达式。'
- en: 'Here is an example of using `attrs`. To have the `closed_date` field only visible
    in the `done` state, the following code can be used:'
  id: totrans-318
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是使用`attrs`的一个示例。为了使`closed_date`字段仅在`done`状态下可见，可以使用以下代码：
- en: '[PRE23]'
  id: totrans-319
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: The `invisible` attribute is available in any element, not only fields. For
    example, it can also be used on notebook pages and `group` elements.
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '`invisible`属性在任何元素中都可用，而不仅仅是字段。例如，它也可以用于笔记本页面和`group`元素。'
- en: The `readonly` and `required` attributes are only available for data fields
    and allow us to implement basic client-side logic, such as making a field mandatory
    while depending on other record values, such as the state.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: '`readonly`和`required`属性仅适用于数据字段，允许我们实现基本的客户端逻辑，例如，在依赖于其他记录值（如状态）的情况下使字段成为必填。'
- en: This closes our discussion of form views. However, there are still a few view
    types to explore. Next, we will discuss list/tree views.
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了我们对表单视图的讨论。然而，还有几种视图类型需要探索。接下来，我们将讨论列表/树视图。
- en: Exploring list views
  id: totrans-323
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索列表视图
- en: List views are probably the most used view type, closely followed by form views.
    List views present records as lines and data fields as columns. By default, they
    are read-only, but they can also be made editable.
  id: totrans-324
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图可能是最常用的视图类型，紧随其后的是表单视图。列表视图将记录呈现为行，数据字段呈现为列。默认情况下，它们是只读的，但也可以设置为可编辑。
- en: 'The list view''s basic definition is simple. It is a sequence of field elements
    inside a `<tree>` element. `library_checkout` already contains a simple list view,
    in the `views/checkout_view.xml` file, that looks like this:'
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图的基本定义很简单。它是一个包含在`<tree>`元素内的字段元素的序列。`library_checkout`已经在`views/checkout_view.xml`文件中包含了一个简单的列表视图，看起来是这样的：
- en: '[PRE24]'
  id: totrans-326
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: A list view can contain fields and buttons, and the attributes that are described
    for forms are also valid in list views.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图可以包含字段和按钮，为表单描述的属性在列表视图中同样有效。
- en: Moving on from the basics, a few additional features can be used on list views.
    In the next section, we will introduce the new list header section.
  id: totrans-328
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解基础知识之后，可以在列表视图中使用一些附加功能。在下一节中，我们将介绍新的列表标题部分。
- en: Adding a list view header section
  id: totrans-329
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加列表视图标题部分
- en: Similar to form views, list views can also have a header section, where buttons
    can be added to perform actions on the model. The syntax is the same as for views.
  id: totrans-330
  prefs: []
  type: TYPE_NORMAL
  zh: 与表单视图类似，列表视图也可以有标题部分，其中可以添加按钮以在模型上执行操作。语法与视图相同。
- en: For example, there is a **Send Messages** option available in the **Action**
    menu. This is not directly visible to the users, and it can be made more visible
    as a header button.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在**操作**菜单中有一个**发送消息**选项可用。这并不直接对用户可见，并且可以将其作为一个标题按钮使其更加可见。
- en: 'Editing the tree view to add this button looks like this:'
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 编辑树视图以添加此按钮看起来是这样的：
- en: '[PRE25]'
  id: totrans-333
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: The button actions work similarly to the **Action** menu options. The buttons
    are only visible when list records are selected.
  id: totrans-334
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮操作与**操作**菜单选项类似。按钮仅在选中列表记录时可见。
- en: New in Odoo 14
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: 新增于Odoo 14
- en: The `<header>` element on list views was introduced in Odoo 14\. This feature
    is not available in previous versions.
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图中的`<header>`元素是在Odoo 14中引入的。此功能在之前的版本中不可用。
- en: In terms of the list view's content, rows can use different colors to highlight
    specific conditions to the user, such as a late activity in red. The next section
    explains how to use such decorations.
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表视图的内容方面，行可以使用不同的颜色来突出显示特定的条件，例如用红色突出显示延迟的活动。下一节将解释如何使用此类装饰。
- en: Using line decoration
  id: totrans-338
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用行装饰
- en: 'The following expanded version of the list adds a few additional fields, as
    well as some decorator attributes, to the `<tree>` root element:'
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列表的扩展版本添加了一些额外的字段以及一些装饰属性到`<tree>`根元素：
- en: '[PRE26]'
  id: totrans-340
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: The tree element is using two decoration attributes by using expressions with
    the `state` field. `decoration-muted` uses gray lines to show the done or canceled
    state. `decoration-bf` highlights the open state with bold lines.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 树元素通过使用`state`字段的表达式来使用两个装饰属性。`decoration-muted`使用灰色线条来显示完成或取消状态。`decoration-bf`使用粗体线条突出显示打开状态。
- en: The fields that are used in these expressions must be declared in a `<field>`
    element of the view to ensure that the necessary data is retrieved from the server.
    If it doesn't need to be displayed, it can have the `invisible="1"` attribute
    set on it.
  id: totrans-342
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些表达式中使用的字段必须在视图的`<field>`元素中声明，以确保从服务器检索到必要的数据。如果不需要显示，可以设置其`invisible="1"`属性。
- en: 'The row''s text color and font can change based on the evaluation of a Python
    expression. This can be done through the `decoration–NAME` attributes, which can
    be set with an expression to evaluate. The available attributes are as follows:'
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 行的文本颜色和字体可以根据Python表达式的评估而改变。这可以通过设置用于评估的表达式的`decoration–NAME`属性来完成。可用的属性如下：
- en: '`decoration-bf` sets the font to bold.'
  id: totrans-344
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-bf`将字体设置为粗体。'
- en: '`decoration-it` sets the font to italic.'
  id: totrans-345
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-it`将字体设置为斜体。'
- en: '`decoration-muted` sets the text color to gray.'
  id: totrans-346
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-muted`将文本颜色设置为灰色。'
- en: '`decoration-primary` sets the text color to a dark blue.'
  id: totrans-347
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-primary`将文本颜色设置为深蓝色。'
- en: '`decoration-success` sets the text color to a light blue.'
  id: totrans-348
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-success`将文本颜色设置为浅蓝色。'
- en: '`decoration-warning` sets the text color to yellow.'
  id: totrans-349
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-warning`将文本颜色设置为黄色。'
- en: '`decoration-danger` sets the text color to red.'
  id: totrans-350
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`decoration-danger`将文本颜色设置为红色。'
- en: The preceding decoration names are based on the Bootstrap library. See [https://getbootstrap.com/docs/3.3/css/#helper-classes](https://getbootstrap.com/docs/3.3/css/#helper-classes)
    for more details.
  id: totrans-351
  prefs: []
  type: TYPE_NORMAL
  zh: 上述装饰名称基于Bootstrap库。有关更多详细信息，请参阅[https://getbootstrap.com/docs/3.3/css/#helper-classes](https://getbootstrap.com/docs/3.3/css/#helper-classes)。
- en: Other than the decoration attributes, a few others are available to control
    the behavior of the list view.
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 除了装饰属性之外，还有一些其他属性可用于控制列表视图的行为。
- en: Other list view attributes
  id: totrans-353
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他列表视图属性
- en: 'Some of the other relevant attributes of the tree element are as follows:'
  id: totrans-354
  prefs: []
  type: TYPE_NORMAL
  zh: 树元素的一些其他相关属性如下：
- en: '`default_order` is used to set a specific sort order for the rows. Its value
    is a comma-separated list of field names that''s compatible with a SQL `ORDER
    BY` clause.'
  id: totrans-355
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`default_order`用于设置行的特定排序顺序。其值是一个以逗号分隔的字段名列表，与SQL的`ORDER BY`子句兼容。'
- en: '`create`, `delete`, and `edit`, if set to `false` (in lowercase), disable the
    corresponding action on the list view.'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`create`、`delete`和`edit`，如果设置为`false`（小写），将禁用在列表视图上的相应操作。'
- en: '`editable` makes records editable directly on the list view. Possible values
    include `top` and `bottom`; that is, the location where the new records will be
    added.'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`editable`使记录可以直接在列表视图中编辑。可能的值包括`top`和`bottom`；即新记录将被添加的位置。'
- en: These attributes allow you to control the default row order and whether the
    record can be edited directly in the view.
  id: totrans-358
  prefs: []
  type: TYPE_NORMAL
  zh: 这些属性允许您控制默认行顺序以及记录是否可以直接在视图中编辑。
- en: One more relevant feature is the ability to calculate totals and subtotals for
    list view columns, as shown in the next section.
  id: totrans-359
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个相关功能是能够计算列表视图列的总计和子总计，如下一节所示。
- en: Adding column totals
  id: totrans-360
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加列总计
- en: List views also support column totals for numeric fields. Summary values can
    be displayed using one of the aggregation attributes that's available — `sum`,
    `avg`, `min`, or `max`.
  id: totrans-361
  prefs: []
  type: TYPE_NORMAL
  zh: 列表视图也支持数值字段的列总计。可以使用可用的聚合属性之一显示汇总值——`sum`、`avg`、`min`或`max`。
- en: The aggregation attribute that's used should be set with label text for the
    summary value.
  id: totrans-362
  prefs: []
  type: TYPE_NORMAL
  zh: 应该使用标签文本设置用于摘要值的聚合属性。
- en: 'For example, let''s consider that the checkout model has added a field stating
    the number of borrowed books, `num_books`. To see the corresponding total sum
    on the list view, the following field element should be added:'
  id: totrans-363
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，让我们考虑借出模型已添加一个表示借书数量的字段，`num_books`。为了在列表视图中查看相应的总金额，应添加以下字段元素：
- en: '[PRE27]'
  id: totrans-364
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'The `num_books` field counts the number of borrowed books in each checkout.
    It''s a computed field, and we need to add it to the model:'
  id: totrans-365
  prefs: []
  type: TYPE_NORMAL
  zh: '`num_books` 字段计算每个借出检查的借书数量。它是一个计算字段，我们需要将其添加到模型中：'
- en: '[PRE28]'
  id: totrans-366
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: The group subtotal is only available for stored fields. So, in the previous
    example, `store=True` needs to be added if group subtotals are an important feature
    for the library app users.
  id: totrans-367
  prefs: []
  type: TYPE_NORMAL
  zh: 累计小计仅适用于存储字段。因此，在之前的示例中，如果对图书馆应用程序用户来说累计小计是一个重要功能，则需要添加 `store=True`。
- en: After form and list views, the next most important UI element is the search
    view, which lets us perform a default search and group by a filter.
  id: totrans-368
  prefs: []
  type: TYPE_NORMAL
  zh: 在表单和列表视图之后，下一个最重要的 UI 元素是搜索视图，它允许我们执行默认搜索并根据筛选器进行分组。
- en: Exploring search views
  id: totrans-369
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索搜索视图
- en: At the top right of the view, there is a search box with a few buttons underneath
    it, including **Filters** and **Group By**. When you're typing in the search box,
    you will see suggestions regarding the field to be searched.
  id: totrans-370
  prefs: []
  type: TYPE_NORMAL
  zh: 在视图的右上角有一个搜索框，下面有一些按钮，包括 **筛选** 和 **分组**。当你输入搜索框时，你会看到有关要搜索的字段的建议。
- en: The search options that are proposed are configured in the **search view**.
    The current search view can be inspected using the developer menu and by choosing
    the **Edit ControlPanelView** option.
  id: totrans-371
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的搜索选项是在 **搜索视图** 中配置的。当前搜索视图可以通过开发者菜单并选择 **编辑 ControlPanelView** 选项来检查。
- en: 'Search views are defined through the `<search>` view type. It can provide the
    following types of elements:'
  id: totrans-372
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索视图是通过 `<search>` 视图类型定义的。它可以提供以下类型的元素：
- en: '`<field>` elements to add filter options when typing in the search box.'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<field>`元素用于在搜索框中输入时添加筛选选项。'
- en: '`<filter>` elements to add predefined filters under the **Filters** and **Group
    By** buttons.'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<filter>` 元素用于在 **筛选** 和 **分组** 按钮下添加预定义的筛选器。'
- en: A `<searchpanel>` element, to include a navigation tree on the left-hand side
    of the user interface.
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个 `<searchpanel>` 元素，用于在用户界面的左侧包含一个导航树。
- en: Changes in Odoo 13
  id: totrans-376
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 13 的变化
- en: The `<searchpanel>` widget for the list and Kanban views was introduced in Odoo
    13 and is not available in earlier versions.
  id: totrans-377
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 列表和看板视图的 `<searchpanel>` 小部件是在 Odoo 13 中引入的，在早期版本中不可用。
- en: 'To add these search options to the `library_checkout` module, edit the `views/checkout_view.xml`
    file and add the following record:'
  id: totrans-378
  prefs: []
  type: TYPE_NORMAL
  zh: 要将这些搜索选项添加到 `library_checkout` 模块，编辑 `views/checkout_view.xml` 文件并添加以下记录：
- en: '[PRE29]'
  id: totrans-379
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Now, let's walk through each of the element types that can be added here. The
    `<field>` element will be explained next.
  id: totrans-380
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们逐一介绍可以添加的元素类型。接下来将解释 `<field>` 元素。
- en: Understanding the <field> element
  id: totrans-381
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 `<field>` 元素
- en: When typing in the search box, the user will see suggestions that will let them
    apply this search to particular fields. These options are defined using `<field>`
    elements.
  id: totrans-382
  prefs: []
  type: TYPE_NORMAL
  zh: 当在搜索框中输入时，用户将看到建议，使他们可以将此搜索应用于特定字段。这些选项是通过 `<field>` 元素定义的。
- en: 'For example, adding the following XML inside the `<search>` element will propose
    searching the text in additional fields:'
  id: totrans-383
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在 `<search>` 元素内添加以下 XML 将会提出在附加字段中搜索文本：
- en: '[PRE30]'
  id: totrans-384
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: This code adds search result suggestions for the `title`, `member`, and `user`
    fields.
  id: totrans-385
  prefs: []
  type: TYPE_NORMAL
  zh: 此代码为 `title`、`member` 和 `user` 字段添加搜索结果建议。
- en: 'The search `<field>` elements can use the following attributes:'
  id: totrans-386
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索 `<field>` 元素可以使用以下属性：
- en: '`name` is the field name to be searched.'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是要搜索的字段名称。'
- en: '`string` is the text label to use.'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 是要使用的文本标签。'
- en: '`operator` can be used as a comparison operator that''s different from the
    default one; that is, `=` for numeric fields and `ilike` for the other field types.'
  id: totrans-389
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`operator` 可以用作与默认值不同的比较运算符；即，对于数值字段是 `=`，对于其他字段类型是 `ilike`。'
- en: '`filter_domain` sets a specific domain expression to use for the search, providing
    one flexible alternative to the operator attribute. The searched text string is
    referred to in the expression as `self`. A trivial example is `filter_domain="[(''name'',
    ''ilike'', self)]"`.'
  id: totrans-390
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`filter_domain` 设置用于搜索的特定域表达式，提供对运算符属性的灵活替代方案。搜索的文本字符串在表达式中称为 `self`。一个简单的例子是
    `filter_domain="[(''name'', ''ilike'', self)]"`。'
- en: '`groups` makes searching on the field available only to users that belong to
    some security groups. It expects a comma-separated list of XML IDs.'
  id: totrans-391
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups` 使在字段上的搜索仅对属于某些安全组的用户可用。它期望一个以逗号分隔的 XML IDs 列表。'
- en: These filters can be activated independently and will be joined by an `OR` logic
    operation. Blocks of filters separated with a `<separator/>` element will be joined
    by an `AND` logic operation.
  id: totrans-392
  prefs: []
  type: TYPE_NORMAL
  zh: 这些过滤器可以独立激活，并将通过 `OR` 逻辑运算符连接。用 `<separator/>` 元素分隔的过滤块将通过 `AND` 逻辑运算符连接。
- en: This section provided a good summary of how `<field>` elements can be used.
    Now, let's learn about the `<filter>` elements that are available.
  id: totrans-393
  prefs: []
  type: TYPE_NORMAL
  zh: 本节提供了关于如何使用 `<field>` 元素的良好总结。现在，让我们了解可用的 `<filter>` 元素。
- en: Understanding the <filter> element
  id: totrans-394
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 `<filter>` 元素
- en: Predefined options are available upon clicking the **Filter** and **Group By**
    buttons, under the search box. These can be clicked by users to apply their filter
    conditions.
  id: totrans-395
  prefs: []
  type: TYPE_NORMAL
  zh: 点击搜索框下的 **过滤** 和 **按组** 按钮，可以获取预定义选项。用户可以点击这些选项来应用他们的过滤条件。
- en: Tip
  id: totrans-396
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: 'Filter elements can also be used by window actions, which can activate them,
    by adding a `search_default_<filter name>: True` key to the context.'
  id: totrans-397
  prefs: []
  type: TYPE_NORMAL
  zh: '过滤元素也可以通过窗口动作使用，通过添加 `search_default_<filter name>: True` 键到上下文中来激活它们。'
- en: 'Filter options can be added with the `<filter>` element, along with a `domain`
    attribute setting for specific search conditions to use, through a domain filter.
    The following is an example:'
  id: totrans-398
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过 `<filter>` 元素添加过滤选项，并通过域过滤器设置特定搜索条件，通过域属性设置。以下是一个示例：
- en: '[PRE31]'
  id: totrans-399
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: This adds two selectable filters. They will be available for selection in the
    `open` state. The second one filters the checkout where the current user is the
    responsible librarian, filtering `user_id` by the current user. This is available
    from the context `uid` key.
  id: totrans-400
  prefs: []
  type: TYPE_NORMAL
  zh: 这添加了两个可选的过滤器。它们将在 `open` 状态下可供选择。第二个过滤器根据当前用户是负责的图书管理员来过滤借阅，通过当前用户过滤 `user_id`。这可以通过上下文
    `uid` 键获得。
- en: 'The filter element is also used to add options to the **Group By** button.
    Here is an example:'
  id: totrans-401
  prefs: []
  type: TYPE_NORMAL
  zh: 过滤元素还用于向 **按组** 按钮添加选项。以下是一个示例：
- en: '[PRE32]'
  id: totrans-402
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: This filter sets a `group by` context key with the field name to group by. In
    this case, it will group by  `member_id`.
  id: totrans-403
  prefs: []
  type: TYPE_NORMAL
  zh: 此过滤器设置一个以字段名称为键的 `group by` 上下文键，以进行分组。在这种情况下，它将按 `member_id` 进行分组。
- en: 'For the `<filter>` elements, the following attributes are available:'
  id: totrans-404
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 `<filter>` 元素，以下属性可用：
- en: '`name` is an identifier to be used for later inheritance/extension or to be
    enabled using a window action context key. It is not mandatory, but it is good
    practice to always provide it.'
  id: totrans-405
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 是一个标识符，用于后续的继承/扩展或使用窗口动作上下文键启用。这不是强制性的，但始终提供它是良好的实践。'
- en: '`string` is the label text to be displayed for the filter. It is mandatory.'
  id: totrans-406
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 是要显示的过滤器的标签文本。这是强制性的。'
- en: '`domain` is the domain expression to be added to the current domain.'
  id: totrans-407
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`domain` 是要添加到当前域的域表达式。'
- en: '`context` is a context dictionary to be added to the current context. It will
    usually be used to set the `group_by` key with the field name to group by.'
  id: totrans-408
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`context` 是要添加到当前上下文中的上下文字典。它通常用于设置 `group_by` 键，以指定要按字段名称分组的字段。'
- en: '`groups` makes this element field available only for a list of security groups
    (XML IDs).'
  id: totrans-409
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups` 使此元素字段仅对一组安全组（XML IDs）可用。'
- en: Upon adding the preceding code to the `library_checkout` module, the module
    will be upgraded. These filter and group by options will be available in the buttons
    near the search box.
  id: totrans-410
  prefs: []
  type: TYPE_NORMAL
  zh: 将前面的代码添加到 `library_checkout` 模块后，模块将被升级。这些过滤器和按组选项将在搜索框附近的按钮中可用。
- en: Another search view element that's available is the search panel. We'll look
    at this in the next section.
  id: totrans-411
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可用的搜索视图元素是搜索面板。我们将在下一节中查看它。
- en: Adding a search panel
  id: totrans-412
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加搜索面板
- en: Search views can also add a search panel, which will be visible on the left-hand
    side of the selected view. It lists the available values in a field. Clicking
    on a value filters the records by that value. By default, this search panel is
    only visible in the list and Kanban views, although this can be changed.
  id: totrans-413
  prefs: []
  type: TYPE_NORMAL
  zh: 搜索视图还可以添加搜索面板，它将在所选视图的左侧可见。它列出了一个字段中的可用值。点击一个值将按该值过滤记录。默认情况下，此搜索面板仅在列表和看板视图中可见，尽管这可以更改。
- en: 'The following code adds a search panel to the library checkout view. Add the
    following XML inside the `<search>` view element:'
  id: totrans-414
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码将搜索面板添加到图书馆借阅视图中。在 `<search>` 视图元素内添加以下 XML：
- en: '[PRE33]'
  id: totrans-415
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: The preceding code adds two fields to the search panel called members and stages.
    Each of them lists several available values, and clicking on these values applies
    the corresponding filter.
  id: totrans-416
  prefs: []
  type: TYPE_NORMAL
  zh: 上一段代码向搜索面板添加了两个字段，称为成员和阶段。每个字段都列出了几个可用值，点击这些值将应用相应的过滤器。
- en: The `<searchpanel>` element has one attribute available, `view_type`, that can
    set the view types where the panel is to be made visible. By default, its value
    is `view_type="tree,kanban"`.
  id: totrans-417
  prefs: []
  type: TYPE_NORMAL
  zh: '`<searchpanel>` 元素有一个可用的属性 `view_type`，可以设置面板可见的视图类型。默认值是 `view_type="tree,kanban"`。'
- en: 'The `<field>` elements inside `<searchpanel>` support a few attributes. Here
    is a selection of the most important ones:'
  id: totrans-418
  prefs: []
  type: TYPE_NORMAL
  zh: '`<searchpanel>` 内部的 `<field>` 元素支持一些属性。以下是其中最重要的选择：'
- en: '`string` sets specific label text to use.'
  id: totrans-419
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`string` 设置要使用的特定标签文本。'
- en: '`icon` sets an icon to be presented.'
  id: totrans-420
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`icon` 设置要呈现的图标。'
- en: '`color` sets the icon''s color. It uses an HTML hex code, such as `#8F3A84`.'
  id: totrans-421
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color` 设置图标的颜色。它使用 HTML 十六进制代码，例如 `#8F3A84`。'
- en: '`select="multi"` adds selection checkboxes, which allow the user to select
    multiple values. This is only available for many-to-one and many-to-many fields.'
  id: totrans-422
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`select="multi"` 添加选择复选框，允许用户选择多个值。这仅适用于多对一和多对多字段。'
- en: '`groups` sets a list XML IDs of the security groups that can see the search
    panel.'
  id: totrans-423
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`groups` 设置可以查看搜索面板的安全组列表 XML ID。'
- en: '`enable_counters="1"` adds a record number counter next to each value. Beware
    that this can have a performance impact on the view.'
  id: totrans-424
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`enable_counters="1"` 在每个值旁边添加记录编号计数器。请注意，这可能会对视图的性能产生影响。'
- en: '`limit` sets the number of selected values that are allowed. The default is
    200 and can be set to zero so that there''s no limit.'
  id: totrans-425
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`limit` 设置允许选择的值的数量。默认值为 200，可以设置为 0 以无限制。'
- en: Changes in Odoo 13
  id: totrans-426
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 13 的变化
- en: The search panel element was introduced in Odoo 13 and is not available in previous
    versions.
  id: totrans-427
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 搜索面板元素是在 Odoo 13 中引入的，在之前的版本中不可用。
- en: 'This is what the list view with the search panel looks like, after making these
    changes:'
  id: totrans-428
  prefs: []
  type: TYPE_NORMAL
  zh: 经过这些更改后，这是带有搜索面板的列表视图的样子：
- en: '![Figure 10.4 – List view with the search panel'
  id: totrans-429
  prefs: []
  type: TYPE_NORMAL
  zh: '![Figure 10.4 – 带有搜索面板的列表视图'
- en: '](img/Figure_10.4_B16119.jpg)'
  id: totrans-430
  prefs: []
  type: TYPE_NORMAL
  zh: '](img/Figure_10.4_B16119.jpg)'
- en: Figure 10.4 – List view with the search panel
  id: totrans-431
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.4 – 带有搜索面板的列表视图
- en: The form, list, and search views are the most frequently used view types. But
    there are a few more view types that are available for designing our user interfaces.
    We'll look at these in the next section.
  id: totrans-432
  prefs: []
  type: TYPE_NORMAL
  zh: 表单、列表和搜索视图是最常用的视图类型。但还有几种其他视图类型可用于设计我们的用户界面。我们将在下一节中查看这些内容。
- en: Understanding the other available view types
  id: totrans-433
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解其他可用的视图类型
- en: The form and list views are essential user interface components, but other than
    them, a few other specific view types can be used.
  id: totrans-434
  prefs: []
  type: TYPE_NORMAL
  zh: 表单视图和列表视图是基本用户界面组件，但除此之外，还可以使用一些其他特定的视图类型。
- en: 'We''re already familiar with the three basic views: `form`, `tree`, and `search`.
    Beyond these, the following view types are also available in Odoo Community Edition:'
  id: totrans-435
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经熟悉了三个基本视图：`form`、`tree` 和 `search`。在这些之外，Odoo 社区版还提供了以下视图类型：
- en: '`kanban` presents records as cards that can be organized in columns to create
    Kanban boards.'
  id: totrans-436
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`kanban` 以卡片的形式呈现记录，这些卡片可以组织在列中创建看板。'
- en: '`activity` presents a summary of scheduled activities.'
  id: totrans-437
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`activity` 呈现计划活动的摘要。'
- en: '`calendar` present records in a calendar format.'
  id: totrans-438
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`calendar` 以日历格式呈现记录。'
- en: '`graph` presents data as a graphical chart.'
  id: totrans-439
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`graph` 以图表的形式呈现数据。'
- en: '`pivot` presents data as an interactive pivot table.'
  id: totrans-440
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`pivot` 以交互式数据透视表的形式呈现数据。'
- en: '`qweb` is used to declare QWeb templates to be used in reports, Kanban views,
    or web pages. However, this is not a web client-supported view type like forms
    and lists are.'
  id: totrans-441
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`qweb` 用于声明在报告、看板视图或网页中使用的 QWeb 模板。然而，这并不是像表单和列表那样的受网络客户端支持的视图类型。'
- en: Kanban views will be presented in depth in [*Chapter 11*](B16119_11_Final_PD_ePub.xhtml#_idTextAnchor324),
    *Kanban Views and Client-Side QWeb*, so they won't be addressed here.
  id: totrans-442
  prefs: []
  type: TYPE_NORMAL
  zh: 看板视图将在[*第 11 章*](B16119_11_Final_PD_ePub.xhtml#_idTextAnchor324)中详细介绍，*看板视图和客户端
    QWeb*，因此这里不会涉及。
- en: Changes in Odoo 14
  id: totrans-443
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 14 的变化
- en: The `diagram` view type, which could be used to present relationships between
    records, was removed in Odoo 14\. The last piece of documentation that's available
    for this, for Odoo 13, can be found at [https://www.odoo.com/documentation/13.0/developer/reference/addons/views.html#diagram](https://www.odoo.com/documentation/13.0/developer/reference/addons/views.html#diagram).
  id: totrans-444
  prefs: []
  type: TYPE_NORMAL
  zh: '`diagram` 视图类型，可用于展示记录之间的关系，在 Odoo 14 中已被移除。关于此的最后一部分文档，针对 Odoo 13，可以在 [https://www.odoo.com/documentation/13.0/developer/reference/addons/views.html#diagram](https://www.odoo.com/documentation/13.0/developer/reference/addons/views.html#diagram)
    找到。'
- en: 'Odoo Enterprise Edition supports a few more views types:'
  id: totrans-445
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo 企业版支持更多视图类型：
- en: '`dashboard`, which presents aggregate data using subviews, such as pivots and
    graphs.'
  id: totrans-446
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dashboard` 通过子视图（如交叉表和图表）展示汇总数据。'
- en: '`cohort`, which is used to show how data changes over a certain period.'
  id: totrans-447
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cohort` 用于显示数据在一定时期内的变化。'
- en: '`map`, which presents records in a map and can display routes between them.'
  id: totrans-448
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`map` 以地图形式展示记录，并可以显示它们之间的路线。'
- en: '`Gantt`, which presents date scheduling information in a Gantt chart. This
    is commonly used in project management.'
  id: totrans-449
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Gantt` 以甘特图的形式展示日期调度信息。这在项目管理中常用。'
- en: '`grid`, which presents data organized in a grid with rows and columns.'
  id: totrans-450
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`grid` 以行和列的形式展示组织好的数据。'
- en: 'The official documentation provides good references to all of the views and
    their available attributes: https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#view-types.'
  id: totrans-451
  prefs: []
  type: TYPE_NORMAL
  zh: 官方文档提供了所有视图及其可用属性的良参考：https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#view-types。
- en: Tip
  id: totrans-452
  prefs: []
  type: TYPE_NORMAL
  zh: 提示
- en: Additional view types can be found as community add-on modules. Under the Odoo
    Community Association umbrella, web client extensions, including view types and
    widgets, can be found in the [https://github.com/OCA/web](https://github.com/OCA/web)
    GitHub repository. For example, the `web_timeline` add-on module provides a `timeline`
    view type, which is also capable of presenting scheduling information as Gantt
    charts. It is a Community Edition alternative to the `gantt` view type.
  id: totrans-453
  prefs: []
  type: TYPE_NORMAL
  zh: 其他视图类型可以在社区扩展模块中找到。在 Odoo 社区协会的旗下，包括视图类型和小部件在内的网络客户端扩展可以在 [https://github.com/OCA/web](https://github.com/OCA/web)
    GitHub 仓库中找到。例如，`web_timeline` 扩展模块提供了一个 `timeline` 视图类型，它也能够以甘特图的形式展示调度信息。这是社区版对
    `gantt` 视图类型的替代。
- en: The following sections provide a brief explanation of the additional view types
    that are available in Odoo Community Edition.
  id: totrans-454
  prefs: []
  type: TYPE_NORMAL
  zh: 以下部分提供了 Odoo 社区版中可用的附加视图类型的简要说明。
- en: Exploring the activity view
  id: totrans-455
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索活动视图
- en: The activity view provides a summary of the scheduled activities. It is provided
    by the `mail` add-on module, so it needs to be installed for this view type to
    be available.
  id: totrans-456
  prefs: []
  type: TYPE_NORMAL
  zh: 活动视图提供了预定活动的摘要。它由 `mail` 扩展模块提供，因此需要安装此视图类型才能可用。
- en: 'It can be enabled by adding the `activity` view type to the `view_mode` field
    of the window action. From the `action_library_checkout` window action:'
  id: totrans-457
  prefs: []
  type: TYPE_NORMAL
  zh: 可以通过将 `activity` 视图类型添加到窗口操作的 `view_mode` 字段中启用它。从 `action_library_checkout`
    窗口操作：
- en: '[PRE34]'
  id: totrans-458
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: If no view definition exists, one will be automatically generated.
  id: totrans-459
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有视图定义存在，将自动生成一个。
- en: 'This is a simple definition that''s equivalent to the default generated one:'
  id: totrans-460
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的定义，等同于默认生成的定义：
- en: '[PRE35]'
  id: totrans-461
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: The HTML in the `<templates>` element is used to describe the record information.
  id: totrans-462
  prefs: []
  type: TYPE_NORMAL
  zh: '`<templates>` 元素中的 HTML 用于描述记录信息。'
- en: Exploring the calendar view
  id: totrans-463
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索日历视图
- en: 'This view type presents the records in a calendar that can be viewed using
    different periods: per year, month, week, or day.'
  id: totrans-464
  prefs: []
  type: TYPE_NORMAL
  zh: 此视图类型以日历形式展示记录，可以使用不同的时间段进行查看：按年、月、周或日。
- en: 'This is a calendar view for the library checkouts that shows the items on a
    calendar according to their request date:'
  id: totrans-465
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个图书馆借阅的日历视图，根据请求日期在日历上显示项目：
- en: '[PRE36]'
  id: totrans-466
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: 'The following attributes are supported by the calendar view:'
  id: totrans-467
  prefs: []
  type: TYPE_NORMAL
  zh: 以下属性由日历视图支持：
- en: '`date_start` is the field for the start date (required).'
  id: totrans-468
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_start` 是开始日期的字段（必需）。'
- en: '`date_stop` is the field for the end date (optional).'
  id: totrans-469
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_stop` 是结束日期的字段（可选）。'
- en: '`date_delay` in the field containing the duration in days. It is to be used
    instead of `date_end`.'
  id: totrans-470
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`date_delay` 在包含天数的字段中。它将替代 `date_end` 使用。'
- en: '`all_day` provides the name of a Boolean field that is to be used to signal
    full-day events. In these events, the duration is ignored.'
  id: totrans-471
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`all_day` 提供了一个布尔字段的名称，用于表示全天事件。在这些事件中，持续时间被忽略。'
- en: '`color` is the field that''s used to color a group of calendar entries. Each
    distinct value in this field will be assigned a color, and all of its entries
    will have the same color.'
  id: totrans-472
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`color` 是用于为日历条目分组着色的字段。在此字段中的每个不同值都将分配一个颜色，并且所有条目都将具有相同的颜色。'
- en: '`mode` is the default display mode for the calendar. It can be either `day`,
    `week`, `month`, or `year`.'
  id: totrans-473
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mode` 是日历的默认显示模式。它可以是 `day`、`week`、`month` 或 `year`。'
- en: '`scales` is a comma-separated list of modes available. By default, they all
    are.'
  id: totrans-474
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`scales` 是可用模式的逗号分隔列表。默认情况下，它们都是可用的。'
- en: '`form_view_id` can provide the identifier for a specific form view to use when
    you''re opening records from the calendar view.'
  id: totrans-475
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`form_view_id` 可以提供在从日历视图打开记录时要使用的特定表单视图的标识符。'
- en: '`event_open_popup="True"` opens the form view as a dialog window.'
  id: totrans-476
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`event_open_popup="True"` 将表单视图作为对话框窗口打开。'
- en: '`quick_add` lets you quickly create a new record. Only a description needs
    to be given by the user.'
  id: totrans-477
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quick_add` 允许您快速创建新记录。用户只需提供描述即可。'
- en: Changes in Odoo 11
  id: totrans-478
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Odoo 11 的变化
- en: The `display` calendar attribute was removed in Odoo 11\. In previous versions,
    it could be used to customize the format of the calendar entry's title text; for
    example, `display="[name], Stage [stage_id]"`.
  id: totrans-479
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在 Odoo 11 中已移除 `display` 日历属性。在之前的版本中，它可以用来自定义日历条目标题文本的格式；例如，`display="[name],
    Stage [stage_id]"`。
- en: 'For this view to be available in the `view_mode` area of the corresponding
    window with the `action_library_checkout` identifier:'
  id: totrans-480
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此视图在具有 `action_library_checkout` 标识符的相应窗口的 `view_mode` 区域中可用：
- en: '[PRE37]'
  id: totrans-481
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: After making this module upgrade and reloading the page, the calendar view should
    be available.
  id: totrans-482
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行此模块升级并重新加载页面后，日历视图应该可用。
- en: Exploring the pivot view
  id: totrans-483
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索交叉视图
- en: The data can also be seen in a pivot table; that is, a dynamic analysis matrix.
    For this, we have the pivot view.
  id: totrans-484
  prefs: []
  type: TYPE_NORMAL
  zh: 数据也可以在交叉表中看到；即，一个动态分析矩阵。为此，我们有了交叉视图。
- en: 'The `num_books` field will be used in the pivot view to add the checkouts model.
    Data aggregations are only available for database stored fields; this is not the
    case for the `num_books` field. So, it needs to be modified to add the `store=True`
    attribute:'
  id: totrans-485
  prefs: []
  type: TYPE_NORMAL
  zh: '`num_books` 字段将在交叉视图中用于添加借阅模型。数据聚合仅适用于数据库存储的字段；对于 `num_books` 字段则不是这样。因此，需要修改以添加
    `store=True` 属性：'
- en: '[PRE38]'
  id: totrans-486
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: 'To also add a pivot table to the library checkouts, use the following code:'
  id: totrans-487
  prefs: []
  type: TYPE_NORMAL
  zh: 要将交叉表添加到图书馆借阅中，请使用以下代码：
- en: '[PRE39]'
  id: totrans-488
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: 'The graph and pivot views should contain field elements that describe the axes
    and measures to use. Most of the available attributes are common to both view
    types:'
  id: totrans-489
  prefs: []
  type: TYPE_NORMAL
  zh: 图表和交叉视图应包含描述要使用的轴和度量的字段元素。大多数可用的属性对两种视图类型都是通用的：
- en: '`name` identifies the field to use in the graph, just like in other views.'
  id: totrans-490
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name` 用于标识在图表中使用的字段，就像在其他视图中一样。'
- en: '`type` is how the field will be used; that is, as a `row` group (default),  `measure`,
    or `col` (only for pivot tables; it is used for column groups).'
  id: totrans-491
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type` 是字段将如何被使用；即，作为一个 `row` 分组（默认），`measure` 或 `col`（仅适用于交叉表；它用于列分组）。'
- en: '`interval` is meaningful for date fields and is the time interval that''s used
    to group time data by `day`, `week`, `month`, `quarter`, or `year`.'
  id: totrans-492
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`interval` 对于日期字段是有意义的，并且是用于按 `day`、`week`、`month`、`quarter` 或 `year` 分组时间数据的间隔。'
- en: Other than these essential attributes, more are available and are documented
    at [https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#pivot](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#pivot).
  id: totrans-493
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些基本属性之外，还有更多属性可用，并在 [https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#pivot](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#pivot)
    中进行了文档说明。
- en: 'For this view to be available in the `view_mode` area of the `action_library_checkout`
    window action:'
  id: totrans-494
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此视图在 `action_library_checkout` 窗口操作的 `view_mode` 区域中可用：
- en: '[PRE40]'
  id: totrans-495
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: After making this module upgrade and reloading the page, the calendar view should
    be available.
  id: totrans-496
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行此模块升级并重新加载页面后，日历视图应该可用。
- en: Exploring the graph view
  id: totrans-497
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索图表视图
- en: Graph views present charts with data aggregations. The available charts include
    bar, line, and pie charts.
  id: totrans-498
  prefs: []
  type: TYPE_NORMAL
  zh: 图表视图展示了具有数据聚合的图表。可用的图表包括柱状图、折线图和饼图。
- en: 'Here is an example of a graph view for the checkout model:'
  id: totrans-499
  prefs: []
  type: TYPE_NORMAL
  zh: 这是借阅模型的图表视图示例：
- en: '[PRE41]'
  id: totrans-500
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: The `graph` view element can have a `type` attribute that can be set to `bar`
    (the default), `pie`, or `line`. In the case of `bar`, the additional `stacked="True"`
    element can be used to make it a stacked bar chart.
  id: totrans-501
  prefs: []
  type: TYPE_NORMAL
  zh: '`graph` 视图元素可以有一个 `type` 属性，可以设置为 `bar`（默认），`pie` 或 `line`。在 `bar` 的情况下，可以使用额外的
    `stacked="True"` 元素使其成为堆叠柱状图。'
- en: 'The graph uses two types of fields:'
  id: totrans-502
  prefs: []
  type: TYPE_NORMAL
  zh: 图表使用两种类型的字段：
- en: '`type="row"` is the default and sets the criteria to aggregate values.'
  id: totrans-503
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type="row"`是默认设置，用于设置聚合值的条件。'
- en: '`type="measure"` is used for the fields that are to be used as metrics – that
    is, the actual values being aggregated.'
  id: totrans-504
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`type="measure"`用于用作度量标准的字段——即实际聚合的值。'
- en: 'Most of the available graph view attributes are common to the pivot view type.
    The official documentation provides a good reference: [https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#reference-views-graph](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#reference-views-graph).'
  id: totrans-505
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数可用的图表视图属性与透视表视图类型相同。官方文档提供了良好的参考：[https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#reference-views-graph](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html#reference-views-graph)。
- en: 'For this view to be available in the `view_mode` area of the `action_library_checkout`
    window action:'
  id: totrans-506
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此视图在`action_library_checkout`窗口操作的`view_mode`区域中可用：
- en: '[PRE42]'
  id: totrans-507
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: After making this module upgrade and reloading the page, the calendar view should
    be available.
  id: totrans-508
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行此模块升级并重新加载页面后，应可使用日历视图。
- en: Summary
  id: totrans-509
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Well-designed views are key for a good user experience. Applications need to
    support the business logic, but an easy-to-use user interface is also important
    to help users navigate efficiently through the business processes and minimize
    errors.
  id: totrans-510
  prefs: []
  type: TYPE_NORMAL
  zh: 设计良好的视图对于良好的用户体验至关重要。应用程序需要支持业务逻辑，但易于使用的用户界面也同样重要，以帮助用户高效地导航业务流程并最小化错误。
- en: The Odoo web client provides a rich set of tools to build such user interfaces.
    This includes a menu system, several view types, and different field widgets to
    choose from.
  id: totrans-511
  prefs: []
  type: TYPE_NORMAL
  zh: Odoo Web客户端提供了一套丰富的工具来构建此类用户界面。这包括菜单系统、几种视图类型以及可供选择的不同的字段小部件。
- en: Adding menu items is the first step, and these use window actions to let the
    web client know what views should be presented.
  id: totrans-512
  prefs: []
  type: TYPE_NORMAL
  zh: 添加菜单项是第一步，这些使用窗口操作让Web客户端知道应该展示哪些视图。
- en: Most of the user interaction will happen on form views, and it is important
    to understand all the elements that can be used there. We started by presenting
    the general structure that form views are expected to follow, as well as the elements
    to be added to each.
  id: totrans-513
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数用户交互将在表单视图中发生，了解那里可以使用的所有元素非常重要。我们首先介绍了表单视图预期遵循的一般结构，以及要添加到每个视图中的元素。
- en: This includes the header section, the title fields, the other form fields, a
    possible notebook section with pages, and a final messaging area.
  id: totrans-514
  prefs: []
  type: TYPE_NORMAL
  zh: 这包括标题部分、标题字段、其他表单字段、可能的笔记本部分及其页面，以及最后的消息区域。
- en: Record data is presented and modified using field elements. Details were presented
    on how to use them and the several options that can be used to adjust their presentation.
    Another important element is buttons, which allow us to navigate to other views
    or run server functions.
  id: totrans-515
  prefs: []
  type: TYPE_NORMAL
  zh: 记录数据通过字段元素进行展示和修改。详细介绍了如何使用它们以及可以用来调整其展示的几个选项。
- en: The next view type we discussed was the list view. While simpler than the form
    view, it is an important record navigation tool. The search view was also discussed
    and is useful for adding predefined filter and grouping options to the search
    box area. This is important for users to quickly access the data that's needed
    for their regular operations.
  id: totrans-516
  prefs: []
  type: TYPE_NORMAL
  zh: 我们讨论的下一个视图类型是列表视图。虽然比表单视图简单，但它是一个重要的记录导航工具。搜索视图也被讨论，并可用于向搜索框区域添加预定义的过滤和分组选项。这对于用户快速访问他们日常操作所需的数据非常重要。
- en: Finally, an overview was provided of the other view types available, such as
    the pivot, graph, and calendar views. There are used less often, but they still
    have an important role in specific cases.
  id: totrans-517
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，概述了其他可用的视图类型，如透视表、图表和日历视图。虽然使用频率较低，但它们在特定情况下仍然发挥着重要作用。
- en: 'In the next chapter, we''ll learn more about a specific view type that we''ve
    not covered in this chapter: the Kanban view and the templating syntax that''s
    used by it, QWeb.'
  id: totrans-518
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习本章未涉及的具体视图类型：看板视图及其使用的模板语法QWeb。
- en: Further reading
  id: totrans-519
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The following reference materials complement the topics that were described
    in this chapter:'
  id: totrans-520
  prefs: []
  type: TYPE_NORMAL
  zh: 以下参考材料补充了本章中描述的主题：
- en: 'The official Odoo documentation:'
  id: totrans-521
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方Odoo文档：
- en: 'On actions: [https://www.odoo.com/documentation/15.0/developer/reference/backend/actions.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/actions.html%20)'
  id: totrans-522
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于动作：[https://www.odoo.com/documentation/15.0/developer/reference/backend/actions.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/actions.html)
- en: 'On views: [https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html)'
  id: totrans-523
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于视图：[https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html](https://www.odoo.com/documentation/15.0/developer/reference/backend/views.html)
- en: 'The Font Awesome icon index: [https://fontawesome.com/v4.7.0/icons/](https://fontawesome.com/v4.7.0/icons/)'
  id: totrans-524
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Font Awesome图标索引：[https://fontawesome.com/v4.7.0/icons/](https://fontawesome.com/v4.7.0/icons/)
