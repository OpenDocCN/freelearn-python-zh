["```py\n    man amixer\n\n    ```", "```py\n    amixer --help\n\n    ```", "```py\nsudo shutdown –h now\n\n```", "```py\nsudo halt\n\n```", "```py\nsudo reboot\n\n```", "```py\n    unzip filename.zip\n\n    ```", "```py\n    sudo dd if=filename.img of=/dev/sdX bs=4M\n\n    ```", "```py\n    umount /dev/sdX1\n\n    ```", "```py\n    unzip filename.zip\n\n    ```", "```py\n    sudo dd if=filename.img of=/dev/diskX bs=1M\n\n    ```", "```py\n    unmountdisk /dev/diskX\n\n    ```", "```py\ncd /boot/\n\n```", "```py\n        mkdir ~/recovery\n        sudo mount –t vfat /dev/mmcblk0p1 ~/recovery\n\n        ```", "```py\n    sudo nano /etc/rc.local\n    sudo mount -t vfat /dev/mmcblk0p1 /home/pi/recovery\n\n    ```", "```py\n    sudo dd if=/dev/sdX of=image.img.gz bs=1M\n\n    ```", "```py\n    sudo dd if=/dev/diskX of=image.img.gz bs=1M\n\n    ```", "```py\n    sudo dd if=/dev/sdX bs=1M | gzip –c | split –d –b 2000m – image.img.gz\n\n    ```", "```py\n    sudo cat image.img.gz* | gzip –dc | dd of=/dev/sdX bs=1M\n\n    ```", "```py\n    sudo ping 192.168.1.254 -c 4\n\n    ```", "```py\n    sudo ping www.raspberrypi.org -c 4\n\n    ```", "```py\nsudo ping www.raspberrypi.com\n\n```", "```py\nipconfig /all\n\n```", "```py\nifconfig\n\n```", "```py\nless /etc/resolv.conf\n\n```", "```py\nsudo nano /etc/network/interfaces\n\n```", "```py\n    iface eth0 inet static\n     address 192.168.1.10\n     netmask 255.255.255.0\n     gateway 192.168.1.254\n\n    ```", "```py\n    sudo nano /etc/resolv.conf\n\n    ```", "```py\n    nameserver 8.8.8.8\n    nameserver 8.8.4.4\n\n    ```", "```py\nip=client-ip:nfsserver-ip:gw-ip:netmask:hostname:device:autoconf\n\n```", "```py\n    ping raspberrypi\n\n    ```", "```py\n    sudo ping 192.168.137.1 -c 4\n\n    ```", "```py\n    sudo ping www.raspberrypi.org -c 4\n\n    ```", "```py\n    hostname -I\n\n    ```", "```py\n    sudo iwlist scan | grep SSID\n\n    ```", "```py\nsudo apt-get install firmware_file.deb\n\n```", "```py\nsudo apt-cache search wireless firmware\n\n```", "```py\natmel-firmware - Firmware for Atmel at76c50x wireless networking chips.\nfirmware-atheros - Binary firmware for Atheros wireless cards\nfirmware-brcm80211 - Binary firmware for Broadcom 802.11 wireless cards\nfirmware-ipw2x00 - Binary firmware for Intel Pro Wireless 2100, 2200 and 2915\nfirmware-iwlwifi - Binary firmware for Intel PRO/Wireless 3945 and 802.11n cards\nfirmware-libertas - Binary firmware for Marvell Libertas 8xxx wireless cards\nfirmware-ralink - Binary firmware for Ralink wireless cards\nfirmware-realtek - Binary firmware for Realtek wired and wireless network adapters\nlibertas-firmware - Firmware for Marvell's libertas wireless chip series (dummy package)\nzd1211-firmware - Firmware images for the zd1211rw wireless driver\n\n```", "```py\ndmesg | grep 'Product:\\|Manufacturer:'\n\n```", "```py\n[    1.893367] usb usb1: Product: DWC OTG Controller\n[    1.900217] usb usb1: Manufacturer: Linux 3.6.11+ dwc_otg_hcd\n[    3.348259] usb 1-1.2: Product: ZyXEL G-202\n[    3.355062] usb 1-1.2: Manufacturer: ZyDAS\n\n```", "```py\nsudo apt-get install zd1211-firmware\n\n```", "```py\nwlan0     IEEE 802.11bg  ESSID:off/any\n Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm\n Retry  long limit:7   RTS thr:off   Fragment thr:off\n Power Management:off\n\n```", "```py\n    sudo nano -c /etc/network/interfaces \n\n    ```", "```py\n    allow-hotplug wlan0\n    iface wlan0 inet manual\n    wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\n\n    ```", "```py\n    sudo nano -c /etc/wpa_supplicant/wpa_supplicant.conf\n\n    ```", "```py\n    ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev\n    update_config=1\n    country=GB\n    ```", "```py\n        network={\n          ssid=\"theSSID\"\n          key_mgmt=NONE\n        }\n        ```", "```py\n        network={\n          ssid=\"theSSID\"\n          key_mgmt=NONE\n          wep_key0=\"theWEPkey\"\n        }\n        ```", "```py\n        network={\n          ssid=\"theSSID\"\n          key_mgmt=WPA-PSK\n          psk=\"theWPAkey\"\t\n        }\n        ```", "```py\n    sudo ifup wlan0\n\n    ```", "```py\n    iwconfig\n\n    ```", "```py\n    wlan0     IEEE 802.11bg  ESSID:\"theSSID\"\n     Mode:Managed  Frequency:2.442 GHz  Access Point: 00:24:BB:FF:FF:FF\n     Bit Rate=48 Mb/s   Tx-Power=20 dBm\n     Retry  long limit:7   RTS thr:off   Fragment thr:off\n     Power Management:off\n     Link Quality=32/100  Signal level=32/100\n     Rx invalid nwid:0  Rx invalid crypt:0  Rx invalid frag:0\n     Tx excessive retries:0  Invalid misc:15   Missed beacon:0\n\n    ```", "```py\n    sudo ping www.raspberrypi.org\n\n    ```", "```py\nsudo apt-get install firmware_file.deb\n\n```", "```py\nping proxy.address.com -c 4\n\n```", "```py\nsudo nano -c ~/.bash_profile\n\n```", "```py\nfunction proxyenable {\n# Define proxy settings\nPROXY_ADDR=\"proxy.address.com:port\"\n# Login name (leave blank if not required):\nLOGIN_USER=\"login_name\"\n# Login Password (leave blank to prompt):\nLOGIN_PWD=\n#If login specified - check for password\nif [[ -z $LOGIN_USER ]]; then\n  #No login for proxy\n  PROXY_FULL=$PROXY_ADDR\nelse\n  #Login needed for proxy Prompt for password -s option hides input\n  if [[ -z $LOGIN_PWD ]]; then\n    read -s -p \"Provide proxy password (then Enter):\" LOGIN_PWD\n    echo\n  fi\n  PROXY_FULL=$LOGIN_USER:$LOGIN_PWD@$PROXY_ADDR\nfi\n#Web Proxy Enable: http_proxy or HTTP_PROXY environment variables\nexport http_proxy=\"http://$PROXY_FULL/\"\nexport HTTP_PROXY=$http_proxy\nexport https_proxy=\"https://$PROXY_FULL/\"\nexport HTTPS_PROXY=$https_proxy\nexport ftp_proxy=\"ftp://$PROXY_FULL/\"\nexport FTP_PROXY=$ftp_proxy\n#Set proxy for apt-get\nsudo cat <<EOF | sudo tee /etc/apt/apt.conf.d/80proxy > /dev/null\nAcquire::http::proxy \"http://$PROXY_FULL/\";\nAcquire::ftp::proxy \"ftp://$PROXY_FULL/\";\nAcquire::https::proxy \"https://$PROXY_FULL/\";\nEOF\n#Remove info no longer needed from environment\nunset LOGIN_USER LOGIN_PWD PROXY_ADDR PROXY_FULL\necho Proxy Enabled\n}\n\nfunction proxydisable {\n#Disable proxy values, apt-get and git settings\nunset http_proxy HTTP_PROXY https_proxy HTTPS_PROXY\nunset ftp_proxy FTP_PROXY\nsudo rm /etc/apt/apt.conf.d/80proxy\necho Proxy Disabled\n}\n```", "```py\n    sudo visudo -f /etc/sudoers.d/proxy\n\n    ```", "```py\n    Defaults env_keep += \"http_proxy HTTP_PROXY https_proxy HTTPS_PROXY ftp_proxy FTP_PROXY\"\n\n    ```", "```py\n    proxyenable\n    proxydisable\n\n    ```", "```py\nsudo apt-get update\nsudo apt-get install tightvncserver\n\n```", "```py\nvncserver :1\n\n```", "```py\nNew 'X' desktop is raspberrypi:1\n\n```", "```py\nvncserver :1 –geometry 1280x780 –depth 24\n\n```", "```py\nsudo nano -c ~/.bash_profile\n\n```", "```py\nvncserver :1\n\n```", "```py\nssh -X pi@192.168.1.69\n\n```", "```py\n    sudo nano /etc/ssh/sshd_config\n\n    ```", "```py\n    X11Forwarding yes\n\n    ```", "```py\n    sudo reboot\n\n    ```", "```py\nleafpad &\n\n```", "```py\n_tkinter.TclError: couldn't connect to display \"localhost:10.0\"\n\n```", "```py\nsudo cp ~/.Xauthority ~root/\n\n```", "```py\nsudo apt-get update\nsudo apt-get install samba\n\n```", "```py\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf.backup\nsudo nano /etc/samba/smb.conf\n\n```", "```py\nsudo pdbedit -a -u pi\n\n```", "```py\nsudo /etc/init.d/samba restart\n[ ok ] Stopping Samba daemons: nmbd smbd.\n[ ok ] Starting Samba daemons: nmbd smbd.\n\n```", "```py\nhostname\n\n```", "```py\nhostname –I\n\n```", "```py\nLinux raspberrypi 4.4.9-v7+ #884 SMP Fri May 6 17:28:59 BST 2016 armv7l GNU/Linux\n\n```", "```py\n May  6 2016 13:53:23\nCopyright (c) 2012 Broadcom\nversion 0cc642d53eab041e67c8c373d989fef5847448f8 (clean) (release) \nThis is important if you are using an older version of firmware (pre-November 2012) on a newer board since the original Model B board was only 254 MB RAM. Upgrading allows the firmware to make use of the extra memory if available.\n```", "```py\n total       used       free     shared    buffers     cached\nMem:          925M       224M       701M       7.1M        14M       123M\n-/+ buffers/cache:        86M       839M\nSwap:          99M         0B        99M\n\n```", "```py\nsudo apt-get update\n\n```", "```py\nsudo apt-get upgrade\n\n```", "```py\nsudo apt-get dist-upgrade\n\n```"]