["```py\nREST_FRAMEWORK = { \n    'DEFAULT_FILTER_BACKENDS': ( \n        'django_filters.rest_framework.DjangoFilterBackend', \n        'rest_framework.filters.SearchFilter', \n        'rest_framework.filters.OrderingFilter'),\n```", "```py\nINSTALLED_APPS = [ \n    # Django Filters \n    'django_filters', \n```", "```py\nfrom rest_framework import filters \nfrom django_filters import AllValuesFilter, DateTimeFilter, NumberFilter \nfrom django_filters.rest_framework import FilterSet \n```", "```py\n    python manage.py runserver\n    python manage.py runserver 0.0.0.0:8000\n\n```", "```py\n    http \":8000/esrb-ratings/?description=T+(Teen)\"\n```", "```py\n    curl -iX GET \"localhost:8000/esrb-ratings/?description=T+(Teen)\"\n```", "```py\n    {\n        \"count\": 1,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            {\n                \"description\": \"T (Teen)\",\n                \"games\": [\n                    \"http://localhost:8000/games/4/\",\n                    \"http://localhost:8000/games/3/\",\n                    \"http://localhost:8000/games/6/\",\n                    \"http://localhost:8000/games/12/\",\n                    \"http://localhost:8000/games/7/\",\n                    \"http://localhost:8000/games/13/\",\n                    \"http://localhost:8000/games/9/\",\n                    \"http://localhost:8000/games/11/\",\n                    \"http://localhost:8000/games/5/\",\n                    \"http://localhost:8000/games/8/\",\n                    \"http://localhost:8000/games/10/\"\n                ],\n                \"id\": 2,\n                \"url\": \"http://localhost:8000/esrb-ratings/2/\"\n            }\n        ]\n    }\n\n```", "```py\nhttp \":8000/games/?esrb_rating=1&played_times=10&ordering=-release_date\"\n\n```", "```py\ncurl -iX GET \n\"localhost:8000/games/?esrb_rating=1&played_times=10&ordering=-release_date\"\n\n```", "```py\n    {\n        \"count\": 1,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            {\n                \"esrb_rating\": \"AO (Adults Only)\",\n                \"name\": \"Mutant Football League: Dynasty Edition\",\n                \"owner\": \"your_games_super_user\",\n                \"played_once\": true,\n                \"played_times\": 10,\n                \"release_date\": \"2018-10-20T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/games/2/\"\n            }\n        ]\n    }\n\n```", "```py\nhttp \":8000/player-\nscores/?player_name=Enzo+Scocco&game_name=Battlefield+V\"\n\n```", "```py\ncurl -iX GET \"localhost:8000/player-\nscores/?player_name=Enzo+Scocco&game_name=Battlefield+V\"\n\n```", "```py\n    {\n        \"count\": 1,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            {\n                \"game\": \"Battlefield V\",\n                \"id\": 3,\n                \"player\": \"Enzo Scocco\",\n                \"score\": 43200,\n                \"score_date\": \"2019-01-01T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/player-scores/3/\"\n            }\n        ]\n    }\n\n```", "```py\nhttp \":8000/player-scores/?from_score_date=2019-01-01&to_score_date=2019-01-\n31&min_score=17000&max_score=45000&ordering=-score\"\n\n```", "```py\ncurl -iX GET \"localhost:8000/player-scores/?from_score_date=2019-01-01&to_score_date=2019-01-\n31&min_score=17000&max_score=45000&ordering=-score\"\n\n```", "```py\n    {\n        \"count\": 3,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            {\n                \"game\": \"Battlefield V\",\n                \"id\": 3,\n                \"player\": \"Enzo Scocco\",\n                \"score\": 43200,\n                \"score_date\": \"2019-01-01T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/player-scores/3/\"\n            },\n            {\n                \"game\": \"Battlefield V\",\n                \"id\": 1,\n                \"player\": \"Gaston Hillar\",\n                \"score\": 17500,\n                \"score_date\": \"2019-01-01T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/player-scores/1/\"\n            },\n            {\n                \"game\": \"Mutant Football League: Dynasty Edition\",\n                \"id\": 4,\n                \"player\": \"Enzo Scocco\",\n                \"score\": 17420,\n                \"score_date\": \"2019-01-01T05:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/player-scores/4/\"\n            }\n        ]\n    }\n\n```", "```py\n    http \":8000/games/?search=H\"\n```", "```py\n    curl -iX GET \"localhost:8000/games/?search=H\"\n```", "```py\n    {\n        \"count\": 2,\n        \"next\": null,\n        \"previous\": null,\n        \"results\": [\n            {\n                \"esrb_rating\": \"T (Teen)\",\n                \"name\": \"Heavy Fire: Red Shadow\",\n                \"owner\": \"your_games_super_user\",\n                \"played_once\": false,\n                \"played_times\": 0,\n                \"release_date\": \"2018-06-21T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/games/3/\"\n            },\n            {\n                \"esrb_rating\": \"T (Teen)\",\n                \"name\": \"Honor and Duty: D-Day\",\n                \"owner\": \"your_games_super_user\",\n                \"played_once\": false,\n                \"played_times\": 0,\n                \"release_date\": \"2018-06-21T03:02:00.776594Z\",\n                \"url\": \"http://localhost:8000/games/6/\"\n            }\n        ]\n    }\n\n```", "```py\ndef create_player(client, name, gender): \n    url = reverse('player-list') \n    player_data = {'name': name, 'gender': gender} \n    player_response = client.post(url, player_data, format='json') \n    return player_response \n\n@pytest.mark.django_db \ndef test_create_and_retrieve_player(client): \n    \"\"\" \n    Ensure we can create a new Player and then retrieve it \n    \"\"\" \n    new_player_name = 'Will.i.am' \n    new_player_gender = Player.MALE \n    response = create_player(client, new_player_name, new_player_gender) \n    assert response.status_code == status.HTTP_201_CREATED \n    assert Player.objects.count() == 1 \n    assert Player.objects.get().name == new_player_name \n```", "```py\n@pytest.mark.django_db \ndef test_create_duplicated_player(client): \n    \"\"\" \n    Ensure we can create a new Player and we cannot create a duplicate \n    \"\"\" \n    url = reverse('player-list') \n    new_player_name = 'Fergie' \n    new_player_gender = Player.FEMALE \n    post_response1 = create_player(client, new_player_name, new_player_gender) \n    assert post_response1.status_code == status.HTTP_201_CREATED \n    post_response2 = create_player(client, new_player_name, new_player_gender) \n    assert post_response2.status_code == status.HTTP_400_BAD_REQUEST \n\n@pytest.mark.django_db \ndef test_retrieve_players_list(client): \n    \"\"\" \n    Ensure we can retrieve a player \n    \"\"\" \n    new_player_name = 'Vanessa Perry' \n    new_player_gender = Player.FEMALE \n    create_player(client, new_player_name, new_player_gender) \n    url = reverse('player-list') \n    get_response = client.get(url, format='json') \n    assert get_response.status_code == status.HTTP_200_OK \n    assert get_response.data['count'] == 1 \n    assert get_response.data['results'][0]['name'] == new_player_name \n    assert get_response.data['results'][0]['gender'] == new_player_gender\n```", "```py\n    pytest -v\n```", "```py\n    ============================== test session starts \n    ==============================\n    platform darwin -- Python 3.6.6, pytest-3.9.3, py-1.7.0, pluggy-\n    0.8.0 -- /Users/gaston/HillarPythonREST2/Django01/bin/python3\n    cachedir: .pytest_cache\n    Django settings: games_service.settings (from ini file)\n    rootdir: /Users/gaston/HillarPythonREST2/Django01/games_service, \n    inifile: pytest.ini\n    plugins: django-3.4.3, cov-2.6.0\n    collected 8 items \n\n    games/tests.py::test_create_and_retrieve_esrb_rating PASSED               \n    [ 12%]\n    games/tests.py::test_create_duplicated_esrb_rating PASSED                 \n    [ 25%]\n    games/tests.py::test_retrieve_esrb_ratings_list PASSED                    \n    [ 37%]\n    games/tests.py::test_update_game_category PASSED                          \n    [ 50%]\n    games/tests.py::test_filter_esrb_rating_by_description PASSED             \n    [ 62%]\n    games/tests.py::test_create_and_retrieve_player PASSED                    \n    [ 75%]\n    games/tests.py::test_create_duplicated_player PASSED                      \n    [ 87%]\n    games/tests.py::test_retrieve_players_list PASSED                         \n    [100%]\n\n    =========================== 8 passed in 1.48 seconds \n    ============================\n\n```", "```py\n    python manage.py runserver\n    python manage.py runserver 0.0.0.0:8000\n```", "```py\n[pytest] \nDJANGO_SETTINGS_MODULE = games_service.settings \npython_files = tests.py test_*.py *_tests.py \n```", "```py\nimport pytest \nfrom django.urls import reverse \nfrom django.utils.http import urlencode \nfrom rest_framework import status \nfrom games import views \nfrom games.models import EsrbRating \n\ndef create_esrb_rating(client, description): \n url = reverse(views.EsrbRatingList.name) ...\n```", "```py\n    pytest -v\n```", "```py\n    ============================== test session starts \n    ==============================\n    platform darwin -- Python 3.6.6, pytest-3.9.3, py-1.7.0, pluggy-\n    0.8.0 -- /Users/gaston/HillarPythonREST2/Django01/bin/python3\n    cachedir: .pytest_cache\n    Django settings: games_service.settings (from ini file)\n    rootdir: /Users/gaston/HillarPythonREST2/Django01/games_service, \n    inifile: pytest.ini\n    plugins: django-3.4.3, cov-2.6.0\n    collected 5 items \n\n    games/tests.py::test_create_and_retrieve_esrb_rating PASSED               \n    [ 20%]\n    games/tests.py::test_create_duplicated_esrb_rating PASSED                 \n    [ 40%]\n    games/tests.py::test_retrieve_esrb_ratings_list PASSED                    \n    [ 60%]\n    games/tests.py::test_update_game_category PASSED                          \n    [ 80%]\n    games/tests.py::test_filter_esrb_rating_by_description PASSED             \n    [100%]\n\n    =========================== 5 passed in 1.68 seconds \n    ============================\n\n```"]