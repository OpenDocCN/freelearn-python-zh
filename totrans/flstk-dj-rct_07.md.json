["```py\n    yarn add axios axios-auth-refresh\n    ```", "```py\nimport axios from \"axios\";\nimport createAuthRefreshInterceptor from \"axios-auth-refresh\";\nconst axiosService = axios.create({\n baseURL: \"http://localhost:8000\",\n headers: {\n   \"Content-Type\": \"application/json\",\n },\n});\n```", "```py\n    axiosService.interceptors.request.use(async (config) => {\n    ```", "```py\n     /**\n    ```", "```py\n      * Retrieving the access token from the localStorage\n    ```", "```py\n        and adding it to the headers of the request\n    ```", "```py\n      */\n    ```", "```py\n     const { access } =\n    ```", "```py\n       JSON.parse(localStorage.getItem(\"auth\"));\n    ```", "```py\n     config.headers.Authorization = `Bearer ${access}`;\n    ```", "```py\n     return config;\n    ```", "```py\n    });\n    ```", "```py\nvar fruit = {\n name: 'Banana',\n scientificName: 'Musa'\n};\nvar name     = fruit.name;\nvar scientificName = fruit.scientificName;\n```", "```py\nvar fruit = {\n name: 'Banana',\n scientificName: 'Musa'\n};\nvar  { name, scientificName } = fruit;\n```", "```py\n    axiosService.interceptors.response.use(\n    ```", "```py\n     (res) => Promise.resolve(res),\n    ```", "```py\n     (err) => Promise.reject(err),\n    ```", "```py\n    );\n    ```", "```py\n    const refreshAuthLogic = async (failedRequest) => {\n    ```", "```py\n     const { refresh } =\n    ```", "```py\n       JSON.parse(localStorage.getItem(\"auth\"));\n    ```", "```py\n     return axios\n    ```", "```py\n       .post(\"/refresh/token/\", null, {\n    ```", "```py\n         baseURL: \"http://localhost:8000\",\n    ```", "```py\n         headers: {\n    ```", "```py\n           Authorization: `Bearer ${refresh}`,\n    ```", "```py\n         },\n    ```", "```py\n       })\n    ```", "```py\n       .then((resp) => {\n    ```", "```py\n         const { access, refresh } = resp.data;\n    ```", "```py\n         failedRequest.response.config.headers[\n    ```", "```py\n           \"Authorization\"] = \"Bearer \" + access;\n    ```", "```py\n         localStorage.setItem(\"auth\", JSON.stringify({\n    ```", "```py\n                               access, refresh }));\n    ```", "```py\n       })\n    ```", "```py\n       .catch(() => {\n    ```", "```py\n         localStorage.removeItem(\"auth\");\n    ```", "```py\n       });\n    ```", "```py\n    };\n    ```", "```py\n    createAuthRefreshInterceptor(axiosService, refreshAuthLogic);\n    ```", "```py\n    export function fetcher(url) {\n    ```", "```py\n     return axiosService.get(url).then((res) => res.data);\n    ```", "```py\n    }\n    ```", "```py\n    export default axiosService;\n    ```", "```py\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\n...\n```", "```py\n    ...\n    ```", "```py\n    function ProtectedRoute({ children }) {\n    ```", "```py\n     const { user } =\n    ```", "```py\n       JSON.parse(localStorage.getItem(\"auth\"));\n    ```", "```py\n     return auth.account ? <>{children}</> : <Navigate\n    ```", "```py\n       to=\"/login/\" />;\n    ```", "```py\n    }\n    ```", "```py\n    export default ProtectedRoute;\n    ```", "```py\n    ...\n    ```", "```py\nimport React from \"react\";\nimport {\n Route,\n Routes\n} from \"react-router-dom\";\nimport ProtectedRoute from \"./routes/ProtectedRoute\";\nimport Home from \"./pages/Home\";\nfunction App() {\n return (\n   <Routes>\n     <Route path=\"/\" element={\n       <ProtectedRoute>\n         <Home />\n       </ProtectedRoute>\n     } />\n     <Route path=\"/login/\" element={<div>Login</div>} />\n   </Routes>\n );\n}\nexport default App;\n```", "```py\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n...\n```", "```py\n...\nfunction RegistrationForm() {\n const navigate = useNavigate();\n const [validated, setValidated] = useState(false);\n const [form, setForm] = useState({});\n const [error, setError] = useState(null);\n...\n```", "```py\n...\nconst handleSubmit = (event) => {\n   event.preventDefault();\n   const registrationForm = event.currentTarget;\n   if (registrationForm.checkValidity() === false) {\n     event.stopPropagation();\n   }\n   setValidated(true);\n   const data = {\n     username: form.username,\n     password: form.password,\n     email: form.email,\n     first_name: form.first_name,\n     last_name: form.last_name,\n     bio: form.bio,\n   };\n ...\n```", "```py\n   axios\n     .post(\"http://localhost:8000/api/auth/register/\",\n            data)\n     .then((res) => {\n       // Registering the account and tokens in the\n       // store\n       localStorage.setItem(\"auth\", JSON.stringify({\n         access: res.data.access,\n         refresh: res.data.refresh,\n         user: res.data.user,\n       }));\n       navigate(\"/\");\n     })\n     .catch((err) => {\n       if (err.message) {\n         setError(err.request.response);\n       }\n     });\n };\n```", "```py\n...\nreturn (\n   <Form\n     id=\"registration-form\"\n     className=\"border p-4 rounded\"\n     noValidate\n     validated={validated}\n     onSubmit={handleSubmit}\n   >\n     <Form.Group className=\"mb-3\">\n       <Form.Label>First Name</Form.Label>\n       <Form.Control\n         value={form.first_name}\n         onChange={(e) => setForm({ ...form,\n           first_name: e.target.value })}\n         required\n         type=\"text\"\n         placeholder=\"Enter first name\"\n       />\n       <Form.Control.Feedback type=\"invalid\">\n         This file is required.\n       </Form.Control.Feedback>\n     </Form.Group>\n...\n```", "```py\n...\n     <Form.Group className=\"mb-3\">\n       <Form.Label>Last name</Form.Label>\n       <Form.Control\n         value={form.last_name}\n         onChange={(e) => setForm({ ...form,\n           last_name: e.target.value })}\n         required\n         type=\"text\"\n         placeholder=\"Enter last name\"\n       />\n       <Form.Control.Feedback type=\"invalid\">\n         This file is required.\n       </Form.Control.Feedback>\n     </Form.Group>\n     <Form.Group className=\"mb-3\">\n       <Form.Label>Username</Form.Label>\n       <Form.Control\n         value={form.username}\n         onChange={(e) => setForm({ ...form, username:\n           e.target.value })}\n         required\n         type=\"text\"\n         placeholder=\"Enter username\"\n       />\n       <Form.Control.Feedback type=\"invalid\">\n         This file is required.\n       </Form.Control.Feedback>\n     </Form.Group>\n...\n```", "```py\n...\n     <Form.Group className=\"mb-3\">\n       <Form.Label>Email address</Form.Label>\n       <Form.Control\n         value={form.email}\n         onChange={(e) => setForm({ ...form, email:\n           e.target.value })}\n         required\n         type=\"email\"\n         placeholder=\"Enter email\"\n       />\n       <Form.Control.Feedback type=\"invalid\">\n         Please provide a valid email.\n       </Form.Control.Feedback>\n     </Form.Group>\n...\n```", "```py\n    ...\n    ```", "```py\n         <Form.Group className=\"mb-3\">\n    ```", "```py\n           <Form.Label>Password</Form.Label>\n    ```", "```py\n           <Form.Control\n    ```", "```py\n             value={form.password}\n    ```", "```py\n             minLength=\"8\"\n    ```", "```py\n             onChange={(e) => setForm({ ...form, password:\n    ```", "```py\n               e.target.value })}\n    ```", "```py\n             required\n    ```", "```py\n             type=\"password\"\n    ```", "```py\n             placeholder=\"Password\"\n    ```", "```py\n           />\n    ```", "```py\n           <Form.Control.Feedback type=\"invalid\">\n    ```", "```py\n             Please provide a valid password.\n    ```", "```py\n           </Form.Control.Feedback>\n    ```", "```py\n         </Form.Group>\n    ```", "```py\n    ...\n    ```", "```py\n...\n     <Form.Group className=\"mb-3\">\n       <Form.Label>Bio</Form.Label>\n       <Form.Control\n         value={form.bio}\n         onChange={(e) => setForm({ ...form, bio:\n           e.target.value })}\n         as=\"textarea\"\n         rows={3}\n         placeholder=\"A simple bio ... (Optional)\"\n       />\n     </Form.Group>\n...\n```", "```py\n...\n     <div className=\"text-content text-danger\">\n         {error && <p>{error}</p>}\n     </div>\n     <Button variant=\"primary\" type=\"submit\">\n       Submit\n     </Button>\n   </Form>\n );\n}\nexport default RegistrationForm;\n```", "```py\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RegistrationForm from \"../components/forms/RegistrationForm\";\nfunction Registration() {\n return (\n   <div className=\"container\">\n     <div className=\"row\">\n       <div className=\"col-md-6 d-flex align-items-center\">\n         <div className=\"content text-center px-4\">\n           <h1 className=\"text-primary\">\n             Welcome to Postman!\n           </h1>\n           <p className=\"content\">\n             This is a new social media site that will\n             allow you to share your thoughts and\n             experiences with your friends. Register now\n             and start enjoying! <br />\n             Or if you already have an account, please{\" \"}\n             <Link to=\"/login/\">login</Link>.\n           </p>\n         </div>\n       </div>\n       <div className=\"col-md-6 p-5\">\n         <RegistrationForm />\n       </div>\n     </div>\n   </div>\n );\n}\nexport default Registration;\n```", "```py\n...\nimport Registration from \"./pages/Registration\";\nfunction App() {\n return (\n   <Routes>\n     ...\n     <Route path=\"/register/\" element={<Registration />} />\n   </Routes>\n );\n}\n...\n```", "```py\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n...\n```", "```py\n...\nfunction LoginForm() {\n const navigate = useNavigate();\n const [validated, setValidated] = useState(false);\n const [form, setForm] = useState({});\n const [error, setError] = useState(null);\n const handleSubmit = (event) => {\n   event.preventDefault();\n   const loginForm = event.currentTarget;\n   if (loginForm.checkValidity() === false) {\n     event.stopPropagation();\n   }\n   setValidated(true);\n   const data = {\n     username: form.username,\n     password: form.password,\n   };\n...\n```", "```py\n...\n   axios\n     .post(\"http://localhost:8000/api/auth/login/\",\n            data)\n     .then((res) => {\n       // Registering the account and tokens in the\n       // store\n       localStorage.setItem(\"auth\", JSON.stringify({\n         access: res.data.access,\n         refresh: res.data.refresh,\n         user: res.data.user,\n       }));\n       navigate(\"/\");\n     })\n     .catch((err) => {\n       if (err.message) {\n         setError(err.request.response);\n       }\n     });\n...\n```", "```py\n...\nreturn (\n   <Form\n     id=\"registration-form\"\n     className=\"border p-4 rounded\"\n     noValidate\n     validated={validated}\n     onSubmit={handleSubmit}\n   >\n     <Form.Group className=\"mb-3\">\n       <Form.Label>Username</Form.Label>\n       <Form.Control\n         value={form.username}\n         onChange={(e) => setForm({ ...form, username:\n                    e.target.value })}\n         required\n         type=\"text\"\n         placeholder=\"Enter username\"\n       />\n       <Form.Control.Feedback type=\"invalid\">\n         This file is required.\n       </Form.Control.Feedback>\n     </Form.Group>\n     ...\n```", "```py\n         ...\n    ```", "```py\n         <Form.Group className=\"mb-3\">\n    ```", "```py\n           <Form.Label>Password</Form.Label>\n    ```", "```py\n           <Form.Control\n    ```", "```py\n             value={form.password}\n    ```", "```py\n             minLength=\"8\"\n    ```", "```py\n             onChange={(e) => setForm({ ...form, password:\n    ```", "```py\n                        e.target.value })}\n    ```", "```py\n             required\n    ```", "```py\n             type=\"password\"\n    ```", "```py\n             placeholder=\"Password\"\n    ```", "```py\n           />\n    ```", "```py\n           <Form.Control.Feedback type=\"invalid\">\n    ```", "```py\n             Please provide a valid password.\n    ```", "```py\n           </Form.Control.Feedback>\n    ```", "```py\n         </Form.Group>\n    ```", "```py\n         <div className=\"text-content text-danger\">\n    ```", "```py\n           {error && <p>{error}</p>}</div>\n    ```", "```py\n         <Button variant=\"primary\" type=\"submit\">\n    ```", "```py\n           Submit\n    ```", "```py\n         </Button>\n    ```", "```py\n       </Form>\n    ```", "```py\n     );\n    ```", "```py\n    }\n    ```", "```py\n    export default LoginForm;\n    ```", "```py\n    ...\n    ```", "```py\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginForm from \"../components/forms/LoginForm\";\n...\n```", "```py\n...\nfunction Login() {\n return (\n   <div className=\"container\">\n     <div className=\"row\">\n       <div className=\"col-md-6 d-flex\n         align-items-center\">\n         <div className=\"content text-center px-4\">\n           <h1 className=\"text-primary\">\n             Welcome to Postagram!</h1>\n           <p className=\"content\">\n             Login now and start enjoying! <br />\n             Or if you don't have an account, please{\" \"}\n             <Link to=\"/register/\">register</Link>.\n           </p>\n         </div>\n       </div>\n       <div className=\"col-md-6 p-5\">\n         <LoginForm />\n       </div>\n     </div>\n   </div>\n );\n}\nexport default Login;\n```", "```py\n...\n     <Route path=\"/login/\" element={<Login />} />\n...\n```", "```py\n const [error, setError] = useState(null);\n...\n     .catch((err) => {\n       if (err.message) {\n         setError(err.request.response);\n       }\n     });\n```", "```py\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n```", "```py\nfunction useUserActions() {\n const navigate = useNavigate();\n const baseURL = \"http://localhost:8000/api\";\n return {\n   login,\n   register,\n   logout,\n };\n}\n```", "```py\n...\n // Login the user\n function login(data) {\n   return axios.post(`${baseURL}/auth/login/`,\n                      data).then((res) => {\n     // Registering the account and tokens in the\n     // store\n     setUserData(data);\n     navigate(\"/\");\n   });\n }\n...\n```", "```py\n...\n // Logout the user\n function logout() {\n   localStorage.removeItem(\"auth\");\n   navigate(\"/login\");\n }\n...\n```", "```py\n// Get the user\nfunction getUser() {\n const auth =\n   JSON.parse(localStorage.getItem(\"auth\"));\n return auth.user;\n}\n// Get the access token\nfunction getAccessToken() {\n const auth =\n   JSON.parse(localStorage.getItem(\"auth\"));\n return auth.access;\n}\n// Get the refresh token\nfunction getRefreshToken() {\n const auth =\n   JSON.parse(localStorage.getItem(\"auth\"));\n return auth.refresh;\n}\n// Set the access, token and user property\nfunction setUserData(data) {\n localStorage.setItem(\n   \"auth\",\n   JSON.stringify({\n     access: res.data.access,\n     refresh: res.data.refresh,\n     user: res.data.user,\n   })\n );\n}\n```", "```py\n    ...\n    ```", "```py\n    import { useUserActions } from \"../../hooks/user.actions\";\n    ```", "```py\n    function LoginForm() {\n    ```", "```py\n     const [validated, setValidated] = useState(false);\n    ```", "```py\n     const [form, setForm] = useState({});\n    ```", "```py\n     const [error, setError] = useState(null);\n    ```", "```py\n     const userActions = useUserActions();\n    ```", "```py\n    ...\n    ```", "```py\nconst data = {\n     username: form.username,\n     password: form.password,\n   };\n   userActions.login(data)\n     .catch((err) => {\n       if (err.message) {\n         setError(err.request.response);\n       }\n     });\n };\n```", "```py\n...\nfunction ProtectedRoute({ children }) {\n const user = getUser();\n return user ? <>{children}</> : <Navigate\n   to=\"/login/\" />;\n...\n```", "```py\n    ...\n    ```", "```py\n    import { getAccessToken, getRefreshToken } from \"../hooks/user.actions\";\n    ```", "```py\n    ...\n    ```", "```py\n     config.headers.Authorization = `Bearer ${getAccessToken()}`;\n    ```", "```py\n    ...\n    ```", "```py\n       .post(\"/refresh/token/\", null, {\n    ```", "```py\n         baseURL: \"http://localhost:8000\",\n    ```", "```py\n         headers: {\n    ```", "```py\n           Authorization: `Bearer ${getRefreshToken()}`,\n    ```", "```py\n    ...\n    ```", "```py\n         const { access, refresh, user } = resp.data;\n    ```", "```py\n         failedRequest.response.config.headers[\n    ```", "```py\n           \"Authorization\"] =\n    ```", "```py\n           \"Bearer \" + access;\n    ```", "```py\n         localStorage.setItem(\"auth\", JSON.stringify({\n    ```", "```py\n           access, refresh, user }));\n    ```", "```py\n       })\n    ```", "```py\n       .catch(() => {\n    ```", "```py\n         localStorage.removeItem(\"auth\");\n    ```", "```py\n       });\n    ```", "```py\n    ...\n    ```"]