["```py\nimport cherrypy\nimport logon\nclass Root(object):\nlogon = logon.Logon(path=\"/logon\",\n\t\t\t\t\tauthenticated=\"/\",\n\t\t\t\t\tnot_authenticated=\"/goaway\")\n@cherrypy.expose\ndef index(self):\n\t\tusername=logon.checkauth('/logon')\n\t\treturn '''\n\t<html><body>\n\t<p>Hello user <b>%s</b></p>\n\t</body></html>'''%username\n@cherrypy.expose\ndef goaway(self):\n\t\treturn '''\n\t<html>\n\t<body><h1>Not authenticated, please go away.</h1>\n\t</body></html>'''\n@cherrypy.expose def somepage(self):\n\t\tusername=logon.checkauth('/logon',returntopage=True)\n\t\treturn '''<html> \n\t\t\t\t  <body><h1>This is some page.</h1> \n\t\t\t\t  </body> \n\t\t\t\t  </html>'''\nif __name__ == \"__main__\":\n\timport os.path\n\tcurrent_dir = os.path.dirname(os.path.abspath(__file__))\n\tcherrypy.quickstart(Root(),config={\n\t\t\t'/': {'tools.sessions.on': True }\n\t\t\t}\n\t\t\t)\n\n```", "```py\nimport cherrypy\nimport urllib.parse def checkauth(logonurl=\"/\", returntopage=False):\n\treturnpage=''\nif returntopage:\n\treturnpage='?returnpage='\n\t\t\t+ cherrypy.request.script_name\n\t\t\t+ cherrypy.request.path_info\nauth = cherrypy.session.get('authenticated',None)\nif auth == None :\n\traise cherrypy.HTTPRedirect(logonurl+returnpage)\nreturn auth class Logon:\n\tbase_page = '''\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<script type=\"text/javascript\" src=\"img/jquery.js\" ></script>\n<script type=\"text/javascript\" src=\"img/jquery-ui.js\" ></script>\n<style type=\"text/css\" title=\"currentStyle\">\n\t@import \"/jquerytheme.css\";\n\t@import \"/static/css/logon.css\";\n</style>\n</head>\n<body id=\"logonscreen\">\n<div id=\"content\">\n%s\n</div>\n<script type=\"text/javascript\">$(\"button\").button({icons: {primary: 'ui-icon-power'}})</script>\n</body>\n</html>\n'''\n\tlogon_screen = base_page % '''\n<form class=\"login\" action=\"%s/logon\" method=\"GET\">\n<fieldset>\n<label for=\"username\">Username</label>\n<input id=\"username\" type=\"text\" name=\"username\" />\n<script type=\"text/javascript\">$(\"#username\").focus()</script>\n<label for=\"password\">Password</label>\n<input id=\"password\" type=\"password\" name=\"password\" />\n<input type=\"hidden\" name=\"returnpage\" value=\"%s\" />\n<button type=\"submit\" class=\"login-button\" value=\"Log in\">\nLog in\n</button>\n</fieldset>\n</form>\n'''\n\tnot_authenticated =\n\t\tbase_page % '''<h1>Login or password not correct</h1>''' def __init__(self, path=\"/logon\",\n\t\t\t\t\tauthenticated=\"/\", not_authenticated=\"/\"):\n\tself.path=path\n\tself.authenticated=authenticated\n\tself.not_authenticated=not_authenticated\n@staticmethod def checkpass(username,password):\n\tif username=='user' and password=='secret': return True\n\treturn False\n@cherrypy.expose def index(self,returnpage=''): \n\treturn Logon.logon_screen % (\n\t\t\t\tself.path,urllib.parse.quote(returnpage))\n@cherrypy.expose def logon(self,username,password,returnpage=''):\n\treturnpage = urllib.parse.unquote(returnpage)\n\tif Logon.checkpass(username,password):\n\t\tcherrypy.session['authenticated']=username\n\t\tif returnpage != '':\n\t\t\traise cherrypy.InternalRedirect(returnpage)\n\t\telse:\n\t\t\traise cherrypy.InternalRedirect(\n\t\t\t\t\t\t\t\tself.authenticated)\n\traise cherrypy.InternalRedirect(self.not_authenticated)\n@cherrypy.expose def logoff(self,logoff):\n\tcherrypy.lib.sessions.expire()\n\tcherrypy.session['authenticated']=None\n\traise cherrypy.InternalRedirect(self.not_authenticated)\n\n```", "```py\n$(\"#username\").focus()\n\n```", "```py\n@cherrypy.expose\n\tdef goaway(self):\n\t\t\treturn '''\n<html><body>\n<h1>Not authenticated, please go away.</h1>\n</body></html>\n''' goaway._cp_config = {\n\t\t'tools.expires.on':True,\n\t\t'tools.expires.secs':0,\n\t\t'tools.expires.force':True}\n\n```", "```py\n/\n/logon\n/logon/logon\n/logon/logoff\n/task\n/task/add\n/task/mark\n\n```", "```py\nimport cherrypy\nimport os.path\nimport logon\nimport task\ncurrent_dir = os.path.dirname(os.path.abspath(__file__))\ntheme = \"smoothness\"\nclass Root(object):\n\ttask = task.Task(logoffpath=\"/logon/logoff\")\n\tlogon = logon.Logon(path=\"/logon\",\n\t\t\t\tauthenticated=\"/task\",\n\t\t\t\tnot_authenticated=\"/\")\n\t@cherrypy.expose\n\tdef index(self):\n\t\t\treturn Root.logon.index()\nif __name__ == \"__main__\": cherrypy.quickstart(Root(),config={\n\t'/':\n\t{ 'log.access_file':os.path.join(current_dir,\"access.log\"),\n\t'log.screen': False,\n\t'tools.sessions.on': True\n\t},\n\t'/static':\n\t{ 'tools.staticdir.on':True,\n\t'tools.staticdir.dir':os.path.join(current_dir,\"static\")\n\t},\n\t'/jquery.js':\n\t{ 'tools.staticfile.on':True,\n\t'tools.staticfile.filename':os.path.join(current_dir,\n\t\"static\",\"jquery\",\"jquery-1.4.2.js\")\n\t},\n\t'/jquery-ui.js':\n\t{ 'tools.staticfile.on':True,\n\t'tools.staticfile.filename':os.path.join(current_dir,\n\t\"static\",\"jquery\",\"jquery-ui-1.8.1.custom.min.js\")\n\t},\n\t'/jquerytheme.css':\n\t{ 'tools.staticfile.on':True,\n\t'tools.staticfile.filename':os.path.join(current_dir,\n\t\"static\",\"jquery\",\"css\",theme,\"jquery-ui-1.8.4.custom.css\")\n\t},\n\t'/images':\n\t{ 'tools.staticdir.on':True, 'tools.staticdir.dir':os.path.join(current_dir,\n\t\"static\",\"jquery\",\"css\",theme,\"images\")\n\t}\n})\n\n```", "```py\nimport cherrypy\nimport json\nimport os\nimport os.path\nimport glob\nfrom configparser import RawConfigParser as configparser\nfrom uuid import uuid4 as uuid\nfrom datetime import date\nimport logon\n\n```", "```py\nbase_page = '''\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<script type=\"text/javascript\" src=\"img/jquery.js\" ></script>\n<script type=\"text/javascript\" src=\"img/jquery-ui.js\" ></script>\n<style type=\"text/css\" title=\"currentStyle\"> @import \"/static/css/tasklist.css\";\n\t@import \"/jquerytheme.css\";\n</style> <script type=\"text/javascript\" src=\"img/sort.js\" ></script>\n<script type=\"text/javascript\" src=\"img/tooltip.js\" ></script>\n<script type=\"text/javascript\" src=\"img/tasklist.js\" ></script>\n</head>\n<body id=\"%s\">\n<div id=\"content\">\n%s\n</div>\n</body>\n</html>\n'''\n\n```", "```py\ncurrent_dir = os.path.dirname(os.path.abspath(__file__)) def gettaskdir(username):\n\ttaskdir = os.path.join(current_dir,'taskdir',username)\n\t# fails if name exists but is a file instead of a directory\n\tif not os.path.exists(taskdir):\n\t\t\tos.makedirs(taskdir)\n\treturn taskdir\n\n```", "```py\nclass Task(object):\ndef __init__(self,logoffpath=\"/logoff\"):\n\tself.logoffpath=logoffpath\n@cherrypy.expose\ndef index(self): username = logon.checkauth()\n\ttaskdir = gettaskdir(username)\n\ttasklist = glob.glob(os.path.join(taskdir,'*.task'))\n\n```", "```py\n[task]\ndescription = something\nduedate = 2010-08-26\ncompleted = 2010-08-25\n\n```", "```py\n\t\t\t\ttasks = [\n'''\n<div class=\"header\">\nTasklist for user <span class=\"highlight\">%s</span>\n\t<form class=\"logoff\" action=\"%s\" method=\"GET\">\n\t\t<button type=\"submit\" name=\"logoffurl\"\n\t\t\t\tclass=\"logoff-button\" value=\"/\">Log off\n\t\t</button>\n\t</form>\n</div>\n'''%(username,self.logoffpath),\n'''\n<div class=\"taskheader\">\n\t<div class=\"left\">Due date</div>\n\t<div class=\"middle\">Description</div>\n\t<div class=\"right\">Completed</div>\n</div>\n''','<div id=\"items\" class=\"ui-widget-content\">'] for filename in tasklist:\n\t\t\td = configparser(\n\t\t\tdefaults={'description':'',\n\t\t\t\t\t'duedate':'',\n\t\t\t\t\t'completed':None})\n\t\t\tid = os.path.splitext(os.path.basename(filename))[0]\n\t\t\td.readfp(open(filename)) description = d.get('task','description')\n\t\t\tduedate = d.get('task','duedate')\n\t\t\tcompleted = d.get('task','completed')\n\t\t\ttasks.append(\n'''\n<form class=\"%s\" action=\"mark\" method=\"GET\">\n\t<input type=\"text\" class=\"duedate left\"\n\t\t\tname=\"duedate\" value=\"%s\" readonly=\"readonly\" />\n\t<input type=\"text\" class=\"description middle\"\n\t\t\tname=\"description\" value=\"%s\" readonly=\"readonly\" />\n\t<input type=\"text\" class=\"completed right editable-date tooltip\"\n\t\t\ttitle=\"click to select a date, then click done\"\n\t\t\tname=\"completed\" value=\"%s\" />\n\t<input type=\"hidden\" name=\"id\" value=\"%s\" />\n\t<button type=\"submit\" class=\"done-button\"\n\t\t\tname=\"done\" value=\"Done\" >Done\n\t</button>\n\t<button type=\"submit\" class=\"del-button\"\n\t\t\tname=\"delete\" value=\"Del\" >Del\n\t</button>\n</form>\n'''%('notdone' if completed==None else 'done',\n\tduedate,description,completed,id))\n\t\ttasks.append(\n'''\n<form class=\"add\" action=\"add\" method=\"GET\">\n\t<input type=\"text\" class=\"duedate left editable-date tooltip\"\n\t\t\tname=\"duedate\" title=\"click to select a date\" />\n\t<input type=\"text\" class=\"description middle tooltip\"\n\t\t\ttitle=\"click to enter a description\" name=\"description\"/>\n\t<button type=\"submit\" class=\"add-button\"\n\t\t\tname=\"add\" value=\"Add\" >Add\n\t</button>\n</form>\n</div>\n''')\n\t\treturn base_page%('itemlist',\"\".join(tasks))\n\n```", "```py\n@cherrypy.expose\ndef add(self,add,description,duedate):\n\tusername = logon.checkauth()\n\ttaskdir = gettaskdir(username) filename = os.path.join(taskdir,uuid().hex+'.task')\n\td=configparser()\n\td.add_section('task')\n\td.set('task','description',description)\n\td.set('task','duedate',duedate)\n\twith open(filename,\"w\") as file:\n\t\td.write(file)\n\traise cherrypy.InternalRedirect(\".\")\n\n```", "```py\n@cherrypy.expose\ndef mark(self,id,duedate,description,\n\t\t\tcompleted,done=None,delete=None):\n\tusername = logon.checkauth()\n\ttaskdir = gettaskdir(username)\n\ttry:\n\t\t\tint(id,16)\n\texcept ValueError:\n\t\t\traise cherrypy.InternalRedirect(self.logoffpath)\n\tfilename = os.path.join(taskdir,id+'.task') if done==\"Done\":\n\t\t\td=configparser()\n\t\t\twith open(filename,\"r\") as file:\n\t\t\t\td.readfp(file)\n\t\t\tif completed == \"\" or completed == \"None\":\n\t\t\t\tcompleted = date.today().isoformat()\n\t\t\td.set('task','completed',completed)\n\t\t\twith open(filename,\"w\") as file:\n\t\t\t\td.write(file)\nelif delete==\"Del\":\n\t\t\tos.unlink(filename)\nraise cherrypy.InternalRedirect(\".\")\n\n```", "```py\n$(document).ready(function(){\n\t$(\".header\").addClass(\"ui-widget ui-widget-header\");\n\t$(\".add-button\").button(\n\t\t{icons:{primary: 'ui-icon-plusthick' },\n\t\ttext:false}).click(function(){\n\t\t$(\".inline-label\").each(function() {\n\t\t\t\tif($(this).val() === $(this).attr('title')) {\n\t\t\t\t\t$(this).val('');\n\t\t\t\t};\n\t})\n}); $(\".del-button\").button( \n\t{icons:{primary: 'ui-icon-trash' },\n\ttext:false}).click(function(){\n\t\t$(this).siblings(\"input\").removeAttr(\"disabled\");\n});\n$(\".done-button\").button( {icons: {primary:'ui-icon-check'},\n\t\t\t\t\t\t\ttext:false});\n$(\".logoff-button\").button({icons: {primary:'ui-icon-closethick'},\n\t\t\t\t\t\t\ttext:false});\n$(\".login-button\").button( {icons: {primary:'ui-icon-play'},\n\t\t\t\t\t\t\ttext:false});\n$(\":text\").addClass(\"textinput\");\n$(\":password\").addClass(\"textinput\"); $( \".editable-date\" ).datepicker({\n\t\tdateFormat: $.datepicker.ISO_8601,\n\t\tonClose: function(dateText,datePicker){\n\t\tif(dateText != ''){$(this).removeClass(\"inline-label\");}}\n\t});\n$(\"#items form input.duedate\").sort(\n\t\tfunction(a,b){return $(a).val() > $(b).val() ? 1 : -1;},\n\t\tfunction(){ return this.parentNode; }).addClass(\n\t\t\t\t\t\t\t\t\t\t\t\t\"just-sorted\");\n$(\".done .done-button\").button( \"option\", \"disabled\", true );\n$(\".done input\").attr(\"disabled\",\"disabled\");\n});\n\n```", "```py\n$(document).ready(function() { $('input[title]').each(function() {\n\t\tif($(this).val() === '') {\n\t\t\t$(this).val($(this).attr('title'));\n\t\t\t$(this).addClass('inline-label');\n\t\t}\n\t\t$(this).focus(function() {\n\t\t\tif($(this).val() === $(this).attr('title')) { $(this).val('').removeClass('inline-label');\n\t\t\t}\n\t\t});\n\t\t$(this).blur(function() {\n\t\t\tif($(this).val() === '') {\n\t\t\t\t$(this).val($(this).attr('title'));\n\t\t\t\t$(this).addClass('inline-label');\n\t\t\t}\n\t\t});\n\t});\n});\n\n```", "```py\ninput[type=\"text\"] {\n\tfont-size:1.1em;\n\tmargin:0;\n\tborder:0;\n\tpadding:0;} .left, .right { width: 8em; }\n.middle { width: 20em;}\nform {\n\tfloat:left;\n\tborder:0;\nmargin:0;\npadding:0;\n\tclear:both;\n\twidth:100%; }\nform.logoff{\nfloat:right;\n\tborder:0;\nmargin:0;\npadding:0;\n\tclear:both;\nwidth:auto;\n\tfont-size:0.5em;}\n#items { float:left; clear:both; width:100%; }\n.header { width:100%; }\n.taskheader, .header, #content{ float:left; clear:both;}\n.taskheader div { float:left; font-size:1.1em; font-weight:bold;}\n.logoff-button, .done-button, .del-button, .add-button { float:right;}\n.done-button, .add-button, .del-button { width: 6em; height: 1.1em; }\n#content { min-width:900px;}\n\n```"]