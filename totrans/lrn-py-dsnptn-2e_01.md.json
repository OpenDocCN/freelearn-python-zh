["```py\nclass Person(object):\n    def __init__(self, name, age):  #constructor\n        self.name = name    #data members/ attributes\n        self.age = age\n    def get_person(self,):   # member function\n         return \"<Person (%s, %s)>\" % (self.name, self.age)\n\np = Person(\"John\", 32)    # p is an object of type Person\nprint(\"Type of Object:\", type(p), \"Memory Address:\", id(p))\n```", "```py\na = \"John\"\nb = (1,2,3)\nc = [3,4,6,8,9]\nprint(a[1], b[0], c[2])\n```", "```py\nclass A:\n    def a1(self):\n        print(\"a1\")\n\nclass B(A):\n    def b(self):\n        print(\"b\")\n\nb = B()\nb.a1()\n```", "```py\nclass Adder:\n    def __init__(self):\n        self.sum = 0\n    def add(self, value):\n        self.sum += value\n\nacc = Adder()\nfor i in range(99):\n    acc.add(i)\n\nprint(acc.sum)\n```", "```py\nclass A(object):\n    def a1(self):\n        print(\"a1\")\n\nclass B(object):\n    def b(self):\n        print(\"b\")\n        A().a1()\n\nobjectB = B()\nobjectB.b()\n```"]