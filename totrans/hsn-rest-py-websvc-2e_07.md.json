["```py\n    http PATCH \":8000/games/2/\" played_once=true played_times=10  \n```", "```py\n curl -iX PATCH -H \"Content-Type: application/json\" -d '{\"played_once\":\"true\", \"played_times\": 10}' \"localhost:8000/games/2/\"\n\n```", "```py\n    HTTP/1.1 200 OK\n    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\n    Content-Length: 204\n    Content-Type: application/json\n    Date: Fri, 26 Oct 2018 16:40:51 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": \"AO (Adults Only)\",\n        \"name\": \"Mutant Football League: Dynasty Edition\",\n        \"played_once\": true,\n        \"played_times\": 10,\n        \"release_date\": \"2018-10-20T03:02:00.776594Z\",\n        \"url\": \"http://localhost:8000/games/2/\"\n    }\n\n```", "```py\nfrom rest_framework.pagination import LimitOffsetPagination \n\nclass MaxLimitPagination(LimitOffsetPagination): \n    max_limit = 8 \n```", "```py\nREST_FRAMEWORK = { \n    'DEFAULT_PAGINATION_CLASS': \n 'games.max_limit_pagination.MaxLimitPagination',    'PAGE_SIZE': 4 \n} \n```", "```py\n    http GET \":8000/games/?limit=20\"\n```", "```py\n    curl -iX GET \"localhost:8000/games/?limit=20\"\n```", "```py\n    HTTP/1.1 200 OK\n    Allow: GET, POST, HEAD, OPTIONS\n    Content-Length: 1542\n    Content-Type: application/json\n    Date: Fri, 26 Oct 2018 21:25:06 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"count\": 12,\n        \"next\": \"http://localhost:8000/games/?limit=8&offset=8\",\n        \"previous\": null,\n        \"results\": [\n            {\n\n```", "```py\nclass Game(models.Model): \n    created = models.DateTimeField(auto_now_add=True) \n    name = models.CharField(max_length=200, unique=True) \n    esrb_rating = models.ForeignKey( \n        EsrbRating,  \n        related_name='games',  \n        on_delete=models.CASCADE) \n    release_date = models.DateTimeField() \n    played_once = models.BooleanField(default=False) \n    played_times = models.IntegerField(default=0) \n    owner = models.ForeignKey( \n        'auth.User',  \n        related_name='games', \n        on_delete=models.CASCADE) \n\n    class Meta: \n        ordering = ('name',) \n\n    def __str__(self): \n        return self.name\n```", "```py\n    python manage.py createsuperuser\n```", "```py\n    Username (leave blank to use 'xxxxxxxx'):\n```", "```py\n    Email address: \n```", "```py\n    Password:\n```", "```py\n    Password (again):\n```", "```py\n    Superuser created successfully.\n```", "```py\nfrom django.contrib.auth.models import User \n\nclass UserGameSerializer(serializers.HyperlinkedModelSerializer): \n    class Meta: \n        model = Game \n        fields = ( \n            'url', \n            'name') \n\nclass UserSerializer(serializers.HyperlinkedModelSerializer): \n    games = UserGameSerializer(many=True, read_only=True) \n\n    class Meta: \n        model = User \n        fields = ( \n            'url',  \n            'id', \n            'username', \n            'games') \n```", "```py\nclass GameSerializer(serializers.HyperlinkedModelSerializer): \n    # We want to display the game ESRB rating description instead of \n    #\n\nits id \n    esrb_rating = serializers.SlugRelatedField( \n        queryset=EsrbRating.objects.all(),  \n        slug_field='description') \n    # We want to display the user name that is the owner \n    owner = serializers.ReadOnlyField(source='owner.username') \n\n    class Meta: \n        model = Game \n        fields = ( \n            'url', \n            'esrb_rating', \n            'name', \n            'release_date', \n            'played_once', \n            'played_times', \n            'owner') \n```", "```py\nfrom rest_framework import permissions \n\nclass IsOwnerOrReadOnly(permissions.BasePermission): \n    def has_object_permission(self, request, view, obj): \n        if request.method in permissions.SAFE_METHODS: \n            return True \n        else: \n            return obj.owner == request.user \n```", "```py\nfrom django.contrib.auth.models import User \nfrom rest_framework import permissions \nfrom games.serializers import UserSerializer \nfrom games.customized_permissions import IsOwnerOrReadOnly \n\nclass UserList(generics.ListAPIView): \n    queryset = User.objects.all() \n    serializer_class = UserSerializer \n    name = 'user-list' \n\nclass UserDetail(generics.RetrieveAPIView): \n    queryset = User.objects.all() \n    serializer_class = UserSerializer \n    name = 'user-detail'\n```", "```py\nclass ApiRoot(generics.GenericAPIView): \n    name = 'api-root' \n    def get(self, request, *args, **kwargs): \n        return Response({ \n 'users': reverse(UserList.name, request=request),            'players': reverse(PlayerList.name, request=request), \n            'esrb-ratings': reverse(EsrbRatingList.name, request=request), \n            'games': reverse(GameList.name, request=request), \n            'scores': reverse(PlayerScoreList.name, request=request) \n            }) \n```", "```py\nclass GameList(generics.ListCreateAPIView): \n    queryset = Game.objects.all() \n    serializer_class = GameSerializer \n    name = 'game-list' \n    permission_classes = ( \n        permissions.IsAuthenticatedOrReadOnly, \n        IsOwnerOrReadOnly) \n\n    def perform_create(self, serializer): \n        serializer.save(owner=self.request.user)\n```", "```py\nclass GameDetail(generics.RetrieveUpdateDestroyAPIView): \n    queryset = Game.objects.all() \n    serializer_class = GameSerializer \n    name = 'game-detail' \n    permission_classes = ( \n        permissions.IsAuthenticatedOrReadOnly, \n        IsOwnerOrReadOnly) \n```", "```py\n    url(r'^users/$', \n        views.UserList.as_view(), \n        name=views.UserList.name), \n    url(r'^users/(?P<pk>[0-9]+)/$', \n        views.UserDetail.as_view(), \n        name=views.UserDetail.name),\n```", "```py\nfrom django.conf.urls import url, include \n\nurlpatterns = [ \n    url(r'^', include('games.urls')), \n url(r'^api-auth/', include('rest_framework.urls')), ] \n```", "```py\nhttp POST \":8000/games/\" name='Super Mario Odyssey' esrb_rating='T (Teen)' release_date='2017-10-27T01:00:00.776594Z'\n```", "```py\ncurl -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Super Mario Odyssey\", \"esrb_rating\":\"T (Teen)\", \"release_date\": \"2017-10-27T01:00:00.776594Z\"}' \n\"localhost:8000/games/\"\n```", "```py\n    HTTP/1.1 403 Forbidden\n    Allow: GET, POST, HEAD, OPTIONS\n    Content-Length: 58\n    Content-Type: application/json\n    Date: Sat, 27 Oct 2018 15:03:53 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"detail\": \"Authentication credentials were not provided.\"\n    }\n\n```", "```py\nhttp -a your_games_super_user:'WCS3qn!a4ybX#' POST \":8000/games/\" name='Super Mario Odyssey' esrb_rating='T (Teen)' release_date='2017-10-27T01:00:00.776594Z'\n\n```", "```py\ncurl --user your_games_super_user:'password' -iX POST -H \"Content-Type: application/json\" -d '{\"name\":\"Super Mario Odyssey\", \"esrb_rating\":\"T (Teen)\", \"release_date\": \"2017-10-27T01:00:00.776594Z\"}' \"localhost:8000/games/\"  \n```", "```py\n    HTTP/1.1 201 Created\n    Allow: GET, POST, HEAD, OPTIONS\n    Content-Length: 209\n    Content-Type: application/json\n    Date: Sat, 27 Oct 2018 15:17:40 GMT\n    Location: http://localhost:8000/games/13/\n    Server: WSGIServer/0.2 CPython/3.7.1\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"esrb_rating\": \"T (Teen)\",\n        \"name\": \"Super Mario Odyssey\",\n        \"owner\": \"your_games_super_user\",\n        \"played_once\": false,\n        \"played_times\": 0,\n        \"release_date\": \"2017-10-27T01:00:00.776594Z\",\n        \"url\": \"http://localhost:8000/games/13/\"\n    }\n\n```", "```py\nhttp -a 'gaston-hillar':'FG$gI^76q#yA3v' PATCH \":8000/games/13/\" played_once=true played_times=15\n\n```", "```py\ncurl --user 'gaston-hillar':'FG$gI^76q#yA3v' -iX PATCH -H \"Content-Type: application/json\" -d '{\"played_once\": \"true\", \"played_times\": 15}' \n\"localhost:8000/games/13/\"\n\n```", "```py\n    HTTP/1.1 403 Forbidden\n    Allow: GET, PUT, PATCH, DELETE, HEAD, OPTIONS\n    Content-Length: 63\n    Content-Type: application/json\n    Date: Sat, 27 Oct 2018 15:23:45 GMT\n    Server: WSGIServer/0.2 CPython/3.7.1\n    Vary: Accept, Cookie\n    X-Frame-Options: SAMEORIGIN\n\n    {\n        \"detail\": \"You do not have permission to perform this action.\"\n    }\n\n```", "```py\n    http -a 'gaston-hillar':'FG$gI^76q#yA3v' GET \":8000/games/13/\"\n```", "```py\n curl --user 'gaston-hillar':'FG$gI^76q#yA3v' -iX GET \"localhost:8000/games/13/\"\n\n```"]