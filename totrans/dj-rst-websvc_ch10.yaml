- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Python is definitely one of the most popular programming languages. It is open
    source, multiplatform, and you can use it to develop any kind of application,
    from websites and web services to artificial intelligence and machine learning
    applications. You will always find a framework or a set of packages in Python
    to make things easier for you in any domain. It is extremely easy to work with
    Python and its most popular web framework, Django, in the most important and popular
    cloud computing providers. Hence, Python is an excellent choice for developing
    modern and scalable RESTful Web Services that will run on the cloud.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Python 无疑是最受欢迎的编程语言之一。它是开源的、多平台的，您可以使用它来开发任何类型的应用程序，从网站和 Web 服务到人工智能和机器学习应用程序。您总会找到在
    Python 中简化任何领域工作的框架或一系列包。在最重要的和最受欢迎的云计算提供商中，与 Python 及其最受欢迎的 Web 框架 Django 一起工作极为容易。因此，Python
    是开发将在云上运行的现代和可扩展的 RESTful Web 服务的绝佳选择。
- en: REST (short for Representational State Transfer) is the architectural style
    that has been driving modern and scalable web development recently. If you want
    to be part of the world that builds complex web applications and mobile apps,
    you will need to develop and interact with RESTful Web Services. In many situations,
    you will have to design and develop a RESTful Web Service from scratch and maintain
    the API over time. A deep knowledge of RESTful Web Services is an essential skill
    for any software development job.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: REST（代表表示状态传输）是近年来推动现代和可扩展网络开发的架构风格。如果您想成为构建复杂网络应用和移动应用的世界的一部分，您将需要开发和交互 RESTful
    Web 服务。在许多情况下，您将不得不从头开始设计和开发一个 RESTful Web 服务，并在一段时间内维护该 API。对 RESTful Web 服务的深入了解是任何软件开发工作的必备技能。
- en: This book covers everything you need to know to develop and test a RESTful Web
    Service from scratch with the latest version of Django, Django REST framework,
    and Python. You will work with real-life examples in combination with Python packages
    that will allow you to simplify tasks.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书涵盖了您需要了解的一切，以从头开始使用最新版本的 Django、Django REST 框架和 Python 开发和测试 RESTful Web 服务。您将结合
    Python 包的实际示例来简化任务。
- en: You will learn to use a huge set of tools to test and develop a uniform, high-quality,
    and scalable RESTful Web Services. You will use object-oriented programming and
    modern Python 3.6 code to favor code reuse and simplify future maintenance. You
    will take advantage of automated testing to ensure that the coded RESTful Web
    Services run as expected.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 您将学会使用大量工具来测试和开发统一、高质量和可扩展的 RESTful Web 服务。您将使用面向对象编程和现代 Python 3.6 代码来促进代码重用并简化未来的维护。您将利用自动化测试来确保编码的
    RESTful Web 服务按预期运行。
- en: 'This book will allow you to create your own RESTful Web Services for any domain
    with Django and Django REST framework in Python 3.6 or greater. You will learn
    the process for the most popular Python platforms: Linux, Windows, and macOS.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书将使您能够使用 Python 3.6 或更高版本中的 Django 和 Django REST 框架为任何领域创建自己的 RESTful Web
    服务。您将学习在最受欢迎的 Python 平台上的流程：Linux、Windows 和 macOS。
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: This book is for Python developers who want to develop RESTful Web Services,
    also known as RESTful web APIs, with Python 3.6 or greater, and want to learn
    how to do it with the most popular Python web framework—Django.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向想要使用 Python 3.6 或更高版本开发 RESTful Web 服务（也称为 RESTful 网络API）的 Python 开发者，并希望学习如何使用最受欢迎的
    Python 网络框架——Django。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](dj-rst-websvc_ch11.html), *Installing the Required Software and
    Tools*, shows how to get started in our journey toward creating RESTful Web Services
    with Python and its most popular web framework—Django. We will install and configure
    the environments, the software, and the tools required to create RESTful Web Services
    with Django and Django REST framework. We will learn the necessary steps in Linux,
    macOS, and Windows. We will create our first app with Django, we will take a first
    look at the Django folders, files, and configurations, and we will make the necessary
    changes to activate Django REST framework. In addition, we will introduce and
    install command-line and GUI tools that we will use to interact with the RESTful
    Web Services that we will design, code, and test in the forthcoming chapters.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第一章](dj-rst-websvc_ch11.html)，*安装所需的软件和工具*，展示了如何开始使用Python及其最受欢迎的Web框架Django创建RESTful
    Web Service的旅程。我们将安装和配置创建Django和Django REST framework RESTful Web Service所需的环境、软件和工具。我们将学习在Linux、macOS和Windows上必要的步骤。我们将使用Django创建我们的第一个应用程序，我们将首次查看Django文件夹、文件和配置，并将进行必要的更改以激活Django
    REST framework。此外，我们将介绍和安装我们将用于与我们在后续章节中设计、编码和测试的RESTful Web Service交互的命令行和GUI工具。'
- en: '[Chapter 2](dj-rst-websvc_ch12.html), *Working with Models, Migrations, Serialization,
    and Deserialization*, describes how to design a RESTful Web Service to interact
    with a simple SQLite database and perform CRUD operations with toys. We will define
    the requirements for our web service, and we will understand the tasks performed
    by each HTTP method and the different scopes. We will create a model to represent
    and persist toys and execute migrations in Django to create the required tables
    in the database. We will analyze the tables and learn how to manage the serialization
    of toy instances into JSON representations with Django REST framework and the
    reverse process.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第二章](dj-rst-websvc_ch12.html)，*使用模型、迁移、序列化和反序列化*，介绍了如何设计一个RESTful Web Service以与简单的SQLite数据库交互，并使用玩具执行CRUD操作。我们将定义我们Web服务的需求，并理解每个HTTP方法执行的任务和不同的范围。我们将创建一个模型来表示和持久化玩具，并在Django中执行迁移以在数据库中创建所需的表。我们将分析这些表，并学习如何使用Django
    REST框架管理玩具实例到JSON表示的序列化以及反向过程。'
- en: '[Chapter 3](dj-rst-websvc_ch13.html), *Creating API Views*, is about executing
    the first version of a simple Django RESTful Web Service that interacts with a
    SQLite database. We will write API views to process diverse HTTP requests on a
    collection of toys and on a specific toy. We will work with the following HTTP
    verbs: GET, POST, and PUT. We will configure the URL patterns list to route URLs
    to views. We will start the Django development server and use command-line tools
    (curl and HTTPie) to compose and send diverse HTTP requests to our RESTful Web
    Service. We will learn how HTTP requests are processed in Django and our code.
    In addition, we will work with Postman, a GUI tool, to compose and send other
    HTTP requests to our RESTful Web Service.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第三章](dj-rst-websvc_ch13.html)，*创建API视图*，是关于执行一个简单的Django RESTful Web Service的第一版本，该服务与SQLite数据库交互。我们将编写API视图来处理对玩具集合和特定玩具的多种HTTP请求。我们将使用以下HTTP动词：GET、POST和PUT。我们将配置URL模式列表以将URL路由到视图。我们将启动Django开发服务器，并使用命令行工具（curl和HTTPie）来构建并发送各种HTTP请求到我们的RESTful
    Web Service。我们将学习HTTP请求在Django和我们的代码中是如何处理的。此外，我们将使用Postman，一个GUI工具，来构建并发送其他HTTP请求到我们的RESTful
    Web Service。'
- en: '[Chapter 4](dj-rst-websvc_ch14.html), *Using Generalized Behavior from the
    APIView Class*, presents different ways to improve our simple Django RESTful Web
    Service. We will take advantage of many features included in the Django REST framework
    to remove duplicate code and add many features for the web service. We will use
    model serializers, understand the different accepted and returned content types,
    and the importance of providing accurate responses to the HTTP OPTIONS requests.
    We will make the necessary changes to the existing code to enable diverse parsers
    and renderers. We will learn how things work under the hoods in Django REST framework.
    We will work with different content types and note how the RESTful Web Service
    improves compared to its previous versions.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](dj-rst-websvc_ch14.html)，*从APIView类使用通用行为*，介绍了提高我们简单Django RESTful Web
    Service的不同方法。我们将利用Django REST框架中包含的许多功能来删除重复代码并为Web服务添加许多功能。我们将使用模型序列化器，了解接受和返回的不同内容类型，以及为HTTP
    OPTIONS请求提供准确响应的重要性。我们将对现有代码进行必要的修改，以启用多种解析器和渲染器。我们将学习在Django REST框架中内部的工作原理。我们将处理不同的内容类型，并注意与之前版本相比，RESTful
    Web Service的改进。'
- en: '[Chapter 5](dj-rst-websvc_ch15.html), *Understanding and Customizing the Browsable
    API Feature*, explains how to use one of the additional features that Django REST
    framework adds to our RESTful Web Service—the browsable API. We will use a web
    browser to work with our first web service built with Django. We will learn to
    make HTTP GET, POST, PUT, OPTIONS, and DELETE requests with the browsable API.
    We will be able to easily test CRUD operations with a web browser. The browsable
    API will allow us to easily interact with our RESTful Web Service.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](dj-rst-websvc_ch15.html)，*理解和自定义可浏览API功能*，解释了如何使用Django REST框架添加到我们的RESTful
    Web Service中的一个附加功能——可浏览的API。我们将使用网络浏览器来处理我们用Django构建的第一个Web服务。我们将学习如何使用可浏览的API进行HTTP
    GET、POST、PUT、OPTIONS和DELETE请求。我们将能够轻松地使用网络浏览器测试CRUD操作。可浏览的API将使我们能够轻松地与我们的RESTful
    Web Service进行交互。'
- en: '[Chapter 6](dj-rst-websvc_ch16.html), *Working with Advanced Relationships
    and Serialization*, shows how to define the requirements for a complex RESTful
    Web Service in which we needed to work with drone categories, drones, pilots,
    and competitions. We will create a new app with Django and configure the new web
    service. We will define many-to-one relationships between the models, and we will
    configure Django to work with a PostgreSQL database. We will execute migrations
    to generate tables with relationships between them. We will also analyze the generated
    database and configure serialization and deserialization for the models. We will
    define hyperlinks and work with class-based views. Then, we will take advantage
    of generic classes and generic views that generalize and mix predefined behaviors.
    We will use routings and endpoints and prepare our RESTful Web Service to work
    with the browsable API. We will make many different HTTP requests to create and
    retrieve resources that have relationships between them.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](dj-rst-websvc_ch16.html)，*与高级关系和序列化一起工作*，展示了如何定义一个复杂RESTful Web Service的需求，其中我们需要处理无人机类别、无人机、飞行员和比赛。我们将使用Django创建一个新应用并配置新的Web服务。我们将定义模型之间的多对一关系，并将Django配置为与PostgreSQL数据库一起工作。我们将执行迁移以生成具有相互关系表。我们还将分析生成的数据库并为模型配置序列化和反序列化。我们将定义超链接并使用基于类的视图进行工作。然后，我们将利用通用类和通用视图，这些视图将通用和混合预定义的行为。我们将使用路由和端点，并准备我们的RESTful
    Web Service以与可浏览的API一起工作。我们将进行许多不同的HTTP请求来创建和检索具有相互关系资源。'
- en: '[Chapter 7](dj-rst-websvc_ch17.html), *Using Constraints, Filtering, Searching,
    Ordering, and Pagination*, describes the usage of the browsable API feature to
    navigate through the API with resources and relationships. We will add unique
    constraints to improve the consistency of the models in our RESTful Web Service.
    We will understand the importance of paginating results and configure and test
    a global limit/offset pagination scheme with Django REST framework. Then, we will
    create our own customized pagination class to ensure that requests won''t be able
    to require a huge number of elements on a single page. We will configure filter
    backend classes and incorporate code into the models to add filtering, searching,
    and ordering capabilities to the class-based views. We will create a customized
    filter and make requests to filter, search, and order results. Finally, we will
    use the browsable API to test pagination, filtering, and ordering.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](dj-rst-websvc_ch17.html)，*使用约束、过滤、搜索、排序和分页*，描述了如何使用可浏览的API功能通过资源和关系在API中进行导航。我们将添加唯一约束来提高我们RESTful
    Web Service中模型的一致性。我们将理解分页结果的重要性，并使用Django REST框架配置和测试一个全局限制/偏移分页方案。然后，我们将创建自己的定制分页类，以确保请求不会要求在单页上显示大量元素。我们将配置过滤器后端类，并将代码集成到模型中，以向基于类的视图添加过滤、搜索和排序功能。我们将创建一个定制的过滤器，并发送请求以过滤、搜索和排序结果。最后，我们将使用可浏览的API来测试分页、过滤和排序。'
- en: '[Chapter 8](dj-rst-websvc_ch17.html), *Securing the API with Authentication
    and Permissions*, presents the differences between authentication and permissions
    in Django, Django REST framework, and RESTful Web Services. We will analyze the
    authentication classes included in Django REST framework out of the box. We will
    follow the steps needed to provide security- and permissions-related data to models.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](dj-rst-websvc_ch17.html)，*使用认证和权限保护API*，展示了在Django、Django REST框架和RESTful
    Web服务中认证和权限之间的区别。我们将分析Django REST框架中包含的内置认证类。我们将遵循向模型提供安全和权限相关数据的步骤。'
- en: We will work with object-level permissions via customized permission classes
    and save information about users who make requests. We will configure permission
    policies and compose and send authenticated requests to understand how the permission
    policies work. We will use command-line tools and GUI tools to compose and send
    authenticated requests. We will browse the secure RESTful Web Service with the
    browsable API feature and work with a simple token-based authentication provided
    by Django REST framework to understand another way of authenticating requests.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过定制的权限类处理对象级权限，并保存有关发起请求的用户的信息。我们将配置权限策略，并组合并发送认证请求以了解权限策略的工作方式。我们将使用命令行工具和GUI工具来组合并发送认证请求。我们将使用可浏览的API功能浏览安全的RESTful
    Web服务，并使用Django REST框架提供的简单基于令牌的认证来了解另一种认证请求的方式。
- en: '[*Chapter 9*](dj-rst-websvc_ch17.html), *Applying Throttling Rules and Versioning
    Management*, focuses on the importance of throttling rules and how we can combine
    them with authentication and permissions in Django, Django REST framework, and
    RESTful Web Services. We will analyze the throttling classes included in Django
    REST framework out of the box. We will follow the necessary steps to configure
    many throttling policies in Django REST framework. We will work with global and
    scope-related settings. Then, we will use command-line tools to compose and send
    many requests to test how the throttling rules work. We will understand versioning
    classes and we will configure a URL path versioning scheme to allow us to work
    with two versions of our RESTful Web Service. We will use command-line tools and
    the Browsable API to understand the differences between the two versions.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](dj-rst-websvc_ch17.html)，*应用节流规则和版本管理*，重点关注节流规则的重要性以及我们如何将它们与Django、Django
    REST框架和RESTful Web服务中的认证和权限相结合。我们将分析Django REST框架中包含的内置节流类。我们将遵循在Django REST框架中配置多个节流策略的必要步骤。我们将处理全局和范围相关的设置。然后，我们将使用命令行工具来组合并发送多个请求以测试节流规则的工作方式。我们将理解版本类，并配置一个URL路径版本控制方案，以便我们能够处理我们RESTful
    Web服务的两个版本。我们将使用命令行工具和可浏览的API来了解两个版本之间的差异。'
- en: '[Chapter 10](dj-rst-websvc_ch18.html), *Automating Tests*, shows how to automate
    tests for our RESTful Web Services developed with Django and Django REST framework.
    We will use different packages, tools, and configurations to perform tests. We
    will write the first round of unit tests for our RESTful Web Service, run them,
    and measure tests code coverage. Then, we will analyze tests code coverage reports
    and write new unit tests to improve the test code coverage. We will understand
    the new tests code coverage reports and learn the benefits of a good test code
    coverage.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](dj-rst-websvc_ch18.html)，*自动化测试*，展示了如何自动化使用Django和Django REST框架开发的RESTful
    Web服务的测试。我们将使用不同的包、工具和配置来执行测试。我们将为RESTful Web服务编写第一轮单元测试，运行它们，并测量测试代码覆盖率。然后，我们将分析测试代码覆盖率报告，并编写新的单元测试以提高测试代码覆盖率。我们将理解新的测试代码覆盖率报告，并学习良好测试代码覆盖率的好处。'
- en: '[Appendix](dj-rst-websvc_ch10.html), *Solutions*, the right answers for the
    *Test Your Knowledge* sections of each chapter are included in the appendix.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[附录](dj-rst-websvc_ch10.html)，*解决方案*，包含每章“测试你的知识”部分的正确答案。这些内容包含在附录中。'
- en: To get the most out of this book
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: Any computer or device capable of running Python 3.6.3 or greater in Linux,
    macOS, or Windows.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 任何能够运行Python 3.6.3或更高版本的Linux、macOS或Windows的计算机或设备。
- en: Any computer or device capable of running a modern web browser compatible with
    HTML 5 and CSS 3 to work with the Browsable API feature included in Django REST
    framework.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 任何能够运行与现代Web浏览器兼容的HTML 5和CSS 3的计算机或设备，都可以用于与Django REST框架中包含的可浏览API功能一起工作。
- en: Download the example code files
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packtpub.com](http://www.packtpub.com)的账户下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: 'You can download the code files by following these steps:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register at [www.packtpub.com](http://www.packtpub.com/support).
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在[www.packtpub.com](http://www.packtpub.com/support)上登录或注册。
- en: Select the SUPPORT tab.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择支持选项卡。
- en: Click on Code Downloads & Errata.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击代码下载和勘误表。
- en: Enter the name of the book in the Search box and follow the onscreen instructions.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入本书的名称，并遵循屏幕上的说明。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本的以下软件解压缩或提取文件夹：
- en: WinRAR/7-Zip for Windows
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: WinRAR/7-Zip for Windows
- en: Zipeg/iZip/UnRarX for Mac
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Zipeg/iZip/UnRarX for Mac
- en: 7-Zip/PeaZip for Linux
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 7-Zip/PeaZip for Linux
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Django-RESTful-Web-Services](https://github.com/PacktPublishing/Django-RESTful-Web-Services/). We
    also have other code bundles from our rich catalog of books and videos available
    at **[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**.
    Check them out!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Django-RESTful-Web-Services](https://github.com/PacktPublishing/Django-RESTful-Web-Services/)。我们还有其他来自我们丰富图书和视频目录的代码包，可在**[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)**找到。查看它们吧！
- en: Download the color images
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [http://www.packtpub.com/sites/default/files/downloads/DjangoRESTfulWebServices_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/Bookname_ColorImages.pdf).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表彩色图像的PDF文件。您可以从这里下载：[http://www.packtpub.com/sites/default/files/downloads/DjangoRESTfulWebServices_ColorImages.pdf](http://www.packtpub.com/sites/default/files/downloads/Bookname_ColorImages.pdf)。
- en: Conventions used
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, user input, and Twitter handles.
    Here is an example: "Mount the downloaded `WebStorm-10*.dmg` disk image file as
    another disk in your system."'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“将下载的`WebStorm-10*.dmg`磁盘映像文件作为系统中的另一个磁盘挂载。”'
- en: 'A block of code is set as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目会以粗体显示：
- en: '[PRE1]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下所示：
- en: '[PRE2]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select System info from the Administration panel."'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**: 表示新术语、重要单词或屏幕上出现的单词。例如，菜单或对话框中的单词在文本中会这样显示。例如：“从管理面板中选择系统信息。”'
- en: Warnings or important notes appear like this.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要注意事项会像这样显示。
- en: Tips and tricks appear like this.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门会像这样显示。
- en: Get in touch
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: Email `feedback@packtpub.com` and mention the book title
    in the subject of your message. If you have questions about any aspect of this
    book, please email us at `questions@packtpub.com`.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**: 请发送电子邮件至 `feedback@packtpub.com`，并在邮件主题中提及书籍标题。如果您对本书的任何方面有疑问，请发送电子邮件至
    `questions@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**: 尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将不胜感激，如果您能向我们报告，我们将非常感谢。请访问
    [www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at `copyright@packtpub.com` with a
    link to the material.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果您在互联网上以任何形式遇到我们作品的非法副本，我们将不胜感激，如果您能提供位置地址或网站名称，我们将非常感谢。请通过 `copyright@packtpub.com`
    联系我们，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com/).'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**: 如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com/)。'
- en: Reviews
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用过这本书，为何不在购买它的网站上留下评论呢？潜在读者可以查看并使用您的客观意见来做出购买决定，Packt公司可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit : [packtpub.com](https://www.packtpub.com/).[](https://www.packtpub.com/)
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 想了解更多关于Packt的信息，请访问：[packtpub.com](https://www.packtpub.com/). [packtpub.com](https://www.packtpub.com/)
