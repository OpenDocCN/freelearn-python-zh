["```py\n    npx create-next-app@latest\n    ```", "```py\n        npm run dev\n        ```", "```py\n        const Home = () => {\n          return (\n            <div>Home</div>\n          )\n        }\n        export default Home\n        ```", "```py\n        @tailwind base;\n        @tailwind components;\n        @tailwind utilities;\n        ```", "```py\n    const Cars = () => {\n        return (\n            <div>Cars</div>\n        )\n    }\n    export default Cars\n    ```", "```py\nconst layout = ({ children }) => {\n    return (\n        <div className=\"p-4 bg-slate-300 border-2\n            border-black\">\n            <h2>Cars Layout</h2>\n            <p>More common cars functionality here.</p>\n            {children}\n        </div>\n    )\n}\nexport default layout\n```", "```py\n    import Link from \"next/link\"\n    const Navbar = async () => {\n        return (\n            <nav className=\"flex justify-between\n                items-center bg-gray-800 p-4\">\n                <h1 className=\"text-white\">Farm Cars</h1>\n                <div className=\"flex space-x-4 text-white\n                    child-hover:text-yellow-400\">\n                    <Link href=\"/\">Home</Link>\n                    <Link href=\"/cars\">Cars</Link>\n                    <Link href=\"/private\">Private</Link>\n                    <Link href=\"/login\">Login</Link>\n                </div>\n            </nav>\n        )\n    }\n    export default Navbar\n    ```", "```py\n      plugins: [\n        function ({ addVariant }) {\n          addVariant('child', '& > *');\n          addVariant('child-hover', '& > *:hover');\n        }\n      ],\n    ```", "```py\n    import Navbar from \"@/components/NavBar\";\n    ...\n    export default function RootLayout({ children }) {\n      return (\n        <html lang=\"en\">\n          <body>\n            <Navbar />\n            {children}\n          </body>\n        </html>\n      );\n    }\n    ```", "```py\n    API_URL=http://127.0.0.1:8000\n    ```", "```py\n    process.env.API_URL\n    ```", "```py\n    import Link from \"next/link\"\n    const Cars = async () => {\n        const data = await fetch(\n            `${process.env.API_URL}/cars/`, {\n            next: {\n                revalidate: 10\n            }\n        }\n        )\n        const cars = await data.json()\n        return (\n            <>\n                <h1>Cars</h1>\n                <div>\n                    {cars.map((car) => (\n                        <div key={car._id} className=\"m-4 bg-white p-2\">\n                            <Link href={`/cars/${car._id}`}>\n                                <p>{car.brand} {car.make} from {car.year}</p>\n                            </Link>\n                        </div>\n                    ))}\n                </div>\n            </>\n        )\n    }\n    export default Cars\n    ```", "```py\n    \"use client\"\n    const error = () => {\n      return (\n        <div className=\"bg-red-800 text-white p-3\">\n          There was an error while fetching car data!\n        </div>\n      )\n    }\n    export default error\n    ```", "```py\n    const SingleCar = () => {\n      throw new Error('Error')\n    }\n    export default SingleCar\n    ```", "```py\n    /** @type {import('next').NextConfig} */\n    const nextConfig = {\n      images: {\n        remotePatterns: [\n          {\n            hostname: 'res.cloudinary.com',\n          },\n        ]\n      }\n    };\n    export default nextConfig;\n    ```", "```py\n    npm run dev\n    ```", "```py\n    import {\n      redirect\n    } from \"next/navigation\"\n    import Image from \"next/image\"\n    const CarDetails = async ({\n      params\n    }) => {\n      const carId = params.id\n      const res = await fetch(\n        `${process.env.API_URL}/cars/${carId}`, {\n          next: {\n            revalidate: 10\n          }\n        }\n      )\n      if(!res.ok) {\n        redirect(\"/error\")\n      }\n      const data = await res.json()\n    ```", "```py\n    return (\n      <div className=\"p-4 flex flex-col justify-center\n        items-center min-h-full bg-white\">\n        <h1>{data.brand} {data.make} ({data.year})</h1>\n        <p>{data.description}</p>\n        <div className=\"p-2 shadow-md bg-white\">\n          <Image src={data.picture_url}\n            alt={`${data.brand} ${data.make}`}\n            width={600} height={400}\n            className=\"object-cover w-full\" />\n        </div>\n        <div className=\"grid grid-cols-2 gap-3 my-3\">\n          {data.pros && <div className=\"bg-green-200\n            p-5 flex flex-col justify-center\n            items-center\">\n            <h2>Pros</h2>\n            <ol className=\"list-decimal\">\n              {data.pros.map((pro, index) => (\n                <li key={index}>{pro}</li>\n              ))}\n            </ol>\n          </div>}\n          {data.cons && <div className=\"bg-red-200 p-5\n            flex flex-col justify-center items-center\">\n            <h2>Cons</h2>\n            <ol className=\"list-decimal\">\n              {data.cons.map((con, index) => (\n                <li key={index}>{con}</li>\n              ))}\n            </ol>\n          </div>}\n        </div>\n      </div >\n      )\n    }\n    export default CarDetails\n    ```", "```py\n    export async function generateStaticParams() {\n      const cars = await fetch(\n        `${process.env.API_URL}/cars/`).then((res) =>\n        res.json())\n      return cars.map((car) => ({id: car._id,}))\n    }\n    ```", "```py\nnpm run build\n```", "```py\nnpm run start\n```", "```py\nimport Link from \"next/link\"\nconst NotFoundPage = () => {\n  return (\n    <div className=\"min-h-screen flex flex-col\n      justify-center items-center\">\n      <h1>Custom Not Found Page</h1>\n      <p>take a look at <Link href=\"/cars\"\n        className=\"text-blue-500\">our cars</Link>\n      </p>\n   </div>\n  )\n}\nexport default NotFoundPage\n```", "```py\n    npm i iron-session\n    ```", "```py\n    export const sessionOptions = {\n      password:\n       \"complex_password_at_least_32_characters_long\",\n      cookieName: \"farmcars_session\",\n      cookieOptions: {\n        httpOnly: true,\n        secure: false,\n        maxAge: 60 * 60,\n      }\n    };\n    ```", "```py\n    \"use server\";\n    import { cookies } from \"next/headers\"\n    import { getIronSession } from \"iron-session\"\n    import { sessionOptions } from \"./lib\"\n    import { redirect } from \"next/navigation\"\n    export const getSession = async () => {\n      const session = await getIronSession(\n        cookies(), sessionOptions)\n        return session\n    }\n    ```", "```py\n    export const login = async (status, formData) => {\n      const username = formData.get(\"username\")\n      const password = formData.get(\"password\")\n      const result = await fetch(\n        `${process.env.API_URL}/users/login`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ username, password })\n        })\n      const data = await result.json()\n      const session = await getSession()\n      if (result.ok) {\n        session.username = data.username\n        session.jwt = data.token\n        await session.save()\n        redirect(\"/private\")\n        } else {\n          session.destroy()\n          return { error: data.detail }\n      }\n    }\n    ```", "```py\n    \"use client\"\n    import {login} from \"@/actions\"\n    import { useFormState } from \"react-dom\";\n    const LoginForm = () => {\n      const [state, formAction] = useFormState(login, {})\n    ```", "```py\n    return (\n        <div className=\"flex flex-col items-center justify-center max-w-sm mx-auto mt-10\">\n            <form className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\" action={formAction}>\n                <div className=\"mb-4\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                        Username\n                    </label>\n                    <input\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" id=\"username\" name=\"username\" type=\"text\" placeholder=\"Username\" required />\n                </div>\n                <div className=\"mb-6\">\n                    <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                        Password\n                    </label>\n                    <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\" id=\"password\" name=\"password\" type=\"password\" placeholder=\"******************\" required />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                    <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 w-full rounded focus:outline-none focus:shadow-outline\" type=\"submit\">\n                        Sign In\n                    </button>\n                </div>\n                <pre>{JSON.stringify(state, null, 2)}</pre>\n            </form>\n        </div >\n    )\n    }\n    export default LoginForm\n    ```", "```py\n    import LoginForm from \"@/components/LoginForm\"\n    const page = () => {\n      return (\n        <div>\n          <h2>Login Page</h2>\n          <LoginForm />\n        </div>\n      )\n    }\n    export default page\n    ```", "```py\n    import { getSession } from \"@/actions\"\n    import { redirect } from \"next/navigation\"\n    const page = async () => {\n      const session = await getSession()\n      if (!session?.jwt) {\n        redirect(\"/login\")\n      }\n      return (\n        <div className=\"p-4\">\n          <h1>Private Page</h1>\n          <pre>{JSON.stringify(session, null, 2)}</pre>\n        </div>\n      )\n    }\n    export default page\n    ```", "```py\n    export const logout = async () => {\n      const session = await getSession()\n      session.destroy()\n      redirect(\"/\")\n    }\n    ```", "```py\n    import { logout } from \"@/actions\"\n    const LogoutForm = () => {\n      return (\n        <form action={logout}>\n          <button className=\"bg-blue-500\n              hover:bg-blue-700\" type=\"submit\">\n              Logout\n          </button>\n       </form>\n      )\n    }\n    export default LogoutForm\n    ```", "```py\n    import Link from \"next/link\"\n    import { getSession } from \"@/actions\";\n    import LogoutForm from \"./LogoutForm\";\n    ```", "```py\n    const Navbar = async () => {\n      const session = await getSession()\n      return (\n        <nav className=\"flex justify-between items-center\n          bg-gray-800 p-4\">\n          <h1 className=\"text-white\">Farm Cars</h1>\n          <div className=\"flex space-x-4 text-white\n            child-hover:text-yellow-400\">\n            <Link href=\"/\">Home</Link>\n            <Link href=\"/cars\">Cars</Link>\n            <Link href=\"/private\">Private</Link>\n            {!session?.jwt && <Link\n              href=\"/login\">Login</Link>}\n            {session?.jwt && <LogoutForm />}\n          </div>\n        </nav>\n      )\n    }\n    export default Navbar\n    ```", "```py\n    const InputField = ({ props }) => {\n      // eslint-disable-next-line react/prop-types\n      const { name, type } = props\n      return (\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700\n            text-sm font-bold mb-2\" htmlFor={name}>\n              {name}\n          </label>\n          <input className=\"shadow appearance-none\n            border rounded w-full py-2 px-3\n            text-gray-700 leading-tight\n            focus:outline-none focus:shadow-outline\"\n            id={name}\n            name={name}\n            type={type}\n            placeholder={name}\n            required\n            autoComplete=\"off\"\n          />\n        </div>\n      )\n    }\n    export default InputField\n    ```", "```py\n    \"use client\"\n    import { createCar } from \"@/actions\"\n    import { useFormState } from \"react-dom\"\n    import InputField from \"./InputField\"\n    const CarForm = () => {\n      let formArray = [\n        {\n          name: \"brand\",\n          type: \"text\"\n        },\n        {\n          name: \"make\",\n          type: \"text\"\n        },\n        {\n          name: \"year\",\n          type: \"number\"\n        },\n        {\n          name: \"price\",\n          type: \"number\"\n        },\n        {\n          name: \"km\",\n          type: \"number\"\n        },\n        {\n          name: \"cm3\",\n          type: \"number\"\n        },\n        {\n          name: \"picture\",\n          type: \"file\"\n        }\n      ]\n    ```", "```py\n    const [state, formAction] = useFormState(\n      createCar, {})\n      return (\n        <div className=\"flex items-center justify-center\">\n          <pre>{JSON.stringify(state, null, 2)}</pre>\n            <div className=\"w-full max-w-xs\">\n              <form className=\"bg-white shadow-md rounded\n                px-8 pt-6 pb-8 mb-4\"\n                action={formAction}>\n                  <h2 className=\"text-center text-2xl\n                    font-bold mb-6\">Insert new car\n                  </h2>\n                  {formArray.map((item, index) => (\n                  <InputField key={index}\n                    props={{\n                    name: item.name, type: item.type\n                    }} />\n                   ))}\n                   <div className=\"flex items-center\n                     justify-between\">\n                     <button className=\"bg-gray-900\n                       hover:bg-gray-700 text-white w-full\n                       font-bold py-2 px-4 rounded\n                       focus:outline-none\n                       focus:shadow-outline\"\n                       type=\"submit\">Save new car\n                     </button>\n                   </div>\n                 </form>\n               </div>\n             </div>\n           )\n      }\n    export default CarForm\n    ```", "```py\n    import CarForm from \"@/components/CarForm\"\n    import {getSession} from \"@/actions\"\n    import { redirect } from \"next/navigation\"\n    const page = async () => {\n      const session = await getSession()\n      if (!session?.jwt) {\n        redirect(\"/login\")\n        }\n      return (\n        <div className=\"p-4\">\n          <h1>Private Page</h1>\n          <CarForm />\n        </div>\n      )\n    }\n    export default page\n    ```", "```py\n    export const createCar = async (state, formData) => {\n      const session = await getSession()\n      const jwt = session.jwt\n      const result = await fetch(`${\n        process.env.API_URL}/cars/`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${jwt}`,\n            },\n            body: formData\n        })\n        const data = await result.json()\n        if (result.ok) {\n          redirect(\"/\")\n        } else {\n          return { error: data.detail }\n        }\n    }\n    ```", "```py\n    export const metadata = {\n      title: \"Farm Cars App\",\n      description: \"Next.js + FastAPI + MongoDB App\",\n    };\n    ```", "```py\n    export async function generateMetadata({ params }, parent) {\n        const carId = params.id\n        const car = await fetch(`${process.env.API_URL}/cars/${carId}`).then((res) => res.json())\n        const title = `FARM Cars App - ${car.brand} ${car.make} (${car.year})`\n        return { title }\n    }\n    ```", "```py\n    git add .\n    ```", "```py\n    git commit -m \"Next.js project\"\n    ```", "```py\n    git branch -M main\n    ```", "```py\n    git remote add origin https://github.com/<your username>/<name_of_the_repo>.git\n    ```", "```py\n    git push -u origin main\n    ```", "```py\nnpm run start\n```"]