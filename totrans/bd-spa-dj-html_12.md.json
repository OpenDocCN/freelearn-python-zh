["```py\n<script type=\"module\" src=\n```", "```py\nhttps://unpkg.com/@hotwired/stimulus@3.0.1/dist/stimulus.js\n```", "```py\n> \n```", "```py\nnpm i @hotwired/stimulus\n```", "```py\n    mkdir -p static/js/vendors/\n    cp node_modules/@hotwired/stimulus/dist/stimulus. Js static/js/vendors/  \n    ```", "```py\n    touch static/js/main.js\n    ```", "```py\n    import { Application } from \"./vendors/stimulus.js\";\n    window.Stimulus = Application.start();\n    ```", "```py\n    <script defer type=\"module\" \n      src=\"img/main.js' %}\"></script>\n    ```", "```py\nimport { Controller } from \"../vendors/stimulus.js\".\n```", "```py\nexport default class extends Controller {\n```", "```py\n   // Variables linked to inputs.\n```", "```py\n   static targets = [ \"input1\" ]\n```", "```py\n   // Constructor or function to be executed when the\n```", "```py\n   // controller is loaded.\n```", "```py\n   connect() {\n```", "```py\n   }\n```", "```py\n   // Simple function\n```", "```py\n   myFunction(event) {\n```", "```py\n   }\n```", "```py\n}\n```", "```py\nimport { Controller } from \"../vendors/stimulus.js\"\n```", "```py\nexport default class extends Controller {\n```", "```py\n  static targets = [ \"myText\" ]\n```", "```py\n    connect() {\n```", "```py\n      // Connect to the WebSocket server\n```", "```py\n        this.myWebSocket = new WebSocket(\n```", "```py\n          'ws://hello.localhost/ws/example/');\n```", "```py\n        // Listen for messages from the server\n```", "```py\n        this.myWebSocket.addEventListener(\"message\",\n```", "```py\n                                          (event) => {\n```", "```py\n            // Parse the data received\n```", "```py\n            const data = JSON.parse(event.data);\n```", "```py\n            // Renders the HTML received from the Consumer\n```", "```py\n            const newFragment = document.createRange().\n```", "```py\n              createContextualFragment(data.html);\n```", "```py\n            document.querySelector(data.selector).\n```", "```py\n              replaceChildren(newFragment);\n```", "```py\n        });\n```", "```py\n    }\n```", "```py\n    lowercaseToUppercase(event) {\n```", "```py\n      event.preventDefault()\n```", "```py\n      // Prepare the information we will send\n```", "```py\n      const data = {\n```", "```py\n          \"action\": \"text in capital letters\",\n```", "```py\n          \"data\": {\n```", "```py\n              \"text\": this.myTextTarget.value\n```", "```py\n          }\n```", "```py\n      };\n```", "```py\n      // Send the data to the server\n```", "```py\n      this.myWebSocket.send(JSON.stringify(data));\n```", "```py\n  }\n```", "```py\n}\n```", "```py\nimport { Application } from \"./vendors/stimulus.js\";\n```", "```py\nimport TransformerController from \n```", "```py\n  \"./controllers/transformer_controller.js\"; // New line\n```", "```py\nwindow.Stimulus = Application.start();\n```", "```py\n// New line\n```", "```py\nStimulus.register(\"transformer\", TransformerController);\n```", "```py\n<main>\n```", "```py\n<form>\n```", "```py\n<input type=\"text\" placeholder=\"Enter text\">\n```", "```py\n<input type=\"button\" value=\"Transform\">\n```", "```py\n</form>\n```", "```py\n<div id=\"results\"></div>\n```", "```py\n</main>\n```", "```py\n<element data-controller=\"alias\"></element>\n```", "```py\n<main data-controller=\"transformer\">\n```", "```py\n<div data-controller=\"aliasController\">\n```", "```py\n<button\n```", "```py\n  data-action=\n```", "```py\n    \"event->aliasController#functionOfTheController\"\n```", "```py\n>Click me!</button>\n```", "```py\n</div>\n```", "```py\n<input\n```", "```py\n  type=\"button\"\n```", "```py\n  value=\"Transform\"\n```", "```py\n  data-action=\"click->transformer#lowercaseToUppercase\"\n```", "```py\n>\n```", "```py\n<div data-controller=\"aliasController\">\n```", "```py\n<input type=\"text\" data-aliasController-target=\"name\">\n```", "```py\n</div>\n```", "```py\nstatic targets = [ \"name\" ]\n```", "```py\nthis.nameTarget\n```", "```py\nstatic targets = [ \"myText\" ]\n```", "```py\n<input type=\"text\" data-transformer-target=\"myText\" \n```", "```py\n  placeholder=\"Enter text\">\n```", "```py\nfrom channels.generic.websocket import JsonWebsocketConsumer\n```", "```py\nfrom django.template.loader import render_to_string \n```", "```py\nclass ExampleConsumer(JsonWebsocketConsumer): \n```", "```py\n    def connect(self):\n```", "```py\n        \"\"\"Event when client connects\"\"\"\n```", "```py\n        # Accept the connection\n```", "```py\n        self.accept()\n```", "```py\n    def receive_json(self, data_received):\n```", "```py\n        # Get the data\n```", "```py\n        data = data_received['data']\n```", "```py\n        # Depending on the action we will do one task or\n```", "```py\n        # another.\n```", "```py\n        match data_received['action']:\n```", "```py\n            case 'text in capital letters':\n```", "```py\n                self.send_uppercase(data)\n```", "```py\n    def send_uppercase(self, data):\n```", "```py\n        \"\"\"Event: Send html to client\"\"\"\n```", "```py\n        self.send_json( {\n```", "```py\n                'selector': '#results',\n```", "```py\n                'html': data[\"text\"]. upper(),\n```", "```py\n            })\n```", "```py\n<input\n```", "```py\n  type=\"text\"\n```", "```py\n  data-transformer-target=\"myText\"\n```", "```py\n  placeholder=\"Enter text\"\n```", "```py\n  data-action=\"input->transformer#lowercaseToUppercase\"\n```", "```py\n>\n```", "```py\nWebSocket.close()\n```"]