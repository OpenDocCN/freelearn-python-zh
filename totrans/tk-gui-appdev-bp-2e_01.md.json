["```py\nsudo apt install tk8.6-dev\nsudo apt install python3-tk\n```", "```py\n./configure\n make\n make test\n sudo make altinstall\n```", "```py\n$ python3.6\n```", "```py\n>>> import tkinter\n```", "```py\n>>> import tkinter\n>>> tkinter._test()\n```", "```py\n$ which python3.6\n```", "```py\n$ virtualenv -p /location/of /python3.6   myvenv/\n```", "```py\n$ source myenv/bin/activate\n```", "```py\nimport tkinter as tk\nroot = tk.Tk() #line 2\nroot.mainloop()\n```", "```py\n$ python 1.01.py\n```", "```py\nmy_widget = tk.Widget-name (its container window, ** its configuration options)\n```", "```py\nimport tkinter as tk\nroot = tk.Tk()\nlabel = tk.Label(root, text=\"I am a label widget\")\nbutton = tk.Button(root, text=\"I am a button\")\nlabel.pack()\nbutton.pack()\nroot.mainloop()\n```", "```py\nmy_label = tk.Label(root, text=\"I am a label widget\")\nmy_label.pack()\n```", "```py\ntk.Label(root, text=\"I am a label widget\").pack()\n```", "```py\nLabel(parent, text=\"Enter your Password:\")\nButton(parent, text=\"Search\")\nCheckbutton(parent, text=\"Remember Me\", variable=v, value=True)\nEntry(parent, width=30)\nRadiobutton(parent, text=\"Male\", variable=v, value=1)\nRadiobutton(parent, text=\"Female\", variable=v, value=2)\nOptionMenu(parent, var, \"Select Country\", \"USA\", \"UK\", \"India\",\"Others\")\nScrollbar(parent, orient=VERTICAL, command= text.yview)\n```", "```py\nWidget-name(its_parent, **its_configuration_options)\n```", "```py\n        frame = Frame(root)\n        frame.pack()\n```", "```py\nimport tkinter as tk\nroot = tk.Tk()\nframe = tk.Frame(root)\n# demo of side and fill options\ntk.Label(frame, text=\"Pack Demo of side and fill\").pack()\ntk.Button(frame, text=\"A\").pack(side=tk.LEFT, fill=tk.Y)\ntk.Button(frame, text=\"B\").pack(side=tk.TOP, fill=tk.X)\ntk.Button(frame, text=\"C\").pack(side=tk.RIGHT, fill=tk.NONE)\ntk.Button(frame, text=\"D\").pack(side=tk.TOP, fill=tk.BOTH)\nframe.pack()\n# note the top frame does not expand or fill in X or Y directions\n# demo of expand options - best understood by expanding the root\n#vwidget and seeing the effect on all the three buttons below.\ntk.Label (root, text=\"Pack Demo of expand\").pack()\ntk.Button(root, text=\"I do not expand\").pack()\ntk.Button(root, text=\"I do not fill x but I expand\").pack(expand = 1)\ntk.Button(root, text=\"I fill x and expand\").pack(fill=tk.X, expand=1)\nroot.mainloop()\n```", "```py\nparent = tk.Frame(root)\n# placing widgets top-down\ntk.Button(parent, text='ALL IS WELL').pack(fill=tk.X)\ntk.Button(parent, text='BACK TO BASICS').pack(fill=tk.X)\ntk.Button(parent, text='CATCH ME IF U CAN').pack(fill=tk.X)\n# placing widgets side by side\ntk.Button(parent, text='LEFT').pack(side=tk.LEFT)\ntk.Button(parent, text='CENTER').pack(side=tk.LEFT)\ntk.Button(parent, text='RIGHT').pack(side=tk.LEFT)\nparent.pack()\n```", "```py\n>> import tkinter\n>>> help(tkinter.Pack) \n```", "```py\n\nimport tkinter as tk\nroot = tk.Tk()\ntk.Label(root, text=\"Username\").grid(row=0, sticky=tk.W)\ntk.Label(root, text=\"Password\").grid(row=1, sticky=tk.W)\ntk.Entry(root).grid(row=0, column=1, sticky=tk.E)\ntk.Entry(root).grid(row=1, column=1, sticky=tk.E)\ntk.Button(root, text=\"Login\").grid(row=2, column=1, sticky=tk.E)\nroot.mainloop()\n```", "```py\nimport tkinter as tk\nparent = tk.Tk()\nparent.title('Find & Replace')\ntk.Label(parent, text=\"Find:\").grid(row=0, column=0, sticky='e')\ntk.Entry(parent, width=60).grid(row=0, column=1, padx=2, pady=2, \n                                sticky='we', columnspan=9)\ntk.Label(parent, text=\"Replace:\").grid(row=1, column=0, sticky='e')\ntk.Entry(parent).grid(row=1, column=1, padx=2, pady=2, sticky='we',\n                       columnspan=9)\ntk.Button(parent, text=\"Find\").grid( row=0, column=10, sticky='e' + 'w', \n                                padx=2, pady=2)\ntk.Button(parent, text=\"Find All\").grid(\n                     row=1, column=10, sticky='e' + 'w', padx=2)\ntk.Button(parent, text=\"Replace\").grid(row=2, column=10, sticky='e' +\n                               'w', padx=2)\ntk.Button(parent, text=\"Replace All\").grid(\n                     row=3, column=10, sticky='e' + 'w', padx=2)\ntk.Checkbutton(parent, text='Match whole word only').grid(\n                     row=2, column=1, columnspan=4, sticky='w')\ntk.Checkbutton(parent, text='Match Case').grid(\n                     row=3, column=1, columnspan=4, sticky='w')\ntk.Checkbutton(parent, text='Wrap around').grid(\n                     row=4, column=1, columnspan=4, sticky='w')\ntk.Label(parent, text=\"Direction:\").grid(row=2, column=6, sticky='w')\ntk.Radiobutton(parent, text='Up', value=1).grid(\n                     row=3, column=6, columnspan=6, sticky='w')\ntk.Radiobutton(parent, text='Down', value=2).grid(\n                     row=3, column=7, columnspan=2, sticky='e')\nparent.mainloop()\n```", "```py\n>>> import tkinter\n>>> help(tkinter.Grid)\n```", "```py\nw.columnconfigure(n, option=value, ...) AND\nw.rowconfigure(n, option=value, ...)\n```", "```py\nimport tkinter as tk\nroot = tk.Tk()\n# Absolute positioning\ntk.Button(root, text=\"Absolute Placement\").place(x=20, y=10)\n# Relative positioning\ntk.Button(root, text=\"Relative\").place(relx=0.8, rely=0.2, relwidth=0.5, \n                              width=10,  anchor=tk.NE)\nroot.mainloop()\n```", "```py\n>>> import tkinter\n>>> help(tkinter.Place)\n```", "```py\ndef my_callback ():\n   # do something when button is clicked\n```", "```py\ntk.Button(root, text=\"Click me\", command=my_callback)\n```", "```py\ndef my_callback (argument)\n   #do something with argument\n```", "```py\ntk.Button(root,text=\"Click\", command=lambda: my_callback ('some argument'))\n```", "```py\nlambda arg: #do something with arg in a single line\n```", "```py\nsquare = lambda x: x**2\n```", "```py\n>> print(square(5)) ## prints 25 to the console\n```", "```py\nwidget.bind(event, handler, add=None)\n```", "```py\nimport tkinter as tk\nroot = tk.Tk()\ntk.Label(root, text='Click at different\\n locations in the frame below').pack()\n\ndef callback(event):\n    print(dir(event))\n    print(\"you clicked at\", event.x, event.y)\n\nframe = tk.Frame(root, bg='khaki', width=130, height=80)\nframe.bind(\"<Button-1>\", callback)\nframe.pack()\nroot.mainloop()\n```", "```py\n [ '__doc__' , '__module__' , 'char' , 'delta' , 'height' , 'keycode' , 'keysym' , keysym_num' , 'num' , 'send_event' , 'serial' , 'state' ,'time' , 'type' , 'widget' , 'width' , 'x' , 'x_root' , 'y' , 'y_root ']\n```", "```py\n['__doc__', '__module__', 'char', 'delta', 'height', 'keycode', 'keysym', 'keysym_num', 'num', 'send_event', 'serial', 'state', 'time', 'type', 'widget', 'width', 'x', 'x_root', 'y', 'y_root']\n You clicked at 63 36.\n```", "```py\n<[event modifier-]...event type [-event detail]>\n```", "```py\nwidget.bind(\"<Button-1>\", callback) #bind widget to left mouse click\nwidget.bind(\"<Button-2>\", callback) # bind to right mouse click\nwidget.bind(\"<Return>\", callback)# bind to Return(Enter) Key\nwidget.bind(\"<FocusIn>\", callback) #bind to Focus in Event\nwidget.bind(\"<KeyPress-A>\", callback)# bind to keypress A\nwidget.bind(\"<KeyPress-Caps_Lock>\", callback)# bind to CapsLock keysym\nwidget.bind(\"<KeyPress-F1>\", callback)# bind widget to F1 keysym\nwidget.bind(\"<KeyPress-KP_5>\", callback)# bind to keypad number 5\nwidget.bind(\"<Motion>\", callback) # bind to motion over widget\nwidget.bind(\"<Any-KeyPress>\", callback) # bind to any keypress\n```", "```py\nwidget.bind_all(event, callback, add=None)\n```", "```py\nroot.bind_all('<F1>', show_help)\n```", "```py\nw.bind_class(class_name, event, callback, add=None)\n```", "```py\nmy_entry.bind_class('Entry', '<Control-V>', paste)\n```", "```py\nmy_string = tk.StringVar()\nticked_yes = tk.BooleanVar()\ngroup_choice = tk.IntVar()\nvolume = tk.DoubleVar() \n```", "```py\ntk.Entry(root, textvariable=my_string)\ntk.Checkbutton(root, text=\"Remember Me\", variable=ticked_yes)\ntk.Radiobutton(root, text=\"Option1\", variable=group_choice, value=\"option1\") \ntk.Scale(root, label=\"Volume Control\", variable=volume, from =0, to=10)\n```", "```py\nmy_var.set(\"FooBar\") # setting value of variable\nmy_var.get() # Assessing the value of variable from say a callback \n```", "```py\nwidget.unbind(event)\n```", "```py\nentry.unbind('<Alt-Shift-5>')\nroot.unbind_all('<F1>')\nroot.unbind_class('Entry', '<KeyPress-Del>')\n```", "```py\nwidget.event_add('<<commit>>', '<KeyRelease-F9>')\n```", "```py\nwidget.bind('<<commit>>', callback)\n```", "```py\n>>> import tkinter\n>>> help(tkinter.Event)\n```", "```py\nmy_button = tk.Button(parent, **configuration options)\n```", "```py\nmy_button.configure(**options)\n```", "```py\n{font family} fontsize fontstyle\n```", "```py\nwidget.configure (font='Times 8')\nwidget.configure(font='Helvetica 24 bold italic')\n```", "```py\nbutton.configure(wraplength=\"36p\")\n```", "```py\nbutton.configure(borderwidth=5)\n```", "```py\nbutton.configure(relief='raised')\n```", "```py\nbutton.configure(cursor='cross')\n```", "```py\n*background: AntiqueWhite1\n*Text*background: #454545\n*Button*foreground: gray55\n*Button*relief: raised\n*Button*width: 3\n```", "```py\nroot.option_readfile('optionDB.txt')\n```", "```py\nimport tkinter as tk\nroot = tk.Tk()\nroot.configure(background='#4D4D4D')#top level styling\n# connecting to the external styling optionDB.txt\nroot.option_readfile('optionDB.txt')\n#widget specific styling\nmytext = tk.Text(root, background='#101010', foreground=\"#D6D6D6\",\n              borderwidth=18, relief='sunken',width=17, height=5)\nmytext.insert(tk.END, \"Style is knowing who you are, what you want to\n                   say, and not giving a damn.\")\nmytext.grid(row=0, column=0, columnspan=6, padx=5, pady=5)\n# all the below widgets get their styling from optionDB.txt file\ntk.Button(root, text='*').grid(row=1, column=1)\ntk.Button(root, text='^').grid(row=1, column=2)\ntk.Button(root, text='#').grid(row=1, column=3)\ntk.Button(root, text='<').grid(row=2, column=1)\ntk.Button(root, text='OK', cursor='target').grid(row=2, column=2)#changing cursor style\ntk.Button(root, text='>').grid(row=2, column=3)\ntk.Button(root, text='+').grid(row=3, column=1)\ntk.Button(root, text='v').grid(row=3, column=2)\ntk.Button(root, text='-').grid(row=3, column=3)\nfor i in range(9):\n   tk.Button(root, text=str(i+1)).grid(row=4+i//3, column=1+i%3)\nroot.mainloop()\n```", "```py\n>>> import tkinter\n>>> help(tkinter.Pack)\n```", "```py\n >>>help(tkinter.Label)\n```", "```py\n>>> import tkinter\n>>> help(tkinter.Pack)\n>>> help(tkinter.Grid)\n>>> help(tkinter.Place)\n```"]