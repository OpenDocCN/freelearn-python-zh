- en: Appendix A. Answers to Pop Quizes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 附录A. 突击测验答案
- en: Chapter 2
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章
- en: Pop quiz – doctest syntax
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – doctest语法
- en: Test expression always start with `>>>`.
  id: totrans-3
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试表达式总是以 `>>>` 开头。
- en: Continuation on lines always start with ...
  id: totrans-4
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 行的延续始终以...开始
- en: The expected output begins immediately after the expression, and continues until
    the next blank line.
  id: totrans-5
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 预期输出从表达式之后立即开始，直到下一个空白行。
- en: By using the normalize whitespace directive.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过使用规范化空白指令。
- en: doctest ignores everything between the `Traceback (most recent last call)`.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: doctest忽略`Traceback (most recent last call)`之间的所有内容。
- en: All of the later code within the same text file can see the variable.
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同一文本文件中的所有后续代码都可以看到这个变量。
- en: We care because tests are supposed to be isolated from each other, and if two
    tests use the same variable, they can influence each others' results.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们关心这一点，因为测试应该彼此独立，如果两个测试使用相同的变量，它们可能会相互影响结果。
- en: We can represent that section with an ellipsis(`...`) in the expected output.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以用省略号（`...`）在预期输出中表示该部分。
- en: Chapter 3
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章
- en: Pop quiz – understanding units
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 理解单位
- en: '3 units exist: `__init__`, `method1` and `method2`.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 3个单元存在：`__init__`、`method1`和`method2`。
- en: Both `method1` and `method2` assume the correct operation of `__init__`, and
    additionally `method2` assumes the correct operation of `method1`.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`method1`和`method2`都假设`__init__`的正确操作，并且`method2`还假设`method1`的正确操作。'
- en: Tests for `method2` would need to use a fake `method1`.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对`method2`的测试需要使用假的`method1`。
- en: Pop quiz – unit testing during design
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 设计期间的单元测试
- en: The tests we're building now are the foundation of the whole development process.
    The choices we make here affect everything that comes after; it's important to
    do it right.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在构建的测试是整个开发过程的基础。我们在这里做出的选择将影响之后的一切；正确地完成这一点很重要。
- en: If the people who write the specification aren't the same people who are writing
    the code, then it's important for the coders to start involving themselves as
    soon as possible, to keep the whole process within the bounds of what can usefully
    be done. If the specifiers are the coders, then the question is academic.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果编写规范的人与编写代码的人不是同一个人，那么编码者尽早参与其中，以确保整个过程在可以有用地完成的范围之内是很重要的。如果规范制定者是编码者，那么这个问题就是学术性的。
- en: The big advantage is that the tests allow the code's interfaces to be test-driven,
    before the effort gets put into actually implementing them. The primary disadvantage
    is that the tests can lock in a design which might have benefitted from further
    evolution.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最大的优点是，测试允许在真正实现它们之前，以测试驱动的方式测试代码的接口。主要的缺点是，测试可能会锁定一个可能从进一步演变中受益的设计。
- en: Pop quiz – unit testing
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 单元测试
- en: The test should be written before the code that will be tested, based on the
    expectations for that code.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试应该在将要测试的代码之前编写，基于对该代码的期望。
- en: True.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 是的。
- en: Tests should be run as often as possible. It is very useful to run the tests
    regularly while coding, as well as just before storing the code into a version
    control system.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 应尽可能多地运行测试。在编码时定期运行测试，以及在将代码存储到版本控制系统之前运行测试非常有用。
- en: You will spend most of you time using the output of the tests as a tool to guide
    you in finding and fixing errors in the code.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将花费大部分时间使用测试的输出作为工具，帮助你找到和修复代码中的错误。
- en: Chapter 4
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章
- en: Pop quiz – Mocker usage
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – Mocker使用
- en: '`IN`.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`IN`。'
- en: Pass `None` as the upper bound.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`None`作为上限传递。
- en: It checks that the mocked objects were actually used in the way that we described.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它检查模拟对象是否确实以我们描述的方式被使用。
- en: Chapter 5
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章
- en: Pop quiz – basic unittest knowledge
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 基本unittest知识
- en: '[PRE0]'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Use the `assertAlmostEqual` method.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用`assertAlmostEqual`方法。
- en: You would use `assertTrue` if none of the more specialized assertions suited
    your needs. You would use `fail` if you needed to express the conditions for test
    failure, so complex that they don't fit comfortably into a single Boolean expression.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你没有更适合你需求的更专业化的断言，你会使用`assertTrue`。如果你需要表达测试失败的复杂条件，以至于它们不适合放入一个单一的布尔表达式中，你会使用`fail`。
- en: Pop quiz – text fixtures
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 文本固定装置
- en: To provide each test with an identical, isolated environment.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为每个测试提供一个相同、独立的运行环境。
- en: Add `setUp` and/or `tearDown` methods to a `TestCase` subclass.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`setUp`和/或`tearDown`方法添加到`TestCase`子类中。
- en: A test fixture can consist of either or both methods, so the answer is yes.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 测试固定装置可以由一个或两个方法组成，所以答案是肯定的。
- en: Chapter 6
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章
- en: Pop quiz – testing with Nose
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 – 使用Nose进行测试
- en: put `processes=4` in your Nose configuration file.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在你的Nose配置文件中设置`processes=4`。
- en: add `--include="specs"` to the Nose command line.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Nose命令行中添加`--include="specs"`。
- en: '`unit_tests`, `TestFiles`, and `test_files` will be recognized.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`unit_tests`、`TestFiles`和`test_files`将被识别。'
- en: Chapter 7
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章
- en: Pop quiz – test-driven development
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 测试驱动开发
- en: Because the testable specification didn't follow unit testing discipline, it
    didn't satisfy my need for unit tests. I had to write additional tests to fill
    that need. It's fine to do that, as long as I don't skimp on the real unit tests.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于可测试的规范没有遵循单元测试规范，它没有满足我对单元测试的需求。我不得不编写额外的测试来满足这一需求。这样做是可以的，只要我不在真正的单元测试上节省。
- en: In no way. It's actually desirable to run your tests as often as possible.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 绝对不是。实际上，尽可能频繁地运行你的测试是可取的。
- en: You've lost the opportunity to give your code's planned interface a test drive
    before you set it in stone. You've lost the opportunity to write down your expectations
    without having them contaminated by the actual behavior of your first implementation.
    You've lost the opportunity to have the computer tell you what needs to be done
    to create a working implementation.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你失去了在你将代码的计划接口固定之前对其进行测试的机会。你失去了在没有受到你第一次实现的实际行为污染的情况下写下你的期望的机会。你失去了让计算机告诉你需要做什么来创建一个有效实现的机会。
- en: Chapter 8
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章
- en: Pop quiz – the Twill language
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - Twill语言
- en: Whatever form was last touched by the `formvalue` command is submitted.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后被`formvalue`命令触及的任何形式都会被提交。
- en: The `notfind` command.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`notfind`命令。'
- en: Twill will report that the entire script failed, and not execute any of the
    later commands.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Twill将报告整个脚本失败，并且不会执行任何后续命令。
- en: Pop quiz – browser methods
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 浏览器方法
- en: The value you pass as a parameter is matched against the form's name, number,
    and ID.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你传递给参数的值将与表单的名称、编号和ID进行匹配。
- en: The `clicked` method moves the simulated input focus to a new control on the
    web page.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`clicked`方法将模拟输入焦点移动到网页上的新控件。'
- en: The `code` command checks the response code and raises an exception if it doesn't
    match an expected value. The `get_code` method simply returns the response code.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`code`命令检查响应代码，如果它与预期值不匹配，则抛出异常。`get_code`方法简单地返回响应代码。'
- en: Chapter 9
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章
- en: Pop quiz – diagramming integration
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 集成测试绘图
- en: Those units wouldn't exist within the same class if they weren't related to
    each other. By grouping them into their classes visually, we can take advantage
    of that relationship to make our diagrams more easily.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果这些单元之间没有关联，它们就不会存在于同一个类中。通过将它们视觉上分组到它们的类中，我们可以利用这种关系使我们的图表更容易理解。
- en: Usually, it saves us trouble later on. Things that are related to each other
    at one level are often part of the same thing at a higher level.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通常，这可以让我们在以后避免麻烦。在某一层面上相互关联的事物往往在更高层面上是同一事物的组成部分。
- en: In testing, as in chemistry, it's important to change only one thing at a time.
    If we pull together more than two things in a single step, we've changed more
    than one thing, and so we can lose track of where any problems we find came from.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在测试中，就像在化学中一样，一次只改变一件事很重要。如果我们一次性拉起两个以上的东西，我们就改变了不止一件事，因此我们可能会失去追踪我们找到的任何问题的来源。
- en: Pop quiz – writing integration tests
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 编写集成测试
- en: The ones in the smallest circles, especially if they don't have any lines pointing
    from themselves to other circles.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在最小圆圈中的那些，尤其是如果它们没有任何线条指向其他圆圈的话。
- en: Start from the smallest circles involving that code, and build up step by step
    until you're ready to integrate it with your earlier code.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从包含该代码的最小圆圈开始，逐步构建，直到你准备好将其与之前的代码集成。
- en: When we were doing unit testing, even other instances of the same class were
    mocked; we were concerned that this code did what it was supposed to, without
    involving anything else. Now that we're doing integration testing, we need to
    test that instances of the same class interact correctly with each other, or with
    themselves when they're allowed to retain state from one operation to the next.
    The two kinds of tests cover different things, so it makes sense that we would
    need both.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们进行单元测试时，即使是同一类的其他实例也被模拟了；我们关心的是这段代码是否按预期执行，而不涉及任何其他东西。现在我们正在进行集成测试，我们需要测试同一类的实例是否正确地相互交互，或者当它们被允许从一个操作保留状态到下一个操作时，它们是否与自己正确交互。这两种测试覆盖了不同的事情，所以我们需要两者都有是有道理的。
- en: A system test is the final stage of integration testing. It's a test that involves
    the whole code base.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 系统测试是集成测试的最后阶段。这是一个涉及整个代码库的测试。
- en: Chapter 10
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第10章
- en: Pop quiz – code coverage
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 代码覆盖率
- en: It means that most of the code base was executed while running the tests.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这意味着在运行测试时，大部分代码库都被执行了。
- en: That would be a bad idea, because coverage doesn't tell you anything about the
    quality of your tests. It's for helping you find things that need to be tested,
    not for telling you whether your tests are any good.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 那将是一个糟糕的想法，因为覆盖率并不能告诉你测试的质量。它是用来帮助你找到需要测试的东西，而不是用来告诉你测试是否好。
- en: The most useful information that the coverage report provides is the list of
    lines that weren't executed, because that's what allows you to know what new tests
    you might want to add.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 覆盖率报告提供最有用的信息是未执行的代码行列表，因为那正是让你知道你可能需要添加哪些新测试的原因。
- en: Pop quiz – version control hooks
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 突击测验 - 版本控制钩子
- en: It can ensure that your tests are executed frequently, and can make you immediately
    aware when you're checking in broken code.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可以确保你的测试经常被执行，并且可以在你检查有缺陷的代码时立即让你意识到。
- en: Don't make it impossible to check in broken code. Don't make version control
    hooks a matter of company policy.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 不要让检查有缺陷的代码变得不可能。不要让版本控制钩子成为公司政策的问题。
- en: In a centralized version control system, the hooks are usually under the control
    of a system administrator, and executed on a server. In a distributed version
    control system, the hooks are usually under the control of the user, and executed
    on the user's computer.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在集中式版本控制系统中，钩子通常由系统管理员控制，并在服务器上执行。在分布式版本控制系统中，钩子通常由用户控制，并在用户的计算机上执行。
