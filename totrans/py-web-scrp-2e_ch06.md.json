["```py\n>>> from urllib.parse import urlencode\n>>> from urllib.request import Request, urlopen\n>>> LOGIN_URL = 'http://example.webscraping.com/user/login'\n>>> LOGIN_EMAIL = 'example@webscraping.com'\n>>> LOGIN_PASSWORD = 'example'\n>>> data = {'email': LOGIN_EMAIL, 'password': LOGIN_PASSWORD}\n>>> encoded_data = urlencode(data)\n>>> request = Request(LOGIN_URL, encoded_data.encode('utf-8'))\n>>> response = urlopen(request)\n>>> print(response.geturl())\n 'http://example.webscraping.com/user/login'\n\n```", "```py\n>>> import requests\n>>> response = requests.post(LOGIN_URL, data)\n>>> print(response.url)\n 'http://example.webscraping.com/user/login'\n\n```", "```py\nfrom lxml.html import fromstring\n\ndef parse_form(html): \n    tree = fromstring(html) \n    data = {} \n    for e in tree.cssselect('form input'): \n        if e.get('name'): \n            data[e.get('name')] = e.get('value') \n    return data \n\n```", "```py\n>>> html = requests.get(LOGIN_URL)\n>>> form = parse_form(html.content) \n>>> print(form) \n{'_formkey': 'a3cf2b3b-4f24-4236-a9f1-8a51159dda6d',\n '_formname': 'login',\n '_next': '/',\n 'email': '',\n 'password': '',\n 'remember_me': 'on'}\n\n```", "```py\n>>> html = requests.get(LOGIN_URL)\n>>> data = parse_form(html.content) \n>>> data['email'] = LOGIN_EMAIL \n>>> data['password'] = LOGIN_PASSWORD \n>>> response = requests.post(LOGIN_URL, data) \n>>> response.url \n'http://example.webscraping.com/user/login'\n\n```", "```py\n>>> response.cookies.keys()\n['session_data_places', 'session_id_places']\n>>> response.cookies.values()\n['\"8bfbd84231e6d4dfe98fd4fa2b139e7f:N-almnUQ0oZtHRItjUOncTrmC30PeJpDgmAqXZEwLtR1RvKyFWBMeDnYQAIbWhKmnqVp-deo5Xbh41g87MgYB-oOpLysB8zyQci2FhhgU-YFA77ZbT0hD3o0NQ7aN_BaFVrHS4DYSh297eTYHIhNagDjFRS4Nny_8KaAFdcOV3a3jw_pVnpOg2Q95n2VvVqd1gug5pmjBjCNofpAGver3buIMxKsDV4y3TiFO97t2bSFKgghayz2z9jn_iOox2yn8Ol5nBw7mhVEndlx62jrVCAVWJBMLjamuDG01XFNFgMwwZBkLvYaZGMRbrls_cQh\"',\n 'True']\n\n```", "```py\n>>> second_response = requests.post(LOGIN_URL, data, cookies=html.cookies)\n>>> second_response.url\n'http://example.webscraping.com/'\n\n```", "```py\n$ sqlite3 [path_to_your_chrome_browser]/Default/Cookies\nSQLite version 3.13.0 2016-05-18 10:57:30\nEnter \".help\" for usage hints.\nsqlite> .tables\ncookies meta\n\n```", "```py\n{\"windows\": [... \n  \"cookies\": [ \n    {\"host\":\"example.webscraping.com\", \n     \"value\":\"514315085594624:e5e9a0db-5b1f-4c66-a864\", \n     \"path\":\"/\", \n     \"name\":\"session_id_places\"} \n  ...] \n]} \n\n```", "```py\ndef load_ff_sessions(session_filename): \n    cookies = {}\n    if os.path.exists(session_filename): \n        json_data = json.loads(open(session_filename, 'rb').read()) \n        for window in json_data.get('windows', []): \n            for cookie in window.get('cookies', []): \n                cookies[cookie.get('name')] = cookie.get('value')\n    else: \n        print('Session filename does not exist:', session_filename)\n    return cookies\n\n```", "```py\n~/.mozilla/firefox/*.default/sessionstore.js \n\n```", "```py\n~/Library/Application Support/Firefox/Profiles/*.default/ \n   sessionstore.js \n\n```", "```py\n%APPDATA%/Roaming/Mozilla/Firefox/Profiles/*.default/sessionstore.js \n\n```", "```py\nimport os, glob \ndef find_ff_sessions(): \n    paths = [ \n        '~/.mozilla/firefox/*.default', \n        '~/Library/Application Support/Firefox/Profiles/*.default', \n        '%APPDATA%/Roaming/Mozilla/Firefox/Profiles/*.default' \n    ] \n    for path in paths: \n        filename = os.path.join(path, 'sessionstore.js') \n        matches = glob.glob(os.path.expanduser(filename)) \n        if matches: m\n            return matches[0] \n\n```", "```py\n >>> session_filename = find_ff_sessions() \n >>> cookies = load_ff_sessions(session_filename) \n >>> url = 'http://example.webscraping.com' \n >>> html = requests.get(url, cookies=cookies)\n\n```", "```py\n>>> tree = fromstring(html.content) \n>>> tree.cssselect('ul#navbar li a')[0].text_content() \n'Welcome Test account' \n\n```", "```py\ndef login(session=None):\n    \"\"\" Login to example website.\n        params:\n            session: request lib session object or None\n        returns tuple(response, session)\n    \"\"\"\n    if session is None:\n        html = requests.get(LOGIN_URL)\n    else:\n        html = session.get(LOGIN_URL)\n    data = parse_form(html.content)\n    data['email'] = LOGIN_EMAIL\n    data['password'] = LOGIN_PASSWORD\n    if session is None:\n        response = requests.post(LOGIN_URL, data, cookies=html.cookies)\n    else:\n        response = session.post(LOGIN_URL, data)\n    assert 'login' not in response.url\n    return response, session\n\n```", "```py\n>>> from chp6.login import login, parse_form \n>>> session = requests.Session()\n>>> COUNTRY_URL = 'http://example.webscraping.com/edit/United-Kingdom-239' \n>>> response, session = login(session=session)\n>>> country_html = session.get(COUNTRY_URL)\n>>> data = parse_form(country_html.content) \n>>> data\n{'_formkey': 'd9772d57-7bd7-4572-afbd-b1447bf3e5bd',\n '_formname': 'places/2575175',\n 'area': '244820.00',\n 'capital': 'London',\n 'continent': 'EU',\n 'country': 'United Kingdom',\n 'currency_code': 'GBP',\n 'currency_name': 'Pound',\n 'id': '2575175',\n 'iso': 'GB',\n 'languages': 'en-GB,cy-GB,gd',\n 'neighbours': 'IE',\n 'phone': '44',\n 'population': '62348448',\n 'postal_code_format': '@# #@@|@## #@@|@@# #@@|@@## #@@|@#@ #@@|@@#@ #@@|GIR0AA',\n 'postal_code_regex': '^(([A-Z]d{2}[A-Z]{2})|([A-Z]d{3}[A-Z]{2})|([A-Z]{2}d{2}[A-Z]{2})|([A-Z]{2}d{3}[A-Z]{2})|([A-Z]erd[A-Z]d[A-Z]{2})|([A-Z]{2}d[A-Z]d[A-Z]{2})|(GIR0AA))$',\n 'tld': '.uk'}\n\n```", "```py\n>>> data['population'] = int(data['population']) + 1 \n>>> response = session.post(COUNTRY_URL, data) \n\n```", "```py\nfrom selenium import webdriver\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\ndef get_driver():\n    try:\n        return webdriver.PhantomJS()\n    except Exception:\n        return webdriver.Firefox()\n\ndef login(driver):\n    driver.get(LOGIN_URL)\n    driver.find_element_by_id('auth_user_email').send_keys(LOGIN_EMAIL)\n    driver.find_element_by_id('auth_user_password').send_keys(\n        LOGIN_PASSWORD + Keys.RETURN)\n    pg_loaded = WebDriverWait(driver, 10).until(\n        EC.presence_of_element_located((By.ID, \"results\")))\n    assert 'login' not in driver.current_url\n\n```", "```py\ndef add_population(driver):\n    driver.get(COUNTRY_URL)\n    population = driver.find_element_by_id('places_population')\n    new_population = int(population.get_attribute('value')) + 1\n    population.clear()\n    population.send_keys(new_population)\n    driver.find_element_by_xpath('//input[@type=\"submit\"]').click()\n    pg_loaded = WebDriverWait(driver, 10).until(\n        EC.presence_of_element_located((By.ID, \"places_population__row\")))\n    test_population = int(driver.find_element_by_css_selector(\n        '#places_population__row .w2p_fw').text.replace(',', ''))\n    assert test_population == new_population\n\n```", "```py\n >>> driver = get_driver()\n >>> login(driver)\n >>> add_population(driver)\n >>> driver.quit()\n\n```"]