- en: Chapter 2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Python and Integrated Development Environments
  prefs: []
  type: TYPE_NORMAL
- en: 2.1 What is Python?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Python is a widely used general-purpose, high-level computer programming language
    that allows programmers to create applications, web pages, and many other types
    of software.
  prefs: []
  type: TYPE_NORMAL
- en: Python is often referred to as a scripting language despite the fact that the
    official website says that it's a programming language. The truth, of course,
    is somewhere in the middle. Python can be used either as a scripting language,
    or a programming language!
  prefs: []
  type: TYPE_NORMAL
- en: 2.2 What is the Difference Between a Script and a Program?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Technically speaking, a script is interpreted whereas a program is compiled,
    but this is actually not their major difference. There is another more important
    difference between them!
  prefs: []
  type: TYPE_NORMAL
- en: The main purpose of a script written in a scripting language such as JavaScript,
    or VBA (Visual Basic for Applications) is to control another application. So you
    can say that, in some ways JavaScript controls the web browser, and VBA controls
    a Microsoft^® Office application such as MS Word or MS Excel.
  prefs: []
  type: TYPE_NORMAL
- en: On the other hand, a program written in a programming language such as Python,
    C++, or Java (to name a few) executes independently of any other application.
    A program is executed as stand-alone any time the user wishes without the need
    of a hosting application.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Macros of Microsoft Office are scripts written in VBA. Their
    purpose is to automate certain functions within Microsoft Office.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)A lot of people think that JavaScript is a simplified version
    of Java but in fact the similarity of the names is just a coincidence.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/remember.jpg)A script cannot be executed as stand-alone. It requires
    a hosting application in order to execute.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.3 Why You Should Learn Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Python is what is known as a “high-level” computer language. Python's coding
    style is very easy to understand. It is a flexible and powerful language, making
    it well-suited for developing medium-scale applications or dynamic web pages.
    It is the perfect language for teaching programming, especially at the introductory
    level, and it is widely used in scientific and numerical computing.
  prefs: []
  type: TYPE_NORMAL
- en: One of Python's capabilities is the ability to interact with the file system
    of a computer. Python can create files, write in files, or read the contents from
    files. It can also create directories, copy files, delete files, rename files,
    or even change file attributes. Python can perform almost any task related to
    the file system, making it suitable even for system administration tasks. For
    example, you can write a Python program to back up your files or a program that
    processes text files by reformatting their contents.
  prefs: []
  type: TYPE_NORMAL
- en: Moreover, Python can execute system commands or any other program installed
    on your system. Thus, programs written and compiled in C, C++, Java, or any other
    computer language can be executed from Python and Python can make use of their
    output. This enables you to add functionality to your Python programs without
    spending time rewriting your old ones.
  prefs: []
  type: TYPE_NORMAL
- en: There are millions—probably even billions—of lines of code already written in
    Python and your possibilities for code reuse are huge! This is why many people
    prefer using Python to any other programming language. This is also a very good
    reason why you should actually learn Python!
  prefs: []
  type: TYPE_NORMAL
- en: 2.4 How Python Works
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Computers do not understand natural languages such as English or Greek, so you
    need a computer language such as Python to communicate with them. Python is a
    very powerful high-level computer language. The Python interpreter (or, actually,
    a combination of a compiler and an interpreter) converts Python language to a
    language that computers can actually understand, and that is known as the “machine
    language”.
  prefs: []
  type: TYPE_NORMAL
- en: In the past, computer languages made use of either an interpreter or a compiler.
    Nowadays however, many computer languages including Python use both a compiler
    and an interpreter. The Python compiler translates Python statements into bytecode
    statements and saves them in a .pyc file. Later, when a user wants to execute
    the file, the interpreter (often called Python Virtual Machine or Python VM) converts
    the bytecode into low-level machine language code for direct execution on the
    hardware.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Python bytecode is a machine language executed by the Python
    Virtual Machine.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Instead of a compiler and an interpreter, some languages
    use two compilers. In C#, for example, the first compiler translates C# statements
    into an intermediate language called Common Intermediate Language (CIL). The CIL
    code is stored on disk in an executable file called an assembly, typically with
    an extension of .exe. Later, when a user wants to execute the file, the .NET Framework
    performs a Just In Time (JIT) compilation to convert the CIL code into low-level
    machine language code for direct execution on the hardware.'
  prefs: []
  type: TYPE_NORMAL
- en: In Figure 2–1 you can see how statements written in Python are compiled into
    bytecode and how bytecode is then executed using interpretation.
  prefs: []
  type: TYPE_NORMAL
- en: .![Image](img/chapter02-02.png)
  prefs: []
  type: TYPE_NORMAL
- en: Figure 2–1 Executing Python statements using the Python Virtual Machine
  prefs: []
  type: TYPE_NORMAL
- en: 'Now come some reasonable questions: Why all this trouble? Why does Python and
    other languages (such as C#) translate twice? Why are Python statements not directly
    translated into low-level machine language code? The answer lies in the fact that
    Python is designed to be a platform-independent programming language. This means
    that a program is written once but it can be executed on any device, regardless
    of its operating system or its architecture, as long as the appropriate version
    of Python is installed on it. In the past, programs had to be recompiled, or even
    rewritten, for each computer platform. One of the biggest advantages of Python
    is that you only have to write and compile a program once! In Figure 2–2 you can
    see how statements written in Python are compiled into bytecode and how bytecode
    can then be executed on any platform that has the appropriate version of Python
    installed on it.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](img/chapter02-01.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2–2 Executing Python statements on different platforms
  prefs: []
  type: TYPE_NORMAL
- en: 'Efficiency is another reason why Python statements are not directly translated
    into low-level machine language code because:'
  prefs: []
  type: TYPE_NORMAL
- en: 1)Small optimizations can be performed on the intermediate code (bytecode).
  prefs: []
  type: TYPE_NORMAL
- en: 2)If a .pyc file with the same name as the .py file you invoke is present, Python
    automatically executes it. This means that if a .pyc file is present and you haven't
    made any changes in the source code, Python can save some time by not having to
    re-compile the source code.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Today few, if any, interpreters really interpret code directly,
    line by line. Almost all interpreters now use some type of intermediate representation.'
  prefs: []
  type: TYPE_NORMAL
- en: 'To write and execute Python programs, you need to install two software applications:
    a Python interpreter and an Integrated Development Environment (IDE). The IDE
    is necessary for writing Python programs, while the Python interpreter is required
    for executing them.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.5 Integrated Development Environments
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: An Integrated Development Environment, or IDE, is a type of software that includes
    all the basic tools programmers need to write and test programs. An IDE typically
    contains a source code editor and integrates tools such as a compiler or an interpreter,
    along with a debugger. IDLE and Visual Studio Code are examples of IDEs that let
    programmers write, execute and debug their source code.
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)A “debugger” is a tool that helps programmers to find and
    correct many of their mistakes.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.6 IDLE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: IDLE is an Integrated Development Environment (IDE) that provides a very simple
    environment suitable for beginners, especially in an educational setting. With
    IDLE, novice programmers can effortlessly write and execute their Python programs.
  prefs: []
  type: TYPE_NORMAL
- en: In Windows, the IDLE module is included by default in the Python installer and
    will be installed when you follow the steps outlined in the next chapter ([Chapter
    3](chapter03.html)). Additionally, in [Chapter 9](chapter09.html), you will be
    guided on how to use IDLE to write, execute and debug Python programs. You will
    also learn numerous tips and tricks that will be valuable in your first steps
    as a budding programmer!
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Python and IDLE are included by default in many Linux distributions,
    but not necessarily in all of them. For example, in Ubuntu Linux, Python is installed
    by default, but you may need to install the IDLE module separately.'
  prefs: []
  type: TYPE_NORMAL
- en: 2.7 Microsoft Visual Studio
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Microsoft Visual Studio is an Integrated Development Environment (IDE) that
    provides a great set of tools for many programming languages (via extensions installed
    separately) and lets you easily create applications for Android, iOS, macOS, Windows,
    and the cloud, as well as websites, web applications, and web services.
  prefs: []
  type: TYPE_NORMAL
- en: Visual Studio is much more than a text editor. It can indent lines, match words
    and brackets, and highlight source code that is written incorrectly. It also provides
    automatic code (IntelliSense^®), which means that as you type, it displays a list
    of possible completions. The IDE also provides hints to help you analyze your
    code and find any potential problems. It even suggests some simple solutions to
    fix those problems. You can use the Visual Studio not only to write but also to
    execute your programs directly from the IDE.
  prefs: []
  type: TYPE_NORMAL
- en: 'Visual Studio has a large community of users all around the world and this
    is why it comes in so many different flavors. Specifically, in Microsoft''s download
    page you can download:'
  prefs: []
  type: TYPE_NORMAL
- en: ►Visual Studio (Community, Professional, or Enterprise), which runs on Windows
  prefs: []
  type: TYPE_NORMAL
- en: ►Visual Studio for Mac, which runs on macOS
  prefs: []
  type: TYPE_NORMAL
- en: ►Visual Studio Code, which runs on Windows, macOS, and Linux
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter ([Chapter 3](chapter03.html)), you will find links guiding
    you to instructions on how to install and configure whatever is necessary on your
    computer, such as the Python interpreter, and IDLE or Visual Studio Code, on either
    Windows or Linux. Then, in [Chapter 9](chapter09.html), you will discover guidance
    on using IDLE or Visual Studio Code to write, execute and debug Python programs.
    These instructions are available on my website. Additionally, you will find numerous
    tips and tricks there that will be valuable in your first steps as a budding programmer!
  prefs: []
  type: TYPE_NORMAL
