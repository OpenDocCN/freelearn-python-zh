["```py\nimport random\n\nif __name__ == \"__main__\":\n    while True:\n        # generate a random number between 0 and 9\n        rand_num = random.randrange(0,10)\n\n        # prompt the user for a number\n        value = input(\"Enter a number between 0 and 9: \")\n\n        if value == 'x':\n            print(\"Thanks for playing! Bye!\")\n            break\n\n        input_value = int(value)\n\n        if input_value < 0 or input_value > 9:\n            print(\"Input invalid. Enter a number between 0 and 9.\")\n\n        if input_value == rand_num:\n            print(\"Your guess is correct! You win!\")\n            break\n        else:\n            print(\"Nope! The random value was %s\" % rand_num)\n\n```", "```py\n    Enter a number between 0 and 9: hello\n Traceback (most recent call last):\n File \"guessing_game.py\", line 12, in <module>\n input_value = int(value)\n ValueError: invalid literal for int() with base 10: 'hello'\n\n```", "```py\n    File \"guessing_game.py\", line 12, in <module>\n input_value = int(value)\n\n```", "```py\n    ValueError: invalid literal for int() with base 10: 'hello'\n\n```", "```py\nimport random\n\nif __name__ == \"__main__\":\n    while True:\n        # generate a random number between 0 and 9\n        rand_num = random.randrange(0,10)\n\n        # prompt the user for a number\n        value = input(\"Enter a number between 0 and 9: \")\n\n        if value == 'x':\n            print(\"Thanks for playing! Bye!\")\n\n        try:\n            input_value = int(value)\n        except ValueError as error:\n            print(\"The value is invalid %s\" % error)\n            continue\n\n        if input_value < 0 or input_value > 9:\n            print(\"Input invalid. Enter a number between 0 and 9.\")\n            continue\n\n        if input_value == rand_num:\n            print(\"Your guess is correct! You win!\")\n            break\n        else:\n            print(\"Nope! The random value was %s\" % rand_num)\n\n```", "```py\n      try: \n         input_value = int(value) \n      except ValueError as error:\n         print(\"The value is invalid %s\" % error)\n\n```", "```py\n       except ValueError as error:\n           print(\"The value is invalid %s\" % error)\n\n```", "```py\n       Enter a number between 0 and 9: 3\n Nope! The random value was 5\n Enter a number between 0 and 9: hello\n The value is invalid invalid literal for int() with\n       base 10: 'hello'\n Enter a number between 0 and 10: 4\n Nope! The random value was 6\n\n```", "```py\ntry:\n    input_value = int(value)\nexcept ValueError as error:\n    print(\"The value is invalid %s\" % error)\nelse:\n    if input_value < 0 or input_value > 9:\n        print(\"Input invalid. Enter a number between 0 and 9.\")\n    elif input_value == rand_num:\n        print(\"Your guess is correct! You win!\")\n        break\n    else:\n        print(\"Nope! The random value was %s\" % rand_num)\n\n```", "```py\ncount = 0\nvalid_count = 0\nwhile True:\n  # generate a random number between 0 and 9\n  rand_num = random.randrange(0,10)\n\n  # prompt the user for a number\n  value = input(\"Enter a number between 0 and 9: \")\n\n  if value == 'x':\n      print(\"Thanks for playing! Bye!\")\n\n  try:\n      input_value = int(value)\n  except ValueError as error:\n      print(\"The value is invalid %s\" % error)\n  else:\n      if input_value < 0 or input_value > 9:\n          print(\"Input invalid. Enter a number between 0 and 9.\")\n          continue\n\n      valid_count += 1\n      if input_value == rand_num:\n          print(\"Your guess is correct! You win!\")\n          break\n      else:\n          print(\"Nope! The random value was %s\" % rand_num)\n  finally:\n      count += 1\n\nprint(\"You won the game in %d attempts \"\\\n      \"and %d inputs were valid\" % (count, valid_count))\n\n```", "```py\n    Enter a number between 0 and 9: g\n The value is invalid invalid literal for int() with\n    base 10: 'g'\n Enter a number between 0 and 9: 3\n Your guess is correct! You win!\n You won the game in 9 attempts and 8 inputs were valid\n\n```", "```py\nimport requests\nresponse = requests.get('http://nist.time.gov/actualtime.cgi')\n\n```", "```py\n#!/usr/bin/python3\n\nimport requests\n\nif __name__ == \"__main__\":\n  # Source for link: http://stackoverflow.com/a/30635751/822170\n  try:\n    response = requests.get('http://nist.time.gov/actualtime.cgi')\n    print(response.text)\n  except requests.exceptions.ConnectionError as error:\n    print(\"Something went wrong. Try again\")\n\n```", "```py\n    <timestamp time=\"1474421525322329\" delay=\"0\"/>\n\n```", "```py\n {\"coord\":{\"lon\":-122.42,\"lat\":37.77},\"weather\":[{\"id\":800, \n       \"main\":\"Clear\",\"description\":\"clear sky\",\"icon\":\"01n\"}],\"base\": \n       \"stations\",\"main\":{\"temp\":71.82,\"pressure\":1011,\"humidity\":50, \n       \"temp_min\":68,\"temp_max\":75.99},\"wind\":\n       {\"speed\":13.04,\"deg\":291},\n       \"clouds\":{\"all\":0},\"dt\":1474505391,\"sys\":{\"type\":3,\"id\":9966, \n       \"message\":0.0143,\"country\":\"US\",\"sunrise\":1474552682, \n       \"sunset\":1474596336},\"id\":5391959,\"name\":\"San \n       Francisco\",\"cod\":200}\n\n```", "```py\n       response = requests.get(URL) \n       json_data = response.json()\n\n```", "```py\n       print(json_data['main']['temp'])\n\n```", "```py\n       #!/usr/bin/python3\n\n       import requests\n\n       # generate your own API key\n       APP_ID = '5d6f02fd4472611a20f4ce602010ee0c'\n       ZIP = 94103\n       URL = \"\"\"http://api.openweathermap.org/data/2.5/weather?zip={}\n       &appid={}&units=imperial\"\"\".format(ZIP, APP_ID)\n\n       if __name__ == \"__main__\":\n         # API Documentation: http://openweathermap.org/\n         current#current_JSON\n         try:\n           # encode data payload and post it\n           response = requests.get(URL)\n           json_data = response.json()\n           print(\"Temperature is %s degrees Fahrenheit\" %\n           json_data['main']['temp'])\n         except requests.exceptions.ConnectionError as error:\n           print(\"The error is %s\" % error)\n\n```", "```py\n    Temperature is 68.79 degrees Fahrenheit\n\n```", "```py\n       payload = {\"text\": \"The cat door was just opened!\"}\n\n```", "```py\n       response = requests.post(URL, json.dumps(payload))\n\n```", "```py\n       #!/usr/bin/python3\n\n       import requests\n       import json\n\n       # generate your own URL\n       URL = 'https://hooks.slack.com/services/'\n\n       if __name__ == \"__main__\":\n         payload = {\"text\": \"The cat door was just opened!\"}\n         try:\n           # encode data payload and post it\n           response = requests.post(URL, json.dumps(payload))\n           print(response.text)\n         except requests.exceptions.ConnectionError as error:\n           print(\"The error is %s\" % error)\n\n```", "```py\n    sudo pip3 install flask\n\n```", "```py\n#!/usr/bin/python3\n\nfrom flask import Flask\napp = Flask(__name__)\n\n@app.route(\"/\")\ndef hello():\n    return \"Hello World!\"\n\nif __name__ == \"__main__\":\n    app.run('0.0.0.0')\n\n```", "```py\n@app.route(\"/lamp/<control>\") \ndef control(control): \n  if control == \"on\": \n    lights.on() \n  elif control == \"off\": \n    lights.off() \n  return \"Table lamp is now %s\" % control\n\n```", "```py\n#!/usr/bin/python3 \n\nfrom flask import Flask \nfrom gpiozero import OutputDevice \n\napp = Flask(__name__) \nlights = OutputDevice(2) \n\n@app.route(\"/lamp/<control>\") \ndef control(control): \n  if control == \"on\": \n    lights.on() \n  elif control == \"off\": \n    lights.off() \n  return \"Table lamp is now %s\" % control \n\nif __name__ == \"__main__\": \n    app.run('0.0.0.0')\n\n```"]