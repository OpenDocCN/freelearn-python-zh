["```py\n├── Makefile\n├── README.rst\n├── setup.py\n├── src\n│   └── apptool\n│   ├── common.py\n│   ├── __init__.py\n│   └── parse.py\n└── tests\n    ├── integration\n    └── unit \n```", "```py\nfrom setuptools import find_packages, setup\nwith open(\"README.rst\", \"r\") as longdesc:\n    long_description = longdesc.read()\nsetup(\n    name=\"apptool\",\n    description=\"Description of the intention of the package\",\n    long_description=long_description,\n    author=\"Dev team\",\n    version=\"0.1.0\",\n    packages=find_packages(where=\"src/\"),\n    package_dir={\"\": \"src\"},\n) \n```", "```py\npython –m venv env\nsource env/bin/activate\n$VIRTUAL_ENV/bin/pip install -U pip wheel\n$VIRTUAL_ENV/bin/python setup.py sdist bdist_wheel \n```", "```py\nfrom setuptools import find_packages, setup\n\nwith open(\"README.rst\", \"r\") as longdesc:\n    long_description = longdesc.read()\ninstall_requires = [\"sanic>=20,<21\"]\nsetup(\n    name=\"web\",\n    description=\"Library with helpers for the web-related functionality\",\n    long_description=long_description,\n    author=\"Dev team\",\n    version=\"0.1.0\",\n    packages=find_packages(where=\"src/\"),\n    package_dir={\"\": \"src\"},\n    install_requires=install_requires,\n) \n```", "```py\npip-compile setup.py \n```", "```py\nfrom typing import Union\nclass DispatchedOrder:\n    \"\"\"An order that was just created and notified to start its delivery.\"\"\"\n    status = \"dispatched\"\n    def __init__(self, when):\n        self._when = when\n    def message(self) -> dict:\n        return {\n            \"status\": self.status,\n            \"msg\": \"Order was dispatched on {0}\".format(\n                self._when.isoformat()\n            ),\n        }\nclass OrderInTransit:\n    \"\"\"An order that is currently being sent to the customer.\"\"\"\n    status = \"in transit\"\n    def __init__(self, current_location):\n        self._current_location = current_location\n    def message(self) -> dict:\n        return {\n            \"status\": self.status,\n            \"msg\": \"The order is in progress (current location: {})\".format(\n                self._current_location\n            ),\n        }\nclass OrderDelivered:\n    \"\"\"An order that was already delivered to the customer.\"\"\"\n    status = \"delivered\"\n    def __init__(self, delivered_at):\n        self._delivered_at = delivered_at\n    def message(self) -> dict:\n        return {\n            \"status\": self.status,\n            \"msg\": \"Order delivered on {0}\".format(\n                self._delivered_at.isoformat()\n            ),\n        }\nclass DeliveryOrder:\n    def __init__(\n        self,\n        delivery_id: str,\n        status: Union[DispatchedOrder, OrderInTransit, OrderDelivered],\n    ) -> None:\n        self._delivery_id = delivery_id\n        self._status = status\n    def message(self) -> dict:\n        return {\"id\": self._delivery_id, **self._status.message()} \n```", "```py\nfrom storage import DBClient, DeliveryStatusQuery, OrderNotFoundError\nfrom web import NotFound, View, app, register_route\nclass DeliveryView(View):\n    async def _get(self, request, delivery_id: int):\n        dsq = DeliveryStatusQuery(int(delivery_id), await DBClient())\n        try:\n            result = await dsq.get()\n        except OrderNotFoundError as e:\n             raise NotFound(str(e)) from e\n        return result.message()\nregister_route(DeliveryView, \"/status/<delivery_id:int>\") \n```", "```py\ndsq = DeliveryStatusQuery(int(delivery_id), await DBClient()) \n```", "```py\n├── Dockerfile\n├── libs\n│   ├── README.rst\n│   ├── storage\n│   └── web\n├── Makefile\n├── README.rst\n├── setup.py\n└── statusweb\n    ├── __init__.py\n    └── service.py \n```", "```py\nfrom setuptools import find_packages, setup\nwith open(\"README.rst\", \"r\") as longdesc:\n    long_description = longdesc.read()\ninstall_requires = [\"web==0.1.0\", \"storage==0.1.0\"]\nsetup(\n    name=\"delistatus\",\n    description=\"Check the status of a delivery order\",\n    long_description=long_description,\n    author=\"Dev team\",\n    version=\"0.1.0\",\n    packages=find_packages(),\n    install_requires=install_requires,\n    entry_points={\n        \"console_scripts\": [\n            \"status-service = statusweb.service:main\",\n        ],\n    },\n) \n```", "```py\n\"status-service = statusweb.service:main\" \n```", "```py\nFROM python:3.9-slim-buster\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        python-dev \\\n        gcc \\\n        musl-dev \\\n        make \\\n    && rm -rf /var/lib/apt/lists/*\nWORKDIR /app\nADD . /app\nRUN pip install /app/libs/web /app/libs/storage\nRUN pip install /app\nEXPOSE 8080\nCMD [\"/usr/local/bin/status-service\"] \n```", "```py\n$ curl http://localhost:5000/status/1\n{\"id\":1,\"status\":\"dispatched\",\"msg\":\"Order was dispatched on 2018-08-01T22:25:12+00:00\"} \n```"]