["```py\n    from machine import Pin, PWM\n    import utime\n    BUZZER_PIN = 16\n    buzzer = PWM(Pin(BUZZER_PIN))\n    BUZZER_FREQ = 4000\n    def activate_buzzer(duration=5):\n        buzzer.freq(BUZZER_FREQ)\n        buzzer.duty_u16(32768)\n        utime.sleep(duration)\n        buzzer.duty_u16(0)\n    ```", "```py\n    import machine\n    import utime\n    import network\n    import _thread\n    from umqtt.simple import MQTTClient\n    from buzzer import activate_buzzer\n    ```", "```py\n    SSID = \"WiFiNetworkName\"\n    PASSWORD = \"xxxxxxxxx\"\n    MQTT_SERVER = \"broker.mqtthq.com\"\n    MQTT_PORT = 1883\n    pir = machine.Pin(26, machine.Pin.IN)\n    led = machine.Pin(21, machine.Pin.OUT)\n    wlan = network.WLAN(network.STA_IF)\n    mqtt_client = None\n    ```", "```py\n    def connect_wifi():\n        wlan.active(True)\n        wlan.connect(SSID, PASSWORD)\n        while not wlan.isconnected():\n            print('Trying to connect to WiFi...')\n            utime.sleep(5)\n        print('WIFI connection established')\n    ```", "```py\n    def sub_iotalarm(topic, msg):\n        print((topic, msg))\n        if topic == b'IoTAlarm' and msg == b'buzzer':\n            print(\"buzzer is detected\")\n            activate_buzzer()\n    ```", "```py\n    def motion_handler(pin):\n        print('Motion detected!!')\n        if mqtt_client is not None:\n            mqtt_client.publish(b\"IoTAlarm\", b\"motion\")\n        else:\n            print(\"MQTT client is not connected.\")\n    ```", "```py\n    def connect_mqtt(device_id, callback):\n        global mqtt_client\n        while mqtt_client is None:\n            try:\n                print(\"Trying to connect to\n       MQTT Server...\")\n                mqtt_client = MQTTClient(\n                                          device_id,\n                                          MQTT_SERVER,\n                                          MQTT_PORT)\n                mqtt_client.set_callback(callback)\n                mqtt_client.connect()\n                print('MQTT connection established')\n            except:\n                mqtt_client = None\n                print('Failed to connect to MQTT Server, retrying...')\n                utime.sleep(5)\n    ```", "```py\n    def connection_status():\n        while True:\n            if wlan.isconnected():\n                if mqtt_client is not None:\n                    led.on()  # Steady on when both WiFi and MQTT connected\n                else:\n                    led.on()  # Blink every half-second when only WiFi is connected\n                    utime.sleep(0.5)\n                    led.off()\n                    utime.sleep(0.5)\n            else:\n                led.on()  # Blink every second when WiFi is not connected\n                utime.sleep(1)\n                led.off()\n                utime.sleep(1)\n    ```", "```py\n    _thread.start_new_thread(connection_status, ())\n    ```", "```py\n    connect_wifi()\n    connect_mqtt(\"IoTAlarmSystem\", sub_iotalarm)\n    ```", "```py\n    mqtt_client.subscribe(\"IoTAlarm\")\n    ```", "```py\n    pir.irq(trigger=machine.Pin.IRQ_RISING,\n    handler=motion_handler)\n    ```", "```py\n    while True:\n        mqtt_client.wait_msg()\n    ```"]