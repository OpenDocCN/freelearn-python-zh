- en: Chapter 2. Steve Holden
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![Steve Holden](img/B08180_09_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Steve Holden is a British computer programmer and a former chairman and director
    of the Python Software Foundation (PSF). He is the author of *Python Web Programming*
    and co-authored the third edition of *Python in a Nutshell* with Alex Martelli
    and Anna Ravenscroft. Steve works as chief technical officer at Global Stress
    Index, a stress management start-up in the UK, where he oversees the application
    of technology producing systems. A career promoting the Python language has taken
    Steve around the world. He continues to support open source Python projects and
    speak at tech conferences.
  prefs: []
  type: TYPE_NORMAL
- en: '**Discussion themes: PyCon, the PSF, the future of Python.**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Catch up with Steve Holden here: @holdenweb**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Mike Driscoll**: So could you tell me why you decided to become a computer
    programmer?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden**: In essence, I was very fond of electronics in my early teens.
    I switched from chemistry to electronics because a chemistry teacher turned me
    off the subject.'
  prefs: []
  type: TYPE_NORMAL
- en: So I started my career at the age of 15 as a trainee production engineer in
    a television factory. After 18 months, that wasn't really going as well as it
    should. I began to look around for new employment and I saw a job advertising
    a junior technician role at the computing laboratory, at my local university in
    Bradford. So I applied for the job and when I got there, it turned out that junior
    technician was just a job grade. What they actually wanted was a keypunch operator.
  prefs: []
  type: TYPE_NORMAL
- en: The director of the lab thought that I was in danger of going off the rails.
    He decided that I should take a job with the laboratory for six months and learn
    about computers. So obviously I didn't get into the electronics side of it, because
    in those days, computer maintenance was an extremely specialized job. But I learned
    how to operate a computer and I learned how to program. That was the start of
    my career in computing.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: That makes sense to me! So what made you start using Python and
    what makes it special to you?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: Well, in the early 1970s, I developed an interest in object-oriented
    programming when I finally, at the age of 23, went to university. I came across
    some of the early papers on Smalltalk from Alan Kay''s group at Xerox PARC.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''In the early 1970s I developed an interest in object-oriented
    programming.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The group seemed to have a very novel approach to computing, so I got interested
    in Smalltalk. Eventually, about 12 years later, when I was working at Manchester
    University, I actually got the chance to play with Smalltalk for the first time.
    I got a research student to implement it for me. There was no UK implementation
    of Smalltalk at the time. I discovered that actually I didn't really like Smalltalk
    very much. So I gave up on object-oriented programming for about another 10 years.
  prefs: []
  type: TYPE_NORMAL
- en: It was actually when I moved to the United States that I came across a book
    on Python. I think it was *Learning Python*, which was at that time by Mark Lutz
    and David Ascher. I realized that Python was the language for me! Python is a
    sensible, comprehensible, and understandable way to do object-oriented programming.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I found that my knowledge of the language grew very quickly
    and pretty soon I was answering a lot of questions.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I did what people did in those days, which was to join the Python list. I found
    that my knowledge of the language grew very quickly and pretty soon I was answering
    a lot of questions. I think that in total I was active on comp.lang.python for
    about eight years. I made almost 200,000 posts! That's a lot of posts! Although
    unfortunately, I think that Google has let most of that stuff disappear now, so
    the history is gone from comp.lang.python.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Python is being used now in AI and machine learning. What do
    you think makes Python so popular?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: Python has several advantages: it''s easy to read and you can experiment
    interactively with objects that you create in a console or IDE. Python also provides
    relatively easy ways to interact with compiled languages that provide speed in
    large calculations (nobody expects the Spanish Inquisition).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Do you think that there are any problems currently with the Python
    language or its community?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: The Python community (which is actually a large number of intersecting
    communities) just seems to go from strength to strength.'
  prefs: []
  type: TYPE_NORMAL
- en: I am happy to say that Python appears to be widely accepted as a language, with
    a friendly and welcoming community. The Python Software Foundation (PSF) is now
    in a position to help to fund volunteer activities and offer a financial umbrella,
    as long as those activities promote and support the mission of the PSF.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''The Python Software Foundation (PSF) is now in a position
    to help to fund volunteer activities and offer a financial umbrella.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Having just completed writing the third edition of *Python in a Nutshell*, with
    Alex Martelli and Anna Ravenscroft, I would say that the language is in pretty
    good shape. However, I think that the new asynchronous primitives are proving
    to be more difficult for the average programmer to learn than they should be.
  prefs: []
  type: TYPE_NORMAL
- en: Guido van Rossum and the other core developers have done a great job of not
    distorting the language too far in order to make the additions. But the asynchronous
    paradigm, that is so familiar to Twisted developers, isn't quite as intuitively
    obvious as a simple synchronous task specification.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I am a little concerned that Python development isn''t doing
    a whole lot for the average mainstream user.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: To be frank, I am a little concerned that Python development isn't doing a whole
    lot for the average mainstream user. A huge amount of work has been done to bring
    asynchronous programming into the language, which now includes a cooperative multitasking
    mechanism that obviates the need for threads.
  prefs: []
  type: TYPE_NORMAL
- en: As this work has proceeded, the developers have perceived a need for values
    that are private to the execution context of a specific asynchronous computation.
    You can think of them as `asyncio`'s equivalent of thread-local variables. As
    I've followed discussions on the Python-Dev list, I've seen much erudite discussion
    of issues that I suspect will never impact 99.5% of Python users. So I am thankful
    that Python is so dedicated to backward compatibility!
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I''ve seen much erudite discussion of issues that I suspect
    will never impact 99.5% of Python users.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I feel similarly, although rather less strongly, about the introduction of annotations
    to Python. They were first proposed as an entirely optional element of the language,
    but because people are using them, they are raising issues that are increasing
    the pressure to allow annotations in places like the standard library.
  prefs: []
  type: TYPE_NORMAL
- en: I'd like it to be possible for beginners to continue to learn the language,
    while remaining totally unaware of even the possibility of annotations, which
    can then be added later and completely orthogonally to the rest of the language.
    I'm not confident that this will continue to be the case.
  prefs: []
  type: TYPE_NORMAL
- en: Looking on the bright side, the relatively simple development of the f-string
    notation has been so enthusiastically adopted by the Python 3 community, that
    lots of code is being written that won't run on 3.5, simply because it uses f-strings.
    As usual, Dave Beazley has found diabolical things to do with f-strings, which
    is always fun.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: How can we overcome those issues?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: I''m not sure that there''s any need for huge efforts to overcome
    those issues. It''s important not to become complacent and to keep up the efforts
    to improve the language and broaden its community to become ever larger and more
    diverse. PyCon proved that technical communities can, to a large extent, be self-organizing.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mike Driscoll: I know that you have been the chairman of PSF and PyCon in
    the past. How did you first become involved?**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: I went to my first, and effectively the last, International Python
    Conference in 2002\. While the content was great, the event was run by a commercial
    group that did a lot of business with Guido''s then employer, so it was geared
    to those who had the budget to attend.'
  prefs: []
  type: TYPE_NORMAL
- en: While this had been fine in the early days of the language, it was obvious to
    me that if Python was going to be really popular, then its conference needed to
    offer a home to many more people. This included the people that I was engaging
    with on a daily basis on comp.lang.python.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''If Python was going to be really popular, then its conference
    needed to offer a home to many more people.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: At the end of that conference, Guido made an announcement about the Python Software
    Authority (PSA), a more-or-less national governance body. PSA was to be replaced
    by a non-profit foundation. Guido also announced the creation of a mailing list
    to discuss conferences, which I eagerly anticipated!
  prefs: []
  type: TYPE_NORMAL
- en: Sadly, the archives ([https://mail.python.org/pipermail/conferences/](https://mail.python.org/pipermail/conferences/))
    only appear to go back to May 2009\. But I remember when I last looked at the
    complete collection, my memory of waiting a long time for anything to appear was
    completely false. It took me about two days to become the first poster in the
    list. I expressed my opinion that the community could and would do a better job
    of organizing the conference, on a purely community basis.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I expressed my opinion that the community could and would
    do a better job of organizing the conference.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I had the good fortune, completely by accident, to move to Virginia. This was
    within 20 or 30 miles of where Guido, Jeremy Hylton, Barry Warsaw, and Fred Drake
    were working at different places, while they collaborated on core Python.
  prefs: []
  type: TYPE_NORMAL
- en: That crew, along with Tim Peters, who had until then lived in Boston, got together
    as employees of a company called BeOS. It looked like that collaboration had a
    bright future and so it was a terrible blow when it became obvious after about
    six months that BeOS was in trouble. Fortunately, Zope Corporation, which is now
    Digital Creations, rented an office space for them and they established PythonLabs.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: How did you start working with the Python team?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: I had become known due to my voluminous contributions on comp.lang.python
    and the publication of Python Web Programming in 2002.'
  prefs: []
  type: TYPE_NORMAL
- en: So when I contacted Guido and suggested that we meet for lunch, he invited me
    out to the office of PythonLabs. I met all five of the team and then we went out
    for a Chinese lunch at a place close by. These meetings became regular events
    every couple of weeks or so and one of the topics of discussion became whether
    the community really could get behind the idea of having no professional organizers.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''One of the topics of discussion became whether the community
    really could get behind the idea of having no professional organizers.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I think by the late 1990s, Guido realized that something a bit more formal was
    required and so the guys from PythonLabs started the PSF and acquired a certain
    amount of donated funding. I explained that I'd been the treasurer of DECUS UK
    & Ireland in the past and had experience of community conferences. Guido said
    that if I would agree to chair the conference, then the PSF would underwrite the
    costs.
  prefs: []
  type: TYPE_NORMAL
- en: We rented space in The George Washington University's Cafritz Conference Center
    and announced the dates, which received general excitement. Then the informal
    team quickly established the PyCon-organizers list. I remember that we got a lot
    of help from Nate Torkington, who had established the YAPC (Yet Another Perl Conference)
    idea.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''The ethos soon emerged that everything possible would be
    done by volunteers, to keep costs down.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The ethos soon emerged that everything possible would be done by volunteers,
    to keep costs down. Catherine Devlin stepped in to organize the food (taking account
    of everyone's dietary preferences is an impossible task). I can't even remember
    how the tickets were sold, since utility sites weren't available then.
  prefs: []
  type: TYPE_NORMAL
- en: About 250 people turned up for the conference, which was preceded by a two-day
    sprint and tutorials session. All talks were well attended. There was a real buzz
    and I went around trying to make sure that everyone got onto the internet.
  prefs: []
  type: TYPE_NORMAL
- en: That conference brought the Twisted team together in person for the first time.
    When I learned that they were having networking problems (most systems back in
    those days still needed an Ethernet cable), I impressed them by installing a local
    100 MHz hub just for them.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Was the conference a financial success?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: At the end of the conference, I announced that it appeared that
    the event had made roughly $17,000 for the PSF.'
  prefs: []
  type: TYPE_NORMAL
- en: Guido proposed that I be given half of the profits, but I objected on the grounds
    that the PSF needed to build up its reserves. He also proposed me as a PSF member,
    an honour that I was happy to accept. I was duly voted in.
  prefs: []
  type: TYPE_NORMAL
- en: At OSCON that year, I interviewed Guido ([http://www.onlamp.com/pub/a/python/2003/08/14/gvr_interview.html](http://www.onlamp.com/pub/a/python/2003/08/14/gvr_interview.html))
    and he talked about the need to get some more experienced hands involved with
    the PSF, which at the time he was leading due to the recognition that his name
    lent to the enterprise.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I''ve never been a big fan of community events becoming the
    property of individuals.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: At the end of the second PyCon, which was in the same venue a year later, I
    announced that I would chair one more conference. I've never been a big fan of
    community events becoming the property of individuals and chairing had been taking
    up an enormous amount of my time. Fortunately, most of my income back then came
    from teaching work and flexible consulting, that I could do largely from home.
  prefs: []
  type: TYPE_NORMAL
- en: If memory serves me correctly, it was that year that I was elected to the PSF
    board. Guido stood down as chairman and the board elected Stephan Deibel to replace
    him, asking Guido to continue to serve as titular present. This meant that what
    time he had available could be focused on development, rather than administrivia.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: So, at what point did you step down from your role as chair of
    the conference?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: At the end of the third PyCon, which was again and for the final
    time in Washington DC, nobody had stood up to chair the next conference. I couldn''t
    even tell them that there was going to be a conference the following year, let
    alone when and where it would be.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''I held firm in my belief that if PyCon was going to make
    it, then even broader support needed to be attracted from the community.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: I received several requests to chair one more conference, but I held firm in
    my belief that if PyCon was going to make it, then even broader support needed
    to be attracted from the community. About two months later, Andrew Kuchling approached
    me to ask what was involved and bless him he ran the next two conferences, which
    were held in Dallas, Texas. They marked the transition to using fully commercial
    venues and with that, PyCon has gone from strength to strength.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: If someone wants to learn programming, why should they choose
    Python?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: That depends on what age they are. I''d suggest that up to about
    the age of ten, a visual programming system like Scratch might be more appropriate.'
  prefs: []
  type: TYPE_NORMAL
- en: Beyond that age, Python is definitely accessible enough to be a good first programming
    language. There is a huge amount of open source Python code in diverse areas.
    Nowadays, whatever field you work in, it's likely that there will be some Python
    code that you can use as a starting point.
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''Python is definitely accessible enough to be a good first
    programming language.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Driscoll**: So what coding techniques do you recommend?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: I''m a big fan of test-driven development, despite having spent
    my first 30 years as a programmer not doing it. I see Agile as being more desirable
    from a business point of view, because it allows all stakeholders to select the
    work that''s going to add most value to the business.'
  prefs: []
  type: TYPE_NORMAL
- en: I've just spent almost a year and a half working with a perversion of that approach.
    I'm looking forward to validating in my new job that when run sensibly, Agile
    methods are a productive way to work. But I see Agile less as a coding technique
    and more as a development management methodology.
  prefs: []
  type: TYPE_NORMAL
- en: Pair programming isn't used as much as it used to be, but I think that from
    a technology transfer point of view, it's an incredible communications tool. Younger
    programmers don't seem to spend much time on career development, but as a manager
    I want to see my staff growing and learning. Pair programming is one way that
    they can acquire new skills relatively painlessly.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: After learning the basics of Python, what next?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: Look around for a problem that interests you and see if there are
    any open source projects in that area.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''While every new programmer likes to think that they can break
    ground, it''s actually much easier to learn by collaborating.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: While every new programmer likes to think that they can break ground, it's actually
    much easier to learn by collaborating in a team that knows what it's doing. Teamwork
    can teach you the practical software engineering skills that are so valuable in
    becoming an effective programmer.
  prefs: []
  type: TYPE_NORMAL
- en: People like to say that anyone can code, but signs are now emerging that this
    may not be true. Anyway, being able to code alone is nowhere near enough to build
    practical, functional and maintainable systems. Acquiring those other skills shouldn't
    be left until you have mastered programming.
  prefs: []
  type: TYPE_NORMAL
- en: '**Mike Driscoll: What about Python today most excites you?**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: The really exciting thing is the continued development of Python
    communities and the increase in Python usage, especially in education. This will
    ensure that relatively comprehensible programming tools will be readily available
    to anyone that needs them over the next 20 years.'
  prefs: []
  type: TYPE_NORMAL
- en: I have on my desk a FiPy device that has Wi-Fi, Bluetooth, LoRa, Sigfox, and
    cellular communications on-chip, controlled by a MicroPython controller that,
    besides having the usual hardware bells and whistles, like digital inputs and
    outputs, gives REPL access to all of that functionality. I can hardly wait to
    retire and play with these things properly. Imagine what is going to become available
    over the next 10 years!
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Where do you see the Python language going in the future?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: I''m not really sure where the language is going. You hear loose
    talk of Python 4\. To my mind though, Python is now at the stage where it''s complex
    enough.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Steve Holden: ''You hear loose talk of Python 4\. To my mind though, Python
    is now at the stage where it''s complex enough.''**'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Python hasn't bloated in the same way that I think the Java environment has.
    At that maturity level, I think it's rather more likely that Python's ideas will
    spawn other, perhaps more specialized, languages aimed at particular areas of
    application. I see this as fundamentally healthy and I have no wish to make all
    programmers use Python for everything; language choices should be made on pragmatic
    grounds.
  prefs: []
  type: TYPE_NORMAL
- en: I've never been much of a one for pushing for change. Enough smart people are
    thinking about that already. So mostly I lurk on Python-Dev and occasionally interject
    a view from the consumer side, when I think that things are becoming a little
    too esoteric.
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Should people move over to Python 3?'
  prefs: []
  type: TYPE_NORMAL
- en: '**Holden**: Only when they need to. There will inevitably be systems written
    in 2.7 that won''t get migrated. I hope that their operators will collectively
    form an industry-wide support group, to extend the lifetimes of those systems
    beyond the 2020 deadline for Python-Dev support. However, anyone starting out
    with Python should clearly learn Python 3 and that is increasingly the case.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Driscoll**: Thank you, Steve Holden.'
  prefs: []
  type: TYPE_NORMAL
