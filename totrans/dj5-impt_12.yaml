- en: <st c="0">12</st>
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="0">12</st>
- en: <st c="3">Implementing the Purchase and Orders Pages</st>
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="3">实现购买和订单页面</st>
- en: <st c="46">During the previous chapter, we implemented the models required to
    store the purchase information.</st> <st c="146">In this chapter, we will implement
    the purchase functionality and finalize the Movies Store project with an orders
    page.</st> <st c="267">Users will be able to check their placed orders.</st> <st
    c="316">Later, we will recap the Movies Store MVT architecture to check the consistency
    between the Python code and the</st> <st c="428">architecture diagram.</st>
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="46">在前一章中，我们实现了存储购买信息的模型。</st> <st c="146">在本章中，我们将实现购买功能，并通过订单页面完成电影商店项目的最终构建。</st>
    <st c="267">用户将能够查看他们已下的订单。</st> <st c="316">稍后，我们将回顾电影商店MVT架构，以检查Python代码与</st>
    <st c="428">架构图之间的连贯性。</st>
- en: <st c="449">In this chapter, we will be covering the</st> <st c="491">following
    topics:</st>
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="449">在本章中，我们将涵盖以下主题：</st> <st c="491">以下内容：</st>
- en: <st c="508">Creating the</st> <st c="522">purchase page</st>
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="508">创建</st> <st c="522">购买页面</st>
- en: <st c="535">Creating the</st> <st c="549">orders page</st>
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="535">创建</st> <st c="549">订单页面</st>
- en: <st c="560">Recapping the Movies Store</st> <st c="588">MVT architecture</st>
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="560">回顾电影商店</st> <st c="588">MVT架构</st>
- en: <st c="604">By the end of the chapter, we will have the complete code for our
    Movies Store project.</st> <st c="693">We will also be capable of relating architecture
    diagrams to the actual</st> <st c="765">implemented code.</st>
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="604">到本章结束时，我们将拥有我们电影商店项目的完整代码。</st> <st c="693">我们还将能够将架构图与实际</st> <st
    c="765">实现的代码联系起来。</st>
- en: <st c="782">Technical requirements</st>
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="782">技术要求</st>
- en: <st c="805">In this chapter, we will be using Python 3.10+.</st> <st c="854">Additionally,
    we will be using the</st> **<st c="889">VS Code</st>** <st c="896">editor in this
    book, which you can download</st> <st c="941">from</st> [<st c="946">https://code.visualstudio.com/</st>](https://code.visualstudio.com/)<st
    c="976">.</st>
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="805">在本章中，我们将使用Python 3.10+。</st> <st c="854">此外，我们将在本书中使用</st> **<st
    c="889">VS Code</st>** <st c="896">编辑器，您可以从</st> <st c="941">以下位置</st> <st c="946">[https://code.visualstudio.com/](https://code.visualstudio.com/)<st
    c="976">下载。</st>
- en: <st c="977">The code for this chapter is located</st> <st c="1015">at</st> [<st
    c="1018">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter12/moviesstore</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter12/moviesstore)<st
    c="1126">.</st>
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="977">本章的代码位于</st> <st c="1015">以下位置</st> [<st c="1018">https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter12/moviesstore</st>](https://github.com/PacktPublishing/Django-5-for-the-Impatient-Second-Edition/tree/main/Chapter12/moviesstore)<st
    c="1126">。</st>
- en: <st c="1127">The CiA video for this chapter can be found</st> <st c="1172">at</st>
    [<st c="1175">https://packt.link/4NyAv</st>](https://packt.link/4NyAv)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1127">本章的CiA视频可以在</st> <st c="1172">以下位置找到</st> [<st c="1175">https://packt.link/4NyAv</st>](https://packt.link/4NyAv)
- en: <st c="1199">Creating the purchase page</st>
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="1199">创建购买页面</st>
- en: <st c="1226">Let’s improve our shopping cart page</st> <st c="1263">and include
    some functionalities to allow users to make purchases.</st> <st c="1331">To achieve
    that, we need to follow</st> <st c="1366">these steps:</st>
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1226">让我们改进我们的购物车页面</st> <st c="1263">并添加一些功能，以便用户可以进行购买。</st> <st c="1331">为了实现这一点，我们需要遵循</st>
    <st c="1366">以下步骤：</st>
- en: <st c="1378">Configuring the</st> <st c="1395">purchase URL.</st>
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1378">配置购买URL。</st>
- en: <st c="1408">Defining the</st> `<st c="1422">purchase</st>` <st c="1430">function.</st>
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1408">定义</st> `<st c="1422">购买</st>` <st c="1430">函数。</st>
- en: <st c="1440">Updating the</st> `<st c="1454">cart.index</st>` <st c="1464">template.</st>
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1440">更新</st> `<st c="1454">购物车索引</st>` <st c="1464">模板。</st>
- en: <st c="1474">Creating the</st> `<st c="1488">cart.purchase</st>` <st c="1501">template.</st>
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="1474">创建</st> `<st c="1488">购物车购买</st>` <st c="1501">模板。</st>
- en: <st c="1511">Configuring the purchase URL</st>
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="1511">配置购买URL</st>
- en: <st c="1540">In</st> `<st c="1544">/cart/urls.py</st>`<st c="1557">, add the
    next</st> <st c="1571">path as shown</st> <st c="1586">in</st> **<st c="1589">bold</st>**<st
    c="1593">:</st>
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1540">在</st> `<st c="1544">/cart/urls.py</st>`<st c="1557">中，添加以下</st>
    <st c="1571">路径，如</st> <st c="1586">粗体</st> <st c="1593">所示：</st>
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: <st c="1860">We defined a</st> `<st c="1873">cart/purchase/</st>` <st c="1887">path
    that will execute the</st> `<st c="1915">purchase</st>` <st c="1923">function
    defined in the</st> `<st c="1948">views</st>` <st c="1953">file.</st> <st c="1960">We
    will implement the</st> `<st c="1982">purchase</st>` <st c="1990">function later.</st>
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="1860">我们定义了一个`<st c="1873">cart/purchase/</st>` <st c="1887">路径，该路径将执行在`<st
    c="1915">purchase</st>` <st c="1923">文件中定义的`<st c="1948">purchase</st>` <st c="1953">函数。</st>
    <st c="1960">我们将在稍后实现`<st c="1982">purchase</st>` <st c="1990">函数。</st>**
- en: <st c="2006">Defining the purchase function</st>
  id: totrans-22
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="2006">定义购买函数</st>
- en: <st c="2037">In</st> `<st c="2041">/cart/views.py</st>`<st c="2055">, add the</st>
    <st c="2065">following lines</st> <st c="2081">of code</st> <st c="2089">in</st>
    **<st c="2092">bold</st>**<st c="2096">:</st>
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="2037">在`<st c="2041">/cart/views.py</st>`<st c="2055">中，添加以下代码行**<st
    c="2092">（加粗）</st>**<st c="2096">：</st>
- en: '[PRE1]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**<st c="2981">The previous function is the largest one</st> <st c="3023">we
    have implemented in</st> <st c="3045">this book.</st> <st c="3057">Let’s explain
    this function by breaking it down</st> <st c="3105">into parts:</st>'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="2981">此前的函数是我们在这本书中实现的最大函数。</st> <st c="3023">让我们通过分解它来解释这个函数：</st>
    <st c="3057">让我们将这个函数分解成几个部分：</st>'
- en: '`<st c="3116">from .models import</st>` `<st c="3137">Order, Item</st>`'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="3116">from .models import</st>` `<st c="3137">Order, Item</st>`'
- en: '`<st c="3148">from django.contrib.auth.decorators</st>` `<st c="3185">import
    login_required</st>`'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="3148">from django.contrib.auth.decorators</st>` `<st c="3185">import
    login_required</st>`'
- en: <st c="3206">Let’s analyze this piece</st> <st c="3232">of code:</st>
  id: totrans-28
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="3206">让我们分析这段</st> <st c="3232">代码：</st>
- en: <st c="3240">We import the</st> `<st c="3255">Order</st>` <st c="3260">and</st>
    `<st c="3265">Item</st>` <st c="3269">models from the current</st> <st c="3294">app
    directory.</st>
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3240">我们从当前`<st c="3255">Order</st>` <st c="3260">和`<st c="3265">Item</st>`
    <st c="3269">模型从当前`<st c="3294">app目录</st>` <st c="3299">导入。</st>
- en: <st c="3308">We import the</st> `<st c="3323">login_required</st>` <st c="3337">decorator.</st>
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="3308">我们导入`<st c="3323">login_required</st>` <st c="3337">装饰器。</st>
- en: '`<st c="3348">@</st>``<st c="3350">login_required</st>`'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`<st c="3348">@</st>``<st c="3350">login_required</st>`'
- en: '`<st c="3364">def purchase(request):</st>`'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="3364">def purchase(request):</st>`'
- en: '`<st c="3387">cart =</st>` `<st c="3395">request.session.get(''cart'', {})</st>`'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="3387">cart =</st>` `<st c="3395">request.session.get(''cart'', {})</st>`'
- en: '`<st c="3426">movie_ids =</st>` `<st c="3439">list(cart.keys())</st>`'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="3426">movie_ids =</st>` `<st c="3439">list(cart.keys())</st>`'
- en: '`<st c="3456">if (movie_ids == []):</st>`'
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="3456">if (movie_ids == []):</st>`'
- en: '`**<st c="3478">return redirect(''cart.index'')</st>**`'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`**<st c="3478">return redirect(''cart.index'')</st>**`'
- en: '**<st c="3508">Let’s analyze this piece</st> <st c="3534">of code:</st>**'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**<st c="3508">让我们分析这段</st> <st c="3534">代码：</st>**'
- en: '**<st c="3542">We use the</st> `<st c="3554">login_required</st>` <st c="3568">decorator
    to</st> <st c="3582">ensure that the user must be logged in to access the</st>
    `<st c="3635">purchase</st>` <st c="3643">function.</st>**'
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3542">我们使用`<st c="3554">login_required</st>` <st c="3568">装饰器来确保用户必须登录才能访问`<st
    c="3635">purchase</st>` <st c="3643">函数。</st>**'
- en: '**<st c="3653">We define the</st> `<st c="3668">purchase</st>` <st c="3676">function,
    which will handle the</st> <st c="3709">purchase process.</st>**'
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3653">我们定义了`<st c="3668">purchase</st>` <st c="3676">函数，该函数将处理购买过程。</st>**'
- en: '**<st c="3726">We retrieve the cart data from the user’s session.</st> <st
    c="3778">The</st> `<st c="3782">cart</st>` <st c="3786">variable will contain
    a dictionary with</st> <st c="3827">movie IDs as keys and quantities</st> <st
    c="3860">as values.</st>**'
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3726">我们从用户的会话中检索购物车数据。</st> <st c="3778">`<st c="3782">cart</st>`
    <st c="3786">变量将包含一个字典，其中以电影ID为键，数量为值。</st>**'
- en: '**<st c="3870">We retrieve the movie IDs stored in the</st> `<st c="3911">cart</st>`
    <st c="3915">dict and convert them into a list</st> <st c="3950">named</st> `<st
    c="3956">movie_ids</st>`<st c="3965">.</st>**'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3870">我们从`<st c="3911">cart</st>` <st c="3915">字典中检索存储的电影ID并将它们转换为名为`<st
    c="3956">movie_ids</st>` <st c="3965">的列表。</st>**'
- en: '**<st c="3966">We check if the</st> `<st c="3983">movie_ids</st>` <st c="3992">list
    is empty (which indicates the cart is empty).</st> <st c="4044">In this case,
    the user is redirected to the</st> `<st c="4088">cart.index</st>` <st c="4098">page
    (here, the</st> `<st c="4115">purchase</st>` <st c="4123">function finalizes</st>
    <st c="4143">its execution).</st>**'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**<st c="3966">我们检查`<st c="3983">movie_ids</st>` <st c="3992">列表是否为空（这表示购物车为空）。</st>
    <st c="4044">在这种情况下，用户将被重定向到`<st c="4088">cart.index</st>` <st c="4098">页面（在这里，`<st
    c="4115">purchase</st>` <st c="4123">函数完成其执行）。</st>**'
- en: '***   `<st c="4158">movies_in_cart =</st>` `<st c="4176">Movie.objects.filter(id__in=movie_ids)</st>`'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '***   `<st c="4158">movies_in_cart =</st>` `<st c="4176">Movie.objects.filter(id__in=movie_ids)</st>`'
- en: '`<st c="4214">cart_total =</st>` `<st c="4228">calculate_cart_total(cart, movies_in_cart)</st>`'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="4214">cart_total =</st>` `<st c="4228">calculate_cart_total(cart, movies_in_cart)</st>`'
- en: '`<st c="4270">order =</st>` `<st c="4279">Order()</st>`'
  id: totrans-45
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="4270">order =</st>` `<st c="4279">Order()</st>`'
- en: '`<st c="4286">order.user =</st>` `<st c="4300">request.user</st>`'
  id: totrans-46
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="4286">order.user =</st>` `<st c="4300">request.user</st>`'
- en: '`<st c="4312">order.total =</st>` `<st c="4327">cart_total</st>`'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="4312">order.total =</st>` `<st c="4327">cart_total</st>`'
- en: '`**<st c="4337">order.save()</st>**`'
  id: totrans-48
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`**<st c="4337">order.save()</st>**`'
- en: '**`<st c="4350">for movie</st>` `<st c="4361">in movies_in_cart:</st>`**'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4350">for movie</st>` `<st c="4361">in movies_in_cart:</st>`**'
- en: '**`<st c="4379">item =</st>` `<st c="4387">Item()</st>`**'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4379">item =</st>` `<st c="4387">Item()</st>`**'
- en: '**`<st c="4393">item.movie =</st>` `<st c="4407">movie</st>`**'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4393">item.movie =</st>` `<st c="4407">movie</st>`**'
- en: '**`<st c="4412">item.price =</st>` `<st c="4426">movie.price</st>`**'
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4412">item.price =</st>` `<st c="4426">movie.price</st>`**'
- en: '**`<st c="4437">item.order =</st>` `<st c="4451">order</st>`**'
  id: totrans-53
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4437">item.order =</st>` `<st c="4451">order</st>`**'
- en: '**`<st c="4456">item.quantity =</st>` `<st c="4473">cart[str(movie.id)]</st>`**'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`<st c="4456">item.quantity =</st>` `<st c="4473">cart[str(movie.id)]</st>`**'
- en: '**`**<st c="4492">item.save()</st>**`**'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '**`**<st c="4492">item.save()</st>**`**'
- en: '****<st c="4504">Let’s analyze this piece</st> <st c="4530">of code:</st>****'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '****<st c="4504">让我们分析这段</st> <st c="4530">代码：</st>****'
- en: '****<st c="4538">If the cart is not empty, we</st> <st c="4567">continue the</st>
    <st c="4581">purchase process.</st>****'
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****<st c="4538">如果购物车不为空，我们</st> <st c="4567">继续购买流程。</st>****'
- en: '****<st c="4598">We retrieve movie objects from the database based on the IDs
    stored in the cart</st> <st c="4679">using</st> `<st c="4685">Movie.objects.filter(id__in=movie_ids</st>`<st
    c="4722">.</st>****'
  id: totrans-58
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****<st c="4598">根据购物车中存储的ID从数据库中检索电影对象</st> <st c="4679">使用</st> `<st c="4685">Movie.objects.filter(id__in=movie_ids</st>`<st
    c="4722">.</st>****'
- en: '****<st c="4723">We calculate the total cost of the movies in the cart using
    the</st> `<st c="4788">calculate_cart_total()</st>` <st c="4810">function.</st>****'
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****<st c="4723">我们使用</st> `<st c="4788">calculate_cart_total()</st>` <st c="4810">函数计算购物车中电影的总额。</st>****'
- en: '****<st c="4820">We create a new</st> `<st c="4837">Order</st>` <st c="4842">object.</st>
    <st c="4851">We set its attributes such as</st> `<st c="4881">user</st>` <st c="4885">(the
    logged-in user) and</st> `<st c="4911">total</st>` <st c="4916">(the cart total),
    and save it to</st> <st c="4950">the database.</st>****'
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****<st c="4820">我们创建一个新的</st> `<st c="4837">Order</st>` <st c="4842">对象。</st>
    <st c="4851">我们设置其属性，例如</st> `<st c="4881">user</st>` <st c="4885">(登录用户) 和</st>
    `<st c="4911">total</st>` <st c="4916">(购物车总额)，并将其保存到</st> <st c="4950">数据库中。</st>****'
- en: '****<st c="4963">We iterate over the movies in the cart.</st> <st c="5004">We
    create an</st> `<st c="5017">Item</st>` <st c="5021">object for each movie in
    the cart.</st> <st c="5057">For each</st> `<st c="5066">Item</st>`<st c="5070">,
    we set its</st> `<st c="5083">price</st>` <st c="5088">and</st> `<st c="5093">quantity</st>`<st
    c="5101">, link the corresponding</st> `<st c="5126">movie</st>` <st c="5131">and</st>
    `<st c="5136">order</st>`<st c="5141">, and save it to</st> <st c="5158">the database.</st>*********   `<st
    c="5171">request.session[''cart''] = {}</st>`'
  id: totrans-61
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '****<st c="4963">我们遍历购物车中的电影。</st> <st c="5004">对于购物车中的每部电影，我们创建一个</st> `<st
    c="5017">Item</st>` <st c="5021">对象。</st> <st c="5057">对于每个</st> `<st c="5066">Item</st>`<st
    c="5070">，我们设置其</st> `<st c="5083">价格</st>` <st c="5088">和</st> `<st c="5093">数量</st>`<st
    c="5101">，链接相应的</st> `<st c="5126">电影</st>` <st c="5131">和</st> `<st c="5136">订单</st>`<st
    c="5141">，并将其保存到</st> <st c="5158">数据库中。</st>*********   `<st c="5171">request.session[''cart'']
    = {}</st>`'
- en: '`<st c="5200">template_data = {}</st>`'
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="5200">template_data = {}</st>`'
- en: '`<st c="5219">template_data[''title''] = ''</st>``<st c="5246">Purchase confirmation''</st>`'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="5219">template_data[''title''] = ''</st>``<st c="5246">购买确认''</st>`'
- en: '`<st c="5269">template_data[''order_id''] =</st>` `<st c="5298">order.id</st>`'
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="5269">template_data[''order_id''] =</st>` `<st c="5298">order.id</st>`'
- en: '`<st c="5306">return render(request, ''cart/purchase.html'', {''</st>``<st
    c="5354">template_data'': template_data})</st>`'
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`<st c="5306">return render(request, ''cart/purchase.html'', {''</st>``<st
    c="5354">template_data'': template_data})</st>`'
- en: <st c="5386">Let’s analyze this piece</st> <st c="5412">of code:</st>
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: <st c="5386">让我们分析这段</st> <st c="5412">代码：</st>
- en: <st c="5420">After the purchase is completed, we clear the cart in the user’s
    session by setting</st> `<st c="5505">request.session['cart']</st>` <st c="5528">to
    an</st> <st c="5535">empty dictionary.</st>
  id: totrans-67
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="5420">购买完成后，我们通过将</st> `<st c="5505">request.session['cart']</st>` <st
    c="5528">设置为空字典来清除用户会话中的购物车。</st>
- en: <st c="5552">We prepare the data to be</st> <st c="5579">sent to the purchase
    confirmation template.</st> <st c="5623">This data includes the title of the page
    and the ID of the</st> <st c="5681">created order.</st>
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="5552">我们准备要发送到购买确认模板的数据。</st> <st c="5579">这些数据包括页面标题和创建的订单ID。</st>
- en: <st c="5696">Finally, we render the</st> `<st c="5720">cart/purchase.html</st>`
    <st c="5738">template.</st>******
  id: totrans-69
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="5696">最后，我们渲染</st> `<st c="5720">cart/purchase.html</st>` <st c="5738">模板。</st>******
- en: '******<st c="5748">Now that we have finished the purchase function, let’s include
    a button that links to</st> <st c="5835">this function.</st>'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '******<st c="5748">现在我们已经完成了购买功能，让我们添加一个链接到</st> <st c="5835">此功能的按钮。</st>'
- en: <st c="5849">Updating cart.index template</st>
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="5849">更新购物车.index模板</st>
- en: <st c="5878">In the</st> `<st c="5886">/cart/templates/cart/index.html</st>`
    <st c="5917">file, add</st> <st c="5928">the following lines</st> <st c="5948">in</st>
    **<st c="5951">bold</st>**<st c="5955">:</st>
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="5878">在</st> `<st c="5886">/cart/templates/cart/index.html</st>` <st
    c="5917">文件中，添加</st> <st c="5928">以下行</st> <st c="5948">在</st> **<st c="5951">粗体</st>**<st
    c="5955">：</st>
- en: '[PRE2]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: <st c="6321">We have added a button that links the shopping cart page with the
    purchase function.</st> <st c="6407">This button will be only displayed if</st>
    <st c="6444">there are movies added</st> <st c="6468">to</st> <st c="6471">the
    cart.</st>
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6321">我们添加了一个按钮，将购物车页面与购买功能链接起来。</st> <st c="6407">此按钮仅在</st> <st c="6444">购物车中添加了电影</st>
    <st c="6468">时显示</st> <st c="6471">。</st>
- en: <st c="6480">Creating cart.purchase template</st>
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="6480">创建购物车购买模板</st>
- en: <st c="6512">Now, in</st> `<st c="6521">/cart/templates/cart/</st>`<st c="6542">,
    create a new file,</st> `<st c="6563">purchase.html</st>`<st c="6576">. For now,
    fill it with</st> <st c="6600">the following:</st>
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6512">现在，在</st> `<st c="6521">/cart/templates/cart/</st>`<st c="6542">中，创建一个新文件，</st>
    `<st c="6563">purchase.html</st>`<st c="6576">。目前，用以下内容填充它：</st> <st c="6600">：</st>
- en: '[PRE3]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: <st c="6941">We have created a simple template that extends the</st> `<st c="6993">base.html</st>`
    <st c="7002">template and shows a congratulations message to the user, including
    the order number of the</st> <st c="7095">current purchase.</st>
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="6941">我们创建了一个简单的模板，它扩展了</st> `<st c="6993">base.html</st>` <st c="7002">模板，并向用户显示祝贺信息，包括当前购买的订单编号。</st>
- en: <st c="7112">Now, save those files, run the server, go to</st> `<st c="7158">http://localhost:8000/movies</st>`<st
    c="7186">, click on a couple of movies, and add them to the cart.</st> <st c="7243">Then,
    go to the</st> **<st c="7259">Cart</st>** <st c="7263">section and click</st>
    **<st c="7282">Purchase</st>** <st c="7290">(you will need to</st> <st c="7308">be
    logged in to execute the purchase action).</st> <st c="7355">Then, you will see
    a purchase confirmation message (</st>*<st c="7407">Figure 12</st>**<st c="7417">.1</st>*<st
    c="7419">):</st>
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7112">现在，保存这些文件，运行服务器，转到</st> `<st c="7158">http://localhost:8000/movies</st>`<st
    c="7186">，点击几部电影，并将它们添加到购物车。</st> <st c="7243">然后，转到</st> **<st c="7259">购物车</st>**
    <st c="7263">部分并点击</st> **<st c="7282">购买</st>** <st c="7290">(您需要</st> <st c="7308">登录才能执行购买操作)。</st>
    <st c="7355">然后，您将看到一个购买确认消息（</st>*<st c="7407">图12</st>**<st c="7417">.1</st>*<st
    c="7419">）：</st>
- en: '![Figure 12.1 – Purchase page](img/B22457_12_01.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图12.1 – 购买页面](img/B22457_12_01.jpg)'
- en: <st c="7512">Figure 12.1 – Purchase page</st>
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7512">图12.1 – 购买页面</st>
- en: <st c="7539">If you navigate to the admin panel, you will see a new order registered
    (linked to the user who made the purchase) and a couple of items (linked to the
    previous order), as shown in</st> *<st c="7721">Figure 12</st>**<st c="7730">.2</st>*<st
    c="7732">:</st>
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7539">如果您导航到管理面板，您将看到一个新订单已注册（与进行购买的用户相关联）以及一些项目（与之前的订单相关联），如图</st> *<st
    c="7721">图12</st>**<st c="7730">.2</st>*<st c="7732">所示：</st>
- en: '![Figure 12.2 – Order and items in the admin panel](img/B22457_12_02.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图12.2 – 管理面板中的订单和项目](img/B22457_12_02.jpg)'
- en: <st c="7915">Figure 12.2 – Order and items in the admin panel</st>
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7915">图12.2 – 管理面板中的订单和项目</st>
- en: <st c="7963">At this point, we are able to create</st> <st c="8000">orders and
    register the corresponding information into the database.</st> <st c="8070">Now,
    let’s implement a page to see</st> <st c="8105">the orders.</st>
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="7963">此时，我们能够创建订单并将相应的信息注册到数据库中。</st> <st c="8070">现在，让我们实现一个查看订单的页面。</st>
- en: <st c="8116">Creating the orders page</st>
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="8116">创建订单页面</st>
- en: <st c="8141">Let’s finalize our Movies Store</st> <st c="8173">by allowing users
    to see their orders.</st> <st c="8213">To achieve that, we need to follow</st>
    <st c="8248">these steps:</st>
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8141">让我们通过允许用户查看他们的订单来完善我们的电影商店。</st> <st c="8173">为了实现这一点，我们需要遵循</st>
    `<st c="8213">以下步骤：</st>`
- en: <st c="8260">Configuring the</st> <st c="8277">orders URL.</st>
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="8260">配置</st> `<st c="8277">订单URL。</st>`
- en: <st c="8288">Defining the</st> `<st c="8302">orders</st>` <st c="8308">function.</st>
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="8288">定义</st> `<st c="8302">订单</st>` <st c="8308">函数。</st>
- en: <st c="8318">Creating the</st> `<st c="8332">accounts.orders</st>` <st c="8347">template.</st>
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="8318">创建</st> `<st c="8332">accounts.orders</st>` <st c="8347">模板。</st>
- en: <st c="8357">Adding a link to the</st> <st c="8379">base template.</st>
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: <st c="8357">在基础模板中添加链接。</st>
- en: <st c="8393">Configuring the orders URL</st>
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="8393">配置订单URL</st>
- en: <st c="8420">An order belongs to a</st> <st c="8442">specific user.</st> <st
    c="8458">Because of this, we will add the orders functionality inside the</st>
    `<st c="8523">accounts</st>` <st c="8531">app.</st> <st c="8537">In</st> `<st
    c="8540">/accounts/urls.py</st>`<st c="8557">, add the next path</st> <st c="8577">in</st>
    **<st c="8580">bold</st>**<st c="8584">:</st>
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8420">订单属于一个</st> `<st c="8442">特定用户</st>`。 <st c="8458">因此，我们将在</st>
    `<st c="8523">accounts</st>` <st c="8531">应用中添加订单功能。</st> <st c="8537">在</st>
    `<st c="8540">/accounts/urls.py</st>`<st c="8557">中，添加以下**<st c="8580">粗体</st>**<st
    c="8584">路径：</st>
- en: '[PRE4]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: <st c="8869">We defined an</st> `<st c="8883">accounts/orders/</st>` <st c="8899">path,
    which will execute the</st> `<st c="8929">orders</st>` <st c="8935">function defined
    in the</st> `<st c="8960">views</st>` <st c="8965">file.</st> <st c="8972">We</st>
    <st c="8975">will implement the</st> `<st c="8994">orders</st>` <st c="9000">function
    later.</st>
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="8869">我们定义了一个</st> `<st c="8883">accounts/orders/</st>` <st c="8899">路径，该路径将执行在</st>
    `<st c="8960">views</st>` <st c="8965">文件中定义的</st> `<st c="8929">orders</st>`
    <st c="8935">函数。</st> <st c="8972">我们</st> <st c="8975">将在稍后实现</st> `<st c="8994">orders</st>`
    <st c="9000">函数。</st>
- en: <st c="9016">Defining the orders function</st>
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: <st c="9016">定义订单函数</st>
- en: <st c="9045">In</st> `<st c="9049">/accounts/views.py</st>`<st c="9067">, add
    the</st> <st c="9076">following</st> <st c="9087">lines</st> <st c="9093">in</st>
    **<st c="9096">bold</st>**<st c="9100">:</st>
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `<st c="9049">/accounts/views.py</st>`<st c="9067">中，添加以下</st> `<st c="9076">行</st>`
    <st c="9087">，并在**<st c="9096">粗体</st>**<st c="9100">中：</st>
- en: '[PRE5]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**<st c="9470">Let’s explain the</st> <st c="9489">previous code:</st>'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**<st c="9470">让我们解释一下</st> `<st c="9489">之前的代码：</st>`'
- en: <st c="9503">We import the</st> `<st c="9518">User</st>` <st c="9522">model</st>
    <st c="9528">from Django’s</st> <st c="9543">authentication system.</st>
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="9503">我们从Django的</st> `<st c="9518">用户</st>` <st c="9522">模型</st> <st
    c="9528">中导入。</st> `<st c="9543">认证系统</st>`。
- en: <st c="9565">We use the</st> `<st c="9577">login_required</st>` <st c="9591">decorator
    to ensure that the user must be logged in to access the</st> `<st c="9658">orders</st>`
    <st c="9664">function.</st>
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="9565">我们使用</st> `<st c="9577">login_required</st>` <st c="9591">装饰器来确保用户必须登录才能访问</st>
    `<st c="9658">orders</st>` <st c="9664">函数。</st>
- en: <st c="9674">We define the</st> `<st c="9689">orders</st>` <st c="9695">function,
    which</st> <st c="9711">takes a</st> `<st c="9720">request</st>` <st c="9727">object
    as</st> <st c="9738">a parameter.</st>
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="9674">我们定义了</st> `<st c="9689">orders</st>` <st c="9695">函数，它</st> `<st
    c="9711">接受</st>` `<st c="9720">request</st>` <st c="9727">对象作为</st> `<st c="9738">参数</st>`。
- en: <st c="9750">We define the</st> `<st c="9765">template_data</st>` <st c="9778">variable
    and assign it</st> <st c="9802">a</st> `<st c="9804">title</st>`<st c="9809">.</st>
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: <st c="9750">我们定义了</st> `<st c="9765">template_data</st>` <st c="9778">变量并将其</st>
    <st c="9802">分配</st> `<st c="9804">标题</st>`<st c="9809">。</st>
- en: <st c="9810">We retrieve all orders belonging to the currently logged-in user
    (</st>`<st c="9877">request.user</st>`<st c="9890">).</st> <st c="9894">The</st>
    `<st c="9898">order_set</st>` <st c="9907">attribute is used to access the related
    orders associated with the user through their relationship (you can learn more
    about this type of relationship here</st> [<st c="10064">https://docs.djangoproject.com/en/5.0/topics/db/examples/many_to_one/</st>](https://docs.djangoproject.com/en/5.0/topics/db/examples/many_to_one/)<st
    c="10133">).</st> <st c="10137">Remember that there is a</st> `<st c="10162">ForeignKey</st>`
    <st c="10172">relationship between the</st> `<st c="10198">User</st>` <st c="10202">model
    and the</st> `<st c="10217">Order</st>` <st c="10222">model.</st>
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们检索属于当前登录用户的全部订单（</st>`<st c="9877">request.user</st>`<st c="9890">）。</st>
    <st c="9894">`order_set`</st> <st c="9907">属性用于通过其关系访问与用户相关联的相关订单（你可以在这里了解更多关于此类关系的信息</st>
    [<st c="10064">https://docs.djangoproject.com/en/5.0/topics/db/examples/many_to_one/</st>](https://docs.djangoproject.com/en/5.0/topics/db/examples/many_to_one/)<st
    c="10133">）。</st> <st c="10137">记住，`User` <st c="10162">外键</st> <st c="10172">关系存在于`User`
    <st c="10198">模型和`Order` <st c="10217">模型之间。</st>
- en: <st c="10229">Finally, we pass the orders to the template and</st> <st c="10278">render
    it.</st>
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们将订单传递给模板并渲染它。
- en: <st c="10288">Creating accounts.orders template</st>
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建`accounts.orders`模板
- en: <st c="10322">Now, in</st> `<st c="10331">/accounts/templates/accounts/</st>`<st
    c="10360">, create a</st> <st c="10371">new file,</st> `<st c="10381">orders.html</st>`<st
    c="10392">. For now, fill it with</st> <st c="10415">the following:</st>
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在<st c="10322">`/accounts/templates/accounts/</st>`<st c="10331">中，创建一个新文件，</st>
    `<st c="10371">新文件</st>` `<st c="10381">orders.html</st>`<st c="10392">。目前，用以下内容填充它：</st>
- en: '[PRE6]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: <st c="11389">Let’s explain the</st> <st c="11408">previous</st> <st c="11417">code:</st>
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们解释一下之前的代码：
- en: <st c="11422">We extend the</st> `<st c="11437">base.html</st>` <st c="11446">template.</st>
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们扩展了`<st c="11437">base.html</st>` <st c="11446">模板。</st>
- en: <st c="11456">We iterate over each order object stored in</st> `<st c="11501">template_data.orders</st>`<st
    c="11521">. For each order, we display its</st> `<st c="11554">date</st>` <st
    c="11558">and</st> `<st c="11563">total</st>`<st c="11568">.</st>
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们遍历存储在`<st c="11501">template_data.orders</st>`<st c="11521">中的每个订单对象。对于每个订单，我们显示其`<st
    c="11554">日期</st>` <st c="11558">和</st> `<st c="11563">总计</st>`<st c="11568">。</st>
- en: <st c="11569">Then, we iterate we iterate over each item in the current order.</st>
    <st c="11635">The</st> `<st c="11639">order.item_set.all</st>` <st c="11657">retrieves
    all related items associated with the current order.</st> <st c="11721">For each
    of those items, we display its</st> `<st c="11761">price</st>` <st c="11766">and</st>
    `<st c="11771">quantity</st>`<st c="11779">, and the corresponding movie</st>
    <st c="11808">id</st> <st c="11812">and name.</st>
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们遍历当前订单中的每个项目。<st c="11635">The</st> `<st c="11639">order.item_set.all</st>`
    <st c="11657">检索与当前订单相关联的所有相关项目。</st> <st c="11721">对于这些项目中的每一个，我们显示其</st> `<st
    c="11761">价格</st>` <st c="11766">和</st> `<st c="11771">数量</st>`<st c="11779">，以及相应的电影</st>
    `<st c="11808">id</st>` <st c="11812">和名称。</st>
- en: <st c="11821">Adding a link in the base template</st>
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在基础模板中添加链接
- en: <st c="11856">Let’s add the orders link in the</st> <st c="11889">base template.</st>
    <st c="11905">In</st> `<st c="11908">/moviesstore/templates/base.html</st>`<st
    c="11940">, in the header section, add the following lines</st> <st c="11989">in</st>
    **<st c="11992">bold</st>**<st c="11996">:</st>
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '让我们在<st c="11856">基础模板</st> <st c="11889">中添加订单链接。</st> <st c="11905">在</st>
    `<st c="11908">/moviesstore/templates/base.html</st>`<st c="11940">中，在标题部分，添加以下带有**<st
    c="11992">粗体</st>**<st c="11996">的行</st>:'
- en: '[PRE7]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: <st c="12344">Now, save those files, run the server, and go to</st> `<st c="12394">http://localhost:8000/accounts/orders</st>`<st
    c="12431">. If you made a purchase, you would see your corresponding orders (</st>*<st
    c="12498">Figure 12</st>**<st c="12508">.3</st>*<st c="12510">):</st>
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，保存这些文件，运行服务器，并转到<st c="12394">http://localhost:8000/accounts/orders</st>。如果你进行了购买，你会看到相应的订单（</st>*<st
    c="12498">图12</st>**<st c="12508">.3</st>*<st c="12510">）：</st>
- en: '![Figure 12.3 – Orders page](img/B22457_12_03.jpg)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图12.3 – 订单页面](img/B22457_12_03.jpg)'
- en: <st c="12761">Figure 12.3 – Orders page</st>
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 图12.3 – 订单页面
- en: <st c="12786">We have completed the</st> <st c="12809">Movies Store project
    code.</st> <st c="12836">We have implemented all the functionalities planned in</st>
    [*<st c="12891">Chapter 1</st>*](B22457_01.xhtml#_idTextAnchor014)<st c="12900">.
    Now, let’s compare the implemented code with the</st> <st c="12951">architecture
    diagram.</st>
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: <st c="12972">Recapping the Movies Store MVT architecture</st>
  id: totrans-120
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: <st c="13016">The architecture diagram of the Movies Store that we designed
    in</st> [*<st c="13082">Chapter 1</st>*](B22457_01.xhtml#_idTextAnchor014) <st
    c="13091">served as a blueprint for designing the</st> <st c="13131">applications,
    layers, and code of the Movies Store.</st> <st c="13184">We have already implemented
    all the applications and elements described in that diagram.</st> <st c="13273">So,
    let’s quickly recap what we have accomplished</st> <st c="13323">so far.</st>
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="13330">Figure 12</st>**<st c="13340">.4</st>* <st c="13342">displays
    the complete project tree directory structure and compares it with a simple version
    of the project architecture.</st> <st c="13465">We have successfully implemented
    four apps (</st>`<st c="13509">accounts</st>`<st c="13518">,</st> `<st c="13520">cart</st>`<st
    c="13524">,</st> `<st c="13526">home</st>`<st c="13530">, and</st> `<st c="13536">movies</st>`<st
    c="13542">), which contain most of the</st> <st c="13572">project’s functionalities.</st>'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.4 – Project tree directory compared with simplified architecture](img/B22457_12_04.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: <st c="13801">Figure 12.4 – Project tree directory compared with simplified
    architecture</st>
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '*<st c="13875">Figure 12</st>**<st c="13885">.5</st>* <st c="13887">displays
    the complete</st> <st c="13910">architecture.</st> <st c="13924">We hope you understand
    each of the architectural elements better and how they relate to</st> <st c="14012">each
    other.</st>'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.5 – Movies Store architecture](img/B22457_12_05.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
- en: <st c="14401">Figure 12.5 – Movies Store architecture</st>
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: <st c="14440">Let’s make a last</st> <st c="14459">quick analysis:</st>
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: <st c="14474">We implemented a project-level folder named</st> `<st c="14519">moviesstore</st>`<st
    c="14530">. This folder contained the project-level URL file, which connected
    with app-level</st> <st c="14613">URL files.</st>
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '<st c="14623">We implemented four</st> <st c="14643">Django apps.</st> <st
    c="14657">For each of those apps, we illustrated the communication between the
    three main layers: models, views,</st> <st c="14760">and templates.</st>'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="14774">We learned how to divide the code across multiple apps to improve
    maintainability and</st> <st c="14861">separate responsibilities.</st>
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="14887">We practiced the implementation of those files and layers by implementing
    a set of functionalities for our Movies</st> <st c="15002">Store project.</st>
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: <st c="15016">What a journey!</st> <st c="15033">We’ve utilized numerous Django
    modules, libraries, functions, concepts, and elements to</st> <st c="15120">implement</st>
    <st c="15131">this project.</st>
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15016">这是一段怎样的旅程啊！</st> <st c="15033">我们使用了大量的Django模块、库、函数、概念和元素来</st>
    <st c="15120">实现</st> <st c="15131">这个项目。</st>
- en: <st c="15144">Summary</st>
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: <st c="15144">摘要</st>
- en: <st c="15152">In this chapter, we completed the Movies Store project.</st> <st
    c="15209">We implemented purchase functionality, which took advantage of the</st>
    `<st c="15276">Order</st>` <st c="15281">and</st> `<st c="15286">Item</st>` <st
    c="15290">models.</st> <st c="15299">We created an orders page to allow users
    to view their orders.</st> <st c="15362">We recapped our Movies Store architecture
    diagram and engaged in comparisons and discussions with the actual project code.</st>
    <st c="15485">We have learned a lot since we started.</st> <st c="15525">Now,
    it’s time for the final chapter.</st> <st c="15563">Let’s learn how to deploy
    our Movies Store project to</st> <st c="15617">the cloud.</st>**********
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: <st c="15152">在本章中，我们完成了电影商店项目。</st> <st c="15209">我们实现了购买功能，该功能利用了</st> `<st
    c="15276">订单</st>` <st c="15281">和</st> `<st c="15286">商品</st>` <st c="15290">模型。</st>
    <st c="15299">我们创建了一个订单页面，允许用户查看他们的订单。</st> <st c="15362">我们回顾了电影商店架构图，并与实际项目代码进行了比较和讨论。</st>
    <st c="15485">自从我们开始以来，我们已经学到了很多。</st> <st c="15525">现在，是时候进入最后一章了。</st> <st c="15563">让我们学习如何将我们的电影商店项目部署到</st>
    <st c="15617">云端。</st>**********
