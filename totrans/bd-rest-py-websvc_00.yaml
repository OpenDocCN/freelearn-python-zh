- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**REST** (**Representational State Transfer**) is the architectural style that
    is driving modern web development and mobile apps. In fact, developing and interacting
    with RESTful Web Services is a required skill in any modern software development
    job. Sometimes, you have to interact with an existing API and in other cases,
    you have to design a RESTful API from scratch and make it work with **JSON** (**JavaScript
    Object Notation**).'
  prefs: []
  type: TYPE_NORMAL
- en: Python is one of the most popular programming languages. Python 3.5 is the most
    modern version of Python. It is open source, multiplatform, and you can use it
    to develop any kind of application, from websites to extremely complex scientific
    computing applications. There is always a Python package that makes things easier
    for you to avoid reinventing the wheel and solve the problems faster. The most
    important and popular Cloud computing providers make it easy to work with Python
    and its related Web frameworks. Thus, Python is an ideal choice for developing
    RESTful Web Services. The book covers all the things you need to know to select
    the most appropriate Python Web framework and develop a RESTful API from scratch.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will work with the three most popular Python web frameworks that make it
    easy to develop RESTful Web Services: Django, Flask, and Tornado. Each web framework
    has its advantages and tradeoffs. You will work with examples that represent appropriate
    cases for each of these Web frameworks, in combination with additional Python
    packages that will simplify the most common tasks. You will learn to use different
    tools to test and develop high-quality, consistent and scalable RESTful Web Services.
    You will also take advantage of object-oriented programming, also known as OOP,
    to maximize code reuse and minimize maintenance costs.'
  prefs: []
  type: TYPE_NORMAL
- en: You will always write unit tests and improve test coverage for all of the RESTful
    Web Services that you will develop throughout the book. You won’t just run the
    sample code but you will also make sure that you write tests for your RESTful
    API.
  prefs: []
  type: TYPE_NORMAL
- en: This book will allow you to learn how to take advantage of many packages that
    will simplify the most common tasks related to RESTful Web Services. You will
    be able to start creating your own RESTful APIs for any domain in any of the covered
    Web frameworks in Python 3.5 or greater.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Developing RESTful APIs with Django"), *Developing
    RESTful APIs with Django*, in this chapter we will start working with Django and
    Django REST Framework, and we will create a RESTful Web API that performs **CRUD**
    (**Create, Read, Update and Delete**) operations on a simple SQLite database.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2.  Working with Class-Based Views and Hyperlinked
    APIs in Django"), *Working with Class-Based Views and Hyperlinked APIs in Django*,
    in this chapter we will expand the capabilities of the RESTful API that we started
    in the previous chapter. We will change the ORM settings to work with a more powerful
    PostgreSQL database and we will take advantage of advanced features included in
    Django REST Framework that allow us to reduce boilerplate code for complex APIs,
    such as class based views.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3.  Improving and Adding Authentication to an
    API With Django"), *Improving and Adding Authentication to an API with Django*,
    in this chapter we will improve the RESTful API that we started in the previous
    chapter. We will add unique constraints to the model and update the database.
    We will make it easy to update single fields with the PATCH method and we will
    take advantage of pagination. We will start working with authentication, permissions
    and throttling.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4.  Throttling, Filtering, Testing, and Deploying
    an API with Django"), *Throttling, Filtering, Testing and Deploying an API with
    Django*, in this chapter we will take advantage of many features included in Django
    REST Framework to define throttling policies. We will use filtering, searching
    and ordering classes to make it easy to configure filters, search queries and
    desired order for the results in HTTP requests. We will use the browsable API
    feature to test these new features included in our API. We will write a first
    round of unit tests, measure test coverage and then write additional unit tests
    to improve test coverage. Finally, we will learn many considerations for deployment
    and scalability.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5.  Developing RESTful APIs with Flask") [,](ch05.html
    "Chapter 5.  Developing RESTful APIs with Flask") *Developing RESTful APIs with
    Flask*, in this chapter we will start working with Flask and its Flask-RESTful
    extension. We will create a RESTful Web API that performs CRUD operations on a
    simple list.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6.  Working with Models, SQLAlchemy, and Hyperlinked
    APIs in Flask"), *Working with Models, SQLAlchemy, and Hyperlinked APIs in Flask*,
    in this chapter we will expand the capabilities of the RESTful API that we started
    in the previous chapter. We will use SQLAlchemy as our ORM to work with a PostgreSQL
    database and we will take advantage of advanced features included in Flask and
    Flask-RESTful that will allow us to easily organize code for complex APIs, such
    as models and blueprints.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7.  Improving and Adding Authentication to an
    API with Flask"), *Improving and Adding Authentication to an API with Flask*,
    in this chapter we will improve the RESTful API in many ways. We will add user
    friendly error messages when resources aren’t unique. We will test how to update
    single or multiple fields with the PATCH method and we will create our own generic
    pagination class. Then, we will start working with authentication and permissions.
    We will added a user model and we will update the database. We will make many
    changes in the different pieces of code to achieve a specific security goal and
    we will take advantage of Flask-HTTPAuth and passlib to use HTTP authentication
    in our API.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Testing and Deploying an API with Flask"),
    *Testing and Deploying an API with Flask*, in this chapter we will set up a testing
    environment. We will install nose2 to make it easy to discover and execute unit
    tests and we will create a new database to be used for testing. We will write
    a first round of unit tests, measure test coverage and then write additional unit
    tests to improve test coverage. Finally, we will learn many considerations for
    deployment and scalability.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9.  Developing RESTful APIs with Tornado"),*Developing
    RESTful APIs with Tornado*, we will work with Tornado to create a RESTful Web
    API. We will design a RESTful API to interact with slow sensors and actuators.
    We will defined the requirements for our API and we will understand the tasks
    performed by each HTTP method. We will create the classes that represent a drone
    and write code to simulate slow I/O operations that are called for each HTTP request
    method. We will write classes that represent request handlers and process the
    different HTTP requests and configure the URL patterns to route URLs to request
    handlers and their methods.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10.  Working with Asynchronous Code, Testing,
    and Deploying an API with Tornado"), *Working with Asynchronous Code, Testing,
    and Deploying an API with Tornado*, in this chapter we will understand the difference
    between synchronous and asynchronous execution. We will create a new version of
    the RESTful API that takes advantage of the non-blocking features in Tornado combined
    with asynchronous execution. We will improve scalability for our existing API
    and we will make it possible to start executing other requests while waiting for
    the slow I/O operations with sensors and actuators. Then, we will set up a testing
    environment. We will install nose2 to make it easy to discover and execute unit
    tests. We will wrote a first round of unit tests, measure test coverage and then
    write additional unit tests to improve test coverage. We will create all the necessary
    tests to have a complete coverage of all the lines of code.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to work with the different samples for Python 3.5.x, you will need
    any computer with an Intel Core i3 or higher CPU and at least 4 GB RAM. You can
    work with any of the following operating systems:'
  prefs: []
  type: TYPE_NORMAL
- en: Windows 7 or greater (Windows 8, Windows 8.1 or Windows 10)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: macOS Mountain Lion or greater
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any Linux version capable of running Python 3.5.x and any modern browser with
    JavaScript support
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will need Python 3.5 or greater installed on your computer.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for web developers who have working knowledge of Python and would
    like to build amazing web services by taking advantage of the various frameworks
    of Python. You should have some knowledge of RESTful APIs.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "If
    no game matches the specified id or primary key, the server will return just a
    `404 Not Found` status."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book-what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of. To send us general
    feedback, simply e-mail feedback@packtpub.com, and mention the book's title in
    the subject of your message. If there is a topic that you have expertise in and
    you are interested in either writing or contributing to a book, see our author
    guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Building-RESTful-Python-Web-Services](https://github.com/PacktPublishing/Building-RESTful-Python-Web-Services).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books-maybe a mistake in the text
    or the code-we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at copyright@packtpub.com with a link to the suspected pirated
    material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at questions@packtpub.com,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
