- en: Setting Up Serverless Architectures
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置无服务器架构
- en: So far, we have understood what the serverless paradigm is, and also how serverless
    systems work. We have also understood how AWS Lambda's serverless tool works.
    We have also learned the basics of how triggers work in AWS Lambda as well as
    a detailed understanding of the system settings and configuration available to
    the user in the Lambda environment. We have also learned how the Lambda console
    works, and also how to identify and use various parts of the Lambda console in
    detail, including code deployment, trigger manipulation, deploying tests in the
    console, versioning our Lambda function, and also the different settings available.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经了解了无服务器范式是什么，以及无服务器系统是如何工作的。我们还了解了 AWS Lambda 的无服务器工具是如何工作的。我们还学习了
    AWS Lambda 中触发器的基本工作原理，以及用户在 Lambda 环境中可用的系统设置和配置的详细理解。我们还学习了 Lambda 控制台的工作原理，以及如何详细识别和使用
    Lambda 控制台的各种部分，包括代码部署、触发器操作、在控制台中部署测试、版本化 Lambda 函数，以及不同的设置。
- en: By the end of this chapter, you will have a clear understanding of all the important
    triggers available for AWS Lambda and how you can use them to set up efficient
    Lambda architectures. You will also understand what an event structure is, and
    what an event structure looks like for some AWS resources, and how you can use
    that knowledge to write and deploy better trigger-based Lambda architectures.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，您将清楚地了解所有重要的 AWS Lambda 触发器，以及如何使用它们来设置高效的 Lambda 架构。您还将了解事件结构是什么，以及某些
    AWS 资源的事件结构看起来像什么，以及如何利用这些知识来编写和部署更好的基于事件的 Lambda 架构。
- en: 'This chapter will cover the following points:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下内容：
- en: S3 trigger
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: S3 触发
- en: SNS trigger
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SNS 触发
- en: SQS trigger
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SQS 触发
- en: CloudWatch Event and Logs trigger
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: CloudWatch 事件和日志触发
- en: S3 trigger
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: S3 触发
- en: S3 is the AWS object storage service, where the user can store and retrieve
    any type of object. In this section, we shall be learning how the S3 trigger works,
    what the event structure of an S3 event looks like, and also how to make use of
    them in the learning to build a Lambda function.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: S3 是 AWS 对象存储服务，用户可以在其中存储和检索任何类型的对象。在本节中，我们将学习 S3 触发器的工作原理，S3 事件的架构结构，以及如何利用它们来构建
    Lambda 函数。
- en: 'We will be building a Lambda function that does the following:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将构建一个 Lambda 函数，该函数执行以下操作：
- en: Receives a PUT request event from the S3 service
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从 S3 服务接收 PUT 请求事件
- en: Prints the name of the file and other major details
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打印文件的名称和其他主要细节
- en: Transfers that file to a different bucket
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件传输到不同的存储桶
- en: 'So, let''s get started on learning how to use the S3 trigger efficiently. We
    will be working on this task step-by-step, as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，让我们开始学习如何高效地使用 S3 触发器。我们将逐步进行这项任务，如下所示：
- en: Firstly, we need to create two S3 buckets for the task. One will be the bucket
    where the file will be uploaded by the user. The other will be the one where the
    file is transferred and uploaded by the Lambda function.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们需要为任务创建两个 S3 存储桶。一个将是用户上传文件的存储桶，另一个将是文件被 Lambda 函数传输和上传的存储桶。
- en: The S3 console looks like the following screenshot when there are no pre-existing
    buckets. You can go there by selecting the S3 service from the drop-down Services
    menu in the top-left of your AWS console:![](img/00048.jpeg)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当没有预存存储桶时，S3 控制台看起来如下截图所示。您可以通过在 AWS 控制台左上角的“服务”下拉菜单中选择 S3 服务来访问它！[](img/00048.jpeg)
- en: Let's create two buckets, namely `receiver-bucket` and `sender-bucket`.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们创建两个存储桶，分别是 `receiver-bucket` 和 `sender-bucket`。
- en: The `sender-bucket` bucket will be used as the bucket where the user uploads
    the files. The `receiver-bucket` bucket is the one where the Lambda function uploads
    the files. So, as per our problem statement, whenever we upload files to the `sender-bucket`
    bucket, the Lambda function gets triggered and the files get uploaded to `receiver-bucket`.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`sender-bucket` 存储桶将被用作用户上传文件的存储桶。`receiver-bucket` 存储桶是 Lambda 函数上传文件的存储桶。因此，根据我们的问题陈述，每当我们将文件上传到
    `sender-bucket` 存储桶时，Lambda 函数就会被触发，文件也会被上传到 `receiver-bucket`。'
- en: 'When we click on the Create bucket button in the S3 console, we get a dialog
    that looks like this:'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当我们在 S3 控制台中点击“创建存储桶”按钮时，我们会看到一个看起来像这样的对话框：
- en: '![](img/00049.jpeg)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![](img/00049.jpeg)'
- en: 'In the preceding dialog, we need to enter the following settings:'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在前面的对话框中，我们需要输入以下设置：
- en: Bucket Name:As the name suggests, we need to enter the name of the bucket we
    are creating. For the creation of the first bucket, name it `sender-bucket` and
    name the second bucket `receiver-bucket`.
  id: totrans-22
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 存储桶名称：正如其名所示，我们需要输入我们正在创建的存储桶的名称。对于创建第一个存储桶，命名为`sender-bucket`，第二个存储桶命名为`receiver-bucket`。
- en: Region: This is an AWS region we want the bucket to reside in. You can use the
    default region for this or the region closest to wherever you are located.
  id: totrans-23
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 区域：这是我们希望存储桶所在的AWS区域。您可以使用默认区域或您所在位置最近的区域。
- en: 'Copy settings from an existing bucket: This specifies whether we want to use
    the same settings as in some other bucket in the console for this bucket too.
    As we do not currently  have any other bucket in our console, we can skip this
    setting by leaving it empty. After this, you can click on the Next button in the
    bottom-right part of the popup.'
  id: totrans-24
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从现有存储桶复制设置：这指定了我们是否希望为此存储桶使用与控制台中某个其他存储桶相同的设置。由于我们目前控制台中没有其他存储桶，我们可以通过将其留空来跳过此设置。之后，您可以在弹出窗口的右下角点击下一步按钮。
- en: 'Once we click Next, we get redirected to the second tab of the popup, which
    is the Set properties menu and looks like this:'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击下一步后，我们将被重定向到弹出窗口的第二标签页，即设置属性菜单，看起来如下：
- en: '![](img/00050.jpeg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00050.jpeg)'
- en: 'In this part of the popup, we need to decide on the following settings:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此弹出窗口的部分，我们需要决定以下设置：
- en: Versioning:This is relevant if we want to keep multiple versions of the files
    in the S3 bucket. This setting is required when you need a Git style versioning
    for your S3 bucket. Note that the storage cost would be included in line with
    the number of versioned documents.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 版本控制：如果我们想在S3存储桶中保留多个文件版本，这将是相关的。当你需要为S3存储桶提供Git风格的版本控制时，需要此设置。请注意，存储成本将根据版本化文档的数量相应增加。
- en: Server access logging: This will log all the access requests to the S3 bucket.
    This helps debug any security breaches and secure the S3 bucket and the files.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务器访问日志：这将记录对S3存储桶的所有访问请求。这有助于调试任何安全漏洞并保护S3存储桶和文件。
- en: Tags: This will tag the bucket using a *Name:Value* style, the same style of
    tagging as we learned for Lambda functions.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标签：这将使用*名称：值*样式标记存储桶，这与我们为Lambda函数学习到的标记方式相同。
- en: Object-level logging: This will use the CloudTrail service of AWS to log all
    the access requests and other details and activities on the S3 bucket. This will
    also include CloudTrail costs too. So, use this feature only if you need detailed
    logging. We shall skip using this for this section.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对象级日志记录：这将使用AWS的CloudTrail服务来记录对S3存储桶的所有访问请求和其他详细信息及活动。这还将包括CloudTrail的成本。因此，只有在你需要详细日志记录时才使用此功能。我们将跳过在此部分使用此功能。
- en: 'After finishing creating the buckets, the S3 console will look like this, with
    both the created buckets listed:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在完成创建存储桶后，S3控制台将看起来像这样，列出了创建的存储桶：
- en: '![](img/00051.jpeg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00051.jpeg)'
- en: We have successfully created S3 buckets for our task. Now, we have to create
    a Lambda function that can recognize an object upload in the `sender-bucket` bucket
    and send that file to the `receiver-bucket` bucket.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们已成功创建了用于我们任务的S3存储桶。现在，我们必须创建一个Lambda函数，该函数可以识别`sender-bucket`存储桶中的对象上传并将该文件发送到`receiver-bucket`存储桶。
- en: 'While creating the Lambda function, this time choose the s3-get-object-python 
    blueprint from the listed options available:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在创建Lambda函数时，这次从提供的选项中选择`s3-get-object-python`蓝图：
- en: '![](img/00052.jpeg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00052.jpeg)'
- en: 'Configure the bucket details in the next step. In the Bucket section, select
    the sender-bucket bucket and select the Object Created (All) option in the Event
    type action. This is because we want to send a notification to Lambda whenever
    an object gets created in the `sender-bucket` bucket. The completed part of the
    section will look like this:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中配置存储桶详细信息。在存储桶部分，选择`sender-bucket`存储桶，并在事件类型操作中选择对象创建（全部）选项。这是因为我们希望在`sender-bucket`存储桶中创建对象时向Lambda发送通知。该部分的完成部分将看起来如下：
- en: '![](img/00053.jpeg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00053.jpeg)'
- en: 'Once you have enabled the trigger, Lambda helps you by creating a boilerplate
    code for the task. All we need to do is write the code to put the object into
    the `receiver-bucket` bucket. The boilerplate code can be seen in the Lambda function
    code section:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用触发器后，Lambda将帮助您为任务创建样板代码。我们所需做的只是编写将对象放入`receiver-bucket`存储桶的代码。样板代码可以在Lambda函数代码部分中看到：
- en: '![](img/00054.jpeg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00054.jpeg)'
- en: 'When this step has been completed and you have clicked the Create function
    button, you can see the Triggers section of the Lambda console, which displays
    a success message in green at the top:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当这一步完成并且你点击了创建功能按钮后，你可以在Lambda控制台的触发器部分看到，顶部会显示绿色的成功消息：
- en: '![](img/00055.jpeg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00055.jpeg)'
- en: 'I have uploaded a small image file into the `sender-bucket` bucket. So, now
    the contents of the sender-bucket bucket look like this:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我已将一个小图像文件上传到`sender-bucket`存储桶。因此，现在sender-bucket存储桶的内容如下：
- en: '![](img/00056.jpeg)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00056.jpeg)'
- en: 'As soon as this file had been uploaded, the Lambda function got triggered.
    The Lambda function code looks like this:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦这个文件被上传，Lambda函数就被触发了。Lambda函数的代码如下：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now, when you run the Lambda function, you can see the same file in the receiver-bucket
    bucket:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，当你运行Lambda函数时，你可以在receiver-bucket存储桶中看到相同的文件：
- en: '![](img/00057.jpeg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00057.jpeg)'
- en: SNS trigger
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SNS触发
- en: The SNS notification service can be used across multiple use cases, one of which
    involves triggering Lambda functions. The SNS trigger is popularly used as an
    interface between the AWS CloudWatch service and Lambda.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: SNS通知服务可以用于多个用例，其中之一涉及触发Lambda函数。SNS触发器通常用作AWS CloudWatch服务和Lambda之间的接口。
- en: 'So, in this section, we will do the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create an SNS topic
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个SNS主题
- en: Create a CloudWatch alarm for our `receiver-bucket` bucket to monitor the number
    of objects in the bucket
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的`receiver-bucket`存储桶创建一个CloudWatch警报来监控存储桶中的对象数量
- en: Once the objects count reaches 5, the alarm will be set to ALERT and the corresponding
    notification will be sent to the SNS topic that we have just created
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦对象计数达到5，警报将被设置为ALERT，并将相应的通知发送到我们刚刚创建的SNS主题
- en: This SNS topic will then trigger a Lambda function, which prints out a Hello
    World message for us
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此SNS主题将触发一个Lambda函数，为我们打印出“Hello World”消息
- en: This will help you understand how to monitor different AWS services and set
    up alarms for some thresholds for those metrics. And depending on whether the
    service's metrics have hit that threshold or not, the Lambda function will get
    triggered.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助你了解如何监控不同的AWS服务，并为这些指标设置一些阈值警报。根据服务的指标是否达到该阈值，Lambda函数将被触发。
- en: 'The process flow for this is as follows:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 此流程的步骤如下：
- en: 'SNS topics can be created from the SNS dashboard. By clicking on the Create
    topic option, you will be redirected to the topic creation dashboard of SNS. The
    SNS dashboard of AWS looks like this:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 可以从SNS仪表板创建SNS主题。通过点击创建主题选项，你将被重定向到SNS的主题创建仪表板。AWS的SNS仪表板看起来如下：
- en: '![](img/00058.jpeg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00058.jpeg)'
- en: 'The SNS topic creation wizard in the next step looks like this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步的SNS主题创建向导看起来如下：
- en: '![](img/00059.jpeg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00059.jpeg)'
- en: In this creation wizard, you can name the SNS topic that you are creating, and
    add any meta information you want to.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在此创建向导中，你可以为创建的SNS主题命名，并添加任何你想要的元信息。
- en: 'Once the topic is created, you can view it in the Topics menu, which is on
    the left of your SNS dashboard. The button looks like this:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主题创建后，你可以在SNS仪表板左侧的“主题”菜单中查看它。按钮看起来如下：
- en: '![](img/00060.jpeg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00060.jpeg)'
- en: 'Upon clicking the Topics tab, a list of topics will be displayed, as shown
    in the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“主题”标签后，将显示一系列主题，如下面的截图所示：
- en: '![](img/00061.jpeg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00061.jpeg)'
- en: 'Now that we have successfully created an SNS topic, we shall create a CloudWatch
    alarm to monitor our S3 bucket for files. The AWS CloudWatch dashboard looks something
    like this:'
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在我们已成功创建了一个SNS主题，我们将创建一个CloudWatch警报来监控我们的S3存储桶中的文件。AWS的CloudWatch仪表板看起来大致如下：
- en: '![](img/00062.jpeg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00062.jpeg)'
- en: 'Now, we can go to the Alarms page by clicking the Alarms button in the list
    on the left of the dashboard. The AWS Alarms page of looks like this:'
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们可以通过点击仪表板左侧列表中的警报按钮，进入警报页面。AWS的警报页面看起来如下：
- en: '![](img/00063.jpeg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00063.jpeg)'
- en: 'Next, click on Create Alarm to create an alarm. This will open an alarm creation
    wizard with multiple options. The wizard looks like this, depending on the services
    running in your AWS ecosystem:'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，点击“创建警报”以创建警报。这将打开一个带有多个选项的警报创建向导。根据你在AWS生态系统运行的服务，向导看起来是这样的：
- en: '![](img/00064.jpeg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00064.jpeg)'
- en: 'As we intend to create an alarm for our S3 bucket, we can go to the S3 Metrics tab
    and ignore the rest of the available metrics. If you click on the Storage Metrics
    option in the S3 Metrics category, you will be re-directed to another alarm creation
    wizard that looks like the following, depending on the number of buckets you have
    in your S3:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00065.jpeg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
- en: 'If you observe the options in the Metric Name column, you will see two options
    available for each bucket: NumberOfObjects and BucketSizeBytes. They are self-explanatory 
    and we will only need the NumberOfObjects option for the `receiver-bucket` bucket.
    So, select that option and click Next:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00066.jpeg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: 'This will take you to the alarm definition wizard, where you need to specify
    the details of the SNS topic and the threshold for the alarm. The wizard looks
    like this:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/00067.jpeg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
- en: 'Add in the details for the threshold and the name of the alarm. The threshold
    is five files, which means that the alarm will be triggered as soon as the number
    of files in the corresponding bucket (`receiver-bucket` in our case) reaches a
    total of five. The wizard looks like this:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00068.jpeg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
- en: 'In the Actions option, we can configure the alarm to send the notification
    to the SNS topic that we have just created. You can select the topic from the
    drop-down list, as follows:'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00069.jpeg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
- en: 'Once we have configured the SNS topic, we can click on the blue Create Alarm button
    at the bottom. This will create the alarm that is linked to the SNS topic as a
    notification pipeline. The created alarm will look like this on the dashboard:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00070.jpeg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
- en: 'Now, we can move on to building the Lambda function for the task. For this
    particular task, use the sns-message-python blueprint while creating our Lambda
    function:'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00071.jpeg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
- en: 'In the previous step, when you have selected the blueprint, you will be asked
    to enter some meta information regarding your Lambda function, just like we did
    previously while creating Lambda functions. In the same wizard, you will also
    be asked to mention the name of the SNS topic. You can specify it here:'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00072.jpeg)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have selected all the options for the Lambda function correctly,
    we can now go on to the code. The desired code will look like this:'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/00073.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
- en: The preceding code will display a `Hello World` message whenever the Lambda
    function gets triggered. This we have completed the setup for this task.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: To test the preceding setup, you can simply upload more than five files to your
    `receiver-bucket` bucket and check for Lambda function's execution.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: SQS trigger
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **AWS Simple Queue Service (SQS)** is the AWS queue service. This service
    is similar to the queuing mechanisms that are used generally in software engineering.
    This enables us to add, store, and remove messages inside the queue.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: We will learn how to trigger a Lambda function, depending on the number of messages
    in a SQS queue. This task will help you understand how serverless batch data architectures
    can be built and how to build one yourself.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将学习如何根据 SQS 队列中的消息数量触发 Lambda 函数。此任务将帮助您了解如何构建无服务器批数据架构以及如何自己构建一个。
- en: We will do this by monitoring our SQS queue with a CloudWatch alarm and relaying
    the information to Lambda via an SNS topic, just like we did in the previous task.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过使用 CloudWatch 警报监控我们的 SQS 队列并将信息通过 SNS 主题传递给 Lambda 来完成此操作，就像我们在之前的任务中所做的那样。
- en: 'So, in this section, we will do the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create an SQS queue
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 SQS 队列
- en: Create an SNS topic
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 SNS 主题
- en: Create a CloudWatch alarm for our SQS queue to monitor the number of messages
    in the queue
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为我们的 SQS 队列创建一个 CloudWatch 警报以监控队列中的消息数量
- en: Once the messages count reaches 5, the alarm will be set to ALERT and the corresponding
    notification will be sent to the SNS topic we have just created
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦消息计数达到 5，警报将被设置为 ALERT，并将相应的通知发送到我们刚刚创建的 SNS 主题
- en: This SNS topic will then trigger a Lambda function, which prints out a `Hello
    World` message for us
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此 SNS 主题将触发一个 Lambda 函数，为我们打印出一条 `Hello World` 消息
- en: This will help you understand how to monitor queues and build efficient serverless
    data architectures that are batched, instead of in real time.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您了解如何监控队列并构建批处理而非实时的高效无服务器数据架构。
- en: 'The process flow for this is as follows:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程的流程如下：
- en: 'We will start by creating an AWS SQS queue. We need to go to the SQS dashboard
    of our AWS account. The dashboard looks like this:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将首先创建一个 AWS SQS 队列。我们需要转到我们 AWS 账户的 SQS 仪表板。仪表板看起来如下：
- en: '![](img/00074.jpeg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00074.jpeg)'
- en: 'Click on the Get Started Now button to create an SQS queue. It will redirect
    you to the queue creation wizard, where you need to enter details such as the
    name, type of queue, and so on. The queue creation wizard looks like this:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“立即开始”按钮创建 SQS 队列。它将重定向您到队列创建向导，您需要输入诸如名称、队列类型等详细信息。队列创建向导看起来如下：
- en: '![](img/00075.jpeg)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00075.jpeg)'
- en: 'You can enter the name of the queue in Queue Name. In the What type of queue do
    you need? option, select the Standard Queue option. In the options at the bottom,
    select the blue Quick-Create Queue option:'
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您可以在“队列名称”中输入队列的名称。在“您需要哪种类型的队列？”选项中，选择“标准队列”选项。在底部的选项中，选择蓝色快速创建队列选项：
- en: '![](img/00076.jpeg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00076.jpeg)'
- en: 'The Configure Queue option is for advanced settings. It is not necessary to
    tweak those settings for this task. This is what the advanced settings look like:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 配置队列选项用于高级设置。对于此任务，不需要调整这些设置。高级设置看起来如下：
- en: '![](img/00077.jpeg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00077.jpeg)'
- en: 'Once you have created the queue, you will be taken to the SQS page, where all
    the queues that you have created are listed similarly to the SNS list. This page
    looks like this:'
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建了队列，您将被带到 SQS 页面，其中列出了您创建的所有队列，类似于 SNS 列表。此页面看起来如下：
- en: '![](img/00078.jpeg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00078.jpeg)'
- en: 'As we have already created an SNS topic in the previous task, we will use the
    same topic for this purpose. If you haven''t created an SNS topic, you can refer
    to the previous task for instructions on how to create one. The list of SNS topics
    looks like this:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们已经在之前的任务中创建了一个 SNS 主题，我们将使用相同的主题来完成此任务。如果您还没有创建 SNS 主题，可以参考之前的任务了解如何创建一个。SNS
    主题列表如下：
- en: '![](img/00079.jpeg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00079.jpeg)'
- en: 'Now, we will go to the CloudWatch dashboard to create an alarm to monitor our
    SQS queue and send a notification to Lambda via the SNS topic that we have already
    created. We can now see the SQS queue metrics in the alarm creation wizard:'
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将转到 CloudWatch 仪表板创建一个警报以监控我们的 SQS 队列并通过我们已创建的 SNS 主题向 Lambda 发送通知。我们可以在警报创建向导中看到
    SQS 队列指标：
- en: '![](img/00080.jpeg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00080.jpeg)'
- en: 'By clicking on the Queue Metrics option under SQS Metrics, we will be taken
    to the page where all queue metrics are listed, and we need to select one of them
    for our alarm:'
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过点击 SQS 指标下的队列指标选项，我们将进入一个页面，其中列出了所有队列指标，我们需要从中选择一个用于我们的警报：
- en: '![](img/00081.jpeg)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00081.jpeg)'
- en: Here, we are interested in the ApproximateNumberOfMessagesVisible metric, which
    gives the number of messages in the queue. It says Approximate, as SQS is a distributed
    queue and the number of messages can only be determined stochastically.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，我们关注的是近似可见消息数指标，它给出了队列中的消息数量。它说近似，因为 SQS 是一个分布式队列，消息数量只能通过随机方式确定。
- en: 'In the next page, after selecting the ApproximateNumberOfMessagesVisible metric
    from the list, the necessary settings can be configured as we did for the S3 Metrics
    in the previous task. The page should look like this:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一页，在从列表中选择 ApproximateNumberOfMessagesVisible 指标后，可以配置必要的设置，就像我们在上一个任务中为 S3
    指标所做的那样。页面应该看起来像这样：
- en: '![](img/00082.jpeg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00082.jpeg)'
- en: 'In the Actions section, configure the SNS topic to which we want to send our
    notification. This step is also similar to how we configured the SNS topic in
    the previous task:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在操作部分，配置我们想要发送通知的 SNS 主题。此步骤也与我们在上一个任务中配置 SNS 主题的方式相似：
- en: '![](img/00083.jpeg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00083.jpeg)'
- en: 'Once you are satisfied with the metadata and the settings you have configured
    for the alarm, you can click the blue Create Alarm button on the bottom-right
    side of the screen. That will successfully create an alarm that monitors your
    SQS queue and sends a notification to the SNS topic that you have configured:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您对元数据和为警报配置的设置感到满意，您就可以点击屏幕右下角的蓝色创建警报按钮。这将成功创建一个监控您的 SQS 队列并向您配置的 SNS 主题发送通知的警报：
- en: '![](img/00084.jpeg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00084.jpeg)'
- en: 'We can use the Lambda function that we created in the previous task. Make sure
    the trigger is the SNS topic that we are using to configure the notification system
    of the alarm:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以使用在上一个任务中创建的 Lambda 函数。确保触发器是我们用于配置警报通知系统的 SNS 主题：
- en: '![](img/00085.jpeg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00085.jpeg)'
- en: 'The Lambda function code for this task is as follows:'
  id: totrans-130
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 此任务的 Lambda 函数代码如下：
- en: '[PRE1]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: CloudWatch trigger
  id: totrans-132
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CloudWatch 触发器
- en: '**CloudWatch** is the logging and monitoring service for AWS, where logs from
    most services get stored and monitored. In this section, we will learn how CloudWatch
    trigger works, how CloudWatch querying works in practice, configuring this in
    the Lambda function, and also how to make use of this knowledge to build a Lambda
    function.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '**CloudWatch** 是 AWS 的日志和监控服务，其中大多数服务的日志都存储和监控。在本节中，我们将学习 CloudWatch 触发器的工作原理，CloudWatch
    查询的实际工作方式，如何在 Lambda 函数中配置此功能，以及如何利用这些知识构建 Lambda 函数。'
- en: 'So, in this section, we will do the following:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本节中，我们将执行以下操作：
- en: Create a CloudWatch log
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建 CloudWatch 日志
- en: Briefly understand how a CloudWatch log works
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 简要了解 CloudWatch 日志的工作原理
- en: Create a Lambda function that gets triggered by the CloudWatch trigger
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个由 CloudWatch 触发器触发的 Lambda 函数
- en: This will help you understand and build resilient and stable serverless architectures.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 这将帮助您理解和构建弹性稳定的无服务器架构。
- en: 'The process flow for this is as follows:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 此过程的流程如下：
- en: 'To create a CloudWatch Logs group, click on the Logs option to the left of
    the CloudWatch console:'
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要创建 CloudWatch 日志组，请点击 CloudWatch 控制台左侧的“日志”选项：
- en: '![](img/00086.jpeg)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00086.jpeg)'
- en: 'Once you are on the AWS CloudWatch Logs page, you will see a list of log groups
    that are already present. The CloudWatch Logs page looks something like this:'
  id: totrans-142
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您进入 AWS CloudWatch 日志页面，您将看到已存在的日志组列表。CloudWatch 日志页面看起来大致如下：
- en: '![](img/00087.jpeg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00087.jpeg)'
- en: 'Let''s go ahead and create a new CloudWatch log. You can see the option to
    create a new log group from the Actions drop-down menu at the top:'
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们继续创建一个新的 CloudWatch 日志。您可以在顶部的操作下拉菜单中看到创建新日志组的选项：
- en: '![](img/00088.jpeg)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00088.jpeg)'
- en: 'In the next step, you will be asked to name the log group that you are creating.
    Go ahead and enter the relevant information and click Create log group:'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一步中，您将被要求命名您正在创建的日志组。请输入相关信息并点击创建日志组：
- en: '![](img/00089.jpeg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00089.jpeg)'
- en: 'So, now we have a new log group listed in the list of log groups in our CloudWatch
    console:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，现在我们在 CloudWatch 控制台中的日志组列表中看到了一个新的日志组：
- en: '![](img/00090.jpeg)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00090.jpeg)'
- en: Once the log group has been created, we can now start working on our Lambda
    function. So, let's move on to the Lambda console and start creating a new function.
  id: totrans-150
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建了日志组，我们现在就可以开始着手我们的 Lambda 函数了。所以，让我们转到 Lambda 控制台并开始创建一个新的函数。
- en: 'From the blueprints, choose the cloudwatch-logs-process-data blueprint. The
    description reads: A real-time consumer of log events ingested by an Amazon CloudWatch
    Logs log group:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从蓝图中选择 cloudwatch-logs-process-data 蓝图。描述为：一个实时消费者，用于处理由 Amazon CloudWatch 日志组摄取的日志事件：
- en: '![](img/00091.jpeg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00091.jpeg)'
- en: 'After selecting the corresponding blueprint option, you will be redirected
    to the Lambda creation wizard, as usual:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在选择相应的蓝图选项后，您将像往常一样被重定向到 Lambda 创建向导：
- en: '![](img/00092.jpeg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00092.jpeg)'
- en: 'Just as we did in the previous task, we will also enter relevant information
    about the log name and other details in the cloudwatch-logs pane of the Lambda
    creation panel:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 正如我们在上一个任务中所做的那样，我们也将有关日志名称和其他详细信息的相关信息输入到Lambda创建面板的cloudwatch-logs面板中：
- en: '![](img/00093.jpeg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00093.jpeg)'
- en: After clicking Create function, we will be directed to a Triggers page with
    the success message.
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击创建函数后，我们将被引导到一个带有成功消息的触发器页面。
- en: '![](img/00094.jpeg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00094.jpeg)'
- en: 'So, now we write the Lambda function code to identify the log group and print `Hello
    World ` message:'
  id: totrans-159
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 因此，现在我们编写Lambda函数代码来识别日志组和打印`Hello World`消息：
- en: '![](img/00095.jpeg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](img/00095.jpeg)'
- en: 'We have now successfully completed another task where we understood how to
    trigger a Lambda function via AWS CloudWatch Logs. The Lambda function code for
    this task is as follows:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在已经成功完成了另一个任务，了解了如何通过AWS CloudWatch Logs触发Lambda函数。此任务的Lambda函数代码如下：
- en: '[PRE2]'
  id: totrans-162
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Summary
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we have learned a great deal about how various Lambda triggers
    work, and how to configure them, set up the triggers, and write Lambda function
    code to handle the data from them.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了各种Lambda触发器的工作原理，以及如何配置它们、设置触发器以及编写Lambda函数代码来处理来自它们的数据。
- en: In the first task, we learned how S3 events work and how to understand and receive
    events from the S3 service to AWS Lambda. We have understood how to monitor S3
    buckets for file details via their metrics in CloudWatch and then send that notification
    via AWS SNS to a Lambda functions.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 在第一个任务中，我们学习了S3事件的工作原理以及如何从S3服务接收事件并理解它们，然后通过CloudWatch中的指标监控S3存储桶的文件详情，并通过AWS
    SNS将通知发送到Lambda函数。
- en: We have also learned how to create SNS topics and how to use them as an intermediate
    route between several metrics of AWS services from CloudWatch to AWS Lambda.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何创建SNS主题以及如何将它们用作CloudWatch到AWS Lambda之间多个AWS服务指标的中继路由。
- en: We have learned briefly about how AWS CloudWatch works. We understood what the
    metrics of various AWS services, such as S3, SQS, and CloudWatch, look like. We
    also learned how to set thresholds for CloudWatch Alarms, and how to connect those
    alarms to notification services, such as AWS SNS.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 我们简要了解了AWS CloudWatch的工作原理。我们了解了各种AWS服务（如S3、SQS和CloudWatch）的指标看起来是什么样子。我们还学习了如何为CloudWatch
    Alarms设置阈值，以及如何将这些警报连接到通知服务，如AWS SNS。
- en: We learned how AWS CloudWatch Logs work and how to connect and use the CloudWatch
    trigger in Lambda so it's triggered whenever a new log event is added/received.
    Overall, we have successfully created new AWS services, such as SQS, CloudWatch
    Logs, SNS, and S3 buckets in this chapter, and successfully built and deployed
    three serverless tasks/pipelines.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们学习了AWS CloudWatch Logs的工作原理以及如何连接并使用Lambda中的CloudWatch触发器，以便在添加/接收新的日志事件时触发。总的来说，我们成功创建了新的AWS服务，如SQS、CloudWatch
    Logs、SNS和S3存储桶，并在本章中成功构建和部署了三个无服务器任务/管道。
- en: In the next chapter, we will learn how to build serverless APIs, on which we
    will perform some tasks just like we did in this chapter, and get a hands-on understanding
    of how APIs work and, most importantly, how serverless APIs work.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何构建无服务器API，我们将执行一些与本章类似的任务，并亲身体验API的工作原理，最重要的是，了解无服务器API的工作原理。
