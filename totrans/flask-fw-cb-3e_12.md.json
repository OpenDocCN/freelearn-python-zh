["```py\n$ docker ps\nCONTAINER ID   IMAGE   COMMAND   CREATED   STATUS   PORTS   NAMES\n```", "```py\n$ docker run hello-world\n```", "```py\n    FROM python:3\n    ```", "```py\n    WORKDIR /usr/src/app\n    ```", "```py\n    COPY requirements.txt requirements.txt\n    ```", "```py\n    RUN pip install -r requirements.txt\n    ```", "```py\n    COPY . .\n    ```", "```py\n    ENTRYPOINT [ \"python\" ]\n    ```", "```py\n    CMD [ \"run.py\" ]\n    ```", "```py\n    $ pip freeze > requirements.txt\n    ```", "```py\naiohttp==3.8.4\naiosignal==1.3.1\nasync-timeout==4.0.2\nattrs==22.2.0\nBabel==2.11.0\nblinker==1.5\nboto3==1.26.76\nbotocore==1.29.76\ncertifi==2022.12.7\ncharset-normalizer==3.0.1\nclick==8.1.3\nFlask==2.2.3\nflask-babel==3.0.1\nFlask-SQLAlchemy==3.0.3\nFlask-WTF==1.1.1\nfrozenlist==1.3.3\ngeoip2==4.6.0\ngreenlet==2.0.2\ngunicorn==20.1.0\nidna==3.4\nitsdangerous==2.1.2\nJinja2==3.1.2\njmespath==1.0.1\nMarkupSafe==2.1.2\nmaxminddb==2.2.0\nmultidict==6.0.4\npython-dateutil==2.8.2\npytz==2022.7.1\nrequests==2.28.2\ns3transfer==0.6.0\nsentry-sdk==1.15.0\nsix==1.16.0\nSQLAlchemy==2.0.4\ntornado==6.2\ntyping_extensions==4.5.0\nurllib3==1.26.14\nWerkzeug==2.2.3\nWTForms==3.0.1\nyarl==1.8.2\nnewrelic==8.7.0\n```", "```py\n    from my_app import app\n    ```", "```py\n    app.run(debug=True, host='0.0.0.0', port='8000')\n    ```", "```py\n    $ docker build -t cookbook .\n    ```", "```py\n$ docker images\nREPOSITORY     TAG     IMAGE ID       CREATED          SIZE\ncookbook    latest   bceac988395a   48 seconds ago   1.13GB\n```", "```py\n    $ docker run -d -p 8000:8000 cookbook:latest\n    ```", "```py\n$ docker ps\nCONTAINER ID   IMAGE             COMMAND           CREATED         STATUS         PORTS                    NAMES\n92a7ee37e044   cookbook:latest   \"python run.py\"   7 seconds ago   Up 6 seconds   0.0.0.0:8000->8000/tcp   beautiful_ritchie\n```", "```py\n    $ minikube start\n    ```", "```py\n    😄  minikube v1.29.0 on Darwin 13.0\n    ```", "```py\n    ✨  Automatically selected the docker driver. Other choices: hyperkit, ssh\n    ```", "```py\n    📌  Using Docker Desktop driver with root privileges\n    ```", "```py\n    👍  Starting control plane node minikube in cluster minikube\n    ```", "```py\n    🚜  Pulling base image …\n    ```", "```py\n    . . . .\n    ```", "```py\n    Downloading and installing images\n    ```", "```py\n    . . .\n    ```", "```py\n    🔎  Verifying Kubernetes components...\n    ```", "```py\n    🌟  Enabled addons: storage-provisioner, default-storageclass\n    ```", "```py\n    🏄  Done! kubectl is now configured to use \"minikube\" cluster and \"default\" namespace by default\n    ```", "```py\n$ minikube dashboard\n🔌  Enabling dashboard ...\n▪ Using image docker.io/kubernetesui/metrics-scraper:v1.0.8\n▪ Using image docker.io/kubernetesui/dashboard:v2.7.0\n🤔  Verifying dashboard health ...\n🚀  Launching proxy ...\n🤔  Verifying proxy health ...\n🎉  Opening http://127.0.0.1:57206/api/v1/namespaces/kubernetes-dashboard/services/http:kubernetes-dashboard:/proxy/ in your default browser...\n```", "```py\n    $ eval $(minikube -p minikube docker-env)\n    ```", "```py\n    $ docker build -t cookbook .\n    ```", "```py\n    apiVersion: apps/v1\n    ```", "```py\n    kind: Deployment\n    ```", "```py\n    metadata:\n    ```", "```py\n      creationTimestamp: null\n    ```", "```py\n      labels:\n    ```", "```py\n        app: cookbook-recipe\n    ```", "```py\n      name: cookbook-recipe\n    ```", "```py\n    spec:\n    ```", "```py\n      replicas: 1\n    ```", "```py\n      selector:\n    ```", "```py\n        matchLabels:\n    ```", "```py\n          app: cookbook-recipe\n    ```", "```py\n      strategy: {}\n    ```", "```py\n      template:\n    ```", "```py\n        metadata:\n    ```", "```py\n          creationTimestamp: null\n    ```", "```py\n          labels:\n    ```", "```py\n            app: cookbook-recipe\n    ```", "```py\n        spec:\n    ```", "```py\n          containers:\n    ```", "```py\n          - image: cookbook:latest\n    ```", "```py\n            name: cookbook\n    ```", "```py\n            resources: {}\n    ```", "```py\n            imagePullPolicy: Never\n    ```", "```py\n    status: {}\n    ```", "```py\n    $ kubectl apply -f cookbook-deployment.yaml\n    ```", "```py\n    deployment.apps/cookbook-recipe created\n    ```", "```py\n$ kubectl get deployments\nNAME              READY   UP-TO-DATE   AVAILABLE   AGE\ncookbook-recipe   1/1     1            1           26s\n```", "```py\n    $ kubectl expose deployment cookbook-recipe --type=LoadBalancer --port=8000\n    ```", "```py\n    service/cookbook-recipe exposed\n    ```", "```py\n$ minikube service cookbook-recipe\n```", "```py\n$ kubectl scale --replicas=3 deployment/cookbook-recipe\ndeployment.apps/cookbook-recipe scaled\n```", "```py\n$ kubectl get deployments\nNAME              READY   UP-TO-DATE   AVAILABLE   AGE\ncookbook-recipe   3/3     3            3           90s\n```", "```py\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: \"2023-03-06T08:23:24Z\"\n  labels:\n    app: cookbook-recipe\n  name: cookbook-recipe\n  namespace: default\n  resourceVersion: \"5991\"\n  uid: 1253962c-f3d5-4a1f-b997-c11a4abd2b33\nspec:\n  allocateLoadBalancerNodePorts: true\n  clusterIP: 10.105.38.134\n  clusterIPs:\n  - 10.105.38.134\n  externalTrafficPolicy: Cluster\n  internalTrafficPolicy: Cluster\n  ipFamilies:\n  - IPv4\n  ipFamilyPolicy: SingleStack\n  ports:\n  - nodePort: 31473\n    port: 8000\n    protocol: TCP\n    targetPort: 8000\n  selector:\n    app: cookbook-recipe\n  sessionAffinity: None\n  type: LoadBalancer\nstatus:\n  loadBalancer: {}\n```", "```py\n    $ gcloud init\n    ```", "```py\n$ gcloud builds submit --tag \"gcr.io/<Your project\n  ID>/<Name of your container image>\"\n```", "```py\n    $ gcloud run deploy \"your-application-name\" –image\n    ```", "```py\n      \"gcr.io/<Your project ID>/<Name of your container\n    ```", "```py\n      image>\" --allow-unauthenticated --platform \"managed\"\n    ```", "```py\nname: Build and Deploy to Cloud Run\non:\n  push:\n    branches:\n    - vol-3\nenv:\n  PROJECT_ID: ${{ secrets.RUN_PROJECT }}\n  RUN_REGION: asia-south1\n  SERVICE_NAME: flask-cookbook-git\njobs:\n  setup-build-deploy:\n    name: Setup, Build, and Deploy\n    runs-on: ubuntu-latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@v3\n    # Setup gcloud CLI\n    - uses: 'google-github-actions/auth@v1'\n      with:\n        credentials_json: ${{ secrets.RUN_SA_KEY }}\n        project_id: ${{ secrets.RUN_PROJECT }}\n    # Build and push image to Google Container Registry\n    - name: Build\n      run: |-\n        gcloud builds submit \\\n          --quiet \\\n          --tag \"gcr.io/$PROJECT_ID/$SERVICE_NAME\"\n    # Deploy image to Cloud Run\n    - name: Deploy\n      run: |-\n        gcloud run deploy \"$SERVICE_NAME\" \\\n          --quiet \\\n          --region \"$RUN_REGION\" \\\n          --image \"gcr.io/$PROJECT_ID/$SERVICE_NAME\" \\\n          --platform \"managed\" \\\n          --allow-unauthenticated\n```"]