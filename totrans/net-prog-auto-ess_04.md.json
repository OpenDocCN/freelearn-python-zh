["```py\nhostname {{name}}\n!\ninterface Loopback100\ndescription {{name}} router loopback\nip address 100.100.100.{{id}} 255.255.255.255\n!\ninterface GigabitEthernet1/0\ndescription Connection to {{to_name}} router G0/1\n!\ninterface GigabitEthernet1/0.1{{id}}\ndescription Access to {{to_name}}\nencapsulation dot1Q 1{{id}}\nip address 100.0.1{{id}}.2 255.255.255.252\nip ospf network point-to-point\nip ospf cost 100\n!\nrouter ospf 100\nrouter-id 100.100.100.{{id}}\nnetwork 100.0.0.0 0.255.255.255 area 0\n!\n```", "```py\n- id: 11\n  name: Sydney\n  to_name: Melbourne\n- id: 12\n  name: Brisbane\n  to_name: Melbourne\n- id: 13\n  name: Adelaide\n  to_name: Melbourne\n```", "```py\nfrom jinja2 import Environment, FileSystemLoader\nimport yaml\nenv = Environment(loader=FileSystemLoader('templates'))\ntemplate = env.get_template('cisco_template_python.txt')\nwith open('router_definitions.yaml') as f:\n    routers = yaml.safe_load(f)\nfor router in routers:\n    router_conf = router['name'] + '_router_config.txt'\n    with open(router_conf, 'w') as f:\n        f.write(template.render(router))\n```", "```py\nhostname Sydney\n!\ninterface Loopback100\ndescription Sydney router loopback\nip address 100.100.100.11 255.255.255.255\n!\ninterface GigabitEthernet1/0\ndescription Connection to Melbourne router G0/1\n!\ninterface GigabitEthernet1/0.111\ndescription Access to Melbourne\nencapsulation dot1Q 111\nip address 100.0.111.2 255.255.255.252\nip ospf network point-to-point\nip ospf cost 100\n!\nrouter ospf 100\nrouter-id 100.100.100.11\nnetwork 100.0.0.0 0.255.255.255 area 0\n!\n```", "```py\nhostname Brisbane\n!\ninterface Loopback100\ndescription Brisbane router loopback\nip address 100.100.100.12 255.255.255.255\n!\ninterface GigabitEthernet1/0\ndescription Connection to Melbourne router G0/1\n!\ninterface GigabitEthernet1/0.112\ndescription Access to Melbourne\nencapsulation dot1Q 112\nip address 100.0.112.2 255.255.255.252\nip ospf network point-to-point\nip ospf cost 100\n!\nrouter ospf 100\nrouter-id 100.100.100.12\nnetwork 100.0.0.0 0.255.255.255 area 0\n!\n```", "```py\nhostname {{.Name}}\n!\ninterface Loopback100\ndescription {{.Name}} router loopback\nip address 100.100.100.{{.Id}} 255.255.255.255\n!\ninterface GigabitEthernet1/0\ndescription Connection to {{.Toname}} router G0/1\n!\ninterface GigabitEthernet1/0.1{{.Id}}\ndescription Access to {{.Toname}}\nencapsulation dot1Q 1{{.Id}}\nip address 100.0.1{{.Id}}.2 255.255.255.252\nip ospf network point-to-point\nip ospf cost 100\n!\nrouter ospf 100\nrouter-id 100.100.100.{{.Id}}\nnetwork 100.0.0.0 0.255.255.255 area 0\n!\n```", "```py\npackage main\nimport (\n    \"io/ioutil\"\n    \"os\"\n    \"text/template\"\n    \"gopkg.in/yaml.v3\"\n)\ntype Router struct {\n    Id     int    `yaml:\"id\"`\n    Name   string `yaml:\"name\"`\n    Toname string `yaml:\"to_name\"`\n}\ntype RouterList []Router\nfunc check(e error) {\n    if e != nil {\n        panic(e)\n    }\n}\nfunc main() {\n    var routers RouterList\n    yamlFile, err := ioutil.ReadFile(\"router_definitions.yaml\")\n    check(err)\n    err = yaml.Unmarshal(yamlFile, &routers)\n    check(err)\n    templateFile, err := ioutil.ReadFile(\"cisco_template_go.txt\")\n    check(err)\n    for _, router := range routers {\n        outFile, err := os.Create(router.Name + \"_router_config.txt\")\n        check(err)\n        tmpl, err := template.New(\"render\").Parse(string(templateFile))\n        check(err)\n        err = tmpl.Execute(outFile, router)\n        check(err)\n    }\n}\n```", "```py\n<router>\n  <interface>\n    <ip>\n       <unicast>\n       10.2.2.3\n       </unicast>\n    </ip>\n  </interface>\n  <loopback>\n    <ip>\n       <unicast>\n       100.1.1.1\n       </unicast>\n    </ip>\n  </loopback>\n</router>\n```", "```py\n{\n  \"router\": {\n    \"interface\": {\n      \"ip\": {\n        \"unicast\": \"10.2.2.3\"\n      },\n    \"loopback\": {\n      \"ip\": {\n        \"unicast\": \"100.1.1.1\"\n    }\n  }\n}\n```", "```py\n{\"router\": {\"interface\": {\"ip\": {\"unicast\": \"10.2.2.3\"}}, \"loopback\": {\"ip\": {\"unicast\": \"100.1.1.1\"}}}\n```", "```py\nrouter:\n  interface:\n    ip:\n      unicast: 10.2.2.3\n  loopback:\n    ip:\n      unicast: 100.1.1.1\n```"]