["```py\n$ python3 -m venv venv\n\n$ source venv/bin/activate \n```", "```py\n(venv) $ cat requirements.txt\n\ndjango\n\ndjango-rest-framework\n\ndjango-prometheus\n\n(venv) $ pip install -r requirements.txt\n\nCollecting Django\n\n  Downloading Django-3.2.7-py3-none-any.whl (7.9 MB)\n\n     |████████████████████████████████| 7.9 MB 5.7 MB/s\n\n...\n\nInstalling collected packages: djangorestframework, django-rest-framework\n\n    Running setup.py install for django-rest-framework ... done\n\nSuccessfully installed django-rest-framework-0.1.0 djangorestframework-3.12.4 \n```", "```py\n(venv) $ python3 manage.py runserver 0.0.0.0:8000\n\nWatching for file changes with StatReloader\n\nPerforming system checks...\n\nSystem check identified no issues (0 silenced).\n\nOctober 01, 2021 - 23:24:26\n\nDjango version 3.2.7, using settings 'microposts.settings'\n\nStarting development server at http://0.0.0.0:8000/\n\nQuit the server with CONTROL-C. \n```", "```py\nINSTALLED_APPS = [\n\n    'django.contrib.admin',\n\n    'django.contrib.auth',\n\n    'django.contrib.contenttypes',\n\n    'django.contrib.sessions',\n\n    'django.contrib.messages',\n\n    'django.contrib.staticfiles',\n\n    'django_prometheus',\n\n    'rest_framework',\n\n    'api',\n\n] \n```", "```py\nMIDDLEWARE = [\n\n    'django_prometheus.middleware.PrometheusBeforeMiddleware',\n\n    'django.middleware.security.SecurityMiddleware',\n\n    'django.contrib.sessions.middleware.SessionMiddleware',\n\n    'django.middleware.common.CommonMiddleware',\n\n    'django.middleware.csrf.CsrfViewMiddleware',\n\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n\n    'django.contrib.messages.middleware.MessageMiddleware',\n\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n\n    'django_prometheus.middleware.PrometheusAfterMiddleware',\n\n] \n```", "```py\nfrom django.contrib import admin\n\nfrom django.urls import include, path\n\nurlpatterns = [\n\n    path('', include('django_prometheus.urls')),\n\n    path('api/', include('api.urls')),\n\n    path('admin/', admin.site.urls),\n\n] \n```", "```py\n# my global config\n\nglobal:\n\n  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n\n  # scrape_timeout is set to the global default (10s).\n\nscrape_configs:\n\n  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.\n\n  - job_name: \"prometheus\"\n\n    # metrics_path defaults to '/metrics'\n\n    # scheme defaults to 'http'.\n\n    static_configs:\n\n      # The target needs to point to your local IP address\n\n      # 192.168.1.196 IS AN EXAMPLE THAT WON'T WORK IN YOUR SYSTEM\n\n      - targets: [\"192.168.1.196:8000\"] \n```", "```py\n$ docker run -p 9090:9090  -v /full/path/to/file/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus\n\nlevel=info ts=2021-10-02T15:24:17.228Z caller=main.go:400 msg=\"No time or size retention was set so using the default time retention\" duration=15d\n\nlevel=info ts=2021-10-02T15:24:17.228Z caller=main.go:438 msg=\"Starting Prometheus\" version=\"(version=2.30.2, branch=HEAD, revision=b30db03f35651888e34ac101a06e25d27d15b476)\"\n\n... \n\nlevel=info ts=2021-10-02T15:24:17.266Z caller=main.go:794 msg=\"Server is ready to receive web requests.\" \n```", "```py\nsum(rate(django_http_requests_latency_seconds_by_view_method_count[1m])) by (method) \n```", "```py\nhistogram_quantile(0.95, rate(django_http_requests_latency_seconds_by_view_method_bucket[5m])) \n```"]