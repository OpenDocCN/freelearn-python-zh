["```py\n$ sudo apt update\n$ sudo apt install python3.10-venv\n$ python3 -m venv venv \n$ source venv/bin/activate\n(venv) $\n(venv) $ deactivate \n```", "```py\n(venv) $ pip install pexpect \n```", "```py\n(venv) $ python\nPython 3.10.4 (main, Jun 29 2022, 12:14:53) [GCC 11.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import pexpect\n>>> dir(pexpect)\n['EOF', 'ExceptionPexpect', 'Expecter', 'PY3', 'TIMEOUT', '__all__', '__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__revision__', '__spec__', '__version__', 'exceptions', 'expect', 'is_executable_file', 'pty_spawn', 'run', 'runu', 'searcher_re', 'searcher_string', 'spawn', 'spawnbase',\n 'spawnu', 'split_command_line', 'sys', 'utils', 'which']\n    >>> exit() \n```", "```py\nlax-edg-r2(config)#crypto key generate rsa \n```", "```py\nHost 192.168.2.51\n  HostKeyAlgorithms +ssh-rsa\n  KexAlgorithms +diffie-hellman-group-exchange-sha1\nHost 192.168.2.52\n  HostKeyAlgorithms +ssh-rsa\n  KexAlgorithms +diffie-hellman-group-exchange-sha1 \n```", "```py\n(venv) $ $ telnet 192.168.2.51\nTrying 192.168.2.51...\nConnected to 192.168.2.51.\nEscape character is '^]'.\n<skip>\nUser Access Verification\nUsername: cisco\nPassword: \n```", "```py\nlax-edg-r1#sh run | i cisco\nenable password cisco\nusername cisco privilege 15 secret 5 $1$SXY7$Hk6z8OmtloIzFpyw6as2G.\n password cisco\n password cisco \n```", "```py\nline con 0\n password cisco\nline aux 0\nline vty 0 4\n exec-timeout 720 0\n password cisco\n login local\n transport input telnet ssh \n```", "```py\n>>> import pexpect\n>>> child = pexpect.spawn('telnet 192.168.2.51')\n>>> child.expect('Username')\n0\n>>> child.sendline('cisco')\n6\n>>> child.expect('Password')\n0\n>>> child.sendline('cisco')\n6\n>>> child.expect('lax-edg-r1#')\n0\n>>> child.sendline('show version | i V')\n19\n>>> child.before\nb\": \\r\\n************************************************************************\\r\\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\\r\\n* education. IOSv is provided as-is and is not supported by Cisco's      *\\r\\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\\r\\n* of the IOSv Software or Documentation to any third party for any       *\\r\\n* purposes is expressly prohibited except as otherwise authorized by     *\\r\\n* Cisco in writing.                                                      *\\r\\n***********************************************************************\\r\\n\"\n>>> child.sendline('exit')\n5\n>>> exit() \n```", "```py\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('lax-edg-r1#')\n0\n>>> child.before\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 9Y0KJ2ZL98EQQVUED5T2Q\\r\\n'\n>>> child.after\nb'iosv-1#' \n```", "```py\n>>> child.expect('[Uu]sername') \n```", "```py\n>>> child.expect(['Username', 'username']) \n```", "```py\n>>> child.sendline('show run | i hostname')\n22\n>>> child.expect('lax-edg-r1')\n0\n>>> child.before\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.6(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 9Y0KJ2ZL98EQQVUED5T2Q\\r\\n'\n>>> \n```", "```py\niosv-1#sh run | i hostname\nhostname lax-edg-r1 \n```", "```py\n>>> child.sendline('show run | i hostname')\n22\n>>> child.expect('lax-edg-r1#')\n0\n>>> child.before\nb'#show run | i hostname\\r\\nhostname lax-edg-r1\\r\\n' \n```", "```py\n#!/usr/bin/env python\nimport pexpect\ndevices = {'iosv-1': {'prompt': 'lax-edg-r1#', 'ip': '192.168.2.51'},\n           'iosv-2': {'prompt': 'lax-edg-r2#', 'ip': '192.168.2.52'}}\nusername = 'cisco'\npassword = 'cisco'\nfor device in devices.keys():\n    device_prompt = devices[device]['prompt']\n    child = pexpect.spawn('telnet ' + devices[device]['ip'])\n    child.expect('Username:')\n    child.sendline(username)\n    child.expect('Password:')\n    child.sendline(password)\n    child.expect(device_prompt)\n    child.sendline('show version | i V')\n    child.expect(device_prompt)\n    print(child.before)\n    child.sendline('exit') \n```", "```py\ndevices = {'iosv-1': {'prompt': 'lax-edg-r1#', 'ip': '192.168.2.51'},\n           'iosv-2': {'prompt': 'lax-edg-r2#', 'ip': '192.168.2.52'}} \n```", "```py\n$ python chapter2_1.py \nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 98U40DKV403INHIULHYHB\\r\\n'\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\r\\n' \n```", "```py\n>>> child.expect('Username', timeout=5) \n```", "```py\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('lax-edg-r1#')\n0\n>>> child.before\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-\n-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 98U40DKV403INHIULHYHB\\r\\n'\n>>> child.interact()\nshow version | i V\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\nProcessor board ID 98U40DKV403INHIULHYHB\nlax-edg-r1#exit\nConnection closed by foreign host.\n>>> \n```", "```py\n>>> str(child)\n\"<pexpect.pty_spawn.spawn object at 0x7f068a9bf370>\\ncommand: /usr/bin/telnet\\nargs: ['/usr/bin/telnet', '192.168.2.51']\\nbuffer (last 100 chars): b''\\nbefore (last 100 chars): b'TERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\\\r\\\\nProcessor board ID 98U40DKV403INHIULHYHB\\\\r\\\\n'\\nafter: b'lax-edg-r1#'\\nmatch: <re.Match object; span=(165, 176), match=b'lax-edg-r1#'>\\nmatch_index: 0\\nexitstatus: 1\\nflag_eof: False\\npid: 25510\\nchild_fd: 5\\nclosed: False\\ntimeout: 30\\ndelimiter: <class 'pexpect.exceptions.EOF'>\\nlogfile: None\\nlogfile_read: None\\nlogfile_send: None\\nmaxread: 2000\\nignorecase: False\\nsearchwindowsize: None\\ndelaybeforesend: 0.05\\ndelayafterclose: 0.1\\ndelayafterterminate: 0.1\"\n>>> \n```", "```py\n>>> child = pexpect.spawn('telnet 192.168.2.51')\n>>> child.logfile = open('debug', 'wb') \n```", "```py\n>>> from pexpect import pxssh\n>>> child = pxssh.pxssh()\n>>> child.login('192.168.2.51', 'cisco', 'cisco', auto_prompt_reset=False) \nTrue\n>>> child.sendline('show version | i V')\n19\n>>> child.expect('lax-edg-r1#')\n0\n>>> child.before\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 98U40DKV403INHIULHYHB\\r\\n'\n>>> child.logout()\n>>> \n```", "```py\n#!/usr/bin/env python\nimport getpass\nfrom pexpect import pxssh\ndevices = {'lax-edg-r1': {'prompt': 'lax-edg-r1#', 'ip': '192.168.2.51'},\n           'lax-edg-r2': {'prompt': 'lax-edg-r2#', 'ip': '192.168.2.52'}}\ncommands = ['term length 0', 'show version', 'show run']\nusername = input('Username: ')\npassword = getpass.getpass('Password: ')\n# Starts the loop for devices\nfor device in devices.keys():\n    outputFileName = device + '_output.txt'\n    device_prompt = devices[device]['prompt']\n    child = pxssh.pxssh()\n    child.login(devices[device]['ip'], username.strip(), password.strip(), auto_prompt_reset=False)\n    # Starts the loop for commands and write to output\n    with open(outputFileName, 'wb') as f:\n        for command in commands:\n            child.sendline(command)\n            child.expect(device_prompt)\n            f.write(child.before)\n    child.logout() \n```", "```py\nsudo apt-get install build-essential libssl-dev libffi-dev python3-dev \npip install cryptography\npip install paramiko \n```", "```py\n$ python\nPython 3.10.4 (main, Jun 29 2022, 12:14:53) [GCC 11.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import paramiko\n>>> exit() \n```", "```py\n>>> import paramiko, time\n>>> connection = paramiko.SSHClient()\n>>> connection.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> connection.connect('192.168.2.51', username='cisco', password='cisco', look_for_keys=False, allow_agent=False)\n>>> new_connection = connection.invoke_shell()\n>>> output = new_connection.recv(5000)\n>>> print(output) b\"\\r\\n*************************************************************************\\\nr\\n* IOSv is strictly limited to use for evaluation, demonstration and IOS  *\\r\\n* education. IOSv is provided as-is and is not supported by Cisco's      *\\r\\n* Technical Advisory Center. Any use or disclosure, in whole or in part, *\\r\\n* of the IOSv Software or Documentation to any third party for any       *\\r\\n* purposes is expressly prohibited except as otherwise authorized by     *\\r\\n* Cisco in writing.                                                      *\\r\\n***********************************************************************\\r\\nlax-edg-r1#\"\n>>> new_connection.send(\"show version | i V\\n\")\n19\n>>> time.sleep(3)\n>>> output = new_connection.recv(5000)\n>>> print(output)\nb'show version | i V\\r\\nCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)\\r\\nProcessor board ID 98U40DKV403INHIULHYHB\\r\\nlax-edg-r1#'\n>>> new_connection.close()\n>>> \n```", "```py\n>>> import paramiko\n>>> connection = paramiko.SSHClient()\n>>> connection.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> connection.connect('192.168.2.51', username='cisco', password='cisco',\nlook_for_keys=False, allow_agent=False) \n```", "```py\n>>> connection.connect('192.168.2.51', username='cisco', password='cisco', look_for_keys=False, allow_agent=False)\n>>> stdin, stdout, stderr = connection.exec_command('show version | i V\\n')\n>>> stdout.read()\nb'Cisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)rnProcessor board ID 98U40DKV403INHIULHYHBrn'\n>>> \n```", "```py\n>>> stdin, stdout, stderr = connection.exec_command('show version | i V\\n') \nTraceback (most recent call last):\n<skip>\nraise SSHException('SSH session not active') paramiko.ssh_exception.SSHException: SSH session not active\n>>> \n```", "```py\n>>> new_connection.send(\"show version | i V\\n\")\n 19\n>>> new_connection.send(\"show version | i V\\n\") \n19\n>>> new_connection.send(\"show version | i V\\n\") \n19\n>>> new_connection.recv(5000)\nb'show version | i VrnCisco IOS Software, IOSv Software (VIOS- ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)rnProcessor\nboard ID 98U40DKV403INHIULHYHBrnlax-edg-r1#show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)rnProcessor board ID 98U40DKV403INHIULHYHBrnlax-edg-r1#show version | i VrnCisco IOS Software, IOSv Software (VIOS-ADVENTERPRISEK9-M), Version 15.8(3)M2, RELEASE SOFTWARE (fc2)rnProcessor board ID 98U40DKV403INHIULHYHBrnlax-edg-r1#'\n>>> \n```", "```py\ndevices = {'lax-edg-r1': {'ip': '192.168.2.51'},\n           'lax-edg-r2': {'ip': '192.168.2.52'}} \n```", "```py\ncommands = ['show version', 'show run'] \n```", "```py\ndef clear_buffer(connection):\n    if connection.recv_ready():\n        return connection.recv(max_buffer) \n```", "```py\noutput = clear_buffer(new_connection) \n```", "```py\ntime.sleep(5) \n```", "```py\nssh-keygen -t rsa \n```", "```py\n$ cat ~/.ssh/id_rsa.pub \nssh-rsa <your public key> \n```", "```py\n<Remote Host>$ vim ~/.ssh/authorized_keys\nssh-rsa <your public key> \n```", "```py\n>>> import paramiko\n>>> key = paramiko.RSAKey.from_private_key_file('/home/echou/.ssh/id_rsa')\n>>> client = paramiko.SSHClient()\n>>> client.set_missing_host_key_policy(paramiko.AutoAddPolicy())\n>>> client.connect('192.168.199.182', username='echou', pkey=key)\n>>> stdin, stdout, stderr = client.exec_command('ls -l')\n>>> stdout.read()\nb'total 44ndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Desktopndrwxr-xr-x 2\nechou echou 4096 Jan 7 10:14 Documentsndrwxr-xr-x 2 echou echou 4096 Jan 7\n10:14 Downloadsn-rw-r--r-- 1 echou echou 8980 Jan 7 10:03\nexamples.desktopndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Musicndrwxr-xr-x\nechou echou 4096 Jan 7 10:14 Picturesndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Publicndrwxr-xr-x 2 echou echou 4096 Jan 7 10:14 Templatesndrwxr-xr-x\n2 echou echou 4096 Jan 7 10:14 Videosn'\n>>> stdin, stdout, stderr = client.exec_command('pwd')\n>>> stdout.read()\nb'/home/echou'\n>>> client.close()\n>>> \n```", "```py\n$ cat commands.txt \nconfig t\nlogging buffered 30000 \nend\ncopy run start \n```", "```py\n$ cat devices.json \n{\n    \"lax-edg-r1\": {\n        \"ip\": \"192.168.2.51\"\n    },\n    \"lax-edg-r2\": {\n        \"ip\": \"192.168.2.52\"\n    }\n} \n```", "```py\nwith open('devices.json', 'r') as f:\n    devices = json.load(f)\nwith open('commands.txt', 'r') as f:\n    commands = f.readlines() \n```", "```py\n$ python chapter2_4.py \nUsername: cisco\nPassword: \nb'terminal length 0\\r\\nlax-edg-r1#config t\\r\\nEnter configuration commands, one per line.  End with CNTL/Z.\\r\\nlax-edg-r1(config)#'\nb'logging buffered 30000\\r\\nlax-edg-r1(config)#'\nb'end\\r\\nlax-edg-r1#'\nb'copy run start'\n<skip> \n```", "```py\nlax-edg-r1#sh run | i logging\nlogging buffered 30000 \n```", "```py\n(venv) $ pip install netmiko \n```", "```py\n>>> from netmiko import ConnectHandler\n>>> net_connect = ConnectHandler(\n...     device_type=\"cisco_ios\",\n...     host=\"192.168.2.51\",\n...     username=\"cisco\",\n...     password=\"cisco\",\n... ) \n```", "```py\n>>> net_connect.find_prompt()\n'lax-edg-r1#'\n>>> output = net_connect.send_command('show ip int brief')\n>>> print(output)\nInterface                  IP-Address      OK? Method Status                Protocol\nGigabitEthernet0/0         192.168.2.51    YES NVRAM  up                    up      \nGigabitEthernet0/1         10.0.0.1        YES NVRAM  up                    up      \nLoopback0                  192.168.0.10    YES NVRAM  up                    up \n```", "```py\n>>> net_connect_2 = ConnectHandler(\n...     device_type=\"cisco_ios\",\n...     host=\"192.168.2.52\",\n...     username=\"cisco\",\n...     password=\"cisco\",\n... )\n>>> output = net_connect_2.send_config_set(['logging buffered 19999'])\n>>> print(output)\nconfigure terminal\nEnter configuration commands, one per line.  End with CNTL/Z.\nlax-edg-r2(config)#logging buffered 19999\nlax-edg-r2(config)#end\nlax-edg-r2#\n>>> exit() \n```", "```py\n(venv)$ pip install nornir nornir_utils nornir_netmiko \n```", "```py\n---\nlax-edg-r1:\n    hostname: '192.168.2.51'\n    port: 22\n    username: 'cisco'\n    password: 'cisco'\n    platform: 'cisco_ios'\nlax-edg-r2:\n    hostname: '192.168.2.52'\n    port: 22\n    username: 'cisco'\n    password: 'cisco'\n    platform: 'cisco_ios' \n```", "```py\n#!/usr/bin/env python\nfrom nornir import InitNornir\nfrom nornir_utils.plugins.functions import print_result\nfrom nornir_netmiko import netmiko_send_command\nnr = InitNornir()\nresult = nr.run(\n    task=netmiko_send_command,\n    command_string=\"show arp\"\n)\nprint_result(result) \n```", "```py\n(venv) $ python chapter2_5.py \nnetmiko_send_command************************************************************\n* lax-edg-r1 ** changed : False ************************************************\nvvvv netmiko_send_command ** changed : False vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv INFO\nProtocol  Address          Age (min)  Hardware Addr   Type   Interface\nInternet  10.0.0.1                -   5254.001e.e911  ARPA   GigabitEthernet0/1\nInternet  10.0.0.2               17   fa16.3e00.0001  ARPA   GigabitEthernet0/1\n^^^^ END netmiko_send_command ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n* lax-edg-r2 ** changed : False ************************************************\nvvvv netmiko_send_command ** changed : False vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv INFO\nProtocol  Address          Age (min)  Hardware Addr   Type   Interface\nInternet  10.0.128.1             17   fa16.3e00.0002  ARPA   GigabitEthernet0/1\nInternet  10.0.128.2              -   5254.0014.e052  ARPA   GigabitEthernet0/1\n^^^^ END netmiko_send_command ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ \n```"]