["```py\n    Flask==1.0.3\n    Flask-RESTful==0.3.7\n    httpie==1.0.3\n    ```", "```py\n    pip install -r requirements.txt\n    ```", "```py\n    recipe_list = []\n    def get_last_id():\n        if recipe_list:\n            last_recipe = recipe_list[-1]\n        else:\n            return 1\n        return last_recipe.id + 1\n    ```", "```py\n    class Recipe:\n        def __init__(self, name, description, num_of_servings, cook_time, directions):\n            self.id = get_last_id()\n            self.name = name\n            self.description = description\n            self.num_of_servings = num_of_servings\n            self.cook_time = cook_time\n            self.directions = directions\n            self.is_publish = False\n    ```", "```py\n        @property\n        def data(self):\n            return {\n                'id': self.id,\n                'name': self.name,\n                'description': self.description,\n                'num_of_servings': self.num_of_servings,\n                'cook_time': self.cook_time,\n                'directions': self.directions\n            }\n    ```", "```py\n    from flask import request\n    from flask_restful import Resource\n    from http import HTTPStatus\n    from models.recipe import Recipe, recipe_list\n    ```", "```py\n    class RecipeListResource(Resource):\n        def get(self):\n            data = []\n            for recipe in recipe_list:\n                if recipe.is_publish is True:\n                    data.append(recipe.data)\n            return {'data': data}, HTTPStatus.OK\n    ```", "```py\n        def post(self):\n            data = request.get_json()\n            recipe = Recipe(name=data['name'],\n                            description=data['description'],\n                            num_of_servings=data['num_of_servings'],\n                            cook_time=data['cook_time'],\n                            directions=data['directions'])\n            recipe_list.append(recipe)\n            return recipe.data, HTTPStatus.CREATED\n    ```", "```py\n    class RecipeResource(Resource):\n        def get(self, recipe_id):\n            recipe = next((recipe for recipe in recipe_list if recipe.id == recipe_id and recipe.is_publish == True), None)\n            if recipe is None:\n                return {'message': 'recipe not found'}, HTTPStatus.NOT_FOUND\n            return recipe.data, HTTPStatus.OK\n    ```", "```py\n        def put(self, recipe_id):\n            data = request.get_json()\n            recipe = next((recipe for recipe in recipe_list if recipe.id == recipe_id), None)\n            if recipe is None:\n                return {'message': 'recipe not found'}, HTTPStatus.NOT_FOUND\n            recipe.name = data['name']\n            recipe.description = data['description']\n            recipe.num_of_servings = data['num_of_servings']\n            recipe.cook_time = data['cook_time']\n            recipe.directions = data['directions']\n            return recipe.data, HTTPStatus.OK\n    ```", "```py\n    class RecipePublishResource(Resource):\n        def put(self, recipe_id):\n            recipe = next((recipe for recipe in recipe_list if recipe.id == recipe_id), None)\n            if recipe is None:\n                return {'message': 'recipe not found'}, HTTPStatus.NOT_FOUND\n            recipe.is_publish = True\n            return {}, HTTPStatus.NO_CONTENT\n    ```", "```py\n        def delete(self, recipe_id):\n            recipe = next((recipe for recipe in recipe_list if recipe.id == recipe_id), None)\n            if recipe is None:\n                return {'message': 'recipe not found'}, HTTPStatus.NOT_FOUND\n            recipe.is_publish = False\n            return {}, HTTPStatus.NO_CONTENT\n    ```", "```py\n    from flask import Flask\n    from flask_restful import Api\n    from resources.recipe import RecipeListResource, RecipeResource, RecipePublishResource\n    ```", "```py\n    app = Flask(__name__)\n    api = Api(app)\n    ```", "```py\n    api.add_resource(RecipeListResource, '/recipes') \n    api.add_resource(RecipeResource, '/recipes/<int:recipe_id>')\n    api.add_resource(RecipePublishResource, '/recipes/<int:recipe_id>/publish')\n    if __name__ == '__main__':\n        app.run(port=5000, debug=True)\n    ```", "```py\n    http POST localhost:5000/recipes name=\"Cheese Pizza\" description=\"This is a lovely cheese pizza\" num_of_servings:=2 cook_time:=30 directions=\"This is how you make it\"\n    ```", "```py\n    curl -i -X POST localhost:5000/recipes -H \"Content-Type: application/json\" -d '{\"name\":\"Cheese Pizza\", \"description\":\"This is a lovely cheese pizza\", \"num_of_servings\":2, \"cook_time\":30, \"directions\":\"This is how you make it\" }'\n    ```", "```py\n    HTTP/1.0 201 CREATED\n    Content-Type: application/json\n    Content-Length: 188\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:19:00 GMT\n    {\n        \"id\": 1,\n        \"name\": \"Cheese Pizza\",\n        \"description\": \"This is a lovely cheese pizza\",\n        \"num_of_servings\": 2,\n        \"cook_time\": 30,\n        \"directions\": \"This is how you make it\"\n    }\n    ```", "```py\n    http POST localhost:5000/recipes name=\"Tomato Pasta\" description=\"This is a lovely tomato pasta recipe\" num_of_servings:=3 cook_time:=20 directions=\"This is how you make it\"\n    ```", "```py\n    curl -i -X POST localhost:5000/recipes -H \"Content-Type: application/json\" -d '{\"name\":\"Tomato Pasta\", \"description\":\"This is a lovely tomato pasta recipe\", \"num_of_servings\":3, \"cook_time\":20, \"directions\":\"This is how you make it\"}'\n    ```", "```py\n    HTTP/1.0 201 CREATED\n    Content-Type: application/json\n    Content-Length: 195\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:23:37 GMT\n\n    {\n        \"id\": 2,\n        \"name\": \"Tomato Pasta\",\n        \"description\": \"This is a lovely tomato pasta recipe\",\n        \"num_of_servings\": 3,\n        \"cook_time\": 20,\n        \"directions\": \"This is how you make it\"\n    }\n    ```", "```py\n    http GET localhost:5000/recipes\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes \n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Length: 19\n    Content-Type: application/json\n    Date: Sun, 03 Nov 2019 03:24:53 GMT\n    Server: Werkzeug/0.16.0 Python/3.7.0\n\n    {\n        \"data\": []\n    }\n    ```", "```py\n    http PUT localhost:5000/recipes/1/publish\n    ```", "```py\n    curl -i -X PUT localhost:5000/recipes/1/publish \n    ```", "```py\n    HTTP/1.0 204 NO CONTENT\n    Content-Type: application/json\n    Date: Sun, 03 Nov 2019 03:25:48 GMT\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    ```", "```py\n    http GET localhost:5000/recipes\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes\n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Type: application/json\n    Content-Length: 276\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:26:43 GMT\n\n    {\n        \"data\": [\n            {\n                \"id\": 1,\n                \"name\": \"Cheese Pizza\",\n                \"description\": \"This is a lovely cheese pizza\",\n                \"num_of_servings\": 2,\n                \"cook_time\": 30,\n                \"directions\": \"This is how you make it\"\n            }\n        ]\n    }\n    ```", "```py\n    http DELETE localhost:5000/recipes\n    ```", "```py\n    curl -i -X DELETE localhost:5000/recipes \n    ```", "```py\n    HTTP/1.0 405 METHOD NOT ALLOWED\n    Content-Type: application/json\n    Content-Length: 70\n    Allow: POST, GET, HEAD, OPTIONS\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:27:37 GMT\n\n    {\n        \"message\": \"The method is not allowed for the requested URL.\"\n    }\n    ```", "```py\n    http PUT localhost:5000/recipes/1 name=\"Lovely Cheese Pizza\" description=\"This is a lovely cheese pizza recipe\" num_of_servings:=3 cook_time:=60 directions=\"This is how you make it\"\n    ```", "```py\n    curl -i -X PUT localhost:5000/recipes/1 -H \"Content-Type: application/json\" -d '{\"name\":\"Lovely Cheese Pizza\", \"description\":\"This is a lovely cheese pizza recipe\", \"num_of_servings\":3, \"cook_time\":60, \"directions\":\"This is how you make it\"}'\n    ```", "```py\n    HTTP/1.0 200 OK\n    Content-Type: application/json\n    Content-Length: 202\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:28:57 GMT\n\n    {\n        \"id\": 1,\n        \"name\": \"Lovely Cheese Pizza\",\n        \"description\": \"This is a lovely cheese pizza recipe\",\n        \"num_of_servings\": 3,\n        \"cook_time\": 60,\n        \"directions\": \"This is how you make it\"\n    }\n    ```", "```py\n    http GET localhost:5000/recipes/1\n    ```", "```py\n    curl -i -X GET localhost:5000/recipes/1\n    You should see the following response. Please examine it carefully:\n    HTTP/1.0 200 OK\n    Content-Type: application/json\n    Content-Length: 202\n    Server: Werkzeug/0.16.0 Python/3.7.0\n    Date: Sun, 03 Nov 2019 03:29:59 GMT\n\n    {\n        \"id\": 1,\n        \"name\": \"Lovely Cheese Pizza\",\n        \"description\": \"This is a lovely cheese pizza recipe\",\n        \"num_of_servings\": 3,\n        \"cook_time\": 60,\n        \"directions\": \"This is how you make it\"\n    }\n    ```"]