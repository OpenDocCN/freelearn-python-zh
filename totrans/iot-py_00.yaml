- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Internet of Things, also known as IoT, is changing the way we live and represents
    one of the biggest challenges in the IT industry. Developers are creating low-cost
    devices that collect huge amounts of data, interact with each other, and take
    advantage of cloud services and cloud-based storage. Makers all over the world
    are working on fascinating projects that transform everyday objects into smart
    devices with sensors and actuators.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: A coffee cup is not a simple object anymore—it can send a message to your smartwatch
    indicating that the liquid inside has the right temperature so that you can drink
    it without worrying about checking whether it is too hot. In case you move the
    coffee cup before you receive the message, your wearable vibrates to indicate
    that you don't have to drink it yet.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: 'You can check the coffee level of the coffee dispenser in your smartphone,
    and you won''t have to worry about ordering more coffee: the coffee dispenser
    will automatically place an online order to request coffee when the coffee level
    is not enough to cover the rest of the day. You just need to approve the online
    order that the coffee dispenser suggests from your smartwatch. Based on certain
    statistical algorithms, the coffee dispenser will know the appropriate time to
    make the order.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: What happens when more usual visitors arrive at the office? Their smartwatches
    or smartphones will communicate with the coffee dispensers and they will place
    orders in case the probable consumption of decaffeinated coffee increases too
    much. We have smart coffee cups, smart coffee dispensers, smartwatches, smartphones,
    and wearables. All of them take advantage of the cloud to create a smart ecosystem
    capable of providing us with all the different types of coffees we need for our
    day.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: The Intel Galileo Gen 2 board is an extremely powerful and versatile minicomputer
    board for IoT projects. We can boot a Linux version and easily execute Python
    scripts that can interact with the different components included on the board.
    This book will teach you to develop IoT prototypes, from selecting the hardware
    to all the necessary stacks with Python 2.7.3, its libraries, and tools. In case
    you need a smaller board or an alternative, all the examples included in the book
    are compatible with Intel Edison boards, and therefore, you can switch to this
    board in case you need to.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: Python is one of the most popular programming languages. It is open source,
    multiplatform, and you can use it to develop any kind of application, from websites
    to extremely complex scientific computing applications. There is always a Python
    package that makes things easier for us in order to avoid reinventing the wheel
    and solve problems faster. Python is an ideal choice for developing a complete
    IoT stack. This book covers all the things you need to know to transform everyday
    objects into IoT projects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: This book will allow you to prototype and develop IoT solutions from scratch
    with Python as the programming language. You will leverage your existing Python
    knowledge to capture data from the real world, interact with physical objects,
    develop APIs, and use different IoT protocols. You will use specific libraries
    to easily work with low-level hardware, sensors, actuators, buses, and displays.
    You will learn how to take advantage of all the Python packages with the Intel
    Galileo Gen 2 board. You will be ready to become a maker and to be a part of the
    exciting IoT world.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Understanding and Setting up the Base IoT
    Hardware"), *Understanding and Setting up the Base IoT Hardware*, start us off
    on our journey towards Internet of Things (IoT) with Python and the Intel Galileo
    Gen 2 board. We will learn the different features offered by this board and visualize
    its different components. We will understand the meaning of the different pins,
    LEDs, and connectors. We will learn to check the board''s firmware version and
    to update if necessary.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Working with Python on Intel Galileo Gen
    2"), *Working with Python on Intel Galileo Gen 2*, leads us through many procedures
    that make it possible to work with Python as the main programming language to
    create IoT projects with our Intel Galileo Gen 2 board. We will write a Linux
    Yocto image to a microSD card, configure the board to make it boot this image,
    update many libraries to use their latest versions, and launch the Python interpreter.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Interacting with Digital Outputs with Python"),
    *Interacting with Digital Outputs with Python*, teaches us how to work with two
    different libraries to control digital outputs in Python: mraa and wiring-x86\.
    We will connect LEDs and resistors to a breadboard and write code to turn on between
    0 to 9 LEDs. Then, we will improve our Python code to take advantage of Python''s
    object-oriented features, and we will prepare the code to make it easy to build
    an API that will allow us to print numbers with LEDs with a REST API.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Working with a RESTful API and Pulse Width
    Modulation"), *Working with a RESTful API and Pulse Width Modulation*, has us
    working with Tornado Web Server, Python, the HTTPie command-line HTTP client,
    and the mraa and wiring-x86 libraries. We will generate many versions of RESTful
    APIs that will allow us to interact with the board in computers and devices connected
    to the LAN. We will be able to compose and send HTTP requests that print numbers
    in LEDs, change the brightness levels for three LEDs, and generate millions of
    colors with an RGB LED.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Working with Digital Inputs, Polling and
    Interrupts"), *Working with Digital Inputs, Polling and Interrupts*, explains
    the difference between reading pushbutton statuses with polling and working with
    interrupts and interrupt handlers. We will write code that will allow the user
    to perform the same actions with either pushbuttons in the breadboard or HTTP
    requests. We will combine code that reacts to changes in the statuses of the pushbuttons
    with a RESTful API built with Tornado Web Server. We will create classes to encapsulate
    pushbuttons and the necessary configurations with the mraa and wiring-x86 libraries.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Working with Analog Inputs and Local Storage"),
    *Working with Analog Inputs and Local Storage*, explains how to work with analog
    inputs to measure voltage values. We will measure voltages with an analog pin
    and both the mraa and the wiring-x86 libraries. We will be able to transform a
    variable resistor into a voltage source and make it possible to measure the darkness
    level with an analog input, a photoresistor, and a voltage divider. We will fire
    actions when the environment light changes, and we will work with both analog
    inputs and outputs. We will register events by taking advantage of the logging
    features included in the Python standard library and the USB 2.0 connector included
    in the Intel Galileo Gen 2 board.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Retrieving Data from the Real World with
    Sensors"), *Retrieving Data From the Real World with Sensors*, has us working
    with a variety of sensors to retrieve data from the real world. We will take advantage
    of the modules and classes included in the upm library that will make it easy
    for us to start working with analog and digital sensors. We will learn the importance
    of considering units of measurement because sensors always provide values measured
    in a specific unit, which we must consider. We will measure the magnitude and
    direction of proper acceleration or g-force, ambient temperature, and humidity.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Displaying Information and Performing Actions"),
    *Displaying Information and Performing Actions*, teaches us about different displays
    the we can connect to our board through the I²C bus. We will work with an LCD
    display with an RGB backlight, and we will then replace it with an OLED dot matrix.
    We will write code that takes advantage of the modules and classes included in
    the upm library to work with LCD and OLED displays and show text on them. We will
    also write code that interacts with an analog servo. We will control the shaft
    to allow us to create a gauge chart to display the temperature value retrieved
    with a sensor. Our Python code will make things move.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Working with the Cloud"), *Working with the
    Cloud*, teaches you how to combine many cloud-based services that will allow us
    to easily publish data collected from sensors and visualize it in a web-based
    dashboard. We will work with the MQTT protocol and its publish/subscribe model
    to process commands in our board and indicate when the commands are successfully
    processed through messages. First, we will work with the PubNub cloud that works
    with the MQTT protocol under the hood. Then, we will develop the same example
    with Mosquitto and Eclipse Paho. We will be able to write applications that can
    establish bidirectional communications with our IoT devices.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Analyzing Huge Amounts of Data with Cloud-based
    IoT Analytics"), *Analyzing Huge Amounts of Data with Cloud-based IoT Analytics*,
    explains the close relationship between IoT and Big Data. We will work with Intel
    IoT Analytics, a cloud-based service that allows us to organize huge amounts of
    data collected by multiple IoT devices and their sensors. We will use the requests
    package to write a few lines of Python code to interact with the Intel IoT Analytics
    REST API. We will learn about the different options that Intel IoT Analytics offers
    us to analyze huge amounts of data, and we will define rules to trigger alerts.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In order to work with the different tools required to connect to the Intel
    Galileo Gen 2 board and launch the Python samples, you will need any computer
    with an Intel Core i3 or higher CPU and at least 4 GB of RAM. You can work with
    any of the following operating systems:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: Windows 7 or higher (Windows 8, Windows 8.1, or Windows 10)
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mac OS X Mountain Lion or higher
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any Linux version capable of running Python 2.7.x
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any modern browser with JavaScript support.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You will also need an Intel Galileo Gen 2 board and a breadboard with 830 tie
    points (holes for connections) and 2 power lanes.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: In addition, you will need different electronic components and breakout boards
    to build the examples included in many chapters.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is ideal for Python programmers who want to explore the tools available
    in the Python ecosystem in order to build their own IoT web stack and IoT-related
    projects. People from creative and designing backgrounds will also find this book
    equally useful.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "
    By default, the `pip` package management system that makes it easy to install
    and manage software packages written in Python isn''t installed."'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "The next time you have to upload a file to the board, you don''t need to
    set up a new site in the **Site Manager** dialog box in order to establish an
    SFTP connection."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-39
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: 'You can download the code files by following these steps:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Hover the mouse pointer on the **SUPPORT** tab at the top.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Downloads & Errata**.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Enter the name of the book in the **Search** box.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select the book for which you're looking to download the code files.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click on **Code Download**.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: You can also download the code files by clicking on the **Code Files** button
    on the book's webpage at the Packt Publishing website. This page can be accessed
    by entering the book's name in the **Search** box. Please note that you need to
    be logged in to your Packt account.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: WinRAR / 7-Zip for Windows
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 7-Zip / PeaZip for Linux
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Internet-of-Things-with-Python](https://github.com/PacktPublishing/Internet-of-Things-with-Python).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the color images of this book
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/InternetofThingswithPython_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/InternetofThingswithPython_ColorImages.pdf).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个包含本书中使用的截图/图表彩色图像的PDF文件。彩色图像将帮助您更好地理解输出的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/InternetofThingswithPython_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/InternetofThingswithPython_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽最大努力确保内容的准确性，错误仍然可能发生。如果您在我们的某本书中发现错误——可能是文本或代码中的错误——如果您能向我们报告这一点，我们将不胜感激。通过这样做，您可以避免其他读者感到沮丧，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击**勘误提交表单**链接，并输入您的勘误详情来报告它们。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站或添加到该标题的勘误部分下的现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看之前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将出现在**勘误**部分下。
- en: Piracy
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上版权材料的盗版是一个持续存在的问题，涉及所有媒体。在Packt，我们非常重视保护我们的版权和许可证。如果您在互联网上发现任何形式的我们作品的非法副本，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过`<copyright@packtpub.com>`与我们联系，并附上疑似盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您的帮助，以保护我们的作者和我们为您提供有价值内容的能力。
- en: Questions
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，您可以通过`<questions@packtpub.com>`联系我们，我们将尽力解决问题。
