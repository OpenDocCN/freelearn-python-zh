- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Design patterns are among the most powerful methods of building large software
    systems. With an increasing focus on optimized software architecture and design,
    it is important that software architects think about optimizations in object creation,
    code structure, and interaction between objects at the architecture or design
    level. This makes sure that the cost of software maintenance is low, and code
    can be easily reused and is adaptable to change. Moreover, providing frameworks
    for reusability and separation of concerns is key to software development today.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](part0015_split_000.html#E9OE1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 1. Introduction to Design Patterns"), *Introduction to Design Patterns*,
    goes through the basics of object-oriented programming and discusses object-oriented
    design principles in detail. This chapter gives a brief introduction to the concept
    of design patterns so that you will be able to appreciate the context and application
    of design patterns in software development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](part0022_split_000.html#KVCC1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 2. The Singleton Design Pattern"), *The Singleton Design Pattern*, covers
    one of the simplest and well-known Creational design patterns used in application
    development—the Singleton design pattern. The different ways in which we can create
    a Singleton pattern in Python are also covered in this chapter along with examples.
    This chapter also covers the Monostate (or Borg) design pattern, which is a variant
    of the Singleton design pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](part0031_split_000.html#TI1E1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 3. The Factory Pattern – Building Factories to Create Objects"), *The
    Factory Pattern – Building Factories to Create Objects*, discusses another creational
    pattern, the Factory pattern. You will also learn about the Factory Method pattern
    and Abstract Factory pattern with a UML diagram, real-world scenarios, and Python
    v3.5 implementations.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](part0037_split_000.html#1394Q1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 4. The Façade Pattern – Being Adaptive with Façade"), *The Façade Pattern
    – Being Adaptive with Façade*, shows you another type of design pattern, the Structural
    design pattern. We will be introduced to the concept of Façade and learn how it
    is applicable to software design with the help of the Façade design pattern. You''ll
    also learn its implementation with a sample Python application using a real-world
    scenario.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](part0044_split_000.html#19UOO1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 5. The Proxy Pattern – Controlling Object Access"), *The Proxy Pattern
    – Controlling Object Access*, deals with the Proxy pattern that falls into the
    category of Structural design patterns. We will be introduced to the Proxy as
    a concept and discuss the design pattern and see how it is used in software application
    development. You''ll also learn about the different variants of the Proxy pattern—Virtual
    Proxy, Smart Proxy, Remote Proxy, and Protective Proxy.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](part0052_split_000.html#1HIT81-5ae934a69a004514b92177e2702ed0a9
    "Chapter 6. The Observer Pattern – Keeping Objects in the Know"), *The Observer
    Pattern – Keeping Objects in the Know*, talks about the third type of design pattern—the
    behavioral design pattern. We will be introduced to the Observer design pattern
    with examples. In this chapter, you''ll learn how to implement the Push and Pull
    models of the Observer pattern and the principles of loose coupling. We''ll also
    see how this pattern is critical when it comes to applying it to cloud applications
    and distributed systems.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](part0060_split_000.html#1P71O1-5ae934a69a004514b92177e2702ed0a9
    "Chapter 7. The Command Pattern – Encapsulating Invocation"), *The Command Pattern
    – Encapsulating Invocation*, tells you about the Command design pattern. We will
    be introduced to the Command design pattern and discuss how it is used in software
    application development with a real-world scenario and Python implementation.
    We will also study two main aspects of the Command pattern—an implementation of
    redo/rollback operations and asynchronous task execution.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](part0066_split_000.html#1UU542-5ae934a69a004514b92177e2702ed0a9
    "Chapter 8. The Template Method Pattern – Encapsulating Algorithm"), *The Template
    Method Pattern – Encapsulating Algorithm*, discusses the Template design pattern.
    Like the Command pattern, the Template pattern falls into the category of Behavioral
    patterns. Here, we discuss the Template method pattern, and you will learn about
    Hooks with an implementation. We''ll also cover the Hollywood principle that helps
    us appreciate this pattern better.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](part0073_split_000.html#25JP21-5ae934a69a004514b92177e2702ed0a9
    "Chapter 9. Model-View-Controller – Compound Patterns"), *Model-View-Controller
    – Compound Patterns*, talks about Compound patterns. We will be introduced to
    the Model-View-Controller design pattern and discuss how it is used in software
    application development. MVC is easily one of the most used design patterns; in
    fact, many Python frameworks are based on this principle. You will learn about
    the details of MVC implementation with an example application written in Python
    Tornado (a framework used by Facebook).'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](part0080_split_000.html#2C9D01-5ae934a69a004514b92177e2702ed0a9
    "Chapter 10. The State Design Pattern"), *The State Design Pattern*, introduces
    you to the State design pattern, which falls into the category of Behavioral patterns
    just like the Command or Template design patterns. We will discuss how it is used
    in software application development.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](part0084_split_000.html#2G3F81-5ae934a69a004514b92177e2702ed0a9
    "Chapter 11. AntiPatterns"), *AntiPatterns*, tells you about AntiPatterns—what
    we shouldn''t do as architects or software engineers.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All you need is Python v3.5, and you can download it from [https://www.python.org/downloads/](https://www.python.org/downloads/).
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for Python developers and software architects who care about software
    design principles and details of application development aspects in Python. It
    requires a basic understanding of programming concepts and beginner-level Python
    development experience. It will also be helpful for students and teachers in live
    learning environments.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `Car` object will have attributes such as `fuel level`, `isSedan`, `speed`, and
    `steering wheel` and `coordinates`."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, for example, in menus or dialog boxes, appear in the text like
    this: "In Python, the concept of encapsulation (data and method hiding) is not
    implicit, as it doesn''t have keywords such as **public**, **private**, and **protected**
    (in languages such as C++ or Java) that are required to support encapsulation."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
