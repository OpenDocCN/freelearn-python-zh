["```py\n# imports, globals and drawing\n\n# moving the paddles\n# moving the ball\n# keeping score\n\n```", "```py\nimport pygame\nimport random\nimport time\n\n```", "```py\n # initialize pygame\n pygame.init()\n\n```", "```py\n red = (255, 0, 0)\n orange = (255, 127, 0)\n yellow = (255, 255, 0)\n green: (0, 255, 0)\n blue = (0, 0, 255)\n violet = (127, 0, 255)\n brown = (102, 51, 0)\n black = (0, 0, 0)\n white = (255, 255, 255)\n\n```", "```py\n # screen globals\n screen_width = 600\n screen_height = 400\n\n```", "```py\n game_screen = pygame.display.set_mode((screen_width, screen_height))\n\n```", "```py\n pygame.display.set_caption(\"Tiny Tennis\")\n font = pygame.font.SysFont(\"monospace\", 75)\n\n```", "```py\n # ball globals\n ball_x = int(screen_width / 2)\n ball_y = int(screen_height / 2)\n\n```", "```py\n ball_xv = 3\n ball_yv = 3\n\n```", "```py\n ball_r = 20\n\n```", "```py\n # draw paddle 1\n paddle1_x = 10\n paddle1_y = 10\n paddle1_w = 25\n paddle1_h = 100\n\n```", "```py\n # draw paddle 2\n paddle2_x = screen_width - 35\n paddle2_y = 10\n paddle2_w = 25\n paddle2_h = 100\n\n```", "```py\n # initialize score\n player1_score = 0\n player2_score = 0\n\n```", "```py\n python tiny.py\n\n```", "```py\n pygame.mouse.set_visible(0)\n\n```", "```py\n do_main = True\n\n```", "```py\n while do_main:\n\n```", "```py\n pressed = pygame.key.get_pressed()\n\n```", "```py\n pygame.key.set_repeat()\n\n```", "```py\n for event in pygame.event.get():\n if event.type == pygame.QUIT:\n do_main = False\n\n```", "```py\n if pressed[pygame.K_ESCAPE]:\n do_main = False\n\n```", "```py\n if pressed[pygame.K_w]:\n paddle1_y -= 5\n elif pressed[pygame.K_s]:\n paddle1_y += 5\n\n```", "```py\n if pressed[pygame.K_UP]:\n paddle2_y -= 5\n elif pressed[pygame.K_DOWN]:\n paddle2_y += 5\n\n```", "```py\n python tiny.py\n\n```", "```py\n # location of ball is updated\n ball_x += ball_xv\n ball_y += ball_yv\n\n```", "```py\n # collision of ball with top/bottom of screen\n if ball_y - ball_r <= 0 or ball_y + ball_r >= screen_height:\n ball_yv *= -1\n\n```", "```py\n # collision of paddle with top/bottom of screen\n if paddle1_y < 0:\n paddle1_y = 0\n elif paddle1_y + paddle1_h > screen_height:\n paddle1_y = screen_height - paddle1_h\n\n if paddle2_y < 0:\n paddle2_y = 0\n elif paddle2_y + paddle2_h > screen_height:\n paddle2_y = screen_height - paddle2_h\n\n```", "```py\n # left paddle\n if ball_x < paddle1_x + paddle1_w and ball_y >= paddle1_y and ball_y <= paddle1_y + paddle1_h:\n ball_xv *= -1\n # right paddle\n if ball_x > paddle2_x and ball_y >= paddle2_y and ball_y <= paddle2_y + paddle2_h:\n ball_xv *= -1\n\n```", "```py\n python tiny.py\n\n```", "```py\n if ball_x <= 0:\n player2_score += 1\n ball_x = int(screen_width / 2)\n ball_y = int(screen_height / 2)\n\n```", "```py\n elif ball_x >= screen_width:\n player1_score += 1\n ball_x = int(screen_width / 2)\n ball_y = int(screen_height / 2)\n\n```", "```py\n game_screen.fill(black)\n paddle_1 = pygame.draw.rect(game_screen, white, (paddle1_x, paddle1_y, paddle1_w, paddle1_h), 0)\n paddle_2 = pygame.draw.rect(game_screen, white, (paddle2_x, paddle2_y, paddle2_w, paddle2_h), 0)\n net = pygame.draw.line(game_screen, yellow, (300,5), (300,400))\n ball = pygame.draw.circle(game_screen, red, (ball_x, ball_y), ball_r, 0)\n\n```", "```py\n score_text = font.render(str(player1_score) + \" \" + str(player2_score), 1, white)\n game_screen.blit(score_text, (screen_width / 2 - score_text.get_width() / 2, 10))\n\n```", "```py\n pygame.display.update()\n time.sleep(0.016666667)\n\n```", "```py\n pygame.quit()\n\n```"]