- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, we will explore the beautiful world of graphical user interfaces
    (GUIs) using the Python programming language.
  prefs: []
  type: TYPE_NORMAL
- en: Along the way, we will talk to networks, queues, the OpenGL graphical library,
    and many more technologies.
  prefs: []
  type: TYPE_NORMAL
- en: This is a programming cookbook. Every chapter is self-contained and explains
    a certain programming solution.
  prefs: []
  type: TYPE_NORMAL
- en: We will start very simply, yet throughout this book we will build a working
    program written in Python 3.
  prefs: []
  type: TYPE_NORMAL
- en: We will also apply some design patterns and use best practices throughout this
    book.
  prefs: []
  type: TYPE_NORMAL
- en: The book assumes that the reader has some basic experience using the Python
    programming language, but that is not really required to use this book.
  prefs: []
  type: TYPE_NORMAL
- en: If you are an experienced programmer in any programming language, you will have
    a fun time extending your skills to programming GUIs using Python!
  prefs: []
  type: TYPE_NORMAL
- en: Are you ready?
  prefs: []
  type: TYPE_NORMAL
- en: Let's start on our journey…
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Creating the GUI Form and Adding Widgets"),
    *Creating the GUI Form and Adding Widgets*, explains the steps to develop our
    first GUI in Python. We will start with the minimum code required to build a running
    GUI application. Each recipe then adds different widgets to the GUI form.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Layout Management"), *Layout Management*,
    explores how to arrange widgets to create our Python GUI. The grid layout manager
    is one of the most important layout tools built into tkinter that we will be using.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Look and Feel Customization"), *Look and
    Feel Customization*, shows several examples of how to create a good "look and
    feel" GUI. On a practical level, we will add functionality to the **Help** | **About**
    menu item we created in one of the recipes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Data and Classes"), *Data and Classes*, discusses
    saving the data our GUI displays. We will start using object-oriented programming
    (OOP) in order to extend Python''s built-in functionality.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Matplotlib Charts"), *Matplotlib Charts*,
    explains how to create beautiful charts that visually represent data. Depending
    upon the format of the data source, we can plot one or several columns of data
    within the same chart.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Threads and Networking"), *Threads and Networking*,
    explains how to extend the functionality of our Python GUI using threads, queues,
    and network connections. This will show us that our GUI is not limited at all
    to the local scope of our PC.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Storing Data in Our MySQL Database via Our
    GUI"), *Storing Data in Our MySQL Database via Our GUI*, shows us how to connect
    to a MySQL database server. The first recipe in this chapter will show how to
    install the free MySQL Server Community Edition, and in the following recipes
    we will create databases, tables, and then load data into those tables as well
    as modify these data. We will also read the data back out from the MySQL server
    into our GUI.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Internationalization and Testing"), *Internationalization
    and Testing*, shows how to internationalize our GUI by displaying text on labels,
    buttons, tabs, and other widgets in different languages. We will start simple
    and then explore how we can prepare our GUI for internationalization at the design
    level. We will also explore several ways to automatically test our GUI using Python''s
    built-in unit testing framework.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Extending Our GUI with the wxPython Library"),
    *Extending Our GUI with the wxPython Library*, introduces another Python GUI toolkit
    that currently does not ship with Python. It is called wxPython, and we will be
    using the Phoenix version of wxPython which was designed to work well with Python
    3.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Creating Amazing 3D GUIs with PyOpenGL
    and PyGLet"), *Creating Amazing 3D GUIs with PyOpenGL and PyGLet*, shows how to
    transform our GUI by giving it true three-dimensional capabilities. We will use
    two Python third-party packages. PyOpenGL is a Python binding to the OpenGL standard,
    which is a graphics library that comes built-in with all major operating systems.
    This gives the resulting widgets a native look and feel. PyGLet is one such binding
    that we will explore in this chapter.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 11](ch11.html "Chapter 11. Best Practices"), *Best Practices*, explores
    different best practices that can help us to build our GUI in an efficient way
    and keep it both maintainable and extendible. Best practices are applicable to
    any good code and our GUI is no exception to designing and implementing good software
    practices.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All required software for this book is available online and is free of charge.
    This starts with Python 3 itself, and then extends to Python's add-on modules.
    In order to download any required software, you will need a working Internet connection.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for programmers who wish to create a graphical user interface (GUI).
    You might be surprised by what we can achieve by creating beautiful, functional,
    and powerful GUIs using the Python programming language. Python is a wonderful,
    intuitive programming language, and is very easy to learn.
  prefs: []
  type: TYPE_NORMAL
- en: I like to invite you to start on this journey now. It will be a lot of fun!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, and user input are shown as follows: "Using Python, we can create our
    own classes using the `class` keyword instead of the `def` keyword."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Next, we will add functionality to the menu items, for example, closing the main
    window when clicking the **Exit** menu item and displaying a **Help** | **About**
    dialog."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or disliked. Reader feedback is important for us as it
    helps us develop titles that you will really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply e-mail `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book's title in the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the example code
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the **Errata Submission Form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  prefs: []
  type: TYPE_NORMAL
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the **Errata** section.
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you have a problem with any aspect of this book, you can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`,
    and we will do our best to address the problem.
  prefs: []
  type: TYPE_NORMAL
