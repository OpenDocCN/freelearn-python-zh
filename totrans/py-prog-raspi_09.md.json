["```py\n       sudo raspi-config.\n\n```", "```py\n    sudo i2cdetect -y 1 \n\n```", "```py\n    0\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\na\n\nb\n\nc\n\nd\n\ne\n\nf \n 00:\n\n-- -- -- -- -- -- -- -- -- -- -- -- -- \n 10: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 20: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 30: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 40: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 50: -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 60: 60 -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- \n 70: 70 -- -- -- -- -- -- -- \n\n```", "```py\n    sudo apt-get update\n sudo apt-get install python3-dev python3-smbus\n\n```", "```py\n    git clone https://github.com/sai-y/Adafruit-Motor-HAT-Python-\n    Library.git\n\n```", "```py\n    cd Adafruit-Motor-HAT-Python-Library\n sudo python3 setup.py install\n\n```", "```py\n       from Adafruit_MotorHAT import Adafruit_MotorHAT, \n       Adafruit_DCMotor\n\n```", "```py\n       left_motor = motor_driver.getMotor(1) \n       right_motor = motor_driver.getMotor(2)\n\n```", "```py\n       left_motor.setSpeed(255) \n       right_motor.setSpeed(255)\n\n```", "```py\n       left_motor.run(Adafruit_MotorHAT.FORWARD) \n       right_motor.run(Adafruit_MotorHAT.FORWARD)\n\n```", "```py\n       left_motor.setSpeed(200) \n       right_motor.setSpeed(200)\n\n```", "```py\n       left_motor.run(Adafruit_MotorHAT.BACKWARD) \n       right_motor.run(Adafruit_MotorHAT.BACKWARD)\n\n```", "```py\n       left_motor.run(Adafruit_MotorHAT.RELEASE) \n       right_motor.run(Adafruit_MotorHAT.RELEASE)\n\n```", "```py\nfrom Adafruit_MotorHAT import Adafruit_MotorHAT, Adafruit_DCMotor \nfrom time import sleep \n\nif __name__ == \"__main__\": \n  motor_driver = Adafruit_MotorHAT(addr=0x60) \n\n  left_motor = motor_driver.getMotor(1) \n  right_motor = motor_driver.getMotor(2) \n\n  left_motor.setSpeed(255) \n  right_motor.setSpeed(255) \n\n  left_motor.run(Adafruit_MotorHAT.FORWARD) \n  right_motor.run(Adafruit_MotorHAT.FORWARD) \n\n  sleep(5) \n\n  left_motor.setSpeed(200) \n  right_motor.setSpeed(200) \n\n  left_motor.run(Adafruit_MotorHAT.BACKWARD) \n  right_motor.run(Adafruit_MotorHAT.BACKWARD) \n\n  sleep(5) \n\n  left_motor.run(Adafruit_MotorHAT.RELEASE) \n  right_motor.run(Adafruit_MotorHAT.RELEASE)\n\n```", "```py\n       sudo raspi-config\n\n```", "```py\n       raspistill -o test_picture \n\n```", "```py\n       scp pi@192.168.86.111:/home/pi/test_output.\n\n```", "```py\n       import time \n       from Adafruit_MotorHAT import Adafruit_MotorHAT \n\n       class Robot(object): \n         def __init__(self, left_channel, right_channel): \n           self.motor = Adafruit_MotorHAT(0x60) \n           self.left_motor = self.motor.getMotor(left_channel) \n           self.right_motor = self.motor.getMotor(right_channel)\n\n```", "```py\n       def forward(self, duration): \n         self.set_speed() \n         self.left_motor.run(Adafruit_MotorHAT.FORWARD) \n         self.right_motor.run(Adafruit_MotorHAT.FORWARD) \n         time.sleep(duration) \n         self.stop() \n\n       def reverse(self, duration): \n         self.set_speed() \n         self.left_motor.run(Adafruit_MotorHAT.BACKWARD) \n         self.right_motor.run(Adafruit_MotorHAT.BACKWARD) \n         time.sleep(duration) \n         self.stop()\n\n```", "```py\n       def left(self, duration): \n         self.set_speed() \n         self.right_motor.run(Adafruit_MotorHAT.FORWARD) \n         time.sleep(duration) \n         self.stop() \n\n       def right(self, duration): \n         self.set_speed() \n         self.left_motor.run(Adafruit_MotorHAT.FORWARD) \n         time.sleep(duration) \n         self.stop()\n\n```", "```py\n       if __name__ == \"__main__\": \n         # create an instance  of the robot class with channels 1 and 2 \n         robot = Robot(1,2) \n         print(\"Moving forward...\") \n         robot.forward(5) \n         print(\"Moving backward...\") \n         robot.reverse(5) \n         robot.stop()\n\n```", "```py\n    sudo apt-get install motion\n\n```", "```py\n       daemon on\n threshold 99999\n framerate 90\n stream_maxrate 100\n stream_localhost off\n\n```", "```py\n start_motion_daemon=yes \n\n```", "```py\n       start)\n\n       if check_daemon_enabled ; then\n\n       if ! [ -d /var/run/motion ]; then\n\n       mkdir /var/run/motion\n\n       fi\n\n       chown motion:motion /var/run/motion\n\n       sudo modprobe bcm2835-v4l2\n\n       chmod 777 /var/run/motion\n\n       sleep 30\n\n       log_daemon_msg \"Starting $DESC\" \"$NAME\"\n\n```", "```py\n      <!DOCTYPE html>\n       <html>\n         <head>\n           <title>Raspberry Pi Zero Robot</title>\n         </head>\n\n         <body>\n          <iframe id=\"stream\" \n          src=\"img/?action=stream\" width=\"320\" height=\"240\">\n          </iframe>\n  </body>\n       </html>\n\n```", "```py\n       from flask import Flask, render_template\n       app = Flask(__name__)\n\n       @app.route(\"/\")\n       def hello():\n           return render_template('index.html')\n\n       if __name__ == \"__main__\":\n           app.run('0.0.0.0')\n\n```", "```py\n       python3 web_interface.py\n\n```", "```py\n       <table style=\"width:100%; max-width: 500px; height:300px;\"> \n         <tr> \n           <td> \n             <form action=\"/forward\" method=\"POST\"> \n               <input type=\"submit\" value=\"forward\" style=\"float:\n               left; width:80% ;\"> \n               </br> \n             </form> \n           </td> \n       ... \n       </table>\n\n```", "```py\n       @app.route('/forward', methods = ['POST']) \n       def forward(): \n           my_robot.forward(0.25) \n           return redirect('/')\n\n```", "```py\n       from flask import Flask, render_template, request, redirect \n       from robot import Robot  \n\n       app = Flask(__name__) \n       my_robot = Robot(1,2) \n\n       @app.route(\"/\") \n       def hello(): \n           return render_template('index.html') \n\n       @app.route('/forward', methods = ['POST']) \n       def forward(): \n           my_robot.forward(0.25) \n           return redirect('/') \n\n       @app.route('/reverse', methods = ['POST']) \n       def reverse(): \n           my_robot.reverse(0.25) \n           return redirect('/') \n\n       @app.route('/left', methods = ['POST']) \n       def left(): \n           my_robot.left(0.25) \n           return redirect('/') \n\n       @app.route('/right', methods = ['POST']) \n       def right(): \n           my_robot.right(0.25) \n           return redirect('/') \n\n       if __name__ == \"__main__\": \n           app.run('0.0.0.0')\n\n```", "```py\n    python3 /<path_to_webserver_file>/web_interface.py\n\n```"]