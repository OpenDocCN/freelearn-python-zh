- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: About the Book
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Do you want to develop reliable and secure applications that stand out from
    the crowd, rather than spending hours on boilerplate code? If so, the Django framework
    is where you should begin. Often referred to as a "batteries included" web development
    framework, Django comes with all the core features needed to build a standalone
    application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: '*Web Development with Django* takes this philosophy and equips you with the
    knowledge and confidence to build real-world applications using Python.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
- en: Starting with the essential concepts of Django, you'll cover its major features
    by building a website called Bookr – a repository for book reviews. This end-to-end
    case study is split into a series of bitesize projects that are presented as exercises
    and activities, allowing you to challenge yourself in an enjoyable and attainable
    way.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
- en: As you progress, you'll learn various practical skills, including how to serve
    static files to add CSS, JavaScript, and images to your application, how to implement
    forms to accept user input, and how to manage sessions to ensure a reliable user
    experience. Throughout this book, you'll cover key daily tasks that are part of
    the development cycle of a real-world web application.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this book, you'll have the skills and confidence to creatively
    tackle your own ambitious projects with Django.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: About the Authors
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Ben Shaw* is a software engineer based in Auckland, New Zealand. He has worked
    as a developer for over 14 years and has been building websites with Django since
    2007\. In that time, his experience has helped many different types of companies,
    ranging in size from start-ups to large enterprises. He is also interested in
    machine learning, data science, automating deployments, and DevOps. When not programming,
    Ben enjoys outdoor sports and spending time with his partner and son.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: '*Saurabh Badhwar* is an infrastructure engineer who works on building tools
    and frameworks that enhance developer productivity. A major part of his work involves
    using Python to develop services that scale to thousands of concurrent users.
    He is currently employed at LinkedIn and works on infrastructure performance tools
    and services.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
- en: '*Andrew Bird* is the data and analytics manager of Vesparum Capital. He leads
    the software and data science teams at Vesparum, overseeing full-stack web development
    in Django/React. He is an Australian actuary (FIAA, CERA) who has previously worked
    with Deloitte Consulting in financial services. Andrew also currently works as
    a full-stack developer for Draftable Pvt. Ltd. He manages ongoing development
    of the donation portal for the Effective Altruism Australia website on a voluntary
    basis. Andrew has also co-written one of our bestselling titles, "The Python Workshop".'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: '*Bharath Chandra K S* lives in Sydney, Australia, and has over 10 years of
    software industry experience. He is very passionate about software development
    on the Python stack, including frameworks such as Flask and Django. He has experience
    of working with both monolithic and microservice architectures and has built various
    public-facing applications and data processing backend systems. When not cooking
    up software applications, he likes to cook food.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
- en: '*Chris Guest* started programming in Python 20 years ago, when it was an obscure
    academic language. He has since used his Python knowledge in the publishing, hospitality,
    medical, and academic sectors. Throughout his career, he has worked with many
    Python web development frameworks, including Zope, TurboGears, web2py, and Flask,
    although he still prefers Django.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
- en: Who This Book Is For
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Web Development with Django* is designed for programmers who want to gain
    web development skills with the Django framework. To fully understand the concepts
    explained in this book, you should have basic knowledge of Python programming,
    as well as familiarity with JavaScript, HTML, and CSS.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
- en: About the Chapters
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Chapter 1*, *Introduction to Django*, starts by getting a Django project set
    up almost immediately. You''ll learn how to bootstrap a Django project, respond
    to web requests, and use HTML templates.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 2*, *Models and Migrations*, introduces Django data models, the method
    of persisting data to a SQL database.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 3*, *URL Mapping, Views, and Templates*, builds on the techniques
    that were introduced in *Chapter 1*, *Introduction to Django*, and explains in
    greater depth how to route web requests to Python code and render HTML templates.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 4*, *Introduction to Django Admin*, shows how to use Django''s built-in
    Admin GUI to create, update, and delete data stored by your models.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 5*, *Serving Static Files*, explains how to enhance your website with
    styles and images, and how Django makes managing these files easier.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 6*, *Forms*, shows you how to collect user input through your website
    by using Django''s Forms module.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 7*, *Advanced Form Validation and Model Forms*, builds upon *Chapter
    6*, *Forms*, by adding more advanced validation logic to make your forms more
    powerful.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 8*, *Media Serving and File Uploads*, shows how to further enhance
    sites by allowing your users to upload files and serve them with Django.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 9*, *Sessions and Authentication*, introduces the Django session and
    shows you how to use it to store user data and authenticate users.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 10*, *Advanced Django Admin and Customization*, continues on from
    *Chapter 4*, *Introduction to Django Admin*. Now that you know more about Django,
    you can customize the Django admin with advanced features.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 11*, *Advanced Templating and Class-Based Views*, lets you see how
    to reduce the amount of code you need to write by using some of Django''s advanced
    templating features and classes.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 12*, *Building a REST API*, gives you a look at how to add a REST
    API to Django, to allow programmatic access to your data from different applications.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 13*, *Generating CSV, PDF, and Other Binary Files*, further expands
    the capabilities of Django by showing how you can use it to generate more than
    just HTML.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 14*, *Testing*, is an important part of real-world development. This
    chapter shows how to use the Django and Python testing frameworks to validate
    your code.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 15*, *Django Third-Party Libraries*, exposes you to some of the many
    community-built Django libraries, showing how to use existing third-party code to quickly
    add functionality to your project.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 16*, *Using a Frontend JavaScript Library with Django*, brings interactivity
    to your website by integrating with React and the REST API that was created in
    *Chapter 12*, *Building a REST API*.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 17*, *Deployment of a Django Application (Part 1 – Server Setup)*,
    begins the process of deploying the application by setting up your own server.
    This is a bonus chapter and is downloadable from the GitHub repository for this
    book.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: '*Chapter 18*, *Deploying a Django Application (Part 2 – Configuration and Code
    Deployment)*, finishes up the project by showing you how to deploy your project
    to a virtual server. This is also a bonus chapter and is downloadable from the
    GitHub repository for this book.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, and user input are shown as follows: "It is created and
    scaffolded by running the `django-admin.py` command on the command line with the
    `startproject` argument."'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: 'Words that you see on screen, for example, in menus or dialog boxes, also appear
    in the text like this: "In the `Preferences List` pane on the left, open the `Project:
    Bookr` item and then click `Project Interpreter`."'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In cases where inputting and executing some code gives an immediate output,
    this is shown as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In the preceding example, the code entered is `qd.getlist("k")` and the output
    is `['a', 'b', 'c']`.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: 'New terms and important words are shown like this: "Django models define the
    data for your application and provide an abstraction layer to SQL database access
    through an **Object Relational Mapper** (**ORM**)."'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: Lines of code that span multiple lines are split using a backslash ( \ ). When
    the code is executed, Python will ignore the backslash, and treat the code on
    the next line as a direct continuation of the current line.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
- en: 'For example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Long code snippets are truncated and the corresponding names of the code files
    on GitHub are placed at the top of the truncated code. The permalinks to the entire
    code are placed beneath the code snippet. It should look as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Before You Begin
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each great journey begins with a humble step. Before we can do awesome things
    with Django, we need to be prepared with a productive environment. In this section,
    we will see how to do that.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: Installing Python
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Before using Django version 3 or later, you will need Python 3 installed on
    your computer. Mac and Linux operating systems usually have some version of Python
    installed, but it''s best to make sure you''re running the latest version. On
    Mac, for Homebrew users, you can just type the following:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'On Debian-based Linux distributions, you can check which version is available
    by typing the following:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Depending on the output, you can then type something along the lines of the following:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'For Windows, you can download the Python 3 installer here: [https://www.python.org/downloads/windows/](https://www.python.org/downloads/windows/).
    Once you have the installer, click on it to run, and then follow the instructions.
    Be sure to select the **Add Python 3.x to PATH** option.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: Once installed, from Command Prompt, you can run `python` to launch a Python interpreter.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Note that on macOS and Linux, depending on your configuration, the `python`
    command might launch Python version 2 or Python version 3\. To be sure, make sure
    to specify `python3`. On Windows, you should just run `python` as this will always
    launch Python version 3.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: Similarly with the `pip` command. On macOS and Linux, specify `pip3`; on Windows, just
    `pip`.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: Installing PyCharm Community Edition
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In *Web Development with Django*, we will be using PyCharm **Continuity Edition**
    (**CE**) as our **Integrated Development Environment** (**IDE**) for editing our
    code as well as running and debugging it. It can be downloaded from [https://www.jetbrains.com/pycharm/download/](https://www.jetbrains.com/pycharm/download/).
    Once you have the installer, follow the instructions to install it in the usual
    way for your operating system.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: 'You can find detailed installation instructions for macOS, Linux, and Windows
    at this link: [https://www.jetbrains.com/help/pycharm/installation-guide.html#standalone](https://www.jetbrains.com/help/pycharm/installation-guide.html#standalone).
    The system requirements for PyCharm can be found here: [https://www.jetbrains.com/help/pycharm/installation-guide.html#requirements](https://www.jetbrains.com/help/pycharm/installation-guide.html#requirements).
    For more information on accessing PyCharm after installation, you can follow this
    link: [https://www.jetbrains.com/help/pycharm/run-for-the-first-time.html](https://www.jetbrains.com/help/pycharm/run-for-the-first-time.html).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: virtualenv
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Though not required, we recommend using a Python virtual environment, which
    will keep the Python packages for *Web Development with Django* separate from
    your system packages.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 'First, we''ll look at how to set up a virtual environment on macOS and Linux.
    The `virtualenv` Python package needs to be installed, and this can be done with
    `pip3`:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Then we can create a virtual environment in the current directory:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Once the virtual environment has been created, we need to source it so that
    the current terminal knows to use that environment''s Python and packages. This
    is done like this:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'On Windows, we can use the built-in `venv` library, which works in a similar
    manner. We don''t need to install anything. To create a virtual environment in
    the current directory, we can run the following command:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Once it has been created, activate it with the activate script inside the `Scripts`
    directory, which is inside the new virtual environment:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In macOS, Linux, and Windows, you will know that the virtual environment has
    been activated because its name, in brackets, will precede the prompt. For example:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Installing Django
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'After activating your virtual environment, install Django using `pip3` or `pip`
    (depending on your operating system):'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: As long as your virtual environment has been activated, it will use the version
    of `pip` in that environment and install packages in that environment too.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Django 3.0 and Django 3.1
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From Django 3.1 onward, the authors of Django changed the method by which paths
    are joined together in the Django settings file. We'll explain the settings file
    in depth in *Chapter 1*, *Introduction to Django*, but for now you just need to
    know that this file is called `settings.py`.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: 'In earlier versions, the `BASE_DIR` setting variable (the path to your project
    on disk) was created as a string, like this:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'The `os` package was imported into `settings.py`, and paths joined with the
    `os.path.join` function. For example:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'In Django 3.1, `BASE_DIR` is now a `pathlib.Path` object. It is assigned like
    this:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Path objects and strings can be joined using the `/` (divide) operator that
    `pathlib.Path` overloads:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE17]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `os.path.join` function can also be used to join `pathlib.Path` objects,
    provided that it has been imported into `settings.py` first.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: 'Since most Django projects in production today use versions of Django prior
    to 3.1, we''ve chosen to use the `os.path.join` function to join paths throughout
    this book. When you create a new Django project, it will be with the latest version
    of Django, which will be higher than 3.1\. So, to ensure compatibility, you just
    need to make sure that you add a line to import the `os` module at the start of
    `settings.py`, like so:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Once added, you can follow the instructions throughout the book without modification.
    We'll remind you to make this change when you start working with `settings.py`,
    too.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
- en: Apart from this minor addition, no modifications need to be done to the code
    examples, exercises, and activities throughout this book to support Django 3.0
    or 3.1\. While we can never be 100% certain, we are confident that this code will
    work fine with future versions of Django too.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: DB Browser for SQLite
  id: totrans-97
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This book uses SQLite as an on-disk database when developing your projects.
    Django provides a command-line interface for accessing its data using the text
    command, but GUI applications are also available to make data browsing friendlier.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: The tool we recommend is **DB Browser for SQLite**, or just **DB Browser** for
    short. It is a cross-platform (Windows, macOS, and Linux) GUI application.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
- en: Installing on Windows
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download the installer for the correct architecture of Windows (32-bit or 64-bit)
    from [https://sqlitebrowser.org/dl/](https://sqlitebrowser.org/dl/).
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Run the downloaded installer and follow the Setup Wizard instructions:![Figure
    0.1: Setup Wizard page'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B15509_00_01.jpg)'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 0.1: Setup Wizard page'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'After accepting `End-User License Agreement`, you''ll be asked to select shortcuts
    for the application. It is recommended that you enable `Desktop` and `Program
    Menu` shortcuts for DB Browser so that once installed, the application is easier
    to find:![Figure 0.2: Page where you can select shortcuts for the application'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B15509_00_02.jpg)'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 0.2: Page where you can select shortcuts for the application'
  id: totrans-107
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: You should be fine to follow the defaults by just clicking `Next` at each screen
    throughout the installation.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you didn't add `Program Menu` or `Desktop` shortcuts in *step 3*, then you'll
    need to find DB Browser in `C:\Program Files\DB Browser for SQLite`.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing on macOS
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download the application disk image for macOS from [https://sqlitebrowser.org/dl/](https://sqlitebrowser.org/dl/).
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Once the download has finished, open the disk image. You''ll see a window like this:![Figure
    0.3: Disk image'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '](img/B15509_00_03.jpg)'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Figure 0.3: Disk image'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Drag and drop the `DB Browser for SQLite` application to the `Applications`
    folder to install it.
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Once installed, you can launch `DB Browser for SQLite` from inside your `Applications`
    folder.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Installing on Linux
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The installation instructions for Linux will depend on which distribution you're
    using. You can find the instructions at [https://sqlitebrowser.org/dl/](https://sqlitebrowser.org/dl/).
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: Using DB Browser
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here are a few screenshots illustrating a couple of the features of DB Browser.
    The screenshots were taken on macOS, but the behavior is similar on all platforms.
    The first step after opening is to select your SQLite database file:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.4: Database open dialogue'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_04.jpg)'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.4: Database open dialogue'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
- en: 'Once a database file is open, we can explore its structure in the `Database
    Structure` tab. *Figure 0.5* demonstrates this:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.5: Database Structure with one table expanded'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_05.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.5: Database Structure with one table expanded'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: 'The `reviews_book` table has been expanded in the preceding screenshot so that
    we can see its table structure. We can also browse the data inside tables by switching
    to the `Browse Data` tab:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.6: Data in the reviews_book table'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_06.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.6: Data in the reviews_book table'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'The final thing we might want to do is execute SQL commands (you''ll learn
    about these in *Chapter 2*, *Models and Migrations*). This is done inside the
    `Execute SQL` tab:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.7: SQL command executed with the results showing'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_07.jpg)'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.7: SQL command executed with the results showing'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 0.7* shows the results of executing the SQL statement `SELECT * FROM
    reviews_book`.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Don't worry if you're not sure what this all means yet (at this point you don't
    even have an SQLite file to try this out on). It will make more sense once you
    start learning about Django models, databases, and SQL queries as you progress
    through the book. *Chapter 2*, *Models and Migrations*, is where you'll start
    working with DB Browser.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: The Bookr Project
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Throughout this book, you'll be progressively building an app called **Bookr**.
    It is designed to let users browse and add book reviews (and books as well). As
    you complete the exercises and activities in each chapter, you'll be adding more
    features to the application. The GitHub repository for this book contains individual
    folders for the exercises and activities. These folders will usually include the
    files where the code of the app has changed.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: The Final Directory
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Each chapter's code will also have a directory called `final`. This directory
    will include all the code written for the app through to the end of that chapter.
    So, for example, the `final` folder for *Chapter 5*, *Serving Static Files*, will
    contain the full code for the Bookr app until the end of that chapter. That way,
    if you lose progress, you can use the code in the `final` folder of, say, `Chapter
    5`, to start `Chapter 6`.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: 'The following screenshot shows how the directory structure would appear for
    a chapter after downloading the code from the GitHub repo to disk (refer to the
    *Installing the Code Bundle* section for more details on how to download the code
    from the repo):'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.8: Chapter-level directory structure for Bookr'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_08.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.8: Chapter-level directory structure for Bookr'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: Populating the Data
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When you reach *Chapter 2*, *Models and Migrations*, it is recommended that
    you populate your database with the list of sample books we have provided so that
    your end result remains more or less similar to ours. Make sure you don't skip
    the section entitled *Populating the Bookr Database* in *Chapter 2*, *Models and
    Migrations*, wherein we have provided a tiny script that lets you quickly populate
    the database.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: Installing the Code Bundle
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Download the code files from GitHub at [http://packt.live/3nIWPvB](http://packt.live/3nIWPvB).
    Refer to these code files for the complete code bundle. The files here contain
    the exercises, activities, activity solutions, bonus chapters, and some intermediate
    code for each chapter.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: 'On the GitHub repo''s page, you can click the green `Code` button and then
    click the `Download ZIP` option to download the complete code as a ZIP file to
    your disk (refer to *Figure 0.9*). You can then extract these code files to a
    folder of your choice, for example, `C:\Code`:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 0.9: Download ZIP option'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '](img/B15509_00_09.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
- en: 'Figure 0.9: Download ZIP option'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: Get in Touch
  id: totrans-154
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: '`customercare@packtpub.com`.'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '`customercare@packtpub.com`。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you could report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and complete the form.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**: 尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，如果您能向我们报告，我们将不胜感激。请访问 [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    并填写表格。'
- en: '`copyright@packt.com` with a link to the material.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`copyright@packt.com` 并附上相关材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**: 如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)。'
- en: Please Leave a Review
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请留下评论
- en: Let us know what you think by leaving a detailed, impartial review on Amazon.
    We appreciate all feedback – it helps us continue to make great products and help
    aspiring developers build their skills. Please spare a few minutes to give your
    thoughts – it makes a big difference to us.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在亚马逊上留下详细、公正的评论来告诉我们您的想法。我们感谢所有反馈——它帮助我们继续制作优质产品并帮助有抱负的开发者提升技能。请抽出几分钟时间留下您的想法——这对我们来说意义重大。
