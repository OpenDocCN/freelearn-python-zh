- en: Chapter 17
  id: totrans-0
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 第 17 章
- en: The Dual-Alternative Decision Structure
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 双重选择决策结构
- en: 17.1 The Dual-Alternative Decision Structure
  id: totrans-2
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 17.1 双重选择决策结构
- en: In contrast to the single-alternative decision structure, this type of decision
    control structure includes a statement or block of statements on both paths.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 与单选择决策结构相比，这种决策控制结构在两个路径上都包含一个语句或语句块。
- en: '![Image](img/chapter17-01.png)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/chapter17-01.png)'
- en: If Boolean_Expression evaluates to True, the statement or block of statements
    1 is executed; otherwise, the statement or block of statements 2 is executed.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 如果布尔表达式 Boolean_Expression 评估为 True，则执行语句或语句块 1；否则，执行语句或语句块 2。
- en: The general form of the Python statement is
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Python 语句的一般形式是
- en: 'if Boolean_Expression:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 'if Boolean_Expression:'
- en: A statement or block of statements 1
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一个语句或语句块 1
- en: 'else:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: A statement or block of statements 2
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 一个语句或语句块 2
- en: In the next example, the message “You are an adult” is displayed when the user
    enters a value greater than or equal to 18\. The message “You are underage!”  is
    displayed otherwise.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个示例中，当用户输入大于或等于 18 的值时，会显示消息“您已成年”。否则，会显示消息“您未成年！”
- en: '![](img/my_exercise_header.png) file_17.1'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_17.1'
- en: 'age = int(input("Enter your age: "))'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 'age = int(input("Enter your age: "))'
- en: 'if age >= 18:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 'if age >= 18:'
- en: print("You are an adult!")
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: print("You are an adult!")
- en: 'else:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: print("You are underage!")
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: print("You are underage!")
- en: Exercise 17.1-1 Finding the Output Message
  id: totrans-18
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 17.1-1 寻找输出消息
- en: For the following flowchart, determine the output message for three different
    executions.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 对于以下流程图，确定三种不同执行中的输出消息。
- en: 'The input values for the three executions are: (i) 3, (ii) −3, and (iii) 0.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 三次执行输入的值分别是：(i) 3，(ii) −3，和 (iii) 0。
- en: '![Image](img/chapter17-02.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/chapter17-02.png)'
- en: Solution
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 解答
- en: i)When the user enters the value 3, the Boolean expression evaluates to True.
    The flow of execution follows the right path and the message “Positive” is displayed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: i)当用户输入值 3 时，布尔表达式评估为 True。执行流程遵循正确路径，并显示消息“Positive”。
- en: ii)When the user enters the value −3, the Boolean expression evaluates to False.
    The flow of execution follows the left path and the message “Negative” is displayed.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ii)当用户输入值 −3 时，布尔表达式评估为 False。执行流程遵循左侧路径，并显示消息“Negative”。
- en: iii)Can you predict what happens when the user enters the value 0? If you believe
    that none of the messages will be displayed, you are wrong! The dual-alternative
    decision structure must always follow a path, either the right or the left! It
    cannot skip the execution of both of its blocks of statements. At least one statement
    or block of statements must be executed. So, in this case, when the user enters
    the value 0, the Boolean expression evaluates to False, the flow of execution
    follows the left path, and the message “Negative” is displayed!
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: iii)你能预测当用户输入值 0 时会发生什么吗？如果你认为不会显示任何消息，那你就错了！双重选择决策结构必须始终遵循一个路径，要么是右侧，要么是左侧！它不能跳过执行两个语句块。至少必须执行一个语句或语句块。所以，在这种情况下，当用户输入值
    0 时，布尔表达式评估为 False，执行流程遵循左侧路径，并显示消息“Negative”。
- en: '![](img/notice.jpg)This algorithm, as it stands, does not satisfy the property
    of effectiveness for all possible inputs. While it correctly identifies positive
    and negative values, it overlooks the case of zero. Zero is a valid input and
    should be accounted for in the algorithm''s logic to ensure it produces a meaningful
    result for all potential inputs. Later in this book (in [Exercise 19.1-2](chapter19.html#toc_3)),
    you will learn how to display three messages, depending on whether the user-provided
    value is greater than, less than, or equal to zero.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)该算法目前的形式并不满足对所有可能输入的有效性属性。虽然它正确地识别了正数和负数，但它忽略了零的情况。零是一个有效的输入，算法的逻辑应该考虑到这一点，以确保对所有潜在的输入产生有意义的输出。在本书的后面部分（在[练习
    19.1-2](chapter19.html#toc_3)中），你将学习如何根据用户提供的值是大于、小于还是等于零来显示三条不同的消息。'
- en: '![](img/remember.jpg)A Decision symbol has one entrance and two exit paths!
    You cannot have a third exit!'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/remember.jpg)决策符号有一个入口和两个出口路径！你不能有第三个出口！'
- en: Exercise 17.1-2 Trace Tables and Dual-Alternative Decision Structures
  id: totrans-28
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 17.1-2 跟踪表和双重选择决策结构
- en: Create a trace table to determine the values of the variables in each step of
    the next Python program for two different executions.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个跟踪表，以确定在下一个 Python 程序的每个步骤中变量的值，针对两种不同的执行。
- en: The input values for the two executions are (i) 5, and (ii) 10.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是 (i) 5 和 (ii) 10。
- en: '![](img/my_exercise_header.png) file_17.1-2'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
- en: a = float(input())
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
- en: z = a * 10
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: w = (z - 4) * (a - 3) / 7 + 36
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
- en: 'if a < z >= w:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: y = 2 * a
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
- en: 'else:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: y = 4 * a
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
- en: print(y)
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: i)For the input value of 5, the trace table looks like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: '| Step | Statement | Notes | a | z | w | y |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
- en: '| 1 | a = float(input()) | User enters the value 5 | 5.0 | ? | ? | ? |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
- en: '| 2 | z = a * 10 |   | 5.0 | 50.0 | ? | ? |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
- en: '| 3 | w = (z ‑ 4) * (a ‑ 3) / 7 + 36 |   | 5.0 | 50.0 | 49.142 | ? |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
- en: '| 4 | if a < z >= w: | This evaluates to True |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
- en: '| 5 | y = 2 * a |   | 5.0 | 50.0 | 49.142 | 10.0 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
- en: '| 6 | print(y) | It displays: 10.0 |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
- en: ii)For the input value of 10, the trace table looks like this.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
- en: '| Step | Statement | Notes | a | z | w | y |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
- en: '| 1 | a = float(input()) | User enters the value 10 | 10.0 | ? | ? | ? |'
  id: totrans-51
  prefs: []
  type: TYPE_TB
- en: '| 2 | z = a * 10 |   | 10.0 | 100.0 | ? | ? |'
  id: totrans-52
  prefs: []
  type: TYPE_TB
- en: '| 3 | w = (z ‑ 4) * (a ‑ 3) / 7 + 36 |   | 10.0 | 100.0 | 132.0 | ? |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
- en: '| 4 | if a < z >= w: | This evaluates to False |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
- en: '| 5 | y = 4 * a |   | 10.0 | 100.0 | 132.0 | 40.0 |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
- en: '| 6 | print(y) | It displays: 40.0 |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
- en: Exercise 17.1-3 Who is the Greatest?
  id: totrans-57
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Design a flowchart and write the corresponding Python program that lets the
    user enter two numbers A and B and then determines and displays the greater of
    the two numbers.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Solution
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: This exercise can be solved using either the dual- or single-alternative decision
    structure.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: First approach – Using a dual-alternative decision structure
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: This approach tests if the value of number B is greater than that of number
    A. If so, number B is the greatest; otherwise, number A is the greatest. The corresponding
    flowchart for solving this exercise using this approach is presented below
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](img/chapter17-03.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
- en: and the Python program is as follows.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/my_exercise_header.png) file_17.1-3a'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: a = float(input())
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: b = float(input())
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
- en: 'if b > a:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
- en: maximum = b
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
- en: 'else:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
- en: maximum = a
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
- en: print("Greatest value:", maximum)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/notice.jpg)Note that this exercise is trying to determine the greatest
    value and not which variable this value is actually assigned to (to variable A
    or to variable B).'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
- en: Second approach – Using a single-alternative decision structure
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
- en: As presented in the following flowchart, this approach initially assumes that
    number A is likely the greatest value (this is why it assigns the value of variable
    a to variable maximum). However, if it turns out that number B is greater than
    number A, then the greatest value is updated; variable maximum is assigned a new
    value—the value of variable b. Thus, irrespective of the values of numbers A and
    B, in the end, variable maximum will always contain the greatest value!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
- en: '![Image](img/chapter17-04.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
- en: The Python program is shown here.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/my_exercise_header.png) file_17.1-3b'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
- en: a = float(input())
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
- en: b = float(input())
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
- en: maximum = a
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: 'if b > a:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: maximum = b
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
- en: print("Greatest value:", maximum)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Exercise 17.1-4 Finding Odd and Even Numbers
  id: totrans-85
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: Design a flowchart and write the corresponding Python program that prompts the
    user to enter a positive integer, and then displays a message indicating whether
    this number is even; it must display “Odd” otherwise.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 设计一个流程图并编写相应的Python程序，提示用户输入一个正整数，然后显示一条消息，指出该数字是偶数；否则，显示“奇数”。
- en: Solution
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Next you can find various odd and even numbers:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来你可以找到各种奇数和偶数：
- en: '►Odd numbers: 1, 3, 5, 7, 9, 11, …'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: ►奇数：1, 3, 5, 7, 9, 11, …
- en: '►Even numbers: 0, 2, 4, 6, 8, 10, 12, ….'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: ►偶数：0, 2, 4, 6, 8, 10, 12, …。
- en: '![](img/notice.jpg)Note that zero is considered an even number.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/notice.jpg)注意，零被认为是偶数。'
- en: In this exercise, you need to find a way to determine whether a number is odd
    or even. You need to find a common attribute between all even numbers, or between
    all odd numbers. And actually there is one! All even numbers are exactly divisible
    by 2\. So, when the result of the operation x MOD 2 equals 0, x is even; otherwise,
    x is odd.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个练习中，你需要找到一种方法来确定一个数字是奇数还是偶数。你需要找到所有偶数之间的共同属性，或者所有奇数之间的共同属性。实际上有一个！所有偶数都能被2整除。所以，当操作
    x MOD 2 的结果等于0时，x是偶数；否则，x是奇数。
- en: The flowchart is shown here.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 流程图如下所示。
- en: '![Image](img/chapter17-05.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/chapter17-05.png)'
- en: and the Python program is as follows.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 并且Python程序如下。
- en: '![](img/my_exercise_header.png) file_17.1-4'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_17.1-4'
- en: 'x = int(input("Enter a positive integer: "))'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: x = int(input("输入一个正整数："))
- en: 'if x % 2 == 0:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x % 2 == 0:'
- en: print("Even")
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 打印("偶数")
- en: 'else:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: print("Odd")
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 打印("奇数")
- en: Exercise 17.1-5 Weekly Wages
  id: totrans-102
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 练习 17.1-5 每周工资
- en: Gross pay depends on the pay rate and the total number of hours worked per week.
    However, if someone works more than 40 hours, they get paid time-and-a-half for
    all hours worked over 40\. Design a flowchart and write the corresponding Python
    program that lets the user enter a pay rate and the hours worked and then calculates
    and displays the gross pay.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 总工资取决于工资率和每周工作的小时总数。然而，如果有人工作超过40小时，他们将获得超过40小时的工作时间工资。设计一个流程图并编写相应的Python程序，让用户输入工资率和工作时间，然后计算并显示总工资。
- en: Solution
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'This exercise can be solved using the dual-alternative decision structure.
    When the hours worked are over 40, the gross pay is calculated as follows:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习可以使用双重选择决策结构来解决。当工作时间超过40小时时，总工资的计算如下：
- en: gross pay = (pay rate) × 40 + 1.5 × (pay rate) × (all hours worked over 40)
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 总工资 = (工资率) × 40 + 1.5 × (工资率) × (超过40小时的工作小时数)
- en: The flowchart that solves this problem is shown here.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的流程图如下所示。
- en: '![Image](img/chapter17-06.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/chapter17-06.png)'
- en: and the Python program is shown here.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 并且Python程序如下所示。
- en: '![](img/my_exercise_header.png) file_17.1-5'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '![](img/my_exercise_header.png) file_17.1-5'
- en: payRate = float(input())
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: payRate = float(input())
- en: hoursWorked = int(input())
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: hoursWorked = int(input())
- en: 'if hoursWorked <= 40:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 'if hoursWorked <= 40:'
- en: grossPay = payRate * hoursWorked
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: grossPay = payRate * hoursWorked
- en: 'else:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: grossPay = payRate * 40 + 1.5 * payRate * (hoursWorked - 40)
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: grossPay = payRate * 40 + 1.5 * payRate * (hoursWorked - 40)
- en: print("Gross Pay:", grossPay)
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 打印("总工资：", grossPay)
- en: '17.2 Review Questions: True/False'
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 17.2 复习问题：真/假
- en: Choose true or false for each of the following statements.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 对以下每个陈述选择正确或错误。
- en: 1)It is a possible that none of the statements enclosed in a dual-alternative
    decision structure will be executed.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 1)在双重选择决策结构中，可能没有任何陈述被执行。
- en: 2)The dual-alternative decision structure must include at least two statements.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 2)双重选择决策结构必须至少包含两个语句。
- en: 3)The dual-alternative decision structure uses the reserved keyword else.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 3)双重选择决策结构使用保留关键字else。
- en: 4)The following statement is syntactically correct.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 4)以下陈述在语法上是正确的。
- en: else = 5
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: else = 5
- en: 5)In a dual-alternative decision structure, the evaluated Boolean expression
    can return more than two values.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 5)在双重选择决策结构中，评估的布尔表达式可以返回超过两个值。
- en: 6)The following code fragment satisfies the property of effectiveness.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 6)以下代码片段满足有效性的属性。
- en: x = int(input())
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: x = int(input())
- en: y = int(input())
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: y = int(input())
- en: z = int(input())
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: z = int(input())
- en: 'if x > y and x > z:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > y and x > z:'
- en: print("Value", x, "is the greatest one")
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 打印("值", x, "是最大的一个")
- en: 'else:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: print("Value", y, "is the greatest one")
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 打印("值", y, "是最大的一个")
- en: '17.3 Review Questions: Multiple Choice'
  id: totrans-134
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 17.3 复习问题：多项选择题
- en: Select the correct answer for each of the following statements.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 对以下每个陈述选择正确答案。
- en: 1)The dual-alternative decision structure includes a statement or block of statements
    on
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 1)双重选择决策结构包括一个语句或语句块。
- en: a)the false path only.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: a)仅错误路径。
- en: b)both paths.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: b)两条路径。
- en: c)the true path only.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: c)仅真实路径。
- en: 2)In the following code fragment,
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 2)在以下代码片段中，
- en: 'if x % 2 == 0:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x % 2 == 0:'
- en: x = 0
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: x = 0
- en: 'else:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: y += 1
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: y += 1
- en: the statement y += 1 is executed when
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: the statement y += 1 is executed when
- en: a)variable x is exactly divisible by 2.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: a)变量x正好能被2整除。
- en: b)variable x contains an even number.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: b)变量x包含一个偶数。
- en: c)variable x contains an odd number.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: c)变量x包含一个奇数。
- en: d)none of the above
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: d)以上都不是
- en: 3)In the following code fragment,
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 3)在以下代码片段中，
- en: 'if x == 3:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x == 3:'
- en: x = 5
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: x = 5
- en: 'else:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: x = 7
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: x = 7
- en: y += 1
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: y += 1
- en: the statement y += 1 is executed
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 执行语句y += 1的条件是
- en: a)when variable x contains a value of 3.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: a)当变量x包含的值为3时。
- en: b)when variable x contains a value other than 3.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: b)当变量x包含的值不是3时。
- en: c)both of the above
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: c)以上都是
- en: 17.4 Review Exercises
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 17.4 复习练习
- en: Complete the following exercises.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 完成以下练习。
- en: 1)Create a trace table to determine the values of the variables in each step
    of the next Python program for two different executions. Then, design the corresponding
    flowchart.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 1)为以下Python程序的每一步创建一个跟踪表以确定两次不同执行中变量的值。然后，设计相应的流程图。
- en: The input values for the two executions are (i) 3, and (ii) 0.5.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是（i）3和（ii）0.5。
- en: a = float(input())
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: a = float(input())
- en: z = a * 3 - 2
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: z = a * 3 - 2
- en: 'if z >= 1:'
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 'if z >= 1:'
- en: y = 6 * a
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: y = 6 * a
- en: 'else:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: z += 1
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: z += 1
- en: y = 6 * a + z
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: y = 6 * a + z
- en: print(z, ",", y)
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: print(z, ",", y)
- en: 2)Create a trace table to determine the values of the variables in each step
    of the next Python program. Then, design the corresponding flowchart.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 2)为以下Python程序的每一步创建一个跟踪表以确定变量的值。然后，设计相应的流程图。
- en: from math import sqrt
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: from math import sqrt
- en: x = 3
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: x = 3
- en: y = x ** 3 + 9
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: y = x ** 3 + 9
- en: z = 2 * x + y - 4
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: z = 2 * x + y - 4
- en: 'if x > y:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 'if x > y:'
- en: y = z % x
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: y = z % x
- en: z = sqrt(x)
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: z = sqrt(x)
- en: 'else:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 'else:'
- en: x = z % y
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: x = z % y
- en: z = sqrt(y)
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: z = sqrt(y)
- en: print(x, ",", y, ",", z)
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: print(x, ",", y, ",", z)
- en: 3)Write the Python program that corresponds to the following flowchart and then
    create a trace table to determine the values of the variables in each step for
    two different executions.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 3)编写与以下流程图相对应的Python程序，然后创建一个跟踪表以确定两次不同执行中每一步的变量值。
- en: The input values for the two executions are (i) 10, and (ii) 2.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 两次执行的输入值分别是（i）10和（ii）2。
- en: '![Image](img/chapter17-07.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![Image](img/chapter17-07.png)'
- en: 4)Using a dual-alternative decision structure, write a Python program that prompts
    the user to enter a number, and then displays a message indicating whether the
    user-provided number is greater than 100\. It must display “Provided number is
    less than or equal to 100” otherwise.
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 4)使用双重选择结构，编写一个Python程序，提示用户输入一个数字，然后显示一条消息，指出用户提供的数字是否大于100。如果不是，则显示“提供的数字小于或等于100”。
- en: 5)Using a dual-alternative decision structure, write a Python program that prompts
    the user to enter a number, and then displays a message indicating whether the
    user-provided number is between 0 and 100\. It must display “Provided number is
    not between 0 and 100” otherwise.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 5)使用双重选择结构，编写一个Python程序，提示用户输入一个数字，然后显示一条消息，指出用户提供的数字是否在0到100之间。如果不是，则显示“提供的数字不在0到100之间”。
- en: 6)Two football teams play against each other in the UEFA Champions League. Using
    a dual-alternative decision structure, write a Python program that prompts the
    user to enter the names of the two teams and the goals that each team scored,
    and then displays the name of the winner. Assume that the user enters valid values
    and there is no tie (draw).
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 6)两支足球队在欧洲冠军联赛中对战。使用双重选择结构，编写一个Python程序，提示用户输入两队的名称和每队得分，然后显示获胜队的名称。假设用户输入的是有效值，并且没有平局（平局）。
- en: 7)Using a dual-alternative decision structure, write a Python program that lets
    the user enter an integer, and then displays a message indicating whether the
    user-provided number is a multiple of 6; it must display “NN is not a multiple
    of 6” otherwise (where NN is the user-provided number). Assume that the user enters
    a non-negative^([[14]](footnotes.html#Endnote_14)) value.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 7)使用双重选择结构，编写一个Python程序，允许用户输入一个整数，然后显示一条消息，指出用户提供的数字是否是6的倍数；如果不是，则显示“NN不是6的倍数”（其中NN是用户提供的数字）。假设用户输入的是一个非负值^([[14]](footnotes.html#Endnote_14))。
- en: 8)Using a dual-alternative decision structure, write a Python program that lets
    the user enter an integer, and then displays one of two possible messages. One
    message indicates if the user-provided number is a multiple of 6 or a multiple
    of 7; the other message indicates if the user-provided number is neither a multiple
    of 6 nor a multiple of 7\. Assume that the user enters a non-negative value.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 8) 使用双重选择决策结构，编写一个Python程序，允许用户输入一个整数，然后显示两种可能的消息之一。一条消息指示用户提供的数字是否是6的倍数或7的倍数；另一条消息指示用户提供的数字既不是6的倍数也不是7的倍数。假设用户输入的是一个非负值。
- en: 9)Using a dual-alternative decision structure, write a Python program that lets
    the user enter an integer. The program must then display a message indicating
    whether the user-provided number is a multiple of 4; it must display “NN is not
    a multiple of 4” otherwise (where NN is the user-provided number). Additionally,
    the program must present the structure of the user-provided integer as “NN = QQ
    x 4 + RR”, where QQ is the integer quotient, and RR is the integer remainder when
    NN is divided by 4\. For example, if the user-provided integer is 14, the message
    “14 = 3 x 4 + 2” must be displayed. Assume that the user enters a non-negative
    value.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 9) 使用双重选择决策结构，编写一个Python程序，允许用户输入一个整数。程序必须显示一条消息，指示用户提供的数字是否是4的倍数；如果不是，则显示“NN不是4的倍数”（其中NN是用户提供的数字）。此外，程序必须以“NN
    = QQ x 4 + RR”的形式呈现用户提供的整数的结构，其中QQ是整数商，RR是NN除以4时的整数余数。例如，如果用户提供的整数是14，则必须显示消息“14
    = 3 x 4 + 2”。假设用户输入的是一个非负值。
- en: 10)Using a dual-alternative decision structure, design a flowchart and write
    the corresponding Python program that lets the user enter two values, and then
    determines and displays the smaller of the two values. Assume that the user enters
    two different values.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 10) 使用双重选择决策结构，设计一个流程图并编写相应的Python程序，允许用户输入两个值，然后确定并显示两个值中的较小值。假设用户输入的是两个不同的值。
- en: 11)Using a dual-alternative decision structure, write a Python program that
    lets the user enter three numbers, and then displays a message indicating whether
    the user-provided numbers can be lengths of the three sides of a triangle; it
    must display “Provided numbers cannot be lengths of the three sides of a triangle”
    otherwise. Assume that the user enters valid values.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 11) 使用双重选择决策结构，编写一个Python程序，允许用户输入三个数字，然后显示一条消息，指示用户提供的数字是否可以是三角形三边的长度；如果不是，则显示“提供的数字不能是三角形三边的长度”。假设用户输入的是有效值。
- en: 'Hint: In any triangle, the length of each side is less than the sum of the
    lengths of the other two sides.'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 提示：在任何三角形中，每边的长度都小于其他两边长度的和。
- en: 12)Using a dual-alternative decision structure, write a Python program that
    lets the user enter three numbers, and then displays a message indicating whether
    the user-provided numbers can be lengths of the three sides of a right triangle
    (or right-angled triangle); it must display “Provided numbers cannot be lengths
    of the three sides of a right triangle” otherwise. Assume that the user enters
    valid values.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 12) 使用双重选择决策结构，编写一个Python程序，允许用户输入三个数字，然后显示一条消息，指示用户提供的数字是否可以是直角三角形（或直角三角形）的三边长度；如果不是，则显示“提供的数字不能是直角三角形的三边长度”。假设用户输入的是有效值。
- en: 'Hint 1: Use the Pythagorean theorem.'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 提示1：使用勾股定理。
- en: 'Hint 2: You can use lengths of 3, 4 and 5 (which can be lengths of the three
    sides of a right triangle) to test your program.'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 提示2：您可以使用长度为3、4和5（这些可以是直角三角形的三边长度）来测试您的程序。
- en: 13)Athletes in the long jump at the Olympic Games in Athens in 2004 participated
    in three different qualifying jumps. An athlete, in order to qualify, has to achieve
    an average jump distance of at least 8 meters. Using a dual-alternative decision
    structure, write a Python program that prompts the user to enter the three performances,
    and then displays the message “Qualified” when the average value is greater than
    or equal to 8 meters; it displays “Disqualified” otherwise. Assume that the user
    enters valid values.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 13) 2004年雅典奥运会上跳远项目的运动员参加了三次不同的资格赛跳。为了获得资格，运动员必须达到至少8米的平均跳远距离。使用双重选择决策结构，编写一个Python程序，提示用户输入三次表现，当平均值为8米或以上时显示消息“合格”；否则显示“不合格”。假设用户输入的是有效值。
- en: 14)Gross pay depends on the pay rate and the total number of hours worked per
    week. However, if someone works more than 40 hours, they get paid double for all
    hours worked over 40\. Using a dual-alternative decision structure, design a flowchart
    and write the corresponding Python program that lets the user enter the pay rate
    and hours worked and then calculates and displays net pay. Net pay is the amount
    of pay that is actually paid to the employee after any deductions. Deductions
    include taxes, health insurance, retirement plans, on so on. Assume a total deduction
    of 30%. Also, assume that the user enters valid values.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 14)总工资取决于工资率和每周工作的小时总数。然而，如果有人工作超过40小时，他们将获得超过40小时工作时间的双倍工资。使用双重选择决策结构，设计一个流程图并编写相应的Python程序，允许用户输入工资率和工作时间，然后计算并显示净工资。净工资是在扣除任何扣除后的实际支付给员工的工资金额。扣除包括税收、健康保险、退休计划等。假设总扣除率为30%。此外，假设用户输入了有效的值。
- en: '15)Regular servicing will keep your vehicle more reliable, reducing the chance
    of breakdowns, inconvenience and unnecessary expenses. In general, there are two
    types of service you need to perform:'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 15)定期保养可以使您的车辆更加可靠，减少故障、不便和不必要的费用。一般来说，您需要执行两种类型的保养：
- en: a)a minor service every 6000 miles
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: a)每行驶6000英里进行一次小保养
- en: b)a major service every 12000 miles
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: b)每行驶12000英里进行一次大保养
- en: Using a dual-alternative decision structure, write a Python program that prompts
    the user to enter the miles traveled, and then calculates and displays how many
    miles are left until the next service, as well as the type of the next service.
    Assume that the user enters a valid value.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用双重选择决策结构，编写一个Python程序，提示用户输入行驶的英里数，然后计算并显示距离下一次保养还有多少英里，以及下一次保养的类型。假设用户输入了有效的值。
- en: 16)Two cars start from rest and move with a constant acceleration along a straight
    horizontal road for a specified time. Using a dual-alternative decision structure,
    write a Python program that prompts the user to enter the time the two cars traveled
    (same for both cars) and the acceleration for each one of them, and then calculates
    and displays the distance between them as well as a message “Car A is first” or
    “Car B is first” depending on which car is leading the race. The required formula
    is
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 16)两辆车从静止开始，沿直线水平道路以恒定加速度行驶指定的时间。使用双重选择决策结构，编写一个Python程序，提示用户输入两辆车行驶的时间（对两辆车都相同）以及每辆车的加速度，然后计算并显示它们之间的距离以及消息“车A领先”或“车B领先”，取决于哪辆车领先比赛。所需的公式是
- en: .![Image](img/chapter10-01.png)
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: .![图片](img/chapter10-01.png)
- en: where
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 在哪里
- en: ►S is the distance the car traveled, in meters (m)
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: ►S是汽车行驶的距离，以米（m）为单位
- en: ►u[o] is the initial velocity (speed) of the car, in meters per second (m/sec)
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: ►u[o]是汽车的初始速度（速度），以每秒米（m/sec）为单位
- en: ►t is the time the car traveled, in seconds (sec)
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: ►t是汽车行驶的时间，以秒（sec）为单位
- en: ►a is the acceleration, in meters per second² (m/sec²)
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: ►a是加速度，以每秒平方米（m/sec²）为单位
- en: Assume that the user-provided acceleration values are different from each other.
    Also assume that the user enters valid values.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 假设用户提供的加速度值各不相同。此外，假设用户输入了有效的值。
