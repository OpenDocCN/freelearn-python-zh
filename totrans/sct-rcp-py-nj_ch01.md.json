["```py\n>>> randint(0, 1000)\nTraceback (most recent call last):\nFile \"<stdin>\", line 1, in <module>\nNameError: name 'randint' is not defined\n>>> import random\n>>> random.randint(0, 1000)\n607\n```", "```py\n>>> from random import randint\n>>> randint(0, 10)\n2\n>>> randrange(0, 25)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'randrange' is not defined\n```", "```py\n >>> def first_funct():\n ...    x = 1\n ...    print(x)\n ...    def second_funct():\n ...        x = 2\n ...        print(x)\n ...    second_funct()\n ...\n```", "```py\n >>> first_funct()\n 1\n 2\n```", "```py\n >>> second_funct()\n Traceback (most recent call last):\n File \"<stdin>\", line 1, in <module>\n NameError: name 'second_funct' is not defined\n```", "```py\n >>> import math\n```", "```py\n >>> math.sin(45)\n 0.8509035245341184\n```", "```py\n >>> sin(45)\n      Traceback (most recent call last):\n        File \"<stdin>\", line 1, in <module>\n       NameError: name 'sin' is not defined\n```", "```py\n >>> from math import *\n      >>> sin(45)\n      0.8509035245341184\n```", "```py\n        def print_funct(arg):\n            print(arg)\n            if __name__ == \"__main__\":\n                import sys\n                print_funct(sys.argv[1])\n```", "```py\n        def print_funct(arg1, arg2, arg3):\n            print(arg1, arg2, arg3)\n        if __name__ == \"__main__\":\n            import sys\n            print_funct(sys.argv[1], sys.argv[2], sys.argv[3])\n```", "```py\n >>> def print_input(*args):\n      ...   for val, input in enumerate(args):\n      ...       print(\"{}. {}\".format(val, input))\n      ...\n      >>> print_input(\"spam\", \"spam\", \"eggs\", \"spam\")\n      0\\. spam\n      1\\. spam\n      2\\. eggs\n      3\\. spam\n```", "```py\nimport random\ndef randomNumGen(choice):\n    if choice == 1: #d6 roll\n        die = random.randint(1, 6)\n    elif choice == 2: #d10 roll\n        die = random.randint(1, 10)\n    elif choice == 3: #d100 roll\n        die = random.randint(1, 100)\n    elif choice == 4: #d4 roll\n      die = random.randint(1, 4)\n    elif choice == 5: #d8 roll\n      die = random.randint(1, 8)\n    elif choice == 6: #d12 roll\n      die = random.randint(1, 12)\n    elif choice == 7: #d20 roll\n      die = random.randint(1, 20)\n    else: #simple error message\n        return \"Shouldn't be here. Invalid choice\"\n    return die\nif __name__ == \"__main__\":\n    import sys\n    print(randomNumGen(int(sys.argv[1])))\n```", "```py\n$ python3 dice_roller.py 1\n2\n$ python3 dice_roller.py 2\n10\n$ python3 dice_roller.py 3\n63\n$ python3 dice_roller.py 4\n2\n$ python3 dice_roller.py 5\n5\n$ python3 dice_roller.py 6\n6\n$ python3 dice_roller.py 7\n17\n$ python3 dice_roller.py 8\nShouldn't be here. Invalid choice\n```", "```py\nimport random #randint\ndef randomNumGen(choice):\n    \"\"\"Get a random number to simulate a d6, d10, or d100 roll.\"\"\"\n\n    if choice == 1: #d6 roll\n      die = random.randint(1, 6)\n    elif choice == 2: #d10 roll\n        die = random.randint(1, 10)\n    elif choice == 3: #d100 roll\n        die = random.randint(1, 100)\n    elif choice == 4: #d4 roll\n      die = random.randint(1, 4)\n    elif choice == 5: #d8 roll\n      die = random.randint(1, 8)\n    elif choice == 6: #d12 roll\n      die = random.randint(1, 12)\n    elif choice == 7: #d20 roll\n      die = random.randint(1, 20)\n    else: #simple error message\n        return \"Shouldn't be here. Invalid choice\"\n    return die\ndef multiDie(dice_number, die_type):\n    \"\"\"Add die rolls together, e.g. 2d6, 4d10, etc.\"\"\"\n\n#---Initialize variables \n    final_roll = 0\n    val = 0\n\n    while val < dice_number:\n        final_roll += randomNumGen(die_type)\n        val += 1\n    return final_roll\ndef test():\n    \"\"\"Test criteria to show script works.\"\"\"\n\n    _1d6 = multiDie(1,1) #1d6\n    print(\"1d6 = \", _1d6, end=' ') \n    _2d6 = multiDie(2,1) #2d6\n    print(\"\\n2d6 = \", _2d6, end=' ')\n    _3d6 = multiDie(3,1) #3d6\n    print(\"\\n3d6 = \", _3d6, end=' ')\n    _4d6 = multiDie(4,1) #4d6\n    print(\"\\n4d6 = \", _4d6, end=' ')\n    _1d10 = multiDie(1,2) #1d10\n    print(\"\\n1d10 = \", _1d10, end=' ')\n    _2d10 = multiDie(2,2) #2d10\n    print(\"\\n2d10 = \", _2d10, end=' ')\n    _3d10 = multiDie(2,2) #3d10\n    print(\"\\n3d10 = \", _3d10, end=' ')\n    _d100 = multiDie(1,3) #d100\n    print(\"\\n1d100 = \", _d100, end=' ') \n\nif __name__ == \"__main__\": #run test() if calling as a separate program\n    test()\n```", "```py\n>>> import dice_roller_tests.py\n>>> dice_roller_tests.test()\n1d6 = 1 \n2d6 = 8 \n3d6 = 10 \n4d6 = 12 \n1d10 = 5 \n2d10 = 8 \n3d10 = 6 \n1d100 = 26\n```", "```py\n[[source]]\nurl = \"https://pypi.python.org/simple\"\nverify_ssl = true\nname = \"pypi\"\n\n[packages]\nrequests = \"*\"\n\n[dev-packages]\npytest = \"*\"\n```", "```py\n{\n  \"_meta\": {\n    \"hash\": {\n      \"sha256\": \"8d14434df45e0ef884d6c3f6e8048ba72335637a8631cc44792f52fd20b6f97a\"\n    },\n    \"host-environment-markers\": {\n      \"implementation_name\": \"cpython\",\n      \"implementation_version\": \"3.6.1\",\n      \"os_name\": \"posix\",\n      \"platform_machine\": \"x86_64\",\n      \"platform_python_implementation\": \"CPython\",\n      \"platform_release\": \"16.7.0\",\n      \"platform_system\": \"Darwin\",\n      \"platform_version\": \"Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64\",\n      \"python_full_version\": \"3.6.1\",\n      \"python_version\": \"3.6\",\n      \"sys_platform\": \"darwin\"\n    },\n    \"pipfile-spec\": 5,\n    \"requires\": {},\n    \"sources\": [\n      {\n        \"name\": \"pypi\",\n        \"url\": \"https://pypi.python.org/simple\",\n        \"verify_ssl\": true\n      }\n    ]\n  },\n  \"default\": {\n    \"certifi\": {\n      \"hashes\": [\n        \"sha256:54a07c09c586b0e4c619f02a5e94e36619da8e2b053e20f594348c0611803704\",\n        \"sha256:40523d2efb60523e113b44602298f0960e900388cf3bb6043f645cf57ea9e3f5\"\n      ],\n      \"version\": \"==2017.7.27.1\"\n    },\n    \"chardet\": {\n      \"hashes\": [\n         \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\",\n         \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\"\n      ],\n      \"version\": \"==3.0.4\"\n    },\n***further entries truncated***\n```", "```py\n >>> python3 -m venv <dir_name>\n```", "```py\n >>> source <dir_name>/bin/activate\n```", "```py\n >>> pip install <module>\n```", "```py\n >>> cd <project_name>\n```", "```py\n >>> pipenv install <module>\n```", "```py\n>>> pipenv run python3 <program_name>.py\n```", "```py\n $ pip install <package_name>\n```", "```py\n $ pip install <package_name>==1.2.2\n```", "```py\n $ pip install \"<package_name> >= 1.1\" \n```", "```py\n $ pip install <some_package>\n```", "```py\n $ pip install /local_files/SomePackage-1.2-py2.py3-none-any.whl\n```", "```py\n FooProject == 1.2 --hash=sha256:<hash_digest>\n```", "```py\n m1\n```", "```py\n m2<1.7\n```", "```py\n m3>=1.5, <=2.0\n```", "```py\n flask\n flask-pretty == 0.2.0\n flask-security <= 3.0\n flask-oauthlib >= 0.9.0, <= 0.9.4\n```", "```py\n git tag -a <tag_name> -m \"<tag_message>\"\n      # git tag -a v0.3 -m \"Changed the calculations\"\n```", "```py\n git+https://<vcs>/<dependency>@<tag_name>#egg=<dependency>\n      # git+https://gitlab/pump_laws@v0.3#egg=pump_laws\n```", "```py\n # math / science / graph stuff\n bokeh==0.11.1\n numpy==1.10.4\n pandas==0.17.1\n scipy==0.17.0\n openpyxl==2.3.3\n patsy==0.4.1\n matplotlib==1.5.1\n ggplot==0.6.8\n Theano==0.7.0\n seaborn==0.7.0\n scikit-learn==0.17\n\n pymldb==0.8.1\n pivottablejs==0.1.0\n\n # Progress bar\n tqdm==4.11.0\n\n # notebook and friends\n ipython==5.1.0\n jupyter==1.0.0\n jupyter-client==4.4.0\n jupyter-console==5.0.0\n jupyter-core==4.2.1\n\n # validator\n uWSGI==2.0.12\n pycrypto==2.6.1\n\n tornado==4.4.2\n\n ## The following requirements were added by pip freeze:\n backports-abc==0.5\n backports.shutil-get-terminal-size==1.0.0\n backports.ssl-match-hostname==3.5.0.1\n bleach==1.5.0\n\n ***further files truncated***\n```", "```py\n $ pip list --outdated\n      docutils (Current: 0.10 Latest: 0.11)\n      Sphinx (Current: 1.2.1 Latest: 1.2.2) \n```", "```py\n $ pip show sphinx\n      Name: Sphinx\n      Version: 1.7.2\n      Summary: Python documentation generator\n      Home-page: http://sphinx-doc.org/\n      Author: Georg Brandl\n      Author-email: georg@python.org\n      License: BSD\n      Location: /my/env/lib/python2.7/site-packages\n      Requires: docutils, snowballstemmer, alabaster, Pygments, \n                imagesize, Jinja2, babel, six\n```", "```py\n $ pip search peppercorn\n      pepperedform    - Helpers for using peppercorn with formprocess.\n      peppercorn      - A library for converting a token stream into [...]\n```", "```py\n $ tempdir = $(mktemp -d /tmp/archive_dir)\n```", "```py\n $ pip wheel -r requirements.txt --wheel-dir = $tempdir\n```", "```py\n $ cwd = `pwd`\n```", "```py\n $ (cd \"$tempdir\"; tar -cjvf \"$cwd/<archive>.tar.bz2\" *)\n```", "```py\n $ tempdir=$(mktemp -d /tmp/wheelhouse-XXXXX)\n```", "```py\n $ (cd $tempdir; tar -xvf /path/to/<archive>.tar.bz2)\n```", "```py\n $ pip install --force-reinstall --ignore-installed --upgrade --no-index --no-deps $tempdir/*\n```", "```py\n video/                  # Top-level package\n __init__.py         # Top-level initialization\n formats/            # Sub-package for file formats\n __init__.py     # Package-level initialization\n avi_in.py\n avi_out.py\n mpg2_in.py\n mpg2_out.py\n webm_in.py\n webm_out.py\n effects/             # Sub-package for video effects\n specialFX/       # Sub-package for special effects\n __init__.py\n sepia.py\n mosaic.py\n old_movie.py\n glass.py\n pencil.py\n tv.py\n transform/        # Sub-package for transform effects\n __init__.py\n flip.py\n skew.py\n rotate.py\n mirror.py\n wave.py\n broken_glass.py\n draw/              # Sub-package for draw effects\n __init__.py\n rectangle.py\n ellipse.py\n border.py\n line.py\n polygon.py\n```", "```py\n from . import mosaic\n      from .. import transform\n      from .. draw import rectangle\n```", "```py\n from distutils.core import setup\n      import py2exe\n      setup(console=['hello.py'])\n```", "```py\n cxfreeze <program>.py --target-dir=<directory>\n```", "```py\n      import sys\n      from cx_Freeze import setup, Executable\n\n      # Dependencies are automatically detected, but it might need fine tuning.\n      build_exe_options = {\"packages\": [\"os\"], \"excludes\": [\"tkinter\"]}\n\n      # GUI applications require a different base on Windows (the default is for \n      # console application).\n      base = None\n      if sys.platform == \"win32\":\n          base = \"Win32GUI\"\n\n      setup(  name = \"guifoo\",\n              version = \"0.1\",\n              description = \"My GUI application!\",\n              options = {\"build_exe\": build_exe_options},\n              executables = [Executable(\"guifoo.py\", base=base)])\n```", "```py\n pyinstaller <program>.py\n```", "```py\n from distutils.core import setup\n      from Cython.Build import cythonize\n\n      setup(\n          ext_modules = cythonize(\"helloworld.pyx\")\n      )\n```", "```py\n $ python setup.py build_ext --inplace\n```", "```py\n nuitka --recurse-all <program>.py\n```", "```py\n nuitka --module <module>.py\n```", "```py\n nuitka --module <package> --recurse-directory=<package>\n```", "```py\ninclude *.txt\nrecursive-include examples *.txt *.py\nprune examples/sample?/build\n```", "```py\n 2.1.0.dev1  # Development release\n      2.1.0a1     # Alpha Release\n      2.1.0b1     # Beta Release\n      2.1.0rc1    # Release Candidate\n      2.1.0       # Final Release\n      2.1.0.post1 # Post Release\n      2018.04     # Date based release\n      19          # Serial release\n```", "```py\n python setup.py bdist_wheel --universal\n```", "```py\n python setup.py bdist_wheel\n```", "```py\n python setup.py sdist bdist_wheel --universal\n```", "```py\n twine register dist/<project>.<version>.tar.gz\n twine register dist/<package_name>-<version>-\n      <language_version>-<abi_tag>-<platform_tag>.whl\n```", "```py\n twine upload dist/*\n```", "```py\n HTTPError: 403 Client Error: You are not allowed to \n                         edit 'xyz' package information\n```"]