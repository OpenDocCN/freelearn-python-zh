["```py\nclass MyAdminSite(admin.AdminSite):\n    …\n```", "```py\n    python3 manage.py startapp bookr_admin\n    ```", "```py\n    from django.contrib import admin\n    ```", "```py\n    class BookrAdmin(admin.AdminSite):\n    ```", "```py\n        site_header = \"Bookr Administration\"\n    ```", "```py\n    admin_site = BookrAdmin(name='bookr_admin')\n    ```", "```py\n    admin_site object from the admin module of the bookr_admin app. Then, we used the urls property of the object to map to the admin endpoint in our application as follows:\n\n    ```", "```py\n\n    In this case, the `urls` property of our `admin_site` object is being automatically populated by the `admin.AdminSite` base class provided by Django's `admin` module. Once complete, your `urls.py` file should look like this: [http://packt.live/3qjx46J](http://packt.live/3qjx46J).\n    ```", "```py\n    python manage.py runserver localhost:8000\n    ```", "```py\n    from django.contrib.auth.admin import User\n    ```", "```py\n    admin_site.register(User)\n    ```", "```py\n    from django.contrib import admin\n    from django.contrib.auth.admin import User\n    class BookrAdmin(admin.AdminSite):\n        site_header = \"Bookr Administration\"\n    admin_site = BookrAdmin(name='bookr_admin')\n    admin_site.register(User)\n    ```", "```py\n    from django.contrib import admin\n    class BookrAdmin(admin.AdminSite):\n        site_header = \"Bookr Administration\"\n    ```", "```py\n    from django.contrib.admin.apps import AdminConfig\n    class BookrAdminConfig(AdminConfig):\n        default_site = 'bookr_admin.admin.BookrAdmin'\n    ```", "```py\n    default_site = 'bookr_admin.admin.BookrAdmin'\n    ```", "```py\n    path('admin/', adminadmin_site.urls is a module, while admin.site is a Django internal property. Once the preceding steps are complete, let's reload our web server and check whether our admin site loads by visiting `http://localhost:8000/admin`. If the website that loads looks like the one shown here, we have our own custom admin app now being used for the admin interface:![Figure 10.5: Home page view of the custom Bookr Administration site\n    ](img/B15509_10_05.jpg)\n    ```", "```py\nclass MyAdminSite(admin.AdminSite):\n    site_header = \"My web application\"\n    site_title = \"My Django Web application\"\n    index_title = \"Administration Panel\"\n```", "```py\n{% extends \"admin/base_site.html\" %}\n{% block content %}\n  <!-- Template Content -->\n{% endblock %}\n```", "```py\n{% extends \"admin/base_site.html\" %}\n```", "```py\n    {% extends \"admin/base_site.html\" %}\n    {% block content %}\n    <p>You have been logged out from the Admin panel. </p>\n    <p><a href=\"{% url 'admin:index' %}\">Login Again</a> or   <a href=\"{{ site_url }}\">Go to Home Page</a></p>\n    {% endblock %}\n    ```", "```py\n    {% extends \"admin/base_site.html\" %}\n    ```", "```py\n    {% block content %}\n    …\n    {% endblock %}\n    ```", "```py\n    logout_template = 'admin/logout.html'\n    ```", "```py\n    python manage.py runserver localhost:8000\n    ```", "```py\nclass SysAdminSite(admin.AdminSite):\n    def system_health_dashboard(self, request):\n        # View function logic\n```", "```py\nrequest.current_app = self.name\n```", "```py\nclass SysAdminSite(admin.AdminSite):\n    def system_health_dashboard(self, request):\n        request.current_app = self.name\n        # View function logic\n```", "```py\ndef system_health_dashboard(self, request):\n    request.current_app = self.name\n    context = self.each_context(request)\n    # view function logic\n```", "```py\nclass SysAdminSite(admin.AdminSite):\n    def get_urls(self):\n        base_urls = super().get_urls(). # Get the existing set of URLs\n        # Define our URL patterns for custom views\n        urlpatterns = [path(\"health_dashboard/\"),\\\n                           (self.system_health_dashboard)]\n        # Return the updated mapping\n        return base_urls + urlpatterns. \n```", "```py\nurlpatterns = [self.admin_view\\\n               (path(\"health_dashboard/\"),\\\n               (self.system_health_dashboard))]\n```", "```py\n    from django.template.response import TemplateResponse\n    from django.urls import path\n    ```", "```py\n    def profile_view(self, request):\n    ```", "```py\n    request.current_app = self.name\n    ```", "```py\n    context = self.each_context(request)\n    ```", "```py\n    return TemplateResponse(request, \"admin/admin_profile.html\", \\\n                            context)\n    ```", "```py\n    def get_urls(self):\n    ```", "```py\n    urls = super().get_urls()\n    ```", "```py\n    url_patterns = [path(\"admin_profile\", self.profile_view)]\n    return urls + url_patterns\n    ```", "```py\n    {% extends \"admin/index.html\" %}\n    ```", "```py\n    {% block content %}\n    ```", "```py\n    <p>Welcome to your profile, {{ username }}</p>\n    <p>You can do the following operations</p>\n    <ul>\n        <li><a href=\"#\">Change E-Mail Address</a></li>\n        <li><a href=\"#\">Add Profile Picture</a></li>\n    </ul>\n    {% endblock %}\n    ```", "```py\nurl_patterns = [path(\"admin_profile\", \\\n                self.admin_view(self.profile_view)),]\n```", "```py\ndef each_context(self, request):\n        context = super().each_context(request)\n        context['username'] = request.user.username\n        return context\n```", "```py\ncontext = super().each_context(request)\n```", "```py\ncontext['username'] = request.user.username\n```"]