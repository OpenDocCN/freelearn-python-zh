["```py\n# widget_configuration_1.py\n#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk( )\nlabelfont = ('times', 30, 'bold')\nwidget = Label(root, text='Purple and red mess with your focus')\nwidget.config(bg='red', fg='purple')\nwidget.config(font=labelfont)\nwidget.config(bd=6)\nwidget.config(relief=RAISED)\nwidget.config(height=2, width=40) # lines high, characters wide\nwidget.pack(expand=YES, fill=BOTH)\nroot.mainloop( )\n\n```", "```py\n#button_focus_1.py\n#>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nbutn_widget_1 = Button(text='First, RAISED', padx=10, pady=10)\nbutn_widget_1.config(cursor='gumby')\nbutn_widget_1.config(bd=8, relief=RAISED)\nbutn_widget_1.config(bg='dark green', fg='white')\nbutn_widget_1.config(font=('helvetica', 20, 'underline italic'))\nbutn_widget_1.grid(row=1, column = 1)\nbutn_widget_2 = Button(text='Second, FLAT', padx=10, pady=10)\nbutn_widget_2.config(cursor='circle')\nbutn_widget_2.config(bd=8, relief=FLAT)\nbutn_widget_2.grid(row=1, column = 2)\nbutn_widget_3 = Button(text='Third, SUNKEN', padx=10, pady=10)\nbutn_widget_3.config(cursor='heart')\nbutn_widget_3.config(bd=8, relief=SUNKEN)\nbutn_widget_3.config(bg='dark blue', fg='white')\nbutn_widget_3.config(font=('helvetica', 30, 'underline italic'))\nbutn_widget_3.grid(row=1, column = 3)\nbutn_widget_4 = Button(text='Fourth, GROOVE', padx=10, pady=10)\nbutn_widget_4.config(cursor='spider')\nbutn_widget_4.config(bd=8, relief=GROOVE)\nbutn_widget_4.config(bg='red', fg='white')\nbutn_widget_4.config(font=('helvetica', 20, 'bold'))\nbutn_widget_4.grid(row=1, column = 4)\nbutn_widget_5 = Button(text='Fifth RIDGE', padx=10, pady=10)\nbutn_widget_5.config(cursor='pencil')\nbutn_widget_5.config(bd=8, relief=RIDGE)\nbutn_widget_5.config(bg='purple', fg='white')\nbutn_widget_5.grid(row=1, column = 5)\nroot.mainloop( )\n\n```", "```py\n# button_1.py\npush buttonwith validation#>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\ndef callback_1(): # The event processor function\nprint \"Someone pushed a button\"\n# The instantiation (i.e. creation of a specific instance or # realization) of a button.\nbutton_1= Button(root, command=callback_1).grid(row=1, column=0)\nroot.mainloop()\n\n```", "```py\n# entry_box_1.py\n#>>>>>>>>>>>>>>>\nfrom Tkinter import *\nfrom Dialog import Dialog\nroot = Tk()\nroot.title(\"Data Entry Box\")\nenter_data_1 = Entry(root, bg = \"pale green\") # Creates a text entry\n# field\nenter_data_1.grid(row=1, column=1)\nenter_data_1.insert(0, \"enter text here\") # Place text into the box.\ndef callback_origin():\n# Push button event handler.\ndata_inp_1 = enter_data_1.get() # Fetch text from the box.\n# Create a label and write the value of 'data_inp_1' to it.\n# ie. Validate by displaying the newly acquired data as a label on\n# the frame.\nlabel_2_far_right = Label(root, text=data_inp_1)\nlabel_2_far_right.grid(row=1, column=3)\n# This is button that triggers data transfer from entry box to named\n# variable 'data_inp_1'.\nbut1= Button(root, text=\"press to \\\ntransfer\",command=callback_origin).grid(row=5, column=0)\nroot.mainloop()\n\n```", "```py\n# button_message_1.py\n#>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nimport tkMessageBox\nroot = Tk()\nroot.title(\"Message Button\")\ndef callback_button():\ntkMessageBox.showinfo( \"Certificate of Button Pushery\", \\ \"Are glowing pixels a reality?\")\nmessage_button = Button(root,\nbd=6, # border width\nrelief = RAISED, # raised appearance # to button border\nbg = \"blue\", # normal background\n# color\nfg = \"green\", # normal foreground\n# (text) color\nfont = \"Arial 20 bold\",\ntext =\"Push me\", # text on button\nactivebackground = \"red\", # background when\n# button is clicked\nactiveforeground = \"yellow\", # text color when\n# clicked\ncommand = callback_button) # name of event\n# handler\nmessage_button.grid(row=0, column=0)\nroot.mainloop()\n\n```", "```py\n# button_interaction_1.py\n#>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"now what?\")\ndef callback_button_1():\nmessage_button_1.flash()\nmessage_button_2[\"bg\"]= \"grey\"\nmessage_button_2.flash()\nmessage_button_3.flash()\nmessage_button_3[\"bg\"]= \"pink\"\nmessage_button_1[\"relief\"] = SUNKEN\nmessage_button_1[\"text\"]= \"What have you done?\"\ndef callback_button_2():\nmessage_button_2[\"bg\"]= \"green\"\nmessage_button_3[\"bg\"]= \"cyan\"\nmessage_button_1[\"relief\"] = RAISED\nmessage_button_1[\"text\"]= \"Beware\"\ndef callback_button_3():\nmessage_button_1.destroy()\nmessage_button_2.destroy()\nmessage_button_3.destroy()\nroot.destroy()\nmessage_button_1 = Button(root,\nbd=6,\nrelief = RAISED, # Raised # appearance.\nbg = \"blue\" # Normal (without\n# focus) # background\n# color\nfg = \"green\", # Normal (without\n# focus) # foreground\n# (text) color\nfont = \"Arial 20 bold\",\ntext =\"Push me first\", # Text on button\nactivebackground = \"red\", # Background when\n# button has # focus\nactiveforeground = \"yellow\", #Text with focus\ncommand = callback_button_1) # event handler\nmessage_button_1.grid(row=0, column=0)\nmessage_button_2 = Button(root,\nbd=6,\nrelief = SUNKEN,\nbg = \"green\",\nfg = \"blue\",\nfont = \"Arial 20 bold\",\ntext =\"Now Push me\",\nactivebackground = \"purple\",\nactiveforeground = \"yellow\",\ncommand = callback_button_2)\nmessage_button_2.grid(row=1, column=0)\nset of three buttonsmodifying, one anothermessage_button_3 = Button(root,\nbd=6,\nrelief = SUNKEN,\nbg = \"grey\",\nfg = \"blue\",\nfont = \"Arial 20 bold\",\ntext =\"kill everything\",\nactivebackground = \"purple\",\nactiveforeground = \"yellow\",\ncommand = callback_button_3)\nmessage_button_3.grid(row=2, column=0)\nroot.mainloop()\n\n```", "```py\n# image_button_1.py\n#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Image Sized Buttons\")\ngo_image = PhotoImage(file = \"/constr/pics1/go_on.gif\")\nfireman_image = PhotoImage(file = \"/constr/pics1/fireman_1.gif\")\nwinged_lion_image = PhotoImage(file = \"/constr/pics1/winged_lion.gif\")\nearth_image = PhotoImage(file = \"/constr/pics1/earth.gif\")\ndef callback_go():\nprint \"Go has been pushed to no purpose\"\ndef callback_fireman():\nprint \"A little plastic fireman is wanted\"\ndef callback_lion():\nprint \"A winged lion rampant would look cool on a t-shirt\"\ndef callback_earth():\nprint \"Think of the children (and therefore also of their parents)\"\nbtn_go= Button(root, image = go_image, \\\ncommand=callback_go ).grid(row=0, column=0)\nbtn_firmean= Button(root, image = fireman_image, \\\ncommand=callback_fireman).grid(row=0, column=1)\nbtn_lion= Button(root, image = winged_lion_image, \\\ncommand=callback_lion ).grid(row=0, column=2)\nbtn_earth= Button(root, image = earth_image, \\\ncommand=callback_earth ).grid(row=0, column=3)\nroot.mainloop()\n\n```", "```py\n# button_array_1.py\n#>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Button Array\")\nusb = PhotoImage(file = \"/constr/pics1/Usbkey_D.gif\")\ngalaxy = PhotoImage(file = \"/constr/pics1/galaxy_D.gif\")\nalert = PhotoImage(file = \"/constr/pics1/alert_D.gif\")\nearth = PhotoImage(file = \"/constr/pics1/earth_D.gif\")\neye = PhotoImage(file = \"/constr/pics1/eye_D.gif\")\nrnd_2 = PhotoImage(file = \"/constr/pics1/random_2_D.gif\")\nrnd_3 = PhotoImage(file = \"/constr/pics1/random_3_D.gif\")\nsmile = PhotoImage(file = \"/constr/pics1/smile_D.gif\")\nvine = PhotoImage(file = \"/constr/pics1/vine_D.gif\")\nblueye = PhotoImage(file = \"/constr/pics1/blueeye_D.gif\")\nwinglion = PhotoImage(file = \"/constr/pics1/winglion_D.gif\")\ndef cb_usb(): print \"usb\"\ndef cb_galaxy(): print \"galaxy\"\ndef cb_alert(): print \"alert\"\ndef cb_earth(): print \"earth\"\ndef cb_eye(): print \"eye\"\ndef cb_rnd_2(): print \"random_2\"\ndef cb_rnd_3(): print \"random_3\"\ndef cb_smile(): print \"smile\"\nGIF format imagesplacing, on button arraysdef cb_vine(): print \"vine\"\ndef cb_blueeye(): print \"blueeye\"\ndef cb_winglion(): print \"winglion\"\nbutn_usb = Button(root, image = usb, command=cb_usb \\\n).grid(row=0, column=0)\nbutn_galaxy = Button(root, image = galaxy, command=cb_galaxy).grid(row=1, column=0)\nbutn_alert = Button(root, image = alert, command=cb_alert \\\n).grid(row=2, column=0)\nbutn_earth = Button(root, image = earth, command=cb_earth \\\n).grid(row=3, column=0)\nbutn_eye = Button(root, image = eye, command=cb_eye \\\n).grid(row=0, column=1, rowspan=2)\nbutn_rnd_2 = Button(root, image = rnd_2, command=cb_rnd_2 \\\n).grid(row=2, column=1)\nbutn_rnd_3 = Button(root, image = rnd_3, command=cb_rnd_3 \\\n).grid(row=3, column=1)\nbutn_smile = Button(root, image = smile, command=cb_smile \\\n).grid(row=0, column=2, columnspan=2)\nbutn_vine = Button(root, image = vine, command=cb_vine \\\n).grid(row=1, column=2, rowspan=2, columnspan=2)\nbutn_blueye = Button(root, image = blueye, \\\ncommand=cb_blueeye).grid(row=3, column=2)\nbutn_winglion= Button(root, image = winglion, command=cb_winglion \\\n).grid(row=3, column=3)\nroot.mainloop()\n\n```", "```py\n# dropdown_1.py\n# >>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Drop-down boxes for option selections.\")\nvar = StringVar(root)\nvar.set(\"drop down menu button\")\ndef grab_and_assign(event):\nchosen_option = var.get()\nlabel_chosen_variable= Label(root, text=chosen_option)\nlabel_chosen_variable.grid(row=1, column=2)\nprint chosen_option\ndrop_menu = OptionMenu(root, var, \"one\", \"two\", \"three\", \"four\", \\ \"meerkat\", \"12345\", \"6789\", command=grab_and_assign)\ndrop_menu.grid(row=0, column=0)\nlabel_left=Label(root, text=\"chosen variable= \")\nlabel_left.grid(row=1, column=0)\nroot.mainloop()\n\n```", "```py\n# listbox_simple_1.py\n#>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Listbox Data Input\")\ndef get_list(event):\n# Mouse button release callback\n# Read the listbox selection and put the result in an entry box\n# widget\nindex = listbox1.curselection()[0] # get selected line index\nseltext = listbox1.get(index) # get the line's text & # assign\n# to a variable\nenter_1.delete(0, 50) # delete previous text in\n# enter_1 otherwise the # entries\n# append to each other.\nenter_1.insert(0, seltext) # now display the selected # text\n# Create the listbox (note that size is in characters)\nlistboxitem, selecting fromlistbox1 = Listbox(root, width=50, height=6)\nlistbox1.grid(row=0, column=0)\n# Fill the listbox with data\nlistbox1.insert(END, \"a list entry\")\nfor item in [\"one has begun\", \"two is a shoe\", \"three like a knee\", \\\n\"four to the door\"]:\nlistbox1.insert(END, item)\n# use entry widget to display/edit selection\nenter_1 = Entry(root, width=50, bg='yellow')\nenter_1.insert(0, 'Click on an item in the listbox')\nenter_1.grid(row=1, column=0)\n# left mouse click on a list item to display selection\nlistbox1.bind('<ButtonRelease-1>', get_list)\nroot.mainloop()\n\n```", "```py\n# text_in_window_1.py\n#>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\nfrom Tkinter import *\nroot = Tk()\nroot.title(\"Text in a window\")\ntext_on_window = Text(root)\ntext_on_window.grid(row=0, column=0)\nfor i in range(20):\ntext_on_window.insert(END, \"Fill an area with some text: line %d\\n\"\\\n% i)\nroot.mainloop()\n\n```"]