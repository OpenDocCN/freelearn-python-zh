["```py\npath(settings.STATIC_URL, django.conf.urls.static)\n```", "```py\n    django-admin startproject business_site\n    ```", "```py\n    python3 manage.py startapp landing\n    ```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n{% load package_one package_two package_three %}\n```", "```py\n{% static landing/logo.png' %}\n```", "```py\n/static/landing/logo.png\n```", "```py\n<img src=\"img/logo.png' %}\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<link href=\"{% static 'path/to/file.css' %}\" \n            rel=\"stylesheet\">\n```", "```py\n<link href=\"/static/path/to/file.css\" \n            rel=\"stylesheet\">\n```", "```py\n<script src=\"img/file.js' %}\">\n    </script>\n```", "```py\n<script src=\"img/file.js\"></script>\n```", "```py\n<a href=\"{% static 'path/to/document.pdf' %}\">\n    Download PDF</a>\n```", "```py\n<a href=\"/static/path/to/document.pdf\">\n    Download PDF</a>\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<link href=\n    \"https://static.example.com/path/to/files.css\" \n    rel=\"stylesheet\">\n```", "```py\n<script src=\"\n    https://static.example.com/path/to/file.js\">\n    </script>\n```", "```py\n<a href=\"\n    https://static.example.com/path/to/document.pdf\">\n    Download PDF</a>\n```", "```py\ndef view_function(request):\n    context = {\"image_file\": \"logofile.png\"}\n    return render(request, \"example.html\", context)\n```", "```py\n<img src=\"img/{% static image_file %}\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<img src=\"img/{% static 'logo.png' as logo_path %}\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n<img src=\"img/{{ logo_path }}\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n    {% load static %}\n    ```", "```py\n    <title>Business Site</title>\n    ```", "```py\n    <h1>Welcome to my Business Site</h1>\n    ```", "```py\n    <img src=\"img/logo.png' %}\">\n    ```", "```py\n    <p>Welcome to the site for my Business. \n        For all your Business needs!</p>\n    ```", "```py\n    from django.views.generic import TemplateView\n    ```", "```py\n    from django.contrib import admin\n    ```", "```py\n    urlpatterns = [path('', TemplateView.as_view\\\n                            (template_name='index.html')),]\n    ```", "```py\n    TEMPLATES = \\\n    [{'BACKEND': 'django.template.backends.django.DjangoTemplates',\\\n      'DIRS': [],\\\n      'APP_DIRS': True,\\\n      'OPTIONS': {'context_processors': \\\n                  ['django.template.context_processors.debug',\\\n                   'django.template.context_processors.request',\\\n                   'django.contrib.auth.context_processors.auth',\\\n                   'django.contrib.messages.context_processors\\\n                   .messages',\\\n         ],\\\n      },\\\n    },]\n    ```", "```py\n    TEMPLATES = \\\n    [{'BACKEND': 'django.template.backends.django.DjangoTemplates',\\\n      os module in settings.py. To fix this, at the top of the settings.py file, just add this line:\n\n    ```", "```py\n\n    Save and close `settings.py`. It should look like this: [http://packt.live/3pz4rlo](http://packt.live/3pz4rlo). \n    ```", "```py\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n```", "```py\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'), \\\n                    '/Users/username/projects/company-static/']\n```", "```py\n    body {\n        font-family: Arial, sans-serif;\n        text-align: center;\n        background-color: #f0f0f0;\n    }\n    ```", "```py\n    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]\n    ```", "```py\n    <link rel=\"stylesheet\" href=\"{% static 'main.css' %}\">\n    ```", "```py\n    STATIC_ROOT = os.path.join(BASE_DIR, 'static_production_test')\n    ```", "```py\n    python3 manage.py collectstatic\n    ```", "```py\n    132 static files copied to \\\n      '/Users/ben/business_site/static_production_test'.\n    ```", "```py\nSTATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),\\\n                    ('images', os.path.join\\\n                               (BASE_DIR, 'static_images')),\\\n                    ('css', os.path.join(BASE_DIR, 'static_css'))]\n```", "```py\n{% static 'images/main.jpg' %}\n```", "```py\n    python3 manage.py findstatic\n    ```", "```py\n    usage: manage.py findstatic \n          [-h] [--first] [--version] [-v {0,1,2,3}]\n          [--settings SETTINGS] [--pythonpath PYTHONPATH]\n          [--traceback] [--no-color] [--force-color]\n          [--skip-checks]\n          staticfile [staticfile ...]\n    manage.py findstatic: error: Enter at least one label.\n    ```", "```py\n    python3 manage.py findstatic main.css\n    ```", "```py\n    Found 'main.css' here:\n      /Users/ben/business_site/static/main.css\n    ```", "```py\n    python3 manage.py findstatic logo.png\n    ```", "```py\n    No matching file found for 'logo.png'.\n    ```", "```py\n    python3 manage.py findstatic landing/logo.png\n    ```", "```py\n    Found 'landing/logo.png' here:\n      /Users/ben/business_site/landing/static/landing/logo.png\n    ```", "```py\n    python3 manage.py findstatic landing/logo.png missing-file.js main.css\n    ```", "```py\n    No matching file found for 'missing-file.js'.\n    Found 'landing/logo.png' here:\n      /Users/ben/business_site/landing/static/landing/logo.png\n    Found 'main.css' here:\n      /Users/ben/business_site/static/main.css\n    ```", "```py\n    python3 manage.py findstatic -v0 landing/logo.png missing-file.js main.css\n    ```", "```py\n    /Users/ben/business_site/landing/static/landing/logo.png\n    /Users/ben/business_site/static/main.css\n    ```", "```py\n    python3 manage.py findstatic -v2 landing/logo.png missing-file.js main.css\n    ```", "```py\n<img src=\"img/logo.png' %}\">\n```", "```py\n<img src=\"img/logo.f30ba08c60ba.png\">\n```", "```py\n<img src=\"img/logo.png\">\n```", "```py\n    STATICFILES_STORAGE = \\\n    'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'\n    ```", "```py\n    python3 manage.py collectstatic\n    ```", "```py\n    0 static files copied to '/Users/ben/business_site\n      /static_production_test', 132 unmodified, \n      28 post-processed.\n    ```", "```py\n    python3 manage.py collectstatic\n    ```", "```py\n    You have requested to collect static files at the \\\n      destination location as specified in your settings:\n        /Users/ben/business_site/static_production_test\n    This will overwrite existing files!\n    Are you sure you want to do this?\n    Type 'yes' to continue, or 'no' to cancel: yes\n    1 static file copied to '/Users/ben/business_site\\\n      /static_production_test', 131 unmodified, 28 post-processed.\n    ```", "```py\n    \"main.css\": \"main.df1234ac4e63.css\"\n    ```", "```py\nfrom django.conf import settings\nfrom django.contrib.staticfiles import storage\nclass CustomFilesStorage(storage.StaticFilesStorage):\n    def __init__(self):\n    \"\"\"\n    The class must be able to be instantiated \n    without any arguments.\n    Create custom settings in settings.py and read them instead.\n    \"\"\"\n    self.setting = settings.CUSTOM_STORAGE_SETTING\n```", "```py\n  def delete(self, name):\n    \"\"\"\n    Implement delete of the file from the remote service.\n    \"\"\"\n```", "```py\n    def exists(self, name):\n    \"\"\"\n    Return True if a file with name exists in the remote service.\n    \"\"\"\n```", "```py\n    def listdir(self, path):\n    \"\"\"\n    List a directory in the remote service. Return should \n    be a 2-tuple of lists, the first a list of directories, \n    the second a list of files.\n    \"\"\"\n```", "```py\nreturn (['directory1', 'directory2'], \\\n        ['code.py', 'document.txt', 'image.jpg'])\n```", "```py\n    def size(self, name):\n    \"\"\"\n    Return the size in bytes of the file with name.\n    \"\"\"\n```", "```py\n  def url(self, name):\n  \"\"\"\n  Return the URL where the file of with name can be \n  access on the remote service. For example, this \n  might be URL of the file after it has been uploaded \n  to a specific remote host with a specific domain.\n  \"\"\"\n```", "```py\n  def _open(self, name, mode='rb'):\n  \"\"\"\n  Return a File-like object pointing to file with \n  name. For example, this could be a URL handle for \n  a remote file.\n  \"\"\"\n```", "```py\n    def _save(self, name, content):\n    \"\"\"\n    Write the content for a file with name. In this \n    method you might upload the content to a \n    remote service.\n    \"\"\"\n```", "```py\n    .navbar-brand > img {\n      height: 60px;\n    }\n    ```", "```py\n    body {\n      font-family: 'Source Sans Pro', sans-serif;\n        background-color: #e6efe8\n      color: #393939;\n    }\n    h1, h2, h3, h4, h5, h6 {\n      font-family: 'Libre Baskerville', serif;\n    }\n    ```", "```py\n    <link rel=\"stylesheet\" \n      href=\"https://fonts.googleapis.com/css?family\n        =Libre+Baskerville|Source+Sans+Pro&display=swap\">\n    ```"]