["```py\nsudo apt-get update\nsudo apt-get upgrade\n```", "```py\nsudo apt-get install mosquitto -y\n```", "```py\nsudo apt-get install mosquitto-clients -y\n```", "```py\nsudo nano etc/mosquitto/mosquitto.conf\n```", "```py\ninclude_dir/etc/mosquitto/conf.d\n```", "```py\nallow_anonymous false\n\npassword_file /etc/mosquitto/pwfile\n\nlistener 1883\n```", "```py\nimport time\nimport paho.mqtt.client as mqtt\nimport RPi.gpio as gpio\npir = 23\ngpio.setmode(gpio.BCM)\ngpio.setup(pir, gpio.IN)\nclient = mqtt.Client()\nbroker=\"broker.hivemq.com\"\nport = 1883\npub_topic = \"IntruderDetector_Home\"\ndef SendData():\n  client.publish(pub_topic,\"WARNING : SOMEONE DETECTED AT YOUR PLACE\")\n\ndef on_connect(client, userdata, flag,rc):\n  print(\"connection returned\" + str(rc))\n  SendData()\nwhile True:\n  client.connect(broker,port)\n  client.on_connect = on_connect\n  if gpio.output(pir) == gpio.HIGH :\n    SendData()\n  client.loop_forever()\n\n```", "```py\nimport paho.mqtt.client as mqtt\n```", "```py\nclient = mqtt.Client()\n```", "```py\nbroker=\"broker.hivemq.com\"\n```", "```py\nport = 1883\n```", "```py\npub_topic = \"IntuderDetector_Home\"\n```", "```py\ndef SendData():\n    client.publish(pub.topic, \"WARNING : SOMEONE DETECTED AT YOUR PLACE\")\n```", "```py\ndef on_message(client, userdata, message):\n\n  print('message is : ')\n  print(str(message.payload))\n\n```", "```py\n def on_connect(client, userdata, flag,rc):\n\n     print(\"connection returned\" + str(rc))  \n     SendData()\n```", "```py\nclient.connect(broker,port)\n```", "```py\nclient.on_connect = on_connect \n```", "```py\n    if gpio.output(pir) == HIGH :\n        sendData()\n```", "```py\nclient.loop_forever()\n```", "```py\nimport time\nimport paho.mqtt.client as paho\nimport RPi.GPIO as GPIO\nGPIO.setmode(GPIO.BCM)\nGPIO.setup(14,GPIO.OUT)\nbroker=\"broker.hivemq.com\"\nsub_topic = light/control\nclient = paho.Client()\ndef on_message(client, userdata, message):\n    print('message is : ')\n    print(str(message.payload))\n    data = str(message.payload)\n    if data == \"on\":\n        GPIO.output(3,GPIO.HIGH)\n    elif data == \"off\":\n        GPIO.output(3,GPIO.LOW)\n\ndef on_connect(client,userdata, flag, rc):\n    print(\"connection returned\" + str(rc))\n    client.subscribe(sub_topic)\nclient.connect(broker,port)\nclient.on_connect = on_connect\nclient.on_message=on_message\nclient.loop_forever()\n```", "```py\ndef on_message(client, userdata, message):\n\n       print('message is : ')\n       print(str(message.payload))\n       data = str(message.payload)\n\n       if data == \"on\":\n           GPIO.output(3,GPIO.HIGH)\n\n       elif data == \"off\":\n           GPIO.output(3,GPIO.LOW)\n```", "```py\ndef on_connect(client,userdata, flag, rc):\n    print(\"connection returned\" + str(rc))\n    client.subscribe(sub_topic)\n```", "```py\nclient.on_message=on_message\n```"]