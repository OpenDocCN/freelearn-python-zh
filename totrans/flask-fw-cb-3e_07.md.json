["```py\nimport json\nfrom flask.views import MethodView\nclass ProductView(MethodView):\n    def get(self, id=None, page=1):\n        if not id:\n            products = Product.query.paginate(page,\n              10).items\n            res = {}\n            for product in products:\n                res[product.id] = {\n                    'name': product.name,\n                    'price': product.price,\n                    'category': product.category.name\n                }\n        else:\n            product =\n              Product.query.filter_by(id=id).first()\n            if not product:\n                abort(404)\n                res = json.dumps({\n                    'name': product.name,\n                    'price': product.price,\n                    'category': product.category.name\n                })\n        return res\n```", "```py\ndef post(self):\n    # Create a new product.\n    # Return the ID/object of the newly created product.\n    return\ndef put(self, id):\n    # Update the product corresponding provided id.\n    # Return the JSON corresponding updated product.\n    return\ndef delete(self, id):\n    # Delete the product corresponding provided id.\n    # Return success or error message.\n    return\n```", "```py\nproduct_view =  ProductView.as_view('product_view')\napp.add_url_rule('/products/', view_func=product_view,\n    methods=['GET', 'POST'])\napp.add_url_rule('/products/<int:id>',\n    view_func=product_view,\n    methods=['GET', 'PUT', 'DELETE'])\n```", "```py\n$ pip install flask-restful\n```", "```py\nfrom flask_restful import Api\napi = Api(app)\n```", "```py\nfrom flask_restful import Resource\nfrom my_app import api\nclass ProductApi(Resource):\n    def get(self, id=None):\n        # Return product data\n        return 'This is a GET response'\n    def post(self):\n        # Create a new product\n        return 'This is a POST response'\n    def put(self, id):\n        # Update the product with given id\n        return 'This is a PUT response'\n    def delete(self, id):\n        # Delete the product with given id\n        return 'This is a DELETE response'\n```", "```py\napi.add_resource(\n    ProductApi,\n    '/api/product',\n    '/api/product/<int:id>'\n)\n```", "```py\n>>> import requests\n>>> res = requests.get('http://127.0.0.1:5000/api/product')\n>>> res.json()\n'This is a GET response'\n>>> res = requests.post('http://127.0.0.1:5000/api/product')\n>>> res.json()\n'This is a POST response'\n>>> res = requests.put('http://127.0.0.1:5000/api/product/1')\n>>> res.json()\n'This is a PUT response'\n>>> res = requests.delete('http://127.0.0.1:5000/api/product/1')\n>>> res.json()\n'This is a DELETE response'\n```", "```py\nimport json\nfrom flask_restful import Resource, reqparse\nparser = reqparse.RequestParser()\nparser.add_argument('name', type=str)\nparser.add_argument('price', type=float)\nparser.add_argument('category', type=dict)\n```", "```py\nclass ProductApi(Resource):\n    def get(self, id=None, page=1):\n        if not id:\n            products = Product.query.paginate(page=page,\n              per_page=10).items\n        else:\n            products = [Product.query.get(id)]\n        if not products:\n            abort(404)\n        res = {}\n        for product in products:\n            res[product.id] = {\n                'name': product.name,\n                'price': product.price,\n                'category': product.category.name\n            }\n        return json.dumps(res)\n```", "```py\n    def post(self):\n        args = parser.parse_args()\n        name = args['name']\n        price = args['price']\n        categ_name = args['category']['name']\n        category =\n          Category.query.filter_by(name=categ_name).first()\n        if not category:\n            category = Category(categ_name)\n        product = Product(name, price, category)\n        db.session.add(product)\n        db.session.commit()\n        res = {}\n        res[product.id] = {\n            'name': product.name,\n            'price': product.price,\n            'category': product.category.name,\n        }\n        return json.dumps(res)\n```", "```py\n    def put(self, id):\n        args = parser.parse_args()\n        name = args['name']\n        price = args['price']\n        categ_name = args['category']['name']\n        category =\n          Category.query.filter_by(name=categ_name).first()\n        Product.query.filter_by(id=id).update({\n            'name': name,\n            'price': price,\n            'category_id': category.id,\n        })\n        db.session.commit()\n        product = Product.query.get_or_404(id)\n        res = {}\n        res[product.id] = {\n            'name': product.name,\n            'price': product.price,\n            'category': product.category.name,\n        }\n        return json.dumps(res)\n```", "```py\n    def delete(self, id):\n        product = Product.query.filter_by(id=id)\n        product.delete()\n        db.session.commit()\n        return json.dumps({'response': 'Success'})\n```", "```py\napi.add_resource(\n    ProductApi,\n    '/api/product',\n    '/api/product/<int:id>',\n    '/api/product/<int:id>/<int:page>'\n)\n```", "```py\n>>> import requests\n>>> import json\n>>> res = requests.get('http://127.0.0.1:5000/api/product')\n>>> res.json()\n{'message': 'The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.'}\n```", "```py\n>>> d = {'name': u'iPhone', 'price': 549.00, 'category':\n...    {'name':'Phones'}}\n>>> res = requests.post('http://127.0.0.1:5000/api/product', data=json.\n...    dumps(d), headers={'Content-Type': 'application/json'})\n>>> res.json()\n'{\"1\": {\"name\": \"iPhone\", \"price\": 549.0, \"category\": \"Phones\"}}'\n```", "```py\n>>> res = requests.get('http://127.0.0.1:5000/api/product')\n>>> res.json()\n'{\"1\": {\"name\": \"iPhone\", \"price\": 549.0, \"category\": \"Phones\"}}'\n```"]