["```py\nsudo apt-get update\nsudo apt-get upgrade\n```", "```py\nsudo rpi-update\n```", "```py\nsudo reboot\n```", "```py\nsudo apt-get install build-essential git cmake pkg-config\n```", "```py\nsudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev\nsudo apt-get install libxvidcore-dev libx264-dev\n```", "```py\nsudo apt-get install libjpeg8-dev \n```", "```py\nsudo apt-get install libtiff5-dev \n```", "```py\nsudo apt-get install libjasper-dev\n```", "```py\nsudo apt-get install libpng12-dev\n```", "```py\nsudo apt-get install libgtk2.0-dev\n```", "```py\nsudo apt-get install libatlas-base-dev gfortran\n```", "```py\nsudo apt-get install python2.7-dev python3-dev\n```", "```py\ncd ~\nwget -O opencv.zip https://github.com/Itseez/opencv/archive/3.4.0.zip\n```", "```py\nunzip opencv.zip\n```", "```py\nwget -O opencv_contrib.zip https://github.com/Itseez/opencv_contrib/archive/3.4.0.zip\n```", "```py\nunzip opencv_contrib.zip\n```", "```py\nwget https://bootstrap.pypa.io/get-pip.py\n```", "```py\nsudo python get-pip.py\nsudo pip install virtualenv virtualenvwrapper\n```", "```py\nsudo rm -rf ~/.cache/pip\n```", "```py\nexport WORKON_HOME=$HOME/.virtualenvs\nsource /usr/local/bin/virtualenvwrapper.sh\n```", "```py\nsource ~/.profile\nmkvirtualenv cv\nsource ~/.profile\nworkon cv\npip install numpy\n```", "```py\nworkon cv\ncd ~/opencv-3.4.0/\nmkdir build\ncd build\ncmake -D CMAKE_BUILD_TYPE=RELEASE \\\n    -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_C_EXAMPLES=ON \\\n    -D INSTALL_PYTHON_EXAMPLES=ON \\\n    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib-3.4i.0/modules \\\n    -D BUILD_EXAMPLES=ON ..\n```", "```py\nmake -j4\n```", "```py\nsudo make install\nsudo ldconfig\n```", "```py\nls -l /usr/local/lib/python2.7/site-packages/\n```", "```py\nworkon cv\npython\n```", "```py\nimport cv2\nimport numpy as np\ncap = cv2.VideoCapture(0)\n\nwhile True:\n        _, image = cap.read()\n        cv2.imshow(\"Frame\", image)\n        hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n\n        lowerGreen = np.array([80,50,50])\n        upperGreen = np.array([130,255,255])\n\n        mask = cv2.inRange(hsv, lowerGreen, upperGreen)\n        res = cv2.bitwise_and(image, image, mask=mask)\n        cv2.imshow('mask',mask)\n        cv2.imshow('result',res)\n        key = cv2.waitKey(1) & 0xFF\n\n        if key == ord('q'):\n                break\ncv2.destroyAllWindows()\ncap.release()\n```", "```py\nimport numpy as np\n```", "```py\ncap = cv2.VideoCapture(0)\n```", "```py\n_, image = cap.read()\n```", "```py\n        cv2.imshow(\"Frame\", image)\n```", "```py\nhsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)\n```", "```py\n        lowerGreen = np.array([40,50,50])\n        upperGreen = np.array([80,255,255])\n```", "```py\nmask = cv2.inRange(hsv, lowerGreen, upperGreen)\n```", "```py\nres = cv2.bitwise_and(image, image, mask=mask)\n```", "```py\ncv2.imshow('mask',mask)\n```", "```py\n        cv2.imshow('result',res)\n```", "```py\n        key = cv2.waitKey(1) & 0xFF\n```", "```py\n        if key == ord('q'):\n                break\n```", "```py\ncv2.destroyAllWindows()\n```", "```py\ncap.release()\n```"]