["```py\nclass Album:\n@cherrypy.expose\ndef index(self, id=None):\n# returns all albums as HTML or the one\n# requested by the id parameter if provided\n@cherrypy.expose\ndef edit(self, id=None):\n# returns an HTML page with a form to perform\n# an action on a resource (create, update, delete)\n@cherrypy.expose\ndef create(self, title):\n# create an album with a title\n# returns an HTML page stating the success\n@cherrypy.expose\ndef update(self, id, title):\n# update an album with a title\n# returns an HTML page stating the success\n@cherrypy.expose\ndef delete(self, id):\n# delete the album with the given id\n# returns an HTML page stating the success\n\n```", "```py\nclass Album:\n@cherrypy.expose\ndef index(self):\n# returns all albums as HTML\n@cherrypy.expose\ndef default(self, id):\n# returns the album specified or raise a NotFound\n@cherrypy.expose\ndef edit(self, id=None):\n# returns an HTML page with a form to perform\n# an action on a resource (create, update, delete)\nclass AlbumManager:\n@cherrypy.expose\ndef create(self, title):\n# create an album with a title\n# returns an XML/JSon/XHTML document\n# representing the resource\n@cherrypy.expose\ndef update(self, id, title):\n# update an album with a title\n# returns an XML/JSon/XHTML document\n# representing the resource\n@cherrypy.expose\ndef delete(self, id):\n# delete the album with the given id\n# returns nothing\n\n```", "```py\n    urn:isbn:0-201-71088-9\n    urn:uuid:13e8cf26-2a25-11db-8693-000ae4ea7d46\n\n    ```", "```py\nimport cherrypy\nfrom cherrypy.lib.cptools import accept\nfrom models import Photoblog, Album\nfrom lib.config import conf\nfrom lib.tools import find_acceptable_within\nclass AlbumRESTService(object):\nexposed = True\ndef GET(self, album_id):\nbest = accept(['application/xml', 'application/atom+xml',\n'text/json', 'text/x-json'])\nalbum = Album.fetch(album_id)\nif not album:\nraise cherrypy.NotFound()\nif best in ['application/xml','application/atom+xml']:\ncherrypy.response.headers['Content-Type'] =\n'application/atom+xml'\nentry = album.to_atom_entry()\nreturn entry.xml()\nif best in ['application/json', 'text/x-json', 'text/json']:\ncherrypy.response.headers['Content-Type'] =\n'application/json'\nreturn album.to_json()\nraise cherrypy.HTTPError(400, 'Bad Request')\ndef POST(self, title, segment, author, description, content,\nblog_id):\nphotoblog = Photoblog.fetch(blog_id)\nif not photoblog:\nraise cherrypy.NotFound()\nalbum = Album()\nalbum.create(photoblog, title, segment, author, description,\ncontent)\ncherrypy.response.status = '201 Created'\ncherrypy.response.headers['Location'] = '%s/album/%d' %\n(conf.app.base_url, album.ID)\ndef PUT(self, album_id, title, segment, author, description,\ncontent):\nalbum = Album.fetch(album_id)\nif not album:\nraise cherrypy.NotFound()\nalbum.update(title, segment, author, description, content)\ndef DELETE(self, album_id):\nalbum = Album.fetch(album_id)\nif album:\nalbum.delete()\ncherrypy.response.status = '204 No Content'\n\n```", "```py\nPOST /album HTTP/1.1\nHost: localhost:8080\nContent-Length: 77\nContent-Type: application/x-www-form-urlencoded\nblog_id=1&description=Family&author=sylvain&title=My+family&content=&\nsegment=\n\n```", "```py\nHTTP/1.1 201 Created\nContent-Length: 0\nLocation: http://localhost:8080/album/12\nAllow: DELETE, GET, HEAD, POST, PUT\nDate: Sun, 21 Jan 2007 16:30:43 GMT\nServer: CherryPy/3.0.0\nConnection: close\n\n```", "```py\nPUT /album/12 HTTP/1.1\nHost: localhost:8080\nContent-Length: 69\nContent-Type: application/x-www-form-urlencoded\ndescription=Family&author=sylvain&title=Your+family&content=&segment=\n\n```", "```py\nHTTP/1.1 200 OK\nDate: Sun, 21 Jan 2007 16:37:12 GMT\nContent-Length: 0\nAllow: DELETE, GET, HEAD, POST, PUT\nServer: CherryPy/3.0.0\nConnection: close\n\n```", "```py\nimport cherrypy\nfrom cherrypy.lib.cptools import accept\nfrom models import Photoblog\nfrom lib import conf\nfrom lib.tools import find_acceptable_within\nclass Resource(object):\ndef handle_GET(self, obj_id):\nbest = accept(['application/xml', 'application/atom+xml',\n'text/json', 'text/x-json',\n'application/json'])\nobj = self.__source_class.fetch(obj_id)\nif not obj:\nraise cherrypy.NotFound()\nif best in ['application/xml', 'application/atom+xml']:\ncherrypy.response.headers['Content-Type'] = 'application/atom+xml'\nentry = obj.to_atom_entry()\nreturn entry.xml()\nif best in ['text/json', 'text/x-json', 'application/json']:\ncherrypy.response.headers['Content-Type'] =\n'application/json'\nreturn obj.to_json()\nraise cherrypy.HTTPError(400, 'Bad Request')\ndef handle_POST(self container_cls, container_id,\nlocation_scheme, *args, **kwargs):\ncontainer = container_cls.fetch(container_id)\nif not container:\nraise cherrypy.NotFound()\nobj = self.__source_class()\nobj.create(container, *args, **kwargs)\ncherrypy.response.status = '201 Created'\ncherrypy.response.headers['Location'] = location_scheme %\n(conf.app.base_url, obj.ID)\ndef handle_PUT(cls, source_cls, obj_id, *args, **kwargs):\nobj = self.__source_class.fetch(obj_id)\nif not obj:\nraise cherrypy.NotFound()\nobj.update(obj, *args, **kwargs)\ndef handle_DELETE(cls, source_cls, obj_id):\nobj = self.__source_class.fetch(obj_id)\nif obj:\nobj.delete(obj)\ncherrypy.response.status = '204 No Content'\n\n```", "```py\nfrom models import Photoblog, Album\nfrom _resource import Resource\nclass AlbumRESTService(Resource):\nexposed = True\n# The entity class that will be used by the Resource class\n_source_class = Album\ndef GET(self, album_id):\nreturn self.handle_GET(album_id)\ndef POST(self, title, segment, author, description, content,\nblog_id):\nself.handle_POST(Photoblog, blog_id, '%s/album/%d',\ntitle, segment, author, description,content)\ndef PUT(self, album_id, title, segment, author, description,\ncontent):\nself.handle_PUT(album_id,\ntitle, segment, author, description, content)\ndef DELETE(self, album_id):\nself.handle_DELETE(album_id)\n\n```", "```py\nPOST http://somehost.net/service/rest/album/\nGET http://somehost.net/service/rest/album/12\nPUT http://somehost.net/service/rest/album/12\nDELETE http://somehost.net/service/rest/album/12\n\n```", "```py\nrest_service = Service()\nrest_service.album = AlbumRESTService()\nconf = {'/': {'request.dispatch': cherrypy.dispatch.MethodDispatcher()}}\ncherrypy.tree.mount(rest_service, '/service/rest', config=conf)\n\n```", "```py\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<feed >\n<title>Photoblog feed</title>\n<published>2006-08-13T10:57:18Z</published>\n<updated>2006-08-13T11:18:01Z</updated>\n<link rel=\"self\" href=\"http://host/blog/feed/album/\" type=\"application/atom+xml\" />\n<author>\n<name>Sylvain Hellegouarch</name>\n</author>\n<id>urn:uuid:13e8cf26-2a25-11db-8693-000ae4ea7d46</id>\n<entry>\n<title>This is my family album</title>\n<id>urn:uuid:25cd2014-2ab3-11db-902d-000ae4ea7d46</id>\n<link rel=\"self\" href=\"http://host/blog/feed/album/12\"\ntype=\"application/atom+xml\" />\n<link rel=\"alternate\" href=\"http://host/blog/album/12\"\ntype=\"text/html\" />\n<updated>2006-08-13T11:18:01Z</updated>\n<content type=\"text\">Some content</content>\n</entry>\n</feed>\n\n```", "```py\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<feed >\n<id>urn:uuid:8ed4ae87-2ac9-11db-b2c4-000ae4ea7d46</id>\n<title>Film of my holiday</title>\n<updated>2006-08-13T13:50:49Z</updated>\n<author>\n<name>Sylvain Hellegouarch</name>\n</author>\n<entry>\nAPPAtom XML-document<id>urn:uuid:41548439-c12d-48b5-baec-a72b1bf8576f</id>\n<published>2006-08-13T13:45:38Z</published>\n<updated>2006-08-13T13:50:49Z</updated>\n<title>At the beach</title>\n<link rel=\"self\" href=\"http://host/feed/photo/at-the-beach\"\ntype=\"application/atom+xml\"/>\n<link rel=\"alternate\" href=\"http://host/photo/at-the-beach\"\ntype=\"text/html\" />\n<content src=\"img/IMAGE001.png\"\ntype=\"image/png\" />\n</entry>\n</feed>\n\n```", "```py\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<service  xmlns:atom=\n\"http://www.w3.org/2005/Atom\">\n<workspace>\n<collection href=\"http://host/service/atompub/album/\">\n<atom:title>Friends Albums</atom:title>\n<categories fixed=\"yes\">\n<atom:category term=\"friends\" />\n</categories>\n</collection>\n<collection href=\"http://host/service/atompub/film/\">\n<atom:title>Films</atom:title>\n<accept>image/png,image/jpeg</accept>\n</collection>\n</workspace>\n</service>\n\n```"]