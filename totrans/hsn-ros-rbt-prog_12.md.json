["```py\n$ cp -R ~/Hands-On-ROS-for-Robotics-Programming/Chapter9_GoPiGo_SLAM ~/catkin_ws/src/\n```", "```py\n$ cd ~/catkin_ws\n$ catkin_make\n```", "```py\n$ rospack list | grep gopigo3\n$ rospack list | grep ydlidar\n```", "```py\n$ nano ~./bashrc\n ...\n export ROS_HOSTNAME=rosbot.local\n export ROS_MASTER_URI=http://gopigo3.local:11311\n```", "```py\n$ echo $ROS_MASTER_URI\n http://gopigo3.local:11311\n```", "```py\n$ ip addr # or 'ifconfig' instead\n 192.168.1.51\n```", "```py\nexport ROS_MASTER_URI=http://192.168.1.51:11311\n```", "```py\n$ echo $ROS_MASTER_URI\n http://192.168.1.51:11311\n```", "```py\n$ cd catkin_ws/src\n$ git clone https://github.com/EAIBOT/ydlidar\n$ cd ..\n$ catkin_make\n```", "```py\n$ sudo chown ubuntu:dialout /dev/ttyUSB0\n```", "```py\n$ roscd ydlidar/startup\n$ sudo chmod 777 ./*\n$ sudo sh initenv.sh\n```", "```py\nT1 $ roslaunch ydlidar lidar.launch \n```", "```py\nT2 $ rosrun ydlidar ydlidar_client\n```", "```py\nT3 $ roslaunch ydlidar display_scan.launch\n```", "```py\n$ cd catkin_ws/src\n$ git clone https://github.com/EAIBOT/ydlidar\n$ cd ..\n$ catkin_make\n```", "```py\n$ ls -la /dev | grep USB\n crw-rw----  1 root dialout 188,   0 ene 28  2018 ttyUSB0\n```", "```py\n$ sudo chown pi:dialout /dev/ttyUSB0\n```", "```py\n$ roscd ydlidar/startup\n$ sudo chmod 777 ./*\n$ sudo sh initenv.sh\n```", "```py\n$ cd /dev\n$ sudo ln -s ttyUSB0 ydlidar\n```", "```py\nr1 $ roslaunch ydlidar lidar.launch\nr2 $ rosrun ydlidar ydlidar_client\n```", "```py\nr1 $ roslaunch ydlidar lidar_view.launch\nr2 $ roslaunch mygopigo gopigo3.launch\nr3 $ rosrun key_teleop key_teleop.py /key_vel:=/cmd_vel\nr4 $ rqt_graph\n```", "```py\nr1 $ roslaunch mygopigo gopigo3.launch\nr2 $ roslaunch ydlidar ydlidar.launch\n```", "```py\n<launch>\n  <include file=\"$(find mygopigo)/launch/gopigo3.launch\" />\n  <node name=\"ydlidar_node\" pkg=\"ydlidar\" type=\"ydlidar_node\" output=\"screen\" respawn=\"false\" >\n     <param name=\"port\" type=\"string\" value=\"/dev/ydlidar\"/>\n     <param name=\"baudrate\" type=\"int\" value=\"115200\"/>\n     <param name=\"frame_id\" type=\"string\" value=\"laser_frame\"/>\n      ...\n     <param name=\"angle_min\" type=\"double\" value=\"-180\" />\n     <param name=\"angle_max\" type=\"double\" value=\"180\" />\n     <param name=\"range_min\" type=\"double\" value=\"0.1\" />\n     <param name=\"range_max\" type=\"double\" value=\"16.0\" />\n  </node>\n  <node pkg=\"tf\" type=\"static_transform_publisher\" name=\"base_link_to_laser4\"\n   args=\"0.2245 0.0 0.2 0.0 0.0 0.0 /base_footprint /laser_frame 40\" />\n</launch>\n\n```", "```py\nr1 $ roslaunch ydlidar gopigo3_ydlidar.launch\n```", "```py\nr2 $ rosrun ydlidar ydlidar_client\n```", "```py\n[YDLIDAR INFO]: I heard a laser scan laser_frame[720]:\n[YDLIDAR INFO]: angle_range : [-180.000005, 180.000005]\n[YDLIDAR INFO]: angle-distance : [-4.500002, 0.000000, 351]\n[YDLIDAR INFO]: angle-distance : [-4.000005, 0.750000, 352]\n[YDLIDAR INFO]: angle-distance : [-3.500007, 0.765000, 353]\n[YDLIDAR INFO]: angle-distance : [-3.000010, 0.782000, 354]\n[YDLIDAR INFO]: angle-distance : [-2.500013, 0.000000, 355]\n[YDLIDAR INFO]: angle-distance : [-2.000002, 0.799000, 356]\n[YDLIDAR INFO]: angle-distance : [-1.500005, 0.816000, 357]\n[YDLIDAR INFO]: angle-distance : [-1.000008, 0.834000, 358]\n[YDLIDAR INFO]: angle-distance : [-0.500011, 0.000000, 359]\n[YDLIDAR INFO]: angle-distance : [0.000000, 0.853000, 360]\n```", "```py\nr1 $ roslaunch ydlidar gopigo3_ydlidar.launch\n```", "```py\nT1 $ rostopic echo /scan -n1\n header: \n seq: 2118\n stamp: \n secs: 1570384635\n nsecs: 691668000\n frame_id: \"laser_frame\"\n angle_min: -3.14159274101\n angle_max: 3.14159274101\n angle_increment: 0.00872664619237\n time_increment: 154166.671875\n scan_time: 111000000.0\n range_min: 0.10000000149\n range_max: 16.0\n ranges: [array of 720 items]\n intensities: [array of 720 items]\n```", "```py\n $ rostopic info scan\n Type: sensor_msgs/LaserScan\n```", "```py\nT1 $ rosmsg info sensor_msgs/LaserScan\n std_msgs/Header header\n uint32 seq\n time stamp\n string frame_id\n float32 angle_min\n float32 angle_max\n float32 angle_increment\n float32 time_increment\n float32 scan_time\n float32 range_min\n float32 range_max\n float32[] ranges\n float32[] intensities\n```", "```py\nT1 $ roslaunch ydlidar display.launch\nT2 $ rosrun key_teleop key_teleop.py /key_vel:=/cmd_vel\n\n```", "```py\n#! /usr/bin/env python\nimport rospy\nfrom sensor_msgs.msg import LaserScan\n\ndef callback(msg):\n print \"\\nNumber of points =\", len(msg.ranges)\n print \"------------------\"\n print \"Range (m) at 0 deg = \", round(msg.ranges[360] , 1)\n print \"Range (m) at 90 deg = \", round(msg.ranges[540] , 1)\n print \"Range (m) at 180 deg = \", round(msg.ranges[719] , 1)\n print \"Range (m) at -90 deg = \", round(msg.ranges[180] , 1), \" or 270 deg\"\n\nrospy.init_node('scan_values')\nsub = rospy.Subscriber('/scan', LaserScan, callback)\nrospy.spin()\n```", "```py\nT3 $ rosrun ydlidar scan.py\n```", "```py\nr1 $ roslaunch ydlidar gopigo3_ydlidar.launch\n```", "```py\nT1 $ roslaunch gopigo3_navigation gopigo3_slam.launch\n```", "```py\nT3 $ rosrun key_teleop key_teleop.py /key_vel:=/cmd_vel\n```", "```py\nT4 $ rosrun map_server map_saver -f ~/catkin_ws/test_map\n```", "```py\nr1 $ roslaunch ydlidar gopigo3_ydlidar.launch\n```", "```py\nT1 $ roslaunch gopigo3_navigation amcl.launch map_file:=/home/ubuntu/catkin_ws/test_map.yaml\n```"]