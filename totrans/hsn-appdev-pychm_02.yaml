- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Installing and Configuring PyCharm
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装和配置PyCharm
- en: In the previous chapter, we looked at the most popular features of PyCharm and
    considered not only what makes PyCharm a great IDE but also what makes any IDE
    historically great. There is a base set of features we as developers need in order
    to be truly productive. In this chapter, we’ll turn our focus toward installing
    PyCharm. You may be thinking that you simply download and install it. You can
    do that, but there are different ways to install PyCharm that you might like better.
    There are also different options based on your operating system.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们探讨了PyCharm最流行的功能，并不仅考虑了是什么让PyCharm成为一个伟大的IDE，还考虑了是什么让任何IDE在历史上都变得伟大。我们作为开发者需要一套基本的功能才能真正提高生产力。在本章中，我们将关注PyCharm的安装。你可能认为你只需下载并安装它。你可以这样做，但安装PyCharm有不同方式，你可能更喜欢其中的一种。根据你的操作系统，也有不同的选项。
- en: Aside from the simple act of downloading the installer, running it, and mashing
    the next button until the installer’s dialog boxes go away, there are other considerations
    for getting the tool properly installed and working. PyCharm is highly customizable,
    and you are presented with some of those customization options as soon as the
    program runs for the first time. Some of these options are interesting, and some
    of them can be troublesome if you’re just picking every option and every customization
    during the process.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 除了简单地下载安装程序、运行它并按下一个按钮直到安装程序的对话框消失之外，还有其他考虑因素以确保工具正确安装并运行。PyCharm高度可定制，当你第一次运行程序时，你会看到一些定制选项。其中一些选项很有趣，如果你在过程中随意选择每个选项和每个定制，其中一些可能会带来麻烦。
- en: 'Here’s what you can look forward to in this chapter:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你可以期待以下内容：
- en: Downloading JetBrains Toolbox and using it to install and manage PyCharm. This
    is my recommended method of installation because you get an easy way to handle
    upgrades and uninstall. You can even install and manage several versions of PyCharm
    should you ever need to.
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载JetBrains Toolbox并使用它来安装和管理PyCharm。这是我推荐的安装方法，因为你可以轻松处理升级和卸载。如果你需要，你甚至可以安装和管理多个版本的PyCharm。
- en: We’ll run PyCharm for the first time and go through the customization options
    the software presents on the first run. Naturally, you can change these at any
    time, and we’ll cover that too.
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将第一次运行PyCharm，并了解软件在首次运行时提供的定制选项。当然，你可以随时更改这些选项，我们也会介绍这一点。
- en: We’ll clone this book’s repository from GitHub using PyCharm’s integrated **version
    control system** (**VCS**) tools.
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们将使用PyCharm的集成**版本控制系统**（**VCS**）工具从GitHub克隆这本书的仓库。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'To be successful in this chapter, you will need the following:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要在本章中取得成功，你需要以下条件：
- en: 'A computer. Just in case you missed this particular gag in [*Chapter 1*](B19644_01.xhtml#_idTextAnchor014),
    I pride myself on being complete and leaving nothing to chance! The computer should
    meet the following system requirements for PyCharm:'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一台电脑。以防你错过了[*第一章*](B19644_01.xhtml#_idTextAnchor014)中的这个特别玩笑，我自豪于我的完整性，不留任何余地！电脑应满足以下PyCharm的系统要求：
- en: 64-bit versions of Microsoft Windows 8 or higher, macOS 10.14 or higher, or
    Linux running GNOME or KDE desktop.
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 64位版本的Microsoft Windows 8或更高版本、macOS 10.14或更高版本，或运行GNOME或KDE桌面的Linux。
- en: The official system requirements list 4 GB RAM as the minimum and 8 GB as recommended.
    If you intend to do non-trivial work, and you’re thinking about specs on a new
    computer, I wouldn’t buy less than 16 GB RAM, and I’d prefer 32 GB. The lighter
    specs are just those needed to run PyCharm. Most developers run more than the
    IDE.
  id: totrans-12
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 官方系统要求列表中将4 GB RAM作为最低要求，8 GB作为推荐。如果你打算进行非平凡的工作，并且你在考虑新电脑的配置，我不会购买少于16 GB RAM的电脑，我更倾向于32
    GB。较轻的配置只是运行PyCharm所需的配置。大多数开发者运行的配置要高于IDE。
- en: 2.5 GB hard disk space; SSD recommended. Again, that’s PyCharm’s low-end recommendation.
    If you’re shopping, get an NVMe drive rather than an SSD. The performance is usually
    10x greater and the cost is easily affordable.
  id: totrans-13
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 2.5 GB硬盘空间；推荐使用SSD。再次强调，这是PyCharm的低端推荐。如果你在购物，请选择NVMe驱动器而不是SSD。性能通常高10倍，而且成本容易承受。
- en: 1,024 X 768 minimum screen resolution. That’s the low-end specification, and
    it’s a joke. You won’t get much done on a screen that size, and even cheap computers
    today can easily support 1,920 X 1,080\. For professional work, you really want
    4K if possible, or failing that two (or more) 1,920 X 1,080 monitors. The more
    screen real estate you have, the more productive you will be with any IDE. On
    a 4K monitor, I can have PyCharm showing me my project explorer, two open code
    windows side by side, the database explorer, and a terminal session.
  id: totrans-14
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 至少 1,024 X 768 的屏幕分辨率。这是低端规格，这只是一个笑话。在这么大的屏幕上，你几乎什么也做不了，而现在的廉价电脑很容易就能支持 1,920
    X 1,080。对于专业工作，如果可能的话，你真的希望有 4K，或者至少两个（或更多）1,920 X 1,080 的显示器。你拥有的屏幕空间越多，你使用任何
    IDE 的生产力就越高。在 4K 监视器上，我可以让 PyCharm 显示我的项目资源管理器，两个并排打开的代码窗口，数据库资源管理器，以及一个终端会话。
- en: An operating system. This works best if it is installed on your computer already
    since we don’t cover how to do that in this book. Windows, macOS, Linux—it’s all
    the same as far as this book is concerned because PyCharm works in all three environments,
    and the UI is nearly identical in each environment.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个操作系统。如果它已经安装在你的电脑上，这将是最有效的方法，因为在这本书中我们不涉及如何安装它。Windows、macOS、Linux——就这本书而言，它们都是一样的，因为
    PyCharm 在这三个环境中都能运行，并且每个环境中的用户界面几乎相同。
- en: A connection to the internet.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个互联网连接。
- en: An installation of Python 3\. We’re going to be using Python 3 exclusively in
    this book. There are a few different “flavors” of Python 3, but for the most part,
    the plain old Python 3 from [https://www.python.org](https://www.python.org) will
    be fine. We’ll get into those “flavors” later when we start talking about virtual
    environments in [*Chapter 3*](B19644_03.xhtml#_idTextAnchor052), *Customizing
    Interpreters and Virtual Environments*. If revision numbers give you comfort,
    the latest release at the time I’m writing is 3.11.1\. The Python revision I’m
    using in that production SaaS app I mentioned in [*Chapter 1*](B19644_01.xhtml#_idTextAnchor014)
    is 3.8\. If your Python 3 installation is older than that, you should update it.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 安装 Python 3。在这本书中，我们将仅使用 Python 3。Python 3 有几种不同的“风味”，但就大部分情况而言，来自 [https://www.python.org](https://www.python.org)
    的普通 Python 3 就足够了。当我们开始讨论虚拟环境时，我们会在 [*第 3 章*](B19644_03.xhtml#_idTextAnchor052)，*自定义解释器和虚拟环境*中详细介绍这些“风味”。如果你对修订号感到舒适，我在写作时的最新版本是
    3.11.1。我在提到的那个生产 SaaS 应用程序中使用的 Python 修订版是 3.8。如果你的 Python 3 安装版本比这更旧，你应该更新它。
- en: At some point, a **GitHub** account might become handy since I will be sharing
    the code from the book using a **Git** repository. Since you’ll be cloning some
    code, but not pushing, it isn’t strictly necessary to sign in—that is, unless
    you’d like to sign in, view the book’s repository, and give it a star. That’d
    be peachy and prove to the world that you’re a stand-up human being.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在某个时候，一个 **GitHub** 账户可能会变得很有用，因为我会使用 **Git** 仓库分享书中的代码。由于你将克隆一些代码，但不会推送，所以登录并不是严格必要的——也就是说，除非你想登录，查看书籍的仓库，并给它加星。那将是极好的，并向世界证明你是一个正直的人。
- en: Downloading PyCharm the traditional way
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 以传统方式下载 PyCharm
- en: First, I’m going to show the simplest, most direct, and most common way to install
    PyCharm. There’s a decent chance you’ve already done this before you bought this
    book, and there’s nothing wrong with that. After we cover this, I’ll show you
    my preferred way to install using a free app from JetBrains called Toolbox. You
    can choose any of the installation methods you’d like, knowing the choice won’t
    affect the outcome of anything we do in this book.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我将展示安装 PyCharm 最简单、最直接、最常见的方法。在你购买这本书之前，你很可能已经这样做过了，这没什么问题。在介绍完这个之后，我会展示我首选的安装方法，即使用来自
    JetBrains 的免费应用程序 Toolbox。你可以选择你喜欢的任何安装方法，知道你的选择不会影响这本书中我们做的任何事情。
- en: Note there is a 30-day free trial available for the Professional edition if
    you’d like to try it out. After 30 days, you’ll have to pay for it or downgrade
    to the Community edition. Furthermore, don’t get too hung up on the version number
    displayed in *Figure 2**.1*. JetBrains releases updates to PyCharm quite often,
    and the number will probably change several times before this book even hits the
    shelves. It’s hard to go wrong with the latest version.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，专业版提供 30 天免费试用，如果你想试用一下。30 天后，你将不得不付费或降级到社区版。此外，不要过于纠结于 *图 2**.1* 中显示的版本号。JetBrains
    频繁地为 PyCharm 发布更新，这个数字在本书上架之前可能会改变几次。选择最新版本通常不会出错。
- en: To download and install PyCharm, direct your browser to [https://www.jetbrains.com/pycharm](https://www.jetbrains.com/pycharm).
    The site will detect your operating system and attempt to present you with the
    correct download option.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载和安装 PyCharm，请将你的浏览器指向 [https://www.jetbrains.com/pycharm](https://www.jetbrains.com/pycharm)。网站将检测你的操作系统并尝试向你展示正确的下载选项。
- en: 'The download page has three main parts, as seen in *Figure 2**.1*:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下载页面有三个主要部分，如图 *图 2.1* 所示：
- en: You can select the operating system (Windows, macOS, or Linux). If you want
    to use Linux, make sure you’re running GNOME or KDE as those are supported window
    managers.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择操作系统（Windows、macOS 或 Linux）。如果你想使用 Linux，请确保你正在运行 GNOME 或 KDE，因为它们是受支持的窗口管理器。
- en: You can choose between the Professional edition or the Community edition.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以在专业版或社区版之间进行选择。
- en: 'Regardless of the first two options, make sure you take a look at the dropdown
    for the installer. Windows and Linux let you select between Intel and ARM. macOS
    lets you select between Intel and Apple Silicon:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 无论前两个选项如何，请确保查看安装程序的下拉菜单。Windows 和 Linux 允许你在 Intel 和 ARM 之间进行选择。macOS 允许你在
    Intel 和 Apple Silicon 之间进行选择：
- en: '![Figure 2.1: The download window on the JetBrains website; make sure the correct
    operating system and processor are selected](img/B19644_Figure_2.01.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1：JetBrains 网站的下载窗口；请确保选择了正确的操作系统和处理器](img/B19644_Figure_2.01.jpg)'
- en: 'Figure 2.1: The download window on the JetBrains website; make sure the correct
    operating system and processor are selected'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1：JetBrains 网站的下载窗口；请确保选择了正确的操作系统和处理器
- en: Once you have downloaded the proper version, follow the regular installation
    procedure for your operating system. If you selected a Linux version, you aren’t
    downloading an installer—you’re downloading a gzipped `.tar` file. You can just
    extract it and run PyCharm from the resulting folder.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 下载了正确的版本后，请按照你操作系统的常规安装程序进行操作。如果你选择了 Linux 版本，你并不是在下载安装程序——你是在下载一个 gzipped `.tar`
    文件。你只需提取它，然后从生成的文件夹中运行 PyCharm。
- en: JetBrains Toolbox
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JetBrains Toolbox
- en: I just presented the most common way people install software, including PyCharm,
    to their development computer. There is a different way, which I prefer, involving
    installing a separate product called JetBrains Toolbox. Toolbox is especially
    useful if you have multiple JetBrains products, as I do. I have a subscription
    to all their tools, and I regularly use many of them. My preferred C# IDE is JetBrains
    Rider, which I used exclusively in my book *Real-World Implementation of Design
    Patterns in C#*, available from Packt Publishing.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我刚刚介绍了人们最常用来将软件（包括 PyCharm）安装到他们的开发计算机上的最常见方法。还有一种不同的方法，我更喜欢，涉及安装一个名为 JetBrains
    Toolbox 的独立产品。如果你像我一样拥有多个 JetBrains 产品，Toolbox 特别有用。我订阅了他们所有的工具，并且经常使用其中许多。我首选的
    C# IDE 是 JetBrains Rider，我在 Packt Publishing 出版的书籍 *Real-World Implementation
    of Design Patterns in C#* 中独家使用它。
- en: Even if you don’t use multiple JetBrains products, Toolbox provides some useful
    features such as providing an easy way to install, uninstall, and update your
    PyCharm installation. You can even use it to install multiple versions of PyCharm
    should you ever need to, including **Early Access Program** (**EAP**) releases.
    EAP releases give you access to the most cutting-edge features from JetBrains
    before they are generally available. As a development lead, I like to take the
    newest IDEs for a test drive before I give the *all-clear* to my development team.
    Toolbox makes that very easy.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你不需要使用多个 JetBrains 产品，Toolbox 也提供了一些有用的功能，例如提供一种简单的方式来安装、卸载和更新你的 PyCharm 安装。如果你需要，你甚至可以使用它来安装多个版本的
    PyCharm，包括 **早期访问计划**（**EAP**）版本。EAP 版本让你在它们普遍可用之前就能访问 JetBrains 的最新功能。作为一名开发主管，我喜欢在我向我的开发团队发出“绿灯”之前，先对最新的
    IDE 进行测试。Toolbox 让这变得非常简单。
- en: 'Toolbox is a separate download, and it is free. Let’s start by revisiting the
    PyCharm download page. At the bottom, you’ll find a link to JetBrains Toolbox,
    as shown in *Figure 2**.2*:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: Toolbox 是一个独立的下载，并且是免费的。让我们首先回顾一下 PyCharm 的下载页面。在底部，你会找到一个指向 JetBrains Toolbox
    的链接，如图 *图 2.2* 所示：
- en: '![Figure 2.2: Skip the usual download links we covered earlier and instead
    click the link to Toolbox](img/B19644_Figure_2.02.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.2：跳过我们之前提到的常规下载链接，而是点击 Toolbox 链接](img/B19644_Figure_2.02.jpg)'
- en: 'Figure 2.2: Skip the usual download links we covered earlier and instead click
    the link to Toolbox'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.2：跳过我们之前提到的常规下载链接，而是点击 Toolbox 链接
- en: 'It is entirely possible that JetBrains will re-arrange its website. If there
    is no link at the bottom, you can simply search for *Toolbox* and find the most
    current download. You’ll land on a page like the one shown in *Figure 2**.3*:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有可能JetBrains会重新安排其网站。如果没有在底部找到链接，你可以简单地搜索*工具箱*并找到最新的下载。你将进入一个像*图2.3*中显示的页面：
- en: '![Figure 2.3: The Toolbox download screen](img/B19644_Figure_2.03.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图2.3：工具箱下载屏幕](img/B19644_Figure_2.03.jpg)'
- en: 'Figure 2.3: The Toolbox download screen'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.3：工具箱下载屏幕
- en: As with the normal PyCharm download we reviewed earlier, this web page will
    detect the operating system you are using. The options are a bit simpler, but
    if you’re using a Mac, be sure to click the format button to select Intel versus
    Apple Silicon, as seen in *Figure 2**.3*.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 就像我们之前审查的正常PyCharm下载一样，这个网页将检测你正在使用的操作系统。选项稍微简单一些，但如果你使用的是Mac，务必点击格式按钮以选择Intel与Apple
    Silicon，就像*图2.3*中显示的那样。
- en: Installing Toolbox in Windows
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Windows中安装工具箱
- en: The process for installing Toolbox is straightforward. It’s a case where you
    run the installer and smash the **Next** button until the dialog goes away.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 安装工具箱的过程很简单。这是一个你运行安装程序并一直点击**下一步**按钮直到对话框消失的情况。
- en: Note that when Toolbox is running, you can find it in the system tray in Windows.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，当工具箱运行时，你可以在Windows的系统托盘找到它。
- en: Installing Toolbox in macOS
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在macOS中安装工具箱
- en: As with all things Mac, the macOS install is very easy. Having verified you
    downloaded the right version of the `.dmg` file (Intel versus Apple Silicon),
    find the downloaded `.dmg` file in the `Downloads` folder within your `home` folder.
    Double-click to open the `.dmg` file. Drag the Toolbox icon to the `Applications`
    folder. You’re done!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 就像所有Mac产品一样，macOS的安装非常简单。确认你下载了正确的`.dmg`文件版本（Intel与Apple Silicon）后，在你的`home`文件夹中的`Downloads`文件夹中找到下载的`.dmg`文件。双击打开`.dmg`文件。将工具箱图标拖到`Applications`文件夹。完成！
- en: Installing PyCharm with Toolbox
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用工具箱安装PyCharm
- en: Regardless of how you got here—be it on a Mac, Windows, or Linux—you should
    now have Toolbox running. At this point, the experience is almost universal. On
    macOS, Toolbox is just a regular app like any other. On Windows, though, it runs
    in the system tray.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是如何到达这里的——无论是Mac、Windows还是Linux——你现在应该已经有工具箱在运行了。在这个阶段，体验几乎是通用的。在macOS上，工具箱就像其他任何常规应用程序一样。但在Windows上，它运行在系统托盘上。
- en: Running Toolbox for the first time brings a pretty standard **end user license
    agreement** (**EULA**). You know the drill. Read it and make sure that JetBrains
    isn’t demanding the surrender of your firstborn, then make your selection to agree
    or disagree with the EULA. Naturally, if you disagree, our time together is at
    an end, unless you’re tuning in for the occasional dad joke. I’ll operate on the
    assumption you agreed to the EULA.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 第一次运行工具箱会带来一个相当标准的**最终用户许可协议**（**EULA**）。你知道流程。阅读它并确保JetBrains没有要求你放弃你的第一个孩子，然后选择同意或不同意EULA。当然，如果你不同意，我们的合作就结束了，除非你是偶尔来听一些爸爸笑话的。我将假设你同意了EULA。
- en: 'With Toolbox installed, you can install IDEs. You’ll see a screen like the
    one shown in *Figure 2**.4*, which lists all the available JetBrains products:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在安装了工具箱后，你可以安装IDE。你将看到一个像*图2.4*中显示的屏幕，列出了所有可用的JetBrains产品：
- en: '![Figure 2.4: JetBrains Toolbox running in the Windows system tray](img/B19644_Figure_2.04.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4：JetBrains工具箱在Windows系统托盘运行](img/B19644_Figure_2.04.jpg)'
- en: 'Figure 2.4: JetBrains Toolbox running in the Windows system tray'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4：JetBrains工具箱在Windows系统托盘运行
- en: Naturally, we’re only interested in PyCharm. *Figure 2**.4* shows PyCharm Professional
    and PyCharm Community in the list. If you’re interested in the PyCharm Educational
    edition, it’s further down on the list.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 自然，我们只对PyCharm感兴趣。*图2.4*显示了列表中的PyCharm Professional和PyCharm Community。如果你对PyCharm教育版感兴趣，它在列表中更靠下。
- en: 'To install an IDE, click the **Install** button and wait while Toolbox downloads
    and installs the IDE. Once it is installed, the Toolbox menu changes slightly
    to show you which tools you have installed. You can see mine after I installed
    PyCharm Professional in *Figure 2**.5*:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 要安装IDE，点击**安装**按钮，等待工具箱下载并安装IDE。安装完成后，工具箱菜单会略有变化，以显示你已安装的工具。你可以在我安装了PyCharm
    Professional后的*图2.5*中看到我的：
- en: "![Figure 2.5: The Toolbox \uFEFFapp after installation of PyCharm Professional](img/B19644_Figure_2.05.jpg)"
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5：安装PyCharm Professional后的工具箱应用程序](img/B19644_Figure_2.05.jpg)'
- en: 'Figure 2.5: The Toolbox app after installation of PyCharm Professional'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5：安装PyCharm Professional后的工具箱应用程序
- en: You’ll notice Toolbox lists the applications you have installed at the top of
    the list, while those available for install are below. The advantage offered by
    Toolbox versus a normal install is the ability to launch, update, and uninstall
    your IDEs as well as easily experiment with different versions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您会注意到Toolbox将您安装的应用程序列在列表的顶部，而可安装的则位于下方。Toolbox相对于正常安装的优势在于，您可以启动、更新和卸载您的IDE，以及轻松尝试不同的版本。
- en: Launching PyCharm using Toolbox
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Toolbox启动PyCharm
- en: After you’ve installed PyCharm, you can launch it or any installed IDE by simply
    clicking the entry in the menu. Before we leave Toolbox, let me show you some
    more interesting features.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在您安装PyCharm之后，您可以通过简单地点击菜单中的条目来启动它或任何已安装的IDE。在我们离开Toolbox之前，让我向您展示一些更有趣的功能。
- en: Installing an alternate version or uninstalling
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装备用版本或卸载
- en: 'Next to each installed IDE in the list, you’ll see three dots, as seen in *Figure
    2**.6*:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在列表中每个已安装的IDE旁边，您将看到三个点，如图*图2.6*所示：
- en: '![Figure 2.6: The three dots next to each app represent a menu](img/B19644_Figure_2.06.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6：每个应用程序旁边的三个点代表一个菜单](img/B19644_Figure_2.06.jpg)'
- en: 'Figure 2.6: The three dots next to each app represent a menu'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6：每个应用程序旁边的三个点代表一个菜单
- en: The dots are a menu. If you click them, you’ll see some options. You can access
    the settings for PyCharm. We’re going to do this later inside PyCharm itself,
    so we don’t need to do that now. There’s an option for viewing the latest news
    by clicking **What’s new**. Below that, there is an option for installing different
    versions of PyCharm aside from the latest. You can easily roll back to the last
    install if you have problems with the latest. Finally, below the divider and rendered
    in a very intimidating red font is the option to uninstall. It even has a terrifying
    and mysterious ellipsis following the menu option. Hovering over the option usually
    instills a sense of foreboding in all who try it. You were warned.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这些点代表一个菜单。如果您点击它们，您将看到一些选项。您可以访问PyCharm的设置。我们将在PyCharm内部稍后进行此操作，所以现在我们不需要这么做。有一个选项，通过点击**什么是新功能**来查看最新新闻。在其下方，有一个选项，可以安装除最新版本之外的PyCharm的不同版本。如果您遇到最新版本的问题，可以轻松回滚到最后一个安装版本。最后，在分隔符下方，以非常令人畏惧的红色字体显示的是卸载选项。它甚至有一个令人毛骨悚然且神秘的省略号跟在菜单选项之后。将鼠标悬停在选项上通常会让人感到一种不祥的预感。您已经被警告了。
- en: Updating PyCharm using Toolbox
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Toolbox更新PyCharm
- en: Toolbox will help you stay up to date with the latest version of PyCharm and
    any other IDEs you use. Toolbox itself has its own settings and its own update
    mechanism.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Toolbox将帮助您保持PyCharm以及您使用的任何其他IDE的最新版本。Toolbox本身有自己的设置和更新机制。
- en: 'To get to these settings, click the hexagonal icon in the top-right corner
    of the Toolbox screen, as seen in *Figure 2**.7*:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问这些设置，请点击Toolbox屏幕右上角的六边形图标，如图*图2.7*所示：
- en: "![Figure 2.7: Use the hexagonal icon at the top of \uFEFFToolbox to access\
    \ its update options](img/B19644_Figure_2.07.jpg)"
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图2.7：使用Toolbox顶部的六边形图标来访问其更新选项](img/B19644_Figure_2.07.jpg)'
- en: 'Figure 2.7: Use the hexagonal icon at the top of Toolbox to access its update
    options'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.7：使用Toolbox顶部的六边形图标来访问其更新选项
- en: The **Log in** option allows you to connect Toolbox to your JetBrains account.
    The **About** and **FAQ** options show information about the product. The latter
    takes you to a website where the product's **frequently asked questions** (**FAQ**)
    is maintained. The **Quit** option will close the Toolbox program.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**登录**选项允许您将Toolbox连接到您的JetBrains账户。**关于**和**常见问题解答**选项显示有关产品的信息。后者将您带到维护产品**常见问题解答**（FAQ）的网站。**退出**选项将关闭Toolbox程序。'
- en: Launching and registering PyCharm
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 启动并注册PyCharm
- en: 'Launching PyCharm, regardless of how you do it, shows you a splash screen,
    then takes you to a set of typical first-launch screens. If you installed the
    Professional edition, the first thing you’ll see is the registration screen shown
    in *Figure 2**.8*:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 不论您如何启动PyCharm，它都会显示一个启动屏幕，然后带您进入一组典型的首次启动屏幕。如果您安装了专业版，您首先会看到图*图2.8*所示的注册屏幕：
- en: '![Figure 2.8: The licensing screen in PyCharm Professional appears on the first
    run](img/B19644_Figure_2.08.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![图2.8：PyCharm Professional的许可屏幕在首次运行时出现](img/B19644_Figure_2.08.jpg)'
- en: 'Figure 2.8: The licensing screen in PyCharm Professional appears on the first
    run'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.8：PyCharm Professional的许可屏幕在首次运行时出现
- en: The most common way to proceed here is to log in to your JetBrains account.
    Clicking the button labeled **Log In to JetBrains Account…** will launch your
    browser. You can log in or create an account. If you have purchased a license,
    logging in will associate your copy with the license you purchased.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里进行操作的最常见方式是登录到你的 JetBrains 账户。点击标有**登录到 JetBrains 账户…**的按钮将启动你的浏览器。你可以登录或创建一个账户。如果你已经购买了许可证，登录将使你的副本与所购买的许可证关联。
- en: If you work for a company that owns many licenses, you might need to log in
    to a JetBrains license server. There is also an option for registering with a
    registration code. You’ll find this code in your store account. This can be useful
    if you don’t have good internet access.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你为拥有许多许可证的公司工作，你可能需要登录到 JetBrains 许可证服务器。还有一个使用注册码进行注册的选项。你可以在你的商店账户中找到这个代码。如果你没有良好的互联网接入，这可能很有用。
- en: Do you have more than one computer?
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你有多台电脑吗？
- en: Note that it is legal to install on multiple computers so long as you aren’t
    running two copies concurrently with the same license. The IDE will detect that
    and demand you shut one copy down.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，只要你不使用同一许可证同时运行两个副本，在多台计算机上安装是合法的。IDE 会检测到这一点并要求你关闭一个副本。
- en: If you don’t have a license and you aren’t ready to commit, you can select the
    **Start trial** option. You will still have to log in to a JetBrains account in
    order to activate your trial.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有许可证并且还没有准备好提交，你可以选择**开始试用**选项。你仍然需要登录到 JetBrains 账户以激活你的试用。
- en: Setting up PyCharm
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置 PyCharm
- en: 'When you launch PyCharm for the first time, and you make it past the license
    and registration, the very next thing you see is a smallish window representing
    PyCharm without a loaded project. You can see the light color scheme version of
    this screen in *Figure 2**.9*:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次启动 PyCharm，并且通过了许可和注册，你接下来看到的就是一个表示 PyCharm 没有加载项目的较小窗口。你可以在 *图 2.9* 中看到这个屏幕的浅色方案版本：
- en: '![Figure 2.9: PyCharm with no loaded project](img/B19644_Figure_2.09.jpg)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.9：未加载项目的 PyCharm](img/B19644_Figure_2.09.jpg)'
- en: 'Figure 2.9: PyCharm with no loaded project'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.9：未加载项目的 PyCharm
- en: 'From this window, there are a few obvious options. I call them *obvious* because
    they are right in the middle of a big open space in the middle of the window.
    You can create a project, open an existing project, or clone a project from a
    VCS such as Git or **Subversion** (**SVN**). However, my first stop is in the
    gray area to the left on the screen where you’ll find the **Customize** menu option.
    Let’s go ahead and review your options for customizing PyCharm to fit your working
    style. Clicking **Customize** brings you to the preferences screen, as seen in
    *Figure 2**.10*:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个窗口，有几个明显的选项。我称它们为**明显**，因为它们就在窗口中间一个很大的开放空间中。你可以创建一个项目，打开一个现有项目，或者从 Git 或
    **Subversion**（**SVN**）等 VCS 中克隆一个项目。然而，我的第一个目的地是在屏幕左侧的灰色区域，在那里你可以找到**自定义**菜单选项。让我们来回顾一下自定义
    PyCharm 以适应你的工作风格的选项。点击**自定义**会带你到偏好设置屏幕，如图 *图 2.10* 所示：
- en: '![Figure 2.10: A small window for setting some of the important preferences
    in PyCharm](img/B19644_Figure_2.10.jpg)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.10：PyCharm 中设置一些重要首选项的小窗口](img/B19644_Figure_2.10.jpg)'
- en: 'Figure 2.10: A small window for setting some of the important preferences in
    PyCharm'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.10：PyCharm 中设置一些重要首选项的小窗口
- en: This screen allows us to change the most frequently accessed settings. We can
    change our color theme, the IDE font, and our keymap.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这个屏幕允许我们更改最常访问的设置。我们可以更改我们的颜色主题、IDE 字体和我们的快捷键映射。
- en: At the bottom, we can import our settings. This is useful when your boss finally
    springs for that new laptop, and you don’t want to spend a bunch of time re-customizing
    your IDE. As we all know, a well-configured, personalized IDE is like your old
    couch. Everybody who tries to sit on it will be horribly uncomfortable. Also,
    it smells. Your friends won’t tell you, but it does. To you, though, it’s molded
    itself perfectly to your form via potentially years of sedentary satisfaction.
    That’s your IDE. You might take years tweaking it to perfection only to be faced
    with having to start over every time you get a new machine. Not today, friends.
    Not with PyCharm. We can export, import, and even share our settings and easily
    bring them into new installations.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在底部，我们可以导入我们的设置。当你的老板最终为你买下那台新笔记本电脑，而你不想花大量时间重新定制你的IDE时，这很有用。众所周知，一个配置良好、个性化的IDE就像你的旧沙发。任何试图坐在上面的人都会感到极不舒服。而且，它还有味道。你的朋友们不会告诉你，但它确实有。对你来说，它通过可能多年的久坐满足感，完美地适应了你的形状。那就是你的IDE。你可能花了几年的时间来调整它以达到完美，但每次你得到一台新机器时，都必须从头开始。今天不是，朋友们。不是用PyCharm。我们可以导出、导入，甚至共享我们的设置，并轻松地将它们带入新的安装。
- en: I like big fonts and I don’t know why!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢大字体，但不知道为什么！
- en: You might be noting my font sizes are gigantic in all these shots. I am from
    Texas, and everything is bigger in Texas. However, in this case, I did that for
    you. Screenshots are easy to read with exaggerated font sizes, so you’ll see crazy
    settings in my preferences throughout this book.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，在这些截图里我的字体大小都非常大。我来自德克萨斯州，在德克萨斯州，一切事物都更大。然而，在这种情况下，我是为你这么做的。使用夸张的字体大小，截图更容易阅读，所以你会在本书的偏好设置中看到一些疯狂的设置。
- en: You might be thinking at this point that PyCharm has a rather paltry set of
    customization options. You’d be wrong. This deceptively simple window is meant
    to ease you in by presenting the most changed settings. Many users stop here.
    But not you. No, not you. You’re a Viking! Other developers see a deceptively
    diminutive **All settings…** button at the bottom of the screen and think *There
    be dragons!* You see a rich opportunity for adventure! So, click the **All settings…**
    button, if you dare, and we’ll explore this brave new world together.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能此时会想，PyCharm的定制选项相当有限。你会错的。这个看似简单的窗口旨在通过展示最常更改的设置来让你轻松入门。许多用户会在这里停止。但不是你。不，不是你。你是维京人！其他开发者看到屏幕底部的那个看似微不足道的**所有设置…**按钮，会想**这里可能有龙**！而你看到的是一个充满冒险的丰富机会！所以，如果你敢，点击**所有设置…**按钮，我们将一起探索这个勇敢的新世界。
- en: Appearance and behavior
  id: totrans-90
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 外观和行为
- en: 'Clicking the **All settings…** button brings you to the screen shown in *Figure
    2**.11*. I will mercifully not attempt to cover every available setting as the
    list of possibilities is extensive to the point of tedium. The takeaway as you
    move through the customization settings is that you can pretty much customize
    every pixel generated by the running IDE:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 点击**所有设置…**按钮会带你到*图2.11*所示的屏幕。我将仁慈地不尝试涵盖每个可用的设置，因为可能性的列表详尽到令人厌烦。当你通过定制设置时，你可以大致定制运行IDE生成的每个像素：
- en: '![Figure 2.11: The Settings screen in PyCharm lets you change every aspect
    of the user experience within PyCharm](img/B19644_Figure_2.11.jpg)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![图2.11：PyCharm的设置屏幕允许你更改PyCharm中用户体验的各个方面](img/B19644_Figure_2.11.jpg)'
- en: 'Figure 2.11: The Settings screen in PyCharm lets you change every aspect of
    the user experience within PyCharm'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.11：PyCharm的设置屏幕允许你更改PyCharm中用户体验的各个方面
- en: Perhaps the most useful way to start is to point out there is a search box at
    the top of the settings categories list. It is usually more practical to search
    for the setting you want than it is to troll through all the screens trying to
    find it.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 可能最实用的开始方式是指出设置类别列表的顶部有一个搜索框。通常，搜索你想要的设置比翻遍所有屏幕试图找到它更实际。
- en: 'Before we go further, I want you to notice the arrow in *Figure 2**.11* points
    to two items on the screen: **Appearance** at the top (which we’ll talk about
    in just a moment) and a **New UI** setting. As this book is being written, the
    user experience for PyCharm is undergoing a complete overhaul. As the application
    has grown, the menus and toolbars have become increasingly crowded. To fix this,
    JetBrains is working on a simpler UI layout that will hopefully make the tool
    easier to learn and adopt. The classic UI will likely remain available through
    2024, but the new UI will become the standard in late 2023, which should coincide
    with this book going to press. Everything I’m showing you in this book will be
    with the **New UI** setting turned on. It may even be that this option isn’t even
    on the screen in later editions of PyCharm.'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续前进之前，请注意*图2**.11*中的箭头。它指向屏幕上的两个项目：顶部的是**外观**（我们稍后会讨论）以及一个**新UI**设置。随着本书的编写，PyCharm的用户体验正在进行全面的重构。随着应用程序的增长，菜单和工具栏变得越来越拥挤。为了解决这个问题，JetBrains正在开发一个更简单的UI布局，希望这将使工具更容易学习和采用。经典的UI可能会在2024年之前仍然可用，但新的UI将在2023年底成为标准，这应该与本书付印的时间相吻合。本书中展示的所有内容都将使用**新UI**设置。甚至可能是在PyCharm的后续版本中，这个选项甚至可能不会出现在屏幕上。
- en: The first thing most developers want to do with a new IDE is to tweak the appearance.
    We’ve already found the setting for the color theme and the font size, but there
    are other settings you’ll want to visit. Let’s start by clicking on **Appearance**,
    as seen in *Figure 2**.11*. This will open a menu on the left and display the
    appearance settings screen.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数开发者使用新IDE的第一件事就是调整外观。我们已经找到了颜色主题和字体大小的设置，但还有其他您想要查看的设置。让我们先点击*图2**.11*中显示的**外观**，这将打开左侧的菜单并显示外观设置屏幕。
- en: Appearance
  id: totrans-97
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 外观
- en: 'Having opened the **Appearance** settings, you’ll see a window resembling the
    one shown in *Figure 2**.12*:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 打开**外观**设置后，您将看到一个类似于*图2**.12*所示的窗口：
- en: '![Figure 2.12: The Appearance settings for PyCharm](img/B19644_Figure_2.12.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图2.12：PyCharm的外观设置](img/B19644_Figure_2.12.jpg)'
- en: 'Figure 2.12: The Appearance settings for PyCharm'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.12：PyCharm的外观设置
- en: We have seen a few of these settings before. We can set the theme as we could
    in the simpler settings dialog we saw earlier. This window, however, gives you
    a link, labeled **Get more themes**, which will let you explore the JetBrains
    Marketplace for themes beyond the standard issue you have with the PyCharm install.
    We’ll cover plugins toward the end of the book, but there’s no harm in looking
    around if you’d like to find something a bit more unique.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我们之前已经看到过一些这些设置。我们可以设置主题，就像我们在之前看到的简单设置对话框中做的那样。然而，此窗口提供了一个标签为**获取更多主题**的链接，这将允许您在JetBrains
    Marketplace中探索PyCharm安装中标准问题之外的主题。我们将在本书的末尾介绍插件，但如果您想找到一些更独特的东西，看看也无妨。
- en: Wait for it!
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 等一下！
- en: This is not where you set the font that appears in the code editor. This setting
    controls the fonts on the UI itself. It will affect the buttons, menu items, window
    titles, and so on rather than the editor, which is probably what you are wanting
    to change.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 这不是您设置代码编辑器中字体的地方。此设置控制UI本身的字体。它将影响按钮、菜单项、窗口标题等，而不是编辑器，这可能是您想要更改的。
- en: Don’t worry—we’ll customize the editor font in just a moment.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心——我们很快就会定制编辑器字体。
- en: Editor settings
  id: totrans-105
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑设置
- en: 'As with most of the sections within the **Settings** window, there are a lot
    of customization options. I’m just going to hit a few highlights. As we go through
    the screens, you’ll see just how much customization is possible. If it’s a pixel
    on your screen rendered by PyCharm, you can likely customize it in some way! *Figure
    2**.13* shows the **Editor** settings section of the **Settings** window:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 与**设置**窗口中的大多数部分一样，有许多自定义选项。我只会强调一些重点。随着我们浏览屏幕，您将看到可以进行的自定义程度。如果是在屏幕上由PyCharm渲染的像素，您很可能会以某种方式对其进行自定义！*图2**.13*显示了**设置**窗口中的**编辑器**设置部分：
- en: '![Figure 2.13: The Editor settings in PyCharm’s Settings window](img/B19644_Figure_2.13.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图2.13：PyCharm设置窗口中的编辑器设置](img/B19644_Figure_2.13.jpg)'
- en: 'Figure 2.13: The Editor settings in PyCharm’s Settings window'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.13：PyCharm设置窗口中的编辑器设置
- en: 'Go through the options on the left side if you like, and see whether there’s
    anything that makes sense for you to change. The **Color Scheme** section lets
    you customize the way the IDE colors your syntax. I’m going to jump to what I
    think is the most useful setting to modify. Click the **Font** section, as I have
    in *Figure 2**.14*:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.14: The Font settings for the editor in PyCharm](img/B19644_Figure_2.14.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.14: The Font settings for the editor in PyCharm'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
- en: 'This screen does one thing: it controls the appearance of text in the IDE’s
    editor window. The other font settings we’ve seen have generally applied to the
    whole IDE. This setting is the most important one for us as users of the tool.
    This is the setting for the part of the tool you’ll be staring at all day long.
    You can set the font, the size, and the line height. I have my font size set high
    because I need nice, big fonts for all these screenshots, but to be honest, my
    daily driver on my work laptop is set to around 16 or 18\. Bigger font sizes are
    easier to read depending on how far away your monitor is. Ideally, that shouldn’t
    be much further than arm’s length. If your font size is too small, you’ll unknowingly
    squint at your monitor more often, and this could lead to fatigue.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: 'There is a setting here for enabling font ligatures. These are enhancements
    to standard fonts that allow symbols that we use in our code to show up with a
    bit more elegance. For example, with font ligatures enabled, a conditional with
    a not equals sign such as `if a != b` will be rendered as seen in *Figure 2**.15*:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.15: Turning on font ligatures allows you to express certain symbols
    that are not normally available, such as the inequality symbol on line 5](img/B19644_Figure_2.15.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.15: Turning on font ligatures allows you to express certain symbols
    that are not normally available, such as the inequality symbol on line 5'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: In order for this to work, you have to select a font that supports ligatures.
    PyCharm ships with the *Fira Code* font specifically because it’s a nice IDE font
    that supports ligatures. If you want to explore more fonts with ligatures, point
    your browser to [https://nerdfonts.com](https://nerdfonts.com). It has many fonts
    appropriate for editors, terminals, and consoles, many of which support ligatures.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
- en: Below the **Font** settings in the **Editor** settings lies **the color scheme**.
    You’ve seen this one before, but it’s nice to know where it is since the last
    time we saw it, it was in the setup window.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’d like more customizations for the color scheme, twirl down the caret
    next to the **Color Scheme** menu item and you’ll see, as I do in *Figure 2**.16*,
    that there are many more options:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.16: You can change the color of just about anything in PyCharm using
    the options in the Color Scheme settings menu](img/B19644_Figure_2.16.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.16: You can change the color of just about anything in PyCharm using
    the options in the Color Scheme settings menu'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
- en: You can control the colors for every window in the application in every context
    they are used. For example, you can have different color schemes for SQL files
    versus JavaScript files versus Python files.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: 'Perhaps the most useful setting in this lot is the ability to customize the
    font that appears in PyCharm’s integrated terminal window. You can see that in
    *Figure 2**.17*:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.17: You can customize the font that appears in PyCharm’s integrated
    terminal window](img/B19644_Figure_2.17.jpg)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.17: You can customize the font that appears in PyCharm’s integrated
    terminal window'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
- en: 'By default, the console uses the same font as the editor. If you’d like to
    change that, you can. You can further customize the appearance of the console
    using the **Console Colors** settings, as seen in *Figure 2**.18*:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.18: Console Colors settings in PyCharm](img/B19644_Figure_2.18.jpg)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.18: Console Colors settings in PyCharm'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: Personally, I spend a lot of time in the terminal, so I appreciate the level
    of customization available.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
- en: 'Close the **Color Scheme** menu and let’s jump to the **Code Style** menu.
    You can see the menu in *Figure 2**.19*:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.19: The Code Style menu within PyCharm’s Settings window](img/B19644_Figure_2.19.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.19: The Code Style menu within PyCharm’s Settings window'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
- en: 'This one I find a little puzzling. The *PEP 8* standard states no Python line
    should be longer than 79 characters, yet the editor has a hard wrap set to 120\.
    Thankfully, we can fix this. As I said, *PEP 8* says code lines should be limited
    to 79 columns or fewer. The standard goes on to recommend comment lines and docstrings
    should be limited to 72 columns. To make sure I follow these rules, I change my
    **Code Style** settings, as shown in *Figure 2**.20*:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 2.20: These are my recommended settings for wraps and guides, which\
    \ honor PE\uFEFFP 8](img/B19644_Figure_2.20.jpg)"
  id: totrans-133
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.20: These are my recommended settings for wraps and guides, which
    honor PEP 8'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: I change the `79`, and I check the wrap by typing in the checkbox. Then, I add
    `72` and `79` to the **Visual guides** setting so that I’ll see lines in the right-hand
    gutter. Well-written Python code is always consistent with standards. Setting
    these visual guides helps me avoid those annoying red squiggly lines. I hate those.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t know what I mean, Python has a built-in linter that will warn you
    when you break *PEP 8* rules. After a while, it’s kind of like an annoying mother-in-law
    sitting in the backseat while you drive. Setting up the **Code Style** settings
    this way avoids code rage in a way that is unavoidable with actual backseat drivers,
    and perhaps mothers-in-law in general.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: 'Applying these settings changes the look of the editor, as seen in *Figure
    2**.21*. We can see two lines on the right side showing our guides at 72 and 79
    columns respectively:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.21: Code style has been applied and we can see our two faint gray
    lines on the right in the editor](img/B19644_Figure_2.21.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.21: Code style has been applied and we can see our two faint gray
    lines on the right in the editor'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: If you remember, we also turned on a hard wrap at *line 79*. To demonstrate
    this, you’ll note that *line 10* in the code, which was typed in before I changed
    the settings, clearly runs past our guide at 79 columns. To test the hard-wrap
    setting, I typed the line again immediately below *line 11*. Once I reached the
    hard-wrap limit, PyCharm inserted a line continuation (`\`) and dropped me to
    the next line down with an appropriate indent. It is now impossible for me to
    type a line of code that violates the *PEP* *8* standard.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
- en: Note that changing the settings doesn’t automatically re-format your code. There
    is a utility that does that. We will learn how to automatically format and re-format
    code in [*Chapter 4*](B19644_04.xhtml#_idTextAnchor077).
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: Other settings
  id: totrans-142
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: There are more settings visible in the **Settings** window, including **Remote
    Development** and **Plugins**. These will be covered in later chapters.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: Exporting customized settings
  id: totrans-144
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Customized settings are amazing! But it’s always rough when you must switch
    to a new computer. You’d hate to have to redo all your customizations. Or maybe
    you want to share your settings with other developers on your team. PyCharm makes
    this easy. Just click the **File** menu and find the **Manage IDE Settings** option,
    as seen in *Figure 2**.22*:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.22: PyCharm lets you export and import your settings](img/B19644_Figure_2.22.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.22: PyCharm lets you export and import your settings'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: You can import, export, and reset your settings as you wish.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
- en: Working with projects
  id: totrans-149
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that we have seen all the configuration options and we’ve tweaked some of
    the more popular settings, let’s take PyCharm for a quick spin around the block.
    We’ll create a quick Python project and learn how to run our main script within
    the UI.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
- en: At this point, you’re going to need to have installed Python 3 on your computer.
    The Python documentation at [https://docs.python.org/3/using/index.html](https://docs.python.org/3/using/index.html)
    explains the installation. I find this documentation to be complete, but you have
    to wade through a lot to get to the good part. To make this easier for beginners,
    I’ll include some additional links in the *Further reading* section at the end
    of this chapter.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: Creating a new project
  id: totrans-152
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You’re probably starting to realize that PyCharm is a pretty powerful and flexible
    tool. There are several ways to configure it and several places in the application
    where you can start the configuration process. There is similar flexibility in
    creating projects.
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’ve never created a project in PyCharm before, which is likely the case
    right now, you’ll see a window like the one shown in *Figure 2**.23*. This window
    offers a button to create a new project:'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.23: The opening screen for PyCharm has a button that can be used
    to create a new project](img/B19644_Figure_2.23.jpg)'
  id: totrans-155
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.23: The opening screen for PyCharm has a button that can be used to
    create a new project'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have created a project in PyCharm already, the PyCharm window will open
    with the last project it had loaded. This is the case I’m showing in *Figure 2**.24*.
    Here, I have the demo project I’ve had open for our examples so far. A little
    later in this chapter, I’ll show you how to clone this code using PyCharm’s integrated
    Git client, but let’s get back to creating a new project. In *Figure 2**.24*,
    I already have a project open. In this case, you can use the **File** menu to
    create a new project. Click **File** | **New Project…**:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.24: You can use the File menu to create a new project by clicking
    File | New Project…](img/B19644_Figure_2.24.jpg)'
  id: totrans-158
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.24: You can use the File menu to create a new project by clicking
    File | New Project…'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: 'Regardless of which vector you choose, the result is the same. You get the
    **New Project** window shown in *Figure 2**.25*:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.25: The New Project window in PyCharm Professional](img/B19644_Figure_2.25.jpg)'
  id: totrans-161
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.25: The New Project window in PyCharm Professional'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is where you will notice a big difference between the Professional edition
    and the Community edition. In *Figure 2**.26*, you’ll see the **New Project**
    windows for the Professional edition (left) and the Community edition (right).
    Focus your attention on the left side of the Professional edition window. The
    Professional edition offers a lot more project types, versus only one option in
    the free edition. The Community edition only creates pure Python projects. It
    doesn’t even give you an option, since that’s all it can do:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.26: The project creation options in PyCharm Professional (left)
    side by side with the Community edition (right)](img/B19644_Figure_2.26.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.26: The project creation options in PyCharm Professional (left) side
    by side with the Community edition (right)'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that it is not impossible to create projects of any
    type in the PyCharm Community edition. For example, if I wanted to create a Flask
    project to make a web application, I absolutely can do that in the Community edition.
    However, I’ll have to do it manually from scratch. The Professional edition speeds
    things up with better tooling, but it doesn’t prevent you from doing anything
    you couldn’t do in any other editor, free or otherwise.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
- en: 'I’m going to choose a project common to both editions: a pure Python project.
    This is the default in both editions.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
- en: The first option at the top of the screen allows you to set the name and location
    of your project. I’m going to leave the default at `pythonProject`. Beneath that,
    there are a bunch of options for creating a Python virtual environment. This is
    the topic of [*Chapter 3*](B19644_03.xhtml#_idTextAnchor052), so I’ll leave them
    as default for now.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
- en: Note
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
- en: If you have not yet installed Python 3, or if PyCharm cannot detect your Python
    3 installation, you may be prompted to install Python 3 automatically. Be advised
    that PyCharm might not install the latest version of Python 3, nor will it give
    you any control over where it is installed. It will also considerably slow down
    the time needed to create your first project.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
- en: 'Make sure the checkbox titled **Create a main.py welcome script** is checked,
    and click the **Create** button. If you had a project open already when you began
    the process of creating this new project, you’ll see a dialog asking what you’d
    like to do with the currently open project, as seen in *Figure 2**.27*:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.27: If you had a project open already, you have options on what
    you’d like to do with it when creating a new project](img/B19644_Figure_2.27.jpg)'
  id: totrans-172
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.27: If you had a project open already, you have options on what you’d
    like to do with it when creating a new project'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
- en: For now, let’s select the **This Window** button, which will close the project
    you have open and replace it with your new project. Naturally, your old project
    is still intact and can be re-opened using the **File** | **Open** menu option.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
- en: 'The result is a new Python 3 project with a single file. The file will contain
    a variant of the ubiquitous *Hello World* idiom, which spares me from having to
    include it in the book’s source code. See? We all win! Let’s take a look at our
    new project within the IDE in *Figure 2**.28*:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.28: The new project is created; now, let’s look around!](img/B19644_Figure_2.28.jpg)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.28: The new project is created; now, let’s look around!'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, PyCharm created a project structure for us in the project explorer
    (**1**). The project explorer allows you to see and interact with all the files
    in your project. You can see that it created a few folders for the virtual environment.
    We’ll cover this in depth in [*Chapter 3*](B19644_03.xhtml#_idTextAnchor052).
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
- en: The editor is clearly seen in the middle (**2**). We’ll be spending a lot of
    time here, so let’s point out that PyCharm, as with most IDEs and editors, uses
    a tabbed interface (**3**). There is a toolbar (**4**) to run, debug, test, and
    profile your program, which we will use in just a moment.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
- en: On the bottom right (`\t`) character in PyCharm unless you customize it that
    way. But why in the world would you go and do a thing like that?
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
- en: If PyCharm is unresponsive, look down at the bottom of the window near *area
    6*, and you’ll probably see a progress bar indicating that PyCharm is performing
    some operation such as project file indexing. You might have to wait until it
    finishes before your IDE is fully responsive.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
- en: Running a PyCharm project
  id: totrans-183
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I kind of feel like an annoying car salesman who won’t shut up about the features
    of the car. All you want to do is drive it already. Let me get you those keys
    and tell my non-existent manager that we have a fish on the hook. I’ll be right
    back.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
- en: 'In the case of PyCharm, the keys are toward the top of the window: *area 4*
    shown in *Figure 2**.28*. You can easily find it by locating the blue button with
    an arrow on it. I’ll show you exactly which button in *Figure 2**.29*. You’ll
    have to trust me on the color. It’s blue. This is the **Run** button. Click it:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
- en: "![Figure 2.29: Click the \uFEFFblue arrow to run the main script](img/B19644_Figure_2.29.jpg)"
  id: totrans-186
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.29: Click the blue arrow to run the main script'
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, let out a big old Texas YEEEE-HAW! Or, you can just do whatever passes
    for a hoot and holler wherever you’re from. You just ran your program. We’ve taken
    a big step toward mastering a new IDE. The IDE window changes, as seen in *Figure
    2**.30*:'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.30: When you run your program, you can see the result of your run
    in the console](img/B19644_Figure_2.30.jpg)'
  id: totrans-189
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.30: When you run your program, you can see the result of your run
    in the console'
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
- en: In addition to the run window itself, note that there are buttons on the tab
    that allow you to rerun the program or stop a program that is currently running.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
- en: 'In the next section, you’ll learn how to clone a code project from GitHub.
    Before we do that, let’s close the current project. Locate the **File** menu and
    click **File** | **Close Project**, as seen in *Figure 2**.31*:'
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.31: Close the project from the File menu](img/B19644_Figure_2.31.jpg)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.31: Close the project from the File menu'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
- en: Excellent! You’re ready for your next adventure! Let’s go get the sample source
    code for the book from GitHub.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
- en: Cloning this book’s code from GitHub
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'PyCharm has a robust set of features for working with VCSs such as Git, SVN,
    Mercurial, and Perforce. We’re going to work with Git and GitHub throughout this
    book because they have become the de facto standard in the industry. If you use
    one of the other supported VCSs, the process is mostly the same. In fact, the
    user experience is mostly the same except for differences in how some of the VCSs
    operate. For example, Git uses a four-step process to commit and push files:'
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
- en: Stage your local changes (`git add`).
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Commit your changes locally (`git commit`).
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Pull from GitHub or your central repository to make sure you have the latest
    changes and fix any conflicts (`git pull`).
  id: totrans-200
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Push your changes to the central repository (`git push`).
  id: totrans-201
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'In contrast, SVN only has two steps:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
- en: Pull the latest and fix any conflicts (`svn update`).
  id: totrans-203
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Commit your local changes to the central repository (`svn commit`).
  id: totrans-204
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: My point is, the different VCSs might have different workflows that change the
    user experience in PyCharm. For this book, we’ll only use Git.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
- en: 'Since you closed your project at the end of the last section, you should see
    a window similar to the one shown in *Figure 2**.32*:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.32: Locate the Get from VCS button](img/B19644_Figure_2.32.jpg)'
  id: totrans-207
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.32: Locate the Get from VCS button'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
- en: We’re going to accomplish two things in this section. First, we’re going to
    set up your GitHub account in PyCharm. This isn’t strictly a requirement should
    you not currently have an account, but sooner or later in your career, you’re
    going to need a GitHub account. You might as well rip off the proverbial band-aid.
    I won’t cover how to create a GitHub account here. You can find instructions for
    this at [https://github.com/signup](https://github.com/signup).
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
- en: 'Locate and click the **Get from VCS** button. You’ll see a screen like the
    one shown in *Figure 2**.33*:'
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.33: The Get from Version Control window in PyCharm](img/B19644_Figure_2.33.jpg)'
  id: totrans-211
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.33: The Get from Version Control window in PyCharm'
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
- en: Setting up your GitHub account
  id: totrans-213
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Note that on the right side of the window, you can see all your accounts for
    GitHub, GitHub Enterprise, and JetBrains Space. I’m going to go ahead and set
    up my GitHub account. Click the **GitHub** item on the left menu. You’ll see a
    screen like the one shown in *Figure 2**.34*:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.34: Logging in to GitHub is easy and only needs to be done one time](img/B19644_Figure_2.34.jpg)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.34: Logging in to GitHub is easy and only needs to be done one time'
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
- en: Locate and click the **Login via GitHub** button. Before you click it, I recommend
    you go ahead and log in to GitHub at [https://github.com/login](https://github.com/login)
    using your favorite browser. This process is more seamless if you’ve already logged
    in and cleared any **two-factor authentication** (**2FA**) hurdles.
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
- en: Once authorized, you can close your browser and return to PyCharm. After a few
    minutes, you’ll see all your GitHub repositories in the window. This makes working
    with your own repositories very easy. However, the repository we’re going to clone
    isn’t on your list, so we’ve got a little more work to do.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
- en: Cloning the book’s repository
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To clone a repository you don’t own, head back to the **Repository URL** option
    on the left menu, as shown in *Figure 2**.35*:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.35: To clone a repository you don’t own, click the Repository URL
    option on the left menu](img/B19644_Figure_2.35.jpg)'
  id: totrans-221
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.35: To clone a repository you don’t own, click the Repository URL
    option on the left menu'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
- en: Within the `home` folder under `PyCharmProjects`. I left mine at the default.
    Click the button labeled **Clone**.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
- en: 'Once cloned, you’re given the usual paranoid dialog box pervasive in software
    development tools today, as seen in *Figure 2**.36*:'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.36: Do you trust me?](img/B19644_Figure_2.36.jpg)'
  id: totrans-225
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2.36: Do you trust me?'
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
- en: I know we just met and all, but if you really want the book’s source code, you
    should click the **Trust Project** button. Once you do, you’re all set. You now
    have all the sample code shown in the book.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter was all about the preliminaries. We installed and configured your
    new instance of PyCharm on your computer. There are several ways you can install
    PyCharm. You can go the traditional route of just downloading the installer. My
    preferred way is to install the JetBrains Toolbox app and use that to install
    and manage PyCharm, along with any other JetBrains tools I might need or want.
    Using the Toolbox app allows us an easy way to update PyCharm or even perform
    a clean uninstall should the need arise.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
- en: We learned the differences between the three versions of PyCharm. The free Community
    edition is limited in the types of projects PyCharm supports with integrated tooling.
    When we created a new project, we were not afforded any project template options.
    Only “pure Python” projects are supported. This doesn’t mean we can’t create any
    kind of project; it simply means that the tedious part of setting up different
    kinds of projects isn’t handled for you by the IDE.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
- en: The Professional edition supports a broader set of tools, including a full set
    of project templates and expanded tools for web development and scientific workloads.
    While the Professional edition isn’t free, there are licensing options for individuals
    and a separate price for corporate developers. There also exist options to obtain
    a free professional license through an application process. Examples include Microsoft
    MVPs and other recognized professionals, open source developers, and university
    professors. There are often discount deals on JetBrains’ website for start-ups,
    educational institutions, and others. Unfortunately, book authors aren’t listed.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
- en: The third version of PyCharm is the Educational edition. This is a special edition
    that allows for the creation and playback of interactive lessons right in the
    IDE. If you teach Python using PyCharm, you probably don’t want this. You should
    rather use the Community or Professional edition and take advantage of JetBrains’
    offer of free software for teachers.
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
- en: Once we got PyCharm installed, we set out to configure the application. A number
    of important configuration options were highlighted. We can customize nearly every
    aspect of the way PyCharm works. Popular settings include setting the IDE’s color
    theme, font size, and code development settings. In our case, we set up our editor
    to use a font with ligatures called Fira Code, which ships with PyCharm. We also
    configured our **Code Style** settings to perform a hard wrap at 79 characters
    to keep us compliant with *PEP* *8* standards.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
- en: After we got everything set up, we kicked the proverbial tires by creating a
    simple pure Python project and running it using the IDE’s **Run** button.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we set up PyCharm with our GitHub account and cloned this book’s sample
    code repository. We’ve got a lot done in a short amount of time. At this point,
    you’re all set to develop software using PyCharm, and we’re only in [*Chapter
    2*](B19644_02.xhtml#_idTextAnchor028)!
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
- en: Stick with me as we dive deeper into working with Python virtual environments
    in the next chapter. Virtual environments are considered a best practice, and
    they provide a way to segregate the requirements of your projects in your local
    development environment. As you’ll see, PyCharm negates the need to remember a
    half-dozen or so commands as well as the installation of extra libraries to get
    your project up and running more quickly.
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  id: totrans-237
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What are the benefits of using the JetBrains Toolbox app to install and manage
    PyCharm installations?
  id: totrans-238
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the main differences between the Community edition and the Professional
    edition of PyCharm?
  id: totrans-239
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the main limitations of PyCharm Community?
  id: totrans-240
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If you are using the PyCharm Community edition, can you still develop projects
    using frameworks such as Flask that are seemingly only supported in the Professional
    edition?
  id: totrans-241
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What are the benefits of linking your GitHub account to PyCharm?
  id: totrans-242
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Have you gone to the book’s repository and given it a star yet? If you fork
    the repository, you’ll be notified if I ever change anything. I doubt that will
    happen since, like yours, my code is often perfect on the first try. Nope. Couldn’t
    keep a straight face. I tried.
  id: totrans-243
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Further reading
  id: totrans-244
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Be sure to check out the companion website for this book at [http://pycharm-book.com](http://pycharm-book.com).
  id: totrans-245
  prefs: []
  type: TYPE_NORMAL
- en: 'Instructions for setting up Puthon: [https://www.maddevskilz.com/pages/python-landing-page](https://www.maddevskilz.com/pages/python-landing-page)'
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
- en: '*PEP 8 – Style Guide for Python* *Code*: [https://peps.python.org/pep-0008/#maximum-line-length](https://peps.python.org/pep-0008/#maximum-line-length)'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
- en: 'Part 2: Improving Your Productivity'
  id: totrans-248
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This part covers beginner to advanced concepts and techniques that facilitate
    productivity while working on Python projects in PyCharm. Readers will be able
    to learn about the dynamic options for the management of projects, Python interpreters,
    and virtual environments as well as know how to carry on good programming practices
    such as version control, testing, debugging, and profiling and how PyCharm streamlines
    those processes.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
- en: 'This part has the following chapters:'
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B19644_03.xhtml#_idTextAnchor052), *Customizing Interpreters
    and Virtual Environments*'
  id: totrans-251
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B19644_04.xhtml#_idTextAnchor077), *Editing and Formatting with
    Ease in PyCharm*'
  id: totrans-252
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19644_05.xhtml#_idTextAnchor112), *Version Control with Git
    in PyCharm*'
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B19644_06.xhtml#_idTextAnchor145), *Seamless Testing, Debugging
    and Profiling*'
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
