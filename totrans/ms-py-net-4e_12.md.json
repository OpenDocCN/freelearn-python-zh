["```py\n(venv) $ curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n(venv) $ az --version\nazure-cli                         2.40.0\ncore                              2.40.0\ntelemetry                          1.0.8\nDependencies:\nmsal                            1.18.0b1\nazure-mgmt-resource             21.1.0b1 \n```", "```py\n(venv) $ pip install azure-identity \n(venv) $ pip install azure-mgmt-compute\n(venv) $ pip install azure-mgmt-storage\n(venv) $ pip install azure-mgmt-resource\n(venv) $ pip install azure-mgmt-network \n```", "```py\n(venv) $ az login --use-device-code\nTo sign in, use a web browser to open the page https://microsoft.com/devicelogin and enter the code <your code> to authenticate. \n```", "```py\n(venv) $ az ad sp create-for-rbac --sdk-auth > credentials.json\n(venv) $ cat credentials.json\n{\n  \"clientId\": \"<skip>\",\n  \"clientSecret\": \"<skip>\",\n  \"subscriptionId\": \"<skip>\",\n  \"tenantId\": \"<skip>\",\n  \"<skip>\"\n}\n(venv) echou@network-dev-2:~$ mv credentials.json ~/.azure/ \n```", "```py\n(venv) $ chmod 0600 ~/.azure/credentials.json\n(venv) $ export AZURE_AUTH_LOCATION=~/.azure/credentials.json \n```", "```py\n$ cat ~/.azure/credentials.json\n$ export AZURE_TENANT_ID=\"xxx\"\n$ export AZURE_CLIENT_ID=\"xxx\"\n$ export AZURE_CLIENT_SECRET=\"xxx\"\n$ export SUBSCRIPTION_ID=\"xxx\" \n```", "```py\n(venv) $ az ad sp create-for-rbac --role 'Owner' --scopes '/subscriptions/<subscription id>'\n{\n  \"appId\": \"<appId>\",\n  \"displayName\": \"azure-cli-2022-09-22-17-24-24\",\n  \"password\": \"<password>\",\n  \"tenant\": \"<tenant>\"\n}\n(venv) $ az login --service-principal --username \"<appId>\" --password \"<password>\" --tenant \"<tenant>\" \n```", "```py\n#!/usr/bin/env python3\nimport os \nimport azure.mgmt.network\nfrom azure.identity import ClientSecretCredential\ncredential = ClientSecretCredential(\n    tenant_id=os.environ.get(\"AZURE_TENANT_ID\"),\n    client_id=os.environ.get(\"AZURE_CLIENT_ID\"),\n    client_secret=os.environ.get(\"AZURE_CLIENT_SECRET\")\n)\nsubscription_id = os.environ.get(\"SUBSCRIPTION_ID\")\nnetwork_client = azure.mgmt.network.NetworkManagementClient(credential=credential, subscription_id=subscription_id)\nprint(\"Network Management Client API Version: \" + network_client.DEFAULT_API_VERSION) \n```", "```py\n(venv) $ python Chapter12_1_auth.py \nNetwork Management Client API Version: 2022-01-01 \n```", "```py\nName: WEST-US-2_VNet_1\nAddress space: 192.168.0.0/23\nSubscription: <pick your subscription>\nResource group: <click on new> -> 'Mastering-Python-Networking'\nLocation: West US 2\nSubnet name: WEST-US-2_VNet_1_Subnet_1\nAddress range: 192.168.1.0/24\nDDoS protection: Basic\nService endpoints: Disabled\nFirewall: Disabled \n```", "```py\nechou@myMPN-VM1:~$ sudo apt install net-tools\nechou@myMPN-VM1:~$ ifconfig eth0\neth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n        inet 192.168.1.4  netmask 255.255.255.0  broadcast 192.168.1.255\n        inet6 fe80::20d:3aff:fe06:68a0  prefixlen 64  scopeid 0x20<link>\n        ether 00:0d:3a:06:68:a0  txqueuelen 1000  (Ethernet)\n        RX packets 2344  bytes 2201526 (2.2 MB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 1290  bytes 304355 (304.3 KB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\nechou@myMPN-VM1:~$ ping -c 1 www.google.com\nPING www.google.com (142.251.211.228) 56(84) bytes of data.\n64 bytes from sea30s13-in-f4.1e100.net (142.251.211.228): icmp_seq=1 ttl=115 time=47.7 ms\n--- www.google.com ping statistics ---\n1 packets transmitted, 1 received, 0% packet loss, time 0ms\nrtt min/avg/max/mdev = 47.668/47.668/47.668/0.000 ms \n```", "```py\nechou@myMPN-VM1:~$ ssh echou@192.168.1.5\nechou@myMPN-VM2:~$ who\nechou    pts/0        2022-09-22 16:43 (192.168.1.4) \n```", "```py\nechou@myMPN-VM2:~$ sudo apt update\nHit:1 http://azure.archive.ubuntu.com/ubuntu jammy InRelease\nGet:2 http://azure.archive.ubuntu.com/ubuntu jammy-updates InRelease [114 kB]\nGet:3 http://azure.archive.ubuntu.com/ubuntu jammy-backports InRelease [99.8 kB]\nGet:4 http://azure.archive.ubuntu.com/ubuntu jammy-security InRelease [110 kB]\nGet:5 http://azure.archive.ubuntu.com/ubuntu jammy/universe amd64 Packages [14.1 MB]\nFetched 23.5 MB in 6s (4159 kB/s) \n```", "```py\n#!/usr/bin/env python3\n# Reference example: https://github.com/Azure-Samples/azure-samples-python-management/blob/main/samples/network/virtual_network/manage_subnet.py\n# \nimport os\nfrom azure.identity import ClientSecretCredential\nimport azure.mgmt.network\nfrom azure.identity import DefaultAzureCredential\nfrom azure.mgmt.network import NetworkManagementClient\nfrom azure.mgmt.resource import ResourceManagementClient\ncredential = ClientSecretCredential(\n    tenant_id=os.environ.get(\"AZURE_TENANT_ID\"),\n    client_id=os.environ.get(\"AZURE_CLIENT_ID\"),\n    client_secret=os.environ.get(\"AZURE_CLIENT_SECRET\")\n)\nsubscription_id = os.environ.get(\"SUBSCRIPTION_ID\")\nGROUP_NAME = \"Mastering-Python-Networking\"\nVIRTUAL_NETWORK_NAME = \"WEST-US-2_VNet_1\"\nSUBNET = \"WEST-US-2_VNet_1_Subnet_2\"\nnetwork_client = azure.mgmt.network.NetworkManagementClient(\n    credential=credential, subscription_id=subscription_id)\n# Get subnet\nsubnet = network_client.subnets.get(\n    GROUP_NAME,\n    VIRTUAL_NETWORK_NAME,\n    SUBNET\n)\nprint(\"Get subnet:\\n{}\".format(subnet))\nsubnet = network_client.subnets.begin_create_or_update(\n    GROUP_NAME,\n    VIRTUAL_NETWORK_NAME,\n    SUBNET,\n    {\n        \"address_prefix\": \"192.168.0.128/25\"\n    }\n).result()\nprint(\"Create subnet:\\n{}\".format(subnet)) \n```", "```py\n(venv) $ python3 Chapter12_2_subnet.py\n{'additional_properties': {'type': 'Microsoft.Network/virtualNetworks/subnets'}, 'id': '/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/WEST-US-2_VNet_1/subnets/WEST-US-2_VNet_1_Subnet_2', 'address_prefix': '192.168.0.128/25', 'address_prefixes': None, 'network_security_group': None, 'route_table': None, 'service_endpoints': None, 'service_endpoint_policies': None, 'interface_endpoints': None, 'ip_configurations': None, 'ip_configuration_profiles': None, 'resource_navigation_links': None, 'service_association_links': None, 'delegations': [], 'purpose': None, 'provisioning_state': 'Succeeded', 'name': 'WEST-US-2_VNet_1_Subnet_2', 'etag': 'W/\"<skip>\"'} \n```", "```py\n<skip>\ndef create_vnet(network_client):\n    vnet_params = {\n        'location': LOCATION,\n        'address_space': {\n            'address_prefixes': ['10.0.0.0/16']\n        }\n    }\n    creation_result = network_client.virtual_networks.create_or_update(\n        GROUP_NAME,\n        'EAST-US_VNet_1',\n        vnet_params\n    )\n    return creation_result.result()\n<skip>\ndef create_subnet(network_client):\n    subnet_params = {\n        'address_prefix': '10.0.1.0/24'\n    }\n    creation_result = network_client.subnets.create_or_update(\n        GROUP_NAME,\n        'EAST-US_VNet_1',\n        'EAST-US_VNet_1_Subnet_1',\n        subnet_params\n    )\n    return creation_result.result() \n```", "```py\n(venv) $ az network vnet list\n<skip>\n\"id\": \"/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/EAST-US_VNet_1\",\n    \"location\": \"eastus\",\n    \"name\": \"EAST-US_VNet_1\"\n<skip>\n\"id\": \"/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/WEST-US-2_VNet_1\",\n    \"location\": \"westus2\",\n    \"name\": \"WEST-US-2_VNet_1\"\n<skip> \n```", "```py\n(venv) $ az network vnet peering list -g \"Mastering-Python-Networking\" --vnet-name WEST-US-2_VNet_1\n[] \n```", "```py\n(venv) $ az network vnet peering create -g \"Mastering-Python-Networking\" -n WestUSToEastUS --vnet-name WEST-US-2_VNet_1 --remote-vnet \"/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/EAST-US_VNet_1\"\n(venv) $ az network vnet peering create -g \"Mastering-Python-Networking\" -n EastUSToWestUS --vnet-name EAST-US_VNet_1 --remote-vnet \"/subscriptions/b7257c5b-97c1-45ea-86a7-872ce8495a2a/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/WEST-US-2_VNet_1\" \n```", "```py\n(venv) $ az network vnet peering list -g \"Mastering-Python-Networking\" --vnet-name \"WEST-US-2_VNet_1\"\n[\n  {\n    \"allowForwardedTraffic\": false,\n    \"allowGatewayTransit\": false,\n    \"allowVirtualNetworkAccess\": false,\n    \"etag\": \"W/\\\"<skip>\\\"\",\n    \"id\": \"/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/virtualNetworks/WEST-US-2_VNet_1/virtualNetworkPeerings/WestUSToEastUS\",\n    \"name\": \"WestUSToEastUS\",\n    \"peeringState\": \"Connected\",\n    \"provisioningState\": \"Succeeded\",\n    \"remoteAddressSpace\": {\n      \"addressPrefixes\": [\n        \"10.0.0.0/16\"\n      ]\n    },\n<skip> \n```", "```py\n(venv) $ az vm show --name myMPN-VM1 --resource-group 'Mastering-Python-Networking'\n<skip>\n\"networkProfile\": {\n    \"networkInterfaces\": [\n      {\n        \"id\": \"/subscriptions/<skip>/resourceGroups/Mastering-Python-Networking/providers/Microsoft.Network/networkInterfaces/mympn-vm1655\",\n        \"primary\": null,\n        \"resourceGroup\": \"Mastering-Python-Networking\"\n      }\n    ]\n  }\n<skip>\n(venv) $ az network nic show-effective-route-table --name mympn-vm1655 --resource-group \"Mastering-Python-Networking\"\n{\n  \"nextLink\": null,\n  \"value\": [\n    {\n      \"addressPrefix\": [\n        \"192.168.0.0/23\"\n      ],\n<skip> \n```", "```py\n(venv) $ az network route-table create --name TempRouteTable --resource \"Mastering-Python-Networking\"\n(venv) $ az network route-table route create -g \"Mastering-Python-Networking\" --route-table-name TempRouteTable -n TempRoute  --next-hop-type VirtualAppliance --address-prefix 172.31.0.0/16 --next-hop-ip-address 10.0.100.4\n(venv) $ az network vnet subnet update -g \"Mastering-Python-Networking\" -n WEST-US-2_Vnet_1_Subnet_1 --vnet-name WEST-US-2_VNet_1 --route-table TempRouteTable \n```", "```py\n(venv) $ az network nsg create -g \"Mastering-Python-Networking\" -n TestNSG\n(venv) $ az network nsg rule create -g \"Mastering-Python-Networking\" --nsg-name TestNSG -n Allow_SSH --priority 150 --direction Inbound --source-address-prefixes Internet --destination-port-ranges 22 --access Allow --protocol Tcp --description \"Permit SSH Inbound\"\n(venv) $ az network nsg rule create -g \"Mastering-Python-Networking\" --nsg-name TestNSG -n Allow_SSL --priority 160 --direction Inbound --source-address-prefixes Internet --destination-port-ranges 443 --access Allow --protocol Tcp --description \"Permit SSL Inbound\" \n```", "```py\n(venv) $ az network vnet subnet update -g \"Mastering-Python-Networking\" -n WEST-US-2_VNet_1_Subnet_1 --vnet-name WEST-US-2_VNet_1 --network-security-group TestNSG \n```"]