- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Blender is no doubt the most powerful, and versatile, open source 3D package
    available. Its power comes close to, or even surpasses, many professional packages.
    Blender's built-in Python interpreter plays an important role in tapping this
    power and allows artists to extend the functionality even further. Yet, mastering
    a scripting language and getting familiar with the many possibilities that Blender
    offers through its Python API can be a daunting venture.
  prefs: []
  type: TYPE_NORMAL
- en: This book will show how to get the most out of Blender by showing practical
    solutions to many realistic problems. Each example is a complete working script,
    which is explained step-by-step in a very detailed manner.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Extending Blender with Python"), *Extending
    Blender with Python*, gives you an overview of what can and cannot be accomplished
    with Python in Blender. It teaches you how to install a full Python distribution
    and how to use the built-in editor. You also learn how to write and run a simple
    Python script and how to integrate it in Blender''s menu system.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Creating and Editing Objects"), *Creating
    and Editing* *Objects*, introduces objects and meshes and you will see how to
    manipulate them programmatically. Specifically, you learn how to create configurable
    mesh objects, design a graphical user interface, and how to make your script store
    user choices for later reuse. You also learn how to select vertices and faces
    in a mesh, parent an object to another, and how to create groups. Finally, this
    chapter shows how to run Blender from the command line, render in the background,
    and how to process command-line parameters.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Vertex Groups and Materials"), *Vertex Groups
    and Materials*, tells you about the many uses of vertex groups and how versatile
    they can be. You get to know how to define vertex groups and how to assign vertices
    to a vertex group. You will also learn how you can use those vertex groups for
    modifiers and armatures. You also look into the application of different materials
    to different faces and how to assign vertex colors to vertices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Pydrivers and Constraints"), *Pydrivers and
    Constraints*, shows how you can associate built-in constraints with Blender objects
    and how to define complex relationships between animated properties by using the
    so-called **pydrivers**. You also define new complex constraints that may be used
    just like the built-in constraints. Specifically, you see how to drive one **IPO**
    from another by a Python expression, how to work around some limitations inherent
    in **pydrivers**, and how to restrict the motion of objects and bones by adding
    constraints. This chapter teaches you how to write a constraint in Python that
    will snap an object to the closest vertex on another object.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Acting on Frame Changes"), *Acting on Frame
    Changes*, focuses on writing scripts that may be used to act on certain events.
    You can learn what script links and space handlers are and how they can be used
    to perform activities on each frame change in an animation. You also see how to
    associate additional information with an object, how to use script links to make
    an object appear or disappear by changing its layout or changing its transparency,
    and how to implement a scheme to associate a different mesh with an object on
    each frame. Finally, you can look into ways to augment the functionality of the
    3D view.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Shape Keys, IPOs, and Poses"), *Shape Keys,
    IPOs, and Poses*, discovers that there is more to IPOs that can prove useful in
    animated scenes. Although IPOs were introduced in [Chapter 4](ch04.html "Chapter 4. Pydrivers
    and Constraints"), here you learn how to define IPOs on all kinds of objects,
    associate shape keys with a mesh, and how to define IPOs for those shape keys.
    You also look into posing armatures and combining poses into actions.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Creating Custom Shaders and Textures with
    Pynodes"), *Creating Custom Shaders and Textures with Pynodes*, introduces Pynodes
    and you get to know how they enable you to define completely new textures and
    materials. You learn how to write Pynodes that create simple color patterns, Pynodes
    that produce patterns with normals, and you also learn how to animate Pynodes.
    This chapter also explains about Pynodes that produce height and slope-dependent
    materials and even create shaders that react to the angle of incident light.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Rendering and Image Manipulation"), *Rendering*
    *and Image Manipulation*, turns to the rendering process as a whole. You can automate
    this rendering process, combine the resulting images in various ways, and even
    turn Blender into a specialized web server. Specifically, you learn how to automate
    the rendering process, create multiple views for product presentations, and create
    billboards from complex objects. You get to know about ways to enhance Blender
    with some external libraries to manipulate images, including render results.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Expanding your Toolset"), *Expanding your
    Toolset*, is less about rendering and more about making life easier for the day-to-day
    use of Blender by extending its functionality. In this chapter, you learn how
    to list and archive assets such as image maps, publish a rendered image automatically
    with FTP, extend the functionality of the built-in editor with regular expression
    searches, speed up computations by using Psyco—a just-in-time compiler, and add
    version control to your scripts with Subversion.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix A](apa.html "Appendix A. Links and Resources"), *Links and Resources*,
    gives you a list of most resources used in this book along with some generally
    useful information.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix B](apb.html "Appendix B. Common Pitfalls"), *Common Pitfalls*, highlights
    some of the common questions that pop up more often than others as do some mistakes.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Appendix C](apc.html "Appendix C. Future Developments"), *Future Developments*,
    is the final appendix that tries to show what the future holds in store and how
    this may affect you as both Blender and Python are constantly developed further.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: All examples in the book use Blender 2.49 (available at [www.blender.org](http://www.blender.org))
    and its built-in Python 2.6.x language. Many examples assume that you have a full
    Python ([www.python.org](http://www.python.org)) distribution. In [Chapter 1](ch01.html
    "Chapter 1. Extending Blender with Python"), *Extending Blender with Python*,
    you are shown how to install a full distribution—if you don't have one already.
    Blender and Python are platform independent and all examples should run equally
    well on Windows, Linux, and Mac. Some additional modules are used as well and
    suitable download instructions are provided where appropriate. All examples can
    be downloaded from the publisher's website ([http://www.packtpub.com](http://www.packtpub.com)).
  prefs: []
  type: TYPE_NORMAL
- en: Who is this book for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is for users comfortable with Blender as a modeling and rendering
    tool and who want to expand their skills to include Blender scripting to automate
    laborious tasks and achieve results otherwise impossible. Blender experience is
    essential as is some experience in Python programming.
  prefs: []
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find a number of styles of text that distinguish between
    different kinds of information. Here are some examples of these styles, and an
    explanation of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text are shown as follows: "The Python file with the mesh building
    blocks is called `mymesh.py` so the first part of our code contains the following
    `import` statement."'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen in menus or dialog boxes, for example, appear in the text like this:
    "Then we can apply this vertex group to the density parameter in the **extra**
    panel of the particles context to control the emission."'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a book that you need and would like to see us publish, please send
    us a note in the **SUGGEST A TITLE** form on [www.packtpub.com](http://www.packtpub.com)
    or e-mail `<[suggest@packtpub.com](mailto:suggest@packtpub.com)>`.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book on, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code for the book**'
  prefs: []
  type: TYPE_NORMAL
- en: Visit [https://www.packtpub.com//sites/default/files/downloads/0400_Code.zip](https://www.packtpub.com//sites/default/files/downloads/0400_Code.zip)
    to directly download the example code.
  prefs: []
  type: TYPE_NORMAL
- en: The downloadable files contain instructions on how to use them.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/support](http://www.packtpub.com/support),
    selecting your book, clicking on the **let us know** link, and entering the details
    of your errata. Once your errata are verified, your submission will be accepted
    and the errata will be uploaded on our website, or added to any list of existing
    errata, under the Errata section of that title. Any existing errata can be viewed
    by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
